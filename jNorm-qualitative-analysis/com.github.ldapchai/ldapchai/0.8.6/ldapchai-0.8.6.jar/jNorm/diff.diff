diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.cr.AbstractResponseSet.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.cr.AbstractResponseSet.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.cr.AbstractResponseSet.jimple	2024-10-18 17:46:03.094368958 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.cr.AbstractResponseSet.jimple	2024-10-18 17:46:13.026210582 +0000
@@ -87,7 +87,7 @@
 virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChallengeSet: (");
 label1:
 v7 = virtualinvoke v0.<com.novell.ldapchai.cr.AbstractResponseSet: com.novell.ldapchai.cr.ChallengeSet getChallengeSet()>();
-v8 = interfaceinvoke v7.<com.novell.ldapchai.cr.ChallengeSet: java.lang.String toString()>();
+v8 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
 virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
 label2:
 goto label4;
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.cr.ChaiChallengeSet.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.cr.ChaiChallengeSet.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.cr.ChaiChallengeSet.jimple	2024-10-18 17:46:03.094368958 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.cr.ChaiChallengeSet.jimple	2024-10-18 17:46:13.026210582 +0000
@@ -119,7 +119,7 @@
 if v11 == 0 goto label4;
 v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
 virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
-v13 = interfaceinvoke v12.<com.novell.ldapchai.cr.Challenge: java.lang.String toString()>();
+v13 = virtualinvoke v12.<java.lang.Object: java.lang.String toString()>();
 virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v13);
 virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
 goto label3;
Only in /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/: com.novell.ldapchai.cr.HashSaltAnswer$1.jimple
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.cr.HashSaltAnswer.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.cr.HashSaltAnswer.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.cr.HashSaltAnswer.jimple	2024-10-18 17:46:03.102368831 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.cr.HashSaltAnswer.jimple	2024-10-18 17:46:13.034210454 +0000
@@ -175,13 +175,14 @@
 }
 static java.lang.String doHash(java.lang.String, int, com.novell.ldapchai.cr.Answer$FormatType, com.novell.ldapchai.cr.HashSaltAnswer$VERSION) throws java.lang.IllegalStateException
 {
-byte[] v13, v15;
-java.lang.IllegalStateException v21, v8;
+byte[] v13, v17;
+java.lang.IllegalStateException v23, v8;
 java.security.MessageDigest v6;
-com.novell.ldapchai.util.internal.StringHelper$Base64Options[] v16, v19;
+com.novell.ldapchai.util.internal.StringHelper$Base64Options[] v18, v21;
 java.nio.charset.Charset v12;
-int v1, v14, v18;
-java.lang.String v0, v10, v11, v17, v20, v5, v9;
+int[] v14;
+int v1, v15, v16, v20;
+java.lang.String v0, v10, v11, v19, v22, v5, v9;
 com.novell.ldapchai.cr.Answer$FormatType v2;
 com.novell.ldapchai.cr.HashSaltAnswer$VERSION v3;
 java.security.NoSuchAlgorithmException v7;
@@ -207,33 +208,35 @@
 label4:
 v12 = <com.novell.ldapchai.cr.ChaiCrFactory: java.nio.charset.Charset DEFAULT_CHARSET>;
 v13 = virtualinvoke v0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v12);
-v14 = virtualinvoke v3.<com.novell.ldapchai.cr.HashSaltAnswer$VERSION: int ordinal()>();
-lookupswitch(v14)
+v14 = <com.novell.ldapchai.cr.HashSaltAnswer$1: int[] $SwitchMap$com$novell$ldapchai$cr$HashSaltAnswer$VERSION>;
+v15 = virtualinvoke v3.<com.novell.ldapchai.cr.HashSaltAnswer$VERSION: int ordinal()>();
+v16 = v14[v15];
+lookupswitch(v16)
 {
-case 0: goto label5;
-case 1: goto label6;
+case 1: goto label5;
+case 2: goto label6;
 default: goto label9;
 };
 label5:
-v15 = virtualinvoke v6.<java.security.MessageDigest: byte[] digest(byte[])>(v13);
-v16 = newarray (com.novell.ldapchai.util.internal.StringHelper$Base64Options)[0];
-v17 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.lang.String base64Encode(byte[],com.novell.ldapchai.util.internal.StringHelper$Base64Options[])>(v15, v16);
-return v17;
+v17 = virtualinvoke v6.<java.security.MessageDigest: byte[] digest(byte[])>(v13);
+v18 = newarray (com.novell.ldapchai.util.internal.StringHelper$Base64Options)[0];
+v19 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.lang.String base64Encode(byte[],com.novell.ldapchai.util.internal.StringHelper$Base64Options[])>(v17, v18);
+return v19;
 label6:
-v18 = 0;
+v20 = 0;
 label7:
-if v18 >= v1 goto label8;
+if v20 >= v1 goto label8;
 v13 = virtualinvoke v6.<java.security.MessageDigest: byte[] digest(byte[])>(v13);
-v18 = v18 + 1;
+v20 = v20 + 1;
 goto label7;
 label8:
-v19 = newarray (com.novell.ldapchai.util.internal.StringHelper$Base64Options)[0];
-v20 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.lang.String base64Encode(byte[],com.novell.ldapchai.util.internal.StringHelper$Base64Options[])>(v13, v19);
-return v20;
+v21 = newarray (com.novell.ldapchai.util.internal.StringHelper$Base64Options)[0];
+v22 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.lang.String base64Encode(byte[],com.novell.ldapchai.util.internal.StringHelper$Base64Options[])>(v13, v21);
+return v22;
 label9:
-v21 = new java.lang.IllegalStateException;
-specialinvoke v21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected version enum in hash method");
-throw v21;
+v23 = new java.lang.IllegalStateException;
+specialinvoke v23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected version enum in hash method");
+throw v23;
 catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
 }
 private static java.lang.String generateSalt(int)
Only in /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/: com.novell.ldapchai.impl.AbstractChaiEntry$1.jimple
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.impl.AbstractChaiEntry.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.impl.AbstractChaiEntry.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.impl.AbstractChaiEntry.jimple	2024-10-18 17:46:03.118368575 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.impl.AbstractChaiEntry.jimple	2024-10-18 17:46:13.046210263 +0000
@@ -58,7 +58,7 @@
 if v3 == null goto label3;
 v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
 v5 = v1.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
-v6 = interfaceinvoke v4.<com.novell.ldapchai.provider.ChaiProvider: boolean equals(java.lang.Object)>(v5);
+v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
 if v6 != 0 goto label4;
 goto label7;
 label3:
@@ -102,7 +102,7 @@
 v5 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
 if v5 == null goto label3;
 v6 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
-v7 = interfaceinvoke v6.<com.novell.ldapchai.provider.ChaiProvider: int hashCode()>();
+v7 = virtualinvoke v6.<java.lang.Object: int hashCode()>();
 goto label4;
 label3:
 v7 = 0;
@@ -425,21 +425,22 @@
 public java.util.List readNetAddressAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
 {
 byte[] v10;
-java.lang.IllegalStateException v43;
-java.net.InetAddress v39;
-byte v20, v25, v30, v35;
-java.lang.Exception v40;
+java.lang.IllegalStateException v45;
+java.net.InetAddress v41;
+byte v22, v27, v32, v37;
+int[] v17;
+java.lang.Exception v42;
 com.novell.ldapchai.provider.ChaiProvider v4;
 byte[][] v2;
-java.lang.StringBuilder v18, v23, v28, v33;
-com.novell.ldapchai.util.internal.ChaiLogger v41;
+java.lang.StringBuilder v20, v25, v30, v35;
+com.novell.ldapchai.util.internal.ChaiLogger v43;
 com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType v16;
 com.novell.ldapchai.impl.AbstractChaiEntry v0;
-java.util.function.Supplier v42;
+java.util.function.Supplier v44;
 java.util.ArrayList v3;
 java.nio.charset.Charset v12;
-int v13, v15, v17, v19, v21, v22, v24, v26, v27, v29, v31, v32, v34, v36, v37, v8, v9;
-java.lang.String v1, v11, v14, v38, v7;
+int v13, v15, v18, v19, v21, v23, v24, v26, v28, v29, v31, v33, v34, v36, v38, v39, v8, v9;
+java.lang.String v1, v11, v14, v40, v7;
 com.novell.ldapchai.provider.ChaiConfiguration v5;
 com.novell.ldapchai.provider.ChaiSetting v6;
 v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
@@ -463,54 +464,56 @@
 v14 = virtualinvoke v11.<java.lang.String: java.lang.String substring(int,int)>(0, v13);
 v15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v14);
 v16 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType: com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType forIdentifier(int)>(v15);
-v17 = virtualinvoke v16.<com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType: int ordinal()>();
-lookupswitch(v17)
+v17 = <com.novell.ldapchai.impl.AbstractChaiEntry$1: int[] $SwitchMap$com$novell$ldapchai$impl$AbstractChaiEntry$NetworkAddressType>;
+v18 = virtualinvoke v16.<com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType: int ordinal()>();
+v19 = v17[v18];
+lookupswitch(v19)
 {
-case 0: goto label2;
+case 1: goto label2;
 default: goto label6;
 };
 label2:
-v18 = new java.lang.StringBuilder;
-specialinvoke v18.<java.lang.StringBuilder: void <init>()>();
+v20 = new java.lang.StringBuilder;
+specialinvoke v20.<java.lang.StringBuilder: void <init>()>();
 label3:
-v19 = v13 + 3;
-v20 = v10[v19];
-v21 = v20 % 256;
-v22 = 256 + v21;
-v23 = virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v22);
-virtualinvoke v23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
-v24 = v13 + 4;
-v25 = v10[v24];
-v26 = v25 % 256;
-v27 = 256 + v26;
-v28 = virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v27);
-virtualinvoke v28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
-v29 = v13 + 5;
-v30 = v10[v29];
-v31 = v30 % 256;
-v32 = 256 + v31;
-v33 = virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v32);
-virtualinvoke v33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
-v34 = v13 + 6;
-v35 = v10[v34];
-v36 = v35 % 256;
-v37 = 256 + v36;
-virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v37);
-v38 = virtualinvoke v18.<java.lang.StringBuilder: java.lang.String toString()>();
-v39 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v38);
-interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v39);
+v21 = v13 + 3;
+v22 = v10[v21];
+v23 = v22 % 256;
+v24 = 256 + v23;
+v25 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v24);
+virtualinvoke v25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
+v26 = v13 + 4;
+v27 = v10[v26];
+v28 = v27 % 256;
+v29 = 256 + v28;
+v30 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v29);
+virtualinvoke v30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
+v31 = v13 + 5;
+v32 = v10[v31];
+v33 = v32 % 256;
+v34 = 256 + v33;
+v35 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v34);
+virtualinvoke v35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
+v36 = v13 + 6;
+v37 = v10[v36];
+v38 = v37 % 256;
+v39 = 256 + v38;
+virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v39);
+v40 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.String toString()>();
+v41 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v40);
+interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v41);
 label4:
 goto label7;
 label5:
-v40 := @caughtexception;
-v41 = <com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
-v42 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry$lambda_readNetAddressAttribute_1__39: java.util.function.Supplier bootstrap$(java.lang.String,java.lang.Exception)>(v11, v40);
-virtualinvoke v41.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v42);
+v42 := @caughtexception;
+v43 = <com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
+v44 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry$lambda_readNetAddressAttribute_1__39: java.util.function.Supplier bootstrap$(java.lang.String,java.lang.Exception)>(v11, v42);
+virtualinvoke v43.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v44);
 goto label7;
 label6:
-v43 = new java.lang.IllegalStateException;
-specialinvoke v43.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unable to parse non-ipv4 address");
-throw v43;
+v45 = new java.lang.IllegalStateException;
+specialinvoke v45.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unable to parse non-ipv4 address");
+throw v45;
 label7:
 v9 = v9 + 1;
 goto label1;
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.AbstractWrapper.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.AbstractWrapper.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.AbstractWrapper.jimple	2024-10-18 17:46:03.210367109 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.AbstractWrapper.jimple	2024-10-18 17:46:13.162208413 +0000
@@ -42,7 +42,7 @@
 specialinvoke v10.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
 throw v10;
 label1:
-v11 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v11 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
 v12 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v11);
 if v12 == 0 goto label2;
 v13 = virtualinvoke v0.<java.lang.Class: boolean isInstance(java.lang.Object)>(v2);
@@ -58,9 +58,9 @@
 v18 = newarray (java.lang.Object)[1];
 v18[0] = v2;
 v19 = virtualinvoke v17.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v18);
-v20 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v20 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
 v21 = virtualinvoke v20.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
-v22 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v22 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
 v23 = virtualinvoke v22.<java.lang.Class: java.lang.Class[] getInterfaces()>();
 v24 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(v21, v23, v19);
 label3:
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ApacheLdapProviderImpl$1.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ApacheLdapProviderImpl$1.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ApacheLdapProviderImpl$1.jimple	2024-10-18 17:46:03.210367109 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ApacheLdapProviderImpl$1.jimple	2024-10-18 17:46:13.162208413 +0000
@@ -10,8 +10,8 @@
 v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl$1;
 v1 := @parameter0: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
 v2 := @parameter1: javax.naming.ldap.ExtendedRequest;
-v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$1: javax.naming.ldap.ExtendedRequest val$request> = v2;
 v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$1: com.novell.ldapchai.provider.ApacheLdapProviderImpl this$0> = v1;
+v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$1: javax.naming.ldap.ExtendedRequest val$request> = v2;
 specialinvoke v0.<java.lang.Object: void <init>()>();
 return;
 }
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ApacheLdapProviderImpl$2.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ApacheLdapProviderImpl$2.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ApacheLdapProviderImpl$2.jimple	2024-10-18 17:46:03.214367045 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ApacheLdapProviderImpl$2.jimple	2024-10-18 17:46:13.166208349 +0000
@@ -10,8 +10,8 @@
 v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl$2;
 v1 := @parameter0: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
 v2 := @parameter1: org.apache.directory.api.ldap.model.message.ExtendedResponse;
-v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$2: org.apache.directory.api.ldap.model.message.ExtendedResponse val$apacheResponse> = v2;
 v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$2: com.novell.ldapchai.provider.ApacheLdapProviderImpl this$0> = v1;
+v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$2: org.apache.directory.api.ldap.model.message.ExtendedResponse val$apacheResponse> = v2;
 specialinvoke v0.<java.lang.Object: void <init>()>();
 return;
 }
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.CachingWrapper.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.CachingWrapper.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.CachingWrapper.jimple	2024-10-18 17:46:03.214367045 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.CachingWrapper.jimple	2024-10-18 17:46:13.166208349 +0000
@@ -16,7 +16,7 @@
 boolean v2, v3;
 com.novell.ldapchai.util.internal.ChaiLogger v4;
 v0 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
-v1 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v2 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v1);
 if v2 == 0 goto label1;
 v3 = v0 instanceof com.novell.ldapchai.provider.CachingWrapper;
@@ -26,9 +26,9 @@
 virtualinvoke v4.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v5);
 return v0;
 label1:
-v6 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v6 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v7 = virtualinvoke v6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
-v8 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v9 = virtualinvoke v8.<java.lang.Class: java.lang.Class[] getInterfaces()>();
 v10 = new com.novell.ldapchai.provider.CachingWrapper;
 specialinvoke v10.<com.novell.ldapchai.provider.CachingWrapper: void <init>(com.novell.ldapchai.provider.ChaiProvider)>(v0);
@@ -52,7 +52,7 @@
 v0 := @this: com.novell.ldapchai.provider.CachingWrapper;
 v1 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
 specialinvoke v0.<com.novell.ldapchai.provider.AbstractWrapper: void <init>()>();
-v2 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProvider: java.lang.Class getClass()>();
+v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
 v3 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v2);
 if v3 == 0 goto label1;
 v4 = v1 instanceof com.novell.ldapchai.provider.CachingWrapper;
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.FailOverRotationMachine.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.FailOverRotationMachine.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.FailOverRotationMachine.jimple	2024-10-18 17:46:03.222366917 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.FailOverRotationMachine.jimple	2024-10-18 17:46:13.178208158 +0000
@@ -291,7 +291,7 @@
 v8 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v7);
 v9 = virtualinvoke v8.<com.novell.ldapchai.provider.FailOverRotationMachine$ProviderSlot: com.novell.ldapchai.provider.ChaiProviderImplementor getProvider()>();
 if v9 == null goto label2;
-v10 = interfaceinvoke v9.<com.novell.ldapchai.provider.ChaiProvider: boolean equals(java.lang.Object)>(v1);
+v10 = virtualinvoke v9.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
 if v10 == 0 goto label2;
 specialinvoke v0.<com.novell.ldapchai.provider.FailOverRotationMachine: void currentServerIsBroken(java.lang.Exception)>(v2);
 label2:
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ReadOnlyWrapper.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ReadOnlyWrapper.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ReadOnlyWrapper.jimple	2024-10-18 17:46:03.222366917 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ReadOnlyWrapper.jimple	2024-10-18 17:46:13.174208221 +0000
@@ -14,7 +14,7 @@
 boolean v2, v3;
 com.novell.ldapchai.util.internal.ChaiLogger v4;
 v0 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
-v1 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v2 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v1);
 if v2 == 0 goto label1;
 v3 = v0 instanceof com.novell.ldapchai.provider.ReadOnlyWrapper;
@@ -24,9 +24,9 @@
 virtualinvoke v4.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v5);
 return v0;
 label1:
-v6 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v6 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v7 = virtualinvoke v6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
-v8 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v9 = virtualinvoke v8.<java.lang.Class: java.lang.Class[] getInterfaces()>();
 v10 = new com.novell.ldapchai.provider.ReadOnlyWrapper;
 specialinvoke v10.<com.novell.ldapchai.provider.ReadOnlyWrapper: void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v0);
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.StatisticsWrapper.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.StatisticsWrapper.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.StatisticsWrapper.jimple	2024-10-18 17:46:03.206367173 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.StatisticsWrapper.jimple	2024-10-18 17:46:13.158208477 +0000
@@ -15,7 +15,7 @@
 boolean v2, v3;
 com.novell.ldapchai.util.internal.ChaiLogger v4;
 v0 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
-v1 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v2 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v1);
 if v2 == 0 goto label1;
 v3 = v0 instanceof com.novell.ldapchai.provider.StatisticsWrapper;
@@ -25,9 +25,9 @@
 virtualinvoke v4.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v5);
 return v0;
 label1:
-v6 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v6 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v7 = virtualinvoke v6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
-v8 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v9 = virtualinvoke v8.<java.lang.Class: java.lang.Class[] getInterfaces()>();
 v10 = new com.novell.ldapchai.provider.StatisticsWrapper;
 specialinvoke v10.<com.novell.ldapchai.provider.StatisticsWrapper: void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v0);
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ThreadSafeWrapper.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ThreadSafeWrapper.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.ThreadSafeWrapper.jimple	2024-10-18 17:46:03.218366981 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.ThreadSafeWrapper.jimple	2024-10-18 17:46:13.174208221 +0000
@@ -30,7 +30,7 @@
 specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("attempt to obtain ThreadSafeWrapper wrapper when thread safe is not enabled in chai config");
 throw v7;
 label1:
-v8 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v9 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v8);
 if v9 == 0 goto label2;
 v10 = v0 instanceof com.novell.ldapchai.provider.ThreadSafeWrapper;
@@ -40,9 +40,9 @@
 virtualinvoke v11.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v12);
 return v0;
 label2:
-v13 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v13 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v14 = virtualinvoke v13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
-v15 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v15 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v16 = virtualinvoke v15.<java.lang.Class: java.lang.Class[] getInterfaces()>();
 v17 = new com.novell.ldapchai.provider.ThreadSafeWrapper;
 specialinvoke v17.<com.novell.ldapchai.provider.ThreadSafeWrapper: void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v0);
diff -u /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.WireTraceWrapper.jimple /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.WireTraceWrapper.jimple
--- /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/reference/com.novell.ldapchai.provider.WireTraceWrapper.jimple	2024-10-18 17:46:03.218366981 +0000
+++ /home/aman/reproducible-central/results/com.github.ldapchai/ldapchai/0.8.6/ldapchai-0.8.6.jar/jNorm/rebuild/com.novell.ldapchai.provider.WireTraceWrapper.jimple	2024-10-18 17:46:13.174208221 +0000
@@ -30,7 +30,7 @@
 specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("attempt to obtain WireTrace wrapper when watchdog is not enabled in chai config");
 throw v7;
 label1:
-v8 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v9 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v8);
 if v9 == 0 goto label2;
 v10 = v0 instanceof com.novell.ldapchai.provider.WireTraceWrapper;
@@ -40,9 +40,9 @@
 virtualinvoke v11.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v12);
 return v0;
 label2:
-v13 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v13 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v14 = virtualinvoke v13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
-v15 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.Class getClass()>();
+v15 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
 v16 = virtualinvoke v15.<java.lang.Class: java.lang.Class[] getInterfaces()>();
 v17 = new com.novell.ldapchai.provider.WireTraceWrapper;
 specialinvoke v17.<com.novell.ldapchai.provider.WireTraceWrapper: void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v0);
