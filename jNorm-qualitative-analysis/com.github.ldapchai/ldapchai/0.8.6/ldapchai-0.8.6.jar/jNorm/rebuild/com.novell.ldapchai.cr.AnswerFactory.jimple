public class com.novell.ldapchai.cr.AnswerFactory extends java.lang.Object
{
private void <init>()
{
com.novell.ldapchai.cr.AnswerFactory v0;
v0 := @this: com.novell.ldapchai.cr.AnswerFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.novell.ldapchai.cr.Answer newAnswer(com.novell.ldapchai.cr.AnswerConfiguration, java.lang.String)
{
com.novell.ldapchai.cr.Answer v4;
com.novell.ldapchai.cr.AnswerConfiguration v0;
com.novell.ldapchai.cr.Answer$FormatType v2;
com.novell.ldapchai.cr.Answer$ImplementationFactory v3;
java.lang.String v1;
v0 := @parameter0: com.novell.ldapchai.cr.AnswerConfiguration;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.cr.AnswerConfiguration: com.novell.ldapchai.cr.Answer$FormatType getFormatType()>();
v3 = virtualinvoke v2.<com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$ImplementationFactory getFactory()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.cr.Answer$ImplementationFactory: com.novell.ldapchai.cr.Answer newAnswer(com.novell.ldapchai.cr.AnswerConfiguration,java.lang.String)>(v0, v1);
return v4;
}
public static com.novell.ldapchai.cr.Answer fromAnswerBean(com.novell.ldapchai.cr.bean.AnswerBean, java.lang.String)
{
com.novell.ldapchai.cr.Answer v4;
com.novell.ldapchai.cr.Answer$FormatType v2;
com.novell.ldapchai.cr.Answer$ImplementationFactory v3;
com.novell.ldapchai.cr.bean.AnswerBean v0;
java.lang.String v1;
v0 := @parameter0: com.novell.ldapchai.cr.bean.AnswerBean;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.cr.bean.AnswerBean: com.novell.ldapchai.cr.Answer$FormatType getType()>();
v3 = virtualinvoke v2.<com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$ImplementationFactory getFactory()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.cr.Answer$ImplementationFactory: com.novell.ldapchai.cr.Answer fromAnswerBean(com.novell.ldapchai.cr.bean.AnswerBean,java.lang.String)>(v0, v1);
return v4;
}
public static com.novell.ldapchai.cr.Answer fromXml(org.jrivard.xmlchai.XmlElement, boolean, java.lang.String)
{
com.novell.ldapchai.cr.Answer v9;
com.novell.ldapchai.cr.Answer$FormatType v6;
com.novell.ldapchai.cr.Answer$ImplementationFactory v8;
java.util.function.Function v4;
org.jrivard.xmlchai.XmlElement v0;
java.util.Optional v3, v5;
java.lang.Object v7;
java.lang.String v2;
boolean v1;
v0 := @parameter0: org.jrivard.xmlchai.XmlElement;
v1 := @parameter1: boolean;
v2 := @parameter2: java.lang.String;
v3 = interfaceinvoke v0.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("format");
v4 = staticinvoke <com.novell.ldapchai.cr.AnswerFactory$valueOf__3: java.util.function.Function bootstrap$()>();
v5 = virtualinvoke v3.<java.util.Optional: java.util.Optional map(java.util.function.Function)>(v4);
v6 = <com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$FormatType TEXT>;
v7 = virtualinvoke v5.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v6);
v8 = virtualinvoke v7.<com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$ImplementationFactory getFactory()>();
v9 = interfaceinvoke v8.<com.novell.ldapchai.cr.Answer$ImplementationFactory: com.novell.ldapchai.cr.Answer fromXml(org.jrivard.xmlchai.XmlElement,boolean,java.lang.String)>(v0, v1, v2);
return v9;
}
}