public class com.novell.ldapchai.exception.ChaiException extends java.lang.Exception
{
private final boolean permanent;
private final boolean authentication;
private final com.novell.ldapchai.exception.ChaiError errorCode;
static com.novell.ldapchai.exception.ChaiException createChaiException(java.lang.String)
{
com.novell.ldapchai.exception.ChaiUnavailableException v3;
java.lang.String v0;
com.novell.ldapchai.exception.ChaiError v1;
com.novell.ldapchai.exception.ChaiOperationException v4;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v0);
v2 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: boolean isPermanent(java.lang.String)>(v0);
if v2 == 0 goto label1;
v3 = new com.novell.ldapchai.exception.ChaiUnavailableException;
specialinvoke v3.<com.novell.ldapchai.exception.ChaiUnavailableException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v0, v1);
return v3;
label1:
v4 = new com.novell.ldapchai.exception.ChaiOperationException;
specialinvoke v4.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v0, v1);
return v4;
}
protected void <init>(java.lang.String, com.novell.ldapchai.exception.ChaiError)
{
com.novell.ldapchai.exception.ChaiException v0;
java.lang.String v1;
com.novell.ldapchai.exception.ChaiError v2;
boolean v3, v4;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.exception.ChaiError;
v3 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: boolean isPermanent(java.lang.String)>(v1);
v4 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: boolean isAuthenticationRelated(java.lang.String)>(v1);
specialinvoke v0.<com.novell.ldapchai.exception.ChaiException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError,boolean,boolean)>(v1, v2, v3, v4);
return;
}
protected void <init>(java.lang.String, com.novell.ldapchai.exception.ChaiError, java.lang.Throwable)
{
java.lang.Throwable v3;
com.novell.ldapchai.exception.ChaiException v0;
java.lang.String v1;
com.novell.ldapchai.exception.ChaiError v2;
boolean v4, v5;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.exception.ChaiError;
v3 := @parameter2: java.lang.Throwable;
v4 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: boolean isPermanent(java.lang.String)>(v1);
v5 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: boolean isAuthenticationRelated(java.lang.String)>(v1);
specialinvoke v0.<com.novell.ldapchai.exception.ChaiException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.Throwable)>(v1, v2, v4, v5, v3);
return;
}
public void <init>(java.lang.String, com.novell.ldapchai.exception.ChaiError, boolean, boolean)
{
com.novell.ldapchai.exception.ChaiException v0;
java.lang.String v1;
com.novell.ldapchai.exception.ChaiError v2;
boolean v3, v4;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.exception.ChaiError;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String)>(v1);
v0.<com.novell.ldapchai.exception.ChaiException: boolean permanent> = v3;
v0.<com.novell.ldapchai.exception.ChaiException: boolean authentication> = v4;
v0.<com.novell.ldapchai.exception.ChaiException: com.novell.ldapchai.exception.ChaiError errorCode> = v2;
return;
}
public void <init>(java.lang.String, com.novell.ldapchai.exception.ChaiError, boolean, boolean, java.lang.Throwable)
{
java.lang.Throwable v5;
com.novell.ldapchai.exception.ChaiException v0;
java.lang.String v1;
com.novell.ldapchai.exception.ChaiError v2;
boolean v3, v4;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.exception.ChaiError;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
v5 := @parameter4: java.lang.Throwable;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(v1, v5);
v0.<com.novell.ldapchai.exception.ChaiException: boolean permanent> = v3;
v0.<com.novell.ldapchai.exception.ChaiException: boolean authentication> = v4;
v0.<com.novell.ldapchai.exception.ChaiException: com.novell.ldapchai.exception.ChaiError errorCode> = v2;
return;
}
public com.novell.ldapchai.exception.ChaiError getErrorCode()
{
com.novell.ldapchai.exception.ChaiException v0;
com.novell.ldapchai.exception.ChaiError v1;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 = v0.<com.novell.ldapchai.exception.ChaiException: com.novell.ldapchai.exception.ChaiError errorCode>;
return v1;
}
public boolean isPermanent()
{
com.novell.ldapchai.exception.ChaiException v0;
boolean v1;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 = v0.<com.novell.ldapchai.exception.ChaiException: boolean permanent>;
return v1;
}
public boolean isAuthentication()
{
com.novell.ldapchai.exception.ChaiException v0;
boolean v1;
v0 := @this: com.novell.ldapchai.exception.ChaiException;
v1 = v0.<com.novell.ldapchai.exception.ChaiException: boolean authentication>;
return v1;
}
}