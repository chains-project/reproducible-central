public abstract class com.novell.ldapchai.impl.AbstractChaiEntry extends java.lang.Object implements com.novell.ldapchai.ChaiEntry
{
protected static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
protected java.lang.String entryDN;
protected com.novell.ldapchai.provider.ChaiProvider chaiProvider;
public void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider> = v2;
if v1 != null goto label1;
v3 = "";
goto label2;
label1:
v3 = v1;
label2:
v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN> = v3;
return;
}
public final com.novell.ldapchai.provider.ChaiProvider getChaiProvider()
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
return v1;
}
public final java.lang.String getEntryDN()
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
return v1;
}
public boolean equals(java.lang.Object)
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.provider.ChaiProvider v3, v4, v5, v7;
java.lang.Object v1;
java.lang.String v10, v12, v8, v9;
boolean v11, v13, v2, v6;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof com.novell.ldapchai.ChaiEntry;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
if v3 == null goto label3;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v5 = v1.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
if v6 != 0 goto label4;
goto label7;
label3:
v7 = v1.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
if v7 != null goto label7;
label4:
v8 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
if v8 == null goto label5;
v9 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v10 = v1.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 != 0 goto label6;
goto label7;
label5:
v12 = v1.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
if v12 != null goto label7;
label6:
v13 = 1;
goto label8;
label7:
v13 = 0;
label8:
return v13;
}
public int hashCode()
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.provider.ChaiProvider v5, v6;
int v3, v4, v7, v8;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
if v1 == null goto label1;
v2 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v3 = virtualinvoke v2.<java.lang.String: int hashCode()>();
goto label2;
label1:
v3 = 0;
label2:
v4 = 29 * v3;
v5 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
if v5 == null goto label3;
v6 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v7 = virtualinvoke v6.<java.lang.Object: int hashCode()>();
goto label4;
label3:
v7 = 0;
label4:
v8 = v4 + v7;
return v8;
}
public java.lang.String toString()
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.StringBuilder v1, v2;
java.lang.String v3, v4;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EntryDN: ");
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
v4 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v4;
}
public final void addAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v5;
java.lang.String v1, v2, v4;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v2);
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v4, v1, v5, 0);
return;
}
public final void addAttribute(java.lang.String, java.util.Set) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v2;
java.lang.String v1, v4;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v4, v1, v2, 0);
return;
}
public final transient void addAttribute(java.lang.String, java.lang.String[]) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.List v6;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String[] v2;
java.lang.String v1, v4;
java.util.LinkedHashSet v5;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String[];
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v5 = new java.util.LinkedHashSet;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v5.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v6);
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v4, v1, v5, 0);
return;
}
public final boolean compareStringAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v2, v4;
boolean v5;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v5 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: boolean compareStringAttribute(java.lang.String,java.lang.String,java.lang.String)>(v4, v1, v2);
return v5;
}
public final void deleteAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v2, v4;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void deleteStringAttributeValue(java.lang.String,java.lang.String,java.lang.String)>(v4, v1, v2);
return;
}
public final java.util.Set getChildObjects() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.util.Iterator v8;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v4, v7;
com.novell.ldapchai.ChaiEntry v13;
com.novell.ldapchai.provider.ChaiProvider v11, v2;
java.util.Map v6;
com.novell.ldapchai.ChaiEntryFactory v12;
java.lang.Object v10;
java.lang.String v3;
com.novell.ldapchai.provider.SearchScope v5;
java.util.LinkedHashSet v1;
boolean v9;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = new java.util.LinkedHashSet;
specialinvoke v1.<java.util.LinkedHashSet: void <init>()>();
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v5 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope ONE>;
v6 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map search(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v3, "(objectClass=*)", v4, v5);
v7 = interfaceinvoke v6.<java.util.Map: java.util.Set keySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label2;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v12 = interfaceinvoke v11.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v13 = virtualinvoke v12.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String)>(v10);
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v13);
goto label1;
label2:
return v1;
}
public final com.novell.ldapchai.ChaiEntry getParentEntry() throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.ChaiEntryFactory v4;
com.novell.ldapchai.ChaiEntry v5;
java.lang.String v1, v2;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v2 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getParentDNString(java.lang.String)>(v1);
if v2 != null goto label1;
return null;
label1:
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v5 = virtualinvoke v4.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String)>(v2);
return v5;
}
private static java.lang.String getParentDNString(java.lang.String)
{
java.lang.String[] v2;
int v1, v3, v5, v6, v8, v9;
java.lang.StringBuilder v4;
java.lang.String v0, v10, v7;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 >= 0 goto label2;
label1:
return null;
label2:
v2 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String)>("(?<!\\\\),");
v3 = lengthof v2;
if v3 >= 2 goto label3;
return null;
label3:
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
v5 = 1;
label4:
v6 = lengthof v2;
if v5 >= v6 goto label6;
v7 = v2[v5];
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
v8 = lengthof v2;
v9 = v8 - 1;
if v5 >= v9 goto label5;
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
label5:
v5 = v5 + 1;
goto label4;
label6:
v10 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
return v10;
}
public final boolean exists()
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
int v2;
java.util.Set v1;
java.util.function.Supplier v5;
java.lang.Exception v3;
com.novell.ldapchai.util.internal.ChaiLogger v4;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
label1:
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.util.Set readMultiStringAttribute(java.lang.String)>("objectClass");
if v1 == null goto label4;
v2 = interfaceinvoke v1.<java.util.Set: int size()>();
if v2 < 1 goto label4;
label2:
return 1;
label3:
v3 := @caughtexception;
v4 = <com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v5 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry$lambda_exists_0__38: java.util.function.Supplier bootstrap$(com.novell.ldapchai.impl.AbstractChaiEntry,java.lang.Exception)>(v0, v3);
virtualinvoke v4.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v5);
label4:
return 0;
catch java.lang.Exception from label1 to label2 with label3;
}
public final boolean readBooleanAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v2, v3;
boolean v4, v5;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String readStringAttribute(java.lang.String)>(v1);
if v2 == null goto label1;
v3 = "TRUE";
v4 = virtualinvoke v3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v2);
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public java.lang.String readCanonicalDN() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.Iterator v8;
com.novell.ldapchai.util.SearchHelper v1;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v7;
com.novell.ldapchai.exception.ChaiError v12, v14;
com.novell.ldapchai.provider.ChaiProvider v3;
java.util.Map v5;
int v6;
java.lang.Object v9;
java.lang.String v4;
com.novell.ldapchai.exception.ChaiOperationException v11, v13;
com.novell.ldapchai.provider.SearchScope v2;
boolean v10;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v1.<com.novell.ldapchai.util.SearchHelper: void <init>()>();
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void returnNoAttributes()>();
v2 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope BASE>;
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void setSearchScope(com.novell.ldapchai.provider.SearchScope)>(v2);
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void setFilter(java.lang.String)>("(objectClass=*)");
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v4 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v5 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map search(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v4, v1);
v6 = interfaceinvoke v5.<java.util.Map: int size()>();
if v6 != 1 goto label1;
v7 = interfaceinvoke v5.<java.util.Map: java.util.Set keySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
v9 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
return v9;
label1:
v10 = interfaceinvoke v5.<java.util.Map: boolean isEmpty()>();
if v10 == 0 goto label2;
v11 = new com.novell.ldapchai.exception.ChaiOperationException;
v12 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
specialinvoke v11.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>("search for canonical DN resulted in no results", v12);
throw v11;
label2:
v13 = new com.novell.ldapchai.exception.ChaiOperationException;
v14 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
specialinvoke v13.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>("search for canonical DN resulted in multiple results", v14);
throw v13;
}
public final int readIntAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
int v3;
java.lang.NumberFormatException v4;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String readStringAttribute(java.lang.String)>(v1);
label1:
v3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
return 0;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public final byte[][] readMultiByteAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
byte[][] v4;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v4 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: byte[][] readMultiByteAttribute(java.lang.String,java.lang.String)>(v3, v1);
return v4;
}
public final java.util.Set readMultiStringAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v4;
java.lang.String v1, v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v4 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: java.util.Set readMultiStringAttribute(java.lang.String,java.lang.String)>(v3, v1);
return v4;
}
public java.util.List readNetAddressAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[] v10;
java.lang.IllegalStateException v45;
java.net.InetAddress v41;
byte v22, v27, v32, v37;
int[] v17;
java.lang.Exception v42;
com.novell.ldapchai.provider.ChaiProvider v4;
byte[][] v2;
java.lang.StringBuilder v20, v25, v30, v35;
com.novell.ldapchai.util.internal.ChaiLogger v43;
com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType v16;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.function.Supplier v44;
java.util.ArrayList v3;
java.nio.charset.Charset v12;
int v13, v15, v18, v19, v21, v23, v24, v26, v28, v29, v31, v33, v34, v36, v38, v39, v8, v9;
java.lang.String v1, v11, v14, v40, v7;
com.novell.ldapchai.provider.ChaiConfiguration v5;
com.novell.ldapchai.provider.ChaiSetting v6;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: byte[][] readMultiByteAttribute(java.lang.String)>(v1);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v5 = interfaceinvoke v4.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v6 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_CHARACTER_ENCODING>;
v7 = virtualinvoke v5.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v6);
v8 = lengthof v2;
v9 = 0;
label1:
if v9 >= v8 goto label8;
v10 = v2[v9];
v11 = new java.lang.String;
v12 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(v7);
specialinvoke v11.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v10, v12);
v13 = virtualinvoke v11.<java.lang.String: int indexOf(int)>(35);
v14 = virtualinvoke v11.<java.lang.String: java.lang.String substring(int,int)>(0, v13);
v15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v14);
v16 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType: com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType forIdentifier(int)>(v15);
v17 = <com.novell.ldapchai.impl.AbstractChaiEntry$1: int[] $SwitchMap$com$novell$ldapchai$impl$AbstractChaiEntry$NetworkAddressType>;
v18 = virtualinvoke v16.<com.novell.ldapchai.impl.AbstractChaiEntry$NetworkAddressType: int ordinal()>();
v19 = v17[v18];
lookupswitch(v19)
{
case 1: goto label2;
default: goto label6;
};
label2:
v20 = new java.lang.StringBuilder;
specialinvoke v20.<java.lang.StringBuilder: void <init>()>();
label3:
v21 = v13 + 3;
v22 = v10[v21];
v23 = v22 % 256;
v24 = 256 + v23;
v25 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v24);
virtualinvoke v25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
v26 = v13 + 4;
v27 = v10[v26];
v28 = v27 % 256;
v29 = 256 + v28;
v30 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v29);
virtualinvoke v30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
v31 = v13 + 5;
v32 = v10[v31];
v33 = v32 % 256;
v34 = 256 + v33;
v35 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v34);
virtualinvoke v35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
v36 = v13 + 6;
v37 = v10[v36];
v38 = v37 % 256;
v39 = 256 + v38;
virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v39);
v40 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.String toString()>();
v41 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v40);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v41);
label4:
goto label7;
label5:
v42 := @caughtexception;
v43 = <com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v44 = staticinvoke <com.novell.ldapchai.impl.AbstractChaiEntry$lambda_readNetAddressAttribute_1__39: java.util.function.Supplier bootstrap$(java.lang.String,java.lang.Exception)>(v11, v42);
virtualinvoke v43.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v44);
goto label7;
label6:
v45 = new java.lang.IllegalStateException;
specialinvoke v45.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unable to parse non-ipv4 address");
throw v45;
label7:
v9 = v9 + 1;
goto label1;
label8:
return v3;
catch java.net.UnknownHostException from label3 to label4 with label5;
catch java.lang.ArrayIndexOutOfBoundsException from label3 to label4 with label5;
}
public final java.util.Set readObjectClass() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.util.Set readMultiStringAttribute(java.lang.String)>("objectClass");
return v1;
}
public final java.lang.String readStringAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v3, v4;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v4 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: java.lang.String readStringAttribute(java.lang.String,java.lang.String)>(v3, v1);
return v4;
}
public final java.util.Map readStringAttributes(java.util.Set) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.Map v4;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v1;
java.lang.String v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.util.Set;
v2 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
v4 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map readStringAttributes(java.lang.String,java.util.Set)>(v3, v1);
return v4;
}
public final void replaceAttribute(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v2, v3, v5;
com.novell.ldapchai.provider.ChaiProvider v4;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v5 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v4.<com.novell.ldapchai.provider.ChaiProvider: void replaceStringAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v5, v1, v2, v3);
return;
}
public final java.util.Set search(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.util.SearchHelper v2;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v3;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v2.<com.novell.ldapchai.util.SearchHelper: void <init>(java.lang.String)>(v1);
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.util.Set search(com.novell.ldapchai.util.SearchHelper)>(v2);
return v3;
}
public java.util.Set search(com.novell.ldapchai.util.SearchHelper) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.util.SearchHelper v1;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.ChaiEntry v15;
java.util.Map v8;
com.novell.ldapchai.ChaiEntryFactory v14;
java.lang.String v4, v5;
java.util.LinkedHashSet v2;
boolean v11;
java.util.Iterator v10;
java.util.Set v6, v9;
com.novell.ldapchai.provider.ChaiProvider v13, v3;
java.lang.Object v12;
com.novell.ldapchai.provider.SearchScope v7;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: com.novell.ldapchai.util.SearchHelper;
v2 = new java.util.LinkedHashSet;
specialinvoke v2.<java.util.LinkedHashSet: void <init>()>();
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v5 = virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: java.lang.String getFilter()>();
v6 = virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: java.util.Set getAttributes()>();
v7 = virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: com.novell.ldapchai.provider.SearchScope getSearchScope()>();
v8 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map search(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v4, v5, v6, v7);
v9 = interfaceinvoke v8.<java.util.Map: java.util.Set keySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v14 = interfaceinvoke v13.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v15 = virtualinvoke v14.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String)>(v12);
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v15);
goto label1;
label2:
return v2;
}
public final java.util.Set search(java.lang.String, com.novell.ldapchai.provider.SearchScope) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.util.SearchHelper v3;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v4;
java.lang.String v1;
com.novell.ldapchai.provider.SearchScope v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.SearchScope;
v3 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v3.<com.novell.ldapchai.util.SearchHelper: void <init>(java.lang.String,com.novell.ldapchai.provider.SearchScope)>(v1, v2);
v4 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.util.Set search(com.novell.ldapchai.util.SearchHelper)>(v3);
return v4;
}
public final void writeStringAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v5;
java.lang.String v1, v2, v4;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
if v2 != null goto label1;
v5 = null;
goto label2;
label1:
v5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v2);
label2:
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v4, v1, v5, 1);
return;
}
public final void writeStringAttributes(java.util.Map) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.Map v1;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.util.Map;
v2 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttributes(java.lang.String,java.util.Map,boolean)>(v3, v1, 1);
return;
}
public final void writeStringAttribute(java.lang.String, java.util.Set) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.util.Set v2;
java.lang.String v1, v4;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v4, v1, v2, 1);
return;
}
public transient void writeStringAttribute(java.lang.String, java.lang.String[]) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.List v6;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String[] v2;
java.lang.String v1, v4;
java.util.LinkedHashSet v5;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String[];
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
if v2 != null goto label1;
v5 = null;
goto label2;
label1:
v5 = new java.util.LinkedHashSet;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v5.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v6);
label2:
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v4, v1, v5, 1);
return;
}
public transient void writeBinaryAttribute(java.lang.String, byte[][]) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
byte[][] v2;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v4;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: byte[][];
v3 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: void writeBinaryAttribute(java.lang.String,java.lang.String,byte[][],boolean)>(v4, v1, v2, 1);
return;
}
public void replaceBinaryAttribute(java.lang.String, byte[], byte[]) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
byte[] v2, v3;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v5;
com.novell.ldapchai.provider.ChaiProvider v4;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: byte[];
v3 := @parameter2: byte[];
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v5 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String entryDN>;
interfaceinvoke v4.<com.novell.ldapchai.provider.ChaiProvider: void replaceBinaryAttribute(java.lang.String,java.lang.String,byte[],byte[])>(v5, v1, v2, v3);
return;
}
public java.time.Instant readDateAttribute(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.provider.DirectoryVendor v5;
java.time.Instant v7;
com.novell.ldapchai.provider.ChaiProvider v4;
com.novell.ldapchai.impl.VendorFactory v6;
java.lang.String v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String readStringAttribute(java.lang.String)>(v1);
if v2 == null goto label1;
v3 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
return null;
label2:
v4 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v5 = interfaceinvoke v4.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v6 = virtualinvoke v5.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v7 = interfaceinvoke v6.<com.novell.ldapchai.impl.VendorFactory: java.time.Instant stringToInstant(java.lang.String)>(v2);
return v7;
}
public void writeDateAttribute(java.lang.String, java.time.Instant) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.VendorFactory v5;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
java.lang.String v1, v6;
com.novell.ldapchai.provider.DirectoryVendor v4;
java.time.Instant v2;
com.novell.ldapchai.provider.ChaiProvider v3;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.time.Instant;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v5 = virtualinvoke v4.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v6 = interfaceinvoke v5.<com.novell.ldapchai.impl.VendorFactory: java.lang.String instantToString(java.time.Instant)>(v2);
virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: void writeStringAttribute(java.lang.String,java.lang.String)>(v1, v6);
return;
}
public java.lang.String readGUID() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
byte[] v3;
byte[][] v1;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
int v2;
com.novell.ldapchai.util.internal.StringHelper$Base64Options[] v4;
java.lang.String v5;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: byte[][] readMultiByteAttribute(java.lang.String)>("guid");
if v1 == null goto label1;
v2 = lengthof v1;
if v2 >= 1 goto label2;
label1:
return null;
label2:
v3 = v1[0];
v4 = newarray (com.novell.ldapchai.util.internal.StringHelper$Base64Options)[0];
v5 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.lang.String base64Encode(byte[],com.novell.ldapchai.util.internal.StringHelper$Base64Options[])>(v3, v4);
return v5;
}
public boolean hasChildren() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.util.SearchHelper v1;
com.novell.ldapchai.impl.AbstractChaiEntry v0;
com.novell.ldapchai.provider.ChaiProvider v4;
java.util.List v2;
java.util.Map v6;
java.lang.String v5;
com.novell.ldapchai.provider.SearchScope v3;
boolean v7, v8;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiEntry;
v1 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v1.<com.novell.ldapchai.util.SearchHelper: void <init>()>();
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void setFilter(java.lang.String)>("(objectClass=*)");
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void setMaxResults(int)>(1);
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void setAttributes(java.util.Collection)>(v2);
v3 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope ONE>;
virtualinvoke v1.<com.novell.ldapchai.util.SearchHelper: void setSearchScope(com.novell.ldapchai.provider.SearchScope)>(v3);
v4 = v0.<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
v5 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: java.lang.String getEntryDN()>();
v6 = interfaceinvoke v4.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map search(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v5, v1);
v7 = interfaceinvoke v6.<java.util.Map: boolean isEmpty()>();
if v7 != 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
return v8;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/impl/AbstractChaiEntry;");
<com.novell.ldapchai.impl.AbstractChaiEntry: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}