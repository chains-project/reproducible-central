public class com.novell.ldapchai.impl.ad.ADErrorMap extends java.lang.Object implements com.novell.ldapchai.exception.ErrorMap
{
private static final com.novell.ldapchai.impl.ad.ADErrorMap SINGLETON;
private void <init>()
{
com.novell.ldapchai.impl.ad.ADErrorMap v0;
v0 := @this: com.novell.ldapchai.impl.ad.ADErrorMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.novell.ldapchai.impl.ad.ADErrorMap instance()
{
com.novell.ldapchai.impl.ad.ADErrorMap v0;
v0 = <com.novell.ldapchai.impl.ad.ADErrorMap: com.novell.ldapchai.impl.ad.ADErrorMap SINGLETON>;
return v0;
}
public com.novell.ldapchai.exception.ChaiError errorForMessage(java.lang.String)
{
com.novell.ldapchai.impl.ad.ADErrorMap v0;
com.novell.ldapchai.impl.ad.ADErrorMap$ADError v2;
java.lang.String v1;
com.novell.ldapchai.exception.ChaiError v3;
v0 := @this: com.novell.ldapchai.impl.ad.ADErrorMap;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.ad.ADErrorMap: com.novell.ldapchai.impl.ad.ADErrorMap$ADError forMessage(java.lang.String)>(v1);
v3 = v2.<com.novell.ldapchai.impl.ad.ADErrorMap$ADError: com.novell.ldapchai.exception.ChaiError chaiErrorCode>;
return v3;
}
public boolean isPermanent(java.lang.String)
{
com.novell.ldapchai.impl.ad.ADErrorMap v0;
com.novell.ldapchai.impl.ad.ADErrorMap$ADError v2;
java.lang.String v1;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.ad.ADErrorMap;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.ad.ADErrorMap: com.novell.ldapchai.impl.ad.ADErrorMap$ADError forMessage(java.lang.String)>(v1);
v3 = virtualinvoke v2.<com.novell.ldapchai.impl.ad.ADErrorMap$ADError: boolean isPermanent()>();
return v3;
}
public boolean isAuthenticationRelated(java.lang.String)
{
com.novell.ldapchai.impl.ad.ADErrorMap v0;
com.novell.ldapchai.impl.ad.ADErrorMap$ADError v2;
java.lang.String v1;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.ad.ADErrorMap;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.ad.ADErrorMap: com.novell.ldapchai.impl.ad.ADErrorMap$ADError forMessage(java.lang.String)>(v1);
v3 = virtualinvoke v2.<com.novell.ldapchai.impl.ad.ADErrorMap$ADError: boolean isAuthentication()>();
return v3;
}
private static com.novell.ldapchai.impl.ad.ADErrorMap$ADError forMessage(java.lang.String)
{
com.novell.ldapchai.impl.ad.ADErrorMap$ADError[] v3;
int v1, v4, v5;
java.lang.String v0, v7;
boolean v10, v11, v13, v15, v8;
java.util.Iterator v12;
java.util.List v9;
com.novell.ldapchai.impl.ad.ADErrorMap$ADError v16, v2, v6;
java.lang.Object v14;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 >= 1 goto label2;
label1:
v2 = <com.novell.ldapchai.impl.ad.ADErrorMap$ADError: com.novell.ldapchai.impl.ad.ADErrorMap$ADError UNKNOWN>;
return v2;
label2:
v3 = staticinvoke <com.novell.ldapchai.impl.ad.ADErrorMap$ADError: com.novell.ldapchai.impl.ad.ADErrorMap$ADError[] values()>();
v4 = lengthof v3;
v5 = 0;
label3:
if v5 >= v4 goto label9;
v6 = v3[v5];
v7 = virtualinvoke v6.<com.novell.ldapchai.impl.ad.ADErrorMap$ADError: java.lang.String getErrorCodeString()>();
v8 = virtualinvoke v0.<java.lang.String: boolean contains(java.lang.CharSequence)>(v7);
if v8 == 0 goto label8;
v9 = virtualinvoke v6.<com.novell.ldapchai.impl.ad.ADErrorMap$ADError: java.util.List getErrorStrings()>();
if v9 == null goto label4;
v10 = interfaceinvoke v9.<java.util.List: boolean isEmpty()>();
if v10 == 0 goto label5;
label4:
return v6;
label5:
v11 = 1;
v12 = interfaceinvoke v9.<java.util.List: java.util.Iterator iterator()>();
label6:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label7;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = virtualinvoke v0.<java.lang.String: boolean contains(java.lang.CharSequence)>(v14);
if v15 != 0 goto label6;
v11 = 0;
goto label6;
label7:
if v11 == 0 goto label8;
return v6;
label8:
v5 = v5 + 1;
goto label3;
label9:
v16 = <com.novell.ldapchai.impl.ad.ADErrorMap$ADError: com.novell.ldapchai.impl.ad.ADErrorMap$ADError UNKNOWN>;
return v16;
}
static void <clinit>()
{
com.novell.ldapchai.impl.ad.ADErrorMap v0;
v0 = new com.novell.ldapchai.impl.ad.ADErrorMap;
specialinvoke v0.<com.novell.ldapchai.impl.ad.ADErrorMap: void <init>()>();
<com.novell.ldapchai.impl.ad.ADErrorMap: com.novell.ldapchai.impl.ad.ADErrorMap SINGLETON> = v0;
return;
}
}