public class com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl extends com.novell.ldapchai.impl.ad.entry.TopImpl implements com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings
{
static final java.util.Collection LDAP_PASSWORD_ATTRIBUTES;
private final java.util.Map ruleMap;
private final java.util.Map allEntryValues;
void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.util.SearchHelper v5;
java.util.HashMap v3, v4;
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
java.util.Map v10, v13, v14, v15;
java.lang.String v1, v11, v9;
java.util.Collection v7;
com.novell.ldapchai.provider.ChaiProvider v2, v8;
java.lang.Object v12;
com.novell.ldapchai.provider.SearchScope v6;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<com.novell.ldapchai.impl.ad.entry.TopImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map ruleMap> = v3;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map allEntryValues> = v4;
v5 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v5.<com.novell.ldapchai.util.SearchHelper: void <init>()>();
virtualinvoke v5.<com.novell.ldapchai.util.SearchHelper: void setFilter(java.lang.String)>("(objectClass=*)");
v6 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope BASE>;
virtualinvoke v5.<com.novell.ldapchai.util.SearchHelper: void setSearchScope(com.novell.ldapchai.provider.SearchScope)>(v6);
v7 = <com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Collection LDAP_PASSWORD_ATTRIBUTES>;
virtualinvoke v5.<com.novell.ldapchai.util.SearchHelper: void setAttributes(java.util.Collection)>(v7);
v8 = virtualinvoke v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v9 = virtualinvoke v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.lang.String getEntryDN()>();
v10 = interfaceinvoke v8.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map searchMultiValues(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v9, v5);
v11 = virtualinvoke v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.lang.String getEntryDN()>();
v12 = interfaceinvoke v10.<java.util.Map: java.lang.Object get(java.lang.Object)>(v11);
v13 = v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map allEntryValues>;
interfaceinvoke v13.<java.util.Map: void putAll(java.util.Map)>(v12);
v14 = v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map ruleMap>;
v15 = staticinvoke <com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map createRuleMapUsingAttributeValues(java.util.Map)>(v12);
interfaceinvoke v14.<java.util.Map: void putAll(java.util.Map)>(v15);
return;
}
private static java.util.Map createRuleMapUsingAttributeValues(java.util.Map)
{
java.util.HashMap v1;
java.util.Map v0;
int v3, v4;
java.lang.String v13, v15, v16, v7, v8;
boolean v10;
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute v6;
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute$TYPE v11, v12;
com.novell.ldapchai.ChaiPasswordRule[] v2;
java.lang.Object v14, v17, v9;
com.novell.ldapchai.ChaiPasswordRule v5;
v0 := @parameter0: java.util.Map;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = staticinvoke <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule[] values()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label4;
v5 = v2[v4];
v6 = staticinvoke <com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute attributeForRule(com.novell.ldapchai.ChaiPasswordRule)>(v5);
if v6 == null goto label3;
v7 = virtualinvoke v6.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute: java.lang.String getLdapAttribute()>();
if v7 == null goto label3;
v8 = virtualinvoke v6.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute: java.lang.String getLdapAttribute()>();
v9 = interfaceinvoke v0.<java.util.Map: java.lang.Object get(java.lang.Object)>(v8);
if v9 == null goto label3;
v10 = interfaceinvoke v9.<java.util.List: boolean isEmpty()>();
if v10 != 0 goto label3;
v11 = virtualinvoke v6.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute$TYPE getType()>();
v12 = <com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute$TYPE: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute$TYPE DURATION>;
if v11 != v12 goto label2;
v13 = virtualinvoke v5.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String getKey()>();
v14 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(0);
v15 = staticinvoke <com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.lang.String timeSpanSyntaxToSeconds(java.lang.String)>(v14);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v13, v15);
goto label3;
label2:
v16 = virtualinvoke v5.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String getKey()>();
v17 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(0);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v17);
label3:
v4 = v4 + 1;
goto label1;
label4:
return v1;
}
public java.lang.String getValue(java.lang.String)
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map ruleMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.lang.String getValue(com.novell.ldapchai.ChaiPasswordRule)
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
java.util.Map v2;
java.lang.Object v4;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v3;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
v1 := @parameter0: com.novell.ldapchai.ChaiPasswordRule;
v2 = v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map ruleMap>;
v3 = virtualinvoke v1.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String getKey()>();
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
return v4;
}
public java.util.Set getKeys()
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
java.util.Map v1;
java.util.Set v2, v3;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
v1 = v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Map ruleMap>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v2);
return v3;
}
public com.novell.ldapchai.ChaiEntry getPolicyEntry()
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
return v0;
}
public com.novell.ldapchai.util.PasswordRuleHelper getRuleHelper()
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
return null;
}
private static java.lang.String timeSpanSyntaxToSeconds(java.lang.String)
{
java.lang.NumberFormatException v4;
int v1, v6;
java.math.BigInteger v2, v3, v5, v7, v8;
java.lang.String v0, v9;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 >= 1 goto label2;
label1:
return "0";
label2:
v2 = new java.math.BigInteger;
specialinvoke v2.<java.math.BigInteger: void <init>(java.lang.String)>(v0);
v3 = virtualinvoke v2.<java.math.BigInteger: java.math.BigInteger abs()>();
label3:
goto label5;
label4:
v4 := @caughtexception;
return "0";
label5:
v5 = new java.math.BigInteger;
specialinvoke v5.<java.math.BigInteger: void <init>(java.lang.String)>("9999999");
v6 = virtualinvoke v3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(v5);
if v6 > 0 goto label6;
return "0";
label6:
v7 = new java.math.BigInteger;
specialinvoke v7.<java.math.BigInteger: void <init>(java.lang.String)>("10000000");
v8 = virtualinvoke v3.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(v7);
v9 = virtualinvoke v8.<java.math.BigInteger: java.lang.String toString()>();
return v9;
catch java.lang.NumberFormatException from label2 to label3 with label4;
}
public java.lang.String readCanonicalDN() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.lang.String readStringAttribute(java.lang.String)>("distinguishedName");
return v1;
}
static void <clinit>()
{
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute v4;
java.util.Collection v6;
int v2, v3;
com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute[] v1;
java.lang.String v5;
java.util.ArrayList v0;
v0 = new java.util.ArrayList;
specialinvoke v0.<java.util.ArrayList: void <init>()>();
v1 = staticinvoke <com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute: com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettings$Attribute: java.lang.String getLdapAttribute()>();
virtualinvoke v0.<java.util.ArrayList: boolean add(java.lang.Object)>(v5);
v3 = v3 + 1;
goto label1;
label2:
v6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(v0);
<com.novell.ldapchai.impl.ad.entry.MsDSPasswordSettingsImpl: java.util.Collection LDAP_PASSWORD_ATTRIBUTES> = v6;
return;
}
}