public class com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory extends java.lang.Object implements com.novell.ldapchai.impl.VendorFactory
{
private static final java.lang.String LDAP_ATTR_VENDOR_NAME;
private static final java.lang.String APACHE_DS_VENDOR_NAME;
public static final java.lang.String APACHE_DS_TIMESTAMP_PATTERN;
public void <init>()
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
specialinvoke v3.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSGroup v3;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.apacheds.entry.ApacheDSGroup;
specialinvoke v3.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSGroup: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSEntry v3;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.apacheds.entry.ApacheDSEntry;
specialinvoke v3.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSEntry: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()
{
com.novell.ldapchai.provider.DirectoryVendor v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 = <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor APACHE_DS>;
return v1;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap()
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 = staticinvoke <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap instance()>();
return v1;
}
public java.util.Set interestedDseAttributes()
{
java.util.Set v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("vendorName");
return v1;
}
public boolean detectVendorFromRootDSEData(java.util.Map)
{
java.util.Iterator v3;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
java.util.Map v1;
java.lang.Object v2, v5;
java.lang.String v6;
boolean v4, v7;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: java.util.Map;
if v1 == null goto label2;
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>("vendorName");
if v2 == null goto label2;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = "Apache Software Foundation";
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v5);
if v7 == 0 goto label1;
return 1;
label2:
return 0;
}
public java.time.Instant stringToInstant(java.lang.String)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
java.lang.IllegalArgumentException v8;
java.time.Instant v6;
java.lang.NullPointerException v3;
java.time.format.DateTimeParseException v7;
java.time.OffsetDateTime v5;
java.time.format.DateTimeFormatter v4;
java.lang.String v1, v10, v9;
boolean v2;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: boolean isEmpty(java.lang.CharSequence)>(v1);
if v2 == 0 goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>()>();
throw v3;
label1:
v4 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>("uuuuMMddHHmmss.SSSX");
v5 = staticinvoke <java.time.OffsetDateTime: java.time.OffsetDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v1, v4);
v6 = virtualinvoke v5.<java.time.OffsetDateTime: java.time.Instant toInstant()>();
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new java.lang.IllegalArgumentException;
v9 = virtualinvoke v7.<java.time.format.DateTimeParseException: java.lang.String getMessage()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unable to parse apacheDS time-string: \u0001");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v8;
catch java.time.format.DateTimeParseException from label1 to label2 with label3;
}
public java.lang.String instantToString(java.time.Instant)
{
java.time.OffsetDateTime v4;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
java.time.format.DateTimeFormatter v2;
java.lang.String v5;
java.time.ZoneOffset v3;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: java.time.Instant;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>("uuuuMMddHHmmss.SSSX");
v3 = <java.time.ZoneOffset: java.time.ZoneOffset UTC>;
v4 = staticinvoke <java.time.OffsetDateTime: java.time.OffsetDateTime ofInstant(java.time.Instant,java.time.ZoneId)>(v1, v3);
v5 = virtualinvoke v2.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v4);
return v5;
}
public boolean allowWatchdogDisconnect(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSVendorFactory;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
return 1;
}
}