public class com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory extends java.lang.Object implements com.novell.ldapchai.impl.VendorFactory
{
private static final java.lang.String ROOT_DSE_ATTRIBUTE_VENDOR_NAME;
private static final java.lang.String ROOT_DSE_ATTRIBUTE_VENDOR_VERSION;
private static final java.lang.String ROOT_DSE_ATTRIBUTE_IPA_TOPOLOGY_PLUGIN_VERSION;
public void <init>()
{
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
specialinvoke v3.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Group v3;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Group;
specialinvoke v3.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Group: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Entry v3;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Entry;
specialinvoke v3.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Entry: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()
{
com.novell.ldapchai.provider.DirectoryVendor v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 = <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor GENERIC>;
return v1;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap()
{
com.novell.ldapchai.impl.edir.EdirErrorMap v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 = staticinvoke <com.novell.ldapchai.impl.edir.EdirErrorMap: com.novell.ldapchai.impl.edir.EdirErrorMap instance()>();
return v1;
}
public java.util.Set interestedDseAttributes()
{
java.util.HashSet v1;
java.util.List v3;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
java.util.Set v4;
java.lang.String[] v2;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 = new java.util.HashSet;
v2 = newarray (java.lang.String)[3];
v2[0] = "vendorName";
v2[1] = "vendorVersion";
v2[2] = "ipaTopologyPluginVersion";
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v3);
v4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v4;
}
public boolean detectVendorFromRootDSEData(java.util.Map)
{
java.util.Iterator v11, v5;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
java.util.Map v1;
java.lang.Object v10, v13, v4, v7;
boolean v12, v14, v2, v3, v6, v8, v9;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: java.util.Map;
if v1 != null goto label1;
return 0;
label1:
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("ipaTopologyPluginVersion");
if v2 == 0 goto label2;
return 0;
label2:
v3 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("vendorName");
if v3 == 0 goto label4;
v4 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>("vendorName");
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label3:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label4;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v7.<java.lang.String: boolean startsWith(java.lang.String)>("389 Project");
if v8 == 0 goto label3;
return 1;
label4:
v9 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("vendorVersion");
if v9 == 0 goto label6;
v10 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>("vendorVersion");
v11 = interfaceinvoke v10.<java.util.List: java.util.Iterator iterator()>();
label5:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label6;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = virtualinvoke v13.<java.lang.String: boolean startsWith(java.lang.String)>("389-Directory");
if v14 == 0 goto label5;
return 1;
label6:
return 0;
}
public java.time.Instant stringToInstant(java.lang.String)
{
java.lang.String v1;
java.time.Instant v2;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.time.Instant convertZuluToInstant(java.lang.String)>(v1);
return v2;
}
public java.lang.String instantToString(java.time.Instant)
{
java.lang.String v2;
java.time.Instant v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: java.time.Instant;
v2 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.lang.String convertInstantToZulu(java.time.Instant)>(v1);
return v2;
}
public boolean allowWatchdogDisconnect(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389VendorFactory;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
return 1;
}
}