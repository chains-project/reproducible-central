final enum class com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute extends java.lang.Enum
{
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_LIFETIME;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MAX_LIFETIME;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_LENGTH;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_DIFF_CHARS;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute PASSWORD_HISTORY_LENGTH;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MAX_FAILURE;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute LOCKOUT_DURATION;
public static final enum com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute FAIL_COUNT_INTERVAL;
private final java.lang.String ldapAttribute;
private final java.lang.String defaultValue;
private final com.novell.ldapchai.ChaiPasswordRule chaiPwdRule;
private static final com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] $VALUES;
public static com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] values()
{
java.lang.Object v1;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] v0;
v0 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/impl/freeipa/entry/FreeIPAPasswordPolicy$PwdPolicyAttribute;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String, java.lang.String, com.novell.ldapchai.ChaiPasswordRule)
{
int v2;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v0;
com.novell.ldapchai.ChaiPasswordRule v5;
java.lang.String v1, v3, v4;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: com.novell.ldapchai.ChaiPasswordRule;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: java.lang.String ldapAttribute> = v3;
v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: java.lang.String defaultValue> = v4;
v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.ChaiPasswordRule chaiPwdRule> = v5;
return;
}
public java.lang.String getLdapAttribute()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v1 = v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: java.lang.String ldapAttribute>;
return v1;
}
public java.lang.String getDefaultValue()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v1 = v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: java.lang.String defaultValue>;
return v1;
}
public com.novell.ldapchai.ChaiPasswordRule getRuleName()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v0;
com.novell.ldapchai.ChaiPasswordRule v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v1 = v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.ChaiPasswordRule chaiPwdRule>;
return v1;
}
public java.lang.String getKey()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v1 = v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: java.lang.String ldapAttribute>;
return v1;
}
public static com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute lookupAttribute(com.novell.ldapchai.ChaiPasswordRule)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] v1;
int v2, v3;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v4;
com.novell.ldapchai.ChaiPasswordRule v0, v5;
boolean v6;
v0 := @parameter0: com.novell.ldapchai.ChaiPasswordRule;
if v0 == null goto label3;
v1 = staticinvoke <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.ChaiPasswordRule getRuleName()>();
v6 = virtualinvoke v0.<com.novell.ldapchai.ChaiPasswordRule: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label2;
return v4;
label2:
v3 = v3 + 1;
goto label1;
label3:
return null;
}
private static com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] $values()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v1, v2, v3, v4, v5, v6, v7, v8;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] v0;
v0 = newarray (com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute)[8];
v1 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_LIFETIME>;
v0[0] = v1;
v2 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MAX_LIFETIME>;
v0[1] = v2;
v3 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_LENGTH>;
v0[2] = v3;
v4 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_DIFF_CHARS>;
v0[3] = v4;
v5 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute PASSWORD_HISTORY_LENGTH>;
v0[4] = v5;
v6 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MAX_FAILURE>;
v0[5] = v6;
v7 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute LOCKOUT_DURATION>;
v0[6] = v7;
v8 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute FAIL_COUNT_INTERVAL>;
v0[7] = v8;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute v0, v10, v2, v4, v6, v7, v8, v9;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] v11;
com.novell.ldapchai.ChaiPasswordRule v1, v3, v5;
v0 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLifetime>;
specialinvoke v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("MIN_LIFETIME", 0, "krbMinPwdLife", "0", v1);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_LIFETIME> = v0;
v2 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v3 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ExpirationInterval>;
specialinvoke v2.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("MAX_LIFETIME", 1, "krbMaxPwdLife", "0", v3);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MAX_LIFETIME> = v2;
v4 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
v5 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLength>;
specialinvoke v4.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("MIN_LENGTH", 2, "krbPwdMinLength", "0", v5);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_LENGTH> = v4;
v6 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
specialinvoke v6.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("MIN_DIFF_CHARS", 3, "krbPwdMinDiffChars", "0", null);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MIN_DIFF_CHARS> = v6;
v7 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
specialinvoke v7.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("PASSWORD_HISTORY_LENGTH", 4, "krbPwdHistoryLength", "0", null);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute PASSWORD_HISTORY_LENGTH> = v7;
v8 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
specialinvoke v8.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("MAX_FAILURE", 5, "krbPwdMaxFailure", "0", null);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute MAX_FAILURE> = v8;
v9 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
specialinvoke v9.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("LOCKOUT_DURATION", 6, "krbPwdLockoutDuration", "0", null);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute LOCKOUT_DURATION> = v9;
v10 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute;
specialinvoke v10.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.novell.ldapchai.ChaiPasswordRule)>("FAIL_COUNT_INTERVAL", 7, "krbPwdFailureCountInterval", "0", null);
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute FAIL_COUNT_INTERVAL> = v10;
v11 = staticinvoke <com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] $values()>();
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute: com.novell.ldapchai.impl.freeipa.entry.FreeIPAPasswordPolicy$PwdPolicyAttribute[] $VALUES> = v11;
return;
}
}