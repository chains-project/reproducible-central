public class com.novell.ldapchai.provider.ChaiConfiguration extends java.lang.Object
{
public static final java.lang.String LDAP_URL_SEPARATOR_REGEX_PATTERN;
private static final java.util.Map DEFAULT_SETTINGS;
private final java.io.Serializable implementationConfiguration;
private final java.util.Map settings;
private final javax.net.ssl.X509TrustManager[] trustManager;
private void <init>(java.io.Serializable, java.util.Map, javax.net.ssl.X509TrustManager[])
{
java.lang.Object[] v5;
java.util.Map v2;
int v4;
com.novell.ldapchai.provider.ChaiConfiguration v0;
javax.net.ssl.X509TrustManager[] v3;
java.io.Serializable v1;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 := @parameter0: java.io.Serializable;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: javax.net.ssl.X509TrustManager[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.io.Serializable implementationConfiguration> = v1;
v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings> = v2;
if v3 == null goto label1;
v4 = lengthof v3;
v5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v3, v4);
label1:
v0.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager> = v5;
return;
}
public static com.novell.ldapchai.provider.ChaiConfiguration newConfiguration(java.lang.String, java.lang.String, java.lang.String)
{
com.novell.ldapchai.provider.ChaiConfiguration v4;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v3;
java.lang.String v0, v1, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v0, v1, v2);
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration build()>();
return v4;
}
public static com.novell.ldapchai.provider.ChaiConfiguration newConfiguration(java.util.List, java.lang.String, java.lang.String)
{
java.util.List v0;
com.novell.ldapchai.provider.ChaiConfiguration v4;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v3;
java.lang.String v1, v2;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>(java.util.List,java.lang.String,java.lang.String)>(v0, v1, v2);
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration build()>();
return v4;
}
public java.lang.Object getImplementationConfiguration()
{
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.io.Serializable v1;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.io.Serializable implementationConfiguration>;
return v1;
}
public java.lang.String toString()
{
com.novell.ldapchai.provider.ChaiSetting[] v4;
int v13, v14, v15, v5, v6;
java.lang.String v10, v11, v16, v3, v8;
boolean v12, v9;
com.novell.ldapchai.provider.ChaiConfiguration v0;
com.novell.ldapchai.provider.ChaiSetting v7;
java.lang.Class v2;
java.lang.StringBuilder v1;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = class "Lcom/novell/ldapchai/provider/ChaiConfiguration;";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getSimpleName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" settings: {");
v4 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting[] values()>();
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label4;
v7 = v4[v6];
v8 = virtualinvoke v7.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getKey()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
v9 = virtualinvoke v7.<com.novell.ldapchai.provider.ChaiSetting: boolean isVisible()>();
if v9 == 0 goto label2;
v10 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v7);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
goto label3;
label2:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**stripped**");
label3:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v6 + 1;
goto label1;
label4:
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
v12 = virtualinvoke v11.<java.lang.String: boolean endsWith(java.lang.String)>(", ");
if v12 == 0 goto label5;
v13 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v14 = v13 - 2;
v15 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(v14, v15);
label5:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
v16 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v16;
}
public java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)
{
java.util.Map v2;
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.lang.Object v4;
com.novell.ldapchai.provider.ChaiSetting v1;
java.lang.String v3;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiSetting;
v2 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
v3 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getKey()>();
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
return v4;
}
public boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)
{
com.novell.ldapchai.provider.ChaiConfiguration v0;
com.novell.ldapchai.provider.ChaiSetting v1;
java.lang.String v2;
boolean v3;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiSetting;
v2 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v1);
v3 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: boolean convertStrToBoolean(java.lang.String)>(v2);
return v3;
}
public java.util.List bindURLsAsList()
{
java.util.List v4, v5;
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.lang.String[] v3;
com.novell.ldapchai.provider.ChaiSetting v1;
java.lang.String v2;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
v2 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v1);
v3 = virtualinvoke v2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",| ");
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
v5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v4);
return v5;
}
public java.lang.String getDebugUrl()
{
java.util.List v1;
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.lang.Object v2;
com.novell.ldapchai.provider.ChaiSetting v3;
java.lang.String v4, v5;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.List bindURLsAsList()>();
v2 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(0);
v3 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_DN>;
v4 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v3);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/\u0001");
return v5;
}
java.lang.String getBindPassword()
{
java.util.Map v1;
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.lang.Object v4;
com.novell.ldapchai.provider.ChaiSetting v2;
java.lang.String v3;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
v2 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_PASSWORD>;
v3 = virtualinvoke v2.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getKey()>();
v4 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
return v4;
}
java.util.Optional getDefaultVendor()
{
com.novell.ldapchai.provider.ChaiConfiguration v0;
com.novell.ldapchai.provider.ChaiSetting v1;
com.novell.ldapchai.provider.DirectoryVendor v6;
int v4, v5;
com.novell.ldapchai.provider.DirectoryVendor[] v3;
java.util.Optional v10, v9;
java.lang.String v2, v7;
boolean v8;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting DEFAULT_VENDOR>;
v2 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v1);
if v2 == null goto label3;
v3 = staticinvoke <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor[] values()>();
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label3;
v6 = v3[v5];
v7 = virtualinvoke v6.<com.novell.ldapchai.provider.DirectoryVendor: java.lang.String toString()>();
v8 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v8 == 0 goto label2;
v9 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v6);
return v9;
label2:
v5 = v5 + 1;
goto label1;
label3:
v10 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v10;
}
int getIntSetting(com.novell.ldapchai.provider.ChaiSetting)
{
int v3;
com.novell.ldapchai.provider.ChaiConfiguration v0;
com.novell.ldapchai.provider.ChaiSetting v1;
java.lang.String v2, v6;
java.lang.IllegalArgumentException v5;
java.lang.Exception v4;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiSetting;
label1:
v2 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v1);
v3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.novell.ldapchai.provider.ChaiSetting)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("misconfigured value; \u0001 should be Integer, but is not");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v5;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.util.Properties getSettings()
{
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.util.Properties v1;
java.util.Map v2;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = new java.util.Properties;
specialinvoke v1.<java.util.Properties: void <init>()>();
v2 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
virtualinvoke v1.<java.util.Properties: void putAll(java.util.Map)>(v2);
return v1;
}
public javax.net.ssl.X509TrustManager[] getTrustManager()
{
java.lang.Object[] v5;
int v4;
com.novell.ldapchai.provider.ChaiConfiguration v0;
javax.net.ssl.X509TrustManager[] v1, v2, v3;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
if v1 == null goto label1;
v2 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
v3 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
v4 = lengthof v3;
v5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v2, v4);
label1:
return v5;
}
public static com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder builder()
{
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
v0 = new com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>()>();
return v0;
}
public static com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder builder(java.lang.String, java.lang.String, java.lang.String)
{
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v3;
java.lang.String v0, v1, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v0, v1, v2);
return v3;
}
public static com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder builder(java.util.List, java.lang.String, java.lang.String)
{
java.util.List v0;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v3;
java.lang.String v1, v2;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>(java.util.List,java.lang.String,java.lang.String)>(v0, v1, v2);
return v3;
}
public static com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder builder(com.novell.ldapchai.provider.ChaiConfiguration)
{
com.novell.ldapchai.provider.ChaiConfiguration v0;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v1;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = new com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>(com.novell.ldapchai.provider.ChaiConfiguration)>(v0);
return v1;
}
public boolean equals(java.lang.Object)
{
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.io.Serializable v4, v5;
java.util.Map v7, v8;
javax.net.ssl.X509TrustManager[] v10, v11;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v12, v13, v6, v9;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.io.Serializable implementationConfiguration>;
v5 = v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.io.Serializable implementationConfiguration>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 == 0 goto label4;
v7 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
v8 = v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 == 0 goto label4;
v10 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
v11 = v1.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
v12 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(v10, v11);
if v12 == 0 goto label4;
v13 = 1;
goto label5;
label4:
v13 = 0;
label5:
return v13;
}
public int hashCode()
{
java.lang.Object[] v1;
com.novell.ldapchai.provider.ChaiConfiguration v0;
java.io.Serializable v2;
java.util.Map v3;
int v4, v5, v7, v8;
javax.net.ssl.X509TrustManager[] v6;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.io.Serializable implementationConfiguration>;
v1[0] = v2;
v3 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
v1[1] = v3;
v4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
v5 = 31 * v4;
v6 = v0.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
v7 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>(v6);
v8 = v5 + v7;
return v8;
}
static void <clinit>()
{
com.novell.ldapchai.provider.ChaiSetting[] v1;
com.novell.ldapchai.provider.ChaiSetting v4;
java.util.LinkedHashMap v0;
java.util.Map v7;
int v2, v3;
java.lang.String v5, v6;
v0 = new java.util.LinkedHashMap;
specialinvoke v0.<java.util.LinkedHashMap: void <init>()>();
v1 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getKey()>();
v6 = virtualinvoke v4.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getDefaultValue()>();
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v6);
v3 = v3 + 1;
goto label1;
label2:
v7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v0);
<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map DEFAULT_SETTINGS> = v7;
return;
}
}