class com.novell.ldapchai.provider.ChaiProviderFactory$CentralService extends java.lang.Object implements java.io.Closeable
{
private final com.novell.ldapchai.provider.WatchdogService watchdogService;
private final com.novell.ldapchai.provider.StatisticsWrapper$StatsBean globalStats;
private final java.util.Map vendorCacheMap;
private final int maxVendorCacheAgeMs;
private final com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder activeProviders;
private void <init>(com.novell.ldapchai.provider.ChaiProviderFactory)
{
com.novell.ldapchai.provider.ChaiProviderFactorySetting v6, v7;
java.util.concurrent.ConcurrentHashMap v3;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v2;
com.novell.ldapchai.provider.ChaiProviderFactory v1;
com.novell.ldapchai.provider.WatchdogService v11;
java.util.Map v5;
int v10;
com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder v4;
java.lang.Object v9;
java.lang.String v8;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new com.novell.ldapchai.provider.StatisticsWrapper$StatsBean;
specialinvoke v2.<com.novell.ldapchai.provider.StatisticsWrapper$StatsBean: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean globalStats> = v2;
v3 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap> = v3;
v4 = new com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder;
specialinvoke v4.<com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder activeProviders> = v4;
v5 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiProviderFactory: java.util.Map getChaiProviderFactorySettings()>();
v6 = <com.novell.ldapchai.provider.ChaiProviderFactorySetting: com.novell.ldapchai.provider.ChaiProviderFactorySetting VENDOR_CACHE_MAX_AGE_MS>;
v7 = <com.novell.ldapchai.provider.ChaiProviderFactorySetting: com.novell.ldapchai.provider.ChaiProviderFactorySetting VENDOR_CACHE_MAX_AGE_MS>;
v8 = virtualinvoke v7.<com.novell.ldapchai.provider.ChaiProviderFactorySetting: java.lang.String getDefaultValue()>();
v9 = interfaceinvoke v5.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(v6, v8);
v10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v9);
v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: int maxVendorCacheAgeMs> = v10;
v11 = new com.novell.ldapchai.provider.WatchdogService;
specialinvoke v11.<com.novell.ldapchai.provider.WatchdogService: void <init>(com.novell.ldapchai.provider.ChaiProviderFactory)>(v1);
v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.WatchdogService watchdogService> = v11;
return;
}
void addVendorCache(com.novell.ldapchai.provider.ChaiConfiguration, com.novell.ldapchai.provider.DirectoryVendor)
{
com.novell.ldapchai.provider.DirectoryVendor v2;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
java.util.Map v11, v13, v6, v8;
int v12, v3;
java.lang.String v5;
boolean v7;
java.util.Iterator v15;
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ChaiProviderFactory$VendorCacheInfo v9;
java.util.Set v14;
com.novell.ldapchai.provider.ChaiSetting v4;
java.time.Instant v10;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
v2 := @parameter1: com.novell.ldapchai.provider.DirectoryVendor;
v3 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: int maxVendorCacheAgeMs>;
if v3 <= 0 goto label2;
v4 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
v5 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v4);
v6 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap>;
v7 = interfaceinvoke v6.<java.util.Map: boolean containsKey(java.lang.Object)>(v5);
if v7 != 0 goto label1;
v8 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap>;
v9 = new com.novell.ldapchai.provider.ChaiProviderFactory$VendorCacheInfo;
v10 = staticinvoke <java.time.Instant: java.time.Instant now()>();
specialinvoke v9.<com.novell.ldapchai.provider.ChaiProviderFactory$VendorCacheInfo: void <init>(java.time.Instant,com.novell.ldapchai.provider.DirectoryVendor)>(v10, v2);
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v9);
label1:
v11 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap>;
v12 = interfaceinvoke v11.<java.util.Map: int size()>();
if v12 <= 100 goto label2;
v13 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap>;
v14 = interfaceinvoke v13.<java.util.Map: java.util.Set entrySet()>();
v15 = interfaceinvoke v14.<java.util.Set: java.util.Iterator iterator()>();
interfaceinvoke v15.<java.util.Iterator: void remove()>();
goto label1;
label2:
return;
}
public void close()
{
com.novell.ldapchai.provider.WatchdogService v1;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.WatchdogService watchdogService>;
virtualinvoke v1.<com.novell.ldapchai.provider.WatchdogService: void close()>();
return;
}
com.novell.ldapchai.provider.DirectoryVendor getVendorCache(com.novell.ldapchai.provider.ChaiConfiguration)
{
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ChaiSetting v2;
com.novell.ldapchai.provider.DirectoryVendor v12;
java.time.Instant v6, v8, v9;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
java.util.Map v11, v4;
int v7;
java.lang.Object v5;
java.lang.String v3;
boolean v10;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
v2 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
v3 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v2);
v4 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap>;
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
if v5 == null goto label2;
v6 = virtualinvoke v5.<com.novell.ldapchai.provider.ChaiProviderFactory$VendorCacheInfo: java.time.Instant getTimestamp()>();
v7 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: int maxVendorCacheAgeMs>;
v8 = virtualinvoke v6.<java.time.Instant: java.time.Instant plusMillis(long)>(v7);
v9 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v10 = virtualinvoke v8.<java.time.Instant: boolean isBefore(java.time.Instant)>(v9);
if v10 == 0 goto label1;
v11 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: java.util.Map vendorCacheMap>;
interfaceinvoke v11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v3);
goto label2;
label1:
v12 = virtualinvoke v5.<com.novell.ldapchai.provider.ChaiProviderFactory$VendorCacheInfo: com.novell.ldapchai.provider.DirectoryVendor getVendor()>();
return v12;
label2:
return null;
}
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean getStatsBean()
{
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v1;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean globalStats>;
return v1;
}
com.novell.ldapchai.provider.WatchdogService getWatchdogService()
{
com.novell.ldapchai.provider.WatchdogService v1;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.WatchdogService watchdogService>;
return v1;
}
java.util.Set activeProviders()
{
java.util.HashSet v1;
java.util.Collection v3;
java.util.Set v4;
com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder v2;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 = new java.util.HashSet;
v2 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder activeProviders>;
v3 = virtualinvoke v2.<com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder: java.util.Collection allValues()>();
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v3);
v4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v4;
}
void registerProvider(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder v2;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
v2 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder activeProviders>;
virtualinvoke v2.<com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder: void add(java.lang.Object)>(v1);
return;
}
void deRegisterProvider(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder v2;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v0;
v0 := @this: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
v2 = v0.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder activeProviders>;
virtualinvoke v2.<com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder: void remove(java.lang.Object)>(v1);
return;
}
}