public final enum class com.novell.ldapchai.provider.ChaiSetting extends java.lang.Enum
{
public static final enum com.novell.ldapchai.provider.ChaiSetting BIND_URLS;
public static final enum com.novell.ldapchai.provider.ChaiSetting BIND_DN;
public static final enum com.novell.ldapchai.provider.ChaiSetting BIND_PASSWORD;
public static final enum com.novell.ldapchai.provider.ChaiSetting CACHE_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting CACHE_MAXIMUM_SIZE;
public static final enum com.novell.ldapchai.provider.ChaiSetting CACHE_MAXIMUM_AGE;
public static final enum com.novell.ldapchai.provider.ChaiSetting STATISTICS_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting WATCHDOG_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting THREAD_SAFE_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting WATCHDOG_OPERATION_TIMEOUT;
public static final enum com.novell.ldapchai.provider.ChaiSetting WATCHDOG_IDLE_TIMEOUT;
public static final enum com.novell.ldapchai.provider.ChaiSetting WATCHDOG_MAX_CONNECTION_LIFETIME;
public static final enum com.novell.ldapchai.provider.ChaiSetting WATCHDOG_DISABLE_IF_PW_EXPIRED;
public static final enum com.novell.ldapchai.provider.ChaiSetting PROMISCUOUS_SSL;
public static final enum com.novell.ldapchai.provider.ChaiSetting WIRETRACE_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting FAILOVER_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting FAILOVER_USE_LAST_KNOWN_GOOD_HINT;
public static final enum com.novell.ldapchai.provider.ChaiSetting FAILOVER_MINIMUM_FAILBACK_TIME;
public static final enum com.novell.ldapchai.provider.ChaiSetting FAILOVER_CONNECT_RETRIES;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_DEREFENCE_ALIAS;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_CONNECT_TIMEOUT;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_READ_TIMEOUT;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_FOLLOW_REFERRALS;
public static final enum com.novell.ldapchai.provider.ChaiSetting PROVIDER_IMPLEMENTATION;
public static final enum com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS;
public static final enum com.novell.ldapchai.provider.ChaiSetting EXTENDED_OPERATION_FAILURE_CACHE;
public static final enum com.novell.ldapchai.provider.ChaiSetting READONLY;
public static final enum com.novell.ldapchai.provider.ChaiSetting DEFAULT_VENDOR;
public static final enum com.novell.ldapchai.provider.ChaiSetting JNDI_ENABLE_POOL;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CASE_INSENSITIVE;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_ALLOW_DUPLICATE_RESPONSES;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_DEFAULT_FORMAT_TYPE;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CHAI_STORAGE_ATTRIBUTE;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CHAI_STORAGE_RECORD_ID;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CHAI_ITERATIONS;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CHAI_SALT_CHAR_COUNT;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CHAI_HASH_THREAD_COUNT;
public static final enum com.novell.ldapchai.provider.ChaiSetting AD_SET_POLICY_HINTS_ON_PW_SET;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_ENABLE;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_SIZE;
public static final enum com.novell.ldapchai.provider.ChaiSetting OPENLDAP_PASSWORD_POLICY_DN;
public static final enum com.novell.ldapchai.provider.ChaiSetting OPENLDAP_LOCAL_PASSWORD_POLICY_URL;
public static final enum com.novell.ldapchai.provider.ChaiSetting JNDI_RESOLVE_IN_NAMESPACE;
public static final enum com.novell.ldapchai.provider.ChaiSetting LDAP_CHARACTER_ENCODING;
public static final enum com.novell.ldapchai.provider.ChaiSetting CR_CHAI_SALT_COUNT;
private final java.lang.String key;
private final java.lang.String defaultValue;
private final boolean visible;
private final com.novell.ldapchai.provider.SettingValidator$Validator validator;
private static final com.novell.ldapchai.provider.ChaiSetting[] $VALUES;
public static com.novell.ldapchai.provider.ChaiSetting[] values()
{
com.novell.ldapchai.provider.ChaiSetting[] v0;
java.lang.Object v1;
v0 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.provider.ChaiSetting valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/provider/ChaiSetting;", v0);
return v1;
}
public static com.novell.ldapchai.provider.ChaiSetting forKey(java.lang.String)
{
com.novell.ldapchai.provider.ChaiSetting[] v1;
int v2, v3;
com.novell.ldapchai.provider.ChaiSetting v4;
java.lang.String v0, v5;
boolean v6;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getKey()>();
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v6 == 0 goto label2;
return v4;
label2:
v3 = v3 + 1;
goto label1;
label3:
return null;
}
private void <init>(java.lang.String, int, java.lang.String, java.lang.String, boolean, com.novell.ldapchai.provider.SettingValidator$Validator)
{
int v2;
com.novell.ldapchai.provider.ChaiSetting v0;
java.lang.String v1, v3, v4;
boolean v5;
com.novell.ldapchai.provider.SettingValidator$Validator v6;
v0 := @this: com.novell.ldapchai.provider.ChaiSetting;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: boolean;
v6 := @parameter5: com.novell.ldapchai.provider.SettingValidator$Validator;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String key> = v3;
v0.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String defaultValue> = v4;
v0.<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.SettingValidator$Validator validator> = v6;
v0.<com.novell.ldapchai.provider.ChaiSetting: boolean visible> = v5;
return;
}
public java.lang.String getDefaultValue()
{
com.novell.ldapchai.provider.ChaiSetting v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.ChaiSetting;
v1 = v0.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String defaultValue>;
return v1;
}
public java.lang.String getKey()
{
com.novell.ldapchai.provider.ChaiSetting v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.ChaiSetting;
v1 = v0.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String key>;
return v1;
}
boolean isVisible()
{
com.novell.ldapchai.provider.ChaiSetting v0;
boolean v1;
v0 := @this: com.novell.ldapchai.provider.ChaiSetting;
v1 = v0.<com.novell.ldapchai.provider.ChaiSetting: boolean visible>;
return v1;
}
public void validateValue(java.lang.String)
{
com.novell.ldapchai.provider.ChaiSetting v0;
java.lang.String v1;
com.novell.ldapchai.provider.SettingValidator$Validator v2, v3;
v0 := @this: com.novell.ldapchai.provider.ChaiSetting;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.SettingValidator$Validator validator>;
if v2 != null goto label1;
return;
label1:
v3 = v0.<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.SettingValidator$Validator validator>;
interfaceinvoke v3.<com.novell.ldapchai.provider.SettingValidator$Validator: void validate(java.lang.String)>(v1);
return;
}
private static com.novell.ldapchai.provider.ChaiSetting[] $values()
{
com.novell.ldapchai.provider.ChaiSetting[] v0;
com.novell.ldapchai.provider.ChaiSetting v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v45, v5, v6, v7, v8, v9;
v0 = newarray (com.novell.ldapchai.provider.ChaiSetting)[45];
v1 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
v0[0] = v1;
v2 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_DN>;
v0[1] = v2;
v3 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_PASSWORD>;
v0[2] = v3;
v4 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CACHE_ENABLE>;
v0[3] = v4;
v5 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CACHE_MAXIMUM_SIZE>;
v0[4] = v5;
v6 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CACHE_MAXIMUM_AGE>;
v0[5] = v6;
v7 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting STATISTICS_ENABLE>;
v0[6] = v7;
v8 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_ENABLE>;
v0[7] = v8;
v9 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting THREAD_SAFE_ENABLE>;
v0[8] = v9;
v10 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_OPERATION_TIMEOUT>;
v0[9] = v10;
v11 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_IDLE_TIMEOUT>;
v0[10] = v11;
v12 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_MAX_CONNECTION_LIFETIME>;
v0[11] = v12;
v13 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_DISABLE_IF_PW_EXPIRED>;
v0[12] = v13;
v14 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting PROMISCUOUS_SSL>;
v0[13] = v14;
v15 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WIRETRACE_ENABLE>;
v0[14] = v15;
v16 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_ENABLE>;
v0[15] = v16;
v17 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_USE_LAST_KNOWN_GOOD_HINT>;
v0[16] = v17;
v18 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_MINIMUM_FAILBACK_TIME>;
v0[17] = v18;
v19 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_CONNECT_RETRIES>;
v0[18] = v19;
v20 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_DEREFENCE_ALIAS>;
v0[19] = v20;
v21 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_CONNECT_TIMEOUT>;
v0[20] = v21;
v22 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_READ_TIMEOUT>;
v0[21] = v22;
v23 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_FOLLOW_REFERRALS>;
v0[22] = v23;
v24 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting PROVIDER_IMPLEMENTATION>;
v0[23] = v24;
v25 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS>;
v0[24] = v25;
v26 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EXTENDED_OPERATION_FAILURE_CACHE>;
v0[25] = v26;
v27 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting READONLY>;
v0[26] = v27;
v28 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting DEFAULT_VENDOR>;
v0[27] = v28;
v29 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting JNDI_ENABLE_POOL>;
v0[28] = v29;
v30 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CASE_INSENSITIVE>;
v0[29] = v30;
v31 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_ALLOW_DUPLICATE_RESPONSES>;
v0[30] = v31;
v32 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_DEFAULT_FORMAT_TYPE>;
v0[31] = v32;
v33 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_STORAGE_ATTRIBUTE>;
v0[32] = v33;
v34 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_STORAGE_RECORD_ID>;
v0[33] = v34;
v35 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_ITERATIONS>;
v0[34] = v35;
v36 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_SALT_CHAR_COUNT>;
v0[35] = v36;
v37 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_HASH_THREAD_COUNT>;
v0[36] = v37;
v38 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting AD_SET_POLICY_HINTS_ON_PW_SET>;
v0[37] = v38;
v39 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_ENABLE>;
v0[38] = v39;
v40 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_SIZE>;
v0[39] = v40;
v41 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting OPENLDAP_PASSWORD_POLICY_DN>;
v0[40] = v41;
v42 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting OPENLDAP_LOCAL_PASSWORD_POLICY_URL>;
v0[41] = v42;
v43 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting JNDI_RESOLVE_IN_NAMESPACE>;
v0[42] = v43;
v44 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_CHARACTER_ENCODING>;
v0[43] = v44;
v45 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_SALT_COUNT>;
v0[44] = v45;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.provider.ChaiSetting[] v84;
com.novell.ldapchai.cr.Answer$FormatType v60;
com.novell.ldapchai.provider.SettingValidator$Validator v1, v10, v12, v14, v16, v18, v20, v22, v24, v26, v28, v30, v32, v34, v37, v39, v41, v46, v48, v50, v52, v54, v56, v58, v6, v62, v66, v68, v70, v72, v74, v76, v8, v80, v83;
java.lang.String v44, v61;
com.novell.ldapchai.provider.ChaiSetting v0, v11, v13, v15, v17, v19, v2, v21, v23, v25, v27, v29, v3, v31, v33, v35, v36, v38, v4, v40, v42, v45, v47, v49, v5, v51, v53, v55, v57, v59, v63, v64, v65, v67, v69, v7, v71, v73, v75, v77, v78, v79, v81, v82, v9;
java.lang.Class v43;
v0 = new com.novell.ldapchai.provider.ChaiSetting;
v1 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting$lambda_static_8f5658d8_1__128: com.novell.ldapchai.provider.SettingValidator$Validator bootstrap$()>();
specialinvoke v0.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("BIND_URLS", 0, "chai.bind.URLs", "ldap://localhost", 1, v1);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS> = v0;
v2 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v2.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("BIND_DN", 1, "chai.bind.dn", "", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_DN> = v2;
v3 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v3.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("BIND_PASSWORD", 2, "chai.bind.password", "", 0, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_PASSWORD> = v3;
v4 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v4.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CACHE_ENABLE", 3, "chai.cache.enable", "false", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CACHE_ENABLE> = v4;
v5 = new com.novell.ldapchai.provider.ChaiSetting;
v6 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v5.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CACHE_MAXIMUM_SIZE", 4, "chai.cache.maximumSize", "128", 1, v6);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CACHE_MAXIMUM_SIZE> = v5;
v7 = new com.novell.ldapchai.provider.ChaiSetting;
v8 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v7.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CACHE_MAXIMUM_AGE", 5, "chai.cache.maximumAge", "1000", 1, v8);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CACHE_MAXIMUM_AGE> = v7;
v9 = new com.novell.ldapchai.provider.ChaiSetting;
v10 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v9.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("STATISTICS_ENABLE", 6, "chai.statistics.enable", "true", 1, v10);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting STATISTICS_ENABLE> = v9;
v11 = new com.novell.ldapchai.provider.ChaiSetting;
v12 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v11.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("WATCHDOG_ENABLE", 7, "chai.watchdog.enable", "true", 1, v12);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_ENABLE> = v11;
v13 = new com.novell.ldapchai.provider.ChaiSetting;
v14 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v13.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("THREAD_SAFE_ENABLE", 8, "chai.threadSafe.enable", "true", 1, v14);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting THREAD_SAFE_ENABLE> = v13;
v15 = new com.novell.ldapchai.provider.ChaiSetting;
v16 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v15.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("WATCHDOG_OPERATION_TIMEOUT", 9, "chai.watchdog.operationTimeout", "60000", 1, v16);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_OPERATION_TIMEOUT> = v15;
v17 = new com.novell.ldapchai.provider.ChaiSetting;
v18 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v17.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("WATCHDOG_IDLE_TIMEOUT", 10, "chai.watchdog.idleTimeout", "30000", 1, v18);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_IDLE_TIMEOUT> = v17;
v19 = new com.novell.ldapchai.provider.ChaiSetting;
v20 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v19.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("WATCHDOG_MAX_CONNECTION_LIFETIME", 11, "chai.watchdog.maxConnectionLifetime", "3300000", 1, v20);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_MAX_CONNECTION_LIFETIME> = v19;
v21 = new com.novell.ldapchai.provider.ChaiSetting;
v22 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v21.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("WATCHDOG_DISABLE_IF_PW_EXPIRED", 12, "chai.watchdog.disableIfPwExpired", "true", 1, v22);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_DISABLE_IF_PW_EXPIRED> = v21;
v23 = new com.novell.ldapchai.provider.ChaiSetting;
v24 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v23.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("PROMISCUOUS_SSL", 13, "chai.connection.promiscuousSSL", "false", 1, v24);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting PROMISCUOUS_SSL> = v23;
v25 = new com.novell.ldapchai.provider.ChaiSetting;
v26 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v25.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("WIRETRACE_ENABLE", 14, "chai.wireDebug.enable", "false", 1, v26);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WIRETRACE_ENABLE> = v25;
v27 = new com.novell.ldapchai.provider.ChaiSetting;
v28 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v27.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("FAILOVER_ENABLE", 15, "chai.failover.enable", "true", 1, v28);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_ENABLE> = v27;
v29 = new com.novell.ldapchai.provider.ChaiSetting;
v30 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v29.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("FAILOVER_USE_LAST_KNOWN_GOOD_HINT", 16, "chai.failover.useLastKnownGoodHint", "true", 1, v30);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_USE_LAST_KNOWN_GOOD_HINT> = v29;
v31 = new com.novell.ldapchai.provider.ChaiSetting;
v32 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v31.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("FAILOVER_MINIMUM_FAILBACK_TIME", 17, "chai.failover.failBackTime", "90000", 1, v32);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_MINIMUM_FAILBACK_TIME> = v31;
v33 = new com.novell.ldapchai.provider.ChaiSetting;
v34 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v33.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("FAILOVER_CONNECT_RETRIES", 18, "chai.failover.connectRetries", "4", 1, v34);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_CONNECT_RETRIES> = v33;
v35 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v35.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_DEREFENCE_ALIAS", 19, "chai.ldap.dereferenceAliases", "never", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_DEREFENCE_ALIAS> = v35;
v36 = new com.novell.ldapchai.provider.ChaiSetting;
v37 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v36.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_CONNECT_TIMEOUT", 20, "chai.ldap.ldapTimeout", "5000", 1, v37);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_CONNECT_TIMEOUT> = v36;
v38 = new com.novell.ldapchai.provider.ChaiSetting;
v39 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v38.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_READ_TIMEOUT", 21, "chai.ldap.ldapReadTimeout", "0", 1, v39);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_READ_TIMEOUT> = v38;
v40 = new com.novell.ldapchai.provider.ChaiSetting;
v41 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v40.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_FOLLOW_REFERRALS", 22, "chai.ldap.followReferrals", "false", 1, v41);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_FOLLOW_REFERRALS> = v40;
v42 = new com.novell.ldapchai.provider.ChaiSetting;
v43 = class "Lcom/novell/ldapchai/provider/JNDIProviderImpl;";
v44 = virtualinvoke v43.<java.lang.Class: java.lang.String getName()>();
specialinvoke v42.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("PROVIDER_IMPLEMENTATION", 23, "chai.provider.implementation", v44, 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting PROVIDER_IMPLEMENTATION> = v42;
v45 = new com.novell.ldapchai.provider.ChaiSetting;
v46 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v45.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("EDIRECTORY_ENABLE_NMAS", 24, "chai.edirectory.enableNMAS", "false", 1, v46);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS> = v45;
v47 = new com.novell.ldapchai.provider.ChaiSetting;
v48 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v47.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("EXTENDED_OPERATION_FAILURE_CACHE", 25, "chai.provider.extendedOperation.failureCache", "true", 1, v48);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EXTENDED_OPERATION_FAILURE_CACHE> = v47;
v49 = new com.novell.ldapchai.provider.ChaiSetting;
v50 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v49.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("READONLY", 26, "chai.provider.readonly", "false", 1, v50);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting READONLY> = v49;
v51 = new com.novell.ldapchai.provider.ChaiSetting;
v52 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting$lambda_static_fa09f0f6_1__129: com.novell.ldapchai.provider.SettingValidator$Validator bootstrap$()>();
specialinvoke v51.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("DEFAULT_VENDOR", 27, "chai.vendor.default", "", 1, v52);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting DEFAULT_VENDOR> = v51;
v53 = new com.novell.ldapchai.provider.ChaiSetting;
v54 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v53.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("JNDI_ENABLE_POOL", 28, "chai.provider.jndi.enablePool", "false", 1, v54);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting JNDI_ENABLE_POOL> = v53;
v55 = new com.novell.ldapchai.provider.ChaiSetting;
v56 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v55.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CASE_INSENSITIVE", 29, "chai.crsetting.caseInsensitive", "true", 1, v56);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CASE_INSENSITIVE> = v55;
v57 = new com.novell.ldapchai.provider.ChaiSetting;
v58 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v57.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_ALLOW_DUPLICATE_RESPONSES", 30, "chai.crsetting.allowDuplicateResponses", "false", 1, v58);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_ALLOW_DUPLICATE_RESPONSES> = v57;
v59 = new com.novell.ldapchai.provider.ChaiSetting;
v60 = <com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$FormatType PBKDF2_SHA512>;
v61 = virtualinvoke v60.<com.novell.ldapchai.cr.Answer$FormatType: java.lang.String toString()>();
v62 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v59.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_DEFAULT_FORMAT_TYPE", 31, "chai.crsetting.defaultFormatType", v61, 1, v62);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_DEFAULT_FORMAT_TYPE> = v59;
v63 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v63.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CHAI_STORAGE_ATTRIBUTE", 32, "chai.com.novell.ldapchai.cr.chai.attributeName", "carLicense", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_STORAGE_ATTRIBUTE> = v63;
v64 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v64.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CHAI_STORAGE_RECORD_ID", 33, "chai.com.novell.ldapchai.cr.chai.recordId", "0002", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_STORAGE_RECORD_ID> = v64;
v65 = new com.novell.ldapchai.provider.ChaiSetting;
v66 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v65.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CHAI_ITERATIONS", 34, "chai.com.novell.ldapchai.cr.chai.iterations", "0", 1, v66);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_ITERATIONS> = v65;
v67 = new com.novell.ldapchai.provider.ChaiSetting;
v68 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v67.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CHAI_SALT_CHAR_COUNT", 35, "chai.com.novell.ldapchai.cr.chai.saltCharCount", "0", 1, v68);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_SALT_CHAR_COUNT> = v67;
v69 = new com.novell.ldapchai.provider.ChaiSetting;
v70 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v69.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CHAI_HASH_THREAD_COUNT", 36, "chai.com.novell.ldapchai.cr.chai.hashTreadCount", "0", 1, v70);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_HASH_THREAD_COUNT> = v69;
v71 = new com.novell.ldapchai.provider.ChaiSetting;
v72 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v71.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("AD_SET_POLICY_HINTS_ON_PW_SET", 37, "chai.ad.setPolicyHintsOnPwSet", "false", 1, v72);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting AD_SET_POLICY_HINTS_ON_PW_SET> = v71;
v73 = new com.novell.ldapchai.provider.ChaiSetting;
v74 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator AUTO_OR_BOOLEAN_VALIDATOR>;
specialinvoke v73.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_SEARCH_PAGING_ENABLE", 38, "chai.ldap.paging.enable", "auto", 1, v74);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_ENABLE> = v73;
v75 = new com.novell.ldapchai.provider.ChaiSetting;
v76 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v75.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_SEARCH_PAGING_SIZE", 39, "chai.ldap.paging.size", "500", 1, v76);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_SIZE> = v75;
v77 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v77.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("OPENLDAP_PASSWORD_POLICY_DN", 40, "chai.openldap.passwordPolicyDn", "", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting OPENLDAP_PASSWORD_POLICY_DN> = v77;
v78 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v78.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("OPENLDAP_LOCAL_PASSWORD_POLICY_URL", 41, "chai.openldap.passwordPolicy.url", "file:/etc/openldap/check_password.conf", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting OPENLDAP_LOCAL_PASSWORD_POLICY_URL> = v78;
v79 = new com.novell.ldapchai.provider.ChaiSetting;
v80 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator BOOLEAN_VALIDATOR>;
specialinvoke v79.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("JNDI_RESOLVE_IN_NAMESPACE", 42, "chai.jndi.resolveInNamespace", "true", 1, v80);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting JNDI_RESOLVE_IN_NAMESPACE> = v79;
v81 = new com.novell.ldapchai.provider.ChaiSetting;
specialinvoke v81.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("LDAP_CHARACTER_ENCODING", 43, "chai.ldap.characterEncoding", "UTF8", 1, null);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_CHARACTER_ENCODING> = v81;
v82 = new com.novell.ldapchai.provider.ChaiSetting;
v83 = <com.novell.ldapchai.provider.SettingValidator: com.novell.ldapchai.provider.SettingValidator$Validator INTEGER_VALIDATOR>;
specialinvoke v82.<com.novell.ldapchai.provider.ChaiSetting: void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean,com.novell.ldapchai.provider.SettingValidator$Validator)>("CR_CHAI_SALT_COUNT", 44, "chai.cr.chai.saltCount", "1000", 1, v83);
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting CR_CHAI_SALT_COUNT> = v82;
v84 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting[] $values()>();
<com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting[] $VALUES> = v84;
return;
}
}