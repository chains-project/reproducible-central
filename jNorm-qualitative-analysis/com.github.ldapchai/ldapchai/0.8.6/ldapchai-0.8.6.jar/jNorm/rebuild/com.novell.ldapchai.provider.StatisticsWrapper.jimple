class com.novell.ldapchai.provider.StatisticsWrapper extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private final com.novell.ldapchai.provider.ChaiProviderImplementor realProvider;
private final com.novell.ldapchai.provider.StatisticsWrapper$StatsBean statisticsProvider;
static com.novell.ldapchai.provider.ChaiProviderImplementor forProvider(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
java.lang.Class[] v9;
com.novell.ldapchai.provider.ChaiProviderImplementor v0;
java.util.function.Supplier v5;
java.lang.Class v1, v6, v8;
java.lang.Object v11;
java.lang.ClassLoader v7;
com.novell.ldapchai.provider.StatisticsWrapper v10;
boolean v2, v3;
com.novell.ldapchai.util.internal.ChaiLogger v4;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(v1);
if v2 == 0 goto label1;
v3 = v0 instanceof com.novell.ldapchai.provider.StatisticsWrapper;
if v3 == 0 goto label1;
v4 = <com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v5 = staticinvoke <com.novell.ldapchai.provider.StatisticsWrapper$lambda_forProvider_0__165: java.util.function.Supplier bootstrap$()>();
virtualinvoke v4.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v5);
return v0;
label1:
v6 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.Class[] getInterfaces()>();
v10 = new com.novell.ldapchai.provider.StatisticsWrapper;
specialinvoke v10.<com.novell.ldapchai.provider.StatisticsWrapper: void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v0);
v11 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(v7, v9, v10);
return v11;
}
public com.novell.ldapchai.provider.ProviderStatistics getGlobalStatistics()
{
com.novell.ldapchai.provider.StatisticsWrapper v0;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v1;
v0 := @this: com.novell.ldapchai.provider.StatisticsWrapper;
v1 = specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean getGlobalStatsBean()>();
return v1;
}
private com.novell.ldapchai.provider.StatisticsWrapper$StatsBean getGlobalStatsBean()
{
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.StatisticsWrapper v0;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v3;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v4;
com.novell.ldapchai.provider.ChaiProviderFactory v2;
v0 := @this: com.novell.ldapchai.provider.StatisticsWrapper;
v1 = v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.ChaiProviderImplementor realProvider>;
v2 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProviderImplementor: com.novell.ldapchai.provider.ChaiProviderFactory getProviderFactory()>();
v3 = virtualinvoke v2.<com.novell.ldapchai.provider.ChaiProviderFactory: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService getCentralService()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean getStatsBean()>();
return v4;
}
private void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.StatisticsWrapper v0;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v2;
v0 := @this: com.novell.ldapchai.provider.StatisticsWrapper;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new com.novell.ldapchai.provider.StatisticsWrapper$StatsBean;
specialinvoke v2.<com.novell.ldapchai.provider.StatisticsWrapper$StatsBean: void <init>()>();
v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean statisticsProvider> = v2;
v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.ChaiProviderImplementor realProvider> = v1;
return;
}
public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
{
java.lang.Throwable v23, v27;
java.lang.Object[] v3;
com.novell.ldapchai.provider.ChaiProviderImplementor v19;
com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic v15, v16, v17, v26, v9;
java.lang.String v6;
java.lang.reflect.Method v2;
boolean v11, v12, v14, v24, v5, v7;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v8;
java.lang.reflect.InvocationTargetException v22;
java.lang.'annotation'.Annotation v10, v13, v4;
java.lang.Object v1, v20;
com.novell.ldapchai.provider.StatisticsWrapper v0;
com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic v18, v21, v25, v28;
v0 := @this: com.novell.ldapchai.provider.StatisticsWrapper;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.reflect.Method;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/novell/ldapchai/provider/ChaiProvider$LdapOperation;");
if v4 == null goto label01;
v5 = 1;
goto label02;
label01:
v5 = 0;
label02:
v6 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.String getName()>();
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>("getProviderStatistics");
if v7 == 0 goto label03;
v8 = v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean statisticsProvider>;
return v8;
label03:
if v5 == 0 goto label11;
v9 = <com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic: com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic OPERATION_COUNT>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void incrementStat(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v9);
v10 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/novell/ldapchai/provider/ChaiProvider$ModifyOperation;");
if v10 == null goto label04;
v11 = 1;
goto label05;
label04:
v11 = 0;
label05:
v12 = v11;
v13 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/novell/ldapchai/provider/ChaiProvider$SearchOperation;");
if v13 == null goto label06;
v14 = 1;
goto label07;
label06:
v14 = 0;
label07:
if v12 == 0 goto label08;
v15 = <com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic: com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic MODIFY_COUNT>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void incrementStat(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v15);
goto label10;
label08:
if v14 == 0 goto label09;
v16 = <com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic: com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic SEARCH_COUNT>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void incrementStat(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v16);
goto label10;
label09:
v17 = <com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic: com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic READ_COUNT>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void incrementStat(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v17);
label10:
v18 = <com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic: com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic LAST_OPERATION_BEGIN>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)>(v18);
label11:
v19 = v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.ChaiProviderImplementor realProvider>;
v20 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v19, v3);
label12:
v21 = <com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic: com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic LAST_OPERATION_FINISH>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)>(v21);
return v20;
label13:
v22 := @caughtexception;
v23 = virtualinvoke v22.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
v24 = v23 instanceof com.novell.ldapchai.exception.ChaiUnavailableException;
if v24 == 0 goto label14;
v25 = <com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic: com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic LAST_UNAVAILABLE_EXCEPTION>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)>(v25);
v26 = <com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic: com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic UNAVAILABLE_COUNT>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void incrementStat(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v26);
label14:
throw v23;
label15:
v27 := @caughtexception;
v28 = <com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic: com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic LAST_OPERATION_FINISH>;
specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)>(v28);
throw v27;
catch java.lang.reflect.InvocationTargetException from label11 to label12 with label13;
catch java.lang.Throwable from label11 to label12 with label15;
}
private void incrementStat(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)
{
com.novell.ldapchai.provider.StatisticsWrapper v0;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v2, v3;
com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic v1;
v0 := @this: com.novell.ldapchai.provider.StatisticsWrapper;
v1 := @parameter0: com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic;
v2 = v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean statisticsProvider>;
virtualinvoke v2.<com.novell.ldapchai.provider.StatisticsWrapper$StatsBean: void incrementStatistic(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v1);
v3 = specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean getGlobalStatsBean()>();
virtualinvoke v3.<com.novell.ldapchai.provider.StatisticsWrapper$StatsBean: void incrementStatistic(com.novell.ldapchai.provider.ProviderStatistics$IncrementerStatistic)>(v1);
return;
}
private void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)
{
com.novell.ldapchai.provider.StatisticsWrapper v0;
com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic v1;
com.novell.ldapchai.provider.StatisticsWrapper$StatsBean v2, v3;
v0 := @this: com.novell.ldapchai.provider.StatisticsWrapper;
v1 := @parameter0: com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic;
v2 = v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean statisticsProvider>;
virtualinvoke v2.<com.novell.ldapchai.provider.StatisticsWrapper$StatsBean: void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)>(v1);
v3 = specialinvoke v0.<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.provider.StatisticsWrapper$StatsBean getGlobalStatsBean()>();
virtualinvoke v3.<com.novell.ldapchai.provider.StatisticsWrapper$StatsBean: void markTimestampStatistic(com.novell.ldapchai.provider.ProviderStatistics$TimestampStatistic)>(v1);
return;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/provider/StatisticsWrapper;");
<com.novell.ldapchai.provider.StatisticsWrapper: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}