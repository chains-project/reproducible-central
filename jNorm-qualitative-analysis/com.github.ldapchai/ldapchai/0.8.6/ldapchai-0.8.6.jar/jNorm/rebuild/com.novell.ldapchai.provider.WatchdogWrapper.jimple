class com.novell.ldapchai.provider.WatchdogWrapper extends java.lang.Object implements com.novell.ldapchai.provider.ChaiProviderImplementor
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private static final java.util.concurrent.atomic.AtomicInteger ID_COUNTER;
private final java.lang.String identifier;
private final com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder;
private final com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration;
private final com.novell.ldapchai.provider.ChaiProviderFactory chaiProviderFactory;
private final com.novell.ldapchai.provider.WatchdogWrapper$Settings settings;
private void <init>(com.novell.ldapchai.provider.ChaiProviderFactory, com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.WatchdogWrapper$Settings v11, v8;
com.novell.ldapchai.provider.WatchdogProviderHolder v9;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.ChaiConfiguration v6, v7;
com.novell.ldapchai.provider.ChaiProviderImplementor v2;
com.novell.ldapchai.provider.ChaiProviderFactory$CentralService v12;
com.novell.ldapchai.provider.ChaiProviderFactory v1;
com.novell.ldapchai.provider.WatchdogService v13;
java.util.concurrent.atomic.AtomicInteger v3;
int v4;
java.lang.String v10, v5;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderFactory;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProviderImplementor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = <com.novell.ldapchai.provider.WatchdogWrapper: java.util.concurrent.atomic.AtomicInteger ID_COUNTER>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("w\u0001");
v0.<com.novell.ldapchai.provider.WatchdogWrapper: java.lang.String identifier> = v5;
v6 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProviderImplementor: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration> = v6;
v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.ChaiProviderFactory chaiProviderFactory> = v1;
v7 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration>;
v8 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$Settings: com.novell.ldapchai.provider.WatchdogWrapper$Settings fromConfig(com.novell.ldapchai.provider.ChaiConfiguration)>(v7);
v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogWrapper$Settings settings> = v8;
v9 = new com.novell.ldapchai.provider.WatchdogProviderHolder;
v10 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: java.lang.String identifier>;
v11 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogWrapper$Settings settings>;
specialinvoke v9.<com.novell.ldapchai.provider.WatchdogProviderHolder: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProviderImplementor,com.novell.ldapchai.provider.WatchdogWrapper$Settings)>(v10, v2, v11);
v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder> = v9;
v12 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiProviderFactory: com.novell.ldapchai.provider.ChaiProviderFactory$CentralService getCentralService()>();
v13 = virtualinvoke v12.<com.novell.ldapchai.provider.ChaiProviderFactory$CentralService: com.novell.ldapchai.provider.WatchdogService getWatchdogService()>();
virtualinvoke v13.<com.novell.ldapchai.provider.WatchdogService: void registerInstance(com.novell.ldapchai.provider.WatchdogWrapper)>(v0);
return;
}
static com.novell.ldapchai.provider.ChaiProviderImplementor forProvider(com.novell.ldapchai.provider.ChaiProviderFactory, com.novell.ldapchai.provider.ChaiProviderImplementor)
{
java.lang.IllegalStateException v10;
com.novell.ldapchai.provider.WatchdogWrapper v14;
com.novell.ldapchai.provider.ChaiConfiguration v2;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.ChaiSetting v3;
java.util.function.Supplier v13, v9;
com.novell.ldapchai.provider.ChaiProviderFactory v0;
java.lang.String v4, v6, v7;
boolean v11, v5;
com.novell.ldapchai.util.internal.ChaiLogger v12, v8;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiProviderFactory;
v1 := @parameter1: com.novell.ldapchai.provider.ChaiProviderImplementor;
v2 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProviderImplementor: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v3 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_ENABLE>;
v4 = virtualinvoke v2.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v3);
v5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(v4);
if v5 != 0 goto label1;
v6 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProviderImplementor: java.lang.String getIdentifier()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("attempt to obtain WatchdogWrapper wrapper when watchdog is not enabled in chai config id=\u0001");
v8 = <com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v9 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_forProvider_0__184: java.util.function.Supplier bootstrap$(java.lang.String)>(v7);
virtualinvoke v8.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v9);
v10 = new java.lang.IllegalStateException;
specialinvoke v10.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v10;
label1:
v11 = v1 instanceof com.novell.ldapchai.provider.WatchdogWrapper;
if v11 == 0 goto label2;
v12 = <com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v13 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_forProvider_1__183: java.util.function.Supplier bootstrap$(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v1);
virtualinvoke v12.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v13);
return v1;
label2:
v14 = new com.novell.ldapchai.provider.WatchdogWrapper;
specialinvoke v14.<com.novell.ldapchai.provider.WatchdogWrapper: void <init>(com.novell.ldapchai.provider.ChaiProviderFactory,com.novell.ldapchai.provider.ChaiProviderImplementor)>(v0, v1);
return v14;
}
public java.lang.Object getConnectionObject() throws java.lang.Exception
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v2;
com.novell.ldapchai.provider.WatchdogProviderHolder v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v2 = virtualinvoke v1.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object getConnectionObject()>();
return v2;
}
public com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState getConnectionState()
{
com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState v3, v4;
com.novell.ldapchai.provider.WatchdogProviderHolder v1;
com.novell.ldapchai.provider.WatchdogWrapper v0;
boolean v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v2 = virtualinvoke v1.<com.novell.ldapchai.provider.WatchdogProviderHolder: boolean isConnected()>();
if v2 == 0 goto label1;
v3 = <com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState: com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState CLOSED>;
return v3;
label1:
v4 = <com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState: com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState OPEN>;
return v4;
}
public java.lang.String getCurrentConnectionURL()
{
java.util.List v2;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.ChaiConfiguration v1;
java.lang.Object v3;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = virtualinvoke v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v2 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.List bindURLsAsList()>();
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(0);
return v3;
}
public boolean errorIsRetryable(java.lang.Exception)
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.IllegalStateException v2;
java.lang.Exception v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.Exception;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not implemented");
throw v2;
}
public void init(com.novell.ldapchai.provider.ChaiConfiguration, com.novell.ldapchai.provider.ChaiProviderFactory) throws com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ChaiProviderFactory v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProviderFactory;
return;
}
public java.lang.String getIdentifier()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: java.lang.String identifier>;
return v1;
}
public void close()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
if v1 == null goto label1;
v2 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
virtualinvoke v2.<com.novell.ldapchai.provider.WatchdogProviderHolder: void close()>();
label1:
return;
}
public boolean compareStringAttribute(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v4;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v5;
java.lang.Object v6;
java.lang.String v1, v2, v3;
boolean v7;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v5 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_compareStringAttribute_2__185: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
v6 = virtualinvoke v4.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
return v7;
}
public void createEntry(java.lang.String, java.lang.String, java.util.Map) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v4;
java.util.Map v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v5;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Map;
v4 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v5 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_createEntry_3__186: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.util.Map)>(v1, v2, v3);
virtualinvoke v4.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v5);
return;
}
public void createEntry(java.lang.String, java.util.Set, java.util.Map) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v4;
java.util.Map v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.util.Set v2;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v5;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: java.util.Map;
v4 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v5 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_createEntry_4__187: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.util.Set,java.util.Map)>(v1, v2, v3);
virtualinvoke v4.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v5);
return;
}
public void renameEntry(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v4;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v5;
java.lang.String v1, v2, v3;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v5 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_renameEntry_5__188: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
virtualinvoke v4.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v5);
return;
}
public void deleteEntry(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v2;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v3;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v3 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_deleteEntry_6__189: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String)>(v1);
virtualinvoke v2.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v3);
return;
}
public void deleteStringAttributeValue(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v4;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v5;
java.lang.String v1, v2, v3;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v5 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_deleteStringAttributeValue_7__190: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
virtualinvoke v4.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v5);
return;
}
public javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v2;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v4;
javax.naming.ldap.ExtendedRequest v1;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v3;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: javax.naming.ldap.ExtendedRequest;
v2 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v3 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(javax.naming.ldap.ExtendedRequest)>(v1);
v4 = virtualinvoke v2.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v3);
return v4;
}
public com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.ChaiConfiguration v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration>;
return v1;
}
public com.novell.ldapchai.provider.ProviderStatistics getProviderStatistics()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
return null;
}
public byte[][] readMultiByteAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v5;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v4;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v4 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_readMultiByteAttribute_9__192: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String)>(v1, v2);
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v4);
return v5;
}
public java.util.Set readMultiStringAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v5;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v4;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v4 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_readMultiStringAttribute_10__193: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String)>(v1, v2);
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v4);
return v5;
}
public java.lang.String readStringAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v5;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v4;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v4 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_readStringAttribute_11__194: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String)>(v1, v2);
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v4);
return v5;
}
public java.util.Map readStringAttributes(java.lang.String, java.util.Set) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.util.Set v2;
java.lang.Object v5;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v4;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v4 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_readStringAttributes_12__195: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.util.Set)>(v1, v2);
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v4);
return v5;
}
public void replaceStringAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v5;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v6;
java.lang.String v1, v2, v3, v4;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v6 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_replaceStringAttribute_13__196: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3, v4);
virtualinvoke v5.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v6);
return;
}
public java.util.Map search(java.lang.String, com.novell.ldapchai.util.SearchHelper) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.util.SearchHelper v2;
com.novell.ldapchai.provider.WatchdogProviderHolder v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v5;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v4;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
v3 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v4 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_search_14__197: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v1, v2);
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v4);
return v5;
}
public java.util.Map search(java.lang.String, java.lang.String, java.util.Set, com.novell.ldapchai.provider.SearchScope) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v5;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.util.Set v3;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v6;
java.lang.Object v7;
java.lang.String v1, v2;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: com.novell.ldapchai.provider.SearchScope;
v5 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v6 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_search_15__198: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v1, v2, v3, v4);
v7 = virtualinvoke v5.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v6);
return v7;
}
public java.util.Map searchMultiValues(java.lang.String, com.novell.ldapchai.util.SearchHelper) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.util.SearchHelper v2;
com.novell.ldapchai.provider.WatchdogProviderHolder v3;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.Object v5;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v4;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
v3 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v4 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_searchMultiValues_16__199: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v1, v2);
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v4);
return v5;
}
public java.util.Map searchMultiValues(java.lang.String, java.lang.String, java.util.Set, com.novell.ldapchai.provider.SearchScope) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v5;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.util.Set v3;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v6;
java.lang.Object v7;
java.lang.String v1, v2;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: com.novell.ldapchai.provider.SearchScope;
v5 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v6 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_searchMultiValues_17__200: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v1, v2, v3, v4);
v7 = virtualinvoke v5.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v6);
return v7;
}
public void writeBinaryAttribute(java.lang.String, java.lang.String, byte[][], boolean) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[][] v3;
com.novell.ldapchai.provider.WatchdogProviderHolder v5;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v6;
java.lang.String v1, v2;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[][];
v4 := @parameter3: boolean;
v5 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v6 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_writeBinaryAttribute_18__201: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,byte[][],boolean)>(v1, v2, v3, v4);
virtualinvoke v5.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v6);
return;
}
public void writeBinaryAttribute(java.lang.String, java.lang.String, byte[][], boolean, com.novell.ldapchai.ChaiRequestControl[]) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v6;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v7;
byte[][] v3;
com.novell.ldapchai.ChaiRequestControl[] v5;
java.lang.String v1, v2;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[][];
v4 := @parameter3: boolean;
v5 := @parameter4: com.novell.ldapchai.ChaiRequestControl[];
v6 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v7 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_writeBinaryAttribute_19__202: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,byte[][],boolean,com.novell.ldapchai.ChaiRequestControl[])>(v1, v2, v3, v4, v5);
virtualinvoke v6.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v7);
return;
}
public void writeStringAttribute(java.lang.String, java.lang.String, java.util.Set, boolean) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v5;
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.util.Set v3;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v6;
java.lang.String v1, v2;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: boolean;
v5 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v6 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_writeStringAttribute_20__203: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,java.util.Set,boolean)>(v1, v2, v3, v4);
virtualinvoke v5.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v6);
return;
}
public void writeStringAttributes(java.lang.String, java.util.Map, boolean) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v4;
java.util.Map v2;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v5;
java.lang.String v1;
boolean v3;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: boolean;
v4 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v5 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_writeStringAttributes_21__204: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.util.Map,boolean)>(v1, v2, v3);
virtualinvoke v4.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v5);
return;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor() throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.provider.WatchdogProviderHolder v1;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v2;
java.util.function.Supplier v8;
com.novell.ldapchai.exception.ChaiUnavailableException v9;
java.lang.Object v3;
java.lang.String v5, v6;
com.novell.ldapchai.exception.ChaiOperationException v4;
com.novell.ldapchai.util.internal.ChaiLogger v7;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
label1:
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v2 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$getDirectoryVendor__205: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$()>();
v3 = virtualinvoke v1.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = virtualinvoke v4.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected ChaiOperationException during getDirectoryVendor \u0001");
v7 = <com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v8 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_getDirectoryVendor_22__206: java.util.function.Supplier bootstrap$(java.lang.String)>(v6);
virtualinvoke v7.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier,java.lang.Exception)>(v8, v4);
v9 = staticinvoke <com.novell.ldapchai.exception.ChaiUnavailableException: com.novell.ldapchai.exception.ChaiUnavailableException forErrorMessage(java.lang.String,java.lang.Throwable)>(v6, v4);
throw v9;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public void replaceBinaryAttribute(java.lang.String, java.lang.String, byte[], byte[]) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[] v3, v4;
com.novell.ldapchai.provider.WatchdogProviderHolder v5;
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction v6;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[];
v4 := @parameter3: byte[];
v5 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v6 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper$lambda_replaceBinaryAttribute_23__207: com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(java.lang.String,java.lang.String,byte[],byte[])>(v1, v2, v3, v4);
virtualinvoke v5.<com.novell.ldapchai.provider.WatchdogProviderHolder: java.lang.Object execute(com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction)>(v6);
return;
}
public boolean isConnected()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
boolean v2;
com.novell.ldapchai.provider.WatchdogProviderHolder v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
v2 = virtualinvoke v1.<com.novell.ldapchai.provider.WatchdogProviderHolder: boolean isConnected()>();
return v2;
}
public com.novell.ldapchai.provider.ChaiProviderFactory getProviderFactory()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.ChaiProviderFactory v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.ChaiProviderFactory chaiProviderFactory>;
return v1;
}
public com.novell.ldapchai.provider.WatchdogWrapper$Settings getSettings()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogWrapper$Settings v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogWrapper$Settings settings>;
return v1;
}
public com.novell.ldapchai.ChaiEntryFactory getEntryFactory()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.ChaiEntryFactory v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = staticinvoke <com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiEntryFactory newChaiFactory(com.novell.ldapchai.provider.ChaiProvider)>(v0);
return v1;
}
void periodicStatusCheck()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
com.novell.ldapchai.provider.WatchdogProviderHolder v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = v0.<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.provider.WatchdogProviderHolder providerHolder>;
virtualinvoke v1.<com.novell.ldapchai.provider.WatchdogProviderHolder: void periodicStatusCheck()>();
return;
}
public java.lang.String toString()
{
com.novell.ldapchai.provider.WatchdogWrapper v0;
java.lang.String v1, v2;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper;
v1 = virtualinvoke v0.<com.novell.ldapchai.provider.WatchdogWrapper: java.lang.String getIdentifier()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("WatchdogWrapper[\u0001]");
return v2;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicInteger v1;
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/provider/WatchdogWrapper;");
<com.novell.ldapchai.provider.WatchdogWrapper: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
v1 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);
<com.novell.ldapchai.provider.WatchdogWrapper: java.util.concurrent.atomic.AtomicInteger ID_COUNTER> = v1;
return;
}
}