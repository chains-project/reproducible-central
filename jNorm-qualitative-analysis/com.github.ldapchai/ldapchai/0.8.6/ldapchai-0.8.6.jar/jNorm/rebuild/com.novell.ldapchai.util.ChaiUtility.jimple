public final class com.novell.ldapchai.util.ChaiUtility extends java.lang.Object
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private static final java.util.function.Supplier SECURE_RANDOM_SUPPLIER;
public static com.novell.ldapchai.ChaiGroup createGroup(java.lang.String, java.lang.String, com.novell.ldapchai.provider.ChaiProvider) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiEntry v9;
com.novell.ldapchai.provider.ChaiProvider v2;
java.util.Map v6;
com.novell.ldapchai.ChaiEntryFactory v10, v7;
java.lang.StringBuilder v4;
java.lang.String v0, v1, v11, v3, v5, v8;
com.novell.ldapchai.ChaiGroup v12;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: com.novell.ldapchai.provider.ChaiProvider;
v3 = staticinvoke <com.novell.ldapchai.util.ChaiUtility: java.lang.String findUniqueName(java.lang.String,java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v0, v2);
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cn=");
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v0);
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
v6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: void createEntry(java.lang.String,java.lang.String,java.util.Map)>(v5, "groupOfNames", v6);
v7 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v8 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
v9 = virtualinvoke v7.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String)>(v8);
interfaceinvoke v9.<com.novell.ldapchai.ChaiEntry: void writeStringAttribute(java.lang.String,java.lang.String)>("description", v1);
v10 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v11 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
v12 = virtualinvoke v10.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String)>(v11);
return v12;
}
public static java.lang.String findUniqueName(java.lang.String, java.lang.String, com.novell.ldapchai.provider.ChaiProvider) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
long v11;
java.util.function.Supplier v13;
java.util.Map v25;
int v10, v15, v26, v27, v6, v7;
java.lang.String v0, v1, v12, v18, v23, v4, v5;
boolean v9;
char v8;
com.novell.ldapchai.provider.ChaiProvider v2;
java.lang.Object v14;
java.lang.StringBuilder v16, v17, v19, v20, v21, v22, v3;
com.novell.ldapchai.provider.SearchScope v24;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: com.novell.ldapchai.provider.ChaiProvider;
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
if v0 != null goto label01;
v4 = "";
goto label02;
label01:
v4 = v0;
label02:
v5 = v4;
v6 = 0;
label03:
v7 = virtualinvoke v5.<java.lang.String: int length()>();
if v6 >= v7 goto label05;
v8 = virtualinvoke v5.<java.lang.String: char charAt(int)>(v6);
v9 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(v8);
if v9 == 0 goto label04;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
label04:
v6 = v6 + 1;
goto label03;
label05:
v10 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v10 != 0 goto label06;
v11 = staticinvoke <java.lang.System: long currentTimeMillis()>();
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v11);
label06:
v12 = null;
v13 = <com.novell.ldapchai.util.ChaiUtility: java.util.function.Supplier SECURE_RANDOM_SUPPLIER>;
v14 = interfaceinvoke v13.<java.util.function.Supplier: java.lang.Object get()>();
v15 = virtualinvoke v14.<java.security.SecureRandom: int nextInt(int)>(1000);
label07:
v16 = new java.lang.StringBuilder;
specialinvoke v16.<java.lang.StringBuilder: void <init>(int)>(64);
if v12 == null goto label08;
v17 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v12);
v18 = virtualinvoke v17.<java.lang.StringBuilder: java.lang.String toString()>();
goto label09;
label08:
v18 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
label09:
v19 = virtualinvoke v16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
v20 = virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cn");
v21 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
v22 = virtualinvoke v21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v18);
virtualinvoke v22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
v23 = virtualinvoke v16.<java.lang.StringBuilder: java.lang.String toString()>();
v24 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope ONE>;
v25 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map search(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v1, v23, null, v24);
v26 = interfaceinvoke v25.<java.util.Map: int size()>();
if v26 == 0 goto label10;
v27 = v15;
v15 = v15 + 1;
v12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v27);
goto label07;
label10:
return v18;
}
public static com.novell.ldapchai.ChaiUser createUser(java.lang.String, java.lang.String, com.novell.ldapchai.provider.ChaiProvider) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiUser v5;
com.novell.ldapchai.ChaiEntryFactory v4;
java.util.HashMap v3;
java.lang.String v0, v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: com.novell.ldapchai.provider.ChaiProvider;
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sn", v1);
interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: void createEntry(java.lang.String,java.lang.String,java.util.Map)>(v0, "inetOrgPerson", v3);
v4 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v5 = virtualinvoke v4.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String)>(v0);
return v5;
}
public static java.lang.String entryToLDIF(com.novell.ldapchai.ChaiEntry) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.ChaiEntry v0;
java.util.Map v8;
java.lang.String v23, v3, v6, v9;
boolean v13, v18;
java.util.Iterator v12, v17;
java.util.Set v11;
com.novell.ldapchai.provider.ChaiProvider v5;
java.lang.Object v10, v14, v15, v16, v19;
java.lang.StringBuilder v1, v2, v20, v21, v22, v4;
com.novell.ldapchai.provider.SearchScope v7;
v0 := @parameter0: com.novell.ldapchai.ChaiEntry;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dn: ");
v3 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: java.lang.String getEntryDN()>();
v4 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
v5 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v6 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: java.lang.String getEntryDN()>();
v7 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope BASE>;
v8 = interfaceinvoke v5.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map searchMultiValues(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v6, "(objectClass=*)", null, v7);
v9 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: java.lang.String getEntryDN()>();
v10 = interfaceinvoke v8.<java.util.Map: java.lang.Object get(java.lang.Object)>(v9);
v11 = interfaceinvoke v10.<java.util.Map: java.util.Set entrySet()>();
v12 = interfaceinvoke v11.<java.util.Set: java.util.Iterator iterator()>();
label1:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label3;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v16 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
v17 = interfaceinvoke v16.<java.util.List: java.util.Iterator iterator()>();
label2:
v18 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v18 == 0 goto label1;
v19 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v20 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v15);
v21 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
v22 = virtualinvoke v21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v19);
virtualinvoke v22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
goto label2;
label3:
v23 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v23;
}
public static boolean testAttributeReplication(com.novell.ldapchai.ChaiEntry, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiEntry v0;
java.util.Map v17;
boolean v20, v26, v36;
java.util.Collection v18;
java.lang.Exception v27, v29, v31, v33;
com.novell.ldapchai.provider.ChaiProvider v14, v22, v23, v7;
java.util.List v9;
com.novell.ldapchai.exception.ChaiUnavailableException v28;
com.novell.ldapchai.util.internal.ChaiLogger v10, v34;
java.lang.Throwable v32;
java.util.function.Supplier v11, v35;
com.novell.ldapchai.provider.ChaiProviderFactory v24;
int v12, v13, v3;
java.lang.String v1, v2, v25, v4, v5;
com.novell.ldapchai.exception.ChaiOperationException v30, v6;
java.util.Iterator v19;
com.novell.ldapchai.provider.ChaiConfiguration v15, v8;
com.novell.ldapchai.provider.ChaiSetting v16;
java.lang.Object v21;
v0 := @parameter0: com.novell.ldapchai.ChaiEntry;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
if v2 == null goto label01;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
if v3 >= 1 goto label02;
label01:
v4 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: java.lang.String readStringAttribute(java.lang.String)>(v1);
goto label03;
label02:
v4 = v2;
label03:
v5 = v4;
if v4 != null goto label04;
v6 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String)>("unreadable to read test attribute from primary ChaiProvider");
throw v6;
label04:
v7 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v8 = interfaceinvoke v7.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v9 = virtualinvoke v8.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.List bindURLsAsList()>();
v10 = <com.novell.ldapchai.util.ChaiUtility: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v11 = staticinvoke <com.novell.ldapchai.util.ChaiUtility$lambda_testAttributeReplication_0__213: java.util.function.Supplier bootstrap$(java.util.List)>(v9);
virtualinvoke v10.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v11);
v12 = 0;
v13 = 0;
v14 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v15 = interfaceinvoke v14.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v16 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting FAILOVER_CONNECT_RETRIES>;
v17 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(v16, "1");
v18 = staticinvoke <com.novell.ldapchai.util.ChaiUtility: java.util.Collection splitConfigurationPerReplica(com.novell.ldapchai.provider.ChaiConfiguration,java.util.Map)>(v15, v17);
v19 = interfaceinvoke v18.<java.util.Collection: java.util.Iterator iterator()>();
label05:
v20 = interfaceinvoke v19.<java.util.Iterator: boolean hasNext()>();
if v20 == 0 goto label24;
v21 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
v22 = null;
label06:
v23 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v24 = interfaceinvoke v23.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiProviderFactory getProviderFactory()>();
v22 = virtualinvoke v24.<com.novell.ldapchai.provider.ChaiProviderFactory: com.novell.ldapchai.provider.ChaiProvider newProvider(com.novell.ldapchai.provider.ChaiConfiguration)>(v21);
v25 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: java.lang.String getEntryDN()>();
v26 = interfaceinvoke v22.<com.novell.ldapchai.provider.ChaiProvider: boolean compareStringAttribute(java.lang.String,java.lang.String,java.lang.String)>(v25, v1, v5);
if v26 == 0 goto label07;
v13 = v13 + 1;
label07:
v12 = v12 + 1;
label08:
interfaceinvoke v22.<com.novell.ldapchai.provider.ChaiProvider: void close()>();
label09:
goto label05;
label10:
v27 := @caughtexception;
goto label05;
label11:
v28 := @caughtexception;
label12:
if v22 == null goto label05;
interfaceinvoke v22.<com.novell.ldapchai.provider.ChaiProvider: void close()>();
label13:
goto label05;
label14:
v29 := @caughtexception;
goto label05;
label15:
v30 := @caughtexception;
label16:
if v22 == null goto label05;
interfaceinvoke v22.<com.novell.ldapchai.provider.ChaiProvider: void close()>();
label17:
goto label05;
label18:
v31 := @caughtexception;
goto label05;
label19:
v32 := @caughtexception;
label20:
if v22 == null goto label23;
interfaceinvoke v22.<com.novell.ldapchai.provider.ChaiProvider: void close()>();
label21:
goto label23;
label22:
v33 := @caughtexception;
label23:
throw v32;
label24:
v34 = <com.novell.ldapchai.util.ChaiUtility: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v35 = staticinvoke <com.novell.ldapchai.util.ChaiUtility$lambda_testAttributeReplication_1__214: java.util.function.Supplier bootstrap$(com.novell.ldapchai.ChaiEntry,java.lang.String,int,java.util.List,int)>(v0, v1, v12, v9, v13);
virtualinvoke v34.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v35);
if v12 <= 0 goto label25;
if v12 != v13 goto label25;
v36 = 1;
goto label26;
label25:
v36 = 0;
label26:
return v36;
catch java.lang.Exception from label08 to label09 with label10;
catch com.novell.ldapchai.exception.ChaiUnavailableException from label06 to label08 with label11;
catch java.lang.Exception from label12 to label13 with label14;
catch com.novell.ldapchai.exception.ChaiOperationException from label06 to label08 with label15;
catch java.lang.Exception from label16 to label17 with label18;
catch java.lang.Throwable from label06 to label08 with label19;
catch java.lang.Throwable from label11 to label12 with label19;
catch java.lang.Throwable from label15 to label16 with label19;
catch java.lang.Exception from label20 to label21 with label22;
}
public static java.util.Collection splitConfigurationPerReplica(com.novell.ldapchai.provider.ChaiConfiguration, java.util.Map)
{
java.util.ArrayList v2;
java.util.Map v1;
boolean v11, v5;
java.util.Iterator v10, v4;
com.novell.ldapchai.provider.ChaiConfiguration v0, v15;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v7;
java.util.Set v9;
com.novell.ldapchai.provider.ChaiSetting v8;
java.util.List v3;
java.lang.Object v12, v13, v14, v6;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
v1 := @parameter1: java.util.Map;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.List bindURLsAsList()>();
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = staticinvoke <com.novell.ldapchai.provider.ChaiConfiguration: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder builder(com.novell.ldapchai.provider.ChaiConfiguration)>(v0);
v8 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
virtualinvoke v7.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v8, v6);
if v1 == null goto label3;
v9 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label2:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label3;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getValue()>();
v14 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v7.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v14, v13);
goto label2;
label3:
v15 = virtualinvoke v7.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration build()>();
interfaceinvoke v2.<java.util.Collection: boolean add(java.lang.Object)>(v15);
goto label1;
label4:
return v2;
}
private void <init>()
{
com.novell.ldapchai.util.ChaiUtility v0;
v0 := @this: com.novell.ldapchai.util.ChaiUtility;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String passwordPolicyToString(com.novell.ldapchai.ChaiPasswordPolicy)
{
com.novell.ldapchai.ChaiPasswordPolicy v0;
java.lang.NullPointerException v1;
int v12, v13, v14;
java.lang.String v11, v15;
boolean v4, v7;
java.util.Iterator v6;
java.util.Set v3, v5;
java.io.Serializable v10;
java.lang.Object v8;
java.lang.StringBuilder v2;
com.novell.ldapchai.ChaiPasswordRule v9;
v0 := @parameter0: com.novell.ldapchai.ChaiPasswordPolicy;
if v0 != null goto label1;
v1 = new java.lang.NullPointerException;
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>("null ChaiPasswordPolicy can not be converted to string");
throw v1;
label1:
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChaiPasswordPolicy: ");
v3 = interfaceinvoke v0.<com.novell.ldapchai.ChaiPasswordPolicy: java.util.Set getKeys()>();
v4 = interfaceinvoke v3.<java.util.Set: boolean isEmpty()>();
if v4 != 0 goto label6;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");
v5 = interfaceinvoke v0.<com.novell.ldapchai.ChaiPasswordPolicy: java.util.Set getKeys()>();
v6 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label5;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = staticinvoke <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule forKey(java.lang.String)>(v8);
if v9 != null goto label3;
v10 = v8;
goto label4;
label3:
v10 = v9;
label4:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v10);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
v11 = interfaceinvoke v0.<com.novell.ldapchai.ChaiPasswordPolicy: java.lang.String getValue(java.lang.String)>(v8);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
goto label2;
label5:
v12 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v13 = v12 - 2;
v14 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(v13, v14);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
goto label7;
label6:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[empty]");
label7:
v15 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v15;
}
public static com.novell.ldapchai.provider.DirectoryVendor determineDirectoryVendor(com.novell.ldapchai.ChaiEntry) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.Object[] v10;
com.novell.ldapchai.util.SearchHelper v8;
com.novell.ldapchai.ChaiEntry v0;
java.lang.String[] v9;
com.novell.ldapchai.provider.DirectoryVendor v21, v24, v5;
java.util.HashSet v1;
java.util.Map v13;
int v19, v20, v3, v4;
boolean v14, v23;
java.util.Iterator v16;
java.util.Collection v15;
java.util.Set v7;
com.novell.ldapchai.provider.ChaiProvider v12;
com.novell.ldapchai.impl.VendorFactory v22, v6;
com.novell.ldapchai.provider.DirectoryVendor[] v18, v2;
java.lang.Object v17;
com.novell.ldapchai.provider.SearchScope v11;
v0 := @parameter0: com.novell.ldapchai.ChaiEntry;
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>()>();
v2 = staticinvoke <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor[] values()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
v6 = virtualinvoke v5.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v7 = interfaceinvoke v6.<com.novell.ldapchai.impl.VendorFactory: java.util.Set interestedDseAttributes()>();
interfaceinvoke v1.<java.util.Set: boolean addAll(java.util.Collection)>(v7);
v4 = v4 + 1;
goto label1;
label2:
v8 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v8.<com.novell.ldapchai.util.SearchHelper: void <init>()>();
v9 = newarray (java.lang.String)[0];
v10 = interfaceinvoke v1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v9);
virtualinvoke v8.<com.novell.ldapchai.util.SearchHelper: void setAttributes(java.lang.String[])>(v10);
virtualinvoke v8.<com.novell.ldapchai.util.SearchHelper: void setFilter(java.lang.String)>("(objectClass=*)");
virtualinvoke v8.<com.novell.ldapchai.util.SearchHelper: void setMaxResults(int)>(1);
v11 = <com.novell.ldapchai.provider.SearchScope: com.novell.ldapchai.provider.SearchScope BASE>;
virtualinvoke v8.<com.novell.ldapchai.util.SearchHelper: void setSearchScope(com.novell.ldapchai.provider.SearchScope)>(v11);
v12 = interfaceinvoke v0.<com.novell.ldapchai.ChaiEntry: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v13 = interfaceinvoke v12.<com.novell.ldapchai.provider.ChaiProvider: java.util.Map searchMultiValues(java.lang.String,com.novell.ldapchai.util.SearchHelper)>("", v8);
if v13 == null goto label5;
v14 = interfaceinvoke v13.<java.util.Map: boolean isEmpty()>();
if v14 != 0 goto label5;
v15 = interfaceinvoke v13.<java.util.Map: java.util.Collection values()>();
v16 = interfaceinvoke v15.<java.util.Collection: java.util.Iterator iterator()>();
v17 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
v18 = staticinvoke <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor[] values()>();
v19 = lengthof v18;
v20 = 0;
label3:
if v20 >= v19 goto label5;
v21 = v18[v20];
v22 = virtualinvoke v21.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v23 = interfaceinvoke v22.<com.novell.ldapchai.impl.VendorFactory: boolean detectVendorFromRootDSEData(java.util.Map)>(v17);
if v23 == 0 goto label4;
return v21;
label4:
v20 = v20 + 1;
goto label3;
label5:
v24 = <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor GENERIC>;
return v24;
}
public static com.novell.ldapchai.ChaiEntry getRootDSE(com.novell.ldapchai.provider.ChaiProvider) throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.generic.entry.GenericEntryFactory v24;
com.novell.ldapchai.ChaiEntry v25;
com.novell.ldapchai.provider.ChaiProviderFactory v22;
int v11, v15;
java.lang.String v10, v12, v13, v14, v19, v9;
java.net.URI v8;
boolean v4, v6;
java.util.Iterator v5;
com.novell.ldapchai.provider.ChaiConfiguration v1, v16, v21;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v17, v20;
com.novell.ldapchai.provider.ChaiSetting v18;
com.novell.ldapchai.provider.ChaiProvider v0, v23;
java.util.List v2;
java.lang.Object v7;
java.lang.StringBuilder v3;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
v1 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v2 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.List bindURLsAsList()>();
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = 0;
v5 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v7);
v9 = virtualinvoke v8.<java.net.URI: java.lang.String getScheme()>();
v10 = virtualinvoke v8.<java.net.URI: java.lang.String getHost()>();
v11 = virtualinvoke v8.<java.net.URI: int getPort()>();
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,int)>(v9, v10, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001://\u0001:\u0001");
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v12);
v13 = virtualinvoke v8.<java.net.URI: java.lang.String getPath()>();
if v13 == null goto label2;
v14 = virtualinvoke v8.<java.net.URI: java.lang.String getPath()>();
v15 = virtualinvoke v14.<java.lang.String: int length()>();
if v15 <= 0 goto label2;
v4 = 1;
label2:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
goto label1;
label3:
v16 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v17 = staticinvoke <com.novell.ldapchai.provider.ChaiConfiguration: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder builder(com.novell.ldapchai.provider.ChaiConfiguration)>(v16);
v18 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
v19 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
v20 = virtualinvoke v17.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v18, v19);
v21 = virtualinvoke v20.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration build()>();
if v4 == 0 goto label4;
v22 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiProviderFactory getProviderFactory()>();
v23 = virtualinvoke v22.<com.novell.ldapchai.provider.ChaiProviderFactory: com.novell.ldapchai.provider.ChaiProvider newProvider(com.novell.ldapchai.provider.ChaiConfiguration)>(v21);
goto label5;
label4:
v23 = v0;
label5:
v24 = new com.novell.ldapchai.impl.generic.entry.GenericEntryFactory;
specialinvoke v24.<com.novell.ldapchai.impl.generic.entry.GenericEntryFactory: void <init>()>();
v25 = virtualinvoke v24.<com.novell.ldapchai.impl.generic.entry.GenericEntryFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>("", v23);
return v25;
}
static void <clinit>()
{
java.util.function.Supplier v1;
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/util/ChaiUtility;");
<com.novell.ldapchai.util.ChaiUtility: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
v1 = staticinvoke <com.novell.ldapchai.util.ChaiUtility$init__215: java.util.function.Supplier bootstrap$()>();
<com.novell.ldapchai.util.ChaiUtility: java.util.function.Supplier SECURE_RANDOM_SUPPLIER> = v1;
return;
}
}