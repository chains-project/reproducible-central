public final enum class com.novell.ldapchai.cr.AbstractResponseSet$STATE extends java.lang.Enum
{
public static final enum com.novell.ldapchai.cr.AbstractResponseSet$STATE NEW;
public static final enum com.novell.ldapchai.cr.AbstractResponseSet$STATE WRITTEN;
public static final enum com.novell.ldapchai.cr.AbstractResponseSet$STATE READ;
private final boolean readableResponses;
private static final com.novell.ldapchai.cr.AbstractResponseSet$STATE[] $VALUES;
public static com.novell.ldapchai.cr.AbstractResponseSet$STATE[] values()
{
java.lang.Object v1;
com.novell.ldapchai.cr.AbstractResponseSet$STATE[] v0;
v0 = <com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.cr.AbstractResponseSet$STATE valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/cr/AbstractResponseSet$STATE;", v0);
return v1;
}
private void <init>(java.lang.String, int, boolean)
{
int v2;
java.lang.String v1;
com.novell.ldapchai.cr.AbstractResponseSet$STATE v0;
boolean v3;
v0 := @this: com.novell.ldapchai.cr.AbstractResponseSet$STATE;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.novell.ldapchai.cr.AbstractResponseSet$STATE: boolean readableResponses> = v3;
return;
}
public boolean isReadableResponses()
{
com.novell.ldapchai.cr.AbstractResponseSet$STATE v0;
boolean v1;
v0 := @this: com.novell.ldapchai.cr.AbstractResponseSet$STATE;
v1 = v0.<com.novell.ldapchai.cr.AbstractResponseSet$STATE: boolean readableResponses>;
return v1;
}
private static com.novell.ldapchai.cr.AbstractResponseSet$STATE[] $values()
{
com.novell.ldapchai.cr.AbstractResponseSet$STATE v1, v2, v3;
com.novell.ldapchai.cr.AbstractResponseSet$STATE[] v0;
v0 = newarray (com.novell.ldapchai.cr.AbstractResponseSet$STATE)[3];
v1 = <com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE NEW>;
v0[0] = v1;
v2 = <com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE WRITTEN>;
v0[1] = v2;
v3 = <com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE READ>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.cr.AbstractResponseSet$STATE v0, v1, v2;
com.novell.ldapchai.cr.AbstractResponseSet$STATE[] v3;
v0 = new com.novell.ldapchai.cr.AbstractResponseSet$STATE;
specialinvoke v0.<com.novell.ldapchai.cr.AbstractResponseSet$STATE: void <init>(java.lang.String,int,boolean)>("NEW", 0, 1);
<com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE NEW> = v0;
v1 = new com.novell.ldapchai.cr.AbstractResponseSet$STATE;
specialinvoke v1.<com.novell.ldapchai.cr.AbstractResponseSet$STATE: void <init>(java.lang.String,int,boolean)>("WRITTEN", 1, 1);
<com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE WRITTEN> = v1;
v2 = new com.novell.ldapchai.cr.AbstractResponseSet$STATE;
specialinvoke v2.<com.novell.ldapchai.cr.AbstractResponseSet$STATE: void <init>(java.lang.String,int,boolean)>("READ", 2, 0);
<com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE READ> = v2;
v3 = staticinvoke <com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE[] $values()>();
<com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE[] $VALUES> = v3;
return;
}
}