public abstract class com.novell.ldapchai.impl.AbstractChaiUser extends com.novell.ldapchai.impl.AbstractChaiEntry implements com.novell.ldapchai.ChaiUser
{
public void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<com.novell.ldapchai.impl.AbstractChaiEntry: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return;
}
public final com.novell.ldapchai.ChaiUser getAssistant() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiUser v4;
com.novell.ldapchai.ChaiEntryFactory v3;
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String readStringAttribute(java.lang.String)>("manager");
if v1 != null goto label1;
return null;
label1:
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String)>(v1);
return v4;
}
public final java.util.Set getDirectReports() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiUser v9;
java.util.Iterator v4;
java.util.Set v1, v10;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.provider.ChaiProvider v7;
int v3;
com.novell.ldapchai.ChaiEntryFactory v8;
java.lang.Object v6;
java.util.LinkedHashSet v2;
boolean v5;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.util.Set readMultiStringAttribute(java.lang.String)>("manager");
v2 = new java.util.LinkedHashSet;
v3 = interfaceinvoke v1.<java.util.Set: int size()>();
specialinvoke v2.<java.util.LinkedHashSet: void <init>(int)>(v3);
v4 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v8 = interfaceinvoke v7.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v9 = virtualinvoke v8.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String)>(v6);
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v9);
goto label1;
label2:
v10 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v2);
return v10;
}
public java.util.Set getGroups() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.Iterator v3;
java.util.Set v2, v9;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.provider.ChaiProvider v6;
com.novell.ldapchai.ChaiEntryFactory v7;
java.lang.Object v5;
com.novell.ldapchai.ChaiGroup v8;
java.util.LinkedHashSet v1;
boolean v4;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = new java.util.LinkedHashSet;
specialinvoke v1.<java.util.LinkedHashSet: void <init>()>();
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.util.Set readMultiStringAttribute(java.lang.String)>("groupMembership");
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v7 = interfaceinvoke v6.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v8 = virtualinvoke v7.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String)>(v5);
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v8);
goto label1;
label2:
v9 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v9;
}
public final com.novell.ldapchai.ChaiUser getManager() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiUser v4;
com.novell.ldapchai.ChaiEntryFactory v3;
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String readStringAttribute(java.lang.String)>("manager");
if v1 != null goto label1;
return null;
label1:
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String)>(v1);
return v4;
}
public boolean testPassword(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException
{
com.novell.ldapchai.exception.ChaiPasswordPolicyException v4;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.exception.ChaiError v7;
java.lang.String v1, v5, v6;
com.novell.ldapchai.exception.ChaiOperationException v3;
boolean v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: java.lang.String;
label1:
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: boolean compareStringAttribute(java.lang.String,java.lang.String)>("userPassword", v1);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v5 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v6 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v7 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v6);
specialinvoke v4.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v5, v7);
throw v4;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public final java.lang.String readSurname() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String readStringAttribute(java.lang.String)>("sn");
return v1;
}
public java.lang.String readUsername() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String readStringAttribute(java.lang.String)>("cn");
return v1;
}
public void addGroupMembership(com.novell.ldapchai.ChaiGroup) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v2, v3;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.ChaiGroup v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: com.novell.ldapchai.ChaiGroup;
v2 = interfaceinvoke v1.<com.novell.ldapchai.ChaiGroup: java.lang.String getEntryDN()>();
virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void addAttribute(java.lang.String,java.lang.String)>("groupMembership", v2);
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String getEntryDN()>();
interfaceinvoke v1.<com.novell.ldapchai.ChaiGroup: void addAttribute(java.lang.String,java.lang.String)>("member", v3);
return;
}
public void removeGroupMembership(com.novell.ldapchai.ChaiGroup) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v2, v3;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.ChaiGroup v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: com.novell.ldapchai.ChaiGroup;
v2 = interfaceinvoke v1.<com.novell.ldapchai.ChaiGroup: java.lang.String getEntryDN()>();
virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void deleteAttribute(java.lang.String,java.lang.String)>("groupMembership", v2);
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String getEntryDN()>();
interfaceinvoke v1.<com.novell.ldapchai.ChaiGroup: void deleteAttribute(java.lang.String,java.lang.String)>("member", v3);
return;
}
public java.lang.String readGivenName() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.lang.String readStringAttribute(java.lang.String)>("givenName");
return v1;
}
public void setPassword(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void setPassword(java.lang.String,boolean)>(v1, 0);
return;
}
public void setPassword(java.lang.String, boolean) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.String v1, v4;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.exception.ChaiOperationException v3, v5;
boolean v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
label1:
virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void writeStringAttribute(java.lang.String,java.lang.String)>("userPassword", v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v5 = staticinvoke <com.novell.ldapchai.exception.ChaiPasswordPolicyException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v4, v3);
throw v5;
label4:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public void changePassword(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.String v1, v2, v4;
com.novell.ldapchai.impl.AbstractChaiUser v0;
com.novell.ldapchai.exception.ChaiOperationException v3, v5;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
label1:
virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void writeStringAttribute(java.lang.String,java.lang.String)>("userPassword", v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v5 = staticinvoke <com.novell.ldapchai.exception.ChaiPasswordPolicyException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v4, v3);
throw v5;
label4:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public void expirePassword() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return;
}
public com.novell.ldapchai.ChaiPasswordPolicy getPasswordPolicy() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return null;
}
public boolean isPasswordExpired() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return 0;
}
public java.time.Instant readLastLoginTime() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return null;
}
public java.lang.String readPassword() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return null;
}
public java.time.Instant readPasswordExpirationDate() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return null;
}
public boolean testPasswordPolicy(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException
{
java.lang.String v1;
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 := @parameter0: java.lang.String;
return 1;
}
public void unlockPassword() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return;
}
public boolean isPasswordLocked() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return 0;
}
public java.time.Instant readPasswordModificationDate() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return null;
}
public boolean isAccountEnabled() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
boolean v1, v2;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: boolean readBooleanAttribute(java.lang.String)>("loginDisabled");
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean isLocked() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
boolean v1;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: boolean isPasswordLocked()>();
return v1;
}
public java.time.Instant readAccountExpirationDate() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
return null;
}
public boolean isAccountExpired() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.AbstractChaiUser v0;
java.time.Instant v1, v2;
boolean v3, v4;
v0 := @this: com.novell.ldapchai.impl.AbstractChaiUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: java.time.Instant readAccountExpirationDate()>();
if v1 == null goto label1;
v2 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v3 = virtualinvoke v1.<java.time.Instant: boolean isBefore(java.time.Instant)>(v2);
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
}