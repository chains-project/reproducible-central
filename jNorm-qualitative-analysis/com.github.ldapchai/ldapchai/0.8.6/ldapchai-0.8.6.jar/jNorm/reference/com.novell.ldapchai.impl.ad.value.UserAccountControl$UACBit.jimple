public final enum class com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit extends java.lang.Enum
{
public static final enum com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit ACCOUNT_ACTIVE;
public static final enum com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit ACCOUNT_LOCKOUT;
public static final enum com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit PASSWORD_EXPIRED;
public static final enum com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit PASSWORD_CANT_CHANGE;
public static final enum com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit DONT_EXPIRE_PASSWORD;
private final int bitValue;
private static final com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] $VALUES;
public static com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] values()
{
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] v0;
java.lang.Object v1;
v0 = <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/impl/ad/value/UserAccountControl$UACBit;", v0);
return v1;
}
private void <init>(java.lang.String, int, int)
{
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit v0;
int v2, v3;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: int bitValue> = v3;
return;
}
public int bitValue()
{
int v1;
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit v0;
v0 := @this: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
v1 = v0.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: int bitValue>;
return v1;
}
private static com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] $values()
{
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] v0;
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit v1, v2, v3, v4, v5;
v0 = newarray (com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit)[5];
v1 = <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit ACCOUNT_ACTIVE>;
v0[0] = v1;
v2 = <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit ACCOUNT_LOCKOUT>;
v0[1] = v2;
v3 = <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit PASSWORD_EXPIRED>;
v0[2] = v3;
v4 = <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit PASSWORD_CANT_CHANGE>;
v0[3] = v4;
v5 = <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit DONT_EXPIRE_PASSWORD>;
v0[4] = v5;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] v5;
com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit v0, v1, v2, v3, v4;
v0 = new com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
specialinvoke v0.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: void <init>(java.lang.String,int,int)>("ACCOUNT_ACTIVE", 0, 2);
<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit ACCOUNT_ACTIVE> = v0;
v1 = new com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
specialinvoke v1.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: void <init>(java.lang.String,int,int)>("ACCOUNT_LOCKOUT", 1, 16);
<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit ACCOUNT_LOCKOUT> = v1;
v2 = new com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
specialinvoke v2.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: void <init>(java.lang.String,int,int)>("PASSWORD_EXPIRED", 2, 8388608);
<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit PASSWORD_EXPIRED> = v2;
v3 = new com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
specialinvoke v3.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: void <init>(java.lang.String,int,int)>("PASSWORD_CANT_CHANGE", 3, 64);
<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit PASSWORD_CANT_CHANGE> = v3;
v4 = new com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit;
specialinvoke v4.<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: void <init>(java.lang.String,int,int)>("DONT_EXPIRE_PASSWORD", 4, 65536);
<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit DONT_EXPIRE_PASSWORD> = v4;
v5 = staticinvoke <com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] $values()>();
<com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit: com.novell.ldapchai.impl.ad.value.UserAccountControl$UACBit[] $VALUES> = v5;
return;
}
}