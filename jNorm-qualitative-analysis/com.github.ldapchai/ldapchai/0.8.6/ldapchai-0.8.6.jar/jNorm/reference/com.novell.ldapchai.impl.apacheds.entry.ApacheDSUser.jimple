class com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser extends com.novell.ldapchai.impl.AbstractChaiUser implements com.novell.ldapchai.ChaiUser
{
void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
java.lang.String v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return;
}
public java.util.Set getGroups() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.util.Set v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v1;
}
public void addGroupMembership(com.novell.ldapchai.ChaiGroup) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiGroup v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
v1 := @parameter0: com.novell.ldapchai.ChaiGroup;
return;
}
public void removeGroupMembership(com.novell.ldapchai.ChaiGroup) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiGroup v1;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
v1 := @parameter0: com.novell.ldapchai.ChaiGroup;
return;
}
public java.time.Instant readPasswordExpirationDate() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
return null;
}
public com.novell.ldapchai.ChaiPasswordPolicy getPasswordPolicy() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
return null;
}
public boolean isPasswordExpired() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
return 0;
}
public java.time.Instant readPasswordModificationDate() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
return null;
}
public boolean isAccountEnabled() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
return 1;
}
public boolean isPasswordLocked() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
return 0;
}
public boolean isLocked() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
boolean v1;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser: boolean isPasswordExpired()>();
return v1;
}
public java.lang.String readGUID() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v2, v3;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser v0;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSUser: java.lang.String getEntryDN()>();
v3 = staticinvoke <com.novell.ldapchai.impl.apacheds.entry.ApacheDSEntry: java.lang.String readGUIDImpl(com.novell.ldapchai.provider.ChaiProvider,java.lang.String)>(v1, v2);
return v3;
}
}