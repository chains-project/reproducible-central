class com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User extends com.novell.ldapchai.impl.AbstractChaiUser implements com.novell.ldapchai.ChaiUser
{
public static final java.lang.String ATTR_PASSWORD_RETRY_COUNT;
public static final java.lang.String ATTR_ACCOUNT_UNLOCK_TIME;
void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
java.lang.String v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return;
}
public void setPassword(java.lang.String, boolean) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.String v1, v4;
com.novell.ldapchai.exception.ChaiOperationException v3, v5;
boolean v2;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
label1:
virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: void writeStringAttribute(java.lang.String,java.lang.String)>("userPassword", v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v5 = staticinvoke <com.novell.ldapchai.exception.ChaiPasswordPolicyException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v4, v3);
throw v5;
label4:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public void changePassword(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.String v1, v2, v4;
com.novell.ldapchai.exception.ChaiOperationException v3, v5;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
label1:
virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: void writeStringAttribute(java.lang.String,java.lang.String)>("userPassword", v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v5 = staticinvoke <com.novell.ldapchai.exception.ChaiPasswordPolicyException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v4, v3);
throw v5;
label4:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public java.time.Instant readPasswordExpirationDate() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.time.Instant v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: java.time.Instant readDateAttribute(java.lang.String)>("passwordExpirationTime");
return v1;
}
public boolean isPasswordExpired() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.time.Instant v1, v2;
boolean v3, v4;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: java.time.Instant readPasswordExpirationDate()>();
if v1 == null goto label1;
v2 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v3 = virtualinvoke v1.<java.time.Instant: boolean isBefore(java.time.Instant)>(v2);
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public void unlockPassword() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.time.Instant v1;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: void writeStringAttribute(java.lang.String,java.lang.String)>("passwordRetryCount", "0");
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: java.time.Instant readDateAttribute(java.lang.String)>("accountUnlockTime");
if v1 == null goto label1;
virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: void deleteAttribute(java.lang.String,java.lang.String)>("accountUnlockTime", null);
label1:
return;
}
public boolean isPasswordLocked() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.time.Instant v1, v2;
boolean v3;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: java.time.Instant readDateAttribute(java.lang.String)>("accountUnlockTime");
if v1 != null goto label1;
return 0;
label1:
v2 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v3 = virtualinvoke v1.<java.time.Instant: boolean isAfter(java.time.Instant)>(v2);
return v3;
}
public void expirePassword() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: void writeStringAttribute(java.lang.String,java.lang.String)>("passwordExpirationTime", "19800101010101Z");
return;
}
public java.lang.String readGUID() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
java.lang.String v2, v3;
com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User v0;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389User: java.lang.String getEntryDN()>();
v3 = staticinvoke <com.novell.ldapchai.impl.directoryServer389.entry.DirectoryServer389Entry: java.lang.String readGUIDImpl(com.novell.ldapchai.provider.ChaiProvider,java.lang.String)>(v1, v2);
return v3;
}
}