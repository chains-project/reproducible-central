class com.novell.ldapchai.impl.edir.entry.NcpServerImpl extends com.novell.ldapchai.impl.edir.entry.TopImpl implements com.novell.ldapchai.impl.edir.entry.NcpServer
{
public java.lang.String getLdapObjectClassName()
{
com.novell.ldapchai.impl.edir.entry.NcpServerImpl v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.NcpServerImpl;
return "Server";
}
void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
java.lang.String v1;
com.novell.ldapchai.impl.edir.entry.NcpServerImpl v0;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.NcpServerImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<com.novell.ldapchai.impl.edir.entry.TopImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return;
}
public java.util.Set getLdapAddresses() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.util.Iterator v3;
java.net.URISyntaxException v9;
java.util.Set v1;
com.novell.ldapchai.impl.edir.entry.NcpServerImpl v0;
java.util.HashSet v2;
java.lang.Object v5;
java.lang.String v6;
java.net.URI v8;
boolean v4, v7;
v0 := @this: com.novell.ldapchai.impl.edir.entry.NcpServerImpl;
v1 = specialinvoke v0.<com.novell.ldapchai.impl.edir.entry.NcpServerImpl: java.util.Set getNetworkAddressAttrValue()>();
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label5;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<java.lang.String: java.lang.String toLowerCase()>();
v7 = virtualinvoke v6.<java.lang.String: boolean startsWith(java.lang.String)>("ldap");
if v7 == 0 goto label1;
label2:
v8 = new java.net.URI;
specialinvoke v8.<java.net.URI: void <init>(java.lang.String)>(v5);
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v8);
label3:
goto label1;
label4:
v9 := @caughtexception;
virtualinvoke v9.<java.net.URISyntaxException: void printStackTrace()>();
goto label1;
label5:
return v2;
catch java.net.URISyntaxException from label2 to label3 with label4;
}
private java.util.Set getNetworkAddressAttrValue() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[] v5;
com.novell.ldapchai.impl.edir.entry.NcpServerImpl v0;
java.util.HashSet v2;
byte v10;
int v11, v12, v13, v14, v15, v16, v3, v4, v7, v8, v9;
java.lang.String v17;
byte[][] v1;
java.lang.StringBuilder v6;
v0 := @this: com.novell.ldapchai.impl.edir.entry.NcpServerImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.NcpServerImpl: byte[][] readMultiByteAttribute(java.lang.String)>("networkAddress");
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = lengthof v1;
v4 = 0;
label1:
if v4 >= v3 goto label7;
v5 = v1[v4];
v6 = new java.lang.StringBuilder;
specialinvoke v6.<java.lang.StringBuilder: void <init>()>();
v7 = 0;
v8 = lengthof v5;
v9 = 0;
label2:
if v9 >= v8 goto label4;
v10 = v5[v9];
v7 = v7 + 1;
v11 = v7 % 2;
if v11 != 0 goto label3;
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v10);
label3:
v9 = v9 + 1;
goto label2;
label4:
v12 = virtualinvoke v6.<java.lang.StringBuilder: int length()>();
if v12 <= 0 goto label5;
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, 1);
label5:
v13 = virtualinvoke v6.<java.lang.StringBuilder: int length()>();
if v13 <= 0 goto label6;
v14 = virtualinvoke v6.<java.lang.StringBuilder: int length()>();
v15 = v14 - 1;
v16 = virtualinvoke v6.<java.lang.StringBuilder: int length()>();
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(v15, v16);
label6:
v17 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v17);
v4 = v4 + 1;
goto label1;
label7:
return v2;
}
}