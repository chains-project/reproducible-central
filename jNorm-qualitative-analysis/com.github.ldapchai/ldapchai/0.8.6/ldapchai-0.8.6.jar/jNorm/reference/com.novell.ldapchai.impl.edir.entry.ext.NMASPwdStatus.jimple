public final class com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus extends java.lang.Object
{
public static final byte SPM_UPWD_ENABLED;
public static final byte SPM_UPWD_SET;
public static final byte SPM_UPWD_HISTORY_FULL;
public static final byte SPM_UPWD_MATCHES_NDS;
public static final byte SPM_UPWD_OLDER_THAN_NDS;
public static final byte SPM_UPWD_MATCHES_SPWD;
public static final byte SPM_SPWD_SET;
public static final byte SPM_SPWD_IS_CLEARTEXT;
public static final byte SPM_SPWD_MATCHES_NDS;
private int universalPwdStatus;
private int simplePwdStatus;
public void <init>()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus> = 0;
v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int simplePwdStatus> = 0;
return;
}
public void setUniversalPwdStatus(int)
{
int v1;
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 := @parameter0: int;
v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus> = v1;
return;
}
public int getUniversalPwdStatus()
{
int v1;
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
return v1;
}
public boolean isSpmUpwdEnabled()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
v2 = 1 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmUpwdSet()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
v2 = 2 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmUpwdHistoryFull()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
v2 = 4 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmUpwdMatchesNDS()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
v2 = 16 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmUpwdOlderThanNDS()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
v2 = 32 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmUpwdMatchesSPWD()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int universalPwdStatus>;
v2 = 64 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public void setSimplePwdStatus(int)
{
int v1;
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 := @parameter0: int;
v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int simplePwdStatus> = v1;
return;
}
public int getSimplePwdStatus()
{
int v1;
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int simplePwdStatus>;
return v1;
}
public boolean isSpmSpwdSet()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int simplePwdStatus>;
v2 = 1 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmSpwdClearText()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int simplePwdStatus>;
v2 = 2 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSpmSpwdMatchesNDS()
{
com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus v0;
int v1, v2;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus;
v1 = v0.<com.novell.ldapchai.impl.edir.entry.ext.NMASPwdStatus: int simplePwdStatus>;
v2 = 16 & v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
}