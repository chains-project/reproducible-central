public final enum class com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule extends java.lang.Enum
{
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinPwdLen;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxPwdLen;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinUppercase;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxUppercase;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinLowercase;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxLowercase;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinNumeric;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxNumeric;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinSpecial;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxSpecial;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxRepeated;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxConsecutive;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinUnique;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule UppercaseFirstCharDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule UppercaseLastCharDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LowercaseFirstCharDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LowercaseLastCharDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule FirstCharNumericDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LastCharNumericDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule FirstCharSpecialDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LastCharSpecialDisallowed;
public static final enum com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule ExtendedCharDisallowed;
private static final com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] $VALUES;
public static com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] values()
{
java.lang.Object v1;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] v0;
v0 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/impl/edir/value/NspmComplexityRules$Rule;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule v0;
v0 := @this: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] $values()
{
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] v0;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule)[22];
v1 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinPwdLen>;
v0[0] = v1;
v2 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxPwdLen>;
v0[1] = v2;
v3 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinUppercase>;
v0[2] = v3;
v4 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxUppercase>;
v0[3] = v4;
v5 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinLowercase>;
v0[4] = v5;
v6 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxLowercase>;
v0[5] = v6;
v7 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinNumeric>;
v0[6] = v7;
v8 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxNumeric>;
v0[7] = v8;
v9 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinSpecial>;
v0[8] = v9;
v10 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxSpecial>;
v0[9] = v10;
v11 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxRepeated>;
v0[10] = v11;
v12 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxConsecutive>;
v0[11] = v12;
v13 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinUnique>;
v0[12] = v13;
v14 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule UppercaseFirstCharDisallowed>;
v0[13] = v14;
v15 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule UppercaseLastCharDisallowed>;
v0[14] = v15;
v16 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LowercaseFirstCharDisallowed>;
v0[15] = v16;
v17 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LowercaseLastCharDisallowed>;
v0[16] = v17;
v18 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule FirstCharNumericDisallowed>;
v0[17] = v18;
v19 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LastCharNumericDisallowed>;
v0[18] = v19;
v20 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule FirstCharSpecialDisallowed>;
v0[19] = v20;
v21 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LastCharSpecialDisallowed>;
v0[20] = v21;
v22 = <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule ExtendedCharDisallowed>;
v0[21] = v22;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] v22;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule v0, v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v3, v4, v5, v6, v7, v8, v9;
v0 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v0.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MinPwdLen", 0);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinPwdLen> = v0;
v1 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v1.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxPwdLen", 1);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxPwdLen> = v1;
v2 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v2.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MinUppercase", 2);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinUppercase> = v2;
v3 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v3.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxUppercase", 3);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxUppercase> = v3;
v4 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v4.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MinLowercase", 4);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinLowercase> = v4;
v5 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v5.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxLowercase", 5);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxLowercase> = v5;
v6 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v6.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MinNumeric", 6);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinNumeric> = v6;
v7 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v7.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxNumeric", 7);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxNumeric> = v7;
v8 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v8.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MinSpecial", 8);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinSpecial> = v8;
v9 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v9.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxSpecial", 9);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxSpecial> = v9;
v10 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v10.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxRepeated", 10);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxRepeated> = v10;
v11 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v11.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MaxConsecutive", 11);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MaxConsecutive> = v11;
v12 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v12.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("MinUnique", 12);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule MinUnique> = v12;
v13 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v13.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("UppercaseFirstCharDisallowed", 13);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule UppercaseFirstCharDisallowed> = v13;
v14 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v14.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("UppercaseLastCharDisallowed", 14);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule UppercaseLastCharDisallowed> = v14;
v15 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v15.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("LowercaseFirstCharDisallowed", 15);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LowercaseFirstCharDisallowed> = v15;
v16 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v16.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("LowercaseLastCharDisallowed", 16);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LowercaseLastCharDisallowed> = v16;
v17 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v17.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("FirstCharNumericDisallowed", 17);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule FirstCharNumericDisallowed> = v17;
v18 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v18.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("LastCharNumericDisallowed", 18);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LastCharNumericDisallowed> = v18;
v19 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v19.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("FirstCharSpecialDisallowed", 19);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule FirstCharSpecialDisallowed> = v19;
v20 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v20.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("LastCharSpecialDisallowed", 20);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule LastCharSpecialDisallowed> = v20;
v21 = new com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule;
specialinvoke v21.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: void <init>(java.lang.String,int)>("ExtendedCharDisallowed", 21);
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule ExtendedCharDisallowed> = v21;
v22 = staticinvoke <com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] $values()>();
<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Rule[] $VALUES> = v22;
return;
}
}