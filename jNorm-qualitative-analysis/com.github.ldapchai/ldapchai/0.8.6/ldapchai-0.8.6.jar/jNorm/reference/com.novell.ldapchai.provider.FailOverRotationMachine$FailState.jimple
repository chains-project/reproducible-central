final enum class com.novell.ldapchai.provider.FailOverRotationMachine$FailState extends java.lang.Enum
{
public static final enum com.novell.ldapchai.provider.FailOverRotationMachine$FailState NEW;
public static final enum com.novell.ldapchai.provider.FailOverRotationMachine$FailState OKAY;
public static final enum com.novell.ldapchai.provider.FailOverRotationMachine$FailState SEEKING;
public static final enum com.novell.ldapchai.provider.FailOverRotationMachine$FailState FAILED;
private static final com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] $VALUES;
public static com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] values()
{
com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] v0;
java.lang.Object v1;
v0 = <com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.provider.FailOverRotationMachine$FailState valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/provider/FailOverRotationMachine$FailState;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.novell.ldapchai.provider.FailOverRotationMachine$FailState v0;
v0 := @this: com.novell.ldapchai.provider.FailOverRotationMachine$FailState;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] $values()
{
com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] v0;
com.novell.ldapchai.provider.FailOverRotationMachine$FailState v1, v2, v3, v4;
v0 = newarray (com.novell.ldapchai.provider.FailOverRotationMachine$FailState)[4];
v1 = <com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState NEW>;
v0[0] = v1;
v2 = <com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState OKAY>;
v0[1] = v2;
v3 = <com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState SEEKING>;
v0[2] = v3;
v4 = <com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState FAILED>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] v4;
com.novell.ldapchai.provider.FailOverRotationMachine$FailState v0, v1, v2, v3;
v0 = new com.novell.ldapchai.provider.FailOverRotationMachine$FailState;
specialinvoke v0.<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: void <init>(java.lang.String,int)>("NEW", 0);
<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState NEW> = v0;
v1 = new com.novell.ldapchai.provider.FailOverRotationMachine$FailState;
specialinvoke v1.<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: void <init>(java.lang.String,int)>("OKAY", 1);
<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState OKAY> = v1;
v2 = new com.novell.ldapchai.provider.FailOverRotationMachine$FailState;
specialinvoke v2.<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: void <init>(java.lang.String,int)>("SEEKING", 2);
<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState SEEKING> = v2;
v3 = new com.novell.ldapchai.provider.FailOverRotationMachine$FailState;
specialinvoke v3.<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: void <init>(java.lang.String,int)>("FAILED", 3);
<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState FAILED> = v3;
v4 = staticinvoke <com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] $values()>();
<com.novell.ldapchai.provider.FailOverRotationMachine$FailState: com.novell.ldapchai.provider.FailOverRotationMachine$FailState[] $VALUES> = v4;
return;
}
}