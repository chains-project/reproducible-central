class com.novell.ldapchai.provider.FailOverSettings extends java.lang.Object
{
private final com.novell.ldapchai.provider.ChaiProviderImplementor failOverHelper;
private final int maxRetries;
private final int minFailBackTime;
private static final int ROTATE_DELAY;
void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor, int, int)
{
int v2, v3;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.FailOverSettings v0;
v0 := @this: com.novell.ldapchai.provider.FailOverSettings;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.FailOverSettings: com.novell.ldapchai.provider.ChaiProviderImplementor failOverHelper> = v1;
v0.<com.novell.ldapchai.provider.FailOverSettings: int maxRetries> = v2;
v0.<com.novell.ldapchai.provider.FailOverSettings: int minFailBackTime> = v3;
return;
}
boolean errorIsRetryable(java.lang.Exception)
{
com.novell.ldapchai.provider.ChaiProviderImplementor v2;
java.lang.Exception v1;
boolean v3;
com.novell.ldapchai.provider.FailOverSettings v0;
v0 := @this: com.novell.ldapchai.provider.FailOverSettings;
v1 := @parameter0: java.lang.Exception;
v2 = v0.<com.novell.ldapchai.provider.FailOverSettings: com.novell.ldapchai.provider.ChaiProviderImplementor failOverHelper>;
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProviderImplementor: boolean errorIsRetryable(java.lang.Exception)>(v1);
return v3;
}
public int getMaxRetries()
{
int v1;
com.novell.ldapchai.provider.FailOverSettings v0;
v0 := @this: com.novell.ldapchai.provider.FailOverSettings;
v1 = v0.<com.novell.ldapchai.provider.FailOverSettings: int maxRetries>;
return v1;
}
public int getMinFailBackTime()
{
int v1;
com.novell.ldapchai.provider.FailOverSettings v0;
v0 := @this: com.novell.ldapchai.provider.FailOverSettings;
v1 = v0.<com.novell.ldapchai.provider.FailOverSettings: int minFailBackTime>;
return v1;
}
public int getRotateDelay()
{
com.novell.ldapchai.provider.FailOverSettings v0;
v0 := @this: com.novell.ldapchai.provider.FailOverSettings;
return 1000;
}
public com.novell.ldapchai.provider.ChaiProviderImplementor getFailOverHelper()
{
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
com.novell.ldapchai.provider.FailOverSettings v0;
v0 := @this: com.novell.ldapchai.provider.FailOverSettings;
v1 = v0.<com.novell.ldapchai.provider.FailOverSettings: com.novell.ldapchai.provider.ChaiProviderImplementor failOverHelper>;
return v1;
}
}