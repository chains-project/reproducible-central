class com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine extends java.lang.Object
{
private final java.lang.String baseDN;
private final com.novell.ldapchai.util.SearchHelper searchHelper;
private final boolean returnAllValues;
private final com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration;
private boolean used;
private final java.util.Map results;
final com.novell.ldapchai.provider.JNDIProviderImpl this$0;
void <init>(com.novell.ldapchai.provider.JNDIProviderImpl, com.novell.ldapchai.provider.ChaiConfiguration, java.lang.String, com.novell.ldapchai.util.SearchHelper, boolean) throws com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.util.SearchHelper v4, v8;
com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine v0;
com.novell.ldapchai.provider.ChaiConfiguration v2;
java.util.HashMap v6;
com.novell.ldapchai.provider.JNDIProviderImpl v1;
java.lang.String v3, v7;
boolean v5;
v0 := @this: com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine;
v1 := @parameter0: com.novell.ldapchai.provider.JNDIProviderImpl;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiConfiguration;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: com.novell.ldapchai.util.SearchHelper;
v5 := @parameter4: boolean;
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: boolean used> = 0;
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>()>();
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.util.Map results> = v6;
if v3 == null goto label1;
v7 = v3;
goto label2;
label1:
v7 = "";
label2:
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.lang.String baseDN> = v7;
v8 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v8.<com.novell.ldapchai.util.SearchHelper: void <init>(com.novell.ldapchai.util.SearchHelper)>(v4);
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper> = v8;
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: boolean returnAllValues> = v5;
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration> = v2;
return;
}
public java.util.Map getResults() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[] v19, v36;
java.lang.IllegalStateException v2;
javax.naming.NamingException v43;
byte v10, v12;
java.util.Map v29, v31, v47, v48;
boolean v1, v14, v15, v16;
javax.naming.NamingEnumeration v28;
javax.naming.ldap.LdapContext v18;
com.novell.ldapchai.util.internal.ChaiLogger v33;
javax.naming.ldap.Control[] v23, v35;
java.lang.Throwable v46;
com.novell.ldapchai.util.SearchHelper v26;
long v11, v9;
java.util.function.Supplier v34;
javax.naming.directory.SearchControls v4;
javax.naming.ldap.PagedResultsControl v20, v21, v22;
int v30, v32, v8;
java.lang.String v24, v25, v27, v40, v41;
com.novell.ldapchai.exception.ChaiOperationException v39, v45;
com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine v0;
com.novell.ldapchai.provider.ChaiConfiguration v6;
java.io.IOException v38;
com.novell.ldapchai.provider.ChaiSetting v7;
com.novell.ldapchai.exception.ChaiError v42;
com.novell.ldapchai.provider.JNDIProviderImpl v13, v17, v3, v44, v5;
javax.naming.SizeLimitExceededException v37;
v0 := @this: com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine;
v1 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: boolean used>;
if v1 == 0 goto label01;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SearchEngine instance can only be used once");
throw v2;
label01:
v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: boolean used> = 1;
v3 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0>;
virtualinvoke v3.<com.novell.ldapchai.provider.JNDIProviderImpl: void activityPreCheck()>();
v4 = specialinvoke v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: javax.naming.directory.SearchControls makeSearchControls()>();
v5 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0>;
v6 = virtualinvoke v5.<com.novell.ldapchai.provider.JNDIProviderImpl: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v7 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting LDAP_SEARCH_PAGING_SIZE>;
v8 = virtualinvoke v6.<com.novell.ldapchai.provider.ChaiConfiguration: int getIntSetting(com.novell.ldapchai.provider.ChaiSetting)>(v7);
v9 = virtualinvoke v4.<javax.naming.directory.SearchControls: long getCountLimit()>();
v10 = v9 cmp 0L;
if v10 == 0 goto label02;
v11 = virtualinvoke v4.<javax.naming.directory.SearchControls: long getCountLimit()>();
v12 = v11 cmp v8;
if v12 <= 0 goto label03;
v13 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0>;
v14 = specialinvoke v13.<com.novell.ldapchai.provider.JNDIProviderImpl: boolean supportsSearchResultPaging()>();
if v14 == 0 goto label03;
label02:
v15 = 1;
goto label04;
label03:
v15 = 0;
label04:
v16 = v15;
v17 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0>;
v18 = specialinvoke v17.<com.novell.ldapchai.provider.JNDIProviderImpl: javax.naming.ldap.LdapContext getLdapConnection()>();
label05:
v19 = null;
label06:
if v16 == 0 goto label09;
if v19 != null goto label07;
v20 = new javax.naming.ldap.PagedResultsControl;
v21 = v20;
specialinvoke v20.<javax.naming.ldap.PagedResultsControl: void <init>(int,boolean)>(v8, 0);
goto label08;
label07:
v22 = new javax.naming.ldap.PagedResultsControl;
v21 = v22;
specialinvoke v22.<javax.naming.ldap.PagedResultsControl: void <init>(int,byte[],boolean)>(v8, v19, 1);
label08:
v23 = newarray (javax.naming.ldap.Control)[1];
v23[0] = v21;
interfaceinvoke v18.<javax.naming.ldap.LdapContext: void setRequestControls(javax.naming.ldap.Control[])>(v23);
label09:
v24 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.lang.String baseDN>;
v25 = staticinvoke <com.novell.ldapchai.provider.JNDIProviderImpl: java.lang.String addJndiEscape(java.lang.String)>(v24);
v26 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper>;
v27 = virtualinvoke v26.<com.novell.ldapchai.util.SearchHelper: java.lang.String getFilter()>();
v28 = interfaceinvoke v18.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>(v25, v27, v4);
v29 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.util.Map results>;
v30 = interfaceinvoke v29.<java.util.Map: int size()>();
specialinvoke v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: void parseSearchResults(javax.naming.NamingEnumeration)>(v28);
if v19 == null goto label10;
v31 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.util.Map results>;
v32 = interfaceinvoke v31.<java.util.Map: int size()>();
if v30 != v32 goto label10;
v33 = <com.novell.ldapchai.provider.JNDIProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v34 = staticinvoke <com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine$lambda_getResults_0__143: java.util.function.Supplier bootstrap$(com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine)>(v0);
virtualinvoke v33.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v34);
label10:
if v16 == 0 goto label11;
v35 = interfaceinvoke v18.<javax.naming.ldap.LdapContext: javax.naming.ldap.Control[] getResponseControls()>();
v36 = specialinvoke v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: byte[] readResultResponsePageCookie(javax.naming.ldap.Control[])>(v35);
goto label12;
label11:
v36 = null;
label12:
v19 = v36;
if v16 == 0 goto label19;
if v36 != null goto label06;
label13:
goto label19;
label14:
v37 := @caughtexception;
label15:
goto label19;
label16:
v38 := @caughtexception;
v39 = new com.novell.ldapchai.exception.ChaiOperationException;
v40 = virtualinvoke v38.<java.io.IOException: java.lang.String getMessage()>();
v41 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v40) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("io error during paged search result: \u0001");
v42 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError COMMUNICATION>;
specialinvoke v39.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v41, v42);
throw v39;
label17:
v43 := @caughtexception;
v44 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0>;
v45 = specialinvoke v44.<com.novell.ldapchai.provider.JNDIProviderImpl: com.novell.ldapchai.exception.ChaiOperationException convertNamingException(javax.naming.NamingException)>(v43);
throw v45;
label18:
v46 := @caughtexception;
throw v46;
label19:
v47 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.util.Map results>;
v48 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v47);
return v48;
catch javax.naming.SizeLimitExceededException from label05 to label13 with label14;
catch java.io.IOException from label05 to label13 with label16;
catch javax.naming.NamingException from label05 to label13 with label17;
catch java.lang.Throwable from label05 to label13 with label18;
catch java.lang.Throwable from label14 to label15 with label18;
}
private javax.naming.directory.SearchControls makeSearchControls()
{
java.lang.Object[] v11;
com.novell.ldapchai.util.SearchHelper v12, v14, v3, v6, v8;
java.lang.String[] v10, v2;
javax.naming.directory.SearchControls v1;
int v13, v15, v5;
com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine v0;
java.util.Set v7, v9;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine;
v1 = new javax.naming.directory.SearchControls;
specialinvoke v1.<javax.naming.directory.SearchControls: void <init>()>();
virtualinvoke v1.<javax.naming.directory.SearchControls: void setReturningObjFlag(boolean)>(0);
v2 = newarray (java.lang.String)[0];
virtualinvoke v1.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>(v2);
v3 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper>;
v4 = virtualinvoke v3.<com.novell.ldapchai.util.SearchHelper: com.novell.ldapchai.provider.SearchScope getSearchScope()>();
v5 = virtualinvoke v4.<com.novell.ldapchai.provider.SearchScope: int getJndiScopeInt()>();
virtualinvoke v1.<javax.naming.directory.SearchControls: void setSearchScope(int)>(v5);
v6 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper>;
v7 = virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: java.util.Set getAttributes()>();
if v7 == null goto label1;
v8 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper>;
v9 = virtualinvoke v8.<com.novell.ldapchai.util.SearchHelper: java.util.Set getAttributes()>();
v10 = newarray (java.lang.String)[0];
v11 = interfaceinvoke v9.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v10);
label1:
virtualinvoke v1.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>(v11);
v12 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper>;
v13 = virtualinvoke v12.<com.novell.ldapchai.util.SearchHelper: int getTimeLimit()>();
virtualinvoke v1.<javax.naming.directory.SearchControls: void setTimeLimit(int)>(v13);
v14 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.util.SearchHelper searchHelper>;
v15 = virtualinvoke v14.<com.novell.ldapchai.util.SearchHelper: int getMaxResults()>();
virtualinvoke v1.<javax.naming.directory.SearchControls: void setCountLimit(long)>(v15);
return v1;
}
private byte[] readResultResponsePageCookie(javax.naming.ldap.Control[])
{
byte[] v6;
com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine v0;
int v2, v3;
javax.naming.ldap.Control v4;
boolean v5;
javax.naming.ldap.Control[] v1;
v0 := @this: com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine;
v1 := @parameter0: javax.naming.ldap.Control[];
if v1 == null goto label3;
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = v4 instanceof javax.naming.ldap.PagedResultsResponseControl;
if v5 == 0 goto label2;
v6 = virtualinvoke v4.<javax.naming.ldap.PagedResultsResponseControl: byte[] getCookie()>();
if v6 == null goto label2;
return v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
return null;
}
private void parseSearchResults(javax.naming.NamingEnumeration) throws javax.naming.NamingException
{
java.util.HashMap v18;
java.util.function.Supplier v10, v27;
java.util.Map v23, v24, v28, v29;
int v15, v16;
java.lang.String v12, v13, v14, v17, v4;
boolean v2, v22, v25, v7;
java.lang.UnsupportedOperationException v8;
com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine v0;
com.novell.ldapchai.provider.ChaiConfiguration v5;
com.novell.ldapchai.provider.ChaiSetting v6;
com.novell.ldapchai.provider.JNDIProviderImpl v21;
javax.naming.directory.Attributes v19;
javax.naming.NamingEnumeration v1, v20;
java.lang.Object v3;
java.lang.StringBuilder v11;
com.novell.ldapchai.util.internal.ChaiLogger v26, v9;
v0 := @this: com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine;
v1 := @parameter0: javax.naming.NamingEnumeration;
label01:
v2 = interfaceinvoke v1.<javax.naming.NamingEnumeration: boolean hasMore()>();
if v2 == 0 goto label10;
v3 = interfaceinvoke v1.<javax.naming.NamingEnumeration: java.lang.Object next()>();
v4 = null;
v5 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.ChaiConfiguration chaiConfiguration>;
v6 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting JNDI_RESOLVE_IN_NAMESPACE>;
v7 = virtualinvoke v5.<com.novell.ldapchai.provider.ChaiConfiguration: boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)>(v6);
if v7 == 0 goto label05;
label02:
v4 = virtualinvoke v3.<javax.naming.directory.SearchResult: java.lang.String getNameInNamespace()>();
v4 = staticinvoke <com.novell.ldapchai.provider.JNDIProviderImpl: java.lang.String removeJndiEscapes(java.lang.String)>(v4);
label03:
goto label05;
label04:
v8 := @caughtexception;
v9 = <com.novell.ldapchai.provider.JNDIProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v10 = staticinvoke <com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine$lambda_parseSearchResults_1__145: java.util.function.Supplier bootstrap$(java.lang.UnsupportedOperationException)>(v8);
virtualinvoke v9.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v10);
label05:
if v4 != null goto label08;
v11 = new java.lang.StringBuilder;
specialinvoke v11.<java.lang.StringBuilder: void <init>()>();
v12 = virtualinvoke v3.<javax.naming.directory.SearchResult: java.lang.String getName()>();
v13 = staticinvoke <com.novell.ldapchai.provider.JNDIProviderImpl: java.lang.String removeJndiEscapes(java.lang.String)>(v12);
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v13);
v14 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.lang.String baseDN>;
v15 = virtualinvoke v14.<java.lang.String: int length()>();
if v15 <= 0 goto label07;
v16 = virtualinvoke v11.<java.lang.StringBuilder: int length()>();
if v16 <= 0 goto label06;
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
label06:
v17 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.lang.String baseDN>;
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v17);
label07:
v4 = virtualinvoke v11.<java.lang.StringBuilder: java.lang.String toString()>();
label08:
v18 = new java.util.HashMap;
specialinvoke v18.<java.util.HashMap: void <init>()>();
v19 = virtualinvoke v3.<javax.naming.directory.SearchResult: javax.naming.directory.Attributes getAttributes()>();
v20 = interfaceinvoke v19.<javax.naming.directory.Attributes: javax.naming.NamingEnumeration getAll()>();
v21 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: com.novell.ldapchai.provider.JNDIProviderImpl this$0>;
v22 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: boolean returnAllValues>;
v23 = specialinvoke v21.<com.novell.ldapchai.provider.JNDIProviderImpl: java.util.Map parseAttributeValues(javax.naming.NamingEnumeration,boolean)>(v20, v22);
interfaceinvoke v18.<java.util.Map: void putAll(java.util.Map)>(v23);
v24 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.util.Map results>;
v25 = interfaceinvoke v24.<java.util.Map: boolean containsKey(java.lang.Object)>(v4);
if v25 == 0 goto label09;
v26 = <com.novell.ldapchai.provider.JNDIProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v27 = staticinvoke <com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine$lambda_parseSearchResults_2__144: java.util.function.Supplier bootstrap$(java.lang.String)>(v4);
virtualinvoke v26.<com.novell.ldapchai.util.internal.ChaiLogger: void warn(java.util.function.Supplier)>(v27);
goto label01;
label09:
v28 = v0.<com.novell.ldapchai.provider.JNDIProviderImpl$SearchEngine: java.util.Map results>;
v29 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v18);
interfaceinvoke v28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v29);
goto label01;
label10:
return;
catch java.lang.UnsupportedOperationException from label02 to label03 with label04;
}
}