final class com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator extends java.lang.Object implements java.util.Iterator
{
private final java.lang.RuntimeException ex;
private void <init>(java.lang.RuntimeException)
{
com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator v0;
java.lang.RuntimeException v1;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator;
v1 := @parameter0: java.lang.RuntimeException;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator: java.lang.RuntimeException ex> = v1;
return;
}
public boolean hasNext()
{
com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator v0;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator;
return 1;
}
public java.lang.Object next()
{
com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator v0;
java.lang.RuntimeException v1, v2;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator;
v1 = v0.<com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator: java.lang.RuntimeException ex>;
virtualinvoke v1.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();
v2 = v0.<com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator: java.lang.RuntimeException ex>;
throw v2;
}
public void remove()
{
com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator v0;
java.lang.RuntimeException v1, v2;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator;
v1 = v0.<com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator: java.lang.RuntimeException ex>;
virtualinvoke v1.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();
v2 = v0.<com.google.common.collect.testing.IteratorTesterTest$ThrowingIterator: java.lang.RuntimeException ex>;
throw v2;
}
}