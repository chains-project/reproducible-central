class com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet extends java.util.AbstractSet
{
final com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1;
void <init>(com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v1;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1;
v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1> = v1;
specialinvoke v0.<java.util.AbstractSet: void <init>()>();
return;
}
public java.util.Iterator iterator()
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet$1 v1;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 = new com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet$1;
specialinvoke v1.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet$1: void <init>(com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet)>(v0);
return v1;
}
public int size()
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v1;
int v3;
java.util.HashMap v2;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v2 = v1.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v3 = virtualinvoke v2.<java.util.HashMap: int size()>();
return v3;
}
public boolean remove(java.lang.Object)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v2;
java.util.Set v4;
java.lang.Object v1;
java.util.HashMap v3;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
boolean v5;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v3 = v2.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: boolean remove(java.lang.Object)>(v1);
return v5;
}
public boolean removeIf(java.util.function.Predicate)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v2;
java.util.function.Predicate v1;
java.util.Set v4;
java.util.HashMap v3;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
boolean v5;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: java.util.function.Predicate;
v2 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v3 = v2.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: boolean removeIf(java.util.function.Predicate)>(v1);
return v5;
}
public boolean containsAll(java.util.Collection)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v2;
java.util.Collection v1;
java.util.Set v4;
java.util.HashMap v3;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
boolean v5;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v3 = v2.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: boolean containsAll(java.util.Collection)>(v1);
return v5;
}
public boolean removeAll(java.util.Collection)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v2;
java.util.Collection v1;
java.util.Set v4;
java.util.HashMap v3;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
boolean v5;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v3 = v2.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: boolean removeAll(java.util.Collection)>(v1);
return v5;
}
public boolean retainAll(java.util.Collection)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v2;
java.util.Collection v1;
java.util.Set v4;
java.util.HashMap v3;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
boolean v5;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v3 = v2.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: boolean retainAll(java.util.Collection)>(v1);
return v5;
}
public int hashCode()
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v1;
int v4;
java.util.Set v3;
java.util.HashMap v2;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v2 = v1.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v3 = virtualinvoke v2.<java.util.HashMap: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: int hashCode()>();
return v4;
}
public boolean equals(java.lang.Object)
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v2;
java.util.Set v4;
java.lang.Object v1;
java.util.HashMap v3;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
boolean v5;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v3 = v2.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: boolean equals(java.lang.Object)>(v1);
return v5;
}
public java.lang.String toString()
{
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 v1;
java.util.Set v3;
java.util.HashMap v2;
java.lang.String v4;
com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet;
v1 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1$EntrySet: com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1 this$1>;
v2 = v1.<com.google.common.collect.testing.MapTestSuiteBuilderTests$2$1: java.util.HashMap val$map>;
v3 = virtualinvoke v2.<java.util.HashMap: java.util.Set entrySet()>();
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
return v4;
}
}