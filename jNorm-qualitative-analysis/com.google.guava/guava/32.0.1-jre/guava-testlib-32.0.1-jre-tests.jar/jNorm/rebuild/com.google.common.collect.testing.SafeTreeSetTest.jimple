public class com.google.common.collect.testing.SafeTreeSetTest extends junit.framework.TestCase
{
public void <init>()
{
com.google.common.collect.testing.SafeTreeSetTest v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSetTest;
specialinvoke v0.<junit.framework.TestCase: void <init>()>();
return;
}
public static junit.framework.Test suite()
{
java.lang.Object[] v12, v3;
junit.framework.TestSuite v0, v19, v9;
com.google.common.collect.testing.features.CollectionFeature v14, v15, v16, v5, v6;
com.google.common.collect.testing.SafeTreeSetTest$2 v10;
com.google.common.collect.testing.SafeTreeSetTest$1 v1;
com.google.common.collect.testing.features.CollectionSize v13, v4;
com.google.common.collect.testing.SetTestSuiteBuilder v11, v2;
com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder v17, v18, v7, v8;
v0 = new junit.framework.TestSuite;
specialinvoke v0.<junit.framework.TestSuite: void <init>()>();
virtualinvoke v0.<junit.framework.TestSuite: void addTestSuite(java.lang.Class)>(class "Lcom/google/common/collect/testing/SafeTreeSetTest;");
v1 = new com.google.common.collect.testing.SafeTreeSetTest$1;
specialinvoke v1.<com.google.common.collect.testing.SafeTreeSetTest$1: void <init>()>();
v2 = staticinvoke <com.google.common.collect.testing.NavigableSetTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder using(com.google.common.collect.testing.TestSetGenerator)>(v1);
v3 = newarray (com.google.common.collect.testing.features.Feature)[3];
v4 = <com.google.common.collect.testing.features.CollectionSize: com.google.common.collect.testing.features.CollectionSize ANY>;
v3[0] = v4;
v5 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature KNOWN_ORDER>;
v3[1] = v5;
v6 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature GENERAL_PURPOSE>;
v3[2] = v6;
v7 = virtualinvoke v2.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(com.google.common.collect.testing.features.Feature[])>(v3);
v8 = virtualinvoke v7.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>("SafeTreeSet with natural comparator");
v9 = virtualinvoke v8.<com.google.common.collect.testing.SetTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
virtualinvoke v0.<junit.framework.TestSuite: void addTest(junit.framework.Test)>(v9);
v10 = new com.google.common.collect.testing.SafeTreeSetTest$2;
specialinvoke v10.<com.google.common.collect.testing.SafeTreeSetTest$2: void <init>()>();
v11 = staticinvoke <com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder using(com.google.common.collect.testing.TestSetGenerator)>(v10);
v12 = newarray (com.google.common.collect.testing.features.Feature)[4];
v13 = <com.google.common.collect.testing.features.CollectionSize: com.google.common.collect.testing.features.CollectionSize ANY>;
v12[0] = v13;
v14 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature KNOWN_ORDER>;
v12[1] = v14;
v15 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature GENERAL_PURPOSE>;
v12[2] = v15;
v16 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_VALUES>;
v12[3] = v16;
v17 = virtualinvoke v11.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(com.google.common.collect.testing.features.Feature[])>(v12);
v18 = virtualinvoke v17.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>("SafeTreeSet with null-friendly comparator");
v19 = virtualinvoke v18.<com.google.common.collect.testing.SetTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
virtualinvoke v0.<junit.framework.TestSuite: void addTest(junit.framework.Test)>(v19);
return v0;
}
public void testViewSerialization()
{
com.google.common.collect.testing.SafeTreeSetTest v0;
java.util.Collection v7, v9;
java.util.Set v5, v6;
java.lang.Integer v1, v2, v3;
java.util.ArrayList v11, v8;
java.lang.Object v10;
com.google.common.collect.ImmutableSortedMap v4;
v0 := @this: com.google.common.collect.testing.SafeTreeSetTest;
v1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
v4 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object)>("one", v1, "two", v2, "three", v3);
v5 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v5);
v6 = interfaceinvoke v4.<java.util.Map: java.util.Set keySet()>();
staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v6);
v7 = interfaceinvoke v4.<java.util.Map: java.util.Collection values()>();
v8 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v7);
v9 = interfaceinvoke v4.<java.util.Map: java.util.Collection values()>();
v10 = staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserialize(java.lang.Object)>(v9);
v11 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v10);
staticinvoke <com.google.common.collect.testing.SafeTreeSetTest: void assertEquals(java.lang.Object,java.lang.Object)>(v8, v11);
return;
}
public void testEmpty_serialization()
{
com.google.common.collect.testing.SafeTreeSetTest v0;
java.lang.Object v2;
java.util.Comparator v3, v4;
com.google.common.collect.testing.SafeTreeSet v1;
v0 := @this: com.google.common.collect.testing.SafeTreeSetTest;
v1 = new com.google.common.collect.testing.SafeTreeSet;
specialinvoke v1.<com.google.common.collect.testing.SafeTreeSet: void <init>()>();
v2 = staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v1);
v3 = interfaceinvoke v1.<java.util.SortedSet: java.util.Comparator comparator()>();
v4 = interfaceinvoke v2.<java.util.SortedSet: java.util.Comparator comparator()>();
staticinvoke <com.google.common.collect.testing.SafeTreeSetTest: void assertEquals(java.lang.Object,java.lang.Object)>(v3, v4);
return;
}
public void testSingle_serialization()
{
com.google.common.collect.testing.SafeTreeSetTest v0;
java.lang.Object v2;
java.util.Comparator v3, v4;
com.google.common.collect.testing.SafeTreeSet v1;
v0 := @this: com.google.common.collect.testing.SafeTreeSetTest;
v1 = new com.google.common.collect.testing.SafeTreeSet;
specialinvoke v1.<com.google.common.collect.testing.SafeTreeSet: void <init>()>();
interfaceinvoke v1.<java.util.SortedSet: boolean add(java.lang.Object)>("e");
v2 = staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v1);
v3 = interfaceinvoke v1.<java.util.SortedSet: java.util.Comparator comparator()>();
v4 = interfaceinvoke v2.<java.util.SortedSet: java.util.Comparator comparator()>();
staticinvoke <com.google.common.collect.testing.SafeTreeSetTest: void assertEquals(java.lang.Object,java.lang.Object)>(v3, v4);
return;
}
public void testSeveral_serialization()
{
com.google.common.collect.testing.SafeTreeSetTest v0;
java.lang.Object v2;
java.util.Comparator v3, v4;
com.google.common.collect.testing.SafeTreeSet v1;
v0 := @this: com.google.common.collect.testing.SafeTreeSetTest;
v1 = new com.google.common.collect.testing.SafeTreeSet;
specialinvoke v1.<com.google.common.collect.testing.SafeTreeSet: void <init>()>();
interfaceinvoke v1.<java.util.SortedSet: boolean add(java.lang.Object)>("a");
interfaceinvoke v1.<java.util.SortedSet: boolean add(java.lang.Object)>("b");
interfaceinvoke v1.<java.util.SortedSet: boolean add(java.lang.Object)>("c");
v2 = staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v1);
v3 = interfaceinvoke v1.<java.util.SortedSet: java.util.Comparator comparator()>();
v4 = interfaceinvoke v2.<java.util.SortedSet: java.util.Comparator comparator()>();
staticinvoke <com.google.common.collect.testing.SafeTreeSetTest: void assertEquals(java.lang.Object,java.lang.Object)>(v3, v4);
return;
}
}