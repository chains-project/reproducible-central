class com.google.common.testing.GcFinalizationTest$Interruptenator extends java.lang.Thread
{
final java.util.concurrent.atomic.AtomicBoolean shutdown;
final com.google.common.testing.GcFinalizationTest this$0;
void <init>(com.google.common.testing.GcFinalizationTest, java.lang.Thread)
{
com.google.common.testing.GcFinalizationTest v1;
java.lang.Thread v2;
java.util.concurrent.atomic.AtomicBoolean v3;
com.google.common.testing.GcFinalizationTest$Interruptenator v0;
v0 := @this: com.google.common.testing.GcFinalizationTest$Interruptenator;
v1 := @parameter0: com.google.common.testing.GcFinalizationTest;
v2 := @parameter1: java.lang.Thread;
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);
specialinvoke v0.<com.google.common.testing.GcFinalizationTest$Interruptenator: void <init>(com.google.common.testing.GcFinalizationTest,java.lang.Thread,java.util.concurrent.atomic.AtomicBoolean)>(v1, v2, v3);
return;
}
void <init>(com.google.common.testing.GcFinalizationTest, java.lang.Thread, java.util.concurrent.atomic.AtomicBoolean)
{
com.google.common.testing.GcFinalizationTest v1;
java.lang.Thread v2;
java.util.concurrent.atomic.AtomicBoolean v3;
com.google.common.testing.GcFinalizationTest$Interruptenator$1 v4;
com.google.common.testing.GcFinalizationTest$Interruptenator v0;
v0 := @this: com.google.common.testing.GcFinalizationTest$Interruptenator;
v1 := @parameter0: com.google.common.testing.GcFinalizationTest;
v2 := @parameter1: java.lang.Thread;
v3 := @parameter2: java.util.concurrent.atomic.AtomicBoolean;
v0.<com.google.common.testing.GcFinalizationTest$Interruptenator: com.google.common.testing.GcFinalizationTest this$0> = v1;
v4 = new com.google.common.testing.GcFinalizationTest$Interruptenator$1;
specialinvoke v4.<com.google.common.testing.GcFinalizationTest$Interruptenator$1: void <init>(com.google.common.testing.GcFinalizationTest,java.util.concurrent.atomic.AtomicBoolean,java.lang.Thread)>(v1, v3, v2);
specialinvoke v0.<java.lang.Thread: void <init>(java.lang.Runnable)>(v4);
v0.<com.google.common.testing.GcFinalizationTest$Interruptenator: java.util.concurrent.atomic.AtomicBoolean shutdown> = v3;
virtualinvoke v0.<com.google.common.testing.GcFinalizationTest$Interruptenator: void start()>();
return;
}
void shutdown()
{
java.util.concurrent.atomic.AtomicBoolean v1;
com.google.common.testing.GcFinalizationTest$Interruptenator v0;
boolean v2;
v0 := @this: com.google.common.testing.GcFinalizationTest$Interruptenator;
v1 = v0.<com.google.common.testing.GcFinalizationTest$Interruptenator: java.util.concurrent.atomic.AtomicBoolean shutdown>;
virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);
label1:
v2 = virtualinvoke v0.<com.google.common.testing.GcFinalizationTest$Interruptenator: boolean isAlive()>();
if v2 == 0 goto label2;
staticinvoke <java.lang.Thread: void yield()>();
goto label1;
label2:
return;
}
}