public class com.google.common.testing.NullPointerTesterTest$OneArg extends java.lang.Object
{
public void <init>()
{
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void staticOneArgCorrectlyThrowsNpe(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v0);
return;
}
public static void staticOneArgThrowsOtherThanNpe(java.lang.String)
{
java.lang.String v0;
com.google.common.testing.NullPointerTesterTest$FooException v1;
v0 := @parameter0: java.lang.String;
v1 = new com.google.common.testing.NullPointerTesterTest$FooException;
specialinvoke v1.<com.google.common.testing.NullPointerTesterTest$FooException: void <init>()>();
throw v1;
}
public static void staticOneArgShouldThrowNpeButDoesnt(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
return;
}
public static void staticOneArgCheckForNullCorrectlyDoesNotThrowNPE(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
return;
}
public static void staticOneArgJsr305NullableCorrectlyDoesNotThrowNPE(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
return;
}
public static void staticOneArgNullableCorrectlyDoesNotThrowNPE(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
return;
}
public static void staticOneArgCheckForNullCorrectlyThrowsOtherThanNPE(java.lang.String)
{
java.lang.String v0;
com.google.common.testing.NullPointerTesterTest$FooException v1;
v0 := @parameter0: java.lang.String;
v1 = new com.google.common.testing.NullPointerTesterTest$FooException;
specialinvoke v1.<com.google.common.testing.NullPointerTesterTest$FooException: void <init>()>();
throw v1;
}
public static void staticOneArgNullableCorrectlyThrowsOtherThanNPE(java.lang.String)
{
java.lang.String v0;
com.google.common.testing.NullPointerTesterTest$FooException v1;
v0 := @parameter0: java.lang.String;
v1 = new com.google.common.testing.NullPointerTesterTest$FooException;
specialinvoke v1.<com.google.common.testing.NullPointerTesterTest$FooException: void <init>()>();
throw v1;
}
public static void staticOneArgCheckForNullThrowsNPE(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v0);
return;
}
public static void staticOneArgNullableThrowsNPE(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v0);
return;
}
public void oneArgCorrectlyThrowsNpe(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
return;
}
public void oneArgThrowsOtherThanNpe(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
com.google.common.testing.NullPointerTesterTest$FooException v2;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
v2 = new com.google.common.testing.NullPointerTesterTest$FooException;
specialinvoke v2.<com.google.common.testing.NullPointerTesterTest$FooException: void <init>()>();
throw v2;
}
public void oneArgShouldThrowNpeButDoesnt(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
return;
}
public void oneArgCheckForNullCorrectlyDoesNotThrowNPE(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
return;
}
public void oneArgNullableCorrectlyDoesNotThrowNPE(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
return;
}
public void oneArgCheckForNullCorrectlyThrowsOtherThanNPE(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
com.google.common.testing.NullPointerTesterTest$FooException v2;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
v2 = new com.google.common.testing.NullPointerTesterTest$FooException;
specialinvoke v2.<com.google.common.testing.NullPointerTesterTest$FooException: void <init>()>();
throw v2;
}
public void oneArgNullableCorrectlyThrowsOtherThanNPE(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
com.google.common.testing.NullPointerTesterTest$FooException v2;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
v2 = new com.google.common.testing.NullPointerTesterTest$FooException;
specialinvoke v2.<com.google.common.testing.NullPointerTesterTest$FooException: void <init>()>();
throw v2;
}
public void oneArgCheckForNullThrowsNPE(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
return;
}
public void oneArgNullableThrowsNPE(java.lang.String)
{
java.lang.String v1;
com.google.common.testing.NullPointerTesterTest$OneArg v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$OneArg;
v1 := @parameter0: java.lang.String;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
return;
}
}