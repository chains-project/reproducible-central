class com.google.common.testing.TearDownStackTest$2 extends java.lang.Object implements com.google.common.testing.TearDown
{
final com.google.common.testing.TearDownStack val$result;
final com.google.common.testing.TearDownStackTest this$0;
void <init>(com.google.common.testing.TearDownStackTest, com.google.common.testing.TearDownStack)
{
com.google.common.testing.TearDownStackTest v1;
com.google.common.testing.TearDownStackTest$2 v0;
com.google.common.testing.TearDownStack v2;
v0 := @this: com.google.common.testing.TearDownStackTest$2;
v1 := @parameter0: com.google.common.testing.TearDownStackTest;
v2 := @parameter1: com.google.common.testing.TearDownStack;
v0.<com.google.common.testing.TearDownStackTest$2: com.google.common.testing.TearDownStackTest this$0> = v1;
v0.<com.google.common.testing.TearDownStackTest$2: com.google.common.testing.TearDownStack val$result> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void tearDown() throws java.lang.Exception
{
java.lang.Throwable v6;
com.google.common.testing.TearDownStackTest$2 v0;
int v5;
java.util.LinkedList v2, v4;
com.google.common.testing.TearDownStack v1, v3;
v0 := @this: com.google.common.testing.TearDownStackTest$2;
v1 = v0.<com.google.common.testing.TearDownStackTest$2: com.google.common.testing.TearDownStack val$result>;
v2 = v1.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
entermonitor v2;
label1:
v3 = v0.<com.google.common.testing.TearDownStackTest$2: com.google.common.testing.TearDownStack val$result>;
v4 = v3.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
v5 = virtualinvoke v4.<java.util.LinkedList: int size()>();
staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>("The test should have cleared the stack (say, by virtue of running runTearDown)", 0, v5);
exitmonitor v2;
label2:
goto label4;
label3:
v6 := @caughtexception;
exitmonitor v2;
throw v6;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}