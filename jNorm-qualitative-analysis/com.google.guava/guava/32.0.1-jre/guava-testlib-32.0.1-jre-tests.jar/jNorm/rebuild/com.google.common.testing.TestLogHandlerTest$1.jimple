class com.google.common.testing.TestLogHandlerTest$1 extends java.lang.Object implements com.google.common.testing.TearDown
{
final com.google.common.testing.TestLogHandlerTest this$0;
void <init>(com.google.common.testing.TestLogHandlerTest)
{
com.google.common.testing.TestLogHandlerTest v1;
com.google.common.testing.TestLogHandlerTest$1 v0;
v0 := @this: com.google.common.testing.TestLogHandlerTest$1;
v1 := @parameter0: com.google.common.testing.TestLogHandlerTest;
v0.<com.google.common.testing.TestLogHandlerTest$1: com.google.common.testing.TestLogHandlerTest this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void tearDown() throws java.lang.Exception
{
com.google.common.testing.TestLogHandlerTest v3;
com.google.common.testing.TestLogHandlerTest$1 v0;
com.google.common.testing.TestLogHandler v4;
java.util.logging.Logger v1, v2;
v0 := @this: com.google.common.testing.TestLogHandlerTest$1;
v1 = <com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest: java.util.logging.Logger logger>;
virtualinvoke v1.<java.util.logging.Logger: void setUseParentHandlers(boolean)>(1);
v2 = <com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest: java.util.logging.Logger logger>;
v3 = v0.<com.google.common.testing.TestLogHandlerTest$1: com.google.common.testing.TestLogHandlerTest this$0>;
v4 = v3.<com.google.common.testing.TestLogHandlerTest: com.google.common.testing.TestLogHandler handler>;
virtualinvoke v2.<java.util.logging.Logger: void removeHandler(java.util.logging.Handler)>(v4);
return;
}
}