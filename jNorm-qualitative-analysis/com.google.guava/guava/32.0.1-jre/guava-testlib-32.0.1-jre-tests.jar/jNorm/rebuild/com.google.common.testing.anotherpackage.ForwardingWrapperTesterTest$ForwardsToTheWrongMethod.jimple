class com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod extends java.lang.Object implements com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic
{
private final com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic arithmetic;
void <init>(com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic)
{
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod v0;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic v1;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod;
v1 := @parameter0: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic arithmetic> = v1;
return;
}
public int minus(int, int)
{
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic v3;
int v1, v2, v4;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod v0;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic arithmetic>;
v4 = interfaceinvoke v3.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic: int add(int,int)>(v1, v2);
return v4;
}
public int add(int, int)
{
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic v3;
int v1, v2, v4;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod v0;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic arithmetic>;
v4 = interfaceinvoke v3.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic: int add(int,int)>(v1, v2);
return v4;
}
public java.lang.String toString()
{
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod v0;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic v1;
java.lang.String v2;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod;
v1 = v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardsToTheWrongMethod: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Arithmetic arithmetic>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
}