public class com.google.common.collect.testing.SafeTreeMapTest extends junit.framework.TestCase
{
public void <init>()
{
com.google.common.collect.testing.SafeTreeMapTest v0;
v0 := @this: com.google.common.collect.testing.SafeTreeMapTest;
specialinvoke v0.<junit.framework.TestCase: void <init>()>();
return;
}
public static junit.framework.Test suite()
{
java.lang.Object[] v15, v3;
junit.framework.TestSuite v0, v12, v26;
com.google.common.collect.testing.NavigableMapTestSuiteBuilder v14, v2;
com.google.common.collect.testing.SafeTreeMapTest$1 v1;
com.google.common.collect.testing.features.CollectionFeature v17, v22, v23, v5, v6, v8;
com.google.common.collect.testing.SafeTreeMapTest$2 v13;
com.google.common.collect.testing.features.CollectionSize v16, v4;
com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder v10, v11, v24, v25;
com.google.common.collect.testing.features.MapFeature v18, v19, v20, v21, v7, v9;
v0 = new junit.framework.TestSuite;
specialinvoke v0.<junit.framework.TestSuite: void <init>()>();
virtualinvoke v0.<junit.framework.TestSuite: void addTestSuite(java.lang.Class)>(class "Lcom/google/common/collect/testing/SafeTreeMapTest;");
v1 = new com.google.common.collect.testing.SafeTreeMapTest$1;
specialinvoke v1.<com.google.common.collect.testing.SafeTreeMapTest$1: void <init>()>();
v2 = staticinvoke <com.google.common.collect.testing.NavigableMapTestSuiteBuilder: com.google.common.collect.testing.NavigableMapTestSuiteBuilder using(com.google.common.collect.testing.TestSortedMapGenerator)>(v1);
v3 = newarray (com.google.common.collect.testing.features.Feature)[6];
v4 = <com.google.common.collect.testing.features.CollectionSize: com.google.common.collect.testing.features.CollectionSize ANY>;
v3[0] = v4;
v5 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature KNOWN_ORDER>;
v3[1] = v5;
v6 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE>;
v3[2] = v6;
v7 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUES>;
v3[3] = v7;
v8 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SUPPORTS_ITERATOR_REMOVE>;
v3[4] = v8;
v9 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature GENERAL_PURPOSE>;
v3[5] = v9;
v10 = virtualinvoke v2.<com.google.common.collect.testing.NavigableMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(com.google.common.collect.testing.features.Feature[])>(v3);
v11 = virtualinvoke v10.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>("SafeTreeMap with natural comparator");
v12 = virtualinvoke v11.<com.google.common.collect.testing.MapTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
virtualinvoke v0.<junit.framework.TestSuite: void addTest(junit.framework.Test)>(v12);
v13 = new com.google.common.collect.testing.SafeTreeMapTest$2;
specialinvoke v13.<com.google.common.collect.testing.SafeTreeMapTest$2: void <init>()>();
v14 = staticinvoke <com.google.common.collect.testing.NavigableMapTestSuiteBuilder: com.google.common.collect.testing.NavigableMapTestSuiteBuilder using(com.google.common.collect.testing.TestSortedMapGenerator)>(v13);
v15 = newarray (com.google.common.collect.testing.features.Feature)[8];
v16 = <com.google.common.collect.testing.features.CollectionSize: com.google.common.collect.testing.features.CollectionSize ANY>;
v15[0] = v16;
v17 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature KNOWN_ORDER>;
v15[1] = v17;
v18 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_KEYS>;
v15[2] = v18;
v19 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUES>;
v15[3] = v19;
v20 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_ANY_NULL_QUERIES>;
v15[4] = v20;
v21 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature GENERAL_PURPOSE>;
v15[5] = v21;
v22 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SUPPORTS_ITERATOR_REMOVE>;
v15[6] = v22;
v23 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE>;
v15[7] = v23;
v24 = virtualinvoke v14.<com.google.common.collect.testing.NavigableMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(com.google.common.collect.testing.features.Feature[])>(v15);
v25 = virtualinvoke v24.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>("SafeTreeMap with null-friendly comparator");
v26 = virtualinvoke v25.<com.google.common.collect.testing.MapTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
virtualinvoke v0.<junit.framework.TestSuite: void addTest(junit.framework.Test)>(v26);
return v0;
}
public void testViewSerialization()
{
java.util.Collection v7, v9;
java.util.Set v5, v6;
java.lang.Integer v1, v2, v3;
java.util.ArrayList v11, v8;
java.lang.Object v10;
com.google.common.collect.testing.SafeTreeMapTest v0;
com.google.common.collect.ImmutableSortedMap v4;
v0 := @this: com.google.common.collect.testing.SafeTreeMapTest;
v1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
v4 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object)>("one", v1, "two", v2, "three", v3);
v5 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v5);
v6 = interfaceinvoke v4.<java.util.Map: java.util.Set keySet()>();
staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserializeAndAssert(java.lang.Object)>(v6);
v7 = interfaceinvoke v4.<java.util.Map: java.util.Collection values()>();
v8 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v7);
v9 = interfaceinvoke v4.<java.util.Map: java.util.Collection values()>();
v10 = staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserialize(java.lang.Object)>(v9);
v11 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v10);
staticinvoke <com.google.common.collect.testing.SafeTreeMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(v8, v11);
return;
}
}