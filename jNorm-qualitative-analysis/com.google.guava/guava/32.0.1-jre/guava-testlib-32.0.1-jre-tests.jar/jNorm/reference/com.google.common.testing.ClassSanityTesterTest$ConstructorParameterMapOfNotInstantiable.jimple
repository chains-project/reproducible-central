class com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable extends java.lang.Object
{
private final java.util.Map m;
public void <init>(java.util.Map)
{
com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable v0;
java.lang.Object v2;
java.util.Map v1;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
v0.<com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable: java.util.Map m> = v2;
return;
}
public boolean equals(java.lang.Object)
{
com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable v0;
java.util.Map v3, v4;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable;
if v2 == 0 goto label1;
v3 = v0.<com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable: java.util.Map m>;
v4 = v1.<com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable: java.util.Map m>;
v5 = interfaceinvoke v3.<java.util.Map: boolean equals(java.lang.Object)>(v4);
return v5;
label1:
return 0;
}
public int hashCode()
{
int v2;
com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable v0;
java.util.Map v1;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable;
v1 = v0.<com.google.common.testing.ClassSanityTesterTest$ConstructorParameterMapOfNotInstantiable: java.util.Map m>;
v2 = interfaceinvoke v1.<java.util.Map: int hashCode()>();
return v2;
}
}