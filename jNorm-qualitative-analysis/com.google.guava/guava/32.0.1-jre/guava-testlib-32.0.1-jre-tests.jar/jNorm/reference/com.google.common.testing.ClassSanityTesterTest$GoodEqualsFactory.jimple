public class com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory extends java.lang.Object
{
public void <init>()
{
com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Object good(java.lang.String, int, com.google.common.testing.ClassSanityTesterTest$OneConstantEnum, com.google.common.testing.ClassSanityTesterTest$NoConstantEnum)
{
com.google.common.testing.ClassSanityTesterTest$GoodEquals v4;
com.google.common.testing.ClassSanityTesterTest$NoConstantEnum v3;
int v1;
java.lang.String v0;
com.google.common.testing.ClassSanityTesterTest$OneConstantEnum v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: com.google.common.testing.ClassSanityTesterTest$OneConstantEnum;
v3 := @parameter3: com.google.common.testing.ClassSanityTesterTest$NoConstantEnum;
v4 = new com.google.common.testing.ClassSanityTesterTest$GoodEquals;
specialinvoke v4.<com.google.common.testing.ClassSanityTesterTest$GoodEquals: void <init>(java.lang.String,int)>(v0, v1);
return v4;
}
public java.lang.Object badIgnored()
{
com.google.common.testing.ClassSanityTesterTest$BadEquals v1;
com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory;
v1 = new com.google.common.testing.ClassSanityTesterTest$BadEquals;
specialinvoke v1.<com.google.common.testing.ClassSanityTesterTest$BadEquals: void <init>()>();
return v1;
}
public int returnsInt()
{
java.lang.UnsupportedOperationException v1;
com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void voidMethod()
{
java.lang.UnsupportedOperationException v1;
com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$GoodEqualsFactory;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
static java.lang.Object badButNotPublic()
{
com.google.common.testing.ClassSanityTesterTest$BadEquals v0;
v0 = new com.google.common.testing.ClassSanityTesterTest$BadEquals;
specialinvoke v0.<com.google.common.testing.ClassSanityTesterTest$BadEquals: void <init>()>();
return v0;
}
}