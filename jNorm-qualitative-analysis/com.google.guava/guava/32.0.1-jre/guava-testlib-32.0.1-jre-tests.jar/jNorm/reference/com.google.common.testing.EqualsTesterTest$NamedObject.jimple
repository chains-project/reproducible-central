class com.google.common.testing.EqualsTesterTest$NamedObject extends java.lang.Object
{
private final java.util.Set peerNames;
private final java.lang.String name;
void <init>(java.lang.String)
{
java.util.HashSet v2;
com.google.common.testing.EqualsTesterTest$NamedObject v0;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: com.google.common.testing.EqualsTesterTest$NamedObject;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();
v0.<com.google.common.testing.EqualsTesterTest$NamedObject: java.util.Set peerNames> = v2;
v3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
v0.<com.google.common.testing.EqualsTesterTest$NamedObject: java.lang.String name> = v3;
return;
}
transient com.google.common.testing.EqualsTesterTest$NamedObject addPeers(java.lang.String[])
{
com.google.common.collect.ImmutableList v3;
com.google.common.testing.EqualsTesterTest$NamedObject v0;
java.util.Set v2;
java.lang.String[] v1;
v0 := @this: com.google.common.testing.EqualsTesterTest$NamedObject;
v1 := @parameter0: java.lang.String[];
v2 = v0.<com.google.common.testing.EqualsTesterTest$NamedObject: java.util.Set peerNames>;
v3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>(v1);
interfaceinvoke v2.<java.util.Set: boolean addAll(java.util.Collection)>(v3);
return v0;
}
public boolean equals(java.lang.Object)
{
com.google.common.testing.EqualsTesterTest$NamedObject v0;
java.util.Set v6;
java.lang.Object v1;
java.lang.String v3, v4, v7;
boolean v2, v5, v8, v9;
v0 := @this: com.google.common.testing.EqualsTesterTest$NamedObject;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof com.google.common.testing.EqualsTesterTest$NamedObject;
if v2 == 0 goto label4;
v3 = v0.<com.google.common.testing.EqualsTesterTest$NamedObject: java.lang.String name>;
v4 = v1.<com.google.common.testing.EqualsTesterTest$NamedObject: java.lang.String name>;
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 != 0 goto label1;
v6 = v0.<com.google.common.testing.EqualsTesterTest$NamedObject: java.util.Set peerNames>;
v7 = v1.<com.google.common.testing.EqualsTesterTest$NamedObject: java.lang.String name>;
v8 = interfaceinvoke v6.<java.util.Set: boolean contains(java.lang.Object)>(v7);
if v8 == 0 goto label2;
label1:
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
label4:
return 0;
}
public int hashCode()
{
com.google.common.testing.EqualsTesterTest$NamedObject v0;
v0 := @this: com.google.common.testing.EqualsTesterTest$NamedObject;
return 0;
}
public java.lang.String toString()
{
java.lang.String v1;
com.google.common.testing.EqualsTesterTest$NamedObject v0;
v0 := @this: com.google.common.testing.EqualsTesterTest$NamedObject;
v1 = v0.<com.google.common.testing.EqualsTesterTest$NamedObject: java.lang.String name>;
return v1;
}
}