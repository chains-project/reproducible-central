class com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker extends com.google.common.testing.NullPointerTesterTest$DefaultValueChecker
{
private void <init>()
{
com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker;
specialinvoke v0.<com.google.common.testing.NullPointerTesterTest$DefaultValueChecker: void <init>()>();
return;
}
public void checkArray(com.google.common.testing.NullPointerTesterTest$NullRejectingFromTo, java.lang.String)
{
com.google.common.testing.NullPointerTesterTest$NullRejectingFromTo v1;
com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker v0;
java.lang.Object[] v3;
java.lang.String v2;
v0 := @this: com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker;
v1 := @parameter0: com.google.common.testing.NullPointerTesterTest$NullRejectingFromTo;
v2 := @parameter1: java.lang.String;
v3 = newarray (java.lang.Object)[2];
v3[0] = v1;
v3[1] = v2;
virtualinvoke v0.<com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker: void calledWith(java.lang.Object[])>(v3);
return;
}
void check()
{
com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker v0;
java.lang.Object v1;
java.lang.NullPointerException v2;
v0 := @this: com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker;
virtualinvoke v0.<com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker: com.google.common.testing.NullPointerTesterTest$DefaultValueChecker runTester()>();
v1 = virtualinvoke v0.<com.google.common.testing.NullPointerTesterTest$NullRejectingInterfaceDefaultValueChecker: java.lang.Object getDefaultParameterValue(int)>(0);
staticinvoke <junit.framework.TestCase: void assertNotNull(java.lang.Object)>(v1);
label1:
interfaceinvoke v1.<com.google.common.testing.NullPointerTesterTest$NullRejectingFromTo: java.lang.Object apply(java.lang.Object)>(null);
staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>("Proxy Should have rejected null");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
}