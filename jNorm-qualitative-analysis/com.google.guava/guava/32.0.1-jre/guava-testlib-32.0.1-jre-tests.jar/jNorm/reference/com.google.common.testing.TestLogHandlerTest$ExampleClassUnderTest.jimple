class com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest extends java.lang.Object
{
static final java.util.logging.Logger logger;
void <init>()
{
com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest v0;
v0 := @this: com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void foo()
{
java.util.logging.Logger v0;
java.lang.Exception v2;
java.util.logging.Level v1;
v0 = <com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest: java.util.logging.Logger logger>;
v1 = <java.util.logging.Level: java.util.logging.Level INFO>;
v2 = <com.google.common.testing.TestLogHandlerTest: java.lang.Exception EXCEPTION>;
virtualinvoke v0.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(v1, "message", v2);
return;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lcom/google/common/testing/TestLogHandlerTest$ExampleClassUnderTest;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<com.google.common.testing.TestLogHandlerTest$ExampleClassUnderTest: java.util.logging.Logger logger> = v2;
return;
}
}