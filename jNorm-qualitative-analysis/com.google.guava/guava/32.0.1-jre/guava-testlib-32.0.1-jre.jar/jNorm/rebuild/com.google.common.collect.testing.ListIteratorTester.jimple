public abstract class com.google.common.collect.testing.ListIteratorTester extends com.google.common.collect.testing.AbstractIteratorTester
{
protected void <init>(int, java.lang.Iterable, java.lang.Iterable, java.lang.Iterable, int)
{
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v6;
int v1, v5;
com.google.common.collect.testing.ListIteratorTester v0;
java.lang.Iterable v2, v3, v4;
v0 := @this: com.google.common.collect.testing.ListIteratorTester;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Iterable;
v3 := @parameter2: java.lang.Iterable;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: int;
v6 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v0.<com.google.common.collect.testing.AbstractIteratorTester: void <init>(int,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder,int)>(v1, v2, v3, v4, v6, v5);
return;
}
protected final java.lang.Iterable getStimulusValues()
{
java.util.List v2, v3;
com.google.common.collect.testing.ListIteratorTester v0;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.ListIteratorTester;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.ListIteratorTester: java.util.List iteratorStimuli()>();
staticinvoke <com.google.common.collect.testing.Helpers: boolean addAll(java.util.Collection,java.lang.Iterable)>(v1, v2);
v3 = virtualinvoke v0.<com.google.common.collect.testing.ListIteratorTester: java.util.List listIteratorStimuli()>();
staticinvoke <com.google.common.collect.testing.Helpers: boolean addAll(java.util.Collection,java.lang.Iterable)>(v1, v3);
return v1;
}
protected abstract java.util.ListIterator newTargetIterator();
}