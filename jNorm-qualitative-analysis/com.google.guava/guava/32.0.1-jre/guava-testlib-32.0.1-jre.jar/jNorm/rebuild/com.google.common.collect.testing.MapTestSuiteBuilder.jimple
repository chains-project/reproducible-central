public class com.google.common.collect.testing.MapTestSuiteBuilder extends com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder
{
public void <init>()
{
com.google.common.collect.testing.MapTestSuiteBuilder v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilder;
specialinvoke v0.<com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder: void <init>()>();
return;
}
public static com.google.common.collect.testing.MapTestSuiteBuilder using(com.google.common.collect.testing.TestMapGenerator)
{
com.google.common.collect.testing.MapTestSuiteBuilder v1;
com.google.common.collect.testing.TestMapGenerator v0;
com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder v2;
v0 := @parameter0: com.google.common.collect.testing.TestMapGenerator;
v1 = new com.google.common.collect.testing.MapTestSuiteBuilder;
specialinvoke v1.<com.google.common.collect.testing.MapTestSuiteBuilder: void <init>()>();
v2 = virtualinvoke v1.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder usingGenerator(java.lang.Object)>(v0);
return v2;
}
protected java.util.List getTesters()
{
java.lang.Class[] v1;
java.util.List v2;
com.google.common.collect.testing.MapTestSuiteBuilder v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilder;
v1 = newarray (java.lang.Class)[26];
v1[0] = class "Lcom/google/common/collect/testing/testers/MapClearTester;";
v1[1] = class "Lcom/google/common/collect/testing/testers/MapComputeTester;";
v1[2] = class "Lcom/google/common/collect/testing/testers/MapComputeIfAbsentTester;";
v1[3] = class "Lcom/google/common/collect/testing/testers/MapComputeIfPresentTester;";
v1[4] = class "Lcom/google/common/collect/testing/testers/MapContainsKeyTester;";
v1[5] = class "Lcom/google/common/collect/testing/testers/MapContainsValueTester;";
v1[6] = class "Lcom/google/common/collect/testing/testers/MapCreationTester;";
v1[7] = class "Lcom/google/common/collect/testing/testers/MapEntrySetTester;";
v1[8] = class "Lcom/google/common/collect/testing/testers/MapEqualsTester;";
v1[9] = class "Lcom/google/common/collect/testing/testers/MapForEachTester;";
v1[10] = class "Lcom/google/common/collect/testing/testers/MapGetTester;";
v1[11] = class "Lcom/google/common/collect/testing/testers/MapGetOrDefaultTester;";
v1[12] = class "Lcom/google/common/collect/testing/testers/MapHashCodeTester;";
v1[13] = class "Lcom/google/common/collect/testing/testers/MapIsEmptyTester;";
v1[14] = class "Lcom/google/common/collect/testing/testers/MapMergeTester;";
v1[15] = class "Lcom/google/common/collect/testing/testers/MapPutTester;";
v1[16] = class "Lcom/google/common/collect/testing/testers/MapPutAllTester;";
v1[17] = class "Lcom/google/common/collect/testing/testers/MapPutIfAbsentTester;";
v1[18] = class "Lcom/google/common/collect/testing/testers/MapRemoveTester;";
v1[19] = class "Lcom/google/common/collect/testing/testers/MapRemoveEntryTester;";
v1[20] = class "Lcom/google/common/collect/testing/testers/MapReplaceTester;";
v1[21] = class "Lcom/google/common/collect/testing/testers/MapReplaceAllTester;";
v1[22] = class "Lcom/google/common/collect/testing/testers/MapReplaceEntryTester;";
v1[23] = class "Lcom/google/common/collect/testing/testers/MapSerializationTester;";
v1[24] = class "Lcom/google/common/collect/testing/testers/MapSizeTester;";
v1[25] = class "Lcom/google/common/collect/testing/testers/MapToStringTester;";
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v2;
}
protected java.util.List createDerivedSuites(com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder)
{
junit.framework.TestSuite v21, v37, v53, v69;
com.google.common.collect.testing.DerivedCollectionGenerators$MapValueCollectionGenerator v54;
com.google.common.collect.testing.DerivedCollectionGenerators$MapEntrySetGenerator v22;
java.util.Set v10, v15, v25, v26, v3, v31, v41, v42, v47, v60, v61, v63, v9;
com.google.common.collect.testing.CollectionTestSuiteBuilder v56;
java.lang.String v12, v13, v28, v29, v44, v45, v57, v58;
com.google.common.collect.testing.MapTestSuiteBuilder v0, v8;
com.google.common.collect.testing.SetTestSuiteBuilder v24, v40;
com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder v1, v11, v14, v16, v18, v20, v27, v30, v32, v34, v36, v43, v46, v48, v50, v52, v59, v62, v64, v66, v68;
java.lang.Runnable v17, v19, v33, v35, v49, v51, v65, v67;
com.google.common.collect.testing.features.CollectionFeature v4;
boolean v5;
java.util.List v2;
com.google.common.collect.testing.TestSetGenerator v39;
com.google.common.collect.testing.MapTestSuiteBuilder$ReserializedMapGenerator v6;
java.lang.Object v23, v38, v55, v7;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilder;
v1 := @parameter0: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder;
v2 = specialinvoke v0.<com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder: java.util.List createDerivedSuites(com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder)>(v1);
v3 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v4 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE>;
v5 = interfaceinvoke v3.<java.util.Set: boolean contains(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = new com.google.common.collect.testing.MapTestSuiteBuilder$ReserializedMapGenerator;
v7 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
specialinvoke v6.<com.google.common.collect.testing.MapTestSuiteBuilder$ReserializedMapGenerator: void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v7);
v8 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.MapTestSuiteBuilder using(com.google.common.collect.testing.TestMapGenerator)>(v6);
v9 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v10 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeReserializedMapFeatures(java.util.Set)>(v9);
v11 = virtualinvoke v8.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v10);
v12 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 reserialized");
v14 = virtualinvoke v11.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v13);
v15 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v16 = virtualinvoke v14.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v15);
v17 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v18 = virtualinvoke v16.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v17);
v19 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v20 = virtualinvoke v18.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v19);
v21 = virtualinvoke v20.<com.google.common.collect.testing.MapTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v21);
label1:
v22 = new com.google.common.collect.testing.DerivedCollectionGenerators$MapEntrySetGenerator;
v23 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
specialinvoke v22.<com.google.common.collect.testing.DerivedCollectionGenerators$MapEntrySetGenerator: void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v23);
v24 = virtualinvoke v0.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder createDerivedEntrySetSuite(com.google.common.collect.testing.TestSetGenerator)>(v22);
v25 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v26 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeEntrySetFeatures(java.util.Set)>(v25);
v27 = virtualinvoke v24.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v26);
v28 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v28) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 entrySet");
v30 = virtualinvoke v27.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v29);
v31 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v32 = virtualinvoke v30.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v31);
v33 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v34 = virtualinvoke v32.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v33);
v35 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v36 = virtualinvoke v34.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v35);
v37 = virtualinvoke v36.<com.google.common.collect.testing.SetTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v37);
v38 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
v39 = staticinvoke <com.google.common.collect.testing.DerivedCollectionGenerators: com.google.common.collect.testing.TestSetGenerator keySetGenerator(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v38);
v40 = virtualinvoke v0.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder createDerivedKeySetSuite(com.google.common.collect.testing.TestSetGenerator)>(v39);
v41 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v42 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeKeySetFeatures(java.util.Set)>(v41);
v43 = virtualinvoke v40.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v42);
v44 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v45 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v44) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 keys");
v46 = virtualinvoke v43.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v45);
v47 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v48 = virtualinvoke v46.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v47);
v49 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v50 = virtualinvoke v48.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v49);
v51 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v52 = virtualinvoke v50.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v51);
v53 = virtualinvoke v52.<com.google.common.collect.testing.SetTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v53);
v54 = new com.google.common.collect.testing.DerivedCollectionGenerators$MapValueCollectionGenerator;
v55 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
specialinvoke v54.<com.google.common.collect.testing.DerivedCollectionGenerators$MapValueCollectionGenerator: void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v55);
v56 = virtualinvoke v0.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.CollectionTestSuiteBuilder createDerivedValueCollectionSuite(com.google.common.collect.testing.TestCollectionGenerator)>(v54);
v57 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v58 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v57) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 values");
v59 = virtualinvoke v56.<com.google.common.collect.testing.CollectionTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v58);
v60 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v61 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeValuesCollectionFeatures(java.util.Set)>(v60);
v62 = virtualinvoke v59.<com.google.common.collect.testing.CollectionTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v61);
v63 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v64 = virtualinvoke v62.<com.google.common.collect.testing.CollectionTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v63);
v65 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v66 = virtualinvoke v64.<com.google.common.collect.testing.CollectionTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v65);
v67 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v68 = virtualinvoke v66.<com.google.common.collect.testing.CollectionTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v67);
v69 = virtualinvoke v68.<com.google.common.collect.testing.CollectionTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v69);
return v2;
}
protected com.google.common.collect.testing.SetTestSuiteBuilder createDerivedEntrySetSuite(com.google.common.collect.testing.TestSetGenerator)
{
com.google.common.collect.testing.MapTestSuiteBuilder v0;
com.google.common.collect.testing.SetTestSuiteBuilder v2;
com.google.common.collect.testing.TestSetGenerator v1;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilder;
v1 := @parameter0: com.google.common.collect.testing.TestSetGenerator;
v2 = staticinvoke <com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder using(com.google.common.collect.testing.TestSetGenerator)>(v1);
return v2;
}
protected com.google.common.collect.testing.SetTestSuiteBuilder createDerivedKeySetSuite(com.google.common.collect.testing.TestSetGenerator)
{
com.google.common.collect.testing.MapTestSuiteBuilder v0;
com.google.common.collect.testing.SetTestSuiteBuilder v2;
com.google.common.collect.testing.TestSetGenerator v1;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilder;
v1 := @parameter0: com.google.common.collect.testing.TestSetGenerator;
v2 = staticinvoke <com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder using(com.google.common.collect.testing.TestSetGenerator)>(v1);
return v2;
}
protected com.google.common.collect.testing.CollectionTestSuiteBuilder createDerivedValueCollectionSuite(com.google.common.collect.testing.TestCollectionGenerator)
{
com.google.common.collect.testing.TestCollectionGenerator v1;
com.google.common.collect.testing.MapTestSuiteBuilder v0;
com.google.common.collect.testing.CollectionTestSuiteBuilder v2;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilder;
v1 := @parameter0: com.google.common.collect.testing.TestCollectionGenerator;
v2 = staticinvoke <com.google.common.collect.testing.CollectionTestSuiteBuilder: com.google.common.collect.testing.CollectionTestSuiteBuilder using(com.google.common.collect.testing.TestCollectionGenerator)>(v1);
return v2;
}
private static java.util.Set computeReserializedMapFeatures(java.util.Set)
{
com.google.common.collect.testing.features.CollectionFeature v2, v3;
java.util.Set v0, v1;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Set copyToSet(java.lang.Iterable)>(v0);
v2 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE>;
interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v2);
v3 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE_INCLUDING_VIEWS>;
interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v3);
return v1;
}
private static java.util.Set computeEntrySetFeatures(java.util.Set)
{
com.google.common.collect.testing.features.CollectionFeature v4;
java.util.Set v0, v1;
com.google.common.collect.testing.features.MapFeature v2;
boolean v3;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)>(v0);
v2 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_ENTRY_QUERIES>;
v3 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v2);
if v3 == 0 goto label1;
v4 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_QUERIES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v4);
label1:
return v1;
}
private static java.util.Set computeKeySetFeatures(java.util.Set)
{
java.util.Set v0, v1;
com.google.common.collect.testing.features.CollectionFeature v2, v5, v8;
com.google.common.collect.testing.features.MapFeature v3, v6;
boolean v4, v7;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)>(v0);
v2 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SUBSET_VIEW>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v2);
v3 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_KEYS>;
v4 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v4 == 0 goto label1;
v5 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_VALUES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v5);
goto label2;
label1:
v6 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_KEY_QUERIES>;
v7 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v6);
if v7 == 0 goto label2;
v8 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_QUERIES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v8);
label2:
return v1;
}
private static java.util.Set computeValuesCollectionFeatures(java.util.Set)
{
java.util.Set v0, v1;
com.google.common.collect.testing.features.CollectionFeature v4, v7;
com.google.common.collect.testing.features.MapFeature v2, v5;
boolean v3, v6;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)>(v0);
v2 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUE_QUERIES>;
v3 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v2);
if v3 == 0 goto label1;
v4 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_QUERIES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v4);
label1:
v5 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUES>;
v6 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v5);
if v6 == 0 goto label2;
v7 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_VALUES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v7);
label2:
return v1;
}
public static java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)
{
com.google.common.collect.testing.features.CollectionFeature[] v16;
java.util.HashSet v1, v2;
com.google.common.collect.testing.features.CollectionFeature v12, v15, v19, v3, v4, v6, v9;
int v17, v18, v22, v23;
boolean v11, v14, v20, v25, v5, v8;
java.util.Set v0;
com.google.common.collect.testing.features.CollectionSize v24;
com.google.common.collect.testing.features.MapFeature v10, v13, v7;
com.google.common.collect.testing.features.CollectionSize[] v21;
v0 := @parameter0: java.util.Set;
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v0);
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE>;
interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v3);
v4 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE_INCLUDING_VIEWS>;
v5 = interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v4);
if v5 == 0 goto label01;
v6 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SERIALIZABLE>;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v6);
label01:
v7 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature SUPPORTS_REMOVE>;
v8 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v7);
if v8 == 0 goto label02;
v9 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature SUPPORTS_REMOVE>;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v9);
label02:
v10 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature REJECTS_DUPLICATES_AT_CREATION>;
v11 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v10);
if v11 == 0 goto label03;
v12 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature REJECTS_DUPLICATES_AT_CREATION>;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v12);
label03:
v13 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature FAILS_FAST_ON_CONCURRENT_MODIFICATION>;
v14 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v13);
if v14 == 0 goto label04;
v15 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature FAILS_FAST_ON_CONCURRENT_MODIFICATION>;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v15);
label04:
v16 = staticinvoke <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature[] values()>();
v17 = lengthof v16;
v18 = 0;
label05:
if v18 >= v17 goto label07;
v19 = v16[v18];
v20 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v19);
if v20 == 0 goto label06;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v19);
label06:
v18 = v18 + 1;
goto label05;
label07:
v21 = staticinvoke <com.google.common.collect.testing.features.CollectionSize: com.google.common.collect.testing.features.CollectionSize[] values()>();
v22 = lengthof v21;
v23 = 0;
label08:
if v23 >= v22 goto label10;
v24 = v21[v23];
v25 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v24);
if v25 == 0 goto label09;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v24);
label09:
v23 = v23 + 1;
goto label08;
label10:
return v2;
}
}