public final class com.google.common.collect.testing.MinimalIterable extends java.lang.Object implements java.lang.Iterable
{
private java.util.Iterator iterator;
public static transient com.google.common.collect.testing.MinimalIterable of(java.lang.Object[])
{
java.util.List v2;
java.lang.Object[] v0;
java.util.Iterator v3;
com.google.common.collect.testing.MinimalIterable v1;
v0 := @parameter0: java.lang.Object[];
v1 = new com.google.common.collect.testing.MinimalIterable;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
specialinvoke v1.<com.google.common.collect.testing.MinimalIterable: void <init>(java.util.Iterator)>(v3);
return v1;
}
public static com.google.common.collect.testing.MinimalIterable 'from'(java.util.Collection)
{
com.google.common.collect.testing.MinimalIterable v2;
java.lang.Object[] v1;
java.util.Collection v0;
v0 := @parameter0: java.util.Collection;
v1 = interfaceinvoke v0.<java.util.Collection: java.lang.Object[] toArray()>();
v2 = staticinvoke <com.google.common.collect.testing.MinimalIterable: com.google.common.collect.testing.MinimalIterable of(java.lang.Object[])>(v1);
return v2;
}
private void <init>(java.util.Iterator)
{
com.google.common.collect.testing.MinimalIterable v0;
java.util.Iterator v1;
v0 := @this: com.google.common.collect.testing.MinimalIterable;
v1 := @parameter0: java.util.Iterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.MinimalIterable: java.util.Iterator iterator> = v1;
return;
}
public java.util.Iterator iterator()
{
java.lang.Throwable v4;
java.lang.IllegalStateException v2;
java.util.Iterator v1, v3;
com.google.common.collect.testing.MinimalIterable v0;
v0 := @this: com.google.common.collect.testing.MinimalIterable;
v1 = v0.<com.google.common.collect.testing.MinimalIterable: java.util.Iterator iterator>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>()>();
throw v2;
label1:
v3 = v0.<com.google.common.collect.testing.MinimalIterable: java.util.Iterator iterator>;
label2:
v0.<com.google.common.collect.testing.MinimalIterable: java.util.Iterator iterator> = null;
return v3;
label3:
v4 := @caughtexception;
v0.<com.google.common.collect.testing.MinimalIterable: java.util.Iterator iterator> = null;
throw v4;
catch java.lang.Throwable from label1 to label2 with label3;
}
}