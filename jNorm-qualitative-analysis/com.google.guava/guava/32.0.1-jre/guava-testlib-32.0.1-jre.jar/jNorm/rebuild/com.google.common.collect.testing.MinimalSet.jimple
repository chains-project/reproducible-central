public class com.google.common.collect.testing.MinimalSet extends com.google.common.collect.testing.MinimalCollection implements java.util.Set
{
public static transient com.google.common.collect.testing.MinimalSet of(java.lang.Object[])
{
java.util.List v2;
java.lang.Object[] v0, v1;
com.google.common.collect.testing.MinimalSet v3;
v0 := @parameter0: java.lang.Object[];
v1 = newarray (java.lang.Object)[0];
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
v3 = staticinvoke <com.google.common.collect.testing.MinimalSet: com.google.common.collect.testing.MinimalSet ofClassAndContents(java.lang.Class,java.lang.Object[],java.lang.Iterable)>(class "Ljava/lang/Object;", v1, v2);
return v3;
}
public static com.google.common.collect.testing.MinimalSet 'from'(java.util.Collection)
{
java.lang.Object[] v1;
com.google.common.collect.testing.MinimalSet v2;
java.util.Collection v0;
v0 := @parameter0: java.util.Collection;
v1 = newarray (java.lang.Object)[0];
v2 = staticinvoke <com.google.common.collect.testing.MinimalSet: com.google.common.collect.testing.MinimalSet ofClassAndContents(java.lang.Class,java.lang.Object[],java.lang.Iterable)>(class "Ljava/lang/Object;", v1, v0);
return v2;
}
public static com.google.common.collect.testing.MinimalSet ofClassAndContents(java.lang.Class, java.lang.Object[], java.lang.Iterable)
{
java.lang.Object[] v1, v9;
java.util.Iterator v4;
com.google.common.collect.testing.MinimalSet v8;
java.lang.Iterable v2;
java.util.ArrayList v3;
java.lang.Class v0;
java.lang.Object v6;
boolean v5, v7;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Object[];
v2 := @parameter2: java.lang.Iterable;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v3.<java.util.List: boolean contains(java.lang.Object)>(v6);
if v7 != 0 goto label1;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label1;
label2:
v8 = new com.google.common.collect.testing.MinimalSet;
v9 = interfaceinvoke v3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v1);
specialinvoke v8.<com.google.common.collect.testing.MinimalSet: void <init>(java.lang.Class,java.lang.Object[])>(v0, v9);
return v8;
}
private transient void <init>(java.lang.Class, java.lang.Object[])
{
java.lang.Class v1;
java.lang.Object[] v2;
com.google.common.collect.testing.MinimalSet v0;
v0 := @this: com.google.common.collect.testing.MinimalSet;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Object[];
specialinvoke v0.<com.google.common.collect.testing.MinimalCollection: void <init>(java.lang.Class,boolean,java.lang.Object[])>(v1, 1, v2);
return;
}
public boolean equals(java.lang.Object)
{
com.google.common.collect.testing.MinimalSet v0;
int v3, v4;
java.lang.Object v1;
boolean v2, v5, v6;
v0 := @this: com.google.common.collect.testing.MinimalSet;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.util.Set;
if v2 == 0 goto label3;
v3 = virtualinvoke v0.<com.google.common.collect.testing.MinimalSet: int size()>();
v4 = interfaceinvoke v1.<java.util.Set: int size()>();
if v3 != v4 goto label1;
v5 = virtualinvoke v0.<com.google.common.collect.testing.MinimalSet: boolean containsAll(java.util.Collection)>(v1);
if v5 == 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
label3:
return 0;
}
public int hashCode()
{
java.util.Iterator v2;
com.google.common.collect.testing.MinimalSet v0;
int v1, v5, v6;
java.lang.Object v4;
boolean v3;
v0 := @this: com.google.common.collect.testing.MinimalSet;
v1 = 0;
v2 = virtualinvoke v0.<com.google.common.collect.testing.MinimalSet: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label4;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = v1;
if v4 != null goto label2;
v6 = 0;
goto label3;
label2:
v6 = virtualinvoke v4.<java.lang.Object: int hashCode()>();
label3:
v1 = v5 + v6;
goto label1;
label4:
return v1;
}
}