abstract class com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator extends java.lang.Object
{
final java.util.Spliterator spliterator;
void <init>(java.util.Spliterator)
{
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v0;
java.lang.Object v2;
java.util.Spliterator v1;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v1 := @parameter0: java.util.Spliterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
v0.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: java.util.Spliterator spliterator> = v2;
return;
}
abstract void forEachRemaining(java.util.function.Consumer);
abstract boolean tryAdvance(java.util.function.Consumer);
abstract com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator trySplit();
final int characteristics()
{
int v2;
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v0;
java.util.Spliterator v1;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v1 = v0.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: java.util.Spliterator spliterator>;
v2 = interfaceinvoke v1.<java.util.Spliterator: int characteristics()>();
return v2;
}
final long estimateSize()
{
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v0;
long v2;
java.util.Spliterator v1;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v1 = v0.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: java.util.Spliterator spliterator>;
v2 = interfaceinvoke v1.<java.util.Spliterator: long estimateSize()>();
return v2;
}
final java.util.Comparator getComparator()
{
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v0;
java.util.Comparator v2;
java.util.Spliterator v1;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v1 = v0.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: java.util.Spliterator spliterator>;
v2 = interfaceinvoke v1.<java.util.Spliterator: java.util.Comparator getComparator()>();
return v2;
}
final long getExactSizeIfKnown()
{
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v0;
long v2;
java.util.Spliterator v1;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v1 = v0.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: java.util.Spliterator spliterator>;
v2 = interfaceinvoke v1.<java.util.Spliterator: long getExactSizeIfKnown()>();
return v2;
}
final boolean hasCharacteristics(int)
{
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v0;
int v1;
java.util.Spliterator v2;
boolean v3;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v1 := @parameter0: int;
v2 = v0.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: java.util.Spliterator spliterator>;
v3 = interfaceinvoke v2.<java.util.Spliterator: boolean hasCharacteristics(int)>(v1);
return v3;
}
}