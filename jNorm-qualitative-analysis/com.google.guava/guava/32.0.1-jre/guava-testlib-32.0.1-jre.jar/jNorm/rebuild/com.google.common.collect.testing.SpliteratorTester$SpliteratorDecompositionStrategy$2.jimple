enum class com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy$2 extends com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy
{
private void <init>(java.lang.String, int)
{
int v2;
com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy$2 v0;
java.lang.String v1;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy$2;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy: void <init>(java.lang.String,int)>(v1, v2);
return;
}
void forEach(com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator, java.util.function.Consumer)
{
java.util.function.Consumer v2;
com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy$2 v0;
com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator v1;
boolean v3;
v0 := @this: com.google.common.collect.testing.SpliteratorTester$SpliteratorDecompositionStrategy$2;
v1 := @parameter0: com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator;
v2 := @parameter1: java.util.function.Consumer;
label1:
v3 = virtualinvoke v1.<com.google.common.collect.testing.SpliteratorTester$GeneralSpliterator: boolean tryAdvance(java.util.function.Consumer)>(v2);
if v3 != 0 goto label1;
return;
}
}