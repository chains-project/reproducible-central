public abstract class com.google.common.collect.testing.TestStringMapGenerator extends java.lang.Object implements com.google.common.collect.testing.TestMapGenerator
{
public void <init>()
{
com.google.common.collect.testing.TestStringMapGenerator v0;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.google.common.collect.testing.SampleElements samples()
{
java.util.Map$Entry v2, v3, v4, v5, v6;
com.google.common.collect.testing.SampleElements v1;
com.google.common.collect.testing.TestStringMapGenerator v0;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
v1 = new com.google.common.collect.testing.SampleElements;
v2 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>("one", "January");
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>("two", "February");
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>("three", "March");
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>("four", "April");
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>("five", "May");
specialinvoke v1.<com.google.common.collect.testing.SampleElements: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v4, v5, v6);
return v1;
}
public transient java.util.Map create(java.lang.Object[])
{
java.lang.Object[] v1;
java.util.Map v9;
int v2, v4, v5, v6, v8;
com.google.common.collect.testing.TestStringMapGenerator v0;
java.lang.Object v7;
java.util.Map$Entry[] v3;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
v1 := @parameter0: java.lang.Object[];
v2 = lengthof v1;
v3 = newarray (java.util.Map$Entry)[v2];
v4 = 0;
v5 = lengthof v1;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v1[v6];
v8 = v4;
v4 = v4 + 1;
v3[v8] = v7;
v6 = v6 + 1;
goto label1;
label2:
v9 = virtualinvoke v0.<com.google.common.collect.testing.TestStringMapGenerator: java.util.Map create(java.util.Map$Entry[])>(v3);
return v9;
}
protected abstract java.util.Map create(java.util.Map$Entry[]);
public final java.util.Map$Entry[] createArray(int)
{
int v1;
com.google.common.collect.testing.TestStringMapGenerator v0;
java.util.Map$Entry[] v2;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.util.Map$Entry)[v1];
return v2;
}
public final java.lang.String[] createKeyArray(int)
{
int v1;
com.google.common.collect.testing.TestStringMapGenerator v0;
java.lang.String[] v2;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.lang.String)[v1];
return v2;
}
public final java.lang.String[] createValueArray(int)
{
int v1;
com.google.common.collect.testing.TestStringMapGenerator v0;
java.lang.String[] v2;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.lang.String)[v1];
return v2;
}
public java.lang.Iterable order(java.util.List)
{
com.google.common.collect.testing.TestStringMapGenerator v0;
java.util.List v1;
v0 := @this: com.google.common.collect.testing.TestStringMapGenerator;
v1 := @parameter0: java.util.List;
return v1;
}
}