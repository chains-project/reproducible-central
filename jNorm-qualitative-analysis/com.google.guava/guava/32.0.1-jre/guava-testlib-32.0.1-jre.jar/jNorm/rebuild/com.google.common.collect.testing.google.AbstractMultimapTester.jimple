public abstract class com.google.common.collect.testing.google.AbstractMultimapTester extends com.google.common.collect.testing.AbstractContainerTester
{
private com.google.common.collect.Multimap multimap;
public void <init>()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractContainerTester: void <init>()>();
return;
}
protected com.google.common.collect.Multimap multimap()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap>;
return v1;
}
protected java.util.Map$Entry[] createArrayWithNullKey()
{
java.util.Map$Entry v3, v5;
java.lang.Object[] v1;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
int v2;
java.lang.Object v4;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: int getNullLocation()>();
v3 = v1[v2];
v4 = interfaceinvoke v3.<java.util.Map$Entry: java.lang.Object getValue()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(null, v4);
v1[v2] = v5;
return v1;
}
protected java.util.Map$Entry[] createArrayWithNullValue()
{
java.util.Map$Entry v3, v5;
java.lang.Object[] v1;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
int v2;
java.lang.Object v4;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: int getNullLocation()>();
v3 = v1[v2];
v4 = interfaceinvoke v3.<java.util.Map$Entry: java.lang.Object getKey()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v4, null);
v1[v2] = v5;
return v1;
}
protected java.util.Map$Entry[] createArrayWithNullKeyAndValue()
{
java.util.Map$Entry v3;
java.lang.Object[] v1;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
int v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: int getNullLocation()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(null, null);
v1[v2] = v3;
return v1;
}
protected java.lang.Object getValueForNullKey()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v2;
java.util.Map$Entry v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.util.Map$Entry getEntryNullReplaces()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
return v2;
}
protected java.lang.Object getKeyForNullValue()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v2;
java.util.Map$Entry v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.util.Map$Entry getEntryNullReplaces()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
return v2;
}
private java.util.Map$Entry getEntryNullReplaces()
{
java.util.Iterator v2;
java.util.Collection v1;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
int v3, v4;
java.lang.Object v5;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.util.Collection getSampleElements()>();
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
v3 = 0;
label1:
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: int getNullLocation()>();
if v3 >= v4 goto label2;
interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v3 = v3 + 1;
goto label1;
label2:
v5 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
return v5;
}
protected void initMultimapWithNullKey()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v3;
java.util.Map$Entry[] v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object getSubjectGenerator()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.util.Map$Entry[] createArrayWithNullKey()>();
v3 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v2);
virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap resetContainer(com.google.common.collect.Multimap)>(v3);
return;
}
protected void initMultimapWithNullValue()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v3;
java.util.Map$Entry[] v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object getSubjectGenerator()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.util.Map$Entry[] createArrayWithNullValue()>();
v3 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v2);
virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap resetContainer(com.google.common.collect.Multimap)>(v3);
return;
}
protected void initMultimapWithNullKeyAndValue()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v3;
java.util.Map$Entry[] v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object getSubjectGenerator()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.util.Map$Entry[] createArrayWithNullKeyAndValue()>();
v3 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v2);
virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap resetContainer(com.google.common.collect.Multimap)>(v3);
return;
}
protected com.google.common.collect.testing.SampleElements sampleKeys()
{
com.google.common.collect.testing.TestContainerGenerator v2;
com.google.common.collect.testing.SampleElements v3;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object getSubjectGenerator()>();
v2 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleKeys()>();
return v3;
}
protected com.google.common.collect.testing.SampleElements sampleValues()
{
com.google.common.collect.testing.TestContainerGenerator v2;
com.google.common.collect.testing.SampleElements v3;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object getSubjectGenerator()>();
v2 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleValues()>();
return v3;
}
protected java.util.Collection actualContents()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
com.google.common.collect.Multimap v1;
java.util.Collection v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap>;
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
return v2;
}
protected com.google.common.collect.Multimap resetContainer(com.google.common.collect.Multimap)
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1, v3;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 := @parameter0: com.google.common.collect.Multimap;
v2 = specialinvoke v0.<com.google.common.collect.testing.AbstractContainerTester: java.lang.Object resetContainer(java.lang.Object)>(v1);
v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap> = v2;
v3 = v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap>;
return v3;
}
protected transient com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v2, v3, v4;
com.google.common.collect.Multimap v5;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 := @parameter0: java.util.Map$Entry[];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object getSubjectGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v1);
v4 = specialinvoke v0.<com.google.common.collect.testing.AbstractContainerTester: java.lang.Object resetContainer(java.lang.Object)>(v3);
v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap> = v4;
v5 = v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap>;
return v5;
}
protected void resetCollection()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object resetContainer()>();
return;
}
protected transient void assertGet(java.lang.Object, java.lang.Object[])
{
java.util.List v3;
java.lang.Object[] v2;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void assertGet(java.lang.Object,java.util.Collection)>(v1, v3);
return;
}
protected void assertGet(java.lang.Object, java.util.Collection)
{
java.util.Map v12, v7;
boolean v10, v19, v21, v23, v26, v28, v31, v5;
java.util.Collection v16, v2, v4;
java.util.Set v25;
com.google.common.collect.testing.google.AbstractMultimapTester v0;
com.google.common.collect.Multiset v30;
com.google.common.collect.Multimap v11, v15, v20, v24, v29, v3, v6, v9;
int v14, v17, v18, v22, v27;
java.lang.Object v1, v13, v8;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.Collection;
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v4 = interfaceinvoke v3.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v2, v4);
v5 = interfaceinvoke v2.<java.util.Collection: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v7 = interfaceinvoke v6.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v2, v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.AbstractMultimapTester: void assertFalse(boolean)>(v10);
goto label2;
label1:
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v13 = interfaceinvoke v12.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractMultimapTester: void assertNull(java.lang.Object)>(v13);
label2:
v14 = interfaceinvoke v2.<java.util.Collection: int size()>();
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v16 = interfaceinvoke v15.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v1);
v17 = interfaceinvoke v16.<java.util.Collection: int size()>();
staticinvoke <com.google.common.collect.testing.google.AbstractMultimapTester: void assertEquals(int,int)>(v14, v17);
v18 = interfaceinvoke v2.<java.util.Collection: int size()>();
if v18 <= 0 goto label3;
v19 = 1;
goto label4;
label3:
v19 = 0;
label4:
v20 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v21 = interfaceinvoke v20.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractMultimapTester: void assertEquals(boolean,boolean)>(v19, v21);
v22 = interfaceinvoke v2.<java.util.Collection: int size()>();
if v22 <= 0 goto label5;
v23 = 1;
goto label6;
label5:
v23 = 0;
label6:
v24 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v25 = interfaceinvoke v24.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v26 = interfaceinvoke v25.<java.util.Set: boolean contains(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractMultimapTester: void assertEquals(boolean,boolean)>(v23, v26);
v27 = interfaceinvoke v2.<java.util.Collection: int size()>();
if v27 <= 0 goto label7;
v28 = 1;
goto label8;
label7:
v28 = 0;
label8:
v29 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: com.google.common.collect.Multimap multimap()>();
v30 = interfaceinvoke v29.<com.google.common.collect.Multimap: com.google.common.collect.Multiset keys()>();
v31 = interfaceinvoke v30.<com.google.common.collect.Multiset: boolean contains(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractMultimapTester: void assertEquals(boolean,boolean)>(v28, v31);
return;
}
protected final java.lang.Object k0()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e0()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
return v2;
}
protected final java.lang.Object v0()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e0()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
return v2;
}
protected final java.lang.Object k1()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e1()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
return v2;
}
protected final java.lang.Object v1()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e1()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
return v2;
}
protected final java.lang.Object k2()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e2()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
return v2;
}
protected final java.lang.Object v2()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e2()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
return v2;
}
protected final java.lang.Object k3()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e3()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
return v2;
}
protected final java.lang.Object v3()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e3()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
return v2;
}
protected final java.lang.Object k4()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e4()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
return v2;
}
protected final java.lang.Object v4()
{
com.google.common.collect.testing.google.AbstractMultimapTester v0;
java.lang.Object v1, v2;
v0 := @this: com.google.common.collect.testing.google.AbstractMultimapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: java.lang.Object e4()>();
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
return v2;
}
}