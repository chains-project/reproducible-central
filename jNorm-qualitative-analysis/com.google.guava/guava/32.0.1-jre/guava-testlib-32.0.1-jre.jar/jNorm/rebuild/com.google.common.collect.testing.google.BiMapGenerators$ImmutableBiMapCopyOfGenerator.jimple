public class com.google.common.collect.testing.google.BiMapGenerators$ImmutableBiMapCopyOfGenerator extends com.google.common.collect.testing.google.TestStringBiMapGenerator
{
public void <init>()
{
com.google.common.collect.testing.google.BiMapGenerators$ImmutableBiMapCopyOfGenerator v0;
v0 := @this: com.google.common.collect.testing.google.BiMapGenerators$ImmutableBiMapCopyOfGenerator;
specialinvoke v0.<com.google.common.collect.testing.google.TestStringBiMapGenerator: void <init>()>();
return;
}
protected com.google.common.collect.BiMap create(java.util.Map$Entry[])
{
java.util.Map$Entry v5;
com.google.common.collect.testing.google.BiMapGenerators$ImmutableBiMapCopyOfGenerator v0;
com.google.common.collect.ImmutableBiMap v8;
java.util.LinkedHashMap v2;
int v3, v4;
java.lang.Object v6, v7;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.google.BiMapGenerators$ImmutableBiMapCopyOfGenerator;
v1 := @parameter0: java.util.Map$Entry[];
v2 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();
v3 = lengthof v1;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v1[v4];
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v7);
v4 = v4 + 1;
goto label1;
label2:
v8 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap copyOf(java.util.Map)>(v2);
return v8;
}
}