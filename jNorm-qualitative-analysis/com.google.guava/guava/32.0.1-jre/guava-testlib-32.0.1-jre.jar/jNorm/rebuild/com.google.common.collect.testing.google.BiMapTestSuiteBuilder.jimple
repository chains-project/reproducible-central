public class com.google.common.collect.testing.google.BiMapTestSuiteBuilder extends com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder
{
public void <init>()
{
com.google.common.collect.testing.google.BiMapTestSuiteBuilder v0;
v0 := @this: com.google.common.collect.testing.google.BiMapTestSuiteBuilder;
specialinvoke v0.<com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder: void <init>()>();
return;
}
public static com.google.common.collect.testing.google.BiMapTestSuiteBuilder using(com.google.common.collect.testing.google.TestBiMapGenerator)
{
com.google.common.collect.testing.google.TestBiMapGenerator v0;
com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder v2;
com.google.common.collect.testing.google.BiMapTestSuiteBuilder v1;
v0 := @parameter0: com.google.common.collect.testing.google.TestBiMapGenerator;
v1 = new com.google.common.collect.testing.google.BiMapTestSuiteBuilder;
specialinvoke v1.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: void <init>()>();
v2 = virtualinvoke v1.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder usingGenerator(java.lang.Object)>(v0);
return v2;
}
protected java.util.List getTesters()
{
com.google.common.collect.testing.google.BiMapTestSuiteBuilder v0;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.google.BiMapTestSuiteBuilder;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(class "Lcom/google/common/collect/testing/google/BiMapEntrySetTester;");
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(class "Lcom/google/common/collect/testing/google/BiMapPutTester;");
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(class "Lcom/google/common/collect/testing/google/BiMapInverseTester;");
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(class "Lcom/google/common/collect/testing/google/BiMapRemoveTester;");
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(class "Lcom/google/common/collect/testing/google/BiMapClearTester;");
return v1;
}
protected java.util.List createDerivedSuites(com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder)
{
java.lang.Runnable v16, v18, v35, v37, v54, v56;
java.lang.reflect.Method[] v14, v33;
junit.framework.TestSuite v20, v39, v58;
boolean v42;
java.util.Set v11, v24, v25, v30, v40, v46, v47, v52, v6;
com.google.common.collect.testing.google.BiMapTestSuiteBuilder v0, v45;
java.util.List v2;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v43;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$MapGenerator v3;
java.lang.String v27, v28, v49, v50, v8, v9;
com.google.common.collect.testing.MapTestSuiteBuilder v5;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$BiMapValueSetGenerator v21;
com.google.common.collect.testing.SetTestSuiteBuilder v23;
java.lang.Class v13, v32;
java.lang.Object v22, v4, v44;
com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder v1, v10, v12, v15, v17, v19, v26, v29, v31, v34, v36, v38, v48, v51, v53, v55, v57, v7;
com.google.common.collect.testing.google.BiMapTestSuiteBuilder$NoRecurse v41;
v0 := @this: com.google.common.collect.testing.google.BiMapTestSuiteBuilder;
v1 := @parameter0: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder;
v2 = specialinvoke v0.<com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder: java.util.List createDerivedSuites(com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder)>(v1);
v3 = new com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$MapGenerator;
v4 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
specialinvoke v3.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$MapGenerator: void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v4);
v5 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.MapTestSuiteBuilder using(com.google.common.collect.testing.TestMapGenerator)>(v3);
v6 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v7 = virtualinvoke v5.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v6);
v8 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 [Map]");
v10 = virtualinvoke v7.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v9);
v11 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v12 = virtualinvoke v10.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v11);
v13 = class "Lcom/google/common/collect/testing/testers/SetCreationTester;";
v14 = virtualinvoke v13.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
v15 = virtualinvoke v12.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.lang.reflect.Method[])>(v14);
v16 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v17 = virtualinvoke v15.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v16);
v18 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v19 = virtualinvoke v17.<com.google.common.collect.testing.MapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v18);
v20 = virtualinvoke v19.<com.google.common.collect.testing.MapTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v20);
v21 = new com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$BiMapValueSetGenerator;
v22 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
specialinvoke v21.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$BiMapValueSetGenerator: void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v22);
v23 = staticinvoke <com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.SetTestSuiteBuilder using(com.google.common.collect.testing.TestSetGenerator)>(v21);
v24 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v25 = staticinvoke <com.google.common.collect.testing.google.BiMapTestSuiteBuilder: java.util.Set computeValuesSetFeatures(java.util.Set)>(v24);
v26 = virtualinvoke v23.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v25);
v27 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v27) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 values [Set]");
v29 = virtualinvoke v26.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v28);
v30 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v31 = virtualinvoke v29.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v30);
v32 = class "Lcom/google/common/collect/testing/testers/SetCreationTester;";
v33 = virtualinvoke v32.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
v34 = virtualinvoke v31.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.lang.reflect.Method[])>(v33);
v35 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v36 = virtualinvoke v34.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v35);
v37 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v38 = virtualinvoke v36.<com.google.common.collect.testing.SetTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v37);
v39 = virtualinvoke v38.<com.google.common.collect.testing.SetTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v39);
v40 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v41 = <com.google.common.collect.testing.google.BiMapTestSuiteBuilder$NoRecurse: com.google.common.collect.testing.google.BiMapTestSuiteBuilder$NoRecurse INVERSE>;
v42 = interfaceinvoke v40.<java.util.Set: boolean contains(java.lang.Object)>(v41);
if v42 != 0 goto label1;
v43 = new com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v44 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Object getSubjectGenerator()>();
specialinvoke v43.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)>(v44);
v45 = staticinvoke <com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.google.BiMapTestSuiteBuilder using(com.google.common.collect.testing.google.TestBiMapGenerator)>(v43);
v46 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getFeatures()>();
v47 = staticinvoke <com.google.common.collect.testing.google.BiMapTestSuiteBuilder: java.util.Set computeInverseFeatures(java.util.Set)>(v46);
v48 = virtualinvoke v45.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withFeatures(java.lang.Iterable)>(v47);
v49 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.String getName()>();
v50 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v49) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 inverse");
v51 = virtualinvoke v48.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder named(java.lang.String)>(v50);
v52 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.util.Set getSuppressedTests()>();
v53 = virtualinvoke v51.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder suppressing(java.util.Collection)>(v52);
v54 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getSetUp()>();
v55 = virtualinvoke v53.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withSetUp(java.lang.Runnable)>(v54);
v56 = virtualinvoke v1.<com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder: java.lang.Runnable getTearDown()>();
v57 = virtualinvoke v55.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder withTearDown(java.lang.Runnable)>(v56);
v58 = virtualinvoke v57.<com.google.common.collect.testing.google.BiMapTestSuiteBuilder: junit.framework.TestSuite createTestSuite()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v58);
label1:
return v2;
}
private static java.util.Set computeInverseFeatures(java.util.Set)
{
java.util.Set v0;
java.util.HashSet v1;
com.google.common.collect.testing.features.CollectionFeature v9;
com.google.common.collect.testing.features.MapFeature v10, v2, v4, v6, v7;
com.google.common.collect.testing.google.BiMapTestSuiteBuilder$NoRecurse v8;
boolean v3, v5;
v0 := @parameter0: java.util.Set;
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v0);
v2 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_KEYS>;
v3 = interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v2);
v4 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUES>;
v5 = interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v4);
if v3 == 0 goto label1;
v6 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v6);
label1:
if v5 == 0 goto label2;
v7 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_KEYS>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v7);
label2:
v8 = <com.google.common.collect.testing.google.BiMapTestSuiteBuilder$NoRecurse: com.google.common.collect.testing.google.BiMapTestSuiteBuilder$NoRecurse INVERSE>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v8);
v9 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature KNOWN_ORDER>;
interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v9);
v10 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature REJECTS_DUPLICATES_AT_CREATION>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v10);
return v1;
}
private static java.util.Set computeValuesSetFeatures(java.util.Set)
{
com.google.common.collect.testing.features.CollectionFeature v2, v5, v6;
java.util.Set v0, v1;
com.google.common.collect.testing.features.MapFeature v3;
boolean v4;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <com.google.common.collect.testing.google.BiMapTestSuiteBuilder: java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)>(v0);
v2 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_QUERIES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v2);
v3 = <com.google.common.collect.testing.features.MapFeature: com.google.common.collect.testing.features.MapFeature ALLOWS_NULL_VALUES>;
v4 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v4 == 0 goto label1;
v5 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature ALLOWS_NULL_VALUES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v5);
label1:
v6 = <com.google.common.collect.testing.features.CollectionFeature: com.google.common.collect.testing.features.CollectionFeature REJECTS_DUPLICATES_AT_CREATION>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v6);
return v1;
}
private static java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)
{
java.util.Set v0, v1;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <com.google.common.collect.testing.MapTestSuiteBuilder: java.util.Set computeCommonDerivedCollectionFeatures(java.util.Set)>(v0);
return v1;
}
}