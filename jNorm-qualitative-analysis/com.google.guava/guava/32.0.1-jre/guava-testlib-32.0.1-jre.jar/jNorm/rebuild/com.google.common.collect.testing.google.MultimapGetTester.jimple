public class com.google.common.collect.testing.google.MultimapGetTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testGetEmpty()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Collection v3;
int v4;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k3()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v3);
v4 = interfaceinvoke v3.<java.util.Collection: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertEquals(int,int)>(0, v4);
return;
}
public void testGetNonEmpty()
{
java.lang.Object[] v5;
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Collection v3;
java.lang.Object v2, v6;
com.google.common.collect.Multimap v1;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = interfaceinvoke v3.<java.util.Collection: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertFalse(boolean)>(v4);
v5 = newarray (java.lang.Object)[1];
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v5[0] = v6;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v3, v5);
return;
}
public void testGetMultiple()
{
java.lang.Object[] v12;
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Map$Entry[] v1;
java.util.Map$Entry v10, v4, v7;
java.lang.Object v11, v13, v14, v15, v2, v3, v5, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = newarray (java.util.Map$Entry)[3];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v1()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v9);
v1[2] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v12 = newarray (java.lang.Object)[3];
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v12[0] = v13;
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v1()>();
v12[1] = v14;
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v12[2] = v15;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: void assertGet(java.lang.Object,java.lang.Object[])>(v11, v12);
return;
}
public void testGetAbsentKey()
{
java.lang.Object v1;
java.lang.Object[] v2;
com.google.common.collect.testing.google.MultimapGetTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k4()>();
v2 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: void assertGet(java.lang.Object,java.lang.Object[])>(v1, v2);
return;
}
public void testPropagatesRemoveToMultimap()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
com.google.common.collect.Multimap v11, v16, v20;
int v21;
java.util.Map$Entry[] v1;
boolean v15, v19;
java.util.Map$Entry v10, v4, v7;
java.util.Collection v13;
java.lang.Object v12, v14, v17, v18, v2, v3, v5, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = newarray (java.util.Map$Entry)[3];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v3()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v9);
v1[2] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v13 = interfaceinvoke v11.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v12);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v15 = interfaceinvoke v13.<java.util.Collection: boolean remove(java.lang.Object)>(v14);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v19 = interfaceinvoke v16.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v17, v18);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertFalse(boolean)>(v19);
v20 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v21 = interfaceinvoke v20.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertEquals(int,int)>(2, v21);
return;
}
public void testPropagatesRemoveLastElementToMultimap()
{
java.lang.Object[] v7;
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Collection v3;
com.google.common.collect.Multimap v1;
java.lang.Object v2, v4, v6;
boolean v5;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v5 = interfaceinvoke v3.<java.util.Collection: boolean remove(java.lang.Object)>(v4);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v5);
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v7 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: void assertGet(java.lang.Object,java.lang.Object[])>(v6, v7);
return;
}
public void testPropagatesAddToMultimap()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
com.google.common.collect.Multimap v1, v11, v13, v6;
int v10, v12, v9;
boolean v16, v5, v8;
java.util.Collection v3;
java.lang.Object v14, v15, v2, v4, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v3()>();
v5 = interfaceinvoke v3.<java.util.Collection: boolean add(java.lang.Object)>(v4);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v5);
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v8 = interfaceinvoke v6.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: int getNumElements()>();
v10 = v9 + 1;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertEquals(int,int)>(v10, v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v3()>();
v16 = interfaceinvoke v13.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v14, v15);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v16);
return;
}
public void testPropagatesAddAllToMultimap()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
com.google.common.collect.Multimap v1, v12, v14, v7;
int v10, v11, v13;
boolean v17, v6, v9;
java.util.Collection v3;
java.util.List v5;
java.lang.Object v15, v16, v2, v4, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v3()>();
v5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v4);
v6 = interfaceinvoke v3.<java.util.Collection: boolean addAll(java.util.Collection)>(v5);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v9 = interfaceinvoke v7.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: int getNumElements()>();
v11 = v10 + 1;
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertEquals(int,int)>(v11, v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v3()>();
v17 = interfaceinvoke v14.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v15, v16);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v17);
return;
}
public void testPropagatesRemoveLastThenAddToMultimap()
{
boolean v13, v15, v17, v29, v33, v37, v6, v9;
java.util.Collection v23, v4;
java.lang.Object[] v18, v24;
com.google.common.collect.testing.google.MultimapGetTester v0;
com.google.common.collect.Multimap v10, v2, v21, v27, v30, v34, v39, v7;
int v1, v38, v40;
java.lang.Object v11, v12, v14, v16, v19, v20, v22, v25, v26, v28, v3, v31, v32, v35, v36, v5, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v4 = interfaceinvoke v2.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v3);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v6 = interfaceinvoke v4.<java.util.Collection: boolean remove(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v9 = interfaceinvoke v7.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertFalse(boolean)>(v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v13 = interfaceinvoke v10.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v11, v12);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertFalse(boolean)>(v13);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v4);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v1()>();
v15 = interfaceinvoke v4.<java.util.Collection: boolean add(java.lang.Object)>(v14);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v17 = interfaceinvoke v4.<java.util.Collection: boolean add(java.lang.Object)>(v16);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v17);
v18 = newarray (java.lang.Object)[2];
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v1()>();
v18[0] = v19;
v20 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v18[1] = v20;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v4, v18);
v21 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v23 = interfaceinvoke v21.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v22);
v24 = newarray (java.lang.Object)[2];
v25 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v1()>();
v24[0] = v25;
v26 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v24[1] = v26;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v23, v24);
v27 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v28 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v29 = interfaceinvoke v27.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v28);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v29);
v30 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v31 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v32 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v0()>();
v33 = interfaceinvoke v30.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v31, v32);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertFalse(boolean)>(v33);
v34 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v35 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object k0()>();
v36 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object v2()>();
v37 = interfaceinvoke v34.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v35, v36);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertTrue(boolean)>(v37);
v38 = v1 + 1;
v39 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v40 = interfaceinvoke v39.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void assertEquals(int,int)>(v38, v40);
return;
}
public void testGetNullPresent()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Collection v2;
java.lang.Object v3;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: void initMultimapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(null);
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object getValueForNullKey()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v2, v3);
return;
}
public void testGetNullAbsent()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Collection v2;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v2);
return;
}
public void testGetNullForbidden()
{
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v2;
com.google.common.collect.testing.google.MultimapGetTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapGetTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testGetWithNullValue()
{
com.google.common.collect.testing.google.MultimapGetTester v0;
java.util.Collection v3;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapGetTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: void initMultimapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapGetTester: java.lang.Object getKeyForNullValue()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v3, null);
return;
}
}