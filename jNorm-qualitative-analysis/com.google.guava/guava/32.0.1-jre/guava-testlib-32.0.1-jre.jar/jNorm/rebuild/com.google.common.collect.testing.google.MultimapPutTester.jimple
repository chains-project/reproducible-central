public class com.google.common.collect.testing.google.MultimapPutTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testPutUnsupported()
{
java.lang.UnsupportedOperationException v4;
com.google.common.collect.testing.google.MultimapPutTester v0;
java.lang.Object v2, v3;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void fail(java.lang.String)>("Expected UnsupportedOperationException");
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
public void testPutEmpty()
{
java.lang.Object[] v9;
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v12, v4;
com.google.common.collect.ImmutableList v3;
int v1, v11, v13;
java.lang.Object v10, v2, v5, v6, v8;
boolean v7;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.util.Collection)>(v2, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v7 = interfaceinvoke v4.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v5, v6);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertTrue(boolean)>(v7);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v9 = newarray (java.lang.Object)[1];
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v9[0] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.lang.Object[])>(v8, v9);
v11 = v1 + 1;
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v11, v13);
return;
}
public void testPutPresent()
{
java.lang.Object[] v10, v3;
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v14, v5;
int v1, v13, v15;
boolean v8;
java.lang.Object v11, v12, v2, v4, v6, v7, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v3 = newarray (java.lang.Object)[1];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v0()>();
v3[0] = v4;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v8 = interfaceinvoke v5.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v6, v7);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertTrue(boolean)>(v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v10 = newarray (java.lang.Object)[2];
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v0()>();
v10[0] = v11;
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v10[1] = v12;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.lang.Object[])>(v9, v10);
v13 = v1 + 1;
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v13, v15);
return;
}
public void testPutTwoElements()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v10, v18, v2, v6;
int v1, v17, v19;
boolean v13, v9;
java.util.Collection v4;
java.util.List v5;
java.lang.Object v11, v12, v14, v15, v16, v3, v7, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v4 = interfaceinvoke v2.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v3);
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v4);
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v1()>();
v9 = interfaceinvoke v6.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v7, v8);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertTrue(boolean)>(v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v2()>();
v13 = interfaceinvoke v10.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v11, v12);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertTrue(boolean)>(v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v1()>();
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v14);
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v2()>();
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.util.Collection)>(v16, v5);
v17 = v1 + 2;
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v19 = interfaceinvoke v18.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v17, v19);
return;
}
public void testPutNullValue_supported()
{
java.lang.Object[] v5;
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v2, v8;
java.util.ArrayList v6;
int v1, v7, v9;
java.lang.Object v3, v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
interfaceinvoke v2.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v3, null);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = null;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v5);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.util.Collection)>(v4, v6);
v7 = v1 + 1;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v7, v9);
return;
}
public void testPutNullValue_unsupported()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k1()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v2, null);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void fail()>();
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void expectUnchanged()>();
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testPutNullKey()
{
java.lang.Object[] v4;
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v2, v7;
int v1, v6, v8;
java.lang.Object v3, v5;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v2.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(null, v3);
v4 = newarray (java.lang.Object)[1];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v4[0] = v5;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: void assertGet(java.lang.Object,java.lang.Object[])>(null, v4);
v6 = v1 + 1;
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v8 = interfaceinvoke v7.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v6, v8);
return;
}
public void testPutNotPresentKeyPropagatesToGet()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
java.util.Collection v4;
com.google.common.collect.Multimap v10, v2, v5;
int v1, v11, v9;
java.lang.Object v3, v6, v7, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v4 = interfaceinvoke v2.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v3);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v4);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v5.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v6, v7);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v4, v8);
v9 = v1 + 1;
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v11 = interfaceinvoke v10.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v9, v11);
return;
}
public void testPutNotPresentKeyPropagatesToEntries()
{
java.util.Map$Entry v12, v5;
com.google.common.collect.testing.google.MultimapPutTester v0;
java.util.Collection v2;
com.google.common.collect.Multimap v1, v7;
java.lang.Object v10, v11, v3, v4, v8, v9;
boolean v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, v4);
v6 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertFalse(boolean)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v7.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v8, v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k3()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v12 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v10, v11);
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v2, v12);
return;
}
public void testPutPresentKeyPropagatesToEntries()
{
java.util.Map$Entry v12, v5;
com.google.common.collect.testing.google.MultimapPutTester v0;
java.util.Collection v2;
com.google.common.collect.Multimap v1, v7;
java.lang.Object v10, v11, v3, v4, v8, v9;
boolean v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, v4);
v6 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertFalse(boolean)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v7.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v8, v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object k0()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
v12 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v10, v11);
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v2, v12);
return;
}
public void testPutPresentKeyPropagatesToGet()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v1, v11, v15, v8;
int v14, v16, v7;
boolean v5;
java.util.Iterator v4;
java.util.Collection v9;
java.util.Set v2;
java.util.List v10, v3;
java.lang.Object v12, v13, v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object resetContainer()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v6);
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v9);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v11.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v6, v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v10.<java.util.Collection: boolean add(java.lang.Object)>(v13);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v10, v9);
v14 = v7 + 1;
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v16 = interfaceinvoke v15.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v14, v16);
goto label1;
label2:
return;
}
public void testPutPresentKeyPropagatesToAsMapGet()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v1, v12, v16, v8;
java.util.Map v9;
int v15, v17, v7;
boolean v5;
java.util.Iterator v4;
java.util.Set v2;
java.util.List v11, v3;
java.lang.Object v10, v13, v14, v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object resetContainer()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.lang.Object get(java.lang.Object)>(v6);
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertNotNull(java.lang.Object)>(v10);
v11 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v10);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v12.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v6, v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v11.<java.util.Collection: boolean add(java.lang.Object)>(v14);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v11, v10);
v15 = v7 + 1;
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v17 = interfaceinvoke v16.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v15, v17);
goto label1;
label2:
return;
}
public void testPutPresentKeyPropagatesToAsMapEntrySet()
{
com.google.common.collect.testing.google.MultimapPutTester v0;
com.google.common.collect.Multimap v1, v18, v22, v8;
java.util.Map v9;
int v21, v23, v7;
boolean v12, v15, v5;
java.util.Iterator v11, v4;
java.util.Set v10, v2;
java.util.List v17, v3;
java.lang.Object v13, v14, v16, v19, v20, v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object resetContainer()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: int getNumElements()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.util.Set entrySet()>();
v11 = interfaceinvoke v10.<java.util.Set: java.util.Iterator iterator()>();
label2:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label3;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = interfaceinvoke v13.<java.util.Map$Entry: java.lang.Object getKey()>();
v15 = virtualinvoke v6.<java.lang.Object: boolean equals(java.lang.Object)>(v14);
if v15 == 0 goto label2;
v16 = interfaceinvoke v13.<java.util.Map$Entry: java.lang.Object getValue()>();
label3:
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertNotNull(java.lang.Object)>(v16);
v17 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v16);
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v18.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v6, v19);
v20 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: java.lang.Object v3()>();
interfaceinvoke v17.<java.util.Collection: boolean add(java.lang.Object)>(v20);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v17, v16);
v21 = v7 + 1;
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutTester: com.google.common.collect.Multimap multimap()>();
v23 = interfaceinvoke v22.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutTester: void assertEquals(int,int)>(v21, v23);
goto label1;
label4:
return;
}
}