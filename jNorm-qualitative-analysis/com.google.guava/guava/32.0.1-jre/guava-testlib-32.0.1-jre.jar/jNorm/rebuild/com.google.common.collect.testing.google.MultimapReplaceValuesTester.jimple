public class com.google.common.collect.testing.google.MultimapReplaceValuesTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testReplaceValuesWithNullValue()
{
java.lang.Object[] v1;
com.google.common.collect.Multimap v5;
java.util.List v4;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v2, v3, v6, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = newarray (java.lang.Object)[3];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v1[0] = v2;
v1[1] = null;
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v1[2] = v3;
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v6, v4);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertGet(java.lang.Object,java.util.Collection)>(v7, v4);
return;
}
public void testReplaceValuesWithNullKey()
{
java.util.List v5;
java.lang.Object[] v1;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v2, v3, v4;
com.google.common.collect.Multimap v6;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = newarray (java.lang.Object)[3];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v1[0] = v2;
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v2()>();
v1[1] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v1[2] = v4;
v5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v6.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(null, v5);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertGet(java.lang.Object,java.util.Collection)>(null, v5);
return;
}
public void testReplaceEmptyValues()
{
java.lang.Object[] v3;
com.google.common.collect.Multimap v1, v13, v8;
java.util.List v7;
int v11, v12, v14, v2;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v10, v4, v5, v6, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: int size()>();
v3 = newarray (java.lang.Object)[3];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v3[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v2()>();
v3[1] = v5;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v3[2] = v6;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k3()>();
interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v9, v7);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k3()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertGet(java.lang.Object,java.util.Collection)>(v10, v7);
v11 = interfaceinvoke v7.<java.util.List: int size()>();
v12 = v2 + v11;
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertEquals(int,int)>(v12, v14);
return;
}
public void testReplaceValuesWithEmpty()
{
java.lang.Object[] v13;
com.google.common.collect.Multimap v1, v16, v4, v9;
java.util.ArrayList v3, v8;
int v14, v15, v17, v2;
java.util.Collection v11, v6;
java.util.List v7;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v10, v12, v5;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: int size()>();
v3 = new java.util.ArrayList;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v5);
specialinvoke v3.<java.util.ArrayList: void <init>(java.util.Collection)>(v6);
v7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v8 = new java.util.ArrayList;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v11 = interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v10, v7);
specialinvoke v8.<java.util.ArrayList: void <init>(java.util.Collection)>(v11);
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertEquals(java.lang.Object,java.lang.Object)>(v3, v8);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v13 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertGet(java.lang.Object,java.lang.Object[])>(v12, v13);
v14 = interfaceinvoke v3.<java.util.List: int size()>();
v15 = v2 - v14;
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v17 = interfaceinvoke v16.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertEquals(int,int)>(v15, v17);
return;
}
public void testReplaceValuesWithDuplicates()
{
java.lang.Object[] v7;
com.google.common.collect.Multimap v1, v13, v18, v23, v25, v4;
java.util.ArrayList v12, v3;
int v16, v17, v2, v21, v22, v24;
boolean v28;
java.util.Collection v15, v20, v27, v6;
java.util.List v11;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v10, v14, v19, v26, v5, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: int size()>();
v3 = new java.util.ArrayList;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v5);
specialinvoke v3.<java.util.ArrayList: void <init>(java.util.Collection)>(v6);
v7 = newarray (java.lang.Object)[3];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v7[0] = v8;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v7[1] = v9;
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v7[2] = v10;
v11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v7);
v12 = new java.util.ArrayList;
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v15 = interfaceinvoke v13.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v14, v11);
specialinvoke v12.<java.util.ArrayList: void <init>(java.util.Collection)>(v15);
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertEquals(java.lang.Object,java.lang.Object)>(v3, v12);
v16 = interfaceinvoke v3.<java.util.List: int size()>();
v17 = v2 - v16;
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v20 = interfaceinvoke v18.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v19);
v21 = interfaceinvoke v20.<java.util.Collection: int size()>();
v22 = v17 + v21;
v23 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v24 = interfaceinvoke v23.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertEquals(int,int)>(v22, v24);
v25 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v26 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v27 = interfaceinvoke v25.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v26);
v28 = interfaceinvoke v27.<java.util.Collection: boolean containsAll(java.util.Collection)>(v11);
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertTrue(boolean)>(v28);
return;
}
public void testReplaceNonEmptyValues()
{
java.lang.Object[] v4;
com.google.common.collect.Multimap v1, v12, v14, v17, v22;
int v13, v18, v19, v20, v21, v23;
boolean v10;
java.util.Iterator v9;
java.util.Collection v15;
java.util.Set v2;
java.util.List v16, v3, v8;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v11, v5, v6, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = newarray (java.lang.Object)[3];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v4[0] = v5;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v2()>();
v4[1] = v6;
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v4[2] = v7;
v8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v4);
v9 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object resetContainer()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: int size()>();
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v11);
v16 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v15);
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v17.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v11, v8);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertGet(java.lang.Object,java.util.Collection)>(v11, v8);
v18 = interfaceinvoke v8.<java.util.List: int size()>();
v19 = v13 + v18;
v20 = interfaceinvoke v16.<java.util.Collection: int size()>();
v21 = v19 - v20;
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v23 = interfaceinvoke v22.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void assertEquals(int,int)>(v21, v23);
goto label1;
label2:
return;
}
public void testReplaceValuesPropagatesToGet()
{
java.lang.Object[] v11, v4;
java.util.Collection v3;
com.google.common.collect.Multimap v1, v9;
java.util.List v8;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v10, v12, v13, v14, v2, v5, v6, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = newarray (java.lang.Object)[3];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v4[0] = v5;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v2()>();
v4[1] = v6;
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v4[2] = v7;
v8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v4);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v10, v8);
v11 = newarray (java.lang.Object)[3];
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v0()>();
v11[0] = v12;
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v2()>();
v11[1] = v13;
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v11[2] = v14;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v3, v11);
return;
}
public void testReplaceValuesRemoveNotSupported()
{
java.lang.UnsupportedOperationException v5;
java.util.List v2;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v1, v4;
com.google.common.collect.Multimap v3;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
label1:
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
interfaceinvoke v3.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v4, v2);
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void fail(java.lang.String)>("Expected UnsupportedOperationException");
label2:
goto label4;
label3:
v5 := @caughtexception;
label4:
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
public void testReplaceValuesPutNotSupported()
{
java.lang.UnsupportedOperationException v5;
java.util.List v2;
com.google.common.collect.testing.google.MultimapReplaceValuesTester v0;
java.lang.Object v1, v4;
com.google.common.collect.Multimap v3;
v0 := @this: com.google.common.collect.testing.google.MultimapReplaceValuesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object v3()>();
v2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
label1:
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: com.google.common.collect.Multimap multimap()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapReplaceValuesTester: java.lang.Object k0()>();
interfaceinvoke v3.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(v4, v2);
staticinvoke <com.google.common.collect.testing.google.MultimapReplaceValuesTester: void fail(java.lang.String)>("Expected UnsupportedOperationException");
label2:
goto label4;
label3:
v5 := @caughtexception;
label4:
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
}