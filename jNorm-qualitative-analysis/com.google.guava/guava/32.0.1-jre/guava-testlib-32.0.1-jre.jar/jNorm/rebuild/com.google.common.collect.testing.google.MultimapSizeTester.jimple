public class com.google.common.collect.testing.google.MultimapSizeTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapSizeTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testSize()
{
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v2;
java.util.Map v13;
int v1, v12, v19, v3, v4;
boolean v11, v16, v7;
java.util.Iterator v15, v6;
java.util.Collection v5;
java.util.Set v14;
java.lang.Object v10, v17, v18, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(v1, v3);
v4 = 0;
v5 = interfaceinvoke v2.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v6 = interfaceinvoke v5.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label2;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = interfaceinvoke v8.<java.util.Map$Entry: java.lang.Object getKey()>();
v10 = interfaceinvoke v8.<java.util.Map$Entry: java.lang.Object getValue()>();
v11 = interfaceinvoke v2.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v9, v10);
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertTrue(boolean)>(v11);
v4 = v4 + 1;
goto label1;
label2:
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(v1, v4);
v12 = 0;
v13 = interfaceinvoke v2.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v14 = interfaceinvoke v13.<java.util.Map: java.util.Set entrySet()>();
v15 = interfaceinvoke v14.<java.util.Set: java.util.Iterator iterator()>();
label3:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label4;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = interfaceinvoke v17.<java.util.Map$Entry: java.lang.Object getValue()>();
v19 = interfaceinvoke v18.<java.util.Collection: int size()>();
v12 = v12 + v19;
goto label3;
label4:
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(v1, v12);
return;
}
public void testIsEmptyYes()
{
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v1;
boolean v2;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertTrue(boolean)>(v2);
return;
}
public void testIsEmptyNo()
{
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v1;
boolean v2;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertFalse(boolean)>(v2);
return;
}
public void testSizeNullKey()
{
int v1, v3;
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v2, v4;
boolean v5;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: void initMultimapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(v1, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertFalse(boolean)>(v5);
return;
}
public void testSizeNullValue()
{
int v1, v3;
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v2, v4;
boolean v5;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: void initMultimapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(v1, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertFalse(boolean)>(v5);
return;
}
public void testSizeNullKeyAndValue()
{
int v1, v3;
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v2, v4;
boolean v5;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: void initMultimapWithNullKeyAndValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(v1, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertFalse(boolean)>(v5);
return;
}
public void testSizeMultipleValues()
{
com.google.common.collect.Multiset v17;
com.google.common.collect.testing.google.MultimapSizeTester v0;
com.google.common.collect.Multimap v11, v13, v16, v19, v22;
java.util.Map v23;
int v12, v15, v18, v21, v24;
java.util.Map$Entry[] v1;
java.util.Map$Entry v10, v4, v7;
java.util.Collection v14;
java.util.Set v20;
java.lang.Object v2, v3, v5, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapSizeTester;
v1 = newarray (java.util.Map$Entry)[3];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: java.lang.Object v1()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: java.lang.Object k0()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: java.lang.Object v2()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v9);
v1[2] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(3, v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v15 = interfaceinvoke v14.<java.util.Collection: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(3, v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v17 = interfaceinvoke v16.<com.google.common.collect.Multimap: com.google.common.collect.Multiset keys()>();
v18 = interfaceinvoke v17.<com.google.common.collect.Multiset: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(3, v18);
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v20 = interfaceinvoke v19.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v21 = interfaceinvoke v20.<java.util.Set: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(1, v21);
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapSizeTester: com.google.common.collect.Multimap multimap()>();
v23 = interfaceinvoke v22.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v24 = interfaceinvoke v23.<java.util.Map: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapSizeTester: void assertEquals(int,int)>(1, v24);
return;
}
}