class com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator extends java.lang.Object implements com.google.common.collect.testing.TestMapGenerator, com.google.common.collect.testing.DerivedGenerator
{
private final com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator;
public void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)
{
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: com.google.common.collect.testing.OneSizeTestContainerGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator> = v1;
return;
}
public com.google.common.collect.testing.TestSubjectGenerator getInnerGenerator()
{
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
return v1;
}
private java.util.Collection createCollection(java.lang.Object)
{
com.google.common.collect.testing.TestContainerGenerator v3;
com.google.common.collect.testing.OneSizeTestContainerGenerator v2;
java.util.Collection v5;
java.util.Set v4;
java.lang.Object v1;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v1);
v5 = interfaceinvoke v3.<com.google.common.collect.testing.google.TestMultimapGenerator: java.util.Collection createCollection(java.lang.Iterable)>(v4);
return v5;
}
public com.google.common.collect.testing.SampleElements samples()
{
com.google.common.collect.testing.SampleElements v3, v6, v7;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
java.util.Map$Entry v11, v15, v19, v23, v27;
com.google.common.collect.testing.OneSizeTestContainerGenerator v1, v4;
java.util.Collection v10, v14, v18, v22, v26;
com.google.common.collect.testing.TestContainerGenerator v2, v5;
java.lang.Object v12, v13, v16, v17, v20, v21, v24, v25, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v2 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleKeys()>();
v4 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v5 = interfaceinvoke v4.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v6 = interfaceinvoke v5.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleValues()>();
v7 = new com.google.common.collect.testing.SampleElements;
v8 = virtualinvoke v3.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v9 = virtualinvoke v6.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v10 = specialinvoke v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: java.util.Collection createCollection(java.lang.Object)>(v9);
v11 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v10);
v12 = virtualinvoke v3.<com.google.common.collect.testing.SampleElements: java.lang.Object e1()>();
v13 = virtualinvoke v6.<com.google.common.collect.testing.SampleElements: java.lang.Object e1()>();
v14 = specialinvoke v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: java.util.Collection createCollection(java.lang.Object)>(v13);
v15 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v12, v14);
v16 = virtualinvoke v3.<com.google.common.collect.testing.SampleElements: java.lang.Object e2()>();
v17 = virtualinvoke v6.<com.google.common.collect.testing.SampleElements: java.lang.Object e2()>();
v18 = specialinvoke v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: java.util.Collection createCollection(java.lang.Object)>(v17);
v19 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v16, v18);
v20 = virtualinvoke v3.<com.google.common.collect.testing.SampleElements: java.lang.Object e3()>();
v21 = virtualinvoke v6.<com.google.common.collect.testing.SampleElements: java.lang.Object e3()>();
v22 = specialinvoke v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: java.util.Collection createCollection(java.lang.Object)>(v21);
v23 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v20, v22);
v24 = virtualinvoke v3.<com.google.common.collect.testing.SampleElements: java.lang.Object e4()>();
v25 = virtualinvoke v6.<com.google.common.collect.testing.SampleElements: java.lang.Object e4()>();
v26 = specialinvoke v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: java.util.Collection createCollection(java.lang.Object)>(v25);
v27 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v24, v26);
specialinvoke v7.<com.google.common.collect.testing.SampleElements: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v11, v15, v19, v23, v27);
return v7;
}
public transient java.util.Map create(java.lang.Object[])
{
java.lang.Object[] v1, v18;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
java.util.ArrayList v3;
java.util.HashSet v2;
java.util.Map v20;
int v14, v15, v4, v5;
boolean v10, v16;
java.util.Map$Entry v13;
java.util.Iterator v9;
com.google.common.collect.testing.OneSizeTestContainerGenerator v17;
java.lang.Object v11, v12, v19, v6, v7, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: java.lang.Object[];
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = lengthof v1;
v5 = 0;
label1:
if v5 >= v4 goto label4;
v6 = v1[v5];
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v7);
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v9 = interfaceinvoke v8.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label3;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v13 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v12, v11);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v13);
goto label2;
label3:
v5 = v5 + 1;
goto label1;
label4:
v14 = interfaceinvoke v2.<java.util.Set: int size()>();
v15 = lengthof v1;
if v14 != v15 goto label5;
v16 = 1;
goto label6;
label5:
v16 = 0;
label6:
staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>(v16, "Duplicate keys");
v17 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v18 = interfaceinvoke v3.<java.util.List: java.lang.Object[] toArray()>();
v19 = interfaceinvoke v17.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v18);
v20 = interfaceinvoke v19.<com.google.common.collect.Multimap: java.util.Map asMap()>();
return v20;
}
public java.util.Map$Entry[] createArray(int)
{
int v1;
java.util.Map$Entry[] v2;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.util.Map$Entry)[v1];
return v2;
}
public java.lang.Iterable order(java.util.List)
{
java.util.HashMap v2;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
java.lang.Iterable v16;
java.util.ArrayList v3;
java.util.LinkedHashMap v17;
boolean v19, v5, v9;
java.util.Map$Entry v12;
java.util.Iterator v18, v4, v8;
com.google.common.collect.testing.OneSizeTestContainerGenerator v15;
java.util.Set v24;
java.util.List v1;
java.lang.Object v10, v11, v13, v14, v20, v21, v22, v23, v6, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: java.util.List;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v8 = interfaceinvoke v7.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label3;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v11, v10);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v12);
goto label2;
label3:
v13 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v14 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v13, v14);
goto label1;
label4:
v15 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v16 = interfaceinvoke v15.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Iterable order(java.util.List)>(v3);
v17 = new java.util.LinkedHashMap;
specialinvoke v17.<java.util.LinkedHashMap: void <init>()>();
v18 = interfaceinvoke v16.<java.lang.Iterable: java.util.Iterator iterator()>();
label5:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label6;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = interfaceinvoke v20.<java.util.Map$Entry: java.lang.Object getKey()>();
v22 = interfaceinvoke v20.<java.util.Map$Entry: java.lang.Object getKey()>();
v23 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v22);
virtualinvoke v17.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v21, v23);
goto label5;
label6:
v24 = virtualinvoke v17.<java.util.LinkedHashMap: java.util.Set entrySet()>();
return v24;
}
public java.lang.Object[] createKeyArray(int)
{
java.lang.Object[] v4;
com.google.common.collect.testing.TestContainerGenerator v3;
com.google.common.collect.testing.OneSizeTestContainerGenerator v2;
int v1;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: int;
v2 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.google.TestMultimapGenerator: java.lang.Object[] createKeyArray(int)>(v1);
return v4;
}
public java.util.Collection[] createValueArray(int)
{
int v1;
java.util.Collection[] v2;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$AsMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.util.Collection)[v1];
return v2;
}
}