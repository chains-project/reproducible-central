public class com.google.common.collect.testing.google.MultimapToStringTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapToStringTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapToStringTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testToStringEmpty()
{
java.lang.String v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapToStringTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapToStringTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.google.MultimapToStringTester: void assertEquals(java.lang.String,java.lang.String)>("{}", v2);
return;
}
public void testToStringSingleton()
{
java.lang.Object v1, v2;
java.lang.String v3, v5;
com.google.common.collect.Multimap v4;
com.google.common.collect.testing.google.MultimapToStringTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapToStringTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: java.lang.Object k0()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: java.lang.Object v0()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.Object)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("{\u0001=[\u0001]}");
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: com.google.common.collect.Multimap multimap()>();
v5 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.google.MultimapToStringTester: void assertEquals(java.lang.String,java.lang.String)>(v3, v5);
return;
}
public void testToStringWithNullKey()
{
com.google.common.collect.testing.google.MultimapToStringTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapToStringTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: void initMultimapWithNullKey()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: void testToStringMatchesAsMap()>();
return;
}
public void testToStringWithNullValue()
{
com.google.common.collect.testing.google.MultimapToStringTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapToStringTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: void initMultimapWithNullValue()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: void testToStringMatchesAsMap()>();
return;
}
public void testToStringMatchesAsMap()
{
java.util.Map v2;
java.lang.String v3, v5;
com.google.common.collect.Multimap v1, v4;
com.google.common.collect.testing.google.MultimapToStringTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapToStringTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapToStringTester: com.google.common.collect.Multimap multimap()>();
v5 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.google.MultimapToStringTester: void assertEquals(java.lang.String,java.lang.String)>(v3, v5);
return;
}
}