public class com.google.common.collect.testing.testers.ListRemoveTester extends com.google.common.collect.testing.testers.AbstractListTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListRemoveTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListRemoveTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: void <init>()>();
return;
}
public void testRemove_duplicate()
{
java.lang.Object[] v3;
com.google.common.collect.testing.testers.ListRemoveTester v0;
int v15, v17, v19, v7, v9;
boolean v11, v13, v16;
java.util.List v10, v12, v14, v18, v6, v8;
java.lang.Object v2, v4, v5;
com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate v1;
v0 := @this: com.google.common.collect.testing.testers.ListRemoveTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate createArrayWithDuplicateElement()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.lang.Object getSubjectGenerator()>();
v3 = v1.<com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate: java.lang.Object[] elements>;
v4 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v3);
v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.Collection collection> = v4;
v5 = v1.<com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate: java.lang.Object duplicate>;
v6 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.List getList()>();
v7 = interfaceinvoke v6.<java.util.List: int indexOf(java.lang.Object)>(v5);
v8 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.List getList()>();
v9 = interfaceinvoke v8.<java.util.List: int size()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.List getList()>();
v11 = interfaceinvoke v10.<java.util.List: boolean remove(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.testers.ListRemoveTester: void assertTrue(java.lang.String,boolean)>("remove(present) should return true", v11);
v12 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.List getList()>();
v13 = interfaceinvoke v12.<java.util.List: boolean contains(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.testers.ListRemoveTester: void assertTrue(java.lang.String,boolean)>("After remove(duplicate), a list should still contain the duplicate element", v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.List getList()>();
v15 = interfaceinvoke v14.<java.util.List: int indexOf(java.lang.Object)>(v5);
if v7 != v15 goto label1;
v16 = 1;
goto label2;
label1:
v16 = 0;
label2:
staticinvoke <com.google.common.collect.testing.testers.ListRemoveTester: void assertFalse(java.lang.String,boolean)>("remove(duplicate) should remove the first instance of the duplicate element in the list", v16);
v17 = v9 - 1;
v18 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveTester: java.util.List getList()>();
v19 = interfaceinvoke v18.<java.util.List: int size()>();
staticinvoke <com.google.common.collect.testing.testers.ListRemoveTester: void assertEquals(java.lang.String,int,int)>("remove(present) should decrease the size of a list by one.", v17, v19);
return;
}
}