public class com.google.common.collect.testing.testers.ListSetTester extends com.google.common.collect.testing.testers.AbstractListTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListSetTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: void <init>()>();
return;
}
public void testSet()
{
java.lang.Object v1;
com.google.common.collect.testing.testers.ListSetTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object e3()>();
specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void doTestSet(java.lang.Object)>(v1);
return;
}
public void testSet_null()
{
com.google.common.collect.testing.testers.ListSetTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void doTestSet(java.lang.Object)>(null);
return;
}
public void testSet_replacingNull()
{
java.lang.Object[] v1;
com.google.common.collect.testing.testers.ListSetTester v0;
int v2;
java.lang.Object v3, v4, v5;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object[] createSamplesArray()>();
v2 = specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: int aValidIndex()>();
v1[v2] = null;
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object getSubjectGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v1);
v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.Collection collection> = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object e3()>();
specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void doTestSet(java.lang.Object)>(v5);
return;
}
private void doTestSet(java.lang.Object)
{
java.util.List v10, v3, v5, v7;
com.google.common.collect.testing.testers.ListSetTester v0;
int v11, v2, v9;
java.lang.Object v1, v4, v6, v8;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: int aValidIndex()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v4 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v2);
v5 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v6 = interfaceinvoke v5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v2, v1);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("set(i, x) should return the old element at position i.", v4, v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v8 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(v2);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("After set(i, x), get(i) should return x", v1, v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: int getNumElements()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v11 = interfaceinvoke v10.<java.util.List: int size()>();
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void assertEquals(java.lang.String,int,int)>("set() should not change the size of a list.", v9, v11);
return;
}
public void testSet_indexTooLow()
{
java.lang.IndexOutOfBoundsException v4;
java.util.List v1;
com.google.common.collect.testing.testers.ListSetTester v0;
int v3;
java.lang.Object v2;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object e3()>();
v3 = (int) -1;
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v3, v2);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void fail(java.lang.String)>("set(-1) should throw IndexOutOfBoundsException");
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void expectUnchanged()>();
return;
catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
}
public void testSet_indexTooHigh()
{
java.lang.IndexOutOfBoundsException v4;
java.util.List v2;
com.google.common.collect.testing.testers.ListSetTester v0;
int v1;
java.lang.Object v3;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: int getNumElements()>();
label1:
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object e3()>();
interfaceinvoke v2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v1, v3);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void fail(java.lang.String)>("set(size) should throw IndexOutOfBoundsException");
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void expectUnchanged()>();
return;
catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
}
public void testSet_unsupported()
{
java.lang.UnsupportedOperationException v4;
java.util.List v1;
com.google.common.collect.testing.testers.ListSetTester v0;
int v2;
java.lang.Object v3;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v2 = specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: int aValidIndex()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object e3()>();
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v2, v3);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void fail(java.lang.String)>("set() should throw UnsupportedOperationException");
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void expectUnchanged()>();
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
public void testSet_unsupportedByEmptyList()
{
java.util.List v1;
com.google.common.collect.testing.testers.ListSetTester v0;
java.lang.Object v2;
java.lang.RuntimeException v3;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.lang.Object e3()>();
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, v2);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void fail(java.lang.String)>("set() should throw UnsupportedOperationException or IndexOutOfBoundsException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void expectUnchanged()>();
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
}
public void testSet_nullUnsupported()
{
java.util.List v1;
com.google.common.collect.testing.testers.ListSetTester v0;
int v2;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v2 = specialinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: int aValidIndex()>();
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v2, null);
staticinvoke <com.google.common.collect.testing.testers.ListSetTester: void fail(java.lang.String)>("set(null) should throw NullPointerException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: void expectUnchanged()>();
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
private int aValidIndex()
{
java.util.List v1;
com.google.common.collect.testing.testers.ListSetTester v0;
int v2, v3;
v0 := @this: com.google.common.collect.testing.testers.ListSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListSetTester: java.util.List getList()>();
v2 = interfaceinvoke v1.<java.util.List: int size()>();
v3 = v2 / 2;
return v3;
}
public static java.lang.reflect.Method getSetNullSupportedMethod()
{
java.lang.reflect.Method v0;
v0 = staticinvoke <com.google.common.collect.testing.Helpers: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/testing/testers/ListSetTester;", "testSet_null");
return v0;
}
}