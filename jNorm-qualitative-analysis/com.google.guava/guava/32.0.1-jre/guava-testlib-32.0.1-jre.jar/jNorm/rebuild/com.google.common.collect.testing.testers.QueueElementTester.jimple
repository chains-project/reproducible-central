public class com.google.common.collect.testing.testers.QueueElementTester extends com.google.common.collect.testing.testers.AbstractQueueTester
{
public void <init>()
{
com.google.common.collect.testing.testers.QueueElementTester v0;
v0 := @this: com.google.common.collect.testing.testers.QueueElementTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractQueueTester: void <init>()>();
return;
}
public void testElement_empty()
{
java.util.Queue v1;
java.util.NoSuchElementException v2;
com.google.common.collect.testing.testers.QueueElementTester v0;
v0 := @this: com.google.common.collect.testing.testers.QueueElementTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: java.util.Queue getQueue()>();
interfaceinvoke v1.<java.util.Queue: java.lang.Object element()>();
staticinvoke <com.google.common.collect.testing.testers.QueueElementTester: void fail(java.lang.String)>("emptyQueue.element() should throw");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: void expectUnchanged()>();
return;
catch java.util.NoSuchElementException from label1 to label2 with label3;
}
public void testElement_size1()
{
java.lang.Object v1, v3;
java.util.Queue v2;
com.google.common.collect.testing.testers.QueueElementTester v0;
v0 := @this: com.google.common.collect.testing.testers.QueueElementTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: java.lang.Object e0()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: java.util.Queue getQueue()>();
v3 = interfaceinvoke v2.<java.util.Queue: java.lang.Object element()>();
staticinvoke <com.google.common.collect.testing.testers.QueueElementTester: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("size1Queue.element() should return first element", v1, v3);
virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: void expectUnchanged()>();
return;
}
public void testElement_sizeMany()
{
java.lang.Object v1, v3;
java.util.Queue v2;
com.google.common.collect.testing.testers.QueueElementTester v0;
v0 := @this: com.google.common.collect.testing.testers.QueueElementTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: java.lang.Object e0()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: java.util.Queue getQueue()>();
v3 = interfaceinvoke v2.<java.util.Queue: java.lang.Object element()>();
staticinvoke <com.google.common.collect.testing.testers.QueueElementTester: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("sizeManyQueue.element() should return first element", v1, v3);
virtualinvoke v0.<com.google.common.collect.testing.testers.QueueElementTester: void expectUnchanged()>();
return;
}
}