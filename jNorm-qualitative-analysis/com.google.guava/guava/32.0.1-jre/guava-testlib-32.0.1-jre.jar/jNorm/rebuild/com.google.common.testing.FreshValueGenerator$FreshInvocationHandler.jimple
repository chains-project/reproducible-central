final class com.google.common.testing.FreshValueGenerator$FreshInvocationHandler extends com.google.common.reflect.AbstractInvocationHandler
{
private final int identity;
private final java.lang.Class interfaceType;
final com.google.common.testing.FreshValueGenerator this$0;
void <init>(com.google.common.testing.FreshValueGenerator, java.lang.Class)
{
int v4;
java.lang.Class v2;
com.google.common.testing.FreshValueGenerator v1, v3;
com.google.common.testing.FreshValueGenerator$FreshInvocationHandler v0;
v0 := @this: com.google.common.testing.FreshValueGenerator$FreshInvocationHandler;
v1 := @parameter0: com.google.common.testing.FreshValueGenerator;
v2 := @parameter1: java.lang.Class;
v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: com.google.common.testing.FreshValueGenerator this$0> = v1;
specialinvoke v0.<com.google.common.reflect.AbstractInvocationHandler: void <init>()>();
v3 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: com.google.common.testing.FreshValueGenerator this$0>;
v4 = virtualinvoke v3.<com.google.common.testing.FreshValueGenerator: int generateInt()>();
v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: int identity> = v4;
v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: java.lang.Class interfaceType> = v2;
return;
}
protected java.lang.Object handleInvocation(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])
{
java.lang.Object[] v3;
java.lang.Class v5;
java.lang.Object v1, v6;
com.google.common.testing.FreshValueGenerator v4;
com.google.common.testing.FreshValueGenerator$FreshInvocationHandler v0;
java.lang.reflect.Method v2;
v0 := @this: com.google.common.testing.FreshValueGenerator$FreshInvocationHandler;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.reflect.Method;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: com.google.common.testing.FreshValueGenerator this$0>;
v5 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: java.lang.Class interfaceType>;
v6 = virtualinvoke v4.<com.google.common.testing.FreshValueGenerator: java.lang.Object interfaceMethodCalled(java.lang.Class,java.lang.reflect.Method)>(v5, v2);
return v6;
}
public int hashCode()
{
int v1;
com.google.common.testing.FreshValueGenerator$FreshInvocationHandler v0;
v0 := @this: com.google.common.testing.FreshValueGenerator$FreshInvocationHandler;
v1 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: int identity>;
return v1;
}
public boolean equals(java.lang.Object)
{
int v3, v4;
java.lang.Object v1;
com.google.common.testing.FreshValueGenerator$FreshInvocationHandler v0;
boolean v2, v5;
v0 := @this: com.google.common.testing.FreshValueGenerator$FreshInvocationHandler;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof com.google.common.testing.FreshValueGenerator$FreshInvocationHandler;
if v2 == 0 goto label3;
v3 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: int identity>;
v4 = v1.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: int identity>;
if v3 != v4 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
label3:
return 0;
}
public java.lang.String toString()
{
int v2;
java.lang.Class v1;
java.lang.String v3;
com.google.common.testing.FreshValueGenerator$FreshInvocationHandler v0;
v0 := @this: com.google.common.testing.FreshValueGenerator$FreshInvocationHandler;
v1 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: java.lang.Class interfaceType>;
v2 = v0.<com.google.common.testing.FreshValueGenerator$FreshInvocationHandler: int identity>;
v3 = staticinvoke <com.google.common.testing.FreshValueGenerator: java.lang.String paramString(java.lang.Class,int)>(v1, v2);
return v3;
}
}