public abstract class com.google.common.util.concurrent.testing.AbstractListenableFutureTest extends junit.framework.TestCase
{
protected java.util.concurrent.CountDownLatch latch;
protected com.google.common.util.concurrent.ListenableFuture future;
public void <init>()
{
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
specialinvoke v0.<junit.framework.TestCase: void <init>()>();
return;
}
protected void setUp() throws java.lang.Exception
{
java.util.concurrent.CountDownLatch v1, v3;
com.google.common.util.concurrent.ListenableFuture v4;
java.lang.Boolean v2;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
v1 = new java.util.concurrent.CountDownLatch;
specialinvoke v1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch> = v1;
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v3 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
v4 = virtualinvoke v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.lang.Object,java.lang.Exception,java.util.concurrent.CountDownLatch)>(v2, null, v3);
v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future> = v4;
return;
}
protected void tearDown() throws java.lang.Exception
{
java.util.concurrent.CountDownLatch v1;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
v1 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v1.<java.util.concurrent.CountDownLatch: void countDown()>();
return;
}
protected abstract com.google.common.util.concurrent.ListenableFuture createListenableFuture(java.lang.Object, java.lang.Exception, java.util.concurrent.CountDownLatch);
public void testGetBlocksUntilValueAvailable() throws java.lang.Throwable
{
java.lang.Throwable v12, v13;
com.google.common.util.concurrent.ListenableFuture v1, v14, v16, v3;
java.lang.Runnable v8;
java.lang.Thread v7;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
boolean v11, v15, v17, v2, v4;
java.util.concurrent.TimeUnit v10;
java.util.concurrent.CountDownLatch v5, v9;
java.lang.Throwable[] v6;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
v1 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v2 = interfaceinvoke v1.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v2);
v3 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v4 = interfaceinvoke v3.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v4);
v5 = new java.util.concurrent.CountDownLatch;
specialinvoke v5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v6 = newarray (java.lang.Throwable)[1];
v7 = new java.lang.Thread;
v8 = staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest$lambda_testGetBlocksUntilValueAvailable_0__81: java.lang.Runnable bootstrap$(com.google.common.util.concurrent.testing.AbstractListenableFutureTest,java.util.concurrent.CountDownLatch,java.lang.Throwable[])>(v0, v5, v6);
specialinvoke v7.<java.lang.Thread: void <init>(java.lang.Runnable)>(v8);
virtualinvoke v7.<java.lang.Thread: void start()>();
v9 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v9.<java.util.concurrent.CountDownLatch: void countDown()>();
v10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
v11 = virtualinvoke v5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, v10);
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v11);
v12 = v6[0];
if v12 == null goto label1;
v13 = v6[0];
throw v13;
label1:
v14 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v15 = interfaceinvoke v14.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v15);
v16 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v17 = interfaceinvoke v16.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v17);
return;
}
public void testTimeoutOnGetWorksCorrectly() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
{
java.lang.Throwable v6;
com.google.common.util.concurrent.ListenableFuture v1;
java.util.concurrent.TimeoutException v4;
java.util.concurrent.TimeUnit v2;
java.util.concurrent.CountDownLatch v3, v5, v7;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
label1:
v1 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
interfaceinvoke v1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(20L, v2);
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void fail(java.lang.String)>("Should have timed out trying to get the value.");
label2:
v3 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v3.<java.util.concurrent.CountDownLatch: void countDown()>();
goto label5;
label3:
v4 := @caughtexception;
v5 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v5.<java.util.concurrent.CountDownLatch: void countDown()>();
goto label5;
label4:
v6 := @caughtexception;
v7 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v7.<java.util.concurrent.CountDownLatch: void countDown()>();
throw v6;
label5:
return;
catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
catch java.lang.Throwable from label1 to label2 with label4;
}
public void testCanceledFutureThrowsCancellation() throws java.lang.Exception
{
com.google.common.util.concurrent.ListenableFuture v1, v10, v12, v13, v15, v3, v8;
java.lang.Runnable v7;
java.lang.Thread v6;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
boolean v11, v14, v16, v18, v2, v4, v9;
java.util.concurrent.TimeUnit v17;
java.util.concurrent.CountDownLatch v19, v5;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
v1 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v2 = interfaceinvoke v1.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v2);
v3 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v4 = interfaceinvoke v3.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v4);
v5 = new java.util.concurrent.CountDownLatch;
specialinvoke v5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v6 = new java.lang.Thread;
v7 = staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest$lambda_testCanceledFutureThrowsCancellation_1__82: java.lang.Runnable bootstrap$(com.google.common.util.concurrent.testing.AbstractListenableFutureTest,java.util.concurrent.CountDownLatch)>(v0, v5);
specialinvoke v6.<java.lang.Thread: void <init>(java.lang.Runnable)>(v7);
virtualinvoke v6.<java.lang.Thread: void start()>();
v8 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v9 = interfaceinvoke v8.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v9);
v10 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v11 = interfaceinvoke v10.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertFalse(boolean)>(v11);
v12 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
interfaceinvoke v12.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);
v13 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v14 = interfaceinvoke v13.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v14);
v15 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v16 = interfaceinvoke v15.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v16);
v17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v18 = virtualinvoke v5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(200L, v17);
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v18);
v19 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v19.<java.util.concurrent.CountDownLatch: void countDown()>();
return;
}
public void testListenersNotifiedOnError() throws java.lang.Exception
{
com.google.common.util.concurrent.ListenableFuture v11, v4, v8, v9;
java.lang.Runnable v5, v7;
java.lang.Thread v6;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
java.util.concurrent.ExecutorService v3;
boolean v10, v12, v14, v16;
java.util.concurrent.TimeUnit v13, v15, v18;
java.util.concurrent.CountDownLatch v1, v17, v2;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
v1 = new java.util.concurrent.CountDownLatch;
specialinvoke v1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v2 = new java.util.concurrent.CountDownLatch;
specialinvoke v2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();
v4 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v5 = staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest$countDown__83: java.lang.Runnable bootstrap$(java.util.concurrent.CountDownLatch)>(v2);
interfaceinvoke v4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(v5, v3);
v6 = new java.lang.Thread;
v7 = staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest$lambda_testListenersNotifiedOnError_2__84: java.lang.Runnable bootstrap$(com.google.common.util.concurrent.testing.AbstractListenableFutureTest,java.util.concurrent.CountDownLatch)>(v0, v1);
specialinvoke v6.<java.lang.Thread: void <init>(java.lang.Runnable)>(v7);
virtualinvoke v6.<java.lang.Thread: void start()>();
v8 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
interfaceinvoke v8.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);
v9 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v10 = interfaceinvoke v9.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v10);
v11 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v12 = interfaceinvoke v11.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v12);
v13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v14 = virtualinvoke v1.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(200L, v13);
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v14);
v15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v16 = virtualinvoke v2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(200L, v15);
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertTrue(boolean)>(v16);
v17 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: java.util.concurrent.CountDownLatch latch>;
virtualinvoke v17.<java.util.concurrent.CountDownLatch: void countDown()>();
interfaceinvoke v3.<java.util.concurrent.ExecutorService: void shutdown()>();
v18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
interfaceinvoke v3.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(100L, v18);
return;
}
public void testAllListenersCompleteSuccessfully() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
{
com.google.common.util.concurrent.ListenableFuture v6, v9;
java.lang.Runnable v5, v7;
java.util.concurrent.TimeUnit v11, v12;
java.util.concurrent.CountDownLatch v2;
java.lang.Thread v4;
int v3;
java.lang.Boolean v8;
com.google.common.util.concurrent.testing.AbstractListenableFutureTest v0;
java.lang.Object v10;
java.util.concurrent.ExecutorService v1;
v0 := @this: com.google.common.util.concurrent.testing.AbstractListenableFutureTest;
v1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();
v2 = new java.util.concurrent.CountDownLatch;
specialinvoke v2.<java.util.concurrent.CountDownLatch: void <init>(int)>(20);
v3 = 0;
label1:
if v3 >= 20 goto label3;
if v3 != 10 goto label2;
v4 = new java.lang.Thread;
v5 = staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest$lambda_testAllListenersCompleteSuccessfully_3__86: java.lang.Runnable bootstrap$(com.google.common.util.concurrent.testing.AbstractListenableFutureTest)>(v0);
specialinvoke v4.<java.lang.Thread: void <init>(java.lang.Runnable)>(v5);
virtualinvoke v4.<java.lang.Thread: void start()>();
label2:
v6 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest$countDown__85: java.lang.Runnable bootstrap$(java.util.concurrent.CountDownLatch)>(v2);
interfaceinvoke v6.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(v7, v1);
v3 = v3 + 1;
goto label1;
label3:
v8 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v9 = v0.<com.google.common.util.concurrent.testing.AbstractListenableFutureTest: com.google.common.util.concurrent.ListenableFuture future>;
v10 = interfaceinvoke v9.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();
staticinvoke <com.google.common.util.concurrent.testing.AbstractListenableFutureTest: void assertSame(java.lang.Object,java.lang.Object)>(v8, v10);
v11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke v2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(500L, v11);
interfaceinvoke v1.<java.util.concurrent.ExecutorService: void shutdown()>();
v12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
interfaceinvoke v1.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(500L, v12);
return;
}
}