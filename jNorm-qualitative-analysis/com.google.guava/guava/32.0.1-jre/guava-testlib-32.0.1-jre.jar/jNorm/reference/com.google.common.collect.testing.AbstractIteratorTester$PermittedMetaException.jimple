abstract class com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException extends java.lang.RuntimeException
{
static final com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException UOE_OR_ISE;
static final com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException UOE;
static final com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException ISE;
static final com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException NSEE;
private static final long serialVersionUID;
private void <init>(java.lang.String)
{
com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException v0;
java.lang.String v1;
v0 := @this: com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.RuntimeException: void <init>(java.lang.String)>(v1);
return;
}
abstract boolean isPermitted(java.lang.RuntimeException);
void assertPermitted(java.lang.RuntimeException)
{
com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException v0;
java.lang.Class v3;
java.lang.RuntimeException v1;
java.lang.String v4, v5, v6;
boolean v2;
v0 := @this: com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException;
v1 := @parameter0: java.lang.RuntimeException;
v2 = virtualinvoke v0.<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException: boolean isPermitted(java.lang.RuntimeException)>(v1);
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getSimpleName()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException: java.lang.String getMessage()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Exception \u0001 was thrown; expected \u0001");
staticinvoke <com.google.common.collect.testing.Helpers: void fail(java.lang.Throwable,java.lang.Object)>(v1, v6);
label1:
return;
}
static void <clinit>()
{
com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$1 v0;
com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$4 v3;
com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$3 v2;
com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$2 v1;
v0 = new com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$1;
specialinvoke v0.<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$1: void <init>(java.lang.String)>("UnsupportedOperationException or IllegalStateException");
<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException: com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException UOE_OR_ISE> = v0;
v1 = new com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$2;
specialinvoke v1.<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$2: void <init>(java.lang.String)>("UnsupportedOperationException");
<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException: com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException UOE> = v1;
v2 = new com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$3;
specialinvoke v2.<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$3: void <init>(java.lang.String)>("IllegalStateException");
<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException: com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException ISE> = v2;
v3 = new com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$4;
specialinvoke v3.<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException$4: void <init>(java.lang.String)>("NoSuchElementException");
<com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException: com.google.common.collect.testing.AbstractIteratorTester$PermittedMetaException NSEE> = v3;
return;
}
}