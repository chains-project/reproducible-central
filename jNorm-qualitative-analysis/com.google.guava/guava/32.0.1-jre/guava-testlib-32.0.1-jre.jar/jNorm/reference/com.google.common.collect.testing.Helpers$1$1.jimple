class com.google.common.collect.testing.Helpers$1$1 extends java.lang.Object implements java.util.Iterator
{
final java.util.ListIterator val$listIter;
void <init>(com.google.common.collect.testing.Helpers$1, java.util.ListIterator)
{
com.google.common.collect.testing.Helpers$1$1 v0;
java.util.ListIterator v2;
com.google.common.collect.testing.Helpers$1 v1;
v0 := @this: com.google.common.collect.testing.Helpers$1$1;
v1 := @parameter0: com.google.common.collect.testing.Helpers$1;
v2 := @parameter1: java.util.ListIterator;
v0.<com.google.common.collect.testing.Helpers$1$1: java.util.ListIterator val$listIter> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean hasNext()
{
com.google.common.collect.testing.Helpers$1$1 v0;
java.util.ListIterator v1;
boolean v2;
v0 := @this: com.google.common.collect.testing.Helpers$1$1;
v1 = v0.<com.google.common.collect.testing.Helpers$1$1: java.util.ListIterator val$listIter>;
v2 = interfaceinvoke v1.<java.util.ListIterator: boolean hasPrevious()>();
return v2;
}
public java.lang.Object next()
{
com.google.common.collect.testing.Helpers$1$1 v0;
java.lang.Object v2;
java.util.ListIterator v1;
v0 := @this: com.google.common.collect.testing.Helpers$1$1;
v1 = v0.<com.google.common.collect.testing.Helpers$1$1: java.util.ListIterator val$listIter>;
v2 = interfaceinvoke v1.<java.util.ListIterator: java.lang.Object previous()>();
return v2;
}
public void remove()
{
com.google.common.collect.testing.Helpers$1$1 v0;
java.util.ListIterator v1;
v0 := @this: com.google.common.collect.testing.Helpers$1$1;
v1 = v0.<com.google.common.collect.testing.Helpers$1$1: java.util.ListIterator val$listIter>;
interfaceinvoke v1.<java.util.ListIterator: void remove()>();
return;
}
}