public class com.google.common.collect.testing.MinimalCollection extends java.util.AbstractCollection
{
private final java.lang.Object[] contents;
private final java.lang.Class type;
private final boolean allowNulls;
public static transient com.google.common.collect.testing.MinimalCollection of(java.lang.Object[])
{
com.google.common.collect.testing.MinimalCollection v1;
java.lang.Object[] v0;
v0 := @parameter0: java.lang.Object[];
v1 = new com.google.common.collect.testing.MinimalCollection;
specialinvoke v1.<com.google.common.collect.testing.MinimalCollection: void <init>(java.lang.Class,boolean,java.lang.Object[])>(class "Ljava/lang/Object;", 1, v0);
return v1;
}
public static transient com.google.common.collect.testing.MinimalCollection ofClassAndContents(java.lang.Class, java.lang.Object[])
{
java.lang.Class v0;
com.google.common.collect.testing.MinimalCollection v2;
java.lang.Object[] v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Object[];
v2 = new com.google.common.collect.testing.MinimalCollection;
specialinvoke v2.<com.google.common.collect.testing.MinimalCollection: void <init>(java.lang.Class,boolean,java.lang.Object[])>(v0, 1, v1);
return v2;
}
transient void <init>(java.lang.Class, boolean, java.lang.Object[])
{
java.lang.Object[] v3, v4;
java.lang.NullPointerException v8;
int v5, v6;
java.lang.Class v1;
java.lang.Object v7;
com.google.common.collect.testing.MinimalCollection v0;
boolean v2;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.Object[];
specialinvoke v0.<java.util.AbstractCollection: void <init>()>();
v4 = staticinvoke <com.google.common.collect.testing.Platform: java.lang.Object[] clone(java.lang.Object[])>(v3);
v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents> = v4;
v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Class type> = v1;
v0.<com.google.common.collect.testing.MinimalCollection: boolean allowNulls> = v2;
if v2 != 0 goto label3;
v5 = lengthof v3;
v6 = 0;
label1:
if v6 >= v5 goto label3;
v7 = v3[v6];
if v7 != null goto label2;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>()>();
throw v8;
label2:
v6 = v6 + 1;
goto label1;
label3:
return;
}
public int size()
{
int v2;
com.google.common.collect.testing.MinimalCollection v0;
java.lang.Object[] v1;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents>;
v2 = lengthof v1;
return v2;
}
public boolean contains(java.lang.Object)
{
java.lang.Object[] v5;
java.lang.NullPointerException v3;
java.util.List v6;
java.lang.Class v4;
java.lang.Object v1;
com.google.common.collect.testing.MinimalCollection v0;
boolean v2, v7;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.MinimalCollection: boolean allowNulls>;
if v2 != 0 goto label1;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>()>();
throw v3;
label1:
v4 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Class type>;
staticinvoke <com.google.common.collect.testing.Platform: void checkCast(java.lang.Class,java.lang.Object)>(v4, v1);
v5 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents>;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v5);
v7 = interfaceinvoke v6.<java.util.List: boolean contains(java.lang.Object)>(v1);
return v7;
}
public boolean containsAll(java.util.Collection)
{
java.util.Iterator v3;
java.util.Collection v1;
java.lang.NullPointerException v6;
java.lang.Object v5;
com.google.common.collect.testing.MinimalCollection v0;
boolean v2, v4, v7;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.MinimalCollection: boolean allowNulls>;
if v2 != 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
if v5 != null goto label1;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>()>();
throw v6;
label2:
v7 = specialinvoke v0.<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>(v1);
return v7;
}
public java.util.Iterator iterator()
{
java.util.List v2;
java.lang.Object[] v1;
java.util.Iterator v3;
com.google.common.collect.testing.MinimalCollection v0;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents>;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
return v3;
}
public java.lang.Object[] toArray()
{
java.lang.Object[] v1, v3, v4, v5;
int v2, v6;
com.google.common.collect.testing.MinimalCollection v0;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents>;
v2 = lengthof v1;
v3 = newarray (java.lang.Object)[v2];
v4 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents>;
v5 = v0.<com.google.common.collect.testing.MinimalCollection: java.lang.Object[] contents>;
v6 = lengthof v5;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v4, 0, v3, 0, v6);
return v3;
}
public boolean addAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
com.google.common.collect.testing.MinimalCollection v0;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 := @parameter0: java.util.Collection;
v2 = staticinvoke <com.google.common.collect.testing.MinimalCollection: java.lang.UnsupportedOperationException up()>();
throw v2;
}
public boolean removeAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
com.google.common.collect.testing.MinimalCollection v0;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 := @parameter0: java.util.Collection;
v2 = staticinvoke <com.google.common.collect.testing.MinimalCollection: java.lang.UnsupportedOperationException up()>();
throw v2;
}
public boolean retainAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
com.google.common.collect.testing.MinimalCollection v0;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 := @parameter0: java.util.Collection;
v2 = staticinvoke <com.google.common.collect.testing.MinimalCollection: java.lang.UnsupportedOperationException up()>();
throw v2;
}
public void clear()
{
java.lang.UnsupportedOperationException v1;
com.google.common.collect.testing.MinimalCollection v0;
v0 := @this: com.google.common.collect.testing.MinimalCollection;
v1 = staticinvoke <com.google.common.collect.testing.MinimalCollection: java.lang.UnsupportedOperationException up()>();
throw v1;
}
private static java.lang.UnsupportedOperationException up()
{
java.lang.UnsupportedOperationException v0;
v0 = new java.lang.UnsupportedOperationException;
specialinvoke v0.<java.lang.UnsupportedOperationException: void <init>()>();
throw v0;
}
}