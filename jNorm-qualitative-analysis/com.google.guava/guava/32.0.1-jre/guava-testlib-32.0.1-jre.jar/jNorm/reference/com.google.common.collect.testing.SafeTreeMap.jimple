public final class com.google.common.collect.testing.SafeTreeMap extends java.lang.Object implements java.io.Serializable, java.util.NavigableMap
{
private static final java.util.Comparator NATURAL_ORDER;
private final java.util.NavigableMap delegate;
private static final long serialVersionUID;
public void <init>()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.TreeMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = new java.util.TreeMap;
specialinvoke v1.<java.util.TreeMap: void <init>()>();
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v1);
return;
}
public void <init>(java.util.Comparator)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Comparator v1;
java.util.TreeMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.util.Comparator;
v2 = new java.util.TreeMap;
specialinvoke v2.<java.util.TreeMap: void <init>(java.util.Comparator)>(v1);
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v2);
return;
}
public void <init>(java.util.Map)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.TreeMap v2;
java.util.Map v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.util.Map;
v2 = new java.util.TreeMap;
specialinvoke v2.<java.util.TreeMap: void <init>(java.util.Map)>(v1);
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v2);
return;
}
public void <init>(java.util.SortedMap)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.TreeMap v2;
java.util.SortedMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.util.SortedMap;
v2 = new java.util.TreeMap;
specialinvoke v2.<java.util.TreeMap: void <init>(java.util.SortedMap)>(v1);
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v2);
return;
}
private void <init>(java.util.NavigableMap)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Iterator v4;
java.lang.Object v6;
java.util.NavigableSet v3;
java.util.NavigableMap v1;
java.lang.NullPointerException v2;
boolean v5;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.util.NavigableMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate> = v1;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
v3 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableSet keySet()>();
v4 = interfaceinvoke v3.<java.util.NavigableSet: java.util.Iterator iterator()>();
label2:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v6);
goto label2;
label3:
return;
}
public java.util.Map$Entry ceilingEntry(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v4;
java.lang.Object v1, v3;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.util.Map$Entry ceilingEntry(java.lang.Object)>(v3);
return v4;
}
public java.lang.Object ceilingKey(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3, v4;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.lang.Object ceilingKey(java.lang.Object)>(v3);
return v4;
}
public void clear()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
interfaceinvoke v1.<java.util.NavigableMap: void clear()>();
return;
}
public java.util.Comparator comparator()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Comparator v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.Comparator comparator()>();
if v2 != null goto label1;
v2 = <com.google.common.collect.testing.SafeTreeMap: java.util.Comparator NATURAL_ORDER>;
label1:
return v2;
}
public boolean containsKey(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3;
java.lang.RuntimeException v5;
java.util.NavigableMap v2;
boolean v4;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: boolean containsKey(java.lang.Object)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return 0;
catch java.lang.NullPointerException from label1 to label2 with label3;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
public boolean containsValue(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1;
java.util.NavigableMap v2;
boolean v3;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableMap: boolean containsValue(java.lang.Object)>(v1);
return v3;
}
public java.util.NavigableSet descendingKeySet()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableSet v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.NavigableSet descendingKeySet()>();
return v2;
}
public java.util.NavigableMap descendingMap()
{
com.google.common.collect.testing.SafeTreeMap v0, v1;
java.util.NavigableMap v2, v3;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = new com.google.common.collect.testing.SafeTreeMap;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableMap: java.util.NavigableMap descendingMap()>();
specialinvoke v1.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v3);
return v1;
}
public java.util.Set entrySet()
{
com.google.common.collect.testing.SafeTreeMap v0;
com.google.common.collect.testing.SafeTreeMap$2 v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = new com.google.common.collect.testing.SafeTreeMap$2;
specialinvoke v1.<com.google.common.collect.testing.SafeTreeMap$2: void <init>(com.google.common.collect.testing.SafeTreeMap)>(v0);
return v1;
}
public java.util.Map$Entry firstEntry()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.Map$Entry firstEntry()>();
return v2;
}
public java.lang.Object firstKey()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.lang.Object firstKey()>();
return v2;
}
public java.util.Map$Entry floorEntry(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v4;
java.lang.Object v1, v3;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>(v3);
return v4;
}
public java.lang.Object floorKey(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3, v4;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.lang.Object floorKey(java.lang.Object)>(v3);
return v4;
}
public java.lang.Object get(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3, v4;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.lang.Object get(java.lang.Object)>(v3);
return v4;
}
public java.util.SortedMap headMap(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>(v1, 0);
return v2;
}
public java.util.NavigableMap headMap(java.lang.Object, boolean)
{
com.google.common.collect.testing.SafeTreeMap v0, v3;
java.lang.Object v1, v5;
java.util.NavigableMap v4, v6;
boolean v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = new com.google.common.collect.testing.SafeTreeMap;
v4 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v5 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v6 = interfaceinvoke v4.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>(v5, v2);
specialinvoke v3.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v6);
return v3;
}
public java.util.Map$Entry higherEntry(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v4;
java.lang.Object v1, v3;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.util.Map$Entry higherEntry(java.lang.Object)>(v3);
return v4;
}
public java.lang.Object higherKey(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3, v4;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.lang.Object higherKey(java.lang.Object)>(v3);
return v4;
}
public boolean isEmpty()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableMap v1;
boolean v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: boolean isEmpty()>();
return v2;
}
public java.util.NavigableSet keySet()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableSet v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableSet navigableKeySet()>();
return v1;
}
public java.util.Map$Entry lastEntry()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.Map$Entry lastEntry()>();
return v2;
}
public java.lang.Object lastKey()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.lang.Object lastKey()>();
return v2;
}
public java.util.Map$Entry lowerEntry(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v4;
java.lang.Object v1, v3;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>(v3);
return v4;
}
public java.lang.Object lowerKey(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3, v4;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.lang.Object lowerKey(java.lang.Object)>(v3);
return v4;
}
public java.util.NavigableSet navigableKeySet()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableSet v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.NavigableSet navigableKeySet()>();
return v2;
}
public java.util.Map$Entry pollFirstEntry()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.Map$Entry pollFirstEntry()>();
return v2;
}
public java.util.Map$Entry pollLastEntry()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Map$Entry v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.Map$Entry pollLastEntry()>();
return v2;
}
public java.lang.Object put(java.lang.Object, java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v2, v4, v5;
java.util.NavigableMap v3;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v4 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v5 = interfaceinvoke v3.<java.util.NavigableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v2);
return v5;
}
public void putAll(java.util.Map)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.Iterator v3;
java.util.Map v1;
java.util.Set v2;
java.lang.Object v5;
java.util.NavigableMap v6;
boolean v4;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v5);
goto label1;
label2:
v6 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
interfaceinvoke v6.<java.util.NavigableMap: void putAll(java.util.Map)>(v1);
return;
}
public java.lang.Object remove(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v3, v4;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableMap: java.lang.Object remove(java.lang.Object)>(v3);
return v4;
}
public int size()
{
int v2;
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: int size()>();
return v2;
}
public java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean)
{
java.util.NavigableMap v6, v9;
com.google.common.collect.testing.SafeTreeMap v0, v5;
java.lang.Object v1, v3, v7, v8;
boolean v2, v4;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: boolean;
v5 = new com.google.common.collect.testing.SafeTreeMap;
v6 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v7 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v8 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v3);
v9 = interfaceinvoke v6.<java.util.NavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>(v7, v2, v8, v4);
specialinvoke v5.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v9);
return v5;
}
public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1, v2;
java.util.NavigableMap v3;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>(v1, 1, v2, 0);
return v3;
}
public java.util.SortedMap tailMap(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1;
java.util.NavigableMap v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(v1, 1);
return v2;
}
public java.util.NavigableMap tailMap(java.lang.Object, boolean)
{
com.google.common.collect.testing.SafeTreeMap v0, v3;
java.lang.Object v1, v5;
java.util.NavigableMap v4, v6;
boolean v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = new com.google.common.collect.testing.SafeTreeMap;
v4 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v5 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.lang.Object checkValid(java.lang.Object)>(v1);
v6 = interfaceinvoke v4.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(v5, v2);
specialinvoke v3.<com.google.common.collect.testing.SafeTreeMap: void <init>(java.util.NavigableMap)>(v6);
return v3;
}
public java.util.Collection values()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableMap v1;
java.util.Collection v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableMap: java.util.Collection values()>();
return v2;
}
private java.lang.Object checkValid(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1;
java.util.Comparator v2;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeMap: java.util.Comparator comparator()>();
interfaceinvoke v2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v1, v1);
return v1;
}
public boolean equals(java.lang.Object)
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.Object v1;
java.util.NavigableMap v2;
boolean v3;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v3 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
return v3;
}
public int hashCode()
{
int v2;
com.google.common.collect.testing.SafeTreeMap v0;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public java.lang.String toString()
{
com.google.common.collect.testing.SafeTreeMap v0;
java.lang.String v2;
java.util.NavigableMap v1;
v0 := @this: com.google.common.collect.testing.SafeTreeMap;
v1 = v0.<com.google.common.collect.testing.SafeTreeMap: java.util.NavigableMap delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
static void <clinit>()
{
com.google.common.collect.testing.SafeTreeMap$1 v0;
v0 = new com.google.common.collect.testing.SafeTreeMap$1;
specialinvoke v0.<com.google.common.collect.testing.SafeTreeMap$1: void <init>()>();
<com.google.common.collect.testing.SafeTreeMap: java.util.Comparator NATURAL_ORDER> = v0;
return;
}
}