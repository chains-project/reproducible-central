public final class com.google.common.collect.testing.SafeTreeSet extends java.lang.Object implements java.io.Serializable, java.util.NavigableSet
{
private static final java.util.Comparator NATURAL_ORDER;
private final java.util.NavigableSet delegate;
private static final long serialVersionUID;
public void <init>()
{
java.util.TreeSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = new java.util.TreeSet;
specialinvoke v1.<java.util.TreeSet: void <init>()>();
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v1);
return;
}
public void <init>(java.util.Collection)
{
java.util.TreeSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.Collection;
v2 = new java.util.TreeSet;
specialinvoke v2.<java.util.TreeSet: void <init>(java.util.Collection)>(v1);
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v2);
return;
}
public void <init>(java.util.Comparator)
{
java.util.Comparator v1;
java.util.TreeSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.Comparator;
v2 = new java.util.TreeSet;
specialinvoke v2.<java.util.TreeSet: void <init>(java.util.Comparator)>(v1);
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v2);
return;
}
public void <init>(java.util.SortedSet)
{
java.util.SortedSet v1;
java.util.TreeSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.SortedSet;
v2 = new java.util.TreeSet;
specialinvoke v2.<java.util.TreeSet: void <init>(java.util.SortedSet)>(v1);
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v2);
return;
}
private void <init>(java.util.NavigableSet)
{
java.util.Iterator v2;
java.lang.Object v4;
java.util.NavigableSet v1;
boolean v3;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.NavigableSet;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate> = v1;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v4);
goto label1;
label2:
return;
}
public boolean add(java.lang.Object)
{
java.lang.Object v1, v3;
java.util.NavigableSet v2;
boolean v4;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: boolean add(java.lang.Object)>(v3);
return v4;
}
public boolean addAll(java.util.Collection)
{
java.util.Iterator v2;
java.util.Collection v1;
java.lang.Object v4;
java.util.NavigableSet v5;
boolean v3, v6;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v4);
goto label1;
label2:
v5 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v6 = interfaceinvoke v5.<java.util.NavigableSet: boolean addAll(java.util.Collection)>(v1);
return v6;
}
public java.lang.Object ceiling(java.lang.Object)
{
java.lang.Object v1, v3, v4;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: java.lang.Object ceiling(java.lang.Object)>(v3);
return v4;
}
public void clear()
{
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
interfaceinvoke v1.<java.util.NavigableSet: void clear()>();
return;
}
public java.util.Comparator comparator()
{
java.util.NavigableSet v1;
java.util.Comparator v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.util.Comparator comparator()>();
if v2 != null goto label1;
v2 = <com.google.common.collect.testing.SafeTreeSet: java.util.Comparator NATURAL_ORDER>;
label1:
return v2;
}
public boolean contains(java.lang.Object)
{
java.lang.Object v1, v3;
java.util.NavigableSet v2;
boolean v4;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: boolean contains(java.lang.Object)>(v3);
return v4;
}
public boolean containsAll(java.util.Collection)
{
java.util.Collection v1;
java.util.NavigableSet v2;
boolean v3;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableSet: boolean containsAll(java.util.Collection)>(v1);
return v3;
}
public java.util.Iterator descendingIterator()
{
java.util.NavigableSet v1;
java.util.Iterator v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.util.Iterator descendingIterator()>();
return v2;
}
public java.util.NavigableSet descendingSet()
{
java.util.NavigableSet v2, v3;
com.google.common.collect.testing.SafeTreeSet v0, v1;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = new com.google.common.collect.testing.SafeTreeSet;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableSet: java.util.NavigableSet descendingSet()>();
specialinvoke v1.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v3);
return v1;
}
public java.lang.Object first()
{
java.lang.Object v2;
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.lang.Object first()>();
return v2;
}
public java.lang.Object floor(java.lang.Object)
{
java.lang.Object v1, v3, v4;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: java.lang.Object floor(java.lang.Object)>(v3);
return v4;
}
public java.util.SortedSet headSet(java.lang.Object)
{
java.lang.Object v1;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>(v1, 0);
return v2;
}
public java.util.NavigableSet headSet(java.lang.Object, boolean)
{
java.lang.Object v1, v5;
java.util.NavigableSet v4, v6;
boolean v2;
com.google.common.collect.testing.SafeTreeSet v0, v3;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = new com.google.common.collect.testing.SafeTreeSet;
v4 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v5 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v6 = interfaceinvoke v4.<java.util.NavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>(v5, v2);
specialinvoke v3.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v6);
return v3;
}
public java.lang.Object higher(java.lang.Object)
{
java.lang.Object v1, v3, v4;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: java.lang.Object higher(java.lang.Object)>(v3);
return v4;
}
public boolean isEmpty()
{
java.util.NavigableSet v1;
boolean v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: boolean isEmpty()>();
return v2;
}
public java.util.Iterator iterator()
{
java.util.NavigableSet v1;
java.util.Iterator v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.util.Iterator iterator()>();
return v2;
}
public java.lang.Object last()
{
java.lang.Object v2;
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.lang.Object last()>();
return v2;
}
public java.lang.Object lower(java.lang.Object)
{
java.lang.Object v1, v3, v4;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: java.lang.Object lower(java.lang.Object)>(v3);
return v4;
}
public java.lang.Object pollFirst()
{
java.lang.Object v2;
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.lang.Object pollFirst()>();
return v2;
}
public java.lang.Object pollLast()
{
java.lang.Object v2;
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.lang.Object pollLast()>();
return v2;
}
public boolean remove(java.lang.Object)
{
java.lang.Object v1, v3;
java.util.NavigableSet v2;
boolean v4;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v4 = interfaceinvoke v2.<java.util.NavigableSet: boolean remove(java.lang.Object)>(v3);
return v4;
}
public boolean removeAll(java.util.Collection)
{
java.util.Collection v1;
java.util.NavigableSet v2;
boolean v3;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableSet: boolean removeAll(java.util.Collection)>(v1);
return v3;
}
public boolean retainAll(java.util.Collection)
{
java.util.Collection v1;
java.util.NavigableSet v2;
boolean v3;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableSet: boolean retainAll(java.util.Collection)>(v1);
return v3;
}
public int size()
{
int v2;
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: int size()>();
return v2;
}
public java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean)
{
java.util.NavigableSet v6, v9;
java.lang.Object v1, v3, v7, v8;
boolean v2, v4;
com.google.common.collect.testing.SafeTreeSet v0, v5;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: boolean;
v5 = new com.google.common.collect.testing.SafeTreeSet;
v6 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v7 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v8 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v3);
v9 = interfaceinvoke v6.<java.util.NavigableSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>(v7, v2, v8, v4);
specialinvoke v5.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v9);
return v5;
}
public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
java.util.NavigableSet v3;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>(v1, 1, v2, 0);
return v3;
}
public java.util.SortedSet tailSet(java.lang.Object)
{
java.lang.Object v1;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>(v1, 1);
return v2;
}
public java.util.NavigableSet tailSet(java.lang.Object, boolean)
{
java.lang.Object v1, v5;
java.util.NavigableSet v4, v6;
boolean v2;
com.google.common.collect.testing.SafeTreeSet v0, v3;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = new com.google.common.collect.testing.SafeTreeSet;
v4 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v5 = specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.lang.Object checkValid(java.lang.Object)>(v1);
v6 = interfaceinvoke v4.<java.util.NavigableSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>(v5, v2);
specialinvoke v3.<com.google.common.collect.testing.SafeTreeSet: void <init>(java.util.NavigableSet)>(v6);
return v3;
}
public java.lang.Object[] toArray()
{
java.util.NavigableSet v1;
java.lang.Object[] v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = interfaceinvoke v1.<java.util.NavigableSet: java.lang.Object[] toArray()>();
return v2;
}
public java.lang.Object[] toArray(java.lang.Object[])
{
java.lang.Object[] v1, v3;
java.util.NavigableSet v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = interfaceinvoke v2.<java.util.NavigableSet: java.lang.Object[] toArray(java.lang.Object[])>(v1);
return v3;
}
private java.lang.Object checkValid(java.lang.Object)
{
java.lang.Object v1;
java.util.Comparator v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.SafeTreeSet: java.util.Comparator comparator()>();
interfaceinvoke v2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v1, v1);
return v1;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
java.util.NavigableSet v2;
boolean v3;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v3 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
return v3;
}
public int hashCode()
{
int v2;
java.util.NavigableSet v1;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public java.lang.String toString()
{
java.util.NavigableSet v1;
java.lang.String v2;
com.google.common.collect.testing.SafeTreeSet v0;
v0 := @this: com.google.common.collect.testing.SafeTreeSet;
v1 = v0.<com.google.common.collect.testing.SafeTreeSet: java.util.NavigableSet delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
static void <clinit>()
{
com.google.common.collect.testing.SafeTreeSet$1 v0;
v0 = new com.google.common.collect.testing.SafeTreeSet$1;
specialinvoke v0.<com.google.common.collect.testing.SafeTreeSet$1: void <init>()>();
<com.google.common.collect.testing.SafeTreeSet: java.util.Comparator NATURAL_ORDER> = v0;
return;
}
}