class com.google.common.collect.testing.TestsForMapsInJavaUtil$1 extends com.google.common.collect.testing.TestStringMapGenerator
{
void <init>(com.google.common.collect.testing.TestsForMapsInJavaUtil)
{
com.google.common.collect.testing.TestsForMapsInJavaUtil v1;
com.google.common.collect.testing.TestsForMapsInJavaUtil$1 v0;
v0 := @this: com.google.common.collect.testing.TestsForMapsInJavaUtil$1;
v1 := @parameter0: com.google.common.collect.testing.TestsForMapsInJavaUtil;
specialinvoke v0.<com.google.common.collect.testing.TestStringMapGenerator: void <init>()>();
return;
}
protected java.util.Map create(java.util.Map$Entry[])
{
java.util.Map v3, v4;
com.google.common.collect.testing.TestsForMapsInJavaUtil$1 v0;
java.util.HashMap v2;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.TestsForMapsInJavaUtil$1;
v1 := @parameter0: java.util.Map$Entry[];
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v3 = staticinvoke <com.google.common.collect.testing.TestsForMapsInJavaUtil: java.util.Map populate(java.util.Map,java.util.Map$Entry[])>(v2, v1);
v4 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>(v3, class "Ljava/lang/String;", class "Ljava/lang/String;");
return v4;
}
}