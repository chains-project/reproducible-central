public class com.google.common.collect.testing.google.MultimapContainsValueTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapContainsValueTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsValueTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testContainsValueYes()
{
java.lang.Object v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapContainsValueTester v0;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsValueTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: java.lang.Object v0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsValue(java.lang.Object)>(v2);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsValueTester: void assertTrue(boolean)>(v3);
return;
}
public void testContainsValueNo()
{
java.lang.Object v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapContainsValueTester v0;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsValueTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: java.lang.Object v3()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsValue(java.lang.Object)>(v2);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsValueTester: void assertFalse(boolean)>(v3);
return;
}
public void testContainsNullValueYes()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapContainsValueTester v0;
boolean v2;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsValueTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: void initMultimapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsValue(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsValueTester: void assertTrue(boolean)>(v2);
return;
}
public void testContainsNullValueNo()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapContainsValueTester v0;
boolean v2;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsValueTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsValue(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsValueTester: void assertFalse(boolean)>(v2);
return;
}
public void testContainsNullValueFails()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapContainsValueTester v0;
java.lang.NullPointerException v2;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsValueTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsValueTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsValue(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsValueTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
}