class com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator extends java.lang.Object implements com.google.common.collect.testing.TestCollectionGenerator
{
private final com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator;
public void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)
{
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator v0;
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator;
v1 := @parameter0: com.google.common.collect.testing.OneSizeTestContainerGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator> = v1;
return;
}
public com.google.common.collect.testing.SampleElements samples()
{
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator v0;
com.google.common.collect.testing.TestContainerGenerator v2;
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
com.google.common.collect.testing.SampleElements v3;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator;
v1 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v2 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleValues()>();
return v3;
}
public transient java.util.Collection create(java.lang.Object[])
{
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator v0;
java.util.Map$Entry v11;
java.lang.Object[] v1;
com.google.common.collect.testing.OneSizeTestContainerGenerator v12, v2;
com.google.common.collect.testing.SampleElements v4;
java.util.Collection v14;
com.google.common.collect.testing.TestContainerGenerator v3;
int v6, v8, v9;
java.lang.Object v10, v13, v5;
java.util.Map$Entry[] v7;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleKeys()>();
v5 = virtualinvoke v4.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v6 = lengthof v1;
v7 = newarray (java.util.Map$Entry)[v6];
v8 = 0;
label1:
v9 = lengthof v1;
if v8 >= v9 goto label2;
v10 = v1[v8];
v11 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v10);
v7[v8] = v11;
v8 = v8 + 1;
goto label1;
label2:
v12 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v13 = interfaceinvoke v12.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v7);
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: java.util.Collection values()>();
return v14;
}
public java.lang.Object[] createArray(int)
{
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator v0;
java.lang.Object[] v4;
com.google.common.collect.testing.TestContainerGenerator v3;
com.google.common.collect.testing.OneSizeTestContainerGenerator v2;
int v1;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator;
v1 := @parameter0: int;
v2 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.google.TestMultimapGenerator: java.lang.Object[] createValueArray(int)>(v1);
return v4;
}
public java.lang.Iterable order(java.util.List)
{
com.google.common.collect.testing.SampleElements v4;
java.lang.Iterable v12;
java.util.ArrayList v13, v6;
boolean v15, v8;
com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator v0;
java.util.Map$Entry v10;
java.util.Iterator v14, v7;
com.google.common.collect.testing.OneSizeTestContainerGenerator v11, v2;
java.util.List v1;
com.google.common.collect.testing.TestContainerGenerator v3;
java.lang.Object v16, v17, v5, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator;
v1 := @parameter0: java.util.List;
v2 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.TestContainerGenerator getInnerGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.google.TestMultimapGenerator: com.google.common.collect.testing.SampleElements sampleKeys()>();
v5 = virtualinvoke v4.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>()>();
v7 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label2;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v9);
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v10);
goto label1;
label2:
v11 = v0.<com.google.common.collect.testing.google.MultimapTestSuiteBuilder$ValuesGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator multimapGenerator>;
v12 = interfaceinvoke v11.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Iterable order(java.util.List)>(v6);
v13 = new java.util.ArrayList;
specialinvoke v13.<java.util.ArrayList: void <init>()>();
v14 = interfaceinvoke v12.<java.lang.Iterable: java.util.Iterator iterator()>();
label3:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label4;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v13.<java.util.List: boolean add(java.lang.Object)>(v17);
goto label3;
label4:
return v13;
}
}