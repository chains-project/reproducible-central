public class com.google.common.collect.testing.google.MultisetAddTester extends com.google.common.collect.testing.google.AbstractMultisetTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultisetTester: void <init>()>();
return;
}
public void testAddUnsupported()
{
java.lang.UnsupportedOperationException v3;
com.google.common.collect.Multiset v1;
java.lang.Object v2;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
interfaceinvoke v1.<com.google.common.collect.Multiset: boolean add(java.lang.Object)>(v2);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void fail(java.lang.String)>("Expected UnsupportedOperationException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
public void testAddMeansAddOne()
{
com.google.common.collect.Multiset v1, v4, v8;
int v10, v3, v7;
java.lang.Object v2, v5, v9;
boolean v6;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multiset: boolean add(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertTrue(boolean)>(v6);
v7 = v3 + 1;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v10 = interfaceinvoke v8.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v9);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(int,int)>(v7, v10);
return;
}
public void testAddOccurrencesZero()
{
com.google.common.collect.Multiset v1, v4;
int v3, v6;
java.lang.Object v2, v5;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v5, 0);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(java.lang.String,int,int)>("old count", v3, v6);
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: void expectUnchanged()>();
return;
}
public void testAddOccurrences()
{
com.google.common.collect.Multiset v1, v4, v8;
int v10, v3, v6, v7;
java.lang.Object v2, v5, v9;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v5, 2);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(java.lang.String,int,int)>("old count", v3, v6);
v7 = v3 + 2;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v10 = interfaceinvoke v8.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v9);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(java.lang.String,int,int)>("old count", v7, v10);
return;
}
public void testAddSeveralTimes()
{
com.google.common.collect.Multiset v1, v11, v15, v4, v7;
int v10, v13, v14, v17, v3, v6;
boolean v9;
java.lang.Object v12, v16, v2, v5, v8;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v5, 2);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(int,int)>(v3, v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v9 = interfaceinvoke v7.<com.google.common.collect.Multiset: boolean add(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertTrue(boolean)>(v9);
v10 = v3 + 3;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v13 = interfaceinvoke v11.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v12, 1);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(int,int)>(v10, v13);
v14 = v3 + 4;
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v17 = interfaceinvoke v15.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v16);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(int,int)>(v14, v17);
return;
}
public void testAddOccurrences_unsupported()
{
java.lang.UnsupportedOperationException v3;
com.google.common.collect.Multiset v1;
java.lang.Object v2;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
interfaceinvoke v1.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v2, 2);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void fail(java.lang.String)>("unsupported multiset.add(E, int) didn\'t throw exception");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
public void testAddOccurrencesNegative()
{
com.google.common.collect.Multiset v1;
int v3;
java.lang.Object v2;
java.lang.IllegalArgumentException v4;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e0()>();
v3 = (int) -1;
interfaceinvoke v1.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void fail(java.lang.String)>("multiset.add(E, -1) didn\'t throw an exception");
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public void testAddTooMany()
{
com.google.common.collect.Multiset v1, v3, v6, v9;
java.lang.IllegalArgumentException v5;
int v10, v8;
java.lang.Object v2, v4, v7;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
interfaceinvoke v1.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v2, 2147483647);
label1:
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
interfaceinvoke v3.<com.google.common.collect.Multiset: boolean add(java.lang.Object)>(v4);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void fail()>();
label2:
goto label4;
label3:
v5 := @caughtexception;
label4:
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v8 = interfaceinvoke v6.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(int,int)>(2147483647, v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v10 = interfaceinvoke v9.<com.google.common.collect.Multiset: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertEquals(int,int)>(2147483647, v10);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public void testAddAll_emptySet()
{
com.google.common.collect.Multiset v1;
java.util.Set v2;
boolean v3;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multiset: boolean addAll(java.util.Collection)>(v2);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertFalse(boolean)>(v3);
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: void expectUnchanged()>();
return;
}
public void testAddAll_emptyMultiset()
{
java.lang.Object[] v3;
com.google.common.collect.Multiset v1;
java.lang.Object v2, v4;
boolean v5;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object getSubjectGenerator()>();
v3 = newarray (java.lang.Object)[0];
v4 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v3);
v5 = interfaceinvoke v1.<com.google.common.collect.Multiset: boolean addAll(java.util.Collection)>(v4);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertFalse(boolean)>(v5);
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: void expectUnchanged()>();
return;
}
public void testAddAll_nonEmptyList()
{
java.lang.Object[] v2, v8;
com.google.common.collect.Multiset v1;
java.util.List v6;
java.lang.Object v10, v11, v3, v4, v5, v9;
boolean v7;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = newarray (java.lang.Object)[3];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v2[0] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e4()>();
v2[1] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v2[2] = v5;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v7 = interfaceinvoke v1.<com.google.common.collect.Multiset: boolean addAll(java.util.Collection)>(v6);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertTrue(boolean)>(v7);
v8 = newarray (java.lang.Object)[3];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v8[0] = v9;
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e4()>();
v8[1] = v10;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v8[2] = v11;
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: void expectAdded(java.lang.Object[])>(v8);
return;
}
public void testAddAll_nonEmptyMultiset()
{
java.lang.Object[] v3, v9;
com.google.common.collect.Multiset v1;
java.lang.Object v10, v11, v12, v2, v4, v5, v6, v7;
boolean v8;
com.google.common.collect.testing.google.MultisetAddTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetAddTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object getSubjectGenerator()>();
v3 = newarray (java.lang.Object)[3];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v3[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e4()>();
v3[1] = v5;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v3[2] = v6;
v7 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v3);
v8 = interfaceinvoke v1.<com.google.common.collect.Multiset: boolean addAll(java.util.Collection)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultisetAddTester: void assertTrue(boolean)>(v8);
v9 = newarray (java.lang.Object)[3];
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v9[0] = v10;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e4()>();
v9[1] = v11;
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: java.lang.Object e3()>();
v9[2] = v12;
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetAddTester: void expectAdded(java.lang.Object[])>(v9);
return;
}
}