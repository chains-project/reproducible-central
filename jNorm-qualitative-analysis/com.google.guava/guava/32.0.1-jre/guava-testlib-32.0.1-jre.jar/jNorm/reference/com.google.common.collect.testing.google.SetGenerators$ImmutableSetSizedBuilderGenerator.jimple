public class com.google.common.collect.testing.google.SetGenerators$ImmutableSetSizedBuilderGenerator extends com.google.common.collect.testing.TestStringSetGenerator
{
public void <init>()
{
com.google.common.collect.testing.google.SetGenerators$ImmutableSetSizedBuilderGenerator v0;
v0 := @this: com.google.common.collect.testing.google.SetGenerators$ImmutableSetSizedBuilderGenerator;
specialinvoke v0.<com.google.common.collect.testing.TestStringSetGenerator: void <init>()>();
return;
}
protected java.util.Set create(java.lang.String[])
{
com.google.common.collect.ImmutableSet v8;
com.google.common.collect.ImmutableSet$Builder v4;
java.lang.String[] v1;
java.util.HashSet v2;
com.google.common.collect.testing.google.SetGenerators$ImmutableSetSizedBuilderGenerator v0;
int v3, v5, v6;
java.lang.String v7;
v0 := @this: com.google.common.collect.testing.google.SetGenerators$ImmutableSetSizedBuilderGenerator;
v1 := @parameter0: java.lang.String[];
v2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>(v1);
v3 = virtualinvoke v2.<java.util.HashSet: int size()>();
v4 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builderWithExpectedSize(int)>(v3);
v5 = lengthof v1;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v1[v6];
virtualinvoke v4.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>(v7);
v6 = v6 + 1;
goto label1;
label2:
v8 = virtualinvoke v4.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();
return v8;
}
}