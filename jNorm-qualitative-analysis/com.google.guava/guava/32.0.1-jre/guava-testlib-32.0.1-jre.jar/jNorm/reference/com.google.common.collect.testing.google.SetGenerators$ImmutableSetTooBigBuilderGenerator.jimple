public class com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooBigBuilderGenerator extends com.google.common.collect.testing.TestStringSetGenerator
{
public void <init>()
{
com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooBigBuilderGenerator v0;
v0 := @this: com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooBigBuilderGenerator;
specialinvoke v0.<com.google.common.collect.testing.TestStringSetGenerator: void <init>()>();
return;
}
protected java.util.Set create(java.lang.String[])
{
com.google.common.collect.ImmutableSet v9;
com.google.common.collect.ImmutableSet$Builder v5;
java.lang.String[] v1;
com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooBigBuilderGenerator v0;
java.util.HashSet v2;
int v3, v4, v6, v7;
java.lang.String v8;
v0 := @this: com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooBigBuilderGenerator;
v1 := @parameter0: java.lang.String[];
v2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>(v1);
v3 = virtualinvoke v2.<java.util.HashSet: int size()>();
v4 = v3 + 1;
v5 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builderWithExpectedSize(int)>(v4);
v6 = lengthof v1;
v7 = 0;
label1:
if v7 >= v6 goto label2;
v8 = v1[v7];
virtualinvoke v5.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>(v8);
v7 = v7 + 1;
goto label1;
label2:
v9 = virtualinvoke v5.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();
return v9;
}
}