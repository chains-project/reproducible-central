public class com.google.common.collect.testing.testers.CollectionForEachTester extends com.google.common.collect.testing.AbstractCollectionTester
{
public void <init>()
{
com.google.common.collect.testing.testers.CollectionForEachTester v0;
v0 := @this: com.google.common.collect.testing.testers.CollectionForEachTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: void <init>()>();
return;
}
public void testForEachUnknownOrder()
{
java.util.function.Consumer v3;
java.util.List v5;
java.lang.Object[] v4;
java.util.Collection v2;
com.google.common.collect.testing.testers.CollectionForEachTester v0;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.testers.CollectionForEachTester;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.google.common.collect.testing.testers.CollectionForEachTester: java.util.Collection collection>;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <com.google.common.collect.testing.testers.CollectionForEachTester$add__22: java.util.function.Consumer bootstrap$(java.util.List)>(v1);
interfaceinvoke v2.<java.util.Collection: void forEach(java.util.function.Consumer)>(v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.CollectionForEachTester: java.lang.Object[] createSamplesArray()>();
v5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v4);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v5, v1);
return;
}
public void testForEachKnownOrder()
{
java.util.function.Consumer v3;
java.util.List v4, v5;
java.util.Collection v2;
com.google.common.collect.testing.testers.CollectionForEachTester v0;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.testers.CollectionForEachTester;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.google.common.collect.testing.testers.CollectionForEachTester: java.util.Collection collection>;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <com.google.common.collect.testing.testers.CollectionForEachTester$add__23: java.util.function.Consumer bootstrap$(java.util.List)>(v1);
interfaceinvoke v2.<java.util.Collection: void forEach(java.util.function.Consumer)>(v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.CollectionForEachTester: java.util.List getOrderedElements()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v4);
staticinvoke <com.google.common.collect.testing.testers.CollectionForEachTester: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Different ordered iteration", v5, v1);
return;
}
}