public class com.google.common.collect.testing.testers.ListReplaceAllTester extends com.google.common.collect.testing.testers.AbstractListTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListReplaceAllTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListReplaceAllTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: void <init>()>();
return;
}
public void testReplaceAll()
{
java.util.List v1, v6;
com.google.common.collect.testing.SampleElements v4;
int v3;
java.lang.Object v5;
java.util.function.UnaryOperator v2;
com.google.common.collect.testing.testers.ListReplaceAllTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListReplaceAllTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: java.util.List getList()>();
v2 = staticinvoke <com.google.common.collect.testing.testers.ListReplaceAllTester$lambda_testReplaceAll_0__30: java.util.function.UnaryOperator bootstrap$(com.google.common.collect.testing.testers.ListReplaceAllTester)>(v0);
interfaceinvoke v1.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(v2);
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: int getNumElements()>();
v4 = v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: com.google.common.collect.testing.SampleElements samples>;
v5 = virtualinvoke v4.<com.google.common.collect.testing.SampleElements: java.lang.Object e3()>();
v6 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(v3, v5);
virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: void expectContents(java.util.Collection)>(v6);
return;
}
public void testReplaceAll_changesSome()
{
java.lang.Object[] v3;
com.google.common.collect.testing.SampleElements v10, v7;
java.util.function.UnaryOperator v2;
java.util.List v1;
int v4, v5;
java.lang.Object v11, v6, v8;
com.google.common.collect.testing.testers.ListReplaceAllTester v0;
boolean v9;
v0 := @this: com.google.common.collect.testing.testers.ListReplaceAllTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: java.util.List getList()>();
v2 = staticinvoke <com.google.common.collect.testing.testers.ListReplaceAllTester$lambda_testReplaceAll_changesSome_1__31: java.util.function.UnaryOperator bootstrap$(com.google.common.collect.testing.testers.ListReplaceAllTester)>(v0);
interfaceinvoke v1.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(v2);
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: java.lang.Object[] createSamplesArray()>();
v4 = 0;
label1:
v5 = lengthof v3;
if v4 >= v5 goto label3;
v6 = v3[v4];
v7 = v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: com.google.common.collect.testing.SampleElements samples>;
v8 = virtualinvoke v7.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v9 = virtualinvoke v6.<java.lang.Object: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label2;
v10 = v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: com.google.common.collect.testing.SampleElements samples>;
v11 = virtualinvoke v10.<com.google.common.collect.testing.SampleElements: java.lang.Object e3()>();
v3[v4] = v11;
label2:
v4 = v4 + 1;
goto label1;
label3:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: void expectContents(java.lang.Object[])>(v3);
return;
}
public void testReplaceAll_unsupported()
{
java.lang.UnsupportedOperationException v3;
java.util.List v1;
java.util.function.UnaryOperator v2;
com.google.common.collect.testing.testers.ListReplaceAllTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListReplaceAllTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: java.util.List getList()>();
v2 = staticinvoke <com.google.common.collect.testing.testers.ListReplaceAllTester$lambda_testReplaceAll_unsupported_2__32: java.util.function.UnaryOperator bootstrap$()>();
interfaceinvoke v1.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(v2);
staticinvoke <com.google.common.collect.testing.testers.ListReplaceAllTester: void fail(java.lang.String)>("replaceAll() should throw UnsupportedOperationException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.testers.ListReplaceAllTester: void expectUnchanged()>();
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
}