public class com.google.common.collect.testing.testers.ListToArrayTester extends com.google.common.collect.testing.testers.AbstractListTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListToArrayTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListToArrayTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: void <init>()>();
return;
}
public void testToArray_noArg()
{
java.util.List v1;
java.lang.Object[] v2, v3;
com.google.common.collect.testing.testers.ListToArrayTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListToArrayTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: java.util.List getList()>();
v2 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: java.lang.Object[] createOrderedArray()>();
staticinvoke <com.google.common.collect.testing.testers.ListToArrayTester: void assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[])>("toArray() order should match list", v3, v2);
return;
}
public void testToArray_tooSmall()
{
java.util.List v1;
java.lang.Object[] v2, v3, v4;
com.google.common.collect.testing.testers.ListToArrayTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListToArrayTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: java.util.List getList()>();
v2 = newarray (java.lang.Object)[0];
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v2);
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: java.lang.Object[] createOrderedArray()>();
staticinvoke <com.google.common.collect.testing.testers.ListToArrayTester: void assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[])>("toArray(tooSmall) order should match list", v4, v3);
return;
}
public void testToArray_largeEnough()
{
java.util.List v1;
java.lang.Object[] v3, v4, v5;
com.google.common.collect.testing.testers.ListToArrayTester v0;
int v2;
v0 := @this: com.google.common.collect.testing.testers.ListToArrayTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: java.util.List getList()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: int getNumElements()>();
v3 = newarray (java.lang.Object)[v2];
v4 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v3);
v5 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListToArrayTester: java.lang.Object[] createOrderedArray()>();
staticinvoke <com.google.common.collect.testing.testers.ListToArrayTester: void assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[])>("toArray(largeEnough) order should match list", v5, v4);
return;
}
private static void assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])
{
java.util.List v3, v4;
java.lang.Object[] v1, v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
v2 := @parameter2: java.lang.Object[];
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
staticinvoke <com.google.common.collect.testing.testers.ListToArrayTester: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>(v0, v3, v4);
return;
}
}