public class com.google.common.collect.testing.testers.MapCreationTester extends com.google.common.collect.testing.AbstractMapTester
{
public void <init>()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractMapTester: void <init>()>();
return;
}
public void testCreateWithNullKeySupported()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void initMapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] createArrayWithNullKey()>();
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void expectContents(java.lang.Object[])>(v1);
return;
}
public void testCreateWithNullKeyUnsupported()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.lang.NullPointerException v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
label1:
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void initMapWithNullKey()>();
staticinvoke <com.google.common.collect.testing.testers.MapCreationTester: void fail(java.lang.String)>("Creating a map containing a null key should fail");
label2:
goto label4;
label3:
v1 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testCreateWithNullValueSupported()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void initMapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] createArrayWithNullValue()>();
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void expectContents(java.lang.Object[])>(v1);
return;
}
public void testCreateWithNullValueUnsupported()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.lang.NullPointerException v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
label1:
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void initMapWithNullValue()>();
staticinvoke <com.google.common.collect.testing.testers.MapCreationTester: void fail(java.lang.String)>("Creating a map containing a null value should fail");
label2:
goto label4;
label3:
v1 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testCreateWithNullKeyAndValueSupported()
{
java.util.Map$Entry v3;
java.lang.Object[] v1;
com.google.common.collect.testing.testers.MapCreationTester v0;
int v2;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: int getNullLocation()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>(null, null);
v1[v2] = v3;
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void resetMap(java.util.Map$Entry[])>(v1);
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void expectContents(java.lang.Object[])>(v1);
return;
}
public void testCreateWithDuplicates_nullDuplicatesNotRejected()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = specialinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] getEntriesMultipleNullKeys()>();
specialinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void expectFirstRemoved(java.util.Map$Entry[])>(v1);
return;
}
public void testCreateWithDuplicates_nonNullDuplicatesNotRejected()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = specialinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] getEntriesMultipleNonNullKeys()>();
specialinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void expectFirstRemoved(java.util.Map$Entry[])>(v1);
return;
}
public void testCreateWithDuplicates_nullDuplicatesRejected()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.lang.IllegalArgumentException v2;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = specialinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] getEntriesMultipleNullKeys()>();
label1:
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void resetMap(java.util.Map$Entry[])>(v1);
staticinvoke <com.google.common.collect.testing.testers.MapCreationTester: void fail(java.lang.String)>("Should reject duplicate null elements at creation");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public void testCreateWithDuplicates_nonNullDuplicatesRejected()
{
com.google.common.collect.testing.testers.MapCreationTester v0;
java.lang.IllegalArgumentException v2;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = specialinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] getEntriesMultipleNonNullKeys()>();
label1:
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void resetMap(java.util.Map$Entry[])>(v1);
staticinvoke <com.google.common.collect.testing.testers.MapCreationTester: void fail(java.lang.String)>("Should reject duplicate non-null elements at creation");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.util.Map$Entry[] getEntriesMultipleNullKeys()
{
java.util.Map$Entry v2, v4;
com.google.common.collect.testing.testers.MapCreationTester v0;
java.lang.Object v3;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry[] createArrayWithNullKey()>();
v2 = v1[0];
v3 = interfaceinvoke v2.<java.util.Map$Entry: java.lang.Object getValue()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>(null, v3);
v1[0] = v4;
return v1;
}
private java.util.Map$Entry[] getEntriesMultipleNonNullKeys()
{
java.util.Map$Entry v4;
java.lang.Object[] v1;
com.google.common.collect.testing.testers.MapCreationTester v0;
java.lang.Object v2, v3;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.lang.Object k1()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.lang.Object v0()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
return v1;
}
private void expectFirstRemoved(java.util.Map$Entry[])
{
java.util.List v2, v4;
com.google.common.collect.testing.testers.MapCreationTester v0;
int v3;
java.util.Map$Entry[] v1;
v0 := @this: com.google.common.collect.testing.testers.MapCreationTester;
v1 := @parameter0: java.util.Map$Entry[];
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void resetMap(java.util.Map$Entry[])>(v1);
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: int getNumElements()>();
v4 = interfaceinvoke v2.<java.util.List: java.util.List subList(int,int)>(1, v3);
virtualinvoke v0.<com.google.common.collect.testing.testers.MapCreationTester: void expectContents(java.util.Collection)>(v4);
return;
}
public static java.lang.reflect.Method getCreateWithNullKeyUnsupportedMethod()
{
java.lang.reflect.Method v0;
v0 = staticinvoke <com.google.common.collect.testing.Helpers: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/testing/testers/MapCreationTester;", "testCreateWithNullKeyUnsupported");
return v0;
}
}