public class com.google.common.collect.testing.testers.SetAddAllTester extends com.google.common.collect.testing.testers.AbstractSetTester
{
public void <init>()
{
com.google.common.collect.testing.testers.SetAddAllTester v0;
v0 := @this: com.google.common.collect.testing.testers.SetAddAllTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractSetTester: void <init>()>();
return;
}
public void testAddAll_supportedSomePresent()
{
java.lang.Object[] v2, v7;
com.google.common.collect.testing.testers.SetAddAllTester v0;
java.util.Set v1;
java.lang.Object v3, v4, v8;
com.google.common.collect.testing.MinimalCollection v5;
boolean v6;
v0 := @this: com.google.common.collect.testing.testers.SetAddAllTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.util.Set getSet()>();
v2 = newarray (java.lang.Object)[2];
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e3()>();
v2[0] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e0()>();
v2[1] = v4;
v5 = staticinvoke <com.google.common.collect.testing.MinimalCollection: com.google.common.collect.testing.MinimalCollection of(java.lang.Object[])>(v2);
v6 = interfaceinvoke v1.<java.util.Set: boolean addAll(java.util.Collection)>(v5);
staticinvoke <com.google.common.collect.testing.testers.SetAddAllTester: void assertTrue(java.lang.String,boolean)>("add(somePresent) should return true", v6);
v7 = newarray (java.lang.Object)[1];
v8 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e3()>();
v7[0] = v8;
virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: void expectAdded(java.lang.Object[])>(v7);
return;
}
public void testAddAll_withDuplicates()
{
java.lang.Object[] v1, v9;
com.google.common.collect.testing.testers.SetAddAllTester v0;
java.util.Set v7;
java.lang.Object v10, v11, v2, v3, v4, v5;
com.google.common.collect.testing.MinimalCollection v6;
boolean v8;
v0 := @this: com.google.common.collect.testing.testers.SetAddAllTester;
v1 = newarray (java.lang.Object)[4];
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e3()>();
v1[0] = v2;
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e4()>();
v1[1] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e3()>();
v1[2] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e4()>();
v1[3] = v5;
v6 = staticinvoke <com.google.common.collect.testing.MinimalCollection: com.google.common.collect.testing.MinimalCollection of(java.lang.Object[])>(v1);
v7 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.util.Set getSet()>();
v8 = interfaceinvoke v7.<java.util.Set: boolean addAll(java.util.Collection)>(v6);
staticinvoke <com.google.common.collect.testing.testers.SetAddAllTester: void assertTrue(java.lang.String,boolean)>("add(hasDuplicates) should return true", v8);
v9 = newarray (java.lang.Object)[2];
v10 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e3()>();
v9[0] = v10;
v11 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e4()>();
v9[1] = v11;
virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: void expectAdded(java.lang.Object[])>(v9);
return;
}
public void testAddAll_supportedAllPresent()
{
java.lang.Object[] v2;
com.google.common.collect.testing.testers.SetAddAllTester v0;
java.util.Set v1;
java.lang.Object v3;
com.google.common.collect.testing.MinimalCollection v4;
boolean v5;
v0 := @this: com.google.common.collect.testing.testers.SetAddAllTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.util.Set getSet()>();
v2 = newarray (java.lang.Object)[1];
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: java.lang.Object e0()>();
v2[0] = v3;
v4 = staticinvoke <com.google.common.collect.testing.MinimalCollection: com.google.common.collect.testing.MinimalCollection of(java.lang.Object[])>(v2);
v5 = interfaceinvoke v1.<java.util.Set: boolean addAll(java.util.Collection)>(v4);
staticinvoke <com.google.common.collect.testing.testers.SetAddAllTester: void assertFalse(java.lang.String,boolean)>("add(allPresent) should return false", v5);
virtualinvoke v0.<com.google.common.collect.testing.testers.SetAddAllTester: void expectUnchanged()>();
return;
}
}