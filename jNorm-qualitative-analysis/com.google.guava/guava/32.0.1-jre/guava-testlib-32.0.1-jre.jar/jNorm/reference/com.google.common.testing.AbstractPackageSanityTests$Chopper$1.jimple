class com.google.common.testing.AbstractPackageSanityTests$Chopper$1 extends com.google.common.testing.AbstractPackageSanityTests$Chopper
{
final com.google.common.testing.AbstractPackageSanityTests$Chopper val$i;
final com.google.common.testing.AbstractPackageSanityTests$Chopper val$you;
void <init>(com.google.common.testing.AbstractPackageSanityTests$Chopper, com.google.common.testing.AbstractPackageSanityTests$Chopper, com.google.common.testing.AbstractPackageSanityTests$Chopper)
{
com.google.common.testing.AbstractPackageSanityTests$Chopper v1, v2, v3;
com.google.common.testing.AbstractPackageSanityTests$Chopper$1 v0;
v0 := @this: com.google.common.testing.AbstractPackageSanityTests$Chopper$1;
v1 := @parameter0: com.google.common.testing.AbstractPackageSanityTests$Chopper;
v2 := @parameter1: com.google.common.testing.AbstractPackageSanityTests$Chopper;
v3 := @parameter2: com.google.common.testing.AbstractPackageSanityTests$Chopper;
v0.<com.google.common.testing.AbstractPackageSanityTests$Chopper$1: com.google.common.testing.AbstractPackageSanityTests$Chopper val$i> = v2;
v0.<com.google.common.testing.AbstractPackageSanityTests$Chopper$1: com.google.common.testing.AbstractPackageSanityTests$Chopper val$you> = v3;
specialinvoke v0.<com.google.common.testing.AbstractPackageSanityTests$Chopper: void <init>()>();
return;
}
com.google.common.base.Optional chop(java.lang.String)
{
com.google.common.base.Optional v3, v5, v6;
com.google.common.testing.AbstractPackageSanityTests$Chopper v2, v4;
com.google.common.testing.AbstractPackageSanityTests$Chopper$1 v0;
java.lang.String v1;
v0 := @this: com.google.common.testing.AbstractPackageSanityTests$Chopper$1;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.google.common.testing.AbstractPackageSanityTests$Chopper$1: com.google.common.testing.AbstractPackageSanityTests$Chopper val$i>;
v3 = virtualinvoke v2.<com.google.common.testing.AbstractPackageSanityTests$Chopper: com.google.common.base.Optional chop(java.lang.String)>(v1);
v4 = v0.<com.google.common.testing.AbstractPackageSanityTests$Chopper$1: com.google.common.testing.AbstractPackageSanityTests$Chopper val$you>;
v5 = virtualinvoke v4.<com.google.common.testing.AbstractPackageSanityTests$Chopper: com.google.common.base.Optional chop(java.lang.String)>(v1);
v6 = virtualinvoke v3.<com.google.common.base.Optional: com.google.common.base.Optional or(com.google.common.base.Optional)>(v5);
return v6;
}
}