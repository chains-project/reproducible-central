class com.google.common.testing.ClassSanityTester$4 extends com.google.common.testing.RelationshipTester$ItemReporter
{
final java.util.List val$argGroups;
final com.google.common.reflect.Invokable val$factory;
void <init>(com.google.common.testing.ClassSanityTester, java.util.List, com.google.common.reflect.Invokable)
{
java.util.List v2;
com.google.common.testing.ClassSanityTester$4 v0;
com.google.common.reflect.Invokable v3;
com.google.common.testing.ClassSanityTester v1;
v0 := @this: com.google.common.testing.ClassSanityTester$4;
v1 := @parameter0: com.google.common.testing.ClassSanityTester;
v2 := @parameter1: java.util.List;
v3 := @parameter2: com.google.common.reflect.Invokable;
v0.<com.google.common.testing.ClassSanityTester$4: java.util.List val$argGroups> = v2;
v0.<com.google.common.testing.ClassSanityTester$4: com.google.common.reflect.Invokable val$factory> = v3;
specialinvoke v0.<com.google.common.testing.RelationshipTester$ItemReporter: void <init>()>();
return;
}
java.lang.String reportItem(com.google.common.testing.RelationshipTester$Item)
{
com.google.common.testing.ClassSanityTester$4 v0;
com.google.common.testing.RelationshipTester$Item v1;
java.util.List v2;
com.google.common.reflect.Invokable v7;
int v3, v5;
java.lang.Object v4, v6;
java.lang.String v11, v12, v8;
com.google.common.base.Joiner v10, v9;
v0 := @this: com.google.common.testing.ClassSanityTester$4;
v1 := @parameter0: com.google.common.testing.RelationshipTester$Item;
v2 = v0.<com.google.common.testing.ClassSanityTester$4: java.util.List val$argGroups>;
v3 = v1.<com.google.common.testing.RelationshipTester$Item: int groupNumber>;
v4 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v3);
v5 = v1.<com.google.common.testing.RelationshipTester$Item: int itemNumber>;
v6 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(v5);
v7 = v0.<com.google.common.testing.ClassSanityTester$4: com.google.common.reflect.Invokable val$factory>;
v8 = virtualinvoke v7.<com.google.common.reflect.Invokable: java.lang.String getName()>();
v9 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(", ");
v10 = virtualinvoke v9.<com.google.common.base.Joiner: com.google.common.base.Joiner useForNull(java.lang.String)>("null");
v11 = virtualinvoke v10.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>(v6);
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v8, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001)");
return v12;
}
}