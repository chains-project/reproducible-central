class com.google.common.testing.NullPointerTester$1 extends com.google.common.base.Converter
{
final com.google.common.reflect.TypeToken val$convertToType;
final com.google.common.reflect.TypeToken val$convertFromType;
final com.google.common.testing.NullPointerTester this$0;
void <init>(com.google.common.testing.NullPointerTester, com.google.common.reflect.TypeToken, com.google.common.reflect.TypeToken)
{
com.google.common.testing.NullPointerTester$1 v0;
com.google.common.testing.NullPointerTester v1;
com.google.common.reflect.TypeToken v2, v3;
v0 := @this: com.google.common.testing.NullPointerTester$1;
v1 := @parameter0: com.google.common.testing.NullPointerTester;
v2 := @parameter1: com.google.common.reflect.TypeToken;
v3 := @parameter2: com.google.common.reflect.TypeToken;
v0.<com.google.common.testing.NullPointerTester$1: com.google.common.testing.NullPointerTester this$0> = v1;
v0.<com.google.common.testing.NullPointerTester$1: com.google.common.reflect.TypeToken val$convertToType> = v2;
v0.<com.google.common.testing.NullPointerTester$1: com.google.common.reflect.TypeToken val$convertFromType> = v3;
specialinvoke v0.<com.google.common.base.Converter: void <init>()>();
return;
}
protected java.lang.Object doForward(java.lang.Object)
{
com.google.common.testing.NullPointerTester$1 v0;
java.lang.Object v1, v3;
com.google.common.reflect.TypeToken v2;
v0 := @this: com.google.common.testing.NullPointerTester$1;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.testing.NullPointerTester$1: com.google.common.reflect.TypeToken val$convertToType>;
v3 = specialinvoke v0.<com.google.common.testing.NullPointerTester$1: java.lang.Object doConvert(com.google.common.reflect.TypeToken)>(v2);
return v3;
}
protected java.lang.Object doBackward(java.lang.Object)
{
com.google.common.testing.NullPointerTester$1 v0;
java.lang.Object v1, v3;
com.google.common.reflect.TypeToken v2;
v0 := @this: com.google.common.testing.NullPointerTester$1;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.google.common.testing.NullPointerTester$1: com.google.common.reflect.TypeToken val$convertFromType>;
v3 = specialinvoke v0.<com.google.common.testing.NullPointerTester$1: java.lang.Object doConvert(com.google.common.reflect.TypeToken)>(v2);
return v3;
}
private java.lang.Object doConvert(com.google.common.reflect.TypeToken)
{
com.google.common.testing.NullPointerTester$1 v0;
com.google.common.testing.NullPointerTester v2;
java.lang.Object v3, v4;
com.google.common.reflect.TypeToken v1;
v0 := @this: com.google.common.testing.NullPointerTester$1;
v1 := @parameter0: com.google.common.reflect.TypeToken;
v2 = v0.<com.google.common.testing.NullPointerTester$1: com.google.common.testing.NullPointerTester this$0>;
v3 = specialinvoke v2.<com.google.common.testing.NullPointerTester: java.lang.Object getDefaultValue(com.google.common.reflect.TypeToken)>(v1);
v4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v3);
return v4;
}
}