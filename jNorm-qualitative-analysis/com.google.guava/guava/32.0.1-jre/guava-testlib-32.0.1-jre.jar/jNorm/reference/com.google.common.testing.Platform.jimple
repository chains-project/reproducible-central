final class com.google.common.testing.Platform extends java.lang.Object
{
static java.lang.Object reserialize(java.lang.Object)
{
byte[] v5;
java.io.ByteArrayOutputStream v1;
java.io.ObjectInputStream v3;
java.lang.RuntimeException v8;
java.lang.Exception v7;
java.io.ByteArrayInputStream v4;
java.io.ObjectOutputStream v2;
java.lang.Object v0, v6;
v0 := @parameter0: java.lang.Object;
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v0);
v1 = new java.io.ByteArrayOutputStream;
specialinvoke v1.<java.io.ByteArrayOutputStream: void <init>()>();
label1:
v2 = new java.io.ObjectOutputStream;
specialinvoke v2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(v1);
virtualinvoke v2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(v0);
v3 = new java.io.ObjectInputStream;
v4 = new java.io.ByteArrayInputStream;
v5 = virtualinvoke v1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
specialinvoke v4.<java.io.ByteArrayInputStream: void <init>(byte[])>(v5);
specialinvoke v3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(v4);
v6 = virtualinvoke v3.<java.io.ObjectInputStream: java.lang.Object readObject()>();
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new java.lang.RuntimeException;
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v7);
throw v8;
catch java.io.IOException from label1 to label2 with label3;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
private void <init>()
{
com.google.common.testing.Platform v0;
v0 := @this: com.google.common.testing.Platform;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}