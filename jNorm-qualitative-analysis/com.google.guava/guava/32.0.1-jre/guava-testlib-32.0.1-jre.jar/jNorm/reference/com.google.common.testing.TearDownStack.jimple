public class com.google.common.testing.TearDownStack extends java.lang.Object implements com.google.common.testing.TearDownAccepter
{
private static final java.util.logging.Logger logger;
final java.util.LinkedList stack;
private final boolean suppressThrows;
public void <init>()
{
java.util.LinkedList v1;
com.google.common.testing.TearDownStack v0;
v0 := @this: com.google.common.testing.TearDownStack;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.LinkedList;
specialinvoke v1.<java.util.LinkedList: void <init>()>();
v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack> = v1;
v0.<com.google.common.testing.TearDownStack: boolean suppressThrows> = 0;
return;
}
public void <init>(boolean)
{
java.util.LinkedList v2;
com.google.common.testing.TearDownStack v0;
boolean v1;
v0 := @this: com.google.common.testing.TearDownStack;
v1 := @parameter0: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.LinkedList;
specialinvoke v2.<java.util.LinkedList: void <init>()>();
v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack> = v2;
v0.<com.google.common.testing.TearDownStack: boolean suppressThrows> = v1;
return;
}
public final void addTearDown(com.google.common.testing.TearDown)
{
java.lang.Throwable v5;
java.lang.Object v4;
com.google.common.testing.TearDown v1;
java.util.LinkedList v2, v3;
com.google.common.testing.TearDownStack v0;
v0 := @this: com.google.common.testing.TearDownStack;
v1 := @parameter0: com.google.common.testing.TearDown;
v2 = v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
entermonitor v2;
label1:
v3 = v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
v4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
virtualinvoke v3.<java.util.LinkedList: void addFirst(java.lang.Object)>(v4);
exitmonitor v2;
label2:
goto label4;
label3:
v5 := @caughtexception;
exitmonitor v2;
throw v5;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public final void runTearDown()
{
java.lang.Throwable v10, v6;
java.util.ArrayList v1, v4;
java.util.logging.Level v13;
int v15;
java.util.LinkedList v2, v3, v5;
boolean v11, v14, v8;
java.util.Iterator v7;
java.lang.RuntimeException v16;
java.util.logging.Logger v12;
com.google.common.testing.TearDownStack v0;
java.lang.Object v9;
v0 := @this: com.google.common.testing.TearDownStack;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
entermonitor v2;
label01:
v3 = v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
v4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v3);
v5 = v0.<com.google.common.testing.TearDownStack: java.util.LinkedList stack>;
virtualinvoke v5.<java.util.LinkedList: void clear()>();
exitmonitor v2;
label02:
goto label04;
label03:
v6 := @caughtexception;
exitmonitor v2;
throw v6;
label04:
v7 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label05:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label10;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
label06:
interfaceinvoke v9.<com.google.common.testing.TearDown: void tearDown()>();
label07:
goto label05;
label08:
v10 := @caughtexception;
v11 = v0.<com.google.common.testing.TearDownStack: boolean suppressThrows>;
if v11 == 0 goto label09;
v12 = <com.google.common.testing.TearDownStack: java.util.logging.Logger logger>;
v13 = <java.util.logging.Level: java.util.logging.Level INFO>;
virtualinvoke v12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(v13, "exception thrown during tearDown", v10);
goto label05;
label09:
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v10);
goto label05;
label10:
v14 = v0.<com.google.common.testing.TearDownStack: boolean suppressThrows>;
if v14 != 0 goto label11;
v15 = interfaceinvoke v1.<java.util.List: int size()>();
if v15 <= 0 goto label11;
v16 = staticinvoke <com.google.common.testing.ClusterException: java.lang.RuntimeException create(java.util.Collection)>(v1);
throw v16;
label11:
return;
catch java.lang.Throwable from label01 to label02 with label03;
catch java.lang.Throwable from label06 to label07 with label08;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lcom/google/common/testing/TearDownStack;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<com.google.common.testing.TearDownStack: java.util.logging.Logger logger> = v2;
return;
}
}