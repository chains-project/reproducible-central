public class com.google.common.testing.TestLogHandler extends java.util.logging.Handler
{
private final java.util.List list;
public void <init>()
{
com.google.common.testing.TestLogHandler v0;
java.util.ArrayList v1;
v0 := @this: com.google.common.testing.TestLogHandler;
specialinvoke v0.<java.util.logging.Handler: void <init>()>();
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<com.google.common.testing.TestLogHandler: java.util.List list> = v1;
return;
}
public synchronized void publish(java.util.logging.LogRecord)
{
java.util.List v2;
com.google.common.testing.TestLogHandler v0;
java.util.logging.LogRecord v1;
v0 := @this: com.google.common.testing.TestLogHandler;
v1 := @parameter0: java.util.logging.LogRecord;
if v1 == null goto label1;
v2 = v0.<com.google.common.testing.TestLogHandler: java.util.List list>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
label1:
return;
}
public void flush()
{
com.google.common.testing.TestLogHandler v0;
v0 := @this: com.google.common.testing.TestLogHandler;
return;
}
public void close()
{
com.google.common.testing.TestLogHandler v0;
v0 := @this: com.google.common.testing.TestLogHandler;
return;
}
public synchronized void clear()
{
java.util.List v1;
com.google.common.testing.TestLogHandler v0;
v0 := @this: com.google.common.testing.TestLogHandler;
v1 = v0.<com.google.common.testing.TestLogHandler: java.util.List list>;
interfaceinvoke v1.<java.util.List: void clear()>();
return;
}
public synchronized java.util.List getStoredLogRecords()
{
java.util.List v2, v3;
com.google.common.testing.TestLogHandler v0;
java.util.ArrayList v1;
v0 := @this: com.google.common.testing.TestLogHandler;
v1 = new java.util.ArrayList;
v2 = v0.<com.google.common.testing.TestLogHandler: java.util.List list>;
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v3;
}
}