class com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper extends java.lang.Object
{
protected final long[] context;
private final java.nio.ByteBuffer inputBuffer;
private boolean fresh;
void <init>(int, int, int, com.aayushatharva.brotli4j.encoder.Encoder$Mode) throws java.io.IOException
{
long v15;
java.nio.ByteBuffer v13;
long[] v10, v12, v14, v18, v19, v20, v21, v5, v7, v8, v9;
byte v16;
int v1, v11, v2, v3;
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
com.aayushatharva.brotli4j.encoder.Encoder$Mode v4;
java.io.IOException v17, v6;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.aayushatharva.brotli4j.encoder.Encoder$Mode;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = newarray (long)[5];
v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context> = v5;
v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean fresh> = 1;
if v1 > 0 goto label1;
v6 = new java.io.IOException;
specialinvoke v6.<java.io.IOException: void <init>(java.lang.String)>("buffer size must be positive");
throw v6;
label1:
v7 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v7[1] = v1;
v8 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v8[2] = v2;
v9 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v9[3] = v3;
v10 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
if v4 == null goto label2;
v11 = virtualinvoke v4.<com.aayushatharva.brotli4j.encoder.Encoder$Mode: int ordinal()>();
goto label3;
label2:
v11 = -1L;
label3:
v10[4] = v11;
v12 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v13 = staticinvoke <com.aayushatharva.brotli4j.encoder.EncoderJNI: java.nio.ByteBuffer nativeCreate(long[])>(v12);
v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: java.nio.ByteBuffer inputBuffer> = v13;
v14 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v15 = v14[0];
v16 = v15 cmp 0L;
if v16 != 0 goto label4;
v17 = new java.io.IOException;
specialinvoke v17.<java.io.IOException: void <init>(java.lang.String)>("failed to initialize native brotli encoder");
throw v17;
label4:
v18 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v18[1] = 1L;
v19 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v19[2] = 0L;
v20 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v20[3] = 0L;
v21 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v21[4] = 0L;
return;
}
boolean attachDictionary(java.nio.ByteBuffer)
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
java.lang.IllegalStateException v7, v9;
long v5;
java.lang.IllegalArgumentException v3;
java.nio.ByteBuffer v1;
long[] v10, v4;
byte v6;
boolean v11, v2, v8;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 := @parameter0: java.nio.ByteBuffer;
v2 = virtualinvoke v1.<java.nio.ByteBuffer: boolean isDirect()>();
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only direct buffers allowed");
throw v3;
label1:
v4 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v5 = v4[0];
v6 = v5 cmp 0L;
if v6 != 0 goto label2;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("brotli decoder is already destroyed");
throw v7;
label2:
v8 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean fresh>;
if v8 != 0 goto label3;
v9 = new java.lang.IllegalStateException;
specialinvoke v9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("decoding is already started");
throw v9;
label3:
v10 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v11 = staticinvoke <com.aayushatharva.brotli4j.encoder.EncoderJNI: boolean nativeAttachDictionary(long[],java.nio.ByteBuffer)>(v10, v1);
return v11;
}
void push(com.aayushatharva.brotli4j.encoder.EncoderJNI$Operation, int)
{
java.lang.IllegalStateException v10, v12, v7;
long v5;
long[] v13, v15, v4;
byte v6;
int v14, v2;
boolean v11, v8, v9;
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
java.lang.IllegalArgumentException v3;
com.aayushatharva.brotli4j.encoder.EncoderJNI$Operation v1;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 := @parameter0: com.aayushatharva.brotli4j.encoder.EncoderJNI$Operation;
v2 := @parameter1: int;
if v2 >= 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("negative block length");
throw v3;
label1:
v4 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v5 = v4[0];
v6 = v5 cmp 0L;
if v6 != 0 goto label2;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("brotli encoder is already destroyed");
throw v7;
label2:
v8 = virtualinvoke v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean isSuccess()>();
if v8 == 0 goto label3;
v9 = virtualinvoke v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean hasMoreOutput()>();
if v9 == 0 goto label4;
label3:
v10 = new java.lang.IllegalStateException;
specialinvoke v10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("pushing input to encoder in unexpected state");
throw v10;
label4:
v11 = virtualinvoke v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean hasRemainingInput()>();
if v11 == 0 goto label5;
if v2 == 0 goto label5;
v12 = new java.lang.IllegalStateException;
specialinvoke v12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("pushing input to encoder over previous input");
throw v12;
label5:
v13 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v14 = virtualinvoke v1.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Operation: int ordinal()>();
v13[1] = v14;
v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean fresh> = 0;
v15 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
staticinvoke <com.aayushatharva.brotli4j.encoder.EncoderJNI: void nativePush(long[],int)>(v15, v2);
return;
}
boolean isSuccess()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
long[] v1;
byte v3;
long v2;
boolean v4;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[1];
v3 = v2 cmp 0L;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
boolean hasMoreOutput()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
long[] v1;
byte v3;
long v2;
boolean v4;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[2];
v3 = v2 cmp 0L;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
boolean hasRemainingInput()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
long[] v1;
byte v3;
long v2;
boolean v4;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[3];
v3 = v2 cmp 0L;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
boolean isFinished()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
long[] v1;
byte v3;
long v2;
boolean v4;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[4];
v3 = v2 cmp 0L;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
java.nio.ByteBuffer getInputBuffer()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
java.nio.ByteBuffer v1;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: java.nio.ByteBuffer inputBuffer>;
return v1;
}
java.nio.ByteBuffer pull()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
java.lang.IllegalStateException v4, v7;
long v2;
java.nio.ByteBuffer v9;
long[] v1, v8;
byte v3;
boolean v5, v6;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[0];
v3 = v2 cmp 0L;
if v3 != 0 goto label1;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("brotli encoder is already destroyed");
throw v4;
label1:
v5 = virtualinvoke v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean isSuccess()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean hasMoreOutput()>();
if v6 != 0 goto label3;
label2:
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("pulling while data is not ready");
throw v7;
label3:
v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: boolean fresh> = 0;
v8 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v9 = staticinvoke <com.aayushatharva.brotli4j.encoder.EncoderJNI: java.nio.ByteBuffer nativePull(long[])>(v8);
return v9;
}
void destroy()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
java.lang.IllegalStateException v4;
long[] v1, v5, v6;
byte v3;
long v2;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[0];
v3 = v2 cmp 0L;
if v3 != 0 goto label1;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("brotli encoder is already destroyed");
throw v4;
label1:
v5 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
staticinvoke <com.aayushatharva.brotli4j.encoder.EncoderJNI: void nativeDestroy(long[])>(v5);
v6 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v6[0] = 0L;
return;
}
protected void finalize() throws java.lang.Throwable
{
com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper v0;
long[] v1;
byte v3;
long v2;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper;
v1 = v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: long[] context>;
v2 = v1[0];
v3 = v2 cmp 0L;
if v3 == 0 goto label1;
virtualinvoke v0.<com.aayushatharva.brotli4j.encoder.EncoderJNI$Wrapper: void destroy()>();
label1:
specialinvoke v0.<java.lang.Object: void finalize()>();
return;
}
}