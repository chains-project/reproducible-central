public final enum class com.fasterxml.jackson.core.JsonFactory$Feature extends java.lang.Enum implements com.fasterxml.jackson.core.util.JacksonFeature
{
public static final enum com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES;
public static final enum com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES;
public static final enum com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW;
public static final enum com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING;
public static final enum com.fasterxml.jackson.core.JsonFactory$Feature CHARSET_DETECTION;
private final boolean _defaultState;
private static final com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES;
public static com.fasterxml.jackson.core.JsonFactory$Feature[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.core.JsonFactory$Feature[] v0;
v0 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/core/JsonFactory$Feature;", v0);
return v1;
}
public static int collectDefaults()
{
int v0, v2, v3, v6;
com.fasterxml.jackson.core.JsonFactory$Feature v4;
boolean v5;
com.fasterxml.jackson.core.JsonFactory$Feature[] v1;
v0 = 0;
v1 = staticinvoke <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledByDefault()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();
v0 = v0 | v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
return v0;
}
private void <init>(java.lang.String, int, boolean)
{
int v2;
java.lang.String v1;
com.fasterxml.jackson.core.JsonFactory$Feature v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory$Feature;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean _defaultState> = v3;
return;
}
public boolean enabledByDefault()
{
com.fasterxml.jackson.core.JsonFactory$Feature v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory$Feature;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean _defaultState>;
return v1;
}
public boolean enabledIn(int)
{
int v1, v2, v3;
com.fasterxml.jackson.core.JsonFactory$Feature v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory$Feature;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();
v3 = v1 & v2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int getMask()
{
int v1, v2;
com.fasterxml.jackson.core.JsonFactory$Feature v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory$Feature;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory$Feature: int ordinal()>();
v2 = 1 << v1;
return v2;
}
private static com.fasterxml.jackson.core.JsonFactory$Feature[] $values()
{
com.fasterxml.jackson.core.JsonFactory$Feature v1, v2, v3, v4, v5;
com.fasterxml.jackson.core.JsonFactory$Feature[] v0;
v0 = newarray (com.fasterxml.jackson.core.JsonFactory$Feature)[5];
v1 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CHARSET_DETECTION>;
v0[4] = v5;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonFactory$Feature v0, v1, v2, v3, v4;
com.fasterxml.jackson.core.JsonFactory$Feature[] v5;
v0 = new com.fasterxml.jackson.core.JsonFactory$Feature;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory$Feature: void <init>(java.lang.String,int,boolean)>("INTERN_FIELD_NAMES", 0, 1);
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES> = v0;
v1 = new com.fasterxml.jackson.core.JsonFactory$Feature;
specialinvoke v1.<com.fasterxml.jackson.core.JsonFactory$Feature: void <init>(java.lang.String,int,boolean)>("CANONICALIZE_FIELD_NAMES", 1, 1);
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES> = v1;
v2 = new com.fasterxml.jackson.core.JsonFactory$Feature;
specialinvoke v2.<com.fasterxml.jackson.core.JsonFactory$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_SYMBOL_HASH_OVERFLOW", 2, 1);
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW> = v2;
v3 = new com.fasterxml.jackson.core.JsonFactory$Feature;
specialinvoke v3.<com.fasterxml.jackson.core.JsonFactory$Feature: void <init>(java.lang.String,int,boolean)>("USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING", 3, 1);
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING> = v3;
v4 = new com.fasterxml.jackson.core.JsonFactory$Feature;
specialinvoke v4.<com.fasterxml.jackson.core.JsonFactory$Feature: void <init>(java.lang.String,int,boolean)>("CHARSET_DETECTION", 4, 1);
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CHARSET_DETECTION> = v4;
v5 = staticinvoke <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] $values()>();
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES> = v5;
return;
}
}