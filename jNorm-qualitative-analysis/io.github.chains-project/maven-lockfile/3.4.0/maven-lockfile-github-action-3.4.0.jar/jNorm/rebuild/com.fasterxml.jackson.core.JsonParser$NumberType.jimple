public final enum class com.fasterxml.jackson.core.JsonParser$NumberType extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.core.JsonParser$NumberType INT;
public static final enum com.fasterxml.jackson.core.JsonParser$NumberType LONG;
public static final enum com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER;
public static final enum com.fasterxml.jackson.core.JsonParser$NumberType FLOAT;
public static final enum com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE;
public static final enum com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL;
private static final com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES;
public static com.fasterxml.jackson.core.JsonParser$NumberType[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.core.JsonParser$NumberType[] v0;
v0 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/core/JsonParser$NumberType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
com.fasterxml.jackson.core.JsonParser$NumberType v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.JsonParser$NumberType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.fasterxml.jackson.core.JsonParser$NumberType[] $values()
{
com.fasterxml.jackson.core.JsonParser$NumberType v1, v2, v3, v4, v5, v6;
com.fasterxml.jackson.core.JsonParser$NumberType[] v0;
v0 = newarray (com.fasterxml.jackson.core.JsonParser$NumberType)[6];
v1 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType FLOAT>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL>;
v0[5] = v6;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonParser$NumberType v0, v1, v2, v3, v4, v5;
com.fasterxml.jackson.core.JsonParser$NumberType[] v6;
v0 = new com.fasterxml.jackson.core.JsonParser$NumberType;
specialinvoke v0.<com.fasterxml.jackson.core.JsonParser$NumberType: void <init>(java.lang.String,int)>("INT", 0);
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT> = v0;
v1 = new com.fasterxml.jackson.core.JsonParser$NumberType;
specialinvoke v1.<com.fasterxml.jackson.core.JsonParser$NumberType: void <init>(java.lang.String,int)>("LONG", 1);
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG> = v1;
v2 = new com.fasterxml.jackson.core.JsonParser$NumberType;
specialinvoke v2.<com.fasterxml.jackson.core.JsonParser$NumberType: void <init>(java.lang.String,int)>("BIG_INTEGER", 2);
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER> = v2;
v3 = new com.fasterxml.jackson.core.JsonParser$NumberType;
specialinvoke v3.<com.fasterxml.jackson.core.JsonParser$NumberType: void <init>(java.lang.String,int)>("FLOAT", 3);
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType FLOAT> = v3;
v4 = new com.fasterxml.jackson.core.JsonParser$NumberType;
specialinvoke v4.<com.fasterxml.jackson.core.JsonParser$NumberType: void <init>(java.lang.String,int)>("DOUBLE", 4);
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE> = v4;
v5 = new com.fasterxml.jackson.core.JsonParser$NumberType;
specialinvoke v5.<com.fasterxml.jackson.core.JsonParser$NumberType: void <init>(java.lang.String,int)>("BIG_DECIMAL", 5);
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL> = v5;
v6 = staticinvoke <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType[] $values()>();
<com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES> = v6;
return;
}
}