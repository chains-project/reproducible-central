public final enum class com.fasterxml.jackson.core.StreamReadCapability extends java.lang.Enum implements com.fasterxml.jackson.core.util.JacksonFeature
{
public static final enum com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES;
public static final enum com.fasterxml.jackson.core.StreamReadCapability SCALARS_AS_OBJECTS;
public static final enum com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS;
public static final enum com.fasterxml.jackson.core.StreamReadCapability EXACT_FLOATS;
private final boolean _defaultState;
private final int _mask;
private static final com.fasterxml.jackson.core.StreamReadCapability[] $VALUES;
public static com.fasterxml.jackson.core.StreamReadCapability[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.core.StreamReadCapability[] v0;
v0 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.core.StreamReadCapability valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/core/StreamReadCapability;", v0);
return v1;
}
private void <init>(java.lang.String, int, boolean)
{
com.fasterxml.jackson.core.StreamReadCapability v0;
int v2, v4, v5;
java.lang.String v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.StreamReadCapability;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.fasterxml.jackson.core.StreamReadCapability: boolean _defaultState> = v3;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.StreamReadCapability: int ordinal()>();
v5 = 1 << v4;
v0.<com.fasterxml.jackson.core.StreamReadCapability: int _mask> = v5;
return;
}
public boolean enabledByDefault()
{
com.fasterxml.jackson.core.StreamReadCapability v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.StreamReadCapability;
v1 = v0.<com.fasterxml.jackson.core.StreamReadCapability: boolean _defaultState>;
return v1;
}
public boolean enabledIn(int)
{
com.fasterxml.jackson.core.StreamReadCapability v0;
int v1, v2, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.StreamReadCapability;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.StreamReadCapability: int _mask>;
v3 = v1 & v2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int getMask()
{
int v1;
com.fasterxml.jackson.core.StreamReadCapability v0;
v0 := @this: com.fasterxml.jackson.core.StreamReadCapability;
v1 = v0.<com.fasterxml.jackson.core.StreamReadCapability: int _mask>;
return v1;
}
private static com.fasterxml.jackson.core.StreamReadCapability[] $values()
{
com.fasterxml.jackson.core.StreamReadCapability v1, v2, v3, v4;
com.fasterxml.jackson.core.StreamReadCapability[] v0;
v0 = newarray (com.fasterxml.jackson.core.StreamReadCapability)[4];
v1 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability SCALARS_AS_OBJECTS>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability EXACT_FLOATS>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.core.StreamReadCapability v0, v1, v2, v3;
com.fasterxml.jackson.core.StreamReadCapability[] v4;
v0 = new com.fasterxml.jackson.core.StreamReadCapability;
specialinvoke v0.<com.fasterxml.jackson.core.StreamReadCapability: void <init>(java.lang.String,int,boolean)>("DUPLICATE_PROPERTIES", 0, 0);
<com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES> = v0;
v1 = new com.fasterxml.jackson.core.StreamReadCapability;
specialinvoke v1.<com.fasterxml.jackson.core.StreamReadCapability: void <init>(java.lang.String,int,boolean)>("SCALARS_AS_OBJECTS", 1, 0);
<com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability SCALARS_AS_OBJECTS> = v1;
v2 = new com.fasterxml.jackson.core.StreamReadCapability;
specialinvoke v2.<com.fasterxml.jackson.core.StreamReadCapability: void <init>(java.lang.String,int,boolean)>("UNTYPED_SCALARS", 2, 0);
<com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS> = v2;
v3 = new com.fasterxml.jackson.core.StreamReadCapability;
specialinvoke v3.<com.fasterxml.jackson.core.StreamReadCapability: void <init>(java.lang.String,int,boolean)>("EXACT_FLOATS", 3, 0);
<com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability EXACT_FLOATS> = v3;
v4 = staticinvoke <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability[] $values()>();
<com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability[] $VALUES> = v4;
return;
}
}