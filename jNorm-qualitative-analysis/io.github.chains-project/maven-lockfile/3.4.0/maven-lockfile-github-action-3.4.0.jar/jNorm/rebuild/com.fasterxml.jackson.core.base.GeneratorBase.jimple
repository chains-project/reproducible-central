public abstract class com.fasterxml.jackson.core.base.GeneratorBase extends com.fasterxml.jackson.core.JsonGenerator
{
public static final int SURR1_FIRST;
public static final int SURR1_LAST;
public static final int SURR2_FIRST;
public static final int SURR2_LAST;
protected static final int DERIVED_FEATURES_MASK;
protected static final java.lang.String WRITE_BINARY;
protected static final java.lang.String WRITE_BOOLEAN;
protected static final java.lang.String WRITE_NULL;
protected static final java.lang.String WRITE_NUMBER;
protected static final java.lang.String WRITE_RAW;
protected static final java.lang.String WRITE_STRING;
protected static final int MAX_BIG_DECIMAL_SCALE;
protected com.fasterxml.jackson.core.ObjectCodec _objectCodec;
protected int _features;
protected boolean _cfgNumbersAsStrings;
protected com.fasterxml.jackson.core.json.JsonWriteContext _writeContext;
protected boolean _closed;
protected void <init>(int, com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v6;
com.fasterxml.jackson.core.JsonGenerator$Feature v3, v7;
com.fasterxml.jackson.core.ObjectCodec v2;
com.fasterxml.jackson.core.json.DupDetector v5;
int v1;
boolean v4, v8;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.JsonGenerator: void <init>()>();
v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features> = v1;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v2;
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
if v4 == 0 goto label1;
v5 = staticinvoke <com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label2;
label1:
v5 = null;
label2:
v6 = staticinvoke <com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector)>(v5);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v6;
v7 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _cfgNumbersAsStrings> = v8;
return;
}
protected void <init>(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.json.JsonWriteContext)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v3;
com.fasterxml.jackson.core.JsonGenerator$Feature v4;
int v1;
com.fasterxml.jackson.core.ObjectCodec v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.ObjectCodec;
v3 := @parameter2: com.fasterxml.jackson.core.json.JsonWriteContext;
specialinvoke v0.<com.fasterxml.jackson.core.JsonGenerator: void <init>()>();
v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features> = v1;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v2;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v3;
v4 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _cfgNumbersAsStrings> = v5;
return;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.Version v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = <com.fasterxml.jackson.core.json.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public java.lang.Object getCurrentValue()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v1;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.Object getCurrentValue()>();
return v2;
}
public void setCurrentValue(java.lang.Object)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v2, v3;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: void setCurrentValue(java.lang.Object)>(v1);
label1:
return;
}
public final boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int getFeatureMask()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
int v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
return v1;
}
public com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v10, v12, v14;
com.fasterxml.jackson.core.JsonGenerator$Feature v1, v7, v8, v9;
com.fasterxml.jackson.core.json.DupDetector v11, v13;
int v2, v3, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v3 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
v4 = v3 | v2;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features> = v4;
v5 = <com.fasterxml.jackson.core.base.GeneratorBase: int DERIVED_FEATURES_MASK>;
v6 = v2 & v5;
if v6 == 0 goto label3;
v7 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
if v1 != v7 goto label1;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _cfgNumbersAsStrings> = 1;
goto label3;
label1:
v8 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
if v1 != v8 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(127);
goto label3;
label2:
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
if v1 != v9 goto label3;
v10 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.DupDetector getDupDetector()>();
if v11 != null goto label3;
v12 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v13 = staticinvoke <com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator)>(v0);
v14 = virtualinvoke v12.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector)>(v13);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v14;
label3:
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v12, v13;
com.fasterxml.jackson.core.JsonGenerator$Feature v1, v10, v11, v9;
int v2, v3, v4, v5, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v3 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
v4 = (int) -1;
v5 = v2 ^ v4;
v6 = v3 & v5;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features> = v6;
v7 = <com.fasterxml.jackson.core.base.GeneratorBase: int DERIVED_FEATURES_MASK>;
v8 = v2 & v7;
if v8 == 0 goto label3;
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
if v1 != v9 goto label1;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _cfgNumbersAsStrings> = 0;
goto label3;
label1:
v10 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
if v1 != v10 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(0);
goto label3;
label2:
v11 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
if v1 != v11 goto label3;
v12 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v13 = virtualinvoke v12.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector)>(null);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v13;
label3:
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
int v1, v2, v3;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
v3 = v1 ^ v2;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features> = v1;
if v3 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _checkStdFeatureChanges(int,int)>(v1, v3);
label1:
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
int v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
v4 = (int) -1;
v5 = v2 ^ v4;
v6 = v3 & v5;
v7 = v1 & v2;
v8 = v6 | v7;
v9 = v3 ^ v8;
if v9 == 0 goto label1;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features> = v8;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _checkStdFeatureChanges(int,int)>(v8, v9);
label1:
return v0;
}
protected void _checkStdFeatureChanges(int, int)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.DupDetector v16, v18;
int v1, v2, v3, v4;
boolean v10, v12, v14, v6, v8;
com.fasterxml.jackson.core.json.JsonWriteContext v15, v17, v19, v20, v21;
com.fasterxml.jackson.core.JsonGenerator$Feature v11, v13, v5, v7, v9;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = <com.fasterxml.jackson.core.base.GeneratorBase: int DERIVED_FEATURES_MASK>;
v4 = v2 & v3;
if v4 != 0 goto label1;
return;
label1:
v5 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _cfgNumbersAsStrings> = v6;
v7 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v2);
if v8 == 0 goto label3;
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
if v10 == 0 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(127);
goto label3;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(0);
label3:
v11 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v2);
if v12 == 0 goto label5;
v13 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
if v14 == 0 goto label4;
v15 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.DupDetector getDupDetector()>();
if v16 != null goto label5;
v17 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v18 = staticinvoke <com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator)>(v0);
v19 = virtualinvoke v17.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector)>(v18);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v19;
goto label5;
label4:
v20 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v21 = virtualinvoke v20.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector)>(null);
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v21;
label5:
return;
}
public com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.core.PrettyPrinter v1, v2;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter()>();
if v1 == null goto label1;
return v0;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.PrettyPrinter _constructDefaultPrettyPrinter()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)>(v2);
return v3;
}
public com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.ObjectCodec v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v1;
return v0;
}
public com.fasterxml.jackson.core.ObjectCodec getCodec()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.ObjectCodec v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
return v1;
}
public com.fasterxml.jackson.core.JsonStreamContext getOutputContext()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.json.JsonWriteContext v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
return v1;
}
public void writeStartObject(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeStartObject()>();
if v1 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void setCurrentValue(java.lang.Object)>(v1);
label1:
return;
}
public void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.String v2;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeFieldName(java.lang.String)>(v2);
return;
}
public void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.String v2;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeString(java.lang.String)>(v2);
return;
}
public void writeRawValue(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _verifyValueWrite(java.lang.String)>("write raw value");
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeRaw(java.lang.String)>(v1);
return;
}
public void writeRawValue(java.lang.String, int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
int v2, v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _verifyValueWrite(java.lang.String)>("write raw value");
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeRaw(java.lang.String,int,int)>(v1, v2, v3);
return;
}
public void writeRawValue(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
int v2, v3;
char[] v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _verifyValueWrite(java.lang.String)>("write raw value");
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeRaw(char[],int,int)>(v1, v2, v3);
return;
}
public void writeRawValue(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _verifyValueWrite(java.lang.String)>("write raw value");
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeRaw(com.fasterxml.jackson.core.SerializableString)>(v1);
return;
}
public int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException
{
com.fasterxml.jackson.core.Base64Variant v1;
com.fasterxml.jackson.core.base.GeneratorBase v0;
int v3;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportUnsupportedOperation()>();
return 0;
}
public void writeObject(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.ObjectCodec v2, v3;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeNull()>();
goto label3;
label1:
v2 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
if v2 == null goto label2;
v3 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
virtualinvoke v3.<com.fasterxml.jackson.core.ObjectCodec: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v0, v1);
return;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _writeSimpleObject(java.lang.Object)>(v1);
label3:
return;
}
public void writeTree(com.fasterxml.jackson.core.TreeNode) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.TreeNode v1;
java.lang.IllegalStateException v3;
com.fasterxml.jackson.core.ObjectCodec v2, v4;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: com.fasterxml.jackson.core.TreeNode;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void writeNull()>();
goto label3;
label1:
v2 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
if v2 != null goto label2;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No ObjectCodec defined");
throw v3;
label2:
v4 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
virtualinvoke v4.<com.fasterxml.jackson.core.ObjectCodec: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v0, v1);
label3:
return;
}
public abstract void flush() throws java.io.IOException;
public void close() throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _closed> = 1;
return;
}
public boolean isClosed()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: boolean _closed>;
return v1;
}
protected abstract void _releaseBuffers();
protected abstract void _verifyValueWrite(java.lang.String) throws java.io.IOException;
protected com.fasterxml.jackson.core.PrettyPrinter _constructDefaultPrettyPrinter()
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v1;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
specialinvoke v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>()>();
return v1;
}
protected java.lang.String _asString(java.math.BigDecimal) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.Object[] v7;
com.fasterxml.jackson.core.JsonGenerator$Feature v2;
java.lang.Integer v10, v8, v9;
java.math.BigDecimal v1;
int v3, v5, v6;
java.lang.String v11, v12, v13;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.math.BigDecimal;
v2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN>;
v3 = v0.<com.fasterxml.jackson.core.base.GeneratorBase: int _features>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v3);
if v4 == 0 goto label3;
v5 = virtualinvoke v1.<java.math.BigDecimal: int scale()>();
v6 = (int) -9999;
if v5 < v6 goto label1;
if v5 <= 9999 goto label2;
label1:
v7 = newarray (java.lang.Object)[3];
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v7[0] = v8;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9999);
v7[1] = v9;
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9999);
v7[2] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]", v7);
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>(v11);
label2:
v12 = virtualinvoke v1.<java.math.BigDecimal: java.lang.String toPlainString()>();
return v12;
label3:
v13 = virtualinvoke v1.<java.math.BigDecimal: java.lang.String toString()>();
return v13;
}
protected final int _decodeSurrogate(int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.Object[] v5;
java.lang.Integer v6, v7;
int v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v9;
java.lang.String v8;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = (int) 56320;
if v2 < v3 goto label1;
v4 = (int) 57343;
if v2 <= v4 goto label2;
label1:
v5 = newarray (java.lang.Object)[2];
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5[0] = v6;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v5[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incomplete surrogate pair: first char 0x%04X, second 0x%04X", v5);
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>(v8);
label2:
v9 = (int) 55296;
v10 = v1 - v9;
v11 = v10 << 10;
v12 = 65536 + v11;
v13 = (int) 56320;
v14 = v2 - v13;
v15 = v12 + v14;
return v15;
}
protected void _checkRangeBoundsForByteArray(byte[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
byte[] v1;
java.lang.Object[] v10;
java.lang.Integer v11, v12, v13;
int v2, v3, v4, v5, v6, v7, v8, v9;
java.lang.String v14;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>("Invalid `byte[]` argument: `null`");
label1:
v4 = lengthof v1;
v5 = v2 + v3;
v6 = v2 | v3;
v7 = v6 | v5;
v8 = v4 - v5;
v9 = v7 | v8;
if v9 >= 0 goto label2;
v10 = newarray (java.lang.Object)[3];
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v10[0] = v11;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v10[2] = v13;
v14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid \'offset\' (%d) and/or \'len\' (%d) arguments for `byte[]` of length %d", v10);
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>(v14);
label2:
return;
}
protected void _checkRangeBoundsForCharArray(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.Object[] v10;
java.lang.Integer v11, v12, v13;
int v2, v3, v4, v5, v6, v7, v8, v9;
char[] v1;
java.lang.String v14;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>("Invalid `char[]` argument: `null`");
label1:
v4 = lengthof v1;
v5 = v2 + v3;
v6 = v2 | v3;
v7 = v6 | v5;
v8 = v4 - v5;
v9 = v7 | v8;
if v9 >= 0 goto label2;
v10 = newarray (java.lang.Object)[3];
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v10[0] = v11;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v10[2] = v13;
v14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid \'offset\' (%d) and/or \'len\' (%d) arguments for `char[]` of length %d", v10);
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>(v14);
label2:
return;
}
protected void _checkRangeBoundsForString(java.lang.String, int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.base.GeneratorBase v0;
java.lang.Object[] v10;
java.lang.Integer v11, v12, v13;
int v2, v3, v4, v5, v6, v7, v8, v9;
java.lang.String v1, v14;
v0 := @this: com.fasterxml.jackson.core.base.GeneratorBase;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>("Invalid `String` argument: `null`");
label1:
v4 = virtualinvoke v1.<java.lang.String: int length()>();
v5 = v2 + v3;
v6 = v2 | v3;
v7 = v6 | v5;
v8 = v4 - v5;
v9 = v7 | v8;
if v9 >= 0 goto label2;
v10 = newarray (java.lang.Object)[3];
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v10[0] = v11;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v10[2] = v13;
v14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid \'offset\' (%d) and/or \'len\' (%d) arguments for `String` of length %d", v10);
virtualinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _reportError(java.lang.String)>(v14);
label2:
return;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonGenerator$Feature v0, v2, v5;
int v1, v3, v4, v6, v7;
v0 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = v1 | v3;
v5 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v7 = v4 | v6;
<com.fasterxml.jackson.core.base.GeneratorBase: int DERIVED_FEATURES_MASK> = v7;
return;
}
}