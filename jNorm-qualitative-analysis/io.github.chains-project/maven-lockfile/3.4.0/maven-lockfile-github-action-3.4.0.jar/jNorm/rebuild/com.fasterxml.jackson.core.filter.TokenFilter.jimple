public class com.fasterxml.jackson.core.filter.TokenFilter extends java.lang.Object
{
public static final com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL;
protected void <init>()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.fasterxml.jackson.core.filter.TokenFilter filterStartObject()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
return v0;
}
public com.fasterxml.jackson.core.filter.TokenFilter filterStartArray()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
return v0;
}
public void filterFinishObject()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
return;
}
public void filterFinishArray()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
return;
}
public com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: java.lang.String;
return v0;
}
public com.fasterxml.jackson.core.filter.TokenFilter includeElement(int)
{
int v1;
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: int;
return v0;
}
public com.fasterxml.jackson.core.filter.TokenFilter includeRootValue(int)
{
int v1;
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: int;
return v0;
}
public boolean includeValue(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
com.fasterxml.jackson.core.JsonParser v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeBoolean(boolean)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: boolean;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeNull()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v1;
}
public boolean includeString(java.lang.String)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
java.lang.String v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeString(java.io.Reader, int)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
int v2;
java.io.Reader v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v3;
}
public boolean includeNumber(int)
{
int v1;
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeNumber(long)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
long v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeNumber(float)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
float v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: float;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeNumber(double)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v2;
double v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: double;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeNumber(java.math.BigDecimal)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
java.math.BigDecimal v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: java.math.BigDecimal;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeNumber(java.math.BigInteger)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
java.math.BigInteger v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: java.math.BigInteger;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeBinary()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v1;
}
public boolean includeRawValue()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v1;
}
public boolean includeEmbeddedValue(java.lang.Object)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
java.lang.Object v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: boolean _includeScalar()>();
return v2;
}
public boolean includeEmptyArray(boolean)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: boolean;
return 0;
}
public boolean includeEmptyObject(boolean)
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 := @parameter0: boolean;
return 0;
}
public java.lang.String toString()
{
com.fasterxml.jackson.core.filter.TokenFilter v0, v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
v1 = <com.fasterxml.jackson.core.filter.TokenFilter: com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL>;
if v0 != v1 goto label1;
return "TokenFilter.INCLUDE_ALL";
label1:
v2 = specialinvoke v0.<java.lang.Object: java.lang.String toString()>();
return v2;
}
protected boolean _includeScalar()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 := @this: com.fasterxml.jackson.core.filter.TokenFilter;
return 1;
}
static void <clinit>()
{
com.fasterxml.jackson.core.filter.TokenFilter v0;
v0 = new com.fasterxml.jackson.core.filter.TokenFilter;
specialinvoke v0.<com.fasterxml.jackson.core.filter.TokenFilter: void <init>()>();
<com.fasterxml.jackson.core.filter.TokenFilter: com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL> = v0;
return;
}
}