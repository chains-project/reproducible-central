public final class com.fasterxml.jackson.core.io.SegmentedStringWriter extends java.io.Writer
{
private final com.fasterxml.jackson.core.util.TextBuffer _buffer;
public void <init>(com.fasterxml.jackson.core.util.BufferRecycler)
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
com.fasterxml.jackson.core.util.TextBuffer v2;
com.fasterxml.jackson.core.util.BufferRecycler v1;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
specialinvoke v0.<java.io.Writer: void <init>()>();
v2 = new com.fasterxml.jackson.core.util.TextBuffer;
specialinvoke v2.<com.fasterxml.jackson.core.util.TextBuffer: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>(v1);
v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer> = v2;
return;
}
public java.io.Writer append(char) throws java.io.IOException
{
char v1;
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: char;
virtualinvoke v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: void write(int)>(v1);
return v0;
}
public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
{
java.lang.CharSequence v1;
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
int v4;
java.lang.String v2;
com.fasterxml.jackson.core.util.TextBuffer v3;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
v4 = virtualinvoke v2.<java.lang.String: int length()>();
virtualinvoke v3.<com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(v2, 0, v4);
return v0;
}
public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
{
java.lang.CharSequence v1, v4;
com.fasterxml.jackson.core.util.TextBuffer v6;
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
int v2, v3, v7;
java.lang.String v5;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = interfaceinvoke v1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v2, v3);
v5 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
v6 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
v7 = virtualinvoke v5.<java.lang.String: int length()>();
virtualinvoke v6.<com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(v5, 0, v7);
return v0;
}
public void close()
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
return;
}
public void flush()
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
return;
}
public void write(char[]) throws java.io.IOException
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
int v3;
char[] v1;
com.fasterxml.jackson.core.util.TextBuffer v2;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: char[];
v2 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
v3 = lengthof v1;
virtualinvoke v2.<com.fasterxml.jackson.core.util.TextBuffer: void append(char[],int,int)>(v1, 0, v3);
return;
}
public void write(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
int v2, v3;
char[] v1;
com.fasterxml.jackson.core.util.TextBuffer v4;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
virtualinvoke v4.<com.fasterxml.jackson.core.util.TextBuffer: void append(char[],int,int)>(v1, v2, v3);
return;
}
public void write(int) throws java.io.IOException
{
int v1;
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
com.fasterxml.jackson.core.util.TextBuffer v2;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
virtualinvoke v2.<com.fasterxml.jackson.core.util.TextBuffer: void append(char)>(v1);
return;
}
public void write(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
int v3;
java.lang.String v1;
com.fasterxml.jackson.core.util.TextBuffer v2;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
virtualinvoke v2.<com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(v1, 0, v3);
return;
}
public void write(java.lang.String, int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
int v2, v3;
java.lang.String v1;
com.fasterxml.jackson.core.util.TextBuffer v4;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
virtualinvoke v4.<com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(v1, v2, v3);
return;
}
public java.lang.String getAndClear() throws java.io.IOException
{
com.fasterxml.jackson.core.io.SegmentedStringWriter v0;
java.lang.String v2;
com.fasterxml.jackson.core.util.TextBuffer v1, v3;
v0 := @this: com.fasterxml.jackson.core.io.SegmentedStringWriter;
v1 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();
v3 = v0.<com.fasterxml.jackson.core.io.SegmentedStringWriter: com.fasterxml.jackson.core.util.TextBuffer _buffer>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.TextBuffer: void releaseBuffers()>();
return v2;
}
}