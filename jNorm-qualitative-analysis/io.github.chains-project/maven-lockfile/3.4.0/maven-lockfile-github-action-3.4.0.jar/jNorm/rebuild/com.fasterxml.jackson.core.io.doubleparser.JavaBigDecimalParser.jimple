public class com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser extends java.lang.Object
{
private static final com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray BYTE_ARRAY_PARSER;
private static final com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray CHAR_ARRAY_PARSER;
private static final com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence CHAR_SEQUENCE_PARSER;
private void <init>()
{
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser v0;
v0 := @this: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.math.BigDecimal parseBigDecimal(java.lang.CharSequence) throws java.lang.NumberFormatException
{
int v1;
java.math.BigDecimal v2;
java.lang.CharSequence v0;
v0 := @parameter0: java.lang.CharSequence;
v1 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
v2 = staticinvoke <com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: java.math.BigDecimal parseBigDecimal(java.lang.CharSequence,int,int)>(v0, 0, v1);
return v2;
}
public static java.math.BigDecimal parseBigDecimal(java.lang.CharSequence, int, int) throws java.lang.NumberFormatException
{
java.math.BigDecimal v4;
java.lang.CharSequence v0;
int v1, v2;
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence v3;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence CHAR_SEQUENCE_PARSER>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence: java.math.BigDecimal parseBigDecimalString(java.lang.CharSequence,int,int)>(v0, v1, v2);
return v4;
}
public static java.math.BigDecimal parseBigDecimal(byte[]) throws java.lang.NumberFormatException
{
int v1;
byte[] v0;
java.math.BigDecimal v2;
v0 := @parameter0: byte[];
v1 = lengthof v0;
v2 = staticinvoke <com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: java.math.BigDecimal parseBigDecimal(byte[],int,int)>(v0, 0, v1);
return v2;
}
public static java.math.BigDecimal parseBigDecimal(byte[], int, int) throws java.lang.NumberFormatException
{
byte[] v0;
java.math.BigDecimal v4;
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray v3;
int v1, v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray BYTE_ARRAY_PARSER>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray: java.math.BigDecimal parseBigDecimalString(byte[],int,int)>(v0, v1, v2);
return v4;
}
public static java.math.BigDecimal parseBigDecimal(char[]) throws java.lang.NumberFormatException
{
int v1;
char[] v0;
java.math.BigDecimal v2;
v0 := @parameter0: char[];
v1 = lengthof v0;
v2 = staticinvoke <com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: java.math.BigDecimal parseBigDecimal(char[],int,int)>(v0, 0, v1);
return v2;
}
public static java.math.BigDecimal parseBigDecimal(char[], int, int) throws java.lang.NumberFormatException
{
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray v3;
java.math.BigDecimal v4;
int v1, v2;
char[] v0;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray CHAR_ARRAY_PARSER>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray: java.math.BigDecimal parseBigDecimalString(char[],int,int)>(v0, v1, v2);
return v4;
}
static void <clinit>()
{
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray v0;
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray v1;
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence v2;
v0 = new com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray;
specialinvoke v0.<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray: void <init>()>();
<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray BYTE_ARRAY_PARSER> = v0;
v1 = new com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray;
specialinvoke v1.<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray: void <init>()>();
<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray CHAR_ARRAY_PARSER> = v1;
v2 = new com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence;
specialinvoke v2.<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence: void <init>()>();
<com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser: com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence CHAR_SEQUENCE_PARSER> = v2;
return;
}
}