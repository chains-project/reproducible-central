public final class com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal extends java.lang.Object
{
static final int P;
private static final int W;
static final int Q_MIN;
static final int Q_MAX;
static final int E_MIN;
static final int E_MAX;
static final long C_TINY;
static final int K_MIN;
static final int K_MAX;
static final int H;
private static final long C_MIN;
private static final int BQ_MASK;
private static final long T_MASK;
private static final long MASK_63;
private static final int MASK_28;
private static final int NON_SPECIAL;
private static final int PLUS_ZERO;
private static final int MINUS_ZERO;
private static final int PLUS_INF;
private static final int MINUS_INF;
private static final int NAN;
public final int MAX_CHARS;
private final byte[] bytes;
private int index;
private void <init>()
{
byte[] v1;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int MAX_CHARS> = 24;
v1 = newarray (byte)[24];
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: byte[] bytes> = v1;
return;
}
public static java.lang.String toString(double)
{
java.lang.String v2;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v1;
double v0;
v0 := @parameter0: double;
v1 = new com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
specialinvoke v1.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void <init>()>();
v2 = specialinvoke v1.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: java.lang.String toDecimalString(double)>(v0);
return v2;
}
private java.lang.String toDecimalString(double)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v2;
java.lang.String v3;
double v1;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: double;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toDecimal(double)>(v1);
tableswitch(v2)
{
case 0: goto label1;
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
case 4: goto label5;
default: goto label6;
};
label1:
v3 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: java.lang.String charsToString()>();
return v3;
label2:
return "0.0";
label3:
return "-0.0";
label4:
return "Infinity";
label5:
return "-Infinity";
label6:
return "NaN";
}
private int toDecimal(double)
{
long v13, v14, v2, v21, v3, v4, v9;
byte v15, v19, v20, v26, v27, v28, v29, v30, v7;
int v16, v17, v18, v22, v23, v24, v25, v5, v6, v8;
boolean v10, v11, v12;
double v1;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: double;
v2 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(v1);
v3 = v2 & 4503599627370495L;
v4 = v2 >>> 52;
v5 = v4 & 2047;
if v5 >= 2047 goto label13;
v6 = (int) -1;
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index> = v6;
v7 = v2 cmp 0L;
if v7 >= 0 goto label01;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append(int)>(45);
label01:
if v5 == 0 goto label07;
v8 = 1075 - v5;
v9 = 4503599627370496L | v3;
if 0 >= v8 goto label02;
v10 = 1;
goto label03;
label02:
v10 = 0;
label03:
if v8 >= 53 goto label04;
v11 = 1;
goto label05;
label04:
v11 = 0;
label05:
v12 = v10 & v11;
if v12 == 0 goto label06;
v13 = v9 >> v8;
v14 = v13 << v8;
v15 = v14 cmp v9;
if v15 != 0 goto label06;
v16 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars(long,int)>(v13, 0);
return v16;
label06:
v17 = neg v8;
v18 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toDecimal(int,long,int)>(v17, v9, 0);
return v18;
label07:
v19 = v3 cmp 0L;
if v19 == 0 goto label10;
v20 = v3 cmp 3L;
if v20 >= 0 goto label08;
v21 = 10L * v3;
v22 = (int) -1074;
v23 = (int) -1;
v24 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toDecimal(int,long,int)>(v22, v21, v23);
goto label09;
label08:
v25 = (int) -1074;
v24 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toDecimal(int,long,int)>(v25, v3, 0);
label09:
return v24;
label10:
v26 = v2 cmp 0L;
if v26 != 0 goto label11;
v27 = 1;
goto label12;
label11:
v27 = 2;
label12:
return v27;
label13:
v28 = v3 cmp 0L;
if v28 == 0 goto label14;
return 5;
label14:
v29 = v2 cmp 0L;
if v29 <= 0 goto label15;
v30 = 3;
goto label16;
label15:
v30 = 4;
label16:
return v30;
}
private int toDecimal(int, long, int)
{
byte v27, v33, v38, v45, v50, v58, v59, v61, v7;
long v12, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v28, v29, v30, v31, v32, v36, v37, v40, v42, v43, v44, v48, v49, v5, v52, v55, v56, v57, v6, v60, v62;
boolean v10, v11, v34, v35, v39, v46, v47, v51, v8;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v13, v14, v15, v16, v17, v3, v4, v41, v53, v54, v63, v64, v9;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 := @parameter2: int;
v4 = v2 & 1;
v5 = v2 << 2;
v6 = v5 + 2L;
v7 = v2 cmp 4503599627370496L;
if v7 == 0 goto label01;
v8 = 1;
goto label02;
label01:
v8 = 0;
label02:
v9 = (int) -1074;
if v1 != v9 goto label03;
v10 = 1;
goto label04;
label03:
v10 = 0;
label04:
v11 = v8 | v10;
if v11 == 0 goto label05;
v12 = v5 - 2L;
v13 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog10pow2(int)>(v1);
goto label06;
label05:
v12 = v5 - 1L;
v13 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog10threeQuartersPow2(int)>(v1);
label06:
v14 = neg v13;
v15 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog2pow10(int)>(v14);
v16 = v1 + v15;
v17 = v16 + 2;
v18 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long g1(int)>(v13);
v19 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long g0(int)>(v13);
v20 = v5 << v17;
v21 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: long rop(long,long,long)>(v18, v19, v20);
v22 = v12 << v17;
v23 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: long rop(long,long,long)>(v18, v19, v22);
v24 = v6 << v17;
v25 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: long rop(long,long,long)>(v18, v19, v24);
v26 = v21 >> 2;
v27 = v26 cmp 100L;
if v27 < 0 goto label13;
v28 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v26, 1844674407370955168L);
v29 = 10L * v28;
v30 = v29 + 10L;
v31 = v23 + v4;
v32 = v29 << 2;
v33 = v31 cmp v32;
if v33 > 0 goto label07;
v34 = 1;
goto label08;
label07:
v34 = 0;
label08:
v35 = v34;
v36 = v30 << 2;
v37 = v36 + v4;
v38 = v37 cmp v25;
if v38 > 0 goto label09;
v39 = 1;
goto label10;
label09:
v39 = 0;
label10:
if v35 == v39 goto label13;
if v35 == 0 goto label11;
v40 = v29;
goto label12;
label11:
v40 = v30;
label12:
v41 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars(long,int)>(v40, v13);
return v41;
label13:
v42 = v26 + 1L;
v43 = v23 + v4;
v44 = v26 << 2;
v45 = v43 cmp v44;
if v45 > 0 goto label14;
v46 = 1;
goto label15;
label14:
v46 = 0;
label15:
v47 = v46;
v48 = v42 << 2;
v49 = v48 + v4;
v50 = v49 cmp v25;
if v50 > 0 goto label16;
v51 = 1;
goto label17;
label16:
v51 = 0;
label17:
if v47 == v51 goto label20;
if v47 == 0 goto label18;
v52 = v26;
goto label19;
label18:
v52 = v42;
label19:
v53 = v13 + v3;
v54 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars(long,int)>(v52, v53);
return v54;
label20:
v55 = v26 + v42;
v56 = v55 << 1;
v57 = v21 - v56;
v58 = v57 cmp 0L;
if v58 < 0 goto label21;
v59 = v57 cmp 0L;
if v59 != 0 goto label22;
v60 = v26 & 1L;
v61 = v60 cmp 0L;
if v61 != 0 goto label22;
label21:
v62 = v26;
goto label23;
label22:
v62 = v42;
label23:
v63 = v13 + v3;
v64 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars(long,int)>(v62, v63);
return v64;
}
private static long rop(long, long, long)
{
long v0, v1, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: long;
v3 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v1, v2);
v4 = v0 * v2;
v5 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v0, v2);
v6 = v4 >>> 1;
v7 = v6 + v3;
v8 = v7 >>> 63;
v9 = v5 + v8;
v10 = v7 & 9223372036854775807L;
v11 = v10 + 9223372036854775807L;
v12 = v11 >>> 63;
v13 = v9 | v12;
return v13;
}
private int toChars(long, int)
{
long v1, v10, v12, v13, v14, v15, v16, v17, v19, v6, v9;
byte v7;
int v11, v18, v2, v20, v21, v22, v23, v3, v4, v5, v8;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: long;
v2 := @parameter1: int;
v3 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(v1);
v4 = 64 - v3;
v5 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog10pow2(int)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long pow10(int)>(v5);
v7 = v1 cmp v6;
if v7 < 0 goto label1;
v5 = v5 + 1;
label1:
v8 = 17 - v5;
v9 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long pow10(int)>(v8);
v10 = v1 * v9;
v11 = v2 + v5;
v12 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v10, 193428131138340668L);
v13 = v12 >>> 20;
v14 = 100000000L * v13;
v15 = v10 - v14;
v16 = v13 * 1441151881L;
v17 = v16 >>> 57;
v18 = 100000000 * v17;
v19 = v13 - v18;
if 0 >= v11 goto label2;
if v11 > 7 goto label2;
v20 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars1(int,int,int,int)>(v17, v19, v15, v11);
return v20;
label2:
v21 = (int) -3;
if v21 >= v11 goto label3;
if v11 > 0 goto label3;
v22 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars2(int,int,int,int)>(v17, v19, v15, v11);
return v22;
label3:
v23 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int toChars3(int,int,int,int)>(v17, v19, v15, v11);
return v23;
}
private int toChars1(int, int, int, int)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v1);
v5 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int y(int)>(v2);
v6 = 1;
label1:
if v6 >= v4 goto label2;
v7 = 10 * v5;
v8 = v7 >>> 28;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v8);
v5 = v7 & 268435455;
v6 = v6 + 1;
goto label1;
label2:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append(int)>(46);
label3:
if v6 > 8 goto label4;
v9 = 10 * v5;
v10 = v9 >>> 28;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v10);
v5 = v9 & 268435455;
v6 = v6 + 1;
goto label3;
label4:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void lowDigits(int)>(v3);
return 0;
}
private int toChars2(int, int, int, int)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(0);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append(int)>(46);
label1:
if v4 >= 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(0);
v4 = v4 + 1;
goto label1;
label2:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v1);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append8Digits(int)>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void lowDigits(int)>(v3);
return 0;
}
private int toChars3(int, int, int, int)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v1);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append(int)>(46);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append8Digits(int)>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void lowDigits(int)>(v3);
v5 = v4 - 1;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void exponent(int)>(v5);
return 0;
}
private void lowDigits(int)
{
int v1;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
if v1 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append8Digits(int)>(v1);
label1:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void removeTrailingZeroes()>();
return;
}
private void append8Digits(int)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int y(int)>(v1);
v3 = 0;
label1:
if v3 >= 8 goto label2;
v4 = 10 * v2;
v5 = v4 >>> 28;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v5);
v2 = v4 & 268435455;
v3 = v3 + 1;
goto label1;
label2:
return;
}
private void removeTrailingZeroes()
{
byte[] v1, v6;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
byte v3, v8;
int v10, v2, v4, v5, v7, v9;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
label1:
v1 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: byte[] bytes>;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v3 = v1[v2];
if v3 != 48 goto label2;
v4 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v5 = v4 - 1;
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index> = v5;
goto label1;
label2:
v6 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: byte[] bytes>;
v7 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v8 = v6[v7];
if v8 != 46 goto label3;
v9 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v10 = v9 + 1;
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index> = v10;
label3:
return;
}
private int y(int)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v2, v6;
long v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 = v1 + 1;
v3 = v2 << 28;
v4 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v3, 193428131138340668L);
v5 = v4 >>> 20;
v6 = v5 - 1;
return v6;
}
private void exponent(int)
{
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v2, v3, v4, v5, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append(int)>(69);
if v1 >= 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void append(int)>(45);
v1 = neg v1;
label1:
if v1 >= 10 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v1);
return;
label2:
if v1 < 100 goto label3;
v2 = v1 * 1311;
v3 = v2 >>> 17;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v3);
v4 = 100 * v3;
v1 = v1 - v4;
label3:
v5 = v1 * 103;
v6 = v5 >>> 10;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v6);
v7 = 10 * v6;
v8 = v1 - v7;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: void appendDigit(int)>(v8);
return;
}
private void append(int)
{
byte[] v2;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v3, v4;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: byte[] bytes>;
v3 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v4 = v3 + 1;
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index> = v4;
v2[v4] = v1;
return;
}
private void appendDigit(int)
{
byte[] v2;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v1, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: byte[] bytes>;
v3 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v4 = v3 + 1;
v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index> = v4;
v5 = 48 + v1;
v2[v4] = v5;
return;
}
private java.lang.String charsToString()
{
byte[] v2;
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal v0;
int v3, v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal;
v1 = new java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: byte[] bytes>;
v3 = v0.<com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: int index>;
v4 = v3 + 1;
specialinvoke v1.<java.lang.String: void <init>(byte[],int,int,int)>(v2, 0, 0, v4);
return v1;
}
}