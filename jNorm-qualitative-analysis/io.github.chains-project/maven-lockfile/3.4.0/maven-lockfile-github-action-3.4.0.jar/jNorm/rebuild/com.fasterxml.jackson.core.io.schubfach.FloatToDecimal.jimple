public final class com.fasterxml.jackson.core.io.schubfach.FloatToDecimal extends java.lang.Object
{
static final int P;
private static final int W;
static final int Q_MIN;
static final int Q_MAX;
static final int E_MIN;
static final int E_MAX;
static final int C_TINY;
static final int K_MIN;
static final int K_MAX;
static final int H;
private static final int C_MIN;
private static final int BQ_MASK;
private static final int T_MASK;
private static final long MASK_32;
private static final int MASK_28;
private static final int NON_SPECIAL;
private static final int PLUS_ZERO;
private static final int MINUS_ZERO;
private static final int PLUS_INF;
private static final int MINUS_INF;
private static final int NAN;
public final int MAX_CHARS;
private final byte[] bytes;
private int index;
private void <init>()
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
byte[] v1;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int MAX_CHARS> = 15;
v1 = newarray (byte)[15];
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: byte[] bytes> = v1;
return;
}
public static java.lang.String toString(float)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v1;
float v0;
java.lang.String v2;
v0 := @parameter0: float;
v1 = new com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
specialinvoke v1.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void <init>()>();
v2 = specialinvoke v1.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: java.lang.String toDecimalString(float)>(v0);
return v2;
}
private java.lang.String toDecimalString(float)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v2;
float v1;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: float;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toDecimal(float)>(v1);
tableswitch(v2)
{
case 0: goto label1;
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
case 4: goto label5;
default: goto label6;
};
label1:
v3 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: java.lang.String charsToString()>();
return v3;
label2:
return "0.0";
label3:
return "-0.0";
label4:
return "Infinity";
label5:
return "-Infinity";
label6:
return "NaN";
}
private int toDecimal(float)
{
byte v22, v23;
int v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v3, v4, v5, v6, v7, v8;
boolean v10, v11, v9;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
float v1;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: float;
v2 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(v1);
v3 = v2 & 8388607;
v4 = v2 >>> 23;
v5 = v4 & 255;
if v5 >= 255 goto label13;
v6 = (int) -1;
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index> = v6;
if v2 >= 0 goto label01;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append(int)>(45);
label01:
if v5 == 0 goto label07;
v7 = 150 - v5;
v8 = 8388608 | v3;
if 0 >= v7 goto label02;
v9 = 1;
goto label03;
label02:
v9 = 0;
label03:
if v7 >= 24 goto label04;
v10 = 1;
goto label05;
label04:
v10 = 0;
label05:
v11 = v9 & v10;
if v11 == 0 goto label06;
v12 = v8 >> v7;
v13 = v12 << v7;
if v13 != v8 goto label06;
v14 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars(int,int)>(v12, 0);
return v14;
label06:
v15 = neg v7;
v16 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toDecimal(int,int,int)>(v15, v8, 0);
return v16;
label07:
if v3 == 0 goto label10;
if v3 >= 8 goto label08;
v17 = 10 * v3;
v18 = (int) -149;
v19 = (int) -1;
v20 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toDecimal(int,int,int)>(v18, v17, v19);
goto label09;
label08:
v21 = (int) -149;
v20 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toDecimal(int,int,int)>(v21, v3, 0);
label09:
return v20;
label10:
if v2 != 0 goto label11;
v22 = 1;
goto label12;
label11:
v22 = 2;
label12:
return v22;
label13:
if v3 == 0 goto label14;
return 5;
label14:
if v2 <= 0 goto label15;
v23 = 3;
goto label16;
label15:
v23 = 4;
label16:
return v23;
}
private int toDecimal(int, int, int)
{
boolean v10, v32, v33, v36, v42, v43, v46, v7, v9;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
long v11, v17, v18, v19, v21, v23, v26, v27, v6;
int v1, v12, v13, v14, v15, v16, v2, v20, v22, v24, v25, v28, v29, v3, v30, v31, v34, v35, v37, v38, v39, v4, v40, v41, v44, v45, v47, v48, v49, v5, v50, v51, v52, v53, v54, v55, v56, v8;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v2 & 1;
v5 = v2 << 2;
v6 = v5 + 2L;
if v2 == 8388608 goto label01;
v7 = 1;
goto label02;
label01:
v7 = 0;
label02:
v8 = (int) -149;
if v1 != v8 goto label03;
v9 = 1;
goto label04;
label03:
v9 = 0;
label04:
v10 = v7 | v9;
if v10 == 0 goto label05;
v11 = v5 - 2L;
v12 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog10pow2(int)>(v1);
goto label06;
label05:
v11 = v5 - 1L;
v12 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog10threeQuartersPow2(int)>(v1);
label06:
v13 = neg v12;
v14 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog2pow10(int)>(v13);
v15 = v1 + v14;
v16 = v15 + 33;
v17 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long g1(int)>(v12);
v18 = v17 + 1L;
v19 = v5 << v16;
v20 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int rop(long,long)>(v18, v19);
v21 = v11 << v16;
v22 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int rop(long,long)>(v18, v21);
v23 = v6 << v16;
v24 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int rop(long,long)>(v18, v23);
v25 = v20 >> 2;
if v25 < 100 goto label13;
v26 = v25 * 1717986919L;
v27 = v26 >>> 34;
v28 = 10 * v27;
v29 = v28 + 10;
v30 = v22 + v4;
v31 = v28 << 2;
if v30 > v31 goto label07;
v32 = 1;
goto label08;
label07:
v32 = 0;
label08:
v33 = v32;
v34 = v29 << 2;
v35 = v34 + v4;
if v35 > v24 goto label09;
v36 = 1;
goto label10;
label09:
v36 = 0;
label10:
if v33 == v36 goto label13;
if v33 == 0 goto label11;
v37 = v28;
goto label12;
label11:
v37 = v29;
label12:
v38 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars(int,int)>(v37, v12);
return v38;
label13:
v39 = v25 + 1;
v40 = v22 + v4;
v41 = v25 << 2;
if v40 > v41 goto label14;
v42 = 1;
goto label15;
label14:
v42 = 0;
label15:
v43 = v42;
v44 = v39 << 2;
v45 = v44 + v4;
if v45 > v24 goto label16;
v46 = 1;
goto label17;
label16:
v46 = 0;
label17:
if v43 == v46 goto label20;
if v43 == 0 goto label18;
v47 = v25;
goto label19;
label18:
v47 = v39;
label19:
v48 = v12 + v3;
v49 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars(int,int)>(v47, v48);
return v49;
label20:
v50 = v25 + v39;
v51 = v50 << 1;
v52 = v20 - v51;
if v52 < 0 goto label21;
if v52 != 0 goto label22;
v53 = v25 & 1;
if v53 != 0 goto label22;
label21:
v54 = v25;
goto label23;
label22:
v54 = v39;
label23:
v55 = v12 + v3;
v56 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars(int,int)>(v54, v55);
return v56;
}
private static int rop(long, long)
{
long v0, v1, v2, v3, v4, v5, v6, v7;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v0, v1);
v3 = v2 >>> 31;
v4 = v2 & 4294967295L;
v5 = v4 + 4294967295L;
v6 = v5 >>> 32;
v7 = v3 | v6;
return v7;
}
private int toChars(int, int)
{
long v10, v12, v13, v6, v9;
byte v7;
int v1, v11, v14, v15, v16, v17, v18, v19, v2, v20, v3, v4, v5, v8;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(v1);
v4 = 32 - v3;
v5 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: int flog10pow2(int)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long pow10(int)>(v5);
v7 = v1 cmp v6;
if v7 < 0 goto label1;
v5 = v5 + 1;
label1:
v8 = 9 - v5;
v9 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long pow10(int)>(v8);
v10 = v1 * v9;
v11 = v2 + v5;
v12 = v20 * 1441151881L;
v13 = v12 >>> 57;
v14 = 100000000 * v13;
v15 = v10 - v14;
if 0 >= v11 goto label2;
if v11 > 7 goto label2;
v16 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars1(int,int,int)>(v13, v15, v11);
return v16;
label2:
v17 = (int) -3;
if v17 >= v11 goto label3;
if v11 > 0 goto label3;
v18 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars2(int,int,int)>(v13, v15, v11);
return v18;
label3:
v19 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int toChars3(int,int,int)>(v13, v15, v11);
return v19;
}
private int toChars1(int, int, int)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v1);
v4 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int y(int)>(v2);
v5 = 1;
label1:
if v5 >= v3 goto label2;
v6 = 10 * v4;
v7 = v6 >>> 28;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v7);
v4 = v6 & 268435455;
v5 = v5 + 1;
goto label1;
label2:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append(int)>(46);
label3:
if v5 > 8 goto label4;
v8 = 10 * v4;
v9 = v8 >>> 28;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v9);
v4 = v8 & 268435455;
v5 = v5 + 1;
goto label3;
label4:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void removeTrailingZeroes()>();
return 0;
}
private int toChars2(int, int, int)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v2, v3;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(0);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append(int)>(46);
label1:
if v3 >= 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(0);
v3 = v3 + 1;
goto label1;
label2:
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v1);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append8Digits(int)>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void removeTrailingZeroes()>();
return 0;
}
private int toChars3(int, int, int)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v1);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append(int)>(46);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append8Digits(int)>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void removeTrailingZeroes()>();
v4 = v3 - 1;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void exponent(int)>(v4);
return 0;
}
private void append8Digits(int)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int y(int)>(v1);
v3 = 0;
label1:
if v3 >= 8 goto label2;
v4 = 10 * v2;
v5 = v4 >>> 28;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v5);
v2 = v4 & 268435455;
v3 = v3 + 1;
goto label1;
label2:
return;
}
private void removeTrailingZeroes()
{
byte[] v1, v6;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
byte v3, v8;
int v10, v2, v4, v5, v7, v9;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
label1:
v1 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: byte[] bytes>;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v3 = v1[v2];
if v3 != 48 goto label2;
v4 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v5 = v4 - 1;
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index> = v5;
goto label1;
label2:
v6 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: byte[] bytes>;
v7 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v8 = v6[v7];
if v8 != 46 goto label3;
v9 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v10 = v9 + 1;
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index> = v10;
label3:
return;
}
private int y(int)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v2, v6;
long v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 = v1 + 1;
v3 = v2 << 28;
v4 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.MathUtils: long multiplyHigh(long,long)>(v3, 193428131138340668L);
v5 = v4 >>> 20;
v6 = v5 - 1;
return v6;
}
private void exponent(int)
{
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append(int)>(69);
if v1 >= 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void append(int)>(45);
v1 = neg v1;
label1:
if v1 >= 10 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v1);
return;
label2:
v2 = v1 * 103;
v3 = v2 >>> 10;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v3);
v4 = 10 * v3;
v5 = v1 - v4;
specialinvoke v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: void appendDigit(int)>(v5);
return;
}
private void append(int)
{
byte[] v2;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v3, v4;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: byte[] bytes>;
v3 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v4 = v3 + 1;
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index> = v4;
v2[v4] = v1;
return;
}
private void appendDigit(int)
{
byte[] v2;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v1, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: byte[] bytes>;
v3 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v4 = v3 + 1;
v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index> = v4;
v5 = 48 + v1;
v2[v4] = v5;
return;
}
private java.lang.String charsToString()
{
byte[] v2;
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal v0;
int v3, v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.io.schubfach.FloatToDecimal;
v1 = new java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: byte[] bytes>;
v3 = v0.<com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: int index>;
v4 = v3 + 1;
specialinvoke v1.<java.lang.String: void <init>(byte[],int,int,int)>(v2, 0, 0, v4);
return v1;
}
}