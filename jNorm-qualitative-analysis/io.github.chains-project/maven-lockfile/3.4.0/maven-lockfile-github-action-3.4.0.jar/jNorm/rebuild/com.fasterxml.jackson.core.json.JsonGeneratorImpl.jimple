public abstract class com.fasterxml.jackson.core.json.JsonGeneratorImpl extends com.fasterxml.jackson.core.base.GeneratorBase
{
protected static final int[] sOutputEscapes;
protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_WRITE_CAPABILITIES;
protected final com.fasterxml.jackson.core.io.IOContext _ioContext;
protected int[] _outputEscapes;
protected int _maximumNonEscapedChar;
protected com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes;
protected com.fasterxml.jackson.core.SerializableString _rootValueSeparator;
protected boolean _cfgUnqNames;
protected boolean _cfgWriteHexUppercase;
public void <init>(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v10, v6, v8;
com.fasterxml.jackson.core.ObjectCodec v3;
com.fasterxml.jackson.core.io.SerializedString v5;
int[] v4;
com.fasterxml.jackson.core.io.IOContext v1;
int v2;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
boolean v11, v12, v7, v9;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void <init>(int,com.fasterxml.jackson.core.ObjectCodec)>(v2, v3);
v4 = <com.fasterxml.jackson.core.json.JsonGeneratorImpl: int[] sOutputEscapes>;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int[] _outputEscapes> = v4;
v5 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR>;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v5;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.io.IOContext _ioContext> = v1;
v6 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v2);
if v7 == 0 goto label1;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int _maximumNonEscapedChar> = 127;
label1:
v8 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v2);
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgWriteHexUppercase> = v9;
v10 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v2);
if v11 != 0 goto label2;
v12 = 1;
goto label3;
label2:
v12 = 0;
label3:
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgUnqNames> = v12;
return;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.Version v2;
java.lang.Class v1;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <com.fasterxml.jackson.core.util.VersionUtil: com.fasterxml.jackson.core.Version versionFor(java.lang.Class)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1, v2, v3;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v1);
v2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES>;
if v1 != v2 goto label1;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgUnqNames> = 0;
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE>;
if v1 != v3 goto label2;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgWriteHexUppercase> = 1;
label2:
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1, v2, v3;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v1);
v2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES>;
if v1 != v2 goto label1;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgUnqNames> = 1;
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE>;
if v1 != v3 goto label2;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgWriteHexUppercase> = 0;
label2:
return v0;
}
protected void _checkStdFeatureChanges(int, int)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v3, v6;
int v1, v2;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
boolean v4, v5, v7;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: int;
v2 := @parameter1: int;
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void _checkStdFeatureChanges(int,int)>(v1, v2);
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgUnqNames> = v5;
v6 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>(v1);
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: boolean _cfgWriteHexUppercase> = v7;
return;
}
public com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)
{
int v1, v2;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: int;
if v1 >= 0 goto label1;
v2 = 0;
goto label2;
label1:
v2 = v1;
label2:
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int _maximumNonEscapedChar> = v2;
return v0;
}
public int getHighestEscapedChar()
{
int v1;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int _maximumNonEscapedChar>;
return v1;
}
public com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
{
int[] v2, v3;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: com.fasterxml.jackson.core.io.CharacterEscapes;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = v1;
if v1 != null goto label1;
v2 = <com.fasterxml.jackson.core.json.JsonGeneratorImpl: int[] sOutputEscapes>;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int[] _outputEscapes> = v2;
goto label2;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.io.CharacterEscapes: int[] getEscapeCodesForAscii()>();
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int[] _outputEscapes> = v3;
label2:
return v0;
}
public com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes()
{
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
return v1;
}
public com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
{
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v1;
return v0;
}
public com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities()
{
com.fasterxml.jackson.core.util.JacksonFeatureSet v1;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 = <com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_WRITE_CAPABILITIES>;
return v1;
}
protected void _verifyPrettyValueWrite(java.lang.String, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v6, v9;
int v2;
com.fasterxml.jackson.core.PrettyPrinter v11, v3, v4, v5, v8;
java.lang.String v1;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
boolean v10, v7;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
tableswitch(v2)
{
case 0: goto label4;
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label7;
case 5: goto label6;
default: goto label7;
};
label1:
v3 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v3.<com.fasterxml.jackson.core.PrettyPrinter: void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label8;
label2:
v4 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v4.<com.fasterxml.jackson.core.PrettyPrinter: void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label8;
label3:
v5 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v5.<com.fasterxml.jackson.core.PrettyPrinter: void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label8;
label4:
v6 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inArray()>();
if v7 == 0 goto label5;
v8 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v8.<com.fasterxml.jackson.core.PrettyPrinter: void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label8;
label5:
v9 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inObject()>();
if v10 == 0 goto label8;
v11 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v11.<com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label8;
label6:
virtualinvoke v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: void _reportCantWriteValueExpectName(java.lang.String)>(v1);
goto label8;
label7:
virtualinvoke v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: void _throwInternal()>();
label8:
return;
}
protected void _reportCantWriteValueExpectName(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v3;
java.lang.Object[] v2;
java.lang.String v1, v4, v5;
com.fasterxml.jackson.core.json.JsonGeneratorImpl v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonGeneratorImpl;
v1 := @parameter0: java.lang.String;
v2 = newarray (java.lang.Object)[2];
v2[0] = v1;
v3 = v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();
v2[1] = v4;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not %s, expecting field name (context: %s)", v2);
virtualinvoke v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: void _reportError(java.lang.String)>(v5);
return;
}
static void <clinit>()
{
com.fasterxml.jackson.core.util.JacksonFeatureSet v1;
int[] v0;
v0 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();
<com.fasterxml.jackson.core.json.JsonGeneratorImpl: int[] sOutputEscapes> = v0;
v1 = <com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_TEXTUAL_WRITE_CAPABILITIES>;
<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_WRITE_CAPABILITIES> = v1;
return;
}
}