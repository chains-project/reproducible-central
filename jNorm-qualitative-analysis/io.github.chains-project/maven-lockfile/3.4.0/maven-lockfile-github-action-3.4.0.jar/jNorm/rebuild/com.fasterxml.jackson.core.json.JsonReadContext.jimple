public final class com.fasterxml.jackson.core.json.JsonReadContext extends com.fasterxml.jackson.core.JsonStreamContext
{
protected final com.fasterxml.jackson.core.json.JsonReadContext _parent;
protected com.fasterxml.jackson.core.json.DupDetector _dups;
protected com.fasterxml.jackson.core.json.JsonReadContext _child;
protected java.lang.String _currentName;
protected java.lang.Object _currentValue;
protected int _lineNr;
protected int _columnNr;
public void <init>(com.fasterxml.jackson.core.json.JsonReadContext, int, com.fasterxml.jackson.core.json.DupDetector, int, int, int)
{
com.fasterxml.jackson.core.json.JsonReadContext v0, v1;
com.fasterxml.jackson.core.json.DupDetector v3;
int v2, v4, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadContext;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.json.DupDetector;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
specialinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: void <init>()>();
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _parent> = v1;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups> = v3;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _type> = v4;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _lineNr> = v5;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _columnNr> = v6;
v7 = (int) -1;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _index> = v7;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _nestingDepth> = v2;
return;
}
public void <init>(com.fasterxml.jackson.core.json.JsonReadContext, com.fasterxml.jackson.core.json.DupDetector, int, int, int)
{
com.fasterxml.jackson.core.json.JsonReadContext v0, v1;
com.fasterxml.jackson.core.json.DupDetector v2;
int v3, v4, v5, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadContext;
v2 := @parameter1: com.fasterxml.jackson.core.json.DupDetector;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
specialinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: void <init>()>();
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _parent> = v1;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups> = v2;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _type> = v3;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _lineNr> = v4;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _columnNr> = v5;
v6 = (int) -1;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _index> = v6;
if v1 != null goto label1;
v7 = 0;
goto label2;
label1:
v8 = v1.<com.fasterxml.jackson.core.json.JsonReadContext: int _nestingDepth>;
v7 = v8 + 1;
label2:
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _nestingDepth> = v7;
return;
}
public void reset(int, int, int)
{
com.fasterxml.jackson.core.json.DupDetector v5, v6;
int v1, v2, v3, v4;
com.fasterxml.jackson.core.json.JsonReadContext v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _type> = v1;
v4 = (int) -1;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _index> = v4;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _lineNr> = v2;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _columnNr> = v3;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String _currentName> = null;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.Object _currentValue> = null;
v5 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
if v5 == null goto label1;
v6 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
virtualinvoke v6.<com.fasterxml.jackson.core.json.DupDetector: void reset()>();
label1:
return;
}
public com.fasterxml.jackson.core.json.JsonReadContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector)
{
com.fasterxml.jackson.core.json.JsonReadContext v0;
com.fasterxml.jackson.core.json.DupDetector v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: com.fasterxml.jackson.core.json.DupDetector;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups> = v1;
return v0;
}
public java.lang.Object getCurrentValue()
{
java.lang.Object v1;
com.fasterxml.jackson.core.json.JsonReadContext v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.Object _currentValue>;
return v1;
}
public void setCurrentValue(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.core.json.JsonReadContext v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: java.lang.Object;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.Object _currentValue> = v1;
return;
}
public static com.fasterxml.jackson.core.json.JsonReadContext createRootContext(int, int, com.fasterxml.jackson.core.json.DupDetector)
{
com.fasterxml.jackson.core.json.DupDetector v2;
int v0, v1;
com.fasterxml.jackson.core.json.JsonReadContext v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: com.fasterxml.jackson.core.json.DupDetector;
v3 = new com.fasterxml.jackson.core.json.JsonReadContext;
specialinvoke v3.<com.fasterxml.jackson.core.json.JsonReadContext: void <init>(com.fasterxml.jackson.core.json.JsonReadContext,int,com.fasterxml.jackson.core.json.DupDetector,int,int,int)>(null, 0, v2, 0, v0, v1);
return v3;
}
public static com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector)
{
com.fasterxml.jackson.core.json.JsonReadContext v1;
com.fasterxml.jackson.core.json.DupDetector v0;
v0 := @parameter0: com.fasterxml.jackson.core.json.DupDetector;
v1 = new com.fasterxml.jackson.core.json.JsonReadContext;
specialinvoke v1.<com.fasterxml.jackson.core.json.JsonReadContext: void <init>(com.fasterxml.jackson.core.json.JsonReadContext,int,com.fasterxml.jackson.core.json.DupDetector,int,int,int)>(null, 0, v0, 0, 1, 0);
return v1;
}
public com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int, int)
{
com.fasterxml.jackson.core.json.JsonReadContext v0, v3, v4;
com.fasterxml.jackson.core.json.DupDetector v7, v8, v9;
int v1, v2, v5, v6;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _child>;
if v3 != null goto label3;
v4 = new com.fasterxml.jackson.core.json.JsonReadContext;
v5 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _nestingDepth>;
v6 = v5 + 1;
v7 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
if v7 != null goto label1;
v8 = null;
goto label2;
label1:
v9 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
v8 = virtualinvoke v9.<com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector child()>();
label2:
specialinvoke v4.<com.fasterxml.jackson.core.json.JsonReadContext: void <init>(com.fasterxml.jackson.core.json.JsonReadContext,int,com.fasterxml.jackson.core.json.DupDetector,int,int,int)>(v0, v6, v8, 1, v1, v2);
v3 = v4;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _child> = v4;
goto label4;
label3:
virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonReadContext: void reset(int,int,int)>(1, v1, v2);
label4:
return v3;
}
public com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int, int)
{
com.fasterxml.jackson.core.json.JsonReadContext v0, v3, v4;
com.fasterxml.jackson.core.json.DupDetector v7, v8, v9;
int v1, v2, v5, v6;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _child>;
if v3 != null goto label3;
v4 = new com.fasterxml.jackson.core.json.JsonReadContext;
v5 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _nestingDepth>;
v6 = v5 + 1;
v7 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
if v7 != null goto label1;
v8 = null;
goto label2;
label1:
v9 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
v8 = virtualinvoke v9.<com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector child()>();
label2:
specialinvoke v4.<com.fasterxml.jackson.core.json.JsonReadContext: void <init>(com.fasterxml.jackson.core.json.JsonReadContext,int,com.fasterxml.jackson.core.json.DupDetector,int,int,int)>(v0, v6, v8, 2, v1, v2);
v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _child> = v4;
return v4;
label3:
virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonReadContext: void reset(int,int,int)>(2, v1, v2);
return v3;
}
public java.lang.String getCurrentName()
{
java.lang.String v1;
com.fasterxml.jackson.core.json.JsonReadContext v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String _currentName>;
return v1;
}
public boolean hasCurrentName()
{
java.lang.String v1;
com.fasterxml.jackson.core.json.JsonReadContext v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String _currentName>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.core.json.JsonReadContext getParent()
{
com.fasterxml.jackson.core.json.JsonReadContext v0, v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _parent>;
return v1;
}
public com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference)
{
com.fasterxml.jackson.core.JsonLocation v2;
int v3, v4;
com.fasterxml.jackson.core.json.JsonReadContext v0;
com.fasterxml.jackson.core.io.ContentReference v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: com.fasterxml.jackson.core.io.ContentReference;
v2 = new com.fasterxml.jackson.core.JsonLocation;
v3 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _lineNr>;
v4 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _columnNr>;
specialinvoke v2.<com.fasterxml.jackson.core.JsonLocation: void <init>(com.fasterxml.jackson.core.io.ContentReference,long,int,int)>(v1, -1L, v3, v4);
return v2;
}
public com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object)
{
com.fasterxml.jackson.core.JsonLocation v3;
java.lang.Object v1;
com.fasterxml.jackson.core.json.JsonReadContext v0;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <com.fasterxml.jackson.core.io.ContentReference: com.fasterxml.jackson.core.io.ContentReference rawReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference)>(v2);
return v3;
}
public com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent()
{
com.fasterxml.jackson.core.json.JsonReadContext v0, v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.Object _currentValue> = null;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext _parent>;
return v1;
}
public com.fasterxml.jackson.core.json.DupDetector getDupDetector()
{
com.fasterxml.jackson.core.json.JsonReadContext v0;
com.fasterxml.jackson.core.json.DupDetector v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
return v1;
}
public boolean expectComma()
{
int v1, v2, v3;
com.fasterxml.jackson.core.json.JsonReadContext v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _index>;
v2 = v1 + 1;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _index> = v2;
v3 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: int _type>;
if v3 == 0 goto label1;
if v2 <= 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public void setCurrentName(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.core.json.DupDetector v2, v3;
java.lang.String v1;
com.fasterxml.jackson.core.json.JsonReadContext v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: java.lang.String;
v0.<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String _currentName> = v1;
v2 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector _dups>;
specialinvoke v0.<com.fasterxml.jackson.core.json.JsonReadContext: void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)>(v3, v1);
label1:
return;
}
private void _checkDup(com.fasterxml.jackson.core.json.DupDetector, java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.core.json.JsonReadContext v0;
com.fasterxml.jackson.core.json.DupDetector v1;
java.lang.Object v4;
java.lang.String v2, v7;
com.fasterxml.jackson.core.JsonParseException v5;
boolean v3, v6;
v0 := @this: com.fasterxml.jackson.core.json.JsonReadContext;
v1 := @parameter0: com.fasterxml.jackson.core.json.DupDetector;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.json.DupDetector: boolean isDup(java.lang.String)>(v2);
if v3 == 0 goto label2;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.json.DupDetector: java.lang.Object getSource()>();
v5 = new com.fasterxml.jackson.core.JsonParseException;
v6 = v4 instanceof com.fasterxml.jackson.core.JsonParser;
if v6 != 0 goto label1;
v4 = null;
label1:
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Duplicate field \'\u0001\'");
specialinvoke v5.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v4, v7);
throw v5;
label2:
return;
}
}