public class com.fasterxml.jackson.core.util.DefaultIndenter extends com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter
{
private static final long serialVersionUID;
public static final java.lang.String SYS_LF;
public static final com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE;
private static final int INDENT_LEVELS;
private final char[] indents;
private final int charsPerLevel;
private final java.lang.String eol;
public void <init>()
{
java.lang.String v1;
com.fasterxml.jackson.core.util.DefaultIndenter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 = <com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String SYS_LF>;
specialinvoke v0.<com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>("  ", v1);
return;
}
public void <init>(java.lang.String, java.lang.String)
{
com.fasterxml.jackson.core.util.DefaultIndenter v0;
int v11, v3, v4, v5, v7, v8, v9;
char[] v10, v6;
java.lang.String v1, v2;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter: void <init>()>();
v3 = virtualinvoke v1.<java.lang.String: int length()>();
v0.<com.fasterxml.jackson.core.util.DefaultIndenter: int charsPerLevel> = v3;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
v5 = v4 * 16;
v6 = newarray (char)[v5];
v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents> = v6;
v7 = 0;
v8 = 0;
label1:
if v8 >= 16 goto label2;
v9 = virtualinvoke v1.<java.lang.String: int length()>();
v10 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(0, v9, v10, v7);
v11 = virtualinvoke v1.<java.lang.String: int length()>();
v7 = v7 + v11;
v8 = v8 + 1;
goto label1;
label2:
v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol> = v2;
return;
}
public com.fasterxml.jackson.core.util.DefaultIndenter withLinefeed(java.lang.String)
{
java.lang.String v1, v2, v5;
com.fasterxml.jackson.core.util.DefaultIndenter v0, v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;
v3 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v3 == 0 goto label1;
return v0;
label1:
v4 = new com.fasterxml.jackson.core.util.DefaultIndenter;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String getIndent()>();
specialinvoke v4.<com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>(v5, v1);
return v4;
}
public com.fasterxml.jackson.core.util.DefaultIndenter withIndent(java.lang.String)
{
java.lang.String v1, v2, v5;
com.fasterxml.jackson.core.util.DefaultIndenter v0, v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String getIndent()>();
v3 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v3 == 0 goto label1;
return v0;
label1:
v4 = new com.fasterxml.jackson.core.util.DefaultIndenter;
v5 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;
specialinvoke v4.<com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>(v1, v5);
return v4;
}
public boolean isInline()
{
com.fasterxml.jackson.core.util.DefaultIndenter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
return 0;
}
public void writeIndentation(com.fasterxml.jackson.core.JsonGenerator, int) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultIndenter v0;
int v10, v12, v2, v4, v5, v7;
char[] v11, v13, v6, v8, v9;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(java.lang.String)>(v3);
if v2 <= 0 goto label3;
v4 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: int charsPerLevel>;
v5 = v2 * v4;
label1:
v6 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
v7 = lengthof v6;
if v5 <= v7 goto label2;
v8 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
v9 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
v10 = lengthof v9;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char[],int,int)>(v8, 0, v10);
v11 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
v12 = lengthof v11;
v5 = v5 - v12;
goto label1;
label2:
v13 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char[],int,int)>(v13, 0, v5);
label3:
return;
}
public java.lang.String getEol()
{
java.lang.String v1;
com.fasterxml.jackson.core.util.DefaultIndenter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;
return v1;
}
public java.lang.String getIndent()
{
int v3;
char[] v2;
java.lang.String v1;
com.fasterxml.jackson.core.util.DefaultIndenter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultIndenter;
v1 = new java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultIndenter: int charsPerLevel>;
specialinvoke v1.<java.lang.String: void <init>(char[],int,int)>(v2, 0, v3);
return v1;
}
static void <clinit>()
{
java.lang.Throwable v1;
java.lang.String v0, v3;
com.fasterxml.jackson.core.util.DefaultIndenter v2;
label1:
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");
label2:
goto label4;
label3:
v1 := @caughtexception;
v0 = "\n";
label4:
<com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String SYS_LF> = v0;
v2 = new com.fasterxml.jackson.core.util.DefaultIndenter;
v3 = <com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String SYS_LF>;
specialinvoke v2.<com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>("  ", v3);
<com.fasterxml.jackson.core.util.DefaultIndenter: com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE> = v2;
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}