public abstract class com.fasterxml.jackson.databind.JavaType extends com.fasterxml.jackson.core.type.ResolvedType implements java.io.Serializable, java.lang.reflect.Type
{
private static final long serialVersionUID;
protected final java.lang.Class _class;
protected final int _hash;
protected final java.lang.Object _valueHandler;
protected final java.lang.Object _typeHandler;
protected final boolean _asStatic;
protected void <init>(java.lang.Class, int, java.lang.Object, java.lang.Object, boolean)
{
int v2, v6, v7, v8;
java.lang.Class v1;
java.lang.Object v3, v4;
com.fasterxml.jackson.databind.JavaType v0;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: boolean;
specialinvoke v0.<com.fasterxml.jackson.core.type.ResolvedType: void <init>()>();
v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class> = v1;
v6 = 31 * v2;
v7 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
v8 = v6 + v7;
v0.<com.fasterxml.jackson.databind.JavaType: int _hash> = v8;
v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler> = v3;
v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _typeHandler> = v4;
v0.<com.fasterxml.jackson.databind.JavaType: boolean _asStatic> = v5;
return;
}
protected void <init>(com.fasterxml.jackson.databind.JavaType)
{
int v3;
java.lang.Class v2;
java.lang.Object v4, v5;
com.fasterxml.jackson.databind.JavaType v0, v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.core.type.ResolvedType: void <init>()>();
v2 = v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class> = v2;
v3 = v1.<com.fasterxml.jackson.databind.JavaType: int _hash>;
v0.<com.fasterxml.jackson.databind.JavaType: int _hash> = v3;
v4 = v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler>;
v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler> = v4;
v5 = v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _typeHandler>;
v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _typeHandler> = v5;
v6 = v1.<com.fasterxml.jackson.databind.JavaType: boolean _asStatic>;
v0.<com.fasterxml.jackson.databind.JavaType: boolean _asStatic> = v6;
return;
}
public abstract com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType);
public abstract com.fasterxml.jackson.databind.JavaType withStaticTyping();
public abstract com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object);
public abstract com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object);
public abstract com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object);
public abstract com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object);
public com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
{
java.lang.Object v3, v4, v5, v6;
com.fasterxml.jackson.databind.JavaType v0, v1, v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();
v4 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _typeHandler>;
if v3 == v4 goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object)>(v3);
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
v6 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler>;
if v5 == v6 goto label2;
v2 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object)>(v5);
label2:
return v2;
}
public abstract com.fasterxml.jackson.databind.JavaType refine(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[]);
public com.fasterxml.jackson.databind.JavaType forcedNarrowBy(java.lang.Class)
{
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v0, v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)>(v1);
return v3;
}
protected abstract com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class);
public final java.lang.Class getRawClass()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
return v1;
}
public final boolean hasRawClass(java.lang.Class)
{
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
if v2 != v1 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean hasContentType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return 1;
}
public final boolean isTypeOrSubTypeOf(java.lang.Class)
{
java.lang.Class v1, v2, v3;
com.fasterxml.jackson.databind.JavaType v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
if v2 == v1 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v4 = virtualinvoke v1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v4 == 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public final boolean isTypeOrSuperTypeOf(java.lang.Class)
{
java.lang.Class v1, v2, v3;
com.fasterxml.jackson.databind.JavaType v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
if v2 == v1 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v4 = virtualinvoke v3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v4 == 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public boolean isAbstract()
{
int v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = virtualinvoke v1.<java.lang.Class: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(v2);
return v3;
}
public boolean isConcrete()
{
int v2, v3;
java.lang.Class v1, v4;
com.fasterxml.jackson.databind.JavaType v0;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = virtualinvoke v1.<java.lang.Class: int getModifiers()>();
v3 = v2 & 1536;
if v3 != 0 goto label1;
return 1;
label1:
v4 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v5 = virtualinvoke v4.<java.lang.Class: boolean isPrimitive()>();
return v5;
}
public boolean isThrowable()
{
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = class "Ljava/lang/Throwable;";
v2 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v3 = virtualinvoke v1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v2);
return v3;
}
public boolean isArrayType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return 0;
}
public final boolean isEnumType()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v1);
return v2;
}
public final boolean isEnumImplType()
{
java.lang.Class v1, v3;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2, v4;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v1);
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
if v3 == class "Ljava/lang/Enum;" goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public final boolean isRecordType()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isRecordType(java.lang.Class)>(v1);
return v2;
}
public final boolean isInterface()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = virtualinvoke v1.<java.lang.Class: boolean isInterface()>();
return v2;
}
public final boolean isPrimitive()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = virtualinvoke v1.<java.lang.Class: boolean isPrimitive()>();
return v2;
}
public final boolean isFinal()
{
int v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
v2 = virtualinvoke v1.<java.lang.Class: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(v2);
return v3;
}
public abstract boolean isContainerType();
public boolean isCollectionLikeType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return 0;
}
public boolean isMapLikeType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return 0;
}
public final boolean isJavaLangObject()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class _class>;
if v1 != class "Ljava/lang/Object;" goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public final boolean useStaticType()
{
com.fasterxml.jackson.databind.JavaType v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: boolean _asStatic>;
return v1;
}
public boolean hasGenericTypes()
{
int v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: int containedTypeCount()>();
if v1 <= 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.databind.JavaType getKeyType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return null;
}
public com.fasterxml.jackson.databind.JavaType getContentType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return null;
}
public com.fasterxml.jackson.databind.JavaType getReferencedType()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return null;
}
public abstract int containedTypeCount();
public abstract com.fasterxml.jackson.databind.JavaType containedType(int);
public abstract java.lang.String containedTypeName(int);
public java.lang.Class getParameterSource()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return null;
}
public com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int)
{
int v1;
com.fasterxml.jackson.databind.JavaType v0, v2, v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedType(int)>(v1);
if v2 != null goto label1;
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
goto label2;
label1:
v3 = v2;
label2:
return v3;
}
public abstract com.fasterxml.jackson.databind.type.TypeBindings getBindings();
public abstract com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class);
public abstract com.fasterxml.jackson.databind.JavaType getSuperClass();
public abstract java.util.List getInterfaces();
public abstract com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class);
public java.lang.Object getValueHandler()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler>;
return v1;
}
public java.lang.Object getTypeHandler()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _typeHandler>;
return v1;
}
public java.lang.Object getContentValueHandler()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return null;
}
public java.lang.Object getContentTypeHandler()
{
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
return null;
}
public boolean hasValueHandler()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasHandlers()
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.JavaType v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _typeHandler>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Object _valueHandler>;
if v2 == null goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
public java.lang.String getGenericSignature()
{
java.lang.StringBuilder v1;
com.fasterxml.jackson.databind.JavaType v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>(int)>(40);
virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>(v1);
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v2;
}
public abstract java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder);
public java.lang.String getErasedSignature()
{
java.lang.StringBuilder v1;
com.fasterxml.jackson.databind.JavaType v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>(int)>(40);
virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>(v1);
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v2;
}
public abstract java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder);
public abstract java.lang.String toString();
public abstract boolean equals(java.lang.Object);
public int hashCode()
{
int v1;
com.fasterxml.jackson.databind.JavaType v0;
v0 := @this: com.fasterxml.jackson.databind.JavaType;
v1 = v0.<com.fasterxml.jackson.databind.JavaType: int _hash>;
return v1;
}
}