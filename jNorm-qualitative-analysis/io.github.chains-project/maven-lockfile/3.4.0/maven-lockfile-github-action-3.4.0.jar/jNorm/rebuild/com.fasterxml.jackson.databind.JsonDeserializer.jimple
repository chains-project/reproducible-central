public abstract class com.fasterxml.jackson.databind.JsonDeserializer extends java.lang.Object implements com.fasterxml.jackson.databind.deser.NullValueProvider
{
public void <init>()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException;
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v3, v4;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Object;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer)>(v0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4, v5;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 := @parameter3: java.lang.Object;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer)>(v0);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v3);
return v5;
}
public com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v1;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
return v0;
}
public com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer)
{
java.lang.UnsupportedOperationException v2;
com.fasterxml.jackson.databind.JsonDeserializer v0, v1;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public java.lang.Class handledType()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return null;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return null;
}
public boolean isCachable()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return 0;
}
public com.fasterxml.jackson.databind.JsonDeserializer getDelegatee()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return null;
}
public java.util.Collection getKnownPropertyNames()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return null;
}
public java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue()>();
return v2;
}
public com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern()
{
com.fasterxml.jackson.databind.util.AccessPattern v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 = <com.fasterxml.jackson.databind.util.AccessPattern: com.fasterxml.jackson.databind.util.AccessPattern CONSTANT>;
return v1;
}
public java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v2;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern()
{
com.fasterxml.jackson.databind.util.AccessPattern v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 = <com.fasterxml.jackson.databind.util.AccessPattern: com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC>;
return v1;
}
public com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return null;
}
public com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String)
{
java.lang.Class v3;
java.lang.String v1, v4, v5;
com.fasterxml.jackson.databind.JsonDeserializer v0;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot handle managed/back reference \'\u0001\': type: value deserializer of type \u0001 does not support them");
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v2;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
return null;
}
public java.lang.Object getNullValue()
{
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
return null;
}
public java.lang.Object getEmptyValue()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.JsonDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonDeserializer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue()>();
return v1;
}
}