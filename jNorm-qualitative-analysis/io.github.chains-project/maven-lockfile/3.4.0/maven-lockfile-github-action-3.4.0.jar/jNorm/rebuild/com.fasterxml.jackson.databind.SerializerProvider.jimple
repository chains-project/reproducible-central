public abstract class com.fasterxml.jackson.databind.SerializerProvider extends com.fasterxml.jackson.databind.DatabindContext
{
protected static final boolean CACHE_UNKNOWN_MAPPINGS;
public static final com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER;
protected static final com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER;
protected final com.fasterxml.jackson.databind.SerializationConfig _config;
protected final java.lang.Class _serializationView;
protected final com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory;
protected final com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache;
protected transient com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes;
protected com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer;
protected com.fasterxml.jackson.databind.JsonSerializer _keySerializer;
protected com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer;
protected com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer;
protected final com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers;
protected java.text.DateFormat _dateFormat;
protected final boolean _stdNullValueSerializer;
public void <init>()
{
com.fasterxml.jackson.databind.ser.SerializerCache v4;
com.fasterxml.jackson.databind.ser.std.NullSerializer v2;
com.fasterxml.jackson.databind.JsonSerializer v1, v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v1 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = v1;
v2 = <com.fasterxml.jackson.databind.ser.std.NullSerializer: com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = v2;
v3 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = v3;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = null;
v4 = new com.fasterxml.jackson.databind.ser.SerializerCache;
specialinvoke v4.<com.fasterxml.jackson.databind.ser.SerializerCache: void <init>()>();
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = v4;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer> = 1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.SerializerFactory)
{
com.fasterxml.jackson.databind.ser.SerializerFactory v3;
com.fasterxml.jackson.databind.ser.std.NullSerializer v5;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.ser.SerializerCache v17, v7;
com.fasterxml.jackson.databind.JsonSerializer v10, v11, v12, v13, v4, v6, v8, v9;
com.fasterxml.jackson.databind.SerializerProvider v0, v1;
com.fasterxml.jackson.databind.cfg.ContextAttributes v16;
boolean v14;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v18;
java.lang.Class v15;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;
v3 := @parameter2: com.fasterxml.jackson.databind.ser.SerializerFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v4 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = v4;
v5 = <com.fasterxml.jackson.databind.ser.std.NullSerializer: com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = v5;
v6 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = v6;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = v3;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config> = v2;
v7 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = v7;
v8 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = v8;
v9 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v9;
v10 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = v10;
v11 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = v11;
v12 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
v13 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;
if v12 != v13 goto label1;
v14 = 1;
goto label2;
label1:
v14 = 0;
label2:
v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer> = v14;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: java.lang.Class getActiveView()>();
v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = v15;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes()>();
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = v16;
v17 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v18 = virtualinvoke v17.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap()>();
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = v18;
return;
}
protected void <init>(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.databind.ser.std.NullSerializer v3;
com.fasterxml.jackson.databind.ser.SerializerCache v5;
com.fasterxml.jackson.databind.JsonSerializer v2, v4, v6, v7, v8, v9;
com.fasterxml.jackson.databind.SerializerProvider v0, v1;
boolean v10;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v2 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = v2;
v3 = <com.fasterxml.jackson.databind.ser.std.NullSerializer: com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = v3;
v4 = <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = v4;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = null;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = null;
v5 = new com.fasterxml.jackson.databind.ser.SerializerCache;
specialinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: void <init>()>();
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = v5;
v6 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = v6;
v7 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v7;
v8 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = v8;
v9 = v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = v9;
v10 = v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;
v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer> = v10;
return;
}
public void setDefaultKeySerializer(com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null JsonSerializer");
throw v2;
label1:
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v1;
return;
}
public void setNullValueSerializer(com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null JsonSerializer");
throw v2;
label1:
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = v1;
return;
}
public void setNullKeySerializer(com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null JsonSerializer");
throw v2;
label1:
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = v1;
return;
}
public final com.fasterxml.jackson.databind.SerializationConfig getConfig()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
return v1;
}
public final com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
return v2;
}
public final com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.type.TypeFactory v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.type.TypeFactory v5;
com.fasterxml.jackson.databind.SerializationConfig v4;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1, v6;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(v2);
if v3 == 0 goto label1;
return v1;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean)>(v1, v2, 1);
return v6;
}
public final java.lang.Class getActiveView()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView>;
return v1;
}
public final boolean canOverrideAccessModifiers()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();
return v2;
}
public final boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)
{
com.fasterxml.jackson.databind.MapperFeature v1;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v1);
return v3;
}
public final boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)
{
com.fasterxml.jackson.databind.cfg.DatatypeFeature v1;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.DatatypeFeature;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v1);
return v3;
}
public final com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.cfg.DatatypeFeatures v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures()>();
return v2;
}
public final com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)
{
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(v1);
return v3;
}
public final com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class)
{
com.fasterxml.jackson.'annotation'.JsonInclude$Value v3;
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class)>(v1);
return v3;
}
public java.util.Locale getLocale()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.util.Locale v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: java.util.Locale getLocale()>();
return v2;
}
public java.util.TimeZone getTimeZone()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.util.TimeZone v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: java.util.TimeZone getTimeZone()>();
return v2;
}
public java.lang.Object getAttribute(java.lang.Object)
{
java.lang.Object v1, v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.cfg.ContextAttributes v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ContextAttributes: java.lang.Object getAttribute(java.lang.Object)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.cfg.ContextAttributes v3, v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.ContextAttributes: com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object)>(v1, v2);
v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = v4;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
{
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.SerializationFeature v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
return v3;
}
public final boolean hasSerializationFeatures(int)
{
int v1;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean hasSerializationFeatures(int)>(v1);
return v3;
}
public final com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.ser.FilterProvider v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()>();
return v2;
}
public com.fasterxml.jackson.core.JsonGenerator getGenerator()
{
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
return null;
}
public com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.util.TokenBuffer v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v2 = new com.fasterxml.jackson.databind.util.TokenBuffer;
specialinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec,boolean)>(v1, 0);
return v2;
}
public final com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion()
{
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.util.TokenBuffer v1;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec)>(null);
return v1;
}
public abstract com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object, com.fasterxml.jackson.'annotation'.ObjectIdGenerator);
public com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.SerializationConfig v7;
com.fasterxml.jackson.databind.ser.SerializerCache v5, v6;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v3;
com.fasterxml.jackson.databind.JsonSerializer v10, v4, v9;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v8;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v7 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v4 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v8);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v1);
return v9;
label1:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
return v10;
}
public com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v3;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.ser.SerializerCache v6;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v4;
com.fasterxml.jackson.databind.JsonSerializer v5, v8, v9;
java.lang.Class v7;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
if v1 != null goto label1;
v3 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: void reportMappingProblem(java.lang.String,java.lang.Object[])>("Null passed for `valueType` of `findValueSerializer()`", v3);
label1:
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v5 != null goto label2;
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v5 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v5 != null goto label2;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v5 != null goto label2;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v7);
return v8;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v5, v2);
return v9;
}
public com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v6;
com.fasterxml.jackson.databind.ser.SerializerCache v4, v5;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v2;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v7;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v3 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v3 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v7);
if v3 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(v1);
if v3 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v1);
label1:
return v3;
}
public com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerCache v4;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v2;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Class v5;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v3 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v3 != null goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v5);
label1:
return v3;
}
public com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.ser.SerializerCache v5;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v3;
com.fasterxml.jackson.databind.JsonSerializer v4, v7, v8;
java.lang.Class v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v4 != null goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v6);
return v7;
label1:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
return v8;
}
public com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.SerializationConfig v7;
com.fasterxml.jackson.databind.ser.SerializerCache v5, v6;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v3;
com.fasterxml.jackson.databind.JsonSerializer v10, v4, v9;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v8;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v7 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v4 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v8);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v1);
return v9;
label1:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
return v10;
}
public com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.ser.SerializerCache v5;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v3;
com.fasterxml.jackson.databind.JsonSerializer v4, v7, v8;
java.lang.Class v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v4 != null goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v6);
return v7;
label1:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
return v8;
}
public com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.SerializationConfig v7;
com.fasterxml.jackson.databind.ser.SerializerCache v5, v6;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v3;
com.fasterxml.jackson.databind.JsonSerializer v10, v4, v9;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v8;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v7 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v4 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v8);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(v1);
if v4 != null goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v1);
return v9;
label1:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
return v10;
}
public com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class, boolean, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerFactory v9;
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer v15;
com.fasterxml.jackson.databind.SerializationConfig v10, v11;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v13, v14;
com.fasterxml.jackson.databind.ser.SerializerCache v16, v6;
com.fasterxml.jackson.databind.JsonSerializer v5, v7, v8;
com.fasterxml.jackson.databind.JavaType v12;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v4;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)>(v1);
if v5 == null goto label1;
return v5;
label1:
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)>(v1);
if v7 == null goto label2;
return v7;
label2:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v9 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v10 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v11 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v13 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v10, v12);
if v13 == null goto label3;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(v3);
v15 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;
specialinvoke v15.<com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v14, v8);
v8 = v15;
label3:
if v2 == 0 goto label4;
v16 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
virtualinvoke v16.<com.fasterxml.jackson.databind.ser.SerializerCache: void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v8);
label4:
return v8;
}
public com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerFactory v9;
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer v13;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.SerializationConfig v10;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v11, v12;
com.fasterxml.jackson.databind.ser.SerializerCache v14, v6;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v4;
com.fasterxml.jackson.databind.JsonSerializer v5, v7, v8;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v5 == null goto label1;
return v5;
label1:
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
if v7 == null goto label2;
return v7;
label2:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v9 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v10 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v11 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v10, v1);
if v11 == null goto label3;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(v3);
v13 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;
specialinvoke v13.<com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v12, v8);
v8 = v13;
label3:
if v2 == 0 goto label4;
v14 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
virtualinvoke v14.<com.fasterxml.jackson.databind.ser.SerializerCache: void addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v8);
label4:
return v8;
}
public com.fasterxml.jackson.databind.jsontype.TypeSerializer findTypeSerializer(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerFactory v2;
com.fasterxml.jackson.databind.SerializationConfig v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v3, v1);
return v4;
}
public com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerFactory v3;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v4, v5, v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v0, v1, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v5, v2);
return v6;
}
public com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v5;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
return v5;
}
public com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer()
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;
return v3;
}
public com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.JsonSerializer v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
com.fasterxml.jackson.databind.BeanProperty v1;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
return v2;
}
public com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)
{
com.fasterxml.jackson.databind.JsonSerializer v2;
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
if v1 != class "Ljava/lang/Object;" goto label1;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;
return v2;
label1:
v3 = new com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void <init>(java.lang.Class)>(v1);
return v3;
}
public boolean isUnknownTypeSerializer(com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.JsonSerializer v1, v2;
com.fasterxml.jackson.databind.SerializationFeature v3;
java.lang.Class v5;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;
if v1 == v2 goto label1;
if v1 != null goto label2;
label1:
return 1;
label2:
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
if v4 == 0 goto label3;
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v5 != class "Lcom/fasterxml/jackson/databind/ser/impl/UnknownSerializer;" goto label3;
return 1;
label3:
return 0;
}
public abstract com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException;
public abstract java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException;
public abstract boolean includeFilterSuppressNulls(java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException;
public com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
if v1 == null goto label1;
v3 = v1 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;
if v3 == 0 goto label1;
v1 = interfaceinvoke v1.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v0, v2);
label1:
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
if v1 == null goto label1;
v3 = v1 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;
if v3 == 0 goto label1;
v1 = interfaceinvoke v1.<com.fasterxml.jackson.databind.ser.ContextualSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v0, v2);
label1:
return v1;
}
public final void defaultSerializeValue(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.JsonSerializer v4, v6;
java.lang.Class v5;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
if v1 != null goto label2;
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;
if v3 == 0 goto label1;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
goto label3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v2, v0);
goto label3;
label2:
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v5, 1, null);
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v0);
label3:
return;
}
public final void defaultSerializeField(java.lang.String, java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.JsonSerializer v5, v7;
java.lang.Class v6;
java.lang.Object v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.core.JsonGenerator;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v1);
if v2 != null goto label2;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;
if v4 == 0 goto label1;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
goto label3;
label1:
v5 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v3, v0);
goto label3;
label2:
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v6, 1, null);
virtualinvoke v7.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v3, v0);
label3:
return;
}
public final void defaultSerializeDateValue(long, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Date v6;
long v1;
com.fasterxml.jackson.databind.SerializationFeature v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v7;
java.text.DateFormat v5;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: long;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
if v4 == 0 goto label1;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(v1);
goto label2;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();
v6 = new java.util.Date;
specialinvoke v6.<java.util.Date: void <init>(long)>(v1);
v7 = virtualinvoke v5.<java.text.DateFormat: java.lang.String format(java.util.Date)>(v6);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v7);
label2:
return;
}
public final void defaultSerializeDateValue(java.util.Date, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Date v1;
long v5;
com.fasterxml.jackson.databind.SerializationFeature v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v7;
java.text.DateFormat v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<java.util.Date: long getTime()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(v5);
goto label2;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();
v7 = virtualinvoke v6.<java.text.DateFormat: java.lang.String format(java.util.Date)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v7);
label2:
return;
}
public void defaultSerializeDateKey(long, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Date v7;
long v1;
com.fasterxml.jackson.databind.SerializationFeature v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v5, v8;
java.text.DateFormat v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: long;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
if v4 == 0 goto label1;
v5 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v5);
goto label2;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();
v7 = new java.util.Date;
specialinvoke v7.<java.util.Date: void <init>(long)>(v1);
v8 = virtualinvoke v6.<java.text.DateFormat: java.lang.String format(java.util.Date)>(v7);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v8);
label2:
return;
}
public void defaultSerializeDateKey(java.util.Date, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Date v1;
long v5;
com.fasterxml.jackson.databind.SerializationFeature v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v6, v8;
java.text.DateFormat v7;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<java.util.Date: long getTime()>();
v6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(v5);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v6);
goto label2;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();
v8 = virtualinvoke v7.<java.text.DateFormat: java.lang.String format(java.util.Date)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v8);
label2:
return;
}
public final void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;
if v2 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;
virtualinvoke v3.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v1, v0);
label2:
return;
}
public transient void reportMappingProblem(java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v2;
com.fasterxml.jackson.databind.JsonMappingException v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[])>(v1, v2);
throw v3;
}
public transient java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v3, v6;
com.fasterxml.jackson.core.JsonGenerator v9;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v10;
com.fasterxml.jackson.databind.BeanDescription v1;
java.lang.Class v5;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2, v4, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = "N/A";
if v1 == null goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v5);
label1:
v6 = newarray (java.lang.Object)[2];
v6[0] = v4;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v6[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid type definition for type %s: %s", v6);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v10 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)>(v9, v8, v1, null);
throw v10;
}
public transient java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v10, v4;
com.fasterxml.jackson.core.JsonGenerator v12;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v13;
com.fasterxml.jackson.databind.BeanDescription v1;
java.lang.Class v9;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v11, v3, v5, v6, v7, v8;
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = "N/A";
if v2 == null goto label1;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _quotedString(java.lang.String)>(v7);
label1:
v8 = "N/A";
if v1 == null goto label2;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v9);
label2:
v10 = newarray (java.lang.Object)[3];
v10[0] = v6;
v10[1] = v8;
v10[2] = v5;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid definition for property %s (of type %s): %s", v10);
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v13 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)>(v12, v11, v1, v2);
throw v13;
}
public java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v4;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v3, v2, v1);
throw v4;
}
public java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.Throwable) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v3;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v5;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.JsonMappingException v6;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v4, v2, v1);
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.JsonMappingException withCause(java.lang.Throwable)>(v3);
throw v6;
}
public java.lang.Object reportBadDefinition(java.lang.Class, java.lang.String, java.lang.Throwable) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v3;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v6;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v5;
com.fasterxml.jackson.databind.JsonMappingException v7;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
v6 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v4, v2, v5);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.JsonMappingException withCause(java.lang.Throwable)>(v3);
throw v7;
}
public transient void reportMappingProblem(java.lang.Throwable, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v1;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonGenerator v5;
com.fasterxml.jackson.databind.JsonMappingException v6;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2, v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>(v5, v4, v1);
throw v6;
}
public com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.String)
{
java.lang.Object[] v4;
com.fasterxml.jackson.databind.exc.InvalidTypeIdException v8;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2, v3, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = newarray (java.lang.Object)[2];
v4[0] = v2;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
v4[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not resolve type id \'%s\' as a subtype of %s", v4);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(v6, v3);
v8 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidTypeIdException: com.fasterxml.jackson.databind.exc.InvalidTypeIdException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(null, v7, v1, v2);
return v8;
}
public transient com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String, java.lang.Object[])
{
java.lang.Object[] v2;
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.JsonMappingException v5;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v1, v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(v1, v2);
v5 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>(v3, v4);
return v5;
}
protected transient com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Throwable, java.lang.String, java.lang.Object[])
{
java.lang.Throwable v1;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.JsonMappingException v6;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v2, v5;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.core.JsonGenerator getGenerator()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v6 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>(v4, v5, v1);
return v6;
}
protected void _reportIncompatibleRootType(java.lang.Object, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
java.lang.Object[] v8;
java.lang.Class v4, v5, v6;
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v10, v9;
boolean v3, v7;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>(v4);
v6 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v7 == 0 goto label1;
return;
label1:
v8 = newarray (java.lang.Object)[2];
v8[0] = v2;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(v1);
v8[1] = v9;
v10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incompatible types: declared root type (%s) vs %s", v8);
virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v10);
return;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerCache v4;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v2;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(v1);
if v3 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(v1);
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isUnknownTypeSerializer(com.fasterxml.jackson.databind.JsonSerializer)>(v3);
if v5 == 0 goto label2;
return null;
label2:
return v3;
}
protected com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.databind.ser.SerializerCache v7;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v6;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v5);
virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v3, v6);
v4 = null;
label4:
if v4 == null goto label5;
v7 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
virtualinvoke v7.<com.fasterxml.jackson.databind.ser.SerializerCache: void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v3, v4, v0);
label5:
return v4;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerCache v6;
java.lang.Object[] v5;
com.fasterxml.jackson.databind.JsonSerializer v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.lang.String v4;
java.lang.IllegalArgumentException v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>(v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v2 = null;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v3);
v5 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[])>(v3, v4, v5);
label4:
if v2 == null goto label5;
v6 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
virtualinvoke v6.<com.fasterxml.jackson.databind.ser.SerializerCache: void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v0);
label5:
return v2;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.SerializerFactory v2;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.SerializerFactory: com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)>(v0, v1);
return v3;
}
protected com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v1, v4;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v1 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;
if v3 == 0 goto label1;
interfaceinvoke v1.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>(v0);
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
return v4;
}
protected com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
v2 = v1 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;
if v2 == 0 goto label1;
interfaceinvoke v1.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>(v0);
label1:
return v1;
}
protected final java.text.DateFormat _dateFormat()
{
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Object v5;
com.fasterxml.jackson.databind.SerializerProvider v0;
java.text.DateFormat v1, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.SerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat>;
return v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: java.text.DateFormat getDateFormat()>();
v5 = virtualinvoke v4.<java.text.DateFormat: java.lang.Object clone()>();
v0.<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat> = v5;
return v5;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v1;
com.fasterxml.jackson.databind.ser.impl.FailingSerializer v0;
v0 = new com.fasterxml.jackson.databind.ser.impl.FailingSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.FailingSerializer: void <init>(java.lang.String)>("Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)");
<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER> = v0;
v1 = new com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void <init>()>();
<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER> = v1;
return;
}
}