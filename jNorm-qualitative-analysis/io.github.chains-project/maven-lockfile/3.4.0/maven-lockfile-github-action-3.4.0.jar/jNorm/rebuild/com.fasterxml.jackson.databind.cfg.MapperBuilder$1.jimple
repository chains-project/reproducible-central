class com.fasterxml.jackson.databind.cfg.MapperBuilder$1 extends java.lang.Object implements java.security.PrivilegedAction
{
final java.lang.ClassLoader val$classLoader;
final java.lang.Class val$clazz;
void <init>(java.lang.ClassLoader, java.lang.Class)
{
java.lang.Class v2;
java.lang.ClassLoader v1;
com.fasterxml.jackson.databind.cfg.MapperBuilder$1 v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.MapperBuilder$1;
v1 := @parameter0: java.lang.ClassLoader;
v2 := @parameter1: java.lang.Class;
v0.<com.fasterxml.jackson.databind.cfg.MapperBuilder$1: java.lang.ClassLoader val$classLoader> = v1;
v0.<com.fasterxml.jackson.databind.cfg.MapperBuilder$1: java.lang.Class val$clazz> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.ServiceLoader run()
{
java.lang.Class v2, v4;
java.util.ServiceLoader v3;
java.lang.ClassLoader v1, v5;
com.fasterxml.jackson.databind.cfg.MapperBuilder$1 v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.MapperBuilder$1;
v1 = v0.<com.fasterxml.jackson.databind.cfg.MapperBuilder$1: java.lang.ClassLoader val$classLoader>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.cfg.MapperBuilder$1: java.lang.Class val$clazz>;
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(v2);
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.cfg.MapperBuilder$1: java.lang.Class val$clazz>;
v5 = v0.<com.fasterxml.jackson.databind.cfg.MapperBuilder$1: java.lang.ClassLoader val$classLoader>;
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(v4, v5);
label2:
return v3;
}
}