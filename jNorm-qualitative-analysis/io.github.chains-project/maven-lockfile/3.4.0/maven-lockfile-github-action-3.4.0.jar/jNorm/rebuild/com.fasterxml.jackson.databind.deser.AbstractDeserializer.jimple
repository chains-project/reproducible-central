public class com.fasterxml.jackson.databind.deser.AbstractDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer implements com.fasterxml.jackson.databind.deser.ContextualDeserializer, java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.JavaType _baseType;
protected final com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader;
protected final java.util.Map _backRefProperties;
protected transient java.util.Map _properties;
protected final boolean _acceptString;
protected final boolean _acceptBoolean;
protected final boolean _acceptInt;
protected final boolean _acceptDouble;
public void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder, com.fasterxml.jackson.databind.BeanDescription, java.util.Map, java.util.Map)
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
java.util.Map v3, v4;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.JavaType v5, v7;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v6;
boolean v11, v12, v14, v15, v17, v18, v9;
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder v1;
java.lang.Class v10, v13, v16, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.util.Map;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType> = v5;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader()>();
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader> = v6;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _backRefProperties> = v3;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _properties> = v4;
v7 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v9 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/String;");
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptString> = v9;
v10 = <java.lang.Boolean: java.lang.Class TYPE>;
if v8 == v10 goto label1;
v11 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Boolean;");
if v11 == 0 goto label2;
label1:
v12 = 1;
goto label3;
label2:
v12 = 0;
label3:
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptBoolean> = v12;
v13 = <java.lang.Integer: java.lang.Class TYPE>;
if v8 == v13 goto label4;
v14 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Integer;");
if v14 == 0 goto label5;
label4:
v15 = 1;
goto label6;
label5:
v15 = 0;
label6:
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptInt> = v15;
v16 = <java.lang.Double: java.lang.Class TYPE>;
if v8 == v16 goto label7;
v17 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Double;");
if v17 == 0 goto label8;
label7:
v18 = 1;
goto label9;
label8:
v18 = 0;
label9:
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptDouble> = v18;
return;
}
public void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder, com.fasterxml.jackson.databind.BeanDescription, java.util.Map)
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder v1;
java.util.Map v3;
com.fasterxml.jackson.databind.BeanDescription v2;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map,java.util.Map)>(v1, v2, v3, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.databind.BeanDescription v1;
java.lang.Class v12, v4, v6, v9;
com.fasterxml.jackson.databind.JavaType v2, v3;
boolean v10, v11, v13, v14, v5, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType> = v2;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader> = null;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _backRefProperties> = null;
v3 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/String;");
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptString> = v5;
v6 = <java.lang.Boolean: java.lang.Class TYPE>;
if v4 == v6 goto label1;
v7 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Boolean;");
if v7 == 0 goto label2;
label1:
v8 = 1;
goto label3;
label2:
v8 = 0;
label3:
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptBoolean> = v8;
v9 = <java.lang.Integer: java.lang.Class TYPE>;
if v4 == v9 goto label4;
v10 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Integer;");
if v10 == 0 goto label5;
label4:
v11 = 1;
goto label6;
label5:
v11 = 0;
label6:
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptInt> = v11;
v12 = <java.lang.Double: java.lang.Class TYPE>;
if v4 == v12 goto label7;
v13 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Double;");
if v13 == 0 goto label8;
label7:
v14 = 1;
goto label9;
label8:
v14 = 0;
label9:
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptDouble> = v14;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer, com.fasterxml.jackson.databind.deser.impl.ObjectIdReader, java.util.Map)
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0, v1;
java.util.Map v3, v5;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v2;
boolean v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
v4 = v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType> = v4;
v5 = v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _backRefProperties>;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _backRefProperties> = v5;
v6 = v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptString>;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptString> = v6;
v7 = v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptBoolean>;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptBoolean> = v7;
v8 = v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptInt>;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptInt> = v8;
v9 = v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptDouble>;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptDouble> = v9;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader> = v2;
v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _properties> = v3;
return;
}
public static com.fasterxml.jackson.databind.deser.AbstractDeserializer constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v1;
com.fasterxml.jackson.databind.BeanDescription v0;
v0 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
v1 = new com.fasterxml.jackson.databind.deser.AbstractDeserializer;
specialinvoke v1.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: void <init>(com.fasterxml.jackson.databind.BeanDescription)>(v0);
return v1;
}
public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.type.TypeFactory v26;
java.util.Map v11, v12, v32;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v4;
com.fasterxml.jackson.databind.JsonDeserializer v28;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v30, v34;
com.fasterxml.jackson.databind.introspect.ObjectIdInfo v5, v8;
com.fasterxml.jackson.databind.PropertyName v10, v29;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.deser.SettableBeanProperty v6;
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0, v31, v33;
java.lang.Object[] v16;
com.fasterxml.jackson.databind.JavaType v15, v21, v25;
java.lang.String v13, v18, v19, v20;
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator v22;
com.fasterxml.jackson.'annotation'.ObjectIdResolver v7;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator v24;
com.fasterxml.jackson.databind.JavaType[] v27;
java.lang.Class v17, v23, v9;
java.lang.Object v14;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
if v2 == null goto label5;
if v3 == null goto label5;
v4 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v4 == null goto label5;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)>(v4);
if v5 == null goto label5;
v6 = null;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.'annotation'.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>(v4, v5);
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>(v4, v5);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getGeneratorType()>();
if v9 != class "Lcom/fasterxml/jackson/annotation/ObjectIdGenerators$PropertyGenerator;" goto label3;
v10 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: com.fasterxml.jackson.databind.PropertyName getPropertyName()>();
v11 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _properties>;
if v11 == null goto label1;
v12 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _properties>;
v13 = virtualinvoke v10.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>();
v14 = interfaceinvoke v12.<java.util.Map: java.lang.Object get(java.lang.Object)>(v13);
label1:
v6 = v14;
if v14 != null goto label2;
v15 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v16 = newarray (java.lang.Object)[2];
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Class handledType()>();
v18 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v17);
v16[0] = v18;
v19 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(com.fasterxml.jackson.databind.PropertyName)>(v10);
v16[1] = v19;
v20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid Object Id definition for %s: cannot find property with name %s", v16);
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v15, v20);
label2:
v21 = virtualinvoke v14.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.JavaType getType()>();
v22 = new com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator;
v23 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getScope()>();
specialinvoke v22.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator: void <init>(java.lang.Class)>(v23);
v24 = v22;
goto label4;
label3:
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.'annotation'.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>(v4, v8);
v25 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v9);
v26 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v25, class "Lcom/fasterxml/jackson/annotation/ObjectIdGenerator;");
v21 = v27[0];
v24 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.'annotation'.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>(v4, v8);
label4:
v28 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)>(v21);
v29 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: com.fasterxml.jackson.databind.PropertyName getPropertyName()>();
v30 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.'annotation'.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.'annotation'.ObjectIdResolver)>(v21, v29, v24, v28, v6, v7);
v31 = new com.fasterxml.jackson.databind.deser.AbstractDeserializer;
specialinvoke v31.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.util.Map)>(v0, v30, null);
return v31;
label5:
v32 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _properties>;
if v32 != null goto label6;
return v0;
label6:
v33 = new com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v34 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
specialinvoke v33.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.util.Map)>(v0, v34, null);
return v33;
}
public java.lang.Class handledType()
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
return v2;
}
public boolean isCachable()
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
return 1;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType POJO>;
return v1;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
return null;
}
public com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader()
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v1;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
return v1;
}
public com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String)
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
java.util.Map v2, v3;
java.lang.Object v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _backRefProperties>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.util.Map _backRefProperties>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
label1:
return v4;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
com.fasterxml.jackson.core.JsonToken v5, v8, v9;
java.lang.String v13;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v10, v12, v4;
boolean v11, v14, v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v15, v16, v17, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
if v4 == null goto label3;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v5 == null goto label3;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonToken: boolean isScalarValue()>();
if v6 == 0 goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v7;
label1:
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v5 != v8 goto label2;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
label2:
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v5 != v9 goto label3;
v10 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: boolean maySerializeAsObject()>();
if v11 == 0 goto label3;
v12 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
v14 = virtualinvoke v12.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: boolean isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser)>(v13, v1);
if v14 == 0 goto label3;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v15;
label3:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
if v16 == null goto label4;
return v16;
label4:
v17 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v17;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v7;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base v3;
java.lang.Class v6;
java.lang.Object v8;
com.fasterxml.jackson.databind.JavaType v4, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = new com.fasterxml.jackson.databind.deser.ValueInstantiator$Base;
v4 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator$Base: void <init>(com.fasterxml.jackson.databind.JavaType)>(v4);
v5 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = newarray (java.lang.Object)[0];
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v6, v3, v1, "abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information", v7);
return v8;
}
protected java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
java.lang.Double v11;
java.lang.Integer v8;
int v3, v7;
java.lang.Boolean v13, v15;
java.lang.String v5;
boolean v12, v14, v4, v6, v9;
double v10;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 6: goto label1;
case 7: goto label2;
case 8: goto label3;
case 9: goto label4;
case 10: goto label5;
default: goto label6;
};
label1:
v4 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptString>;
if v4 == 0 goto label6;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v5;
label2:
v6 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptInt>;
if v6 == 0 goto label6;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
return v8;
label3:
v9 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptDouble>;
if v9 == 0 goto label6;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
v11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v10);
return v11;
label4:
v12 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptBoolean>;
if v12 == 0 goto label6;
v13 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v13;
label5:
v14 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: boolean _acceptBoolean>;
if v14 == 0 goto label6;
v15 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v15;
label6:
return null;
}
protected java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.AbstractDeserializer v0;
com.fasterxml.jackson.'annotation'.ObjectIdResolver v8;
com.fasterxml.jackson.core.JsonLocation v13;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v9;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator v6;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v11;
java.lang.Object v10, v4;
java.lang.String v12;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v3, v5, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.AbstractDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: java.lang.Object readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v5 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
v6 = v5.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: com.fasterxml.jackson.'annotation'.ObjectIdGenerator generator>;
v7 = v0.<com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader>;
v8 = v7.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: com.fasterxml.jackson.'annotation'.ObjectIdResolver resolver>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.'annotation'.ObjectIdGenerator,com.fasterxml.jackson.'annotation'.ObjectIdResolver)>(v4, v6, v8);
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.Object resolve()>();
if v10 != null goto label1;
v11 = new com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not resolve Object Id [\u0001] -- unresolved forward-reference?");
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();
specialinvoke v11.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)>(v1, v12, v13, v9);
throw v11;
label1:
return v10;
}
}