public abstract class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext extends com.fasterxml.jackson.databind.DeserializationContext implements java.io.Serializable
{
private static final long serialVersionUID;
protected transient java.util.LinkedHashMap _objectIds;
private java.util.List _objectIdResolvers;
protected void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.deser.DeserializerCache)
{
com.fasterxml.jackson.databind.deser.DeserializerCache v2;
com.fasterxml.jackson.databind.deser.DeserializerFactory v1;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerCache;
specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)>(v1, v2);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext, com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.InjectableValues)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v4;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0, v1;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig;
v3 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v4 := @parameter3: com.fasterxml.jackson.databind.InjectableValues;
specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>(v1, v2, v3, v4);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext, com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0, v1;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig;
specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig)>(v1, v2);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory)
{
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0, v1;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory)>(v1, v2);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)
{
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0, v1;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void <init>(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return;
}
public com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy()
{
java.lang.IllegalStateException v1;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DefaultDeserializationContext sub-class not overriding copy()");
throw v1;
}
public com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object, com.fasterxml.jackson.'annotation'.ObjectIdGenerator, com.fasterxml.jackson.'annotation'.ObjectIdResolver)
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v18;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
java.util.ArrayList v11;
java.util.LinkedHashMap v19, v5, v6, v7;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey v4;
boolean v14, v16;
com.fasterxml.jackson.'annotation'.ObjectIdResolver v3, v9;
java.util.Iterator v13;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator v2;
java.util.List v10, v12, v17;
java.lang.Object v1, v15, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.'annotation'.ObjectIdGenerator;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.ObjectIdResolver;
if v1 != null goto label1;
return null;
label1:
v4 = virtualinvoke v2.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator: com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey key(java.lang.Object)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.LinkedHashMap _objectIds>;
if v5 != null goto label2;
v6 = new java.util.LinkedHashMap;
specialinvoke v6.<java.util.LinkedHashMap: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.LinkedHashMap _objectIds> = v6;
goto label3;
label2:
v7 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.LinkedHashMap _objectIds>;
v8 = virtualinvoke v7.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(v4);
if v8 == null goto label3;
return v8;
label3:
v9 = null;
v10 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.List _objectIdResolvers>;
if v10 != null goto label4;
v11 = new java.util.ArrayList;
specialinvoke v11.<java.util.ArrayList: void <init>(int)>(8);
v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.List _objectIdResolvers> = v11;
goto label6;
label4:
v12 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.List _objectIdResolvers>;
v13 = interfaceinvoke v12.<java.util.List: java.util.Iterator iterator()>();
label5:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label6;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = interfaceinvoke v15.<com.fasterxml.jackson.'annotation'.ObjectIdResolver: boolean canUseFor(com.fasterxml.jackson.'annotation'.ObjectIdResolver)>(v3);
if v16 == 0 goto label5;
v9 = v15;
label6:
if v9 != null goto label7;
v9 = interfaceinvoke v3.<com.fasterxml.jackson.'annotation'.ObjectIdResolver: com.fasterxml.jackson.'annotation'.ObjectIdResolver newForDeserialization(java.lang.Object)>(v0);
v17 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.List _objectIdResolvers>;
interfaceinvoke v17.<java.util.List: boolean add(java.lang.Object)>(v9);
label7:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId createReadableObjectId(com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey)>(v4);
virtualinvoke v18.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: void setResolver(com.fasterxml.jackson.'annotation'.ObjectIdResolver)>(v9);
v19 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.LinkedHashMap _objectIds>;
virtualinvoke v19.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v18);
return v18;
}
protected com.fasterxml.jackson.databind.deser.impl.ReadableObjectId createReadableObjectId(com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey)
{
com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey v1;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v2;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey;
v2 = new com.fasterxml.jackson.databind.deser.impl.ReadableObjectId;
specialinvoke v2.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: void <init>(com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey)>(v1);
return v2;
}
public void checkUnresolvedObjectId() throws com.fasterxml.jackson.databind.deser.UnresolvedForwardReference
{
com.fasterxml.jackson.core.JsonLocation v21;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
com.fasterxml.jackson.databind.DeserializationFeature v2;
java.util.LinkedHashMap v1, v5;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v13, v4;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey v15;
boolean v11, v12, v18, v3, v8;
com.fasterxml.jackson.core.JsonParser v14;
java.util.Iterator v17, v7;
java.util.Set v6;
java.lang.Class v20;
java.lang.Object v10, v16, v19, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.LinkedHashMap _objectIds>;
if v1 != null goto label1;
return;
label1:
v2 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNRESOLVED_OBJECT_IDS>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v2);
if v3 != 0 goto label2;
return;
label2:
v4 = null;
v5 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.util.LinkedHashMap _objectIds>;
v6 = virtualinvoke v5.<java.util.LinkedHashMap: java.util.Set entrySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label3:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label6;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: boolean hasReferringProperties()>();
if v11 == 0 goto label3;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: boolean tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)>(v10);
if v12 != 0 goto label3;
if v4 != null goto label4;
v13 = new com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
specialinvoke v13.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v14, "Unresolved forward references for: ");
v4 = virtualinvoke v13.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference withStackTrace()>();
label4:
v15 = virtualinvoke v10.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey getKey()>();
v16 = v15.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey: java.lang.Object key>;
v17 = virtualinvoke v10.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.util.Iterator referringProperties()>();
label5:
v18 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v18 == 0 goto label3;
v19 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: java.lang.Class getBeanType()>();
v21 = virtualinvoke v19.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: com.fasterxml.jackson.core.JsonLocation getLocation()>();
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation)>(v16, v20, v21);
goto label5;
label6:
if v4 == null goto label7;
throw v4;
label7:
return;
}
protected boolean tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v1;
boolean v2;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: boolean tryToResolveUnresolved(com.fasterxml.jackson.databind.DeserializationContext)>(v0);
return v2;
}
public com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.IllegalStateException v12, v5;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
com.fasterxml.jackson.databind.DeserializationConfig v15, v18, v19;
java.lang.String v13, v14, v7, v8;
com.fasterxml.jackson.databind.JsonDeserializer v17, v22;
boolean v11, v20, v21, v3, v4, v9;
com.fasterxml.jackson.databind.cfg.HandlerInstantiator v16;
com.fasterxml.jackson.databind.introspect.Annotated v1;
java.lang.Class v10, v6;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label1;
return null;
label1:
v3 = v2 instanceof com.fasterxml.jackson.databind.JsonDeserializer;
if v3 != 0 goto label8;
v4 = v2 instanceof java.lang.Class;
if v4 != 0 goto label2;
v5 = new java.lang.IllegalStateException;
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector returned deserializer definition of type \u0001; expected type JsonDeserializer or Class<JsonDeserializer> instead");
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v8);
throw v5;
label2:
if v2 == class "Lcom/fasterxml/jackson/databind/JsonDeserializer$None;" goto label3;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(v2);
if v9 == 0 goto label4;
label3:
return null;
label4:
v10 = class "Lcom/fasterxml/jackson/databind/JsonDeserializer;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v2);
if v11 != 0 goto label5;
v12 = new java.lang.IllegalStateException;
v13 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector returned Class \u0001; expected Class<JsonDeserializer>");
specialinvoke v12.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v14);
throw v12;
label5:
v15 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();
if v16 != null goto label6;
v17 = null;
goto label7;
label6:
v18 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.cfg.HandlerInstantiator: com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(v18, v1, v2);
label7:
v2 = v17;
if v17 != null goto label8;
v19 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.DeserializationConfig: boolean canOverrideAccessModifiers()>();
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(v17, v20);
label8:
v21 = v2 instanceof com.fasterxml.jackson.databind.deser.ResolvableDeserializer;
if v21 == 0 goto label9;
interfaceinvoke v22.<com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(com.fasterxml.jackson.databind.DeserializationContext)>(v0);
label9:
return v2;
}
public final com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.IllegalStateException v12, v5;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
com.fasterxml.jackson.databind.DeserializationConfig v15, v18, v19;
com.fasterxml.jackson.databind.KeyDeserializer v17, v22;
java.lang.String v13, v14, v7, v8;
boolean v11, v20, v21, v3, v4, v9;
com.fasterxml.jackson.databind.cfg.HandlerInstantiator v16;
com.fasterxml.jackson.databind.introspect.Annotated v1;
java.lang.Class v10, v6;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label1;
return null;
label1:
v3 = v2 instanceof com.fasterxml.jackson.databind.KeyDeserializer;
if v3 != 0 goto label8;
v4 = v2 instanceof java.lang.Class;
if v4 != 0 goto label2;
v5 = new java.lang.IllegalStateException;
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector returned key deserializer definition of type \u0001; expected type KeyDeserializer or Class<KeyDeserializer> instead");
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v8);
throw v5;
label2:
if v2 == class "Lcom/fasterxml/jackson/databind/KeyDeserializer$None;" goto label3;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(v2);
if v9 == 0 goto label4;
label3:
return null;
label4:
v10 = class "Lcom/fasterxml/jackson/databind/KeyDeserializer;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v2);
if v11 != 0 goto label5;
v12 = new java.lang.IllegalStateException;
v13 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector returned Class \u0001; expected Class<KeyDeserializer>");
specialinvoke v12.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v14);
throw v12;
label5:
v15 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();
if v16 != null goto label6;
v17 = null;
goto label7;
label6:
v18 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.cfg.HandlerInstantiator: com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(v18, v1, v2);
label7:
v2 = v17;
if v17 != null goto label8;
v19 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.DeserializationConfig: boolean canOverrideAccessModifiers()>();
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(v17, v20);
label8:
v21 = v2 instanceof com.fasterxml.jackson.databind.deser.ResolvableDeserializer;
if v21 == 0 goto label9;
interfaceinvoke v22.<com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(com.fasterxml.jackson.databind.DeserializationContext)>(v0);
label9:
return v2;
}
public abstract com.fasterxml.jackson.databind.deser.DefaultDeserializationContext 'with'(com.fasterxml.jackson.databind.deser.DeserializerFactory);
public abstract com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.InjectableValues);
public abstract com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyInstance(com.fasterxml.jackson.databind.DeserializationConfig);
public java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
com.fasterxml.jackson.databind.DeserializationConfig v5;
java.lang.Object v4, v7, v8, v9;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.JsonDeserializer v3;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: java.lang.Object;
v5 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: boolean useRootWrapping()>();
if v6 == 0 goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(v1, v2, v3, v4);
return v7;
label1:
if v4 != null goto label2;
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v0);
return v8;
label2:
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v0, v4);
return v9;
}
protected java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonDeserializer v3;
boolean v21;
com.fasterxml.jackson.databind.PropertyName v6;
java.lang.Object[] v11, v17, v22, v30;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v0;
com.fasterxml.jackson.databind.DeserializationConfig v5;
com.fasterxml.jackson.core.JsonToken v10, v13, v14, v15, v16, v19, v27, v28, v29, v32, v8, v9;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v12, v18, v20, v23, v24, v25, v31, v7;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v26, v4;
v0 := @this: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: java.lang.Object;
v5 = v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType)>(v2);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>();
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v8 == v9 goto label1;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v11 = newarray (java.lang.Object)[2];
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(java.lang.String)>(v7);
v11[0] = v12;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v11[1] = v13;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v2, v10, "Current token not START_OBJECT (needed to unwrap root name %s), but %s", v11);
label1:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v14 == v15 goto label2;
v16 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v17 = newarray (java.lang.Object)[2];
v18 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(java.lang.String)>(v7);
v17[0] = v18;
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v17[1] = v19;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v2, v16, "Current token not FIELD_NAME (to contain expected root name %s), but %s", v17);
label2:
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
v21 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v20);
if v21 != 0 goto label3;
v22 = newarray (java.lang.Object)[3];
v23 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(java.lang.String)>(v20);
v22[0] = v23;
v24 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(java.lang.String)>(v7);
v22[1] = v24;
v25 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v2);
v22[2] = v25;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object[])>(v2, v20, "Root name (%s) does not match expected (%s) for type %s", v22);
label3:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v4 != null goto label4;
v26 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v0);
goto label5;
label4:
v26 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v0, v4);
label5:
v27 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v28 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v27 == v28 goto label6;
v29 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
v30 = newarray (java.lang.Object)[2];
v31 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(java.lang.String)>(v7);
v30[0] = v31;
v32 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v30[1] = v32;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v2, v29, "Current token not END_OBJECT (to match wrapper object with root name %s), but %s", v30);
label6:
return v26;
}
}