class com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter extends java.lang.Object implements com.fasterxml.jackson.databind.util.Converter
{
private final com.fasterxml.jackson.databind.JavaType _inputType;
private final int _kind;
void <init>(int, com.fasterxml.jackson.databind.JavaType)
{
int v1;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter v0;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: com.fasterxml.jackson.databind.JavaType _inputType> = v2;
v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: int _kind> = v1;
return;
}
public java.lang.Object convert(java.lang.Object)
{
java.util.Map v16, v19, v23;
int v10, v2, v3, v7;
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter v0;
java.util.Iterator v12, v4;
java.util.Collection v22;
java.util.Set v11, v17, v20, v6;
java.util.List v18, v21, v9;
java.lang.Object v1, v13, v14, v15, v5, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label01;
return null;
label01:
v2 = v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: int _kind>;
tableswitch(v2)
{
case 1: goto label02;
case 2: goto label03;
case 3: goto label04;
case 4: goto label05;
case 5: goto label06;
case 6: goto label07;
case 7: goto label08;
case 8: goto label10;
case 9: goto label09;
case 10: goto label11;
case 11: goto label12;
default: goto label12;
};
label02:
v3 = interfaceinvoke v1.<java.util.Set: int size()>();
specialinvoke v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: void _checkSingleton(int)>(v3);
v4 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
v5 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v6 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v5);
return v6;
label03:
v7 = interfaceinvoke v1.<java.util.List: int size()>();
specialinvoke v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: void _checkSingleton(int)>(v7);
v8 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(0);
v9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v8);
return v9;
label04:
v10 = interfaceinvoke v1.<java.util.Map: int size()>();
specialinvoke v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: void _checkSingleton(int)>(v10);
v11 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v12 = interfaceinvoke v11.<java.util.Set: java.util.Iterator iterator()>();
v13 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v14 = interfaceinvoke v13.<java.util.Map$Entry: java.lang.Object getKey()>();
v15 = interfaceinvoke v13.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(v14, v15);
return v16;
label05:
v17 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v17;
label06:
v18 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v18;
label07:
v19 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
return v19;
label08:
v20 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>(v1);
return v20;
label09:
v21 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>(v1);
return v21;
label10:
v22 = staticinvoke <java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection)>(v1);
return v22;
label11:
v23 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>(v1);
return v23;
label12:
return v1;
}
public com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory)
{
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter v0;
com.fasterxml.jackson.databind.type.TypeFactory v1;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;
v2 = v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: com.fasterxml.jackson.databind.JavaType _inputType>;
return v2;
}
public com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)
{
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter v0;
com.fasterxml.jackson.databind.type.TypeFactory v1;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;
v2 = v0.<com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: com.fasterxml.jackson.databind.JavaType _inputType>;
return v2;
}
private void _checkSingleton(int)
{
int v1;
java.lang.String v3;
java.lang.IllegalArgumentException v2;
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter v0;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;
v1 := @parameter0: int;
if v1 == 1 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Can not deserialize Singleton container from \u0001 entries");
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
return;
}
}