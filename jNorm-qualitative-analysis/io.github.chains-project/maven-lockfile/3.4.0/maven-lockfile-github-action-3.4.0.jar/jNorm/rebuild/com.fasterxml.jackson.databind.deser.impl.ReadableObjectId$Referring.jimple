public abstract class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring extends java.lang.Object
{
private final com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference;
private final java.lang.Class _beanType;
public void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference, java.lang.Class)
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v1;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference> = v1;
v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: java.lang.Class _beanType> = v2;
return;
}
public void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v1;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring v0;
java.lang.Class v3;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference> = v1;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: java.lang.Class _beanType> = v3;
return;
}
public com.fasterxml.jackson.core.JsonLocation getLocation()
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring v0;
com.fasterxml.jackson.core.JsonLocation v2;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v1;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring;
v1 = v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: com.fasterxml.jackson.core.JsonLocation getLocation()>();
return v2;
}
public java.lang.Class getBeanType()
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring;
v1 = v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: java.lang.Class _beanType>;
return v1;
}
public abstract void handleResolvedForwardReference(java.lang.Object, java.lang.Object) throws java.io.IOException;
public boolean hasId(java.lang.Object)
{
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v2;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring v0;
java.lang.Object v1, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.lang.Object getUnresolvedId()>();
v4 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
return v4;
}
}