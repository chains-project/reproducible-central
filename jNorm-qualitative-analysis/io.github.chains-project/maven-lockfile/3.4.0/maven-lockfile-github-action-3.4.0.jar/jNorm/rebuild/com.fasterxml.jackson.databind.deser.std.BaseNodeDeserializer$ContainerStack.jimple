final class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack extends java.lang.Object
{
private com.fasterxml.jackson.databind.node.ContainerNode[] _stack;
private int _top;
private int _end;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public int size()
{
int v1;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top>;
return v1;
}
public void push(com.fasterxml.jackson.databind.node.ContainerNode)
{
java.lang.Object[] v18;
int v10, v11, v12, v13, v14, v15, v17, v2, v20, v21, v3, v5, v6, v8;
com.fasterxml.jackson.databind.node.ContainerNode v1;
com.fasterxml.jackson.databind.node.ContainerNode[] v16, v19, v4, v7, v9;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
v1 := @parameter0: com.fasterxml.jackson.databind.node.ContainerNode;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top>;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end>;
if v2 >= v3 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top> = v6;
v4[v5] = v1;
return;
label1:
v7 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack>;
if v7 != null goto label2;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end> = 10;
v8 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end>;
v9 = newarray (com.fasterxml.jackson.databind.node.ContainerNode)[v8];
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack> = v9;
goto label3;
label2:
v10 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end>;
v11 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end>;
v12 = v11 >> 1;
v13 = staticinvoke <java.lang.Math: int max(int,int)>(20, v12);
v14 = staticinvoke <java.lang.Math: int min(int,int)>(4000, v13);
v15 = v10 + v14;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end> = v15;
v16 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack>;
v17 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _end>;
v18 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v16, v17);
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack> = v18;
label3:
v19 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack>;
v20 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top>;
v21 = v20 + 1;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top> = v21;
v19[v20] = v1;
return;
}
public com.fasterxml.jackson.databind.node.ContainerNode popOrNull()
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v0;
int v1, v3, v4;
com.fasterxml.jackson.databind.node.ContainerNode v5;
com.fasterxml.jackson.databind.node.ContainerNode[] v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top>;
if v1 != 0 goto label1;
return null;
label1:
v2 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode[] _stack>;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top>;
v4 = v3 - 1;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: int _top> = v4;
v5 = v2[v4];
return v5;
}
}