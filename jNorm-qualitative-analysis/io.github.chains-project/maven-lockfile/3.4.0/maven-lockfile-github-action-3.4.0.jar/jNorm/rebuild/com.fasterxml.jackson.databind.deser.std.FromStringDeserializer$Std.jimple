public class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std extends com.fasterxml.jackson.databind.deser.std.FromStringDeserializer
{
private static final long serialVersionUID;
public static final int STD_FILE;
public static final int STD_URL;
public static final int STD_URI;
public static final int STD_CLASS;
public static final int STD_JAVA_TYPE;
public static final int STD_CURRENCY;
public static final int STD_PATTERN;
public static final int STD_LOCALE;
public static final int STD_CHARSET;
public static final int STD_TIME_ZONE;
public static final int STD_INET_ADDRESS;
public static final int STD_INET_SOCKET_ADDRESS;
protected static final java.lang.String LOCALE_EXT_MARKER;
protected final int _kind;
protected void <init>(java.lang.Class, int)
{
int v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: int;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind> = v2;
return;
}
protected java.lang.Object _deserialize(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.net.URL v5;
java.net.InetAddress v19;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
com.fasterxml.jackson.databind.type.TypeFactory v12;
java.util.Locale v16;
java.net.URI v6;
boolean v20;
java.util.TimeZone v18;
java.net.InetSocketAddress v30, v39, v41;
java.lang.Exception v8;
java.util.regex.Pattern v15;
java.lang.Throwable v10;
com.fasterxml.jackson.databind.exc.InvalidFormatException v23;
java.util.Currency v14;
java.nio.charset.Charset v17;
int v21, v22, v25, v26, v27, v29, v3, v31, v33, v34, v35, v36, v38;
com.fasterxml.jackson.databind.JavaType v13;
java.lang.String v1, v28, v32, v37, v40;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v24;
java.io.File v4;
java.lang.Class v7, v9;
java.lang.Object v11;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind>;
tableswitch(v3)
{
case 1: goto label01;
case 2: goto label02;
case 3: goto label03;
case 4: goto label04;
case 5: goto label07;
case 6: goto label08;
case 7: goto label09;
case 8: goto label10;
case 9: goto label11;
case 10: goto label12;
case 11: goto label13;
case 12: goto label14;
default: goto label20;
};
label01:
v4 = new java.io.File;
specialinvoke v4.<java.io.File: void <init>(java.lang.String)>(v1);
return v4;
label02:
v5 = new java.net.URL;
specialinvoke v5.<java.net.URL: void <init>(java.lang.String)>(v1);
return v5;
label03:
v6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v1);
return v6;
label04:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class findClass(java.lang.String)>(v1);
label05:
return v7;
label06:
v8 := @caughtexception;
v9 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Class _valueClass>;
v10 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>(v8);
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>(v9, v1, v10);
return v11;
label07:
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String)>(v1);
return v13;
label08:
v14 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>(v1);
return v14;
label09:
v15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(v1);
return v15;
label10:
v16 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.util.Locale _deserializeLocale(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label11:
v17 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(v1);
return v17;
label12:
v18 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(v1);
return v18;
label13:
v19 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v1);
return v19;
label14:
v20 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>("[");
if v20 == 0 goto label18;
v21 = virtualinvoke v1.<java.lang.String: int lastIndexOf(int)>(93);
v22 = (int) -1;
if v21 != v22 goto label15;
v23 = new com.fasterxml.jackson.databind.exc.InvalidFormatException;
v24 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
specialinvoke v23.<com.fasterxml.jackson.databind.exc.InvalidFormatException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v24, "Bracketed IPv6 address must contain closing bracket", v1, class "Ljava/net/InetSocketAddress;");
throw v23;
label15:
v25 = virtualinvoke v1.<java.lang.String: int indexOf(int,int)>(58, v21);
v26 = (int) -1;
if v25 <= v26 goto label16;
v27 = v25 + 1;
v28 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v27);
v29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v28);
goto label17;
label16:
v29 = 0;
label17:
v30 = new java.net.InetSocketAddress;
v31 = v21 + 1;
v32 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v31);
specialinvoke v30.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(v32, v29);
return v30;
label18:
v33 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(58);
if v33 < 0 goto label19;
v34 = v33 + 1;
v35 = virtualinvoke v1.<java.lang.String: int indexOf(int,int)>(58, v34);
if v35 >= 0 goto label19;
v36 = v33 + 1;
v37 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v36);
v38 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v37);
v39 = new java.net.InetSocketAddress;
v40 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v33);
specialinvoke v39.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(v40, v38);
return v39;
label19:
v41 = new java.net.InetSocketAddress;
specialinvoke v41.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(v1, 0);
return v41;
label20:
staticinvoke <com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();
return null;
catch java.lang.Exception from label04 to label05 with label06;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
java.util.Locale v4;
int v2;
java.lang.Object v5;
java.net.URI v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind>;
lookupswitch(v2)
{
case 3: goto label1;
case 8: goto label2;
default: goto label3;
};
label1:
v3 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("");
return v3;
label2:
v4 = <java.util.Locale: java.util.Locale ROOT>;
return v4;
label3:
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v5;
}
protected java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v2;
}
protected boolean _shouldTrim()
{
int v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind>;
if v1 == 7 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
protected int _firstHyphenOrUnderscore(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
int v2, v3, v5;
char v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: java.lang.String;
v2 = 0;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
label1:
if v2 >= v3 goto label4;
v4 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
if v4 == 95 goto label2;
if v4 != 45 goto label3;
label2:
return v2;
label3:
v2 = v2 + 1;
goto label1;
label4:
v5 = (int) -1;
return v5;
}
private java.util.Locale _deserializeLocale(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
java.util.Locale v12, v15, v4, v9;
int v11, v13, v3, v6, v8;
java.lang.String v1, v10, v14, v5, v7;
com.fasterxml.jackson.databind.DeserializationContext v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _firstHyphenOrUnderscore(java.lang.String)>(v1);
if v3 >= 0 goto label1;
v4 = new java.util.Locale;
specialinvoke v4.<java.util.Locale: void <init>(java.lang.String)>(v1);
return v4;
label1:
v5 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v3);
v6 = v3 + 1;
v7 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _firstHyphenOrUnderscore(java.lang.String)>(v7);
if v8 >= 0 goto label2;
v9 = new java.util.Locale;
specialinvoke v9.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(v5, v7);
return v9;
label2:
v10 = virtualinvoke v7.<java.lang.String: java.lang.String substring(int,int)>(0, v8);
v11 = virtualinvoke v7.<java.lang.String: int indexOf(java.lang.String)>("_#");
if v11 >= 0 goto label3;
v12 = new java.util.Locale;
v13 = v8 + 1;
v14 = virtualinvoke v7.<java.lang.String: java.lang.String substring(int)>(v13);
specialinvoke v12.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v5, v10, v14);
return v12;
label3:
v15 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.util.Locale _deSerializeBCP47Locale(java.lang.String,int,java.lang.String,java.lang.String,int)>(v7, v8, v5, v10, v11);
return v15;
}
private java.util.Locale _deSerializeBCP47Locale(java.lang.String, int, java.lang.String, java.lang.String, int)
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v0;
java.util.Locale v17, v26, v40, v42;
java.util.Locale$Builder v12, v13, v14, v15, v16, v18, v19, v20, v21, v25, v28, v29, v30, v31, v33;
int v10, v11, v2, v23, v27, v34, v35, v37, v38, v5, v7, v8;
java.lang.String v1, v24, v3, v32, v39, v4, v6, v9;
char v22, v36;
java.util.IllformedLocaleException v41;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: int;
v6 = "";
label1:
if v5 <= 0 goto label2;
if v5 <= v2 goto label2;
v7 = v2 + 1;
v6 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v7, v5);
label2:
v8 = v5 + 2;
v9 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v8);
v10 = virtualinvoke v9.<java.lang.String: int indexOf(int)>(95);
if v10 >= 0 goto label6;
v11 = virtualinvoke v9.<java.lang.String: int indexOf(int)>(45);
if v11 >= 0 goto label4;
v12 = new java.util.Locale$Builder;
specialinvoke v12.<java.util.Locale$Builder: void <init>()>();
v13 = virtualinvoke v12.<java.util.Locale$Builder: java.util.Locale$Builder setLanguage(java.lang.String)>(v3);
v14 = virtualinvoke v13.<java.util.Locale$Builder: java.util.Locale$Builder setRegion(java.lang.String)>(v4);
v15 = virtualinvoke v14.<java.util.Locale$Builder: java.util.Locale$Builder setVariant(java.lang.String)>(v6);
v16 = virtualinvoke v15.<java.util.Locale$Builder: java.util.Locale$Builder setScript(java.lang.String)>(v9);
v17 = virtualinvoke v16.<java.util.Locale$Builder: java.util.Locale build()>();
label3:
return v17;
label4:
v18 = new java.util.Locale$Builder;
specialinvoke v18.<java.util.Locale$Builder: void <init>()>();
v19 = virtualinvoke v18.<java.util.Locale$Builder: java.util.Locale$Builder setLanguage(java.lang.String)>(v3);
v20 = virtualinvoke v19.<java.util.Locale$Builder: java.util.Locale$Builder setRegion(java.lang.String)>(v4);
v21 = virtualinvoke v20.<java.util.Locale$Builder: java.util.Locale$Builder setVariant(java.lang.String)>(v6);
v22 = virtualinvoke v9.<java.lang.String: char charAt(int)>(0);
v23 = v11 + 1;
v24 = virtualinvoke v9.<java.lang.String: java.lang.String substring(int)>(v23);
v25 = virtualinvoke v21.<java.util.Locale$Builder: java.util.Locale$Builder setExtension(char,java.lang.String)>(v22, v24);
v26 = virtualinvoke v25.<java.util.Locale$Builder: java.util.Locale build()>();
label5:
return v26;
label6:
v27 = virtualinvoke v9.<java.lang.String: int length()>();
v28 = new java.util.Locale$Builder;
specialinvoke v28.<java.util.Locale$Builder: void <init>()>();
v29 = virtualinvoke v28.<java.util.Locale$Builder: java.util.Locale$Builder setLanguage(java.lang.String)>(v3);
v30 = virtualinvoke v29.<java.util.Locale$Builder: java.util.Locale$Builder setRegion(java.lang.String)>(v4);
v31 = virtualinvoke v30.<java.util.Locale$Builder: java.util.Locale$Builder setVariant(java.lang.String)>(v6);
v32 = virtualinvoke v9.<java.lang.String: java.lang.String substring(int,int)>(0, v10);
v33 = virtualinvoke v31.<java.util.Locale$Builder: java.util.Locale$Builder setScript(java.lang.String)>(v32);
v34 = v10 + 1;
if v34 >= v27 goto label7;
v35 = v10 + 1;
v36 = virtualinvoke v9.<java.lang.String: char charAt(int)>(v35);
v37 = v10 + 3;
v38 = staticinvoke <java.lang.Math: int min(int,int)>(v27, v37);
v39 = virtualinvoke v9.<java.lang.String: java.lang.String substring(int)>(v38);
v33 = virtualinvoke v33.<java.util.Locale$Builder: java.util.Locale$Builder setExtension(char,java.lang.String)>(v36, v39);
label7:
v40 = virtualinvoke v33.<java.util.Locale$Builder: java.util.Locale build()>();
label8:
return v40;
label9:
v41 := @caughtexception;
v42 = new java.util.Locale;
specialinvoke v42.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v3, v4, v6);
return v42;
catch java.util.IllformedLocaleException from label1 to label3 with label9;
catch java.util.IllformedLocaleException from label4 to label5 with label9;
catch java.util.IllformedLocaleException from label6 to label8 with label9;
}
}