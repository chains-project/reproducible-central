final class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer extends com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer
{
private static final long serialVersionUID;
protected static final com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance;
protected void <init>()
{
java.lang.Boolean v1;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
v1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>(class "Lcom/fasterxml/jackson/databind/node/ObjectNode;", v1);
return;
}
public static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0;
v0 = <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance>;
return v0;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer, boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0, v1;
boolean v2, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer,boolean,boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0, v3;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer,boolean,boolean)>(v0, v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ObjectNode v10, v13, v5;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v6, v9;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
java.lang.Object v14;
com.fasterxml.jackson.core.JsonToken v11, v7;
boolean v12, v4, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v6 = new com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v6.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void <init>()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v3, v6, v5);
return v5;
label1:
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v7);
if v8 == 0 goto label2;
v9 = new com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v9.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void <init>()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.node.ObjectNode _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack)>(v1, v2, v3, v9);
return v10;
label2:
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v11);
if v12 == 0 goto label3;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
return v13;
label3:
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Lcom/fasterxml/jackson/databind/node/ObjectNode;", v1);
return v14;
}
public com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.ObjectNode) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ObjectNode v3;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v7;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0;
com.fasterxml.jackson.databind.JsonNode v8;
java.lang.Object v9;
com.fasterxml.jackson.core.JsonToken v5;
boolean v4, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.ObjectNode;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v4 != 0 goto label1;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v5);
if v6 == 0 goto label2;
label1:
v7 = new com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v7.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void <init>()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack)>(v1, v2, v3, v7);
return v8;
label2:
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Lcom/fasterxml/jackson/databind/node/ObjectNode;", v1);
return v9;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v0;
v0 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance> = v0;
return;
}
}