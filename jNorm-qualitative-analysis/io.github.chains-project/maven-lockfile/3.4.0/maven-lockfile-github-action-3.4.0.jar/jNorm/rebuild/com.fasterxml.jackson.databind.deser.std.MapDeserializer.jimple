public class com.fasterxml.jackson.databind.deser.std.MapDeserializer extends com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase implements com.fasterxml.jackson.databind.deser.ContextualDeserializer, com.fasterxml.jackson.databind.deser.ResolvableDeserializer
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer;
protected boolean _standardStringKey;
protected final com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer;
protected final com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer;
protected final com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator;
protected com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer;
protected com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator;
protected final boolean _hasDefaultCreator;
protected java.util.Set _ignorableProperties;
protected java.util.Set _includableProperties;
protected com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker;
protected boolean _checkDupSquash;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.deser.ValueInstantiator, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.deser.ValueInstantiator v2;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v5;
com.fasterxml.jackson.databind.JavaType v1, v8;
com.fasterxml.jackson.databind.KeyDeserializer v3;
com.fasterxml.jackson.databind.JsonDeserializer v4;
boolean v6, v7, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.ValueInstantiator;
v3 := @parameter2: com.fasterxml.jackson.databind.KeyDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonDeserializer;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, null, null);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = v3;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = v4;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = v5;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = v2;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDefault()>();
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator> = v6;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = null;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = null;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>(v1, v3);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = v7;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = null;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _checkDupSquash> = v9;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0, v1;
com.fasterxml.jackson.databind.deser.ValueInstantiator v5;
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator v6;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v4;
java.util.Set v10, v9;
com.fasterxml.jackson.databind.KeyDeserializer v2;
com.fasterxml.jackson.databind.JsonDeserializer v3, v7;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v11;
boolean v12, v13, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)>(v1);
v2 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = v2;
v3 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = v3;
v4 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = v4;
v5 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = v5;
v6 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = v6;
v7 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = v7;
v8 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator> = v8;
v9 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties> = v9;
v10 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties> = v10;
v11 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v11;
v12 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = v12;
v13 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _checkDupSquash>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _checkDupSquash> = v13;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.deser.NullValueProvider, java.util.Set)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0, v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v5;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v4;
java.util.Set v6;
com.fasterxml.jackson.databind.KeyDeserializer v2;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v5 := @parameter4: com.fasterxml.jackson.databind.deser.NullValueProvider;
v6 := @parameter5: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set)>(v1, v2, v3, v4, v5, v6, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.deser.NullValueProvider, java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0, v1;
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator v10;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v4;
java.lang.Boolean v8;
com.fasterxml.jackson.databind.JavaType v14;
com.fasterxml.jackson.databind.KeyDeserializer v2;
com.fasterxml.jackson.databind.JsonDeserializer v11, v3;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v13;
boolean v12, v15, v16;
com.fasterxml.jackson.databind.deser.ValueInstantiator v9;
com.fasterxml.jackson.databind.deser.NullValueProvider v5;
java.util.Set v6, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v5 := @parameter4: com.fasterxml.jackson.databind.deser.NullValueProvider;
v6 := @parameter5: java.util.Set;
v7 := @parameter6: java.util.Set;
v8 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Boolean _unwrapSingle>;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, v5, v8);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = v3;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = v4;
v9 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = v9;
v10 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = v10;
v11 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = v11;
v12 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator> = v12;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties> = v6;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties> = v7;
v13 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>(v6, v7);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v13;
v14 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>(v14, v2);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = v15;
v16 = v1.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _checkDupSquash>;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _checkDupSquash> = v16;
return;
}
protected com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.deser.NullValueProvider, java.util.Set)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0, v7;
com.fasterxml.jackson.databind.deser.NullValueProvider v4;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v2;
java.util.Set v5, v6;
com.fasterxml.jackson.databind.KeyDeserializer v1;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.KeyDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.NullValueProvider;
v5 := @parameter4: java.util.Set;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set)>(v1, v2, v3, v4, v5, v6);
return v7;
}
protected com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.deser.NullValueProvider, java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0, v13;
com.fasterxml.jackson.databind.deser.NullValueProvider v10, v4;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v2, v9;
java.util.Set v11, v12, v5, v6;
com.fasterxml.jackson.databind.KeyDeserializer v1, v7;
com.fasterxml.jackson.databind.JsonDeserializer v3, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.KeyDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.NullValueProvider;
v5 := @parameter4: java.util.Set;
v6 := @parameter5: java.util.Set;
v7 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
if v7 != v1 goto label1;
v8 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
if v8 != v3 goto label1;
v9 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
if v9 != v2 goto label1;
v10 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
if v10 != v4 goto label1;
v11 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
if v11 != v5 goto label1;
v12 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
if v12 != v6 goto label1;
return v0;
label1:
v13 = new com.fasterxml.jackson.databind.deser.std.MapDeserializer;
specialinvoke v13.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set)>(v0, v1, v3, v2, v4, v5, v6);
return v13;
}
protected final boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.KeyDeserializer)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v1, v3;
com.fasterxml.jackson.databind.KeyDeserializer v2;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;
if v2 != null goto label1;
return 1;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
if v3 != null goto label2;
return 1;
label2:
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v4 == class "Ljava/lang/String;" goto label3;
if v4 != class "Ljava/lang/Object;" goto label4;
label3:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)>(v2);
if v5 == 0 goto label4;
v6 = 1;
goto label5;
label4:
v6 = 0;
label5:
return v6;
}
public void setIgnorableProperties(java.lang.String[])
{
java.util.HashSet v3;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
int v2;
java.util.Set v4, v5;
java.lang.String[] v1;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: java.lang.String[];
if v1 == null goto label1;
v2 = lengthof v1;
if v2 != 0 goto label2;
label1:
v3 = null;
goto label3;
label2:
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>(v1);
label3:
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties> = v3;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>(v4, v5);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v6;
return;
}
public void setIgnorableProperties(java.util.Set)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.util.Set v1, v3, v4, v5;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v6;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: java.util.Set;
if v1 == null goto label1;
v2 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v2 == 0 goto label2;
label1:
v3 = null;
goto label3;
label2:
v3 = v1;
label3:
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties> = v3;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>(v4, v5);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v6;
return;
}
public void setIncludableProperties(java.util.Set)
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.util.Set v1, v2, v3;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: java.util.Set;
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties> = v1;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>(v2, v3);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v4;
return;
}
public void resolve(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.JsonDeserializer v14, v27;
boolean v16, v29, v3, v35, v39;
com.fasterxml.jackson.databind.deser.SettableBeanProperty[] v32;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Object[] v21, v8;
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator v36;
com.fasterxml.jackson.databind.DeserializationConfig v18, v31, v5;
com.fasterxml.jackson.databind.MapperFeature v34;
com.fasterxml.jackson.databind.JavaType v19, v20, v22, v37, v6, v7, v9;
com.fasterxml.jackson.databind.KeyDeserializer v38;
java.lang.String v12, v13, v25, v26;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.ValueInstantiator v10, v15, v17, v2, v23, v28, v30, v33, v4;
java.lang.Class v11, v24;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDelegate()>();
if v3 == 0 goto label2;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.ValueInstantiator: com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)>(v5);
if v6 != null goto label1;
v7 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v8 = newarray (java.lang.Object)[2];
v9 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v8[0] = v9;
v10 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v11 = virtualinvoke v10.<java.lang.Object: java.lang.Class getClass()>();
v12 = virtualinvoke v11.<java.lang.Class: java.lang.String getName()>();
v8[1] = v12;
v13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid delegate-creator definition for %s: value instantiator (%s) returned true for \'canCreateUsingDelegate()\', but null for \'getDelegateType()\'", v8);
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v7, v13);
label1:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, v6, null);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = v14;
goto label4;
label2:
v15 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingArrayDelegate()>();
if v16 == 0 goto label4;
v17 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v18 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v19 = virtualinvoke v17.<com.fasterxml.jackson.databind.deser.ValueInstantiator: com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)>(v18);
if v19 != null goto label3;
v20 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v21 = newarray (java.lang.Object)[2];
v22 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v21[0] = v22;
v23 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v24 = virtualinvoke v23.<java.lang.Object: java.lang.Class getClass()>();
v25 = virtualinvoke v24.<java.lang.Class: java.lang.String getName()>();
v21[1] = v25;
v26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid delegate-creator definition for %s: value instantiator (%s) returned true for \'canCreateUsingArrayDelegate()\', but null for \'getArrayDelegateType()\'", v21);
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v20, v26);
label3:
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, v19, null);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer> = v27;
label4:
v28 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v29 = virtualinvoke v28.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromObjectWith()>();
if v29 == 0 goto label5;
v30 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v31 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v32 = virtualinvoke v30.<com.fasterxml.jackson.databind.deser.ValueInstantiator: com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)>(v31);
v33 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v34 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES>;
v35 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v34);
v36 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean)>(v1, v33, v32, v35);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator> = v36;
label5:
v37 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v38 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v39 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>(v37, v38);
v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey> = v39;
return;
}
public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v14;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v11;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v16;
com.fasterxml.jackson.databind.JsonDeserializer v10, v7;
boolean v15, v20, v23, v31, v33, v6;
com.fasterxml.jackson.databind.BeanProperty v2;
java.util.Set v12, v13, v19, v26;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0, v35;
com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value v18;
com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value v25;
java.util.HashSet v21, v27, v28, v29;
com.fasterxml.jackson.databind.DeserializationConfig v17;
com.fasterxml.jackson.databind.JavaType v4, v5, v8, v9;
com.fasterxml.jackson.databind.KeyDeserializer v3;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.Iterator v22, v30;
com.fasterxml.jackson.databind.deser.NullValueProvider v34;
java.lang.Object v24, v32;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
if v3 != null goto label01;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v5, v2);
goto label02;
label01:
v6 = v3 instanceof com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;
if v6 == 0 goto label02;
v3 = interfaceinvoke v3.<com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer: com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
label02:
v7 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
if v2 == null goto label03;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v7);
label03:
v8 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
if v7 != null goto label04;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v9, v2);
goto label05;
label04:
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v7, v2, v9);
label05:
v11 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
if v11 == null goto label06;
v11 = virtualinvoke v11.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(v2);
label06:
v12 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
v13 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
v14 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v15 = staticinvoke <com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>(v14, v2);
if v15 == 0 goto label14;
v16 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v16 == null goto label14;
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v18 = virtualinvoke v14.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(v17, v16);
if v18 == null goto label10;
v19 = virtualinvoke v18.<com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value: java.util.Set findIgnoredForDeserialization()>();
v20 = interfaceinvoke v19.<java.util.Set: boolean isEmpty()>();
if v20 != 0 goto label10;
if v12 != null goto label07;
v21 = new java.util.HashSet;
specialinvoke v21.<java.util.HashSet: void <init>()>();
goto label08;
label07:
v21 = new java.util.HashSet;
specialinvoke v21.<java.util.HashSet: void <init>(java.util.Collection)>(v12);
label08:
v12 = v21;
v22 = interfaceinvoke v19.<java.util.Set: java.util.Iterator iterator()>();
label09:
v23 = interfaceinvoke v22.<java.util.Iterator: boolean hasNext()>();
if v23 == 0 goto label10;
v24 = interfaceinvoke v22.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v12.<java.util.Set: boolean add(java.lang.Object)>(v24);
goto label09;
label10:
v25 = virtualinvoke v14.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(v17, v16);
if v25 == null goto label14;
v26 = virtualinvoke v25.<com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value: java.util.Set getIncluded()>();
if v26 == null goto label14;
v27 = new java.util.HashSet;
specialinvoke v27.<java.util.HashSet: void <init>()>();
v28 = v27;
if v13 != null goto label11;
v29 = new java.util.HashSet;
specialinvoke v29.<java.util.HashSet: void <init>(java.util.Collection)>(v26);
v28 = v29;
goto label13;
label11:
v30 = interfaceinvoke v26.<java.util.Set: java.util.Iterator iterator()>();
label12:
v31 = interfaceinvoke v30.<java.util.Iterator: boolean hasNext()>();
if v31 == 0 goto label13;
v32 = interfaceinvoke v30.<java.util.Iterator: java.lang.Object next()>();
v33 = interfaceinvoke v13.<java.util.Set: boolean contains(java.lang.Object)>(v32);
if v33 == 0 goto label12;
interfaceinvoke v27.<java.util.Set: boolean add(java.lang.Object)>(v32);
goto label12;
label13:
v13 = v28;
label14:
v34 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v10);
v35 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set)>(v3, v11, v10, v34, v12, v13);
return v35;
}
public com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.JsonDeserializer v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
return v1;
}
public com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.deser.ValueInstantiator v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
return v1;
}
public boolean isCachable()
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.util.Set v4, v5;
com.fasterxml.jackson.databind.KeyDeserializer v2;
com.fasterxml.jackson.databind.JsonDeserializer v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
if v2 != null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _ignorableProperties>;
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Set _includableProperties>;
if v5 != null goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Map>;
return v1;
}
public java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Object[] v13;
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator v3;
java.util.Map v19, v20, v4;
int v15;
com.fasterxml.jackson.databind.JavaType v23;
com.fasterxml.jackson.databind.JsonDeserializer v5, v7;
boolean v10, v18;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.ValueInstantiator v12, v16, v6;
java.lang.Class v11;
java.lang.Object v14, v17, v21, v22, v24, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;
if v3 == null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
label1:
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;
if v5 == null goto label2;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v7 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v9 = virtualinvoke v6.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v2, v8);
return v9;
label2:
v10 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _hasDefaultCreator>;
if v10 != 0 goto label3;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Class getMapClass()>();
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();
v13 = newarray (java.lang.Object)[0];
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v11, v12, v1, "no default constructor found", v13);
return v14;
label3:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v15)
{
case 1: goto label4;
case 2: goto label4;
case 3: goto label7;
case 4: goto label8;
case 5: goto label4;
case 6: goto label6;
default: goto label8;
};
label4:
v16 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v18 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey>;
if v18 == 0 goto label5;
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>(v1, v2, v17);
return v19;
label5:
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>(v1, v2, v17);
return v20;
label6:
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object _deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v21;
label7:
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v22;
label8:
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v24 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v23, v1);
return v24;
}
public java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.Map v3;
java.lang.Class v7;
java.lang.Object v8;
com.fasterxml.jackson.core.JsonToken v4, v5, v6;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void setCurrentValue(java.lang.Object)>(v3);
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v4 == v5 goto label1;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v4 == v6 goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Class getMapClass()>();
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v7, v1);
return v8;
label1:
v9 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _standardStringKey>;
if v9 == 0 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>(v1, v2, v3);
return v3;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>(v1, v2, v3);
return v3;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
public final java.lang.Class getMapClass()
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType getValueType()
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
return v1;
}
protected final java.util.Map _readAndBind(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator v11, v7;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v6;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v32;
java.util.Map v3;
com.fasterxml.jackson.databind.JsonDeserializer v5;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v24, v25;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v8;
boolean v10, v15, v26, v28, v9;
java.lang.Exception v33;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Object[] v21;
com.fasterxml.jackson.core.JsonToken v17, v18, v19, v20, v23, v27;
com.fasterxml.jackson.databind.JavaType v12, v13;
com.fasterxml.jackson.databind.KeyDeserializer v4;
java.lang.String v16;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v29;
java.lang.Class v14;
java.lang.Object v22, v30, v31;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v7 = null;
v8 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader()>();
if v8 == null goto label01;
v9 = 1;
goto label02;
label01:
v9 = 0;
label02:
v10 = v9;
if v9 == 0 goto label03;
v11 = new com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator;
v12 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
specialinvoke v11.<com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator: void <init>(java.lang.Class,java.util.Map)>(v14, v3);
v7 = v11;
label03:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v15 == 0 goto label04;
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label07;
label04:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v17 == v18 goto label06;
v19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v17 != v19 goto label05;
return v3;
label05:
v20 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v21 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v0, v20, null, v21);
label06:
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label07:
if v16 == null goto label18;
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v16, v2);
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v24 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v24 == null goto label08;
v25 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v26 = virtualinvoke v25.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v16);
if v26 == 0 goto label08;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
goto label17;
label08:
v27 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v23 != v27 goto label10;
v28 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _skipNullValues>;
if v28 != 0 goto label17;
label09:
v29 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
v30 = interfaceinvoke v29.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label12;
label10:
if v6 != null goto label11;
v30 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label12;
label11:
v30 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v6);
label12:
if v10 == 0 goto label13;
virtualinvoke v7.<com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator: void put(java.lang.Object,java.lang.Object)>(v22, v30);
goto label17;
label13:
v31 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v22, v30);
if v31 == null goto label17;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _squashDups(com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v22, v31, v30);
label14:
goto label17;
label15:
v32 := @caughtexception;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)>(v2, v7, v22, v32);
goto label17;
label16:
v33 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v33, v3, v16);
label17:
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label07;
label18:
return v3;
catch com.fasterxml.jackson.databind.deser.UnresolvedForwardReference from label08 to label09 with label15;
catch com.fasterxml.jackson.databind.deser.UnresolvedForwardReference from label09 to label14 with label15;
catch java.lang.Exception from label08 to label09 with label16;
catch java.lang.Exception from label09 to label14 with label16;
}
protected final java.util.Map _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator v10, v6;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v5;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v30;
java.util.Map v3;
com.fasterxml.jackson.databind.JsonDeserializer v4;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v22, v23;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v7;
boolean v14, v24, v26, v8, v9;
java.lang.Exception v31;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Object[] v20;
com.fasterxml.jackson.core.JsonToken v16, v17, v18, v19, v21, v25;
com.fasterxml.jackson.databind.JavaType v11, v12;
java.lang.String v15;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v27;
java.lang.Class v13;
java.lang.Object v28, v29;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v6 = null;
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader()>();
if v7 == null goto label01;
v8 = 1;
goto label02;
label01:
v8 = 0;
label02:
v9 = v8;
if v8 == 0 goto label03;
v10 = new com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator;
v11 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
specialinvoke v10.<com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator: void <init>(java.lang.Class,java.util.Map)>(v13, v3);
v6 = v10;
label03:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v14 == 0 goto label04;
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label07;
label04:
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v16 != v17 goto label05;
return v3;
label05:
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v16 == v18 goto label06;
v19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v20 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v0, v19, null, v20);
label06:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label07:
if v15 == null goto label18;
v21 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v22 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v22 == null goto label08;
v23 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v24 = virtualinvoke v23.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v15);
if v24 == 0 goto label08;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
goto label17;
label08:
v25 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v21 != v25 goto label10;
v26 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _skipNullValues>;
if v26 != 0 goto label17;
label09:
v27 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
v28 = interfaceinvoke v27.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label12;
label10:
if v5 != null goto label11;
v28 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label12;
label11:
v28 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v5);
label12:
if v9 == 0 goto label13;
virtualinvoke v6.<com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator: void put(java.lang.Object,java.lang.Object)>(v15, v28);
goto label17;
label13:
v29 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v28);
if v29 == null goto label17;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void _squashDups(com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v15, v29, v28);
label14:
goto label17;
label15:
v30 := @caughtexception;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)>(v2, v6, v15, v30);
goto label17;
label16:
v31 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v31, v3, v15);
label17:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label07;
label18:
return v3;
catch com.fasterxml.jackson.databind.deser.UnresolvedForwardReference from label08 to label09 with label15;
catch com.fasterxml.jackson.databind.deser.UnresolvedForwardReference from label09 to label14 with label15;
catch java.lang.Exception from label08 to label09 with label16;
catch java.lang.Exception from label09 to label14 with label16;
}
public java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v6;
java.util.Map v23;
com.fasterxml.jackson.databind.JsonDeserializer v5;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v12, v13;
boolean v10, v14, v17, v27, v7;
java.lang.Exception v19, v30, v34;
com.fasterxml.jackson.databind.deser.SettableBeanProperty v15;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator v3;
com.fasterxml.jackson.core.JsonToken v11, v26, v9;
com.fasterxml.jackson.databind.JavaType v20, v31, v35;
com.fasterxml.jackson.databind.KeyDeserializer v24;
java.lang.String v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v28;
java.lang.Class v21, v32, v36;
java.lang.Object v16, v18, v22, v25, v29, v33;
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>(v1, v2, null);
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v7 == 0 goto label01;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label03;
label01:
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v9);
if v10 == 0 goto label02;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
goto label03;
label02:
v8 = null;
label03:
if v8 == null goto label18;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v12 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v12 == null goto label04;
v13 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v8);
if v14 == 0 goto label04;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
goto label17;
label04:
v15 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>(v8);
if v15 == null goto label09;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v17 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: boolean assignParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)>(v15, v16);
if v17 == 0 goto label17;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
label05:
v18 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>(v2, v4);
label06:
goto label08;
label07:
v19 := @caughtexception;
v20 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v21 = virtualinvoke v20.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v19, v21, v8);
return v22;
label08:
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>(v1, v2, v18);
return v23;
label09:
v24 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v25 = virtualinvoke v24.<com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v8, v2);
label10:
v26 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v11 != v26 goto label12;
v27 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _skipNullValues>;
if v27 != 0 goto label17;
label11:
v28 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
v29 = interfaceinvoke v28.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label16;
label12:
if v6 != null goto label13;
v29 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label16;
label13:
v29 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v6);
label14:
goto label16;
label15:
v30 := @caughtexception;
v31 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v32 = virtualinvoke v31.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v30, v32, v8);
return null;
label16:
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void bufferMapProperty(java.lang.Object,java.lang.Object)>(v25, v29);
label17:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label03;
label18:
v33 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>(v2, v4);
label19:
return v33;
label20:
v34 := @caughtexception;
v35 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v36 = virtualinvoke v35.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v34, v36, v8);
return null;
catch java.lang.Exception from label05 to label06 with label07;
catch java.lang.Exception from label10 to label11 with label15;
catch java.lang.Exception from label11 to label14 with label15;
catch java.lang.Exception from label18 to label19 with label20;
}
protected final void _readAndUpdate(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Object[] v13;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v6;
java.util.Map v3;
com.fasterxml.jackson.core.JsonToken v10, v11, v12, v15, v19, v9;
com.fasterxml.jackson.databind.KeyDeserializer v4;
java.lang.String v8;
com.fasterxml.jackson.databind.JsonDeserializer v5;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v16, v17;
boolean v18, v20, v7;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v21;
java.lang.Exception v25;
java.lang.Object v14, v22, v23, v24;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v7 == 0 goto label01;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label04;
label01:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v9 != v10 goto label02;
return;
label02:
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v9 == v11 goto label03;
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v13 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v0, v12, null, v13);
label03:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label04:
if v8 == null goto label16;
v14 = virtualinvoke v4.<com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v8, v2);
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v16 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v16 == null goto label05;
v17 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v18 = virtualinvoke v17.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v8);
if v18 == 0 goto label05;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
goto label15;
label05:
v19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v15 != v19 goto label08;
v20 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _skipNullValues>;
if v20 != 0 goto label15;
label06:
v21 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
v22 = interfaceinvoke v21.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v14, v22);
label07:
goto label15;
label08:
v23 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v14);
if v23 == null goto label10;
if v6 != null goto label09;
v24 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v23);
goto label12;
label09:
v24 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.lang.Object)>(v1, v2, v6, v23);
goto label12;
label10:
if v6 != null goto label11;
v24 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label12;
label11:
v24 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v6);
label12:
if v24 == v23 goto label15;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v14, v24);
label13:
goto label15;
label14:
v25 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v25, v3, v8);
label15:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label04;
label16:
return;
catch java.lang.Exception from label05 to label06 with label14;
catch java.lang.Exception from label06 to label07 with label14;
catch java.lang.Exception from label08 to label13 with label14;
}
protected final void _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
java.lang.Object[] v12;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v5;
java.util.Map v3;
com.fasterxml.jackson.core.JsonToken v10, v11, v13, v17, v8, v9;
java.lang.String v7;
com.fasterxml.jackson.databind.JsonDeserializer v4;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v14, v15;
boolean v16, v18, v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v19;
java.lang.Exception v23;
java.lang.Object v20, v21, v22;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v6 == 0 goto label01;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label04;
label01:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v8 != v9 goto label02;
return;
label02:
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v8 == v10 goto label03;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v12 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v0, v11, null, v12);
label03:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label04:
if v7 == null goto label16;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v14 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v14 == null goto label05;
v15 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v7);
if v16 == 0 goto label05;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
goto label15;
label05:
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v13 != v17 goto label08;
v18 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _skipNullValues>;
if v18 != 0 goto label15;
label06:
v19 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
v20 = interfaceinvoke v19.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v20);
label07:
goto label15;
label08:
v21 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v7);
if v21 == null goto label10;
if v5 != null goto label09;
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v21);
goto label12;
label09:
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.lang.Object)>(v1, v2, v5, v21);
goto label12;
label10:
if v5 != null goto label11;
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label12;
label11:
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v5);
label12:
if v22 == v21 goto label15;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v22);
label13:
goto label15;
label14:
v23 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v23, v3, v7);
label15:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label04;
label16:
return;
catch java.lang.Exception from label05 to label06 with label14;
catch java.lang.Exception from label06 to label07 with label14;
catch java.lang.Exception from label08 to label13 with label14;
}
protected void _squashDups(com.fasterxml.jackson.databind.DeserializationContext, java.util.Map, java.lang.Object, java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.core.StreamReadCapability v7;
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.ArrayList v10;
java.util.Map v2;
java.lang.Object v3, v4, v5;
boolean v6, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: java.lang.Object;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean _checkDupSquash>;
if v6 == 0 goto label2;
v7 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v7);
if v8 == 0 goto label2;
v9 = v4 instanceof java.util.List;
if v9 == 0 goto label1;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v5);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
goto label2;
label1:
v10 = new java.util.ArrayList;
specialinvoke v10.<java.util.ArrayList: void <init>()>();
virtualinvoke v10.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
virtualinvoke v10.<java.util.ArrayList: boolean add(java.lang.Object)>(v5);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v10);
label2:
return;
}
private void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator, java.lang.Object, com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.MapDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator v2;
java.lang.Object[] v6;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v8;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring v7;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v4;
java.lang.Object v3;
java.lang.String v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
if v2 != null goto label1;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unresolved forward reference but no identity info: \u0001");
v6 = newarray (java.lang.Object)[0];
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, v5, v6);
label1:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object)>(v4, v3);
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid()>();
virtualinvoke v8.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: void appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring)>(v7);
return;
}
}