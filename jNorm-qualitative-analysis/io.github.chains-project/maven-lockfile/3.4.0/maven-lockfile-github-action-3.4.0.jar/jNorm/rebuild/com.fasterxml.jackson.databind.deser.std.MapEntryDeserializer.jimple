public class com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer extends com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase implements com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer;
protected final com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer;
protected final com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v4;
java.lang.IllegalArgumentException v6;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
int v5;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.KeyDeserializer v2;
java.lang.String v7;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: int containedTypeCount()>();
if v5 == 2 goto label1;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing generic type information for \u0001");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = v3;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer)
{
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0, v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v4;
com.fasterxml.jackson.databind.KeyDeserializer v2;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)>(v1);
v2 = v1.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = v2;
v3 = v1.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = v3;
v4 = v1.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer, com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
{
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0, v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v4;
com.fasterxml.jackson.databind.KeyDeserializer v2;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.KeyDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)>(v1);
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = v3;
v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = v4;
return;
}
protected com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer)
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v2, v6;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0, v7;
com.fasterxml.jackson.databind.KeyDeserializer v1, v4;
com.fasterxml.jackson.databind.JsonDeserializer v3, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.KeyDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
if v4 != v1 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
if v5 != v3 goto label1;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
if v6 != v2 goto label1;
return v0;
label1:
v7 = new com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
specialinvoke v7.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v0, v1, v3, v2);
return v7;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Map>;
return v1;
}
public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v12;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0, v13;
com.fasterxml.jackson.databind.JavaType v10, v4, v5, v9;
com.fasterxml.jackson.databind.KeyDeserializer v3;
com.fasterxml.jackson.databind.JsonDeserializer v11, v7, v8;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedType(int)>(0);
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v5, v2);
goto label2;
label1:
v6 = v3 instanceof com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;
if v6 == 0 goto label2;
v3 = interfaceinvoke v3.<com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer: com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
label2:
v7 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v7);
v9 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedType(int)>(1);
if v8 != null goto label3;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v10, v2);
goto label4;
label3:
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v8, v2, v10);
label4:
v12 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
if v12 == null goto label5;
v12 = virtualinvoke v12.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(v2);
label5:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>(v3, v12, v11);
return v13;
}
public com.fasterxml.jackson.databind.JavaType getContentType()
{
com.fasterxml.jackson.databind.JavaType v1, v2;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JavaType _containerType>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedType(int)>(1);
return v2;
}
public com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()
{
com.fasterxml.jackson.databind.JsonDeserializer v1;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
return v1;
}
public java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v19;
com.fasterxml.jackson.databind.JsonDeserializer v18;
java.lang.Exception v25;
java.lang.Object[] v13, v29, v32;
com.fasterxml.jackson.core.JsonToken v11, v12, v23, v24, v26, v27, v28, v3, v4, v5, v6, v7;
com.fasterxml.jackson.databind.JavaType v9;
com.fasterxml.jackson.databind.KeyDeserializer v17;
java.lang.String v20, v30, v31;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
java.util.AbstractMap$SimpleEntry v33;
java.lang.Class v15;
java.lang.Object v10, v14, v16, v21, v22, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v3 != v4 goto label01;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
goto label03;
label01:
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v3 == v5 goto label03;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v3 == v6 goto label03;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v3 != v7 goto label02;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v8;
label02:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v9, v1);
return v10;
label03:
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v3 == v11 goto label05;
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v3 != v12 goto label04;
v13 = newarray (java.lang.Object)[0];
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot deserialize a Map.Entry out of empty JSON Object", v13);
return v14;
label04:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Class handledType()>();
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v15, v1);
return v16;
label05:
v17 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;
v18 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v19 = v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
v21 = virtualinvoke v17.<com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v20, v2);
v22 = null;
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
label06:
v24 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v23 != v24 goto label07;
v22 = virtualinvoke v18.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label11;
label07:
if v19 != null goto label08;
v22 = virtualinvoke v18.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label11;
label08:
v22 = virtualinvoke v18.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(v1, v2, v19);
label09:
goto label11;
label10:
v25 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v25, class "Ljava/util/Map$Entry;", v20);
label11:
v26 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v27 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v26 == v27 goto label14;
v28 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v26 != v28 goto label12;
v29 = newarray (java.lang.Object)[1];
v30 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
v29[0] = v30;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Problem binding JSON into Map.Entry: more than one entry in JSON (second field: \'%s\')", v29);
goto label13;
label12:
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.core.JsonToken)>(v26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Problem binding JSON into Map.Entry: unexpected content after JSON Object entry: \u0001");
v32 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, v31, v32);
label13:
return null;
label14:
v33 = new java.util.AbstractMap$SimpleEntry;
specialinvoke v33.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(v21, v22);
return v33;
catch java.lang.Exception from label06 to label09 with label10;
}
public java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map$Entry) throws java.io.IOException
{
java.lang.IllegalStateException v4;
java.util.Map$Entry v3;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map$Entry;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot update Map.Entry values");
throw v4;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer v0;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
}