public final class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer extends com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer
{
private static final long serialVersionUID;
static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance;
static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance;
public void <init>(java.lang.Class, java.lang.Integer)
{
com.fasterxml.jackson.databind.type.LogicalType v3;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer v0;
java.lang.Class v1;
java.lang.Integer v2, v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Integer;
v3 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object)>(v1, v3, v2, v4);
return;
}
public boolean isCachable()
{
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer;
return 1;
}
public java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Integer v5, v8, v9;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer v0;
int v4, v7;
boolean v3, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedNumberIntToken()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
return v5;
label1:
v6 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: boolean _primitive>;
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
return v8;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/lang/Integer;");
return v9;
}
public java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Integer v10, v6, v9;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer v0;
int v5, v8;
boolean v4, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedNumberIntToken()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: boolean _primitive>;
if v7 == 0 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v8);
return v9;
label2:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/lang/Integer;");
return v10;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer v0, v3;
java.lang.Class v1;
java.lang.Integer v2;
v0 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer;
v1 = <java.lang.Integer: java.lang.Class TYPE>;
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>(v1, v2);
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance> = v0;
v3 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>(class "Ljava/lang/Integer;", null);
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance> = v3;
return;
}
}