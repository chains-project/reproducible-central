public class com.fasterxml.jackson.databind.exc.MismatchedInputException extends com.fasterxml.jackson.databind.JsonMappingException
{
protected java.lang.Class _targetType;
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v0;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.exc.MismatchedInputException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 = null;
specialinvoke v0.<com.fasterxml.jackson.databind.exc.MismatchedInputException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.core.JsonLocation)
{
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.exc.MismatchedInputException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation)>(v1, v2, v3);
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Class)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v0;
java.lang.Class v3;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.exc.MismatchedInputException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String)>(v1, v2);
v0.<com.fasterxml.jackson.databind.exc.MismatchedInputException: java.lang.Class _targetType> = v3;
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v0;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.exc.MismatchedInputException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String)>(v1, v2);
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType)>(v3);
v0.<com.fasterxml.jackson.databind.exc.MismatchedInputException: java.lang.Class _targetType> = v4;
return;
}
public static com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser, java.lang.String)
{
com.fasterxml.jackson.core.JsonParser v0;
com.fasterxml.jackson.databind.exc.MismatchedInputException v3;
java.lang.Class v2;
java.lang.String v1;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: java.lang.String;
v2 = null;
v3 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v0, v2, v1);
return v3;
}
public static com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType, java.lang.String)
{
com.fasterxml.jackson.core.JsonParser v0;
com.fasterxml.jackson.databind.exc.MismatchedInputException v3;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: java.lang.String;
v3 = new com.fasterxml.jackson.databind.exc.MismatchedInputException;
specialinvoke v3.<com.fasterxml.jackson.databind.exc.MismatchedInputException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v0, v2, v1);
return v3;
}
public static com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser, java.lang.Class, java.lang.String)
{
com.fasterxml.jackson.core.JsonParser v0;
com.fasterxml.jackson.databind.exc.MismatchedInputException v3;
java.lang.Class v1;
java.lang.String v2;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.lang.String;
v3 = new com.fasterxml.jackson.databind.exc.MismatchedInputException;
specialinvoke v3.<com.fasterxml.jackson.databind.exc.MismatchedInputException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Class)>(v0, v2, v1);
return v3;
}
public com.fasterxml.jackson.databind.exc.MismatchedInputException setTargetType(com.fasterxml.jackson.databind.JavaType)
{
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v0;
v0 := @this: com.fasterxml.jackson.databind.exc.MismatchedInputException;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v0.<com.fasterxml.jackson.databind.exc.MismatchedInputException: java.lang.Class _targetType> = v2;
return v0;
}
public java.lang.Class getTargetType()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v0;
v0 := @this: com.fasterxml.jackson.databind.exc.MismatchedInputException;
v1 = v0.<com.fasterxml.jackson.databind.exc.MismatchedInputException: java.lang.Class _targetType>;
return v1;
}
}