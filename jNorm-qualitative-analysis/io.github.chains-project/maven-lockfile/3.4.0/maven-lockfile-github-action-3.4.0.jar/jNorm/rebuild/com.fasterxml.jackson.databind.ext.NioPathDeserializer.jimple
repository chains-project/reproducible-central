public class com.fasterxml.jackson.databind.ext.NioPathDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
private static final long serialVersionUID;
private static final boolean areWindowsFilePathsSupported;
public void <init>()
{
com.fasterxml.jackson.databind.ext.NioPathDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.ext.NioPathDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/nio/file/Path;");
return;
}
public java.nio.file.Path deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.net.URISyntaxException v18;
java.net.URI v17;
java.nio.file.Path v16, v21, v30, v9;
boolean v10, v13, v26, v29, v4;
java.util.ServiceLoader v24;
java.lang.Exception v36;
com.fasterxml.jackson.databind.ext.NioPathDeserializer v0;
java.lang.String[] v15, v8;
int v11, v7;
java.util.ServiceConfigurationError v33;
com.fasterxml.jackson.core.JsonToken v3;
java.lang.String v23, v28, v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.Iterator v25;
java.nio.file.FileSystemNotFoundException v22;
char v12, v14;
java.lang.Class v19, v31, v34, v37;
java.lang.Object v20, v27, v32, v35, v38, v5;
v0 := @this: com.fasterxml.jackson.databind.ext.NioPathDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 != 0 goto label01;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Ljava/nio/file/Path;", v1);
return v5;
label01:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v7 = virtualinvoke v6.<java.lang.String: int indexOf(int)>(58);
if v7 >= 0 goto label02;
v8 = newarray (java.lang.String)[0];
v9 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v6, v8);
return v9;
label02:
v10 = <com.fasterxml.jackson.databind.ext.NioPathDeserializer: boolean areWindowsFilePathsSupported>;
if v10 == 0 goto label03;
v11 = virtualinvoke v6.<java.lang.String: int length()>();
if v11 < 2 goto label03;
v12 = virtualinvoke v6.<java.lang.String: char charAt(int)>(0);
v13 = staticinvoke <java.lang.Character: boolean isLetter(char)>(v12);
if v13 == 0 goto label03;
v14 = virtualinvoke v6.<java.lang.String: char charAt(int)>(1);
if v14 != 58 goto label03;
v15 = newarray (java.lang.String)[0];
v16 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v6, v15);
return v16;
label03:
v17 = new java.net.URI;
specialinvoke v17.<java.net.URI: void <init>(java.lang.String)>(v6);
label04:
goto label06;
label05:
v18 := @caughtexception;
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.ext.NioPathDeserializer: java.lang.Class handledType()>();
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>(v19, v6, v18);
return v20;
label06:
v21 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.net.URI)>(v17);
label07:
return v21;
label08:
v22 := @caughtexception;
label09:
v23 = virtualinvoke v17.<java.net.URI: java.lang.String getScheme()>();
v24 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(class "Ljava/nio/file/spi/FileSystemProvider;");
v25 = virtualinvoke v24.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label10:
v26 = interfaceinvoke v25.<java.util.Iterator: boolean hasNext()>();
if v26 == 0 goto label12;
v27 = interfaceinvoke v25.<java.util.Iterator: java.lang.Object next()>();
v28 = virtualinvoke v27.<java.nio.file.spi.FileSystemProvider: java.lang.String getScheme()>();
v29 = virtualinvoke v28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v23);
if v29 == 0 goto label10;
v30 = virtualinvoke v27.<java.nio.file.spi.FileSystemProvider: java.nio.file.Path getPath(java.net.URI)>(v17);
label11:
return v30;
label12:
v31 = virtualinvoke v0.<com.fasterxml.jackson.databind.ext.NioPathDeserializer: java.lang.Class handledType()>();
v32 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>(v31, v6, v22);
label13:
return v32;
label14:
v33 := @caughtexception;
virtualinvoke v33.<java.util.ServiceConfigurationError: void addSuppressed(java.lang.Throwable)>(v22);
v34 = virtualinvoke v0.<com.fasterxml.jackson.databind.ext.NioPathDeserializer: java.lang.Class handledType()>();
v35 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>(v34, v6, v33);
return v35;
label15:
v36 := @caughtexception;
v37 = virtualinvoke v0.<com.fasterxml.jackson.databind.ext.NioPathDeserializer: java.lang.Class handledType()>();
v38 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>(v37, v6, v36);
return v38;
catch java.net.URISyntaxException from label03 to label04 with label05;
catch java.nio.file.FileSystemNotFoundException from label06 to label07 with label08;
catch java.util.ServiceConfigurationError from label09 to label11 with label14;
catch java.util.ServiceConfigurationError from label12 to label13 with label14;
catch java.lang.Exception from label06 to label07 with label15;
}
static void <clinit>()
{
char v7, v9;
java.io.File v4;
int v2, v3, v6;
java.lang.String v5;
java.io.File[] v1;
boolean v0, v8;
v0 = 0;
v1 = staticinvoke <java.io.File: java.io.File[] listRoots()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<java.io.File: java.lang.String getPath()>();
v6 = virtualinvoke v5.<java.lang.String: int length()>();
if v6 < 2 goto label2;
v7 = virtualinvoke v5.<java.lang.String: char charAt(int)>(0);
v8 = staticinvoke <java.lang.Character: boolean isLetter(char)>(v7);
if v8 == 0 goto label2;
v9 = virtualinvoke v5.<java.lang.String: char charAt(int)>(1);
if v9 != 58 goto label2;
v0 = 1;
goto label3;
label2:
v3 = v3 + 1;
goto label1;
label3:
<com.fasterxml.jackson.databind.ext.NioPathDeserializer: boolean areWindowsFilePathsSupported> = v0;
return;
}
}