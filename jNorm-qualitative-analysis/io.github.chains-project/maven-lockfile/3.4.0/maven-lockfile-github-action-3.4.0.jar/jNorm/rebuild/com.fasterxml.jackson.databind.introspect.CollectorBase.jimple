class com.fasterxml.jackson.databind.introspect.CollectorBase extends java.lang.Object
{
protected static final com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS;
protected static final java.lang.'annotation'.Annotation[] NO_ANNOTATIONS;
protected final com.fasterxml.jackson.databind.AnnotationIntrospector _intr;
protected void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector)
{
com.fasterxml.jackson.databind.introspect.CollectorBase v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.CollectorBase;
v1 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.AnnotationIntrospector _intr> = v1;
return;
}
protected final com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.'annotation'.Annotation[])
{
com.fasterxml.jackson.databind.AnnotationIntrospector v6;
java.lang.'annotation'.Annotation[] v1;
com.fasterxml.jackson.databind.introspect.CollectorBase v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v2;
int v3, v4;
java.lang.'annotation'.Annotation v5;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.introspect.CollectorBase;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector()>();
v3 = 0;
v4 = lengthof v1;
label1:
if v3 >= v4 goto label3;
v5 = v1[v3];
v2 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v5);
v6 = v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v5);
if v7 == 0 goto label2;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v2, v5);
label2:
v3 = v3 + 1;
goto label1;
label3:
return v2;
}
protected final com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.'annotation'.Annotation[])
{
com.fasterxml.jackson.databind.AnnotationIntrospector v6;
java.lang.'annotation'.Annotation[] v2;
com.fasterxml.jackson.databind.introspect.CollectorBase v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1;
int v3, v4;
java.lang.'annotation'.Annotation v5;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.introspect.CollectorBase;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = 0;
v4 = lengthof v2;
label1:
if v3 >= v4 goto label3;
v5 = v2[v3];
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v5);
v6 = v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v5);
if v7 == 0 goto label2;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v1, v5);
label2:
v3 = v3 + 1;
goto label1;
label3:
return v1;
}
protected final com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.'annotation'.Annotation)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v9;
java.lang.'annotation'.Annotation[] v4;
com.fasterxml.jackson.databind.introspect.CollectorBase v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1, v12;
int v5, v6;
java.lang.'annotation'.Annotation v2, v7;
java.lang.Class v3;
boolean v10, v11, v8;
v0 := @this: com.fasterxml.jackson.databind.introspect.CollectorBase;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.'annotation'.Annotation;
v3 = interfaceinvoke v2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v3);
v5 = 0;
v6 = lengthof v4;
label1:
if v5 >= v6 goto label4;
v7 = v4[v5];
v8 = staticinvoke <com.fasterxml.jackson.databind.introspect.CollectorBase: boolean _ignorableAnnotation(java.lang.'annotation'.Annotation)>(v7);
if v8 != 0 goto label3;
v9 = v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v7);
if v10 == 0 goto label2;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: boolean isPresent(java.lang.'annotation'.Annotation)>(v7);
if v11 != 0 goto label3;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v7);
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v12, v7);
goto label3;
label2:
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v7);
label3:
v5 = v5 + 1;
goto label1;
label4:
return v1;
}
protected final com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.'annotation'.Annotation[])
{
com.fasterxml.jackson.databind.AnnotationIntrospector v7;
java.lang.'annotation'.Annotation[] v2;
com.fasterxml.jackson.databind.introspect.CollectorBase v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1;
int v3, v4;
java.lang.'annotation'.Annotation v5;
boolean v6, v8;
v0 := @this: com.fasterxml.jackson.databind.introspect.CollectorBase;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = 0;
v4 = lengthof v2;
label1:
if v3 >= v4 goto label3;
v5 = v2[v3];
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: boolean isPresent(java.lang.'annotation'.Annotation)>(v5);
if v6 != 0 goto label2;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v5);
v7 = v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v5);
if v8 == 0 goto label2;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v1, v5);
label2:
v3 = v3 + 1;
goto label1;
label3:
return v1;
}
protected final com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.'annotation'.Annotation)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v10;
java.lang.'annotation'.Annotation[] v4;
com.fasterxml.jackson.databind.introspect.CollectorBase v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1;
int v5, v6;
java.lang.'annotation'.Annotation v2, v7;
java.lang.Class v3;
boolean v11, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.CollectorBase;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.'annotation'.Annotation;
v3 = interfaceinvoke v2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v3);
v5 = 0;
v6 = lengthof v4;
label1:
if v5 >= v6 goto label3;
v7 = v4[v5];
v8 = staticinvoke <com.fasterxml.jackson.databind.introspect.CollectorBase: boolean _ignorableAnnotation(java.lang.'annotation'.Annotation)>(v7);
if v8 != 0 goto label2;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: boolean isPresent(java.lang.'annotation'.Annotation)>(v7);
if v9 != 0 goto label2;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v7);
v10 = v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v7);
if v11 == 0 goto label2;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v1, v7);
label2:
v5 = v5 + 1;
goto label1;
label3:
return v1;
}
protected static final boolean _ignorableAnnotation(java.lang.'annotation'.Annotation)
{
java.lang.'annotation'.Annotation v0;
boolean v1, v2, v3;
v0 := @parameter0: java.lang.'annotation'.Annotation;
v1 = v0 instanceof java.lang.'annotation'.Target;
if v1 != 0 goto label1;
v2 = v0 instanceof java.lang.'annotation'.Retention;
if v2 == 0 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
static com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()
{
com.fasterxml.jackson.databind.introspect.AnnotationMap v0;
v0 = new com.fasterxml.jackson.databind.introspect.AnnotationMap;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotationMap: void <init>()>();
return v0;
}
static com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int)
{
com.fasterxml.jackson.databind.introspect.AnnotationMap v4;
com.fasterxml.jackson.databind.introspect.AnnotationMap[] v1, v2;
int v0, v3;
v0 := @parameter0: int;
if v0 != 0 goto label1;
v1 = <com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS>;
return v1;
label1:
v2 = newarray (com.fasterxml.jackson.databind.introspect.AnnotationMap)[v0];
v3 = 0;
label2:
if v3 >= v0 goto label3;
v4 = staticinvoke <com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap()>();
v2[v3] = v4;
v3 = v3 + 1;
goto label2;
label3:
return v2;
}
static void <clinit>()
{
java.lang.'annotation'.Annotation[] v1;
com.fasterxml.jackson.databind.introspect.AnnotationMap[] v0;
v0 = newarray (com.fasterxml.jackson.databind.introspect.AnnotationMap)[0];
<com.fasterxml.jackson.databind.introspect.CollectorBase: com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS> = v0;
v1 = newarray (java.lang.'annotation'.Annotation)[0];
<com.fasterxml.jackson.databind.introspect.CollectorBase: java.lang.'annotation'.Annotation[] NO_ANNOTATIONS> = v1;
return;
}
}