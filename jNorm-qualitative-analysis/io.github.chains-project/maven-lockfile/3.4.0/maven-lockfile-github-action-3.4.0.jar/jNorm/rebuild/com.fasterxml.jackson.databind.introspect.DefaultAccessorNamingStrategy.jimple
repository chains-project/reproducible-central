public class com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy extends com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy
{
protected final com.fasterxml.jackson.databind.cfg.MapperConfig _config;
protected final com.fasterxml.jackson.databind.introspect.AnnotatedClass _forClass;
protected final com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator;
protected final boolean _stdBeanNaming;
protected final boolean _isGettersNonBoolean;
protected final java.lang.String _getterPrefix;
protected final java.lang.String _isGetterPrefix;
protected final java.lang.String _mutatorPrefix;
protected void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedClass, java.lang.String, java.lang.String, java.lang.String, com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator)
{
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator v6;
com.fasterxml.jackson.databind.MapperFeature v7, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4, v5;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
boolean v10, v8;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy: void <init>()>();
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.cfg.MapperConfig _config> = v1;
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.introspect.AnnotatedClass _forClass> = v2;
v7 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STD_BEAN_NAMING>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v7);
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _stdBeanNaming> = v8;
v9 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_IS_GETTERS_FOR_NON_BOOLEAN>;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v9);
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _isGettersNonBoolean> = v10;
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _mutatorPrefix> = v3;
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _getterPrefix> = v4;
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _isGetterPrefix> = v5;
v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator> = v6;
return;
}
public java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
int v11, v14;
com.fasterxml.jackson.databind.JavaType v5;
java.lang.String v10, v12, v13, v2, v3, v7;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v1;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
boolean v4, v6, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _isGetterPrefix>;
if v3 == null goto label4;
v4 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _isGettersNonBoolean>;
if v4 != 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.JavaType getType()>();
v6 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _booleanType(com.fasterxml.jackson.databind.JavaType)>(v5);
if v6 == 0 goto label4;
label1:
v7 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _isGetterPrefix>;
v8 = virtualinvoke v2.<java.lang.String: boolean startsWith(java.lang.String)>(v7);
if v8 == 0 goto label4;
v9 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _stdBeanNaming>;
if v9 == 0 goto label2;
v10 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _isGetterPrefix>;
v11 = virtualinvoke v10.<java.lang.String: int length()>();
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String stdManglePropertyName(java.lang.String,int)>(v2, v11);
goto label3;
label2:
v13 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _isGetterPrefix>;
v14 = virtualinvoke v13.<java.lang.String: int length()>();
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String legacyManglePropertyName(java.lang.String,int)>(v2, v14);
label3:
return v12;
label4:
return null;
}
private boolean _booleanType(com.fasterxml.jackson.databind.JavaType)
{
java.lang.Class v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
boolean v2, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v2 == 0 goto label1;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getReferencedType()>();
label1:
v3 = <java.lang.Boolean: java.lang.Class TYPE>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(v3);
if v4 != 0 goto label2;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Boolean;");
if v5 != 0 goto label2;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/util/concurrent/atomic/AtomicBoolean;");
if v6 == 0 goto label3;
label2:
return 1;
label3:
return 0;
}
public java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
int v14, v17;
java.lang.String v13, v15, v16, v2, v3, v4, v6, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v1;
boolean v10, v11, v12, v5, v7, v8;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _getterPrefix>;
if v3 == null goto label5;
v4 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _getterPrefix>;
v5 = virtualinvoke v2.<java.lang.String: boolean startsWith(java.lang.String)>(v4);
if v5 == 0 goto label5;
v6 = "getCallbacks";
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v7 == 0 goto label1;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>(v1);
if v8 == 0 goto label2;
return null;
label1:
v9 = "getMetaClass";
v10 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v10 == 0 goto label2;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>(v1);
if v11 == 0 goto label2;
return null;
label2:
v12 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _stdBeanNaming>;
if v12 == 0 goto label3;
v13 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _getterPrefix>;
v14 = virtualinvoke v13.<java.lang.String: int length()>();
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String stdManglePropertyName(java.lang.String,int)>(v2, v14);
goto label4;
label3:
v16 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _getterPrefix>;
v17 = virtualinvoke v16.<java.lang.String: int length()>();
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String legacyManglePropertyName(java.lang.String,int)>(v2, v17);
label4:
return v15;
label5:
return null;
}
public java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
int v11, v8;
java.lang.String v10, v2, v3, v4, v7, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v1;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _mutatorPrefix>;
if v3 == null goto label3;
v4 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _mutatorPrefix>;
v5 = virtualinvoke v2.<java.lang.String: boolean startsWith(java.lang.String)>(v4);
if v5 == 0 goto label3;
v6 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: boolean _stdBeanNaming>;
if v6 == 0 goto label1;
v7 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _mutatorPrefix>;
v8 = virtualinvoke v7.<java.lang.String: int length()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String stdManglePropertyName(java.lang.String,int)>(v2, v8);
goto label2;
label1:
v10 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String _mutatorPrefix>;
v11 = virtualinvoke v10.<java.lang.String: int length()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: java.lang.String legacyManglePropertyName(java.lang.String,int)>(v2, v11);
label2:
return v9;
label3:
return null;
}
public java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField, java.lang.String)
{
com.fasterxml.jackson.databind.introspect.AnnotatedField v1;
java.lang.String v2;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v2 := @parameter1: java.lang.String;
return v2;
}
protected java.lang.String legacyManglePropertyName(java.lang.String, int)
{
int v11, v12, v2, v3;
java.lang.String v1, v15, v9;
boolean v7;
char v13, v14, v4, v8;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator v5, v6;
java.lang.StringBuilder v10;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
if v3 != v2 goto label1;
return null;
label1:
v4 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
v5 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator>;
if v5 == null goto label2;
v6 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator>;
v7 = interfaceinvoke v6.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator: boolean accept(char,java.lang.String,int)>(v4, v1, v2);
if v7 != 0 goto label2;
return null;
label2:
v8 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v4);
if v4 != v8 goto label3;
v9 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v2);
return v9;
label3:
v10 = new java.lang.StringBuilder;
v11 = v3 - v2;
specialinvoke v10.<java.lang.StringBuilder: void <init>(int)>(v11);
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
v12 = v2 + 1;
label4:
if v12 >= v3 goto label6;
v13 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v12);
v14 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v13);
if v13 != v14 goto label5;
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v1, v12, v3);
goto label6;
label5:
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v14);
v12 = v12 + 1;
goto label4;
label6:
v15 = virtualinvoke v10.<java.lang.StringBuilder: java.lang.String toString()>();
return v15;
}
protected java.lang.String stdManglePropertyName(java.lang.String, int)
{
int v10, v11, v16, v17, v2, v3;
java.lang.String v1, v14, v18, v9;
boolean v13, v7;
char v12, v4, v8;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator v5, v6;
java.lang.StringBuilder v15;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
if v3 != v2 goto label1;
return null;
label1:
v4 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
v5 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator>;
if v5 == null goto label2;
v6 = v0.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator>;
v7 = interfaceinvoke v6.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator: boolean accept(char,java.lang.String,int)>(v4, v1, v2);
if v7 != 0 goto label2;
return null;
label2:
v8 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v4);
if v4 != v8 goto label3;
v9 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v2);
return v9;
label3:
v10 = v2 + 1;
if v10 >= v3 goto label4;
v11 = v2 + 1;
v12 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v11);
v13 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(v12);
if v13 == 0 goto label4;
v14 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v2);
return v14;
label4:
v15 = new java.lang.StringBuilder;
v16 = v3 - v2;
specialinvoke v15.<java.lang.StringBuilder: void <init>(int)>(v16);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
v17 = v2 + 1;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v1, v17, v3);
v18 = virtualinvoke v15.<java.lang.StringBuilder: java.lang.String toString()>();
return v18;
}
protected boolean _isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
{
java.lang.Class v2, v4;
java.lang.String v5;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v1;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
boolean v10, v3, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawType()>();
v3 = virtualinvoke v2.<java.lang.Class: boolean isArray()>();
if v3 == 0 goto label4;
v4 = virtualinvoke v2.<java.lang.Class: java.lang.Class getComponentType()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = virtualinvoke v5.<java.lang.String: boolean contains(java.lang.CharSequence)>(".cglib");
if v6 == 0 goto label4;
v7 = virtualinvoke v5.<java.lang.String: boolean startsWith(java.lang.String)>("net.sf.cglib");
if v7 != 0 goto label1;
v8 = virtualinvoke v5.<java.lang.String: boolean startsWith(java.lang.String)>("org.hibernate.repackage.cglib");
if v8 != 0 goto label1;
v9 = virtualinvoke v5.<java.lang.String: boolean startsWith(java.lang.String)>("org.springframework.cglib");
if v9 == 0 goto label2;
label1:
v10 = 1;
goto label3;
label2:
v10 = 0;
label3:
return v10;
label4:
return 0;
}
protected boolean _isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
{
java.lang.Class v2;
java.lang.String v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v1;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawType()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = virtualinvoke v3.<java.lang.String: boolean startsWith(java.lang.String)>("groovy.lang");
return v4;
}
}