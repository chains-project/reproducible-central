class com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor extends java.lang.Object
{
private final java.lang.reflect.Method RECORD_GET_RECORD_COMPONENTS;
private final java.lang.reflect.Method RECORD_COMPONENT_GET_NAME;
private final java.lang.reflect.Method RECORD_COMPONENT_GET_TYPE;
private static final com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor INSTANCE;
private static final java.lang.RuntimeException PROBLEM;
private void <init>() throws java.lang.RuntimeException
{
java.lang.Object[] v11;
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor v0;
java.lang.String v13, v14, v15;
java.lang.reflect.Method v3, v6, v8;
java.lang.Class[] v2, v5, v7;
java.lang.RuntimeException v10;
java.lang.Exception v9;
java.lang.Class v1, v12, v4;
v0 := @this: com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor;
specialinvoke v0.<java.lang.Object: void <init>()>();
label1:
v1 = class "Ljava/lang/Class;";
v2 = newarray (java.lang.Class)[0];
v3 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getRecordComponents", v2);
v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_GET_RECORD_COMPONENTS> = v3;
v4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.reflect.RecordComponent");
v5 = newarray (java.lang.Class)[0];
v6 = virtualinvoke v4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getName", v5);
v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_COMPONENT_GET_NAME> = v6;
v7 = newarray (java.lang.Class)[0];
v8 = virtualinvoke v4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getType", v7);
v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_COMPONENT_GET_TYPE> = v8;
label2:
goto label4;
label3:
v9 := @caughtexception;
v10 = new java.lang.RuntimeException;
v11 = newarray (java.lang.Object)[2];
v12 = virtualinvoke v9.<java.lang.Object: java.lang.Class getClass()>();
v13 = virtualinvoke v12.<java.lang.Class: java.lang.String getName()>();
v11[0] = v13;
v14 = virtualinvoke v9.<java.lang.Exception: java.lang.String getMessage()>();
v11[1] = v14;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to access Methods needed to support `java.lang.Record`: (%s) %s", v11);
specialinvoke v10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v15, v9);
throw v10;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
public static com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor instance()
{
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor v2;
java.lang.RuntimeException v0, v1;
v0 = <com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.RuntimeException PROBLEM>;
if v0 == null goto label1;
v1 = <com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.RuntimeException PROBLEM>;
throw v1;
label1:
v2 = <com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor INSTANCE>;
return v2;
}
public java.lang.String[] getRecordFieldNames(java.lang.Class) throws java.lang.IllegalArgumentException
{
java.lang.Object[] v13, v2, v9;
java.lang.String[] v4;
java.lang.Integer v14, v16;
int v15, v3, v5, v6;
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor v0;
java.lang.String v17, v18;
java.lang.reflect.Method v7;
java.lang.IllegalArgumentException v12;
java.lang.Exception v11;
java.lang.Class v1;
java.lang.Object v10, v8;
v0 := @this: com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.Object[] recordComponents(java.lang.Class)>(v1);
if v2 != null goto label1;
return null;
label1:
v3 = lengthof v2;
v4 = newarray (java.lang.String)[v3];
v5 = 0;
label2:
v6 = lengthof v2;
if v5 >= v6 goto label7;
label3:
v7 = v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_COMPONENT_GET_NAME>;
v8 = v2[v5];
v9 = newarray (java.lang.Object)[0];
v10 = virtualinvoke v7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v8, v9);
v4[v5] = v10;
label4:
goto label6;
label5:
v11 := @caughtexception;
v12 = new java.lang.IllegalArgumentException;
v13 = newarray (java.lang.Object)[3];
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v13[0] = v14;
v15 = lengthof v2;
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v15);
v13[1] = v16;
v17 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v13[2] = v17;
v18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to access name of field #%d (of %d) of Record type %s", v13);
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v18, v11);
throw v12;
label6:
v5 = v5 + 1;
goto label2;
label7:
return v4;
catch java.lang.Exception from label3 to label4 with label5;
}
public com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] getRecordFields(java.lang.Class) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] v4;
java.lang.Integer v14, v16, v26, v28;
java.lang.reflect.Method v19, v7;
com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName v31;
java.lang.Exception v11, v23;
java.lang.Object[] v13, v2, v21, v25, v9;
int v15, v27, v3, v5, v6;
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor v0;
java.lang.String v17, v18, v29, v30;
java.lang.IllegalArgumentException v12, v24;
java.lang.Class v1;
java.lang.Object v10, v20, v22, v8;
v0 := @this: com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.Object[] recordComponents(java.lang.Class)>(v1);
if v2 != null goto label01;
return null;
label01:
v3 = lengthof v2;
v4 = newarray (com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName)[v3];
v5 = 0;
label02:
v6 = lengthof v2;
if v5 >= v6 goto label10;
label03:
v7 = v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_COMPONENT_GET_NAME>;
v8 = v2[v5];
v9 = newarray (java.lang.Object)[0];
v10 = virtualinvoke v7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v8, v9);
label04:
goto label06;
label05:
v11 := @caughtexception;
v12 = new java.lang.IllegalArgumentException;
v13 = newarray (java.lang.Object)[3];
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v13[0] = v14;
v15 = lengthof v2;
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v15);
v13[1] = v16;
v17 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v13[2] = v17;
v18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to access name of field #%d (of %d) of Record type %s", v13);
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v18, v11);
throw v12;
label06:
v19 = v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_COMPONENT_GET_TYPE>;
v20 = v2[v5];
v21 = newarray (java.lang.Object)[0];
v22 = virtualinvoke v19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v20, v21);
label07:
goto label09;
label08:
v23 := @caughtexception;
v24 = new java.lang.IllegalArgumentException;
v25 = newarray (java.lang.Object)[3];
v26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v25[0] = v26;
v27 = lengthof v2;
v28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v27);
v25[1] = v28;
v29 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v25[2] = v29;
v30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to access type of field #%d (of %d) of Record type %s", v25);
specialinvoke v24.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v30, v23);
throw v24;
label09:
v31 = new com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName;
specialinvoke v31.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName: void <init>(java.lang.Class,java.lang.String)>(v22, v10);
v4[v5] = v31;
v5 = v5 + 1;
goto label02;
label10:
return v4;
catch java.lang.Exception from label03 to label04 with label05;
catch java.lang.Exception from label06 to label07 with label08;
}
protected java.lang.Object[] recordComponents(java.lang.Class) throws java.lang.IllegalArgumentException
{
java.lang.Object[] v3;
java.lang.IllegalArgumentException v7;
java.lang.Exception v5;
java.lang.Class v1;
java.lang.Object v4;
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor v0;
java.lang.String v8, v9;
java.lang.reflect.Method v2;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor;
v1 := @parameter0: java.lang.Class;
label1:
v2 = v0.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.reflect.Method RECORD_GET_RECORD_COMPONENTS>;
v3 = newarray (java.lang.Object)[0];
v4 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v3);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.NativeImageUtil: boolean isUnsupportedFeatureError(java.lang.Throwable)>(v5);
if v6 == 0 goto label4;
return null;
label4:
v7 = new java.lang.IllegalArgumentException;
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to access RecordComponents of type \u0001");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v7;
catch java.lang.Exception from label1 to label2 with label3;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor v1, v2;
java.lang.RuntimeException v0, v3;
v0 = null;
v1 = null;
label1:
v2 = new com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor;
specialinvoke v2.<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: void <init>()>();
v1 = v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
v0 = v3;
label4:
<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor INSTANCE> = v1;
<com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor: java.lang.RuntimeException PROBLEM> = v0;
return;
catch java.lang.RuntimeException from label1 to label2 with label3;
}
}