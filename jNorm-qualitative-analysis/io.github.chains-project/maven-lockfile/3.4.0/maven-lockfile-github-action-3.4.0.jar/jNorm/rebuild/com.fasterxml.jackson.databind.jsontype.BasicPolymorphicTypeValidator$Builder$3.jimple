class com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3 extends com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher
{
final java.lang.String val$prefixForBase;
final com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0;
void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder, java.lang.String)
{
java.lang.String v2;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3 v0;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v2 := @parameter1: java.lang.String;
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0> = v1;
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3: java.lang.String val$prefixForBase> = v2;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher: void <init>()>();
return;
}
public boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3 v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v2;
java.lang.String v3, v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3: java.lang.String val$prefixForBase>;
v5 = virtualinvoke v3.<java.lang.String: boolean startsWith(java.lang.String)>(v4);
return v5;
}
}