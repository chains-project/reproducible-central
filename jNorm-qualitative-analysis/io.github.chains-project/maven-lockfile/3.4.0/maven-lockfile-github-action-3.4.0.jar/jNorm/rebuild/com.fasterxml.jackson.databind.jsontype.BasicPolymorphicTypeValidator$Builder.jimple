public class com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder extends java.lang.Object
{
protected java.util.Set _invalidBaseTypes;
protected java.util.List _baseTypeMatchers;
protected java.util.List _subTypeNameMatchers;
protected java.util.List _subTypeClassMatchers;
protected void <init>()
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.lang.Class)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$1 v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.lang.Class;
v2 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$1;
specialinvoke v2.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$1: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.Class)>(v0, v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.util.regex.Pattern)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$2 v2;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v3;
java.util.regex.Pattern v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.util.regex.Pattern;
v2 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$2;
specialinvoke v2.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$2: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.util.regex.Pattern)>(v0, v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.lang.String)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3 v2;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.lang.String;
v2 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3;
specialinvoke v2.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.String)>(v0, v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v2;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder denyForExactBaseType(java.lang.Class)
{
java.util.HashSet v3;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
java.util.Set v2, v4;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.Set _invalidBaseTypes>;
if v2 != null goto label1;
v3 = new java.util.HashSet;
specialinvoke v3.<java.util.HashSet: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.Set _invalidBaseTypes> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.Set _invalidBaseTypes>;
interfaceinvoke v4.<java.util.Set: boolean add(java.lang.Object)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.lang.Class)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v3;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$4 v2;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.lang.Class;
v2 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$4;
specialinvoke v2.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$4: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.Class)>(v0, v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.util.regex.Pattern)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v3;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$5 v2;
java.util.regex.Pattern v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.util.regex.Pattern;
v2 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$5;
specialinvoke v2.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$5: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.util.regex.Pattern)>(v0, v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubNameMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.lang.String)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$6 v2;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: java.lang.String;
v2 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$6;
specialinvoke v2.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$6: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.String)>(v0, v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubNameMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v2;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubTypeIsArray()
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$7 v1;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0, v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$7;
specialinvoke v1.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$7: void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder)>(v0);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator build()
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator v1;
java.lang.Object[] v10, v14, v6;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] v9;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
java.util.Set v2;
java.util.List v11, v12, v3, v4, v7, v8;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] v13, v5;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.Set _invalidBaseTypes>;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _baseTypeMatchers>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _baseTypeMatchers>;
v5 = newarray (com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)[0];
v6 = interfaceinvoke v4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v5);
label1:
v7 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeNameMatchers>;
if v7 == null goto label2;
v8 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeNameMatchers>;
v9 = newarray (com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher)[0];
v10 = interfaceinvoke v8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v9);
label2:
v11 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeClassMatchers>;
if v11 == null goto label3;
v12 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeClassMatchers>;
v13 = newarray (com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)[0];
v14 = interfaceinvoke v12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v13);
label3:
specialinvoke v1.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: void <init>(java.util.Set,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[])>(v2, v6, v10, v14);
return v1;
}
protected com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)
{
java.util.List v2, v4;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher v1;
java.util.ArrayList v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _baseTypeMatchers>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _baseTypeMatchers> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _baseTypeMatchers>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
protected com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubNameMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher v1;
java.util.List v2, v4;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
java.util.ArrayList v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeNameMatchers>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeNameMatchers> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeNameMatchers>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
protected com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher)
{
java.util.List v2, v4;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher v1;
java.util.ArrayList v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeClassMatchers>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeClassMatchers> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: java.util.List _subTypeClassMatchers>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
}