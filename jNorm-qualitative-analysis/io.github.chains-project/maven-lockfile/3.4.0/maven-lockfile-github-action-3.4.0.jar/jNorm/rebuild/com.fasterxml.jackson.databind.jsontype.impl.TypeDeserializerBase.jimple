public abstract class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase extends com.fasterxml.jackson.databind.jsontype.TypeDeserializer implements java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver;
protected final com.fasterxml.jackson.databind.JavaType _baseType;
protected final com.fasterxml.jackson.databind.BeanProperty _property;
protected final com.fasterxml.jackson.databind.JavaType _defaultImpl;
protected final java.lang.String _typePropertyName;
protected final boolean _typeIdVisible;
protected final java.util.Map _deserializers;
protected com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer;
protected void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String, boolean, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
java.util.concurrent.ConcurrentHashMap v7;
com.fasterxml.jackson.databind.JavaType v1, v5;
java.lang.String v3, v6;
boolean v4;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType> = v1;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver> = v2;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nonNullString(java.lang.String)>(v3);
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.String _typePropertyName> = v6;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: boolean _typeIdVisible> = v4;
v7 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v7.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 2);
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.util.Map _deserializers> = v7;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl> = v5;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0, v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.util.Map v7;
com.fasterxml.jackson.databind.JavaType v3, v8;
java.lang.String v5;
com.fasterxml.jackson.databind.JsonDeserializer v9;
boolean v6;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: void <init>()>();
v3 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType> = v3;
v4 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver> = v4;
v5 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.String _typePropertyName>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.String _typePropertyName> = v5;
v6 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: boolean _typeIdVisible>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: boolean _typeIdVisible> = v6;
v7 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.util.Map _deserializers>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.util.Map _deserializers> = v7;
v8 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl> = v8;
v9 = v1.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer> = v9;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
return;
}
public abstract com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
public abstract com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion();
public java.lang.String baseTypeName()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
return v3;
}
public final java.lang.String getPropertyName()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.String _typePropertyName>;
return v1;
}
public com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
return v1;
}
public java.lang.Class getDefaultImpl()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType)>(v1);
return v2;
}
public boolean hasDefaultImpl()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.JavaType v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.databind.JavaType baseType()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
return v1;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
java.lang.Class v3;
java.lang.StringBuilder v1, v2, v5, v7;
com.fasterxml.jackson.databind.JavaType v6;
java.lang.String v4, v9;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v8;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
v5 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; base-type:");
v6 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v6);
v7 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; id-resolver: ");
v8 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v8);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
v9 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v9;
}
protected final com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
java.util.Map v22, v3;
com.fasterxml.jackson.databind.JavaType v10, v11, v15, v18, v6, v7;
java.lang.String v19, v2;
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer v8;
boolean v14;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v21, v9;
java.lang.IllegalArgumentException v17;
java.lang.Class v12, v13, v16;
java.lang.Object v4;
com.fasterxml.jackson.databind.JsonMappingException v20;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.util.Map _deserializers>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 != null goto label8;
v5 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v6 = interfaceinvoke v5.<com.fasterxml.jackson.databind.jsontype.TypeIdResolver: com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)>(v1, v2);
if v6 != null goto label2;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
if v4 != null goto label7;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2);
if v7 != null goto label1;
v8 = <com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance>;
return v8;
label1:
v9 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v7, v9);
goto label7;
label2:
v10 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
if v10 == null goto label6;
v11 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v12 = virtualinvoke v11.<java.lang.Object: java.lang.Class getClass()>();
v13 = virtualinvoke v6.<java.lang.Object: java.lang.Class getClass()>();
if v12 != v13 goto label6;
v14 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();
if v14 != 0 goto label6;
label3:
v15 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v16 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v15, v16);
label4:
goto label6;
label5:
v17 := @caughtexception;
v18 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v19 = virtualinvoke v17.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();
v20 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(v18, v2, v19);
throw v20;
label6:
v21 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v6, v21);
label7:
v22 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.util.Map _deserializers>;
interfaceinvoke v22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v4);
label8:
return v4;
catch java.lang.IllegalArgumentException from label3 to label4 with label5;
}
protected final com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Throwable v16;
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationFeature v3;
com.fasterxml.jackson.databind.JavaType v10, v12, v2, v6;
com.fasterxml.jackson.databind.JsonDeserializer v11, v14, v15;
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer v5, v9;
boolean v4, v8;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v13;
java.lang.Class v7;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
if v2 != null goto label2;
v3 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_INVALID_SUBTYPE>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v3);
if v4 != 0 goto label1;
v5 = <com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance>;
return v5;
label1:
return null;
label2:
v6 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(v7);
if v8 == 0 goto label3;
v9 = <com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance>;
return v9;
label3:
v10 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
entermonitor v10;
label4:
v11 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer>;
if v11 != null goto label5;
v12 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
v13 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v14 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v12, v13);
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer> = v14;
label5:
v15 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer>;
exitmonitor v10;
label6:
return v15;
label7:
v16 := @caughtexception;
exitmonitor v10;
throw v16;
catch java.lang.Throwable from label4 to label6 with label7;
}
protected java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v3, v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getTypeId()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v3);
return v4;
}
protected java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v6;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v3, v7, v9;
com.fasterxml.jackson.databind.JavaType v5;
com.fasterxml.jackson.databind.JsonDeserializer v4;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Object;
if v3 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
if v4 != null goto label3;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType baseType()>();
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object[])>(v5, "No (native) type id found when one was expected for polymorphic type handling", v6);
return v7;
label1:
v8 = v3 instanceof java.lang.String;
if v8 != 0 goto label2;
v3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v3);
label3:
v9 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v9;
}
protected com.fasterxml.jackson.databind.JavaType _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v7;
com.fasterxml.jackson.databind.BeanProperty v6, v8;
com.fasterxml.jackson.databind.JavaType v10, v12;
java.lang.String v2, v4, v5, v9;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v11, v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v4 = interfaceinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeIdResolver: java.lang.String getDescForKnownTypeIds()>();
if v4 != null goto label1;
v5 = "type ids are not statically known";
goto label2;
label1:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("known type ids = \u0001");
label2:
v6 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
if v6 == null goto label3;
v7 = newarray (java.lang.Object)[2];
v7[0] = v5;
v8 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v9 = interfaceinvoke v8.<com.fasterxml.jackson.databind.BeanProperty: java.lang.String getName()>();
v7[1] = v9;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (for POJO property \'%s\')", v7);
label3:
v10 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v11 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)>(v10, v2, v11, v5);
return v12;
}
protected com.fasterxml.jackson.databind.JavaType _handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JavaType v3, v5;
java.lang.String v2;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JavaType _baseType>;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)>(v3, v4, v2);
return v5;
}
}