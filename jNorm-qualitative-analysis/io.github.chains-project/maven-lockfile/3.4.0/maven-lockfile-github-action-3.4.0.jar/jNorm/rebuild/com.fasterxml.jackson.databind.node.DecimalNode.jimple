public class com.fasterxml.jackson.databind.node.DecimalNode extends com.fasterxml.jackson.databind.node.NumericNode
{
public static final com.fasterxml.jackson.databind.node.DecimalNode ZERO;
private static final java.math.BigDecimal MIN_INTEGER;
private static final java.math.BigDecimal MAX_INTEGER;
private static final java.math.BigDecimal MIN_LONG;
private static final java.math.BigDecimal MAX_LONG;
protected final java.math.BigDecimal _value;
public void <init>(java.math.BigDecimal)
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 := @parameter0: java.math.BigDecimal;
specialinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value> = v1;
return;
}
public static com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal)
{
com.fasterxml.jackson.databind.node.DecimalNode v1;
java.math.BigDecimal v0;
v0 := @parameter0: java.math.BigDecimal;
v1 = new com.fasterxml.jackson.databind.node.DecimalNode;
specialinvoke v1.<com.fasterxml.jackson.databind.node.DecimalNode: void <init>(java.math.BigDecimal)>(v0);
return v1;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
com.fasterxml.jackson.core.JsonToken v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
return v1;
}
public com.fasterxml.jackson.core.JsonParser$NumberType numberType()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
com.fasterxml.jackson.core.JsonParser$NumberType v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL>;
return v1;
}
public boolean isFloatingPointNumber()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
return 1;
}
public boolean isBigDecimal()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
return 1;
}
public boolean canConvertToInt()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1, v2, v4, v5;
int v3, v6;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = <com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_INTEGER>;
v3 = virtualinvoke v1.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(v2);
if v3 < 0 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v5 = <com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_INTEGER>;
v6 = virtualinvoke v4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(v5);
if v6 > 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
}
public boolean canConvertToLong()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1, v2, v4, v5;
int v3, v6;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = <com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_LONG>;
v3 = virtualinvoke v1.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(v2);
if v3 < 0 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v5 = <com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_LONG>;
v6 = virtualinvoke v4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(v5);
if v6 > 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
}
public boolean canConvertToExactIntegral()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1, v3, v5, v6;
int v2, v4, v7;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: int signum()>();
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v4 = virtualinvoke v3.<java.math.BigDecimal: int scale()>();
if v4 <= 0 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v6 = virtualinvoke v5.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();
v7 = virtualinvoke v6.<java.math.BigDecimal: int scale()>();
if v7 > 0 goto label2;
label1:
v8 = 1;
goto label3;
label2:
v8 = 0;
label3:
return v8;
}
public java.lang.Number numberValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
return v1;
}
public short shortValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
short v2;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: short shortValue()>();
return v2;
}
public int intValue()
{
int v2;
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: int intValue()>();
return v2;
}
public long longValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
long v2;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: long longValue()>();
return v2;
}
public java.math.BigInteger bigIntegerValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
java.math.BigInteger v2;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigInteger _bigIntFromBigDec(java.math.BigDecimal)>(v1);
return v2;
}
public float floatValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
float v2;
java.math.BigDecimal v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: float floatValue()>();
return v2;
}
public double doubleValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
double v2;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: double doubleValue()>();
return v2;
}
public java.math.BigDecimal decimalValue()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
return v1;
}
public java.lang.String asText()
{
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.math.BigDecimal v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v2 = virtualinvoke v1.<java.math.BigDecimal: java.lang.String toString()>();
return v2;
}
public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.math.BigDecimal v3;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.DecimalNode v0;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>(v3);
return;
}
public boolean equals(java.lang.Object)
{
java.math.BigDecimal v3, v4;
int v5;
com.fasterxml.jackson.databind.node.DecimalNode v0;
java.lang.Object v1;
boolean v2, v6;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.node.DecimalNode;
if v2 == 0 goto label5;
v3 = v1.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v4 = v0.<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;
v5 = virtualinvoke v3.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(v4);
if v5 != 0 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
label5:
return 0;
}
public int hashCode()
{
java.lang.Double v2;
int v3;
com.fasterxml.jackson.databind.node.DecimalNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DecimalNode;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.DecimalNode: double doubleValue()>();
v2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v1);
v3 = virtualinvoke v2.<java.lang.Double: int hashCode()>();
return v3;
}
static void <clinit>()
{
java.math.BigDecimal v1, v2, v3, v4, v5;
com.fasterxml.jackson.databind.node.DecimalNode v0;
v0 = new com.fasterxml.jackson.databind.node.DecimalNode;
v1 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
specialinvoke v0.<com.fasterxml.jackson.databind.node.DecimalNode: void <init>(java.math.BigDecimal)>(v1);
<com.fasterxml.jackson.databind.node.DecimalNode: com.fasterxml.jackson.databind.node.DecimalNode ZERO> = v0;
v2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-2147483648L);
<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_INTEGER> = v2;
v3 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2147483647L);
<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_INTEGER> = v3;
v4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_LONG> = v4;
v5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
<com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_LONG> = v5;
return;
}
}