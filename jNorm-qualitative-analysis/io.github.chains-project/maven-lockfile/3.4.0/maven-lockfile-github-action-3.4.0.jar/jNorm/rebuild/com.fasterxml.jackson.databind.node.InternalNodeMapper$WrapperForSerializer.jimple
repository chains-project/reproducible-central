public class com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer extends com.fasterxml.jackson.databind.JsonSerializable$Base
{
protected final com.fasterxml.jackson.databind.node.BaseJsonNode _root;
protected com.fasterxml.jackson.databind.SerializerProvider _context;
public void <init>(com.fasterxml.jackson.databind.node.BaseJsonNode)
{
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer v0;
com.fasterxml.jackson.databind.node.BaseJsonNode v1;
v0 := @this: com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.node.BaseJsonNode;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonSerializable$Base: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: com.fasterxml.jackson.databind.node.BaseJsonNode _root> = v1;
return;
}
public void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.BaseJsonNode v3;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: com.fasterxml.jackson.databind.SerializerProvider _context> = v2;
v3 = v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: com.fasterxml.jackson.databind.node.BaseJsonNode _root>;
virtualinvoke v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return;
}
public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
virtualinvoke v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
return;
}
protected void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.JsonNode) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer v0;
java.util.Iterator v10, v6;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack v5, v9;
int v4, v8;
com.fasterxml.jackson.databind.JsonNode v2;
com.fasterxml.jackson.databind.SerializerProvider v11;
boolean v3, v7;
v0 := @this: com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
v3 = v2 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: int size()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object,int)>(v0, v4);
v5 = new com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack;
specialinvoke v5.<com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack: void <init>()>();
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fields()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack,java.util.Iterator)>(v1, v5, v6);
goto label3;
label1:
v7 = v2 instanceof com.fasterxml.jackson.databind.node.ArrayNode;
if v7 == 0 goto label2;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: int size()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object,int)>(v0, v8);
v9 = new com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack;
specialinvoke v9.<com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack: void <init>()>();
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator elements()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack,java.util.Iterator)>(v1, v9, v10);
goto label3;
label2:
v11 = v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: com.fasterxml.jackson.databind.SerializerProvider _context>;
virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v11);
label3:
return;
}
protected void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack, java.util.Iterator) throws java.io.IOException
{
java.lang.Object[] v17;
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack v2;
int v11, v13;
com.fasterxml.jackson.databind.SerializerProvider v15, v22;
java.lang.String v19, v20, v21;
boolean v10, v12, v14, v24, v5, v7;
java.util.Iterator v3, v4;
com.fasterxml.jackson.core.JsonStreamContext v23;
java.lang.Exception v16;
java.lang.Class v18;
java.lang.Object v6, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack;
v3 := @parameter2: java.util.Iterator;
v4 = v3;
label01:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label09;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = v6 instanceof java.util.Map$Entry;
if v7 == 0 goto label02;
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v8);
v9 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
label02:
v10 = v9 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v10 == 0 goto label03;
virtualinvoke v2.<com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack: void push(java.util.Iterator)>(v4);
v4 = virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fields()>();
v11 = virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: int size()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object,int)>(v9, v11);
goto label01;
label03:
v12 = v9 instanceof com.fasterxml.jackson.databind.node.ArrayNode;
if v12 == 0 goto label04;
virtualinvoke v2.<com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack: void push(java.util.Iterator)>(v4);
v4 = virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator elements()>();
v13 = virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: int size()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object,int)>(v9, v13);
goto label01;
label04:
v14 = v9 instanceof com.fasterxml.jackson.databind.node.POJONode;
if v14 == 0 goto label08;
label05:
v15 = v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: com.fasterxml.jackson.databind.SerializerProvider _context>;
virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v15);
label06:
goto label01;
label07:
v16 := @caughtexception;
v17 = newarray (java.lang.Object)[2];
v18 = virtualinvoke v16.<java.lang.Object: java.lang.Class getClass()>();
v19 = virtualinvoke v18.<java.lang.Class: java.lang.String getName()>();
v17[0] = v19;
v20 = virtualinvoke v16.<java.lang.Exception: java.lang.String getMessage()>();
v17[1] = v20;
v21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[ERROR: (%s) %s]", v17);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v21);
goto label01;
label08:
v22 = v0.<com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer: com.fasterxml.jackson.databind.SerializerProvider _context>;
virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v22);
goto label01;
label09:
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonStreamContext getOutputContext()>();
v24 = virtualinvoke v23.<com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>();
if v24 == 0 goto label10;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
goto label11;
label10:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
label11:
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack: java.util.Iterator popOrNull()>();
if v4 != null goto label01;
return;
catch java.io.IOException from label05 to label06 with label07;
catch java.lang.RuntimeException from label05 to label06 with label07;
}
}