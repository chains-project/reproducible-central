public class com.fasterxml.jackson.databind.node.JsonNodeFactory extends java.lang.Object implements java.io.Serializable, com.fasterxml.jackson.databind.node.JsonNodeCreator
{
private static final long serialVersionUID;
protected static final int MAX_ELEMENT_INDEX_FOR_INSERT;
private final boolean _cfgBigDecimalExact;
public static final com.fasterxml.jackson.databind.node.JsonNodeFactory instance;
public void <init>(boolean)
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: boolean _cfgBigDecimalExact> = v1;
return;
}
protected void <init>()
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: void <init>(boolean)>(0);
return;
}
public static com.fasterxml.jackson.databind.node.JsonNodeFactory withExactBigDecimals(boolean)
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v1;
boolean v0;
v0 := @parameter0: boolean;
v1 = new com.fasterxml.jackson.databind.node.JsonNodeFactory;
specialinvoke v1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: void <init>(boolean)>(v0);
return v1;
}
public int getMaxElementIndexForInsert()
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
return 9999;
}
public boolean willStripTrailingBigDecimalZeroes()
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 = v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: boolean _cfgBigDecimalExact>;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)
{
com.fasterxml.jackson.databind.node.BooleanNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.BooleanNode: com.fasterxml.jackson.databind.node.BooleanNode getTrue()>();
goto label2;
label1:
v2 = staticinvoke <com.fasterxml.jackson.databind.node.BooleanNode: com.fasterxml.jackson.databind.node.BooleanNode getFalse()>();
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.NullNode nullNode()
{
com.fasterxml.jackson.databind.node.NullNode v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>();
return v1;
}
public com.fasterxml.jackson.databind.JsonNode missingNode()
{
com.fasterxml.jackson.databind.node.MissingNode v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 = staticinvoke <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode getInstance()>();
return v1;
}
public com.fasterxml.jackson.databind.node.NumericNode numberNode(byte)
{
byte v1;
com.fasterxml.jackson.databind.node.IntNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: byte;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode valueOf(int)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte)
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
int v3;
java.lang.Byte v1;
com.fasterxml.jackson.databind.node.ValueNode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Byte;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v1.<java.lang.Byte: int intValue()>();
v2 = staticinvoke <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode valueOf(int)>(v3);
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.NumericNode numberNode(short)
{
com.fasterxml.jackson.databind.node.ShortNode v2;
short v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: short;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.ShortNode: com.fasterxml.jackson.databind.node.ShortNode valueOf(short)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short)
{
short v3;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
java.lang.Short v1;
com.fasterxml.jackson.databind.node.ValueNode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Short;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v1.<java.lang.Short: short shortValue()>();
v2 = staticinvoke <com.fasterxml.jackson.databind.node.ShortNode: com.fasterxml.jackson.databind.node.ShortNode valueOf(short)>(v3);
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.NumericNode numberNode(int)
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: int;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode valueOf(int)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer)
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
int v3;
java.lang.Integer v1;
com.fasterxml.jackson.databind.node.ValueNode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Integer;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v2 = staticinvoke <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode valueOf(int)>(v3);
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.NumericNode numberNode(long)
{
long v1;
com.fasterxml.jackson.databind.node.LongNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: long;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.LongNode: com.fasterxml.jackson.databind.node.LongNode valueOf(long)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long)
{
com.fasterxml.jackson.databind.node.NullNode v2;
java.lang.Long v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
long v3;
com.fasterxml.jackson.databind.node.LongNode v4;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Long;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v2;
label1:
v3 = virtualinvoke v1.<java.lang.Long: long longValue()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.node.LongNode: com.fasterxml.jackson.databind.node.LongNode valueOf(long)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger)
{
com.fasterxml.jackson.databind.node.NullNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.BigIntegerNode v3;
java.math.BigInteger v1;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.math.BigInteger;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v2;
label1:
v3 = staticinvoke <com.fasterxml.jackson.databind.node.BigIntegerNode: com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.node.NumericNode numberNode(float)
{
float v1;
com.fasterxml.jackson.databind.node.FloatNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: float;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.FloatNode: com.fasterxml.jackson.databind.node.FloatNode valueOf(float)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float)
{
java.lang.Float v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
float v3;
com.fasterxml.jackson.databind.node.ValueNode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Float;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v1.<java.lang.Float: float floatValue()>();
v2 = staticinvoke <com.fasterxml.jackson.databind.node.FloatNode: com.fasterxml.jackson.databind.node.FloatNode valueOf(float)>(v3);
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.NumericNode numberNode(double)
{
com.fasterxml.jackson.databind.node.DoubleNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: double;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.DoubleNode: com.fasterxml.jackson.databind.node.DoubleNode valueOf(double)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double)
{
java.lang.Double v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.ValueNode v2;
double v3;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Double;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v1.<java.lang.Double: double doubleValue()>();
v2 = staticinvoke <com.fasterxml.jackson.databind.node.DoubleNode: com.fasterxml.jackson.databind.node.DoubleNode valueOf(double)>(v3);
label2:
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal)
{
java.math.BigDecimal v1;
com.fasterxml.jackson.databind.node.NullNode v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.DecimalNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.math.BigDecimal;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v2;
label1:
v3 = staticinvoke <com.fasterxml.jackson.databind.node.DecimalNode: com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.TextNode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.TextNode: com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[])
{
byte[] v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.BinaryNode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: byte[];
v2 = staticinvoke <com.fasterxml.jackson.databind.node.BinaryNode: com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[])>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[], int, int)
{
byte[] v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
int v2, v3;
com.fasterxml.jackson.databind.node.BinaryNode v4;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = staticinvoke <com.fasterxml.jackson.databind.node.BinaryNode: com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[],int,int)>(v1, v2, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ArrayNode arrayNode()
{
com.fasterxml.jackson.databind.node.ArrayNode v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 = new com.fasterxml.jackson.databind.node.ArrayNode;
specialinvoke v1.<com.fasterxml.jackson.databind.node.ArrayNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v0);
return v1;
}
public com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int)
{
com.fasterxml.jackson.databind.node.ArrayNode v2;
int v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: int;
v2 = new com.fasterxml.jackson.databind.node.ArrayNode;
specialinvoke v2.<com.fasterxml.jackson.databind.node.ArrayNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,int)>(v0, v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ObjectNode objectNode()
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.ObjectNode v1;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 = new com.fasterxml.jackson.databind.node.ObjectNode;
specialinvoke v1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v0);
return v1;
}
public com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.POJONode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: java.lang.Object;
v2 = new com.fasterxml.jackson.databind.node.POJONode;
specialinvoke v2.<com.fasterxml.jackson.databind.node.POJONode: void <init>(java.lang.Object)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
{
com.fasterxml.jackson.databind.util.RawValue v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.POJONode v2;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.RawValue;
v2 = new com.fasterxml.jackson.databind.node.POJONode;
specialinvoke v2.<com.fasterxml.jackson.databind.node.POJONode: void <init>(java.lang.Object)>(v1);
return v2;
}
protected boolean _inIntRange(long)
{
byte v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
int v4;
long v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v1 := @parameter0: long;
v2 = v4 cmp v1;
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
v0 = new com.fasterxml.jackson.databind.node.JsonNodeFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: void <init>()>();
<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.JsonNodeFactory instance> = v0;
return;
}
}