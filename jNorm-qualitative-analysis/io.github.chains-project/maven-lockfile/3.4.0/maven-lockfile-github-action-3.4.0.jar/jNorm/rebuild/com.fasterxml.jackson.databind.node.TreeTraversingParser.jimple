public class com.fasterxml.jackson.databind.node.TreeTraversingParser extends com.fasterxml.jackson.core.base.ParserMinimalBase
{
protected com.fasterxml.jackson.core.ObjectCodec _objectCodec;
protected com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor;
protected boolean _closed;
public void <init>(com.fasterxml.jackson.databind.JsonNode)
{
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonNode;
specialinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec)>(v1, null);
return;
}
public void <init>(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor v3;
com.fasterxml.jackson.core.ObjectCodec v2;
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonNode;
v2 := @parameter1: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.base.ParserMinimalBase: void <init>(int)>(0);
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v2;
v3 = new com.fasterxml.jackson.databind.node.NodeCursor$RootCursor;
specialinvoke v3.<com.fasterxml.jackson.databind.node.NodeCursor$RootCursor: void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor)>(v1, null);
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = v3;
return;
}
public void setCodec(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v1;
return;
}
public com.fasterxml.jackson.core.ObjectCodec getCodec()
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
return v1;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.Version v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = <com.fasterxml.jackson.databind.cfg.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities()
{
com.fasterxml.jackson.core.util.JacksonFeatureSet v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = <com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_READ_CAPABILITIES>;
return v1;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;
if v1 != 0 goto label1;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed> = 1;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = null;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken> = null;
label1:
return;
}
public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
{
com.fasterxml.jackson.databind.node.NodeCursor v1, v10, v11, v12, v13, v8, v9;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
int[] v4;
int v6, v7;
com.fasterxml.jackson.core.JsonToken v14, v2, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.core.JsonToken nextToken()>();
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken> = v2;
v3 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
if v3 != null goto label1;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed> = 1;
return null;
label1:
v4 = <com.fasterxml.jackson.databind.node.TreeTraversingParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v5 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v7 = v4[v6];
tableswitch(v7)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
case 4: goto label4;
default: goto label5;
};
label2:
v8 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor startObject()>();
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = v9;
goto label5;
label3:
v10 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor startArray()>();
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = v11;
goto label5;
label4:
v12 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor getParent()>();
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = v13;
label5:
v14 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
return v14;
}
public com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException
{
com.fasterxml.jackson.databind.node.NodeCursor v3, v4, v8, v9;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
com.fasterxml.jackson.core.JsonToken v1, v10, v2, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v1 != v2 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor getParent()>();
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = v4;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken> = v5;
goto label2;
label1:
v6 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v6 != v7 goto label2;
v8 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor getParent()>();
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = v9;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken> = v10;
label2:
return v0;
}
public boolean isClosed()
{
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;
return v1;
}
public java.lang.String getCurrentName()
{
com.fasterxml.jackson.databind.node.NodeCursor v1;
com.fasterxml.jackson.core.JsonToken v2, v3, v4, v5;
java.lang.String v6;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v2 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v2 == v3 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v4 != v5 goto label2;
label1:
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor getParent()>();
label2:
if v1 != null goto label3;
v6 = null;
goto label4;
label3:
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NodeCursor: java.lang.String getCurrentName()>();
label4:
return v6;
}
public void overrideCurrentName(java.lang.String)
{
com.fasterxml.jackson.databind.node.NodeCursor v2;
com.fasterxml.jackson.core.JsonToken v3, v4, v5, v6;
java.lang.String v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v3 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v3 == v4 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v5 != v6 goto label2;
label1:
v2 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor getParent()>();
label2:
if v2 == null goto label3;
virtualinvoke v2.<com.fasterxml.jackson.databind.node.NodeCursor: void overrideCurrentName(java.lang.String)>(v1);
label3:
return;
}
public com.fasterxml.jackson.core.JsonStreamContext getParsingContext()
{
com.fasterxml.jackson.databind.node.NodeCursor v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
return v1;
}
public com.fasterxml.jackson.core.JsonLocation getTokenLocation()
{
com.fasterxml.jackson.core.JsonLocation v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = <com.fasterxml.jackson.core.JsonLocation: com.fasterxml.jackson.core.JsonLocation NA>;
return v1;
}
public com.fasterxml.jackson.core.JsonLocation getCurrentLocation()
{
com.fasterxml.jackson.core.JsonLocation v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = <com.fasterxml.jackson.core.JsonLocation: com.fasterxml.jackson.core.JsonLocation NA>;
return v1;
}
public java.lang.String getText()
{
com.fasterxml.jackson.databind.node.NodeCursor v6;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
int[] v2;
int v4, v5;
com.fasterxml.jackson.databind.JsonNode v10, v13, v8;
com.fasterxml.jackson.core.JsonToken v1, v16, v3;
java.lang.String v12, v15, v17, v7, v9;
java.lang.Number v11;
boolean v14;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
if v1 != null goto label1;
return null;
label1:
v2 = <com.fasterxml.jackson.databind.node.TreeTraversingParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v3 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v5 = v2[v4];
tableswitch(v5)
{
case 5: goto label2;
case 6: goto label3;
case 7: goto label4;
case 8: goto label4;
case 9: goto label5;
default: goto label6;
};
label2:
v6 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.NodeCursor: java.lang.String getCurrentName()>();
return v7;
label3:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JsonNode: java.lang.String textValue()>();
return v9;
label4:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.JsonNode: java.lang.Number numberValue()>();
v12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v11);
return v12;
label5:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
if v13 == null goto label6;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.JsonNode: boolean isBinary()>();
if v14 == 0 goto label6;
v15 = virtualinvoke v13.<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>();
return v15;
label6:
v16 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.core.JsonToken: java.lang.String asString()>();
return v17;
}
public char[] getTextCharacters() throws java.io.IOException
{
char[] v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: java.lang.String getText()>();
v2 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
return v2;
}
public int getTextLength() throws java.io.IOException
{
int v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: java.lang.String getText()>();
v2 = virtualinvoke v1.<java.lang.String: int length()>();
return v2;
}
public int getTextOffset() throws java.io.IOException
{
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
return 0;
}
public boolean hasTextCharacters()
{
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
return 0;
}
public com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v2;
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.core.JsonParser$NumberType numberType()>();
label2:
return v2;
}
public java.math.BigInteger getBigIntegerValue() throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonNode v1;
java.math.BigInteger v2;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: java.math.BigInteger bigIntegerValue()>();
return v2;
}
public java.math.BigDecimal getDecimalValue() throws java.io.IOException
{
java.math.BigDecimal v2;
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: java.math.BigDecimal decimalValue()>();
return v2;
}
public double getDoubleValue() throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
double v2;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: double doubleValue()>();
return v2;
}
public float getFloatValue() throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
double v2;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: double doubleValue()>();
return v2;
}
public int getIntValue() throws java.io.IOException
{
int v3;
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NumericNode: boolean canConvertToInt()>();
if v2 != 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void reportOverflowInt()>();
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NumericNode: int intValue()>();
return v3;
}
public long getLongValue() throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonNode v1;
long v3;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NumericNode: boolean canConvertToLong()>();
if v2 != 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void reportOverflowLong()>();
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.NumericNode: long longValue()>();
return v3;
}
public java.lang.Number getNumberValue() throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonNode v1;
java.lang.Number v2;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: java.lang.Number numberValue()>();
return v2;
}
public java.lang.Object getEmbeddedObject()
{
byte[] v6;
com.fasterxml.jackson.databind.JsonNode v2;
java.lang.Object v4;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v1, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;
if v1 != 0 goto label2;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
if v2 == null goto label2;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: boolean isPojo()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.POJONode: java.lang.Object getPojo()>();
return v4;
label1:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: boolean isBinary()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] binaryValue()>();
return v6;
label2:
return null;
}
public boolean isNaN()
{
com.fasterxml.jackson.databind.JsonNode v2;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v1, v3, v4;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
v3 = v2 instanceof com.fasterxml.jackson.databind.node.NumericNode;
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.NumericNode: boolean isNaN()>();
return v4;
label1:
return 0;
}
public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException
{
com.fasterxml.jackson.core.Base64Variant v1;
byte[] v4, v5;
com.fasterxml.jackson.databind.JsonNode v2;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
if v2 == null goto label2;
v3 = v2 instanceof com.fasterxml.jackson.databind.node.TextNode;
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.TextNode: byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant)>(v1);
return v4;
label1:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: byte[] binaryValue()>();
return v5;
label2:
return null;
}
public int readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream) throws java.io.IOException
{
com.fasterxml.jackson.core.Base64Variant v1;
java.io.OutputStream v2;
byte[] v3;
int v4, v5;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: java.io.OutputStream;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant)>(v1);
if v3 == null goto label1;
v4 = lengthof v3;
virtualinvoke v2.<java.io.OutputStream: void write(byte[],int,int)>(v3, 0, v4);
v5 = lengthof v3;
return v5;
label1:
return 0;
}
protected com.fasterxml.jackson.databind.JsonNode currentNode()
{
com.fasterxml.jackson.databind.node.NodeCursor v2, v3;
com.fasterxml.jackson.databind.JsonNode v4;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;
if v1 != 0 goto label1;
v2 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
if v2 != null goto label2;
label1:
return null;
label2:
v3 = v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.JsonNode currentNode()>();
return v4;
}
protected com.fasterxml.jackson.databind.JsonNode currentNumericNode() throws com.fasterxml.jackson.core.JacksonException
{
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.core.JsonToken v3;
java.lang.String v4;
com.fasterxml.jackson.core.JsonParseException v5;
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.databind.JsonNode currentNode()>();
if v1 == null goto label1;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: boolean isNumber()>();
if v2 != 0 goto label4;
label1:
if v1 != null goto label2;
v3 = null;
goto label3;
label2:
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.core.JsonToken asToken()>();
label3:
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.core.JsonToken)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Current token (\u0001) not numeric, cannot use numeric value accessors");
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>(v4);
throw v5;
label4:
return v1;
}
protected void _handleEOF()
{
com.fasterxml.jackson.databind.node.TreeTraversingParser v0;
v0 := @this: com.fasterxml.jackson.databind.node.TreeTraversingParser;
virtualinvoke v0.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void _throwInternal()>();
return;
}
}