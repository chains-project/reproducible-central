public class com.fasterxml.jackson.databind.ser.PropertyBuilder extends java.lang.Object
{
private static final java.lang.Object NO_DEFAULT_MARKER;
protected final com.fasterxml.jackson.databind.SerializationConfig _config;
protected final com.fasterxml.jackson.databind.BeanDescription _beanDesc;
protected final com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector;
protected java.lang.Object _defaultBean;
protected final com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion;
protected final boolean _useRealPropertyDefaults;
public void <init>(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v15;
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
com.fasterxml.jackson.databind.SerializationConfig v1, v14;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v11, v12;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v10, v3, v4, v6, v7, v8, v9;
com.fasterxml.jackson.databind.BeanDescription v2;
boolean v13;
java.lang.Class v5;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config> = v1;
v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc> = v2;
v3 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value empty()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v3);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v6 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value empty()>();
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v5, v6);
v8 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value merge(com.fasterxml.jackson.'annotation'.JsonInclude$Value,com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v4, v7);
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion()>();
v10 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value merge(com.fasterxml.jackson.'annotation'.JsonInclude$Value,com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v9, v8);
v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion> = v10;
v11 = virtualinvoke v8.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getValueInclusion()>();
v12 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_DEFAULT>;
if v11 != v12 goto label1;
v13 = 1;
goto label2;
label1:
v13 = 0;
label2:
v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: boolean _useRealPropertyDefaults> = v13;
v14 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v15 = virtualinvoke v14.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector> = v15;
return;
}
public com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
com.fasterxml.jackson.databind.util.Annotations v2;
com.fasterxml.jackson.databind.BeanDescription v1;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()>();
return v2;
}
protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.introspect.AnnotatedMember, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5, v6;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v36, v37;
com.fasterxml.jackson.databind.JsonSerializer v4, v65;
java.lang.Exception v48;
java.lang.Object[] v15, v20, v27;
com.fasterxml.jackson.databind.util.Annotations v61;
com.fasterxml.jackson.databind.JavaType v17, v23, v24, v3, v9;
java.lang.String v11, v14, v19, v49;
java.lang.Class[] v58;
com.fasterxml.jackson.databind.util.NameTransformer v67;
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v2;
com.fasterxml.jackson.databind.AnnotationIntrospector v63, v66;
com.fasterxml.jackson.databind.SerializationConfig v30, v45, v56;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v32, v33, v34, v35;
int[] v38;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v25, v7;
com.fasterxml.jackson.databind.BeanDescription v13, v18, v26, v59, v60;
boolean v22, v41, v44, v47, v51, v52, v55, v57, v8;
com.fasterxml.jackson.databind.JsonMappingException v10;
com.fasterxml.jackson.databind.MapperFeature v43, v46;
int v39, v40;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v62;
com.fasterxml.jackson.databind.SerializationFeature v54;
java.lang.Class v29, v31, v50, v53;
java.lang.Object v12, v16, v21, v28, v42, v64;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v7 := @parameter6: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v8 := @parameter7: boolean;
label01:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)>(v7, v8, v3);
label02:
goto label05;
label03:
v10 := @caughtexception;
if v2 != null goto label04;
v11 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v10);
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v3, v11);
return v12;
label04:
v13 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v10);
v15 = newarray (java.lang.Object)[0];
v16 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[])>(v13, v2, v14, v15);
return v16;
label05:
if v6 == null goto label08;
if v9 != null goto label06;
v9 = v3;
label06:
v17 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
if v17 != null goto label07;
v18 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("serialization type \u0001 has no content");
v20 = newarray (java.lang.Object)[0];
virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[])>(v18, v2, v19, v20);
label07:
v9 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)>(v6);
virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
label08:
v21 = null;
v22 = 0;
if v9 != null goto label09;
v23 = v3;
goto label10;
label09:
v23 = v9;
label10:
v24 = v23;
v25 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor()>();
if v25 != null goto label11;
v26 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v27 = newarray (java.lang.Object)[0];
v28 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[])>(v26, v2, "could not determine property type", v27);
return v28;
label11:
v29 = virtualinvoke v25.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getRawType()>();
v30 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v31 = virtualinvoke v23.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v32 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion>;
v33 = virtualinvoke v30.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class,com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v31, v29, v32);
v34 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.'annotation'.JsonInclude$Value findInclusion()>();
v35 = virtualinvoke v33.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value withOverrides(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v34);
v36 = virtualinvoke v35.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getValueInclusion()>();
v37 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
if v36 != v37 goto label12;
v36 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;
label12:
v38 = <com.fasterxml.jackson.databind.ser.PropertyBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v39 = virtualinvoke v36.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v40 = v38[v39];
tableswitch(v40)
{
case 1: goto label13;
case 2: goto label20;
case 3: goto label21;
case 4: goto label22;
case 5: goto label23;
case 6: goto label24;
default: goto label24;
};
label13:
v41 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: boolean _useRealPropertyDefaults>;
if v41 == 0 goto label17;
v42 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object getDefaultBean()>();
if v42 == null goto label17;
v43 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS>;
v44 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v43);
if v44 == 0 goto label14;
v45 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v46 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS>;
v47 = virtualinvoke v45.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v46);
virtualinvoke v7.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void fixAccess(boolean)>(v47);
label14:
v21 = virtualinvoke v7.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Object getValue(java.lang.Object)>(v42);
label15:
goto label18;
label16:
v48 := @caughtexception;
v49 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)>(v48, v49, v42);
goto label18;
label17:
v21 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v24);
v22 = 1;
label18:
if v21 != null goto label19;
v22 = 1;
goto label25;
label19:
v50 = virtualinvoke v21.<java.lang.Object: java.lang.Class getClass()>();
v51 = virtualinvoke v50.<java.lang.Class: boolean isArray()>();
if v51 == 0 goto label25;
v21 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(v21);
goto label25;
label20:
v22 = 1;
v52 = virtualinvoke v24.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v52 == 0 goto label25;
v21 = <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;
goto label25;
label21:
v22 = 1;
v21 = <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;
goto label25;
label22:
v53 = virtualinvoke v35.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getValueFilter()>();
v21 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(v2, v53);
goto label25;
label23:
v22 = 1;
label24:
v54 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;
v55 = virtualinvoke v24.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v55 == 0 goto label25;
v56 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v57 = virtualinvoke v56.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v54);
if v57 != 0 goto label25;
v21 = <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;
label25:
v58 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.Class[] findViews()>();
if v58 != null goto label26;
v59 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v58 = virtualinvoke v59.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class[] findDefaultViews()>();
label26:
v60 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v61 = virtualinvoke v60.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Annotations getClassAnnotations()>();
v62 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[])>(v2, v7, v61, v3, v4, v5, v9, v22, v21, v58);
v63 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;
v64 = virtualinvoke v63.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v7);
if v64 == null goto label27;
v65 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v7, v64);
virtualinvoke v62.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)>(v65);
label27:
v66 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;
v67 = virtualinvoke v66.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v7);
if v67 == null goto label28;
v62 = virtualinvoke v62.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)>(v67);
label28:
return v62;
catch com.fasterxml.jackson.databind.JsonMappingException from label01 to label02 with label03;
catch java.lang.Exception from label14 to label15 with label16;
}
protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.util.Annotations, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JavaType, boolean, java.lang.Object, java.lang.Class[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v11;
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
java.lang.Class[] v10;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
com.fasterxml.jackson.databind.util.Annotations v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v2;
com.fasterxml.jackson.databind.JsonSerializer v5;
java.lang.Object v9;
com.fasterxml.jackson.databind.JavaType v4, v7;
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v1;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v3 := @parameter2: com.fasterxml.jackson.databind.util.Annotations;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType;
v5 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v7 := @parameter6: com.fasterxml.jackson.databind.JavaType;
v8 := @parameter7: boolean;
v9 := @parameter8: java.lang.Object;
v10 := @parameter9: java.lang.Class[];
v11 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
specialinvoke v11.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[])>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
return v11;
}
protected com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated, boolean, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v16, v4;
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
com.fasterxml.jackson.databind.SerializationConfig v5;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing v17, v18, v19;
com.fasterxml.jackson.databind.JavaType v21, v3, v6;
java.lang.String v12, v13, v14, v15;
boolean v10, v2, v20, v9;
java.lang.IllegalArgumentException v11;
com.fasterxml.jackson.databind.introspect.Annotated v1;
java.lang.Class v7, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;
v5 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>(v5, v1, v3);
if v6 == v3 goto label2;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v9 = virtualinvoke v7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v9 != 0 goto label1;
v10 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v7);
if v10 != 0 goto label1;
v11 = new java.lang.IllegalArgumentException;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.Annotated: java.lang.String getName()>();
v13 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v14 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v12, v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Illegal concrete-type annotation for method \'\u0001\': class \u0001 not a super-type of (declared) class \u0001");
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v11;
label1:
v2 = 1;
v3 = v6;
label2:
v16 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)>(v1);
if v17 == null goto label5;
v18 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DEFAULT_TYPING>;
if v17 == v18 goto label5;
v19 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC>;
if v17 != v19 goto label3;
v20 = 1;
goto label4;
label3:
v20 = 0;
label4:
v2 = v20;
label5:
if v2 == 0 goto label6;
v21 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withStaticTyping()>();
return v21;
label6:
return null;
}
protected java.lang.Object getDefaultBean()
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Object v1, v5, v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean>;
if v1 != null goto label2;
v2 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v3 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();
v1 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Object instantiateBean(boolean)>(v4);
if v1 != null goto label1;
v1 = <com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object NO_DEFAULT_MARKER>;
label1:
v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean> = v1;
label2:
v5 = <com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object NO_DEFAULT_MARKER>;
if v1 != v5 goto label3;
v6 = null;
goto label4;
label3:
v6 = v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _defaultBean>;
label4:
return v6;
}
protected java.lang.Object getPropertyDefaultValue(java.lang.String, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
java.lang.Exception v7;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v2;
java.lang.Object v4, v5, v6, v8;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object getDefaultBean()>();
if v4 != null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v3);
return v5;
label1:
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Object getValue(java.lang.Object)>(v4);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)>(v7, v1, v4);
return v8;
catch java.lang.Exception from label1 to label2 with label3;
}
protected java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
java.lang.Object v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v1);
return v2;
}
protected java.lang.Object _throwWrapped(java.lang.Exception, java.lang.String, java.lang.Object)
{
java.lang.Throwable v4, v5;
com.fasterxml.jackson.databind.ser.PropertyBuilder v0;
java.lang.IllegalArgumentException v6;
java.lang.Exception v1;
java.lang.Class v7;
java.lang.Object v3;
java.lang.String v2, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v1 := @parameter0: java.lang.Exception;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 = v1;
label1:
v5 = virtualinvoke v4.<java.lang.Throwable: java.lang.Throwable getCause()>();
if v5 == null goto label2;
v4 = virtualinvoke v4.<java.lang.Throwable: java.lang.Throwable getCause()>();
goto label1;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfError(java.lang.Throwable)>(v4);
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfRTE(java.lang.Throwable)>(v4);
v6 = new java.lang.IllegalArgumentException;
v7 = virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to get property \'\u0001\' of default \u0001 instance");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v6;
}
static void <clinit>()
{
java.lang.Boolean v0;
v0 = <java.lang.Boolean: java.lang.Boolean FALSE>;
<com.fasterxml.jackson.databind.ser.PropertyBuilder: java.lang.Object NO_DEFAULT_MARKER> = v0;
return;
}
}