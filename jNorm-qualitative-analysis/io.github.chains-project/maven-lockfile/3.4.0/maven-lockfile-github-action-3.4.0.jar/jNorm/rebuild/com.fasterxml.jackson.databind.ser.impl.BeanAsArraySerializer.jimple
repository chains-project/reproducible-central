public class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer extends com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer;
public void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v2;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;
v2 = null;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(v1, v2);
v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.util.Set)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
java.util.Set v2;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;
v2 := @parameter1: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(v1, v2, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
java.util.Set v2, v3;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(v1, v2, v3);
v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v2;
java.lang.Object v3;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
v3 := @parameter2: java.lang.Object;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(v1, v2, v3);
v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer> = v1;
return;
}
public com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.util.NameTransformer v1;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v1);
return v3;
}
public boolean isUnwrappingSerializer()
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
return 0;
}
public com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v1;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0, v2;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v3;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: java.lang.Object;
v2 = new com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(v0, v3, v1);
return v2;
}
protected com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withByNameInclusion(java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0, v3;
java.util.Set v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: java.util.Set;
v2 := @parameter1: java.util.Set;
v3 = new com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(v0, v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
v2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
return v0;
}
protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer()
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
return v0;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v7;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v5;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v6;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
if v5 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v1, v2, v3, v4);
return;
label1:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.core.type.WritableTypeId _typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v4, v1, v6);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
public final void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.SerializationFeature v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 == 0 goto label1;
v6 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v6 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
return;
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
return;
}
private boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v2, v4;
int v5;
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
java.lang.Class v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;
if v2 == null goto label1;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getActiveView()>();
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;
label2:
v5 = lengthof v4;
if v5 != 1 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
}
protected final void serializeAsArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.lang.StackOverflowError v13;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v4, v6;
int v7, v8;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v12, v16;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v11, v15, v9;
java.lang.Exception v10;
java.lang.Class v5;
java.lang.Object v1;
com.fasterxml.jackson.databind.JsonMappingException v14;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;
if v4 == null goto label1;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getActiveView()>();
if v5 == null goto label1;
v6 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;
goto label2;
label1:
v6 = v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;
label2:
v7 = 0;
label3:
v8 = lengthof v6;
label4:
if v7 >= v8 goto label9;
v9 = v6[v7];
if v9 != null goto label5;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
goto label6;
label5:
virtualinvoke v9.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label6:
v7 = v7 + 1;
goto label4;
label7:
v10 := @caughtexception;
v11 = v6[v7];
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v3, v10, v1, v12);
goto label9;
label8:
v13 := @caughtexception;
v14 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>(v2, "Infinite recursion (StackOverflowError)", v13);
v15 = v6[v7];
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();
virtualinvoke v14.<com.fasterxml.jackson.databind.DatabindException: void prependPath(java.lang.Object,java.lang.String)>(v1, v16);
throw v14;
label9:
return;
catch java.lang.Exception from label3 to label7 with label7;
catch java.lang.StackOverflowError from label3 to label7 with label8;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer v0;
java.lang.Class v1;
java.lang.String v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.Class handledType()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("BeanAsArraySerializer for \u0001");
return v3;
}
}