public final class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap extends java.lang.Object
{
private final com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets;
private final int _size;
private final int _mask;
public void <init>(com.fasterxml.jackson.databind.util.LRUMap)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
com.fasterxml.jackson.databind.util.LRUMap v1;
int v2, v3, v4, v5, v6;
java.util.function.BiConsumer v8;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LRUMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.LRUMap: int size()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int findSize(int)>(v2);
v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _size> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _size>;
v5 = v4 - 1;
v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _mask> = v5;
v6 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _size>;
v7 = newarray (com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket)[v6];
v8 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2: java.util.function.BiConsumer bootstrap$(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap,com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[])>(v0, v7);
virtualinvoke v1.<com.fasterxml.jackson.databind.util.LRUMap: void contents(java.util.function.BiConsumer)>(v8);
v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets> = v7;
return;
}
private static final int findSize(int)
{
int v0, v1, v2, v3, v4;
v0 := @parameter0: int;
if v0 > 64 goto label1;
v1 = v0 + v0;
goto label2;
label1:
v2 = v0 >> 2;
v1 = v0 + v2;
label2:
v3 = v1;
v4 = 8;
label3:
if v4 >= v3 goto label4;
v4 = v4 + v4;
goto label3;
label4:
return v4;
}
public static com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap 'from'(com.fasterxml.jackson.databind.util.LRUMap)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v1;
com.fasterxml.jackson.databind.util.LRUMap v0;
v0 := @parameter0: com.fasterxml.jackson.databind.util.LRUMap;
v1 = new com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: void <init>(com.fasterxml.jackson.databind.util.LRUMap)>(v0);
return v1;
}
public int size()
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
int v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _size>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket v6, v9;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
int v3, v4, v5;
com.fasterxml.jackson.databind.JsonSerializer v11, v8;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v2;
boolean v10, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets>;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.TypeKey: int typedHash(com.fasterxml.jackson.databind.JavaType)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _mask>;
v5 = v3 & v4;
v6 = v2[v5];
if v6 != null goto label1;
return null;
label1:
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesTyped(com.fasterxml.jackson.databind.JavaType)>(v1);
if v7 == 0 goto label2;
v8 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v8;
label2:
v9 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next>;
v6 = v9;
if v9 == null goto label3;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesTyped(com.fasterxml.jackson.databind.JavaType)>(v1);
if v10 == 0 goto label2;
v11 = v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v11;
label3:
return null;
}
public com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket v6, v9;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
int v3, v4, v5;
com.fasterxml.jackson.databind.JsonSerializer v11, v8;
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v2;
boolean v10, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets>;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.TypeKey: int typedHash(java.lang.Class)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _mask>;
v5 = v3 & v4;
v6 = v2[v5];
if v6 != null goto label1;
return null;
label1:
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesTyped(java.lang.Class)>(v1);
if v7 == 0 goto label2;
v8 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v8;
label2:
v9 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next>;
v6 = v9;
if v9 == null goto label3;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesTyped(java.lang.Class)>(v1);
if v10 == 0 goto label2;
v11 = v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v11;
label3:
return null;
}
public com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket v6, v9;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
int v3, v4, v5;
com.fasterxml.jackson.databind.JsonSerializer v11, v8;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v2;
boolean v10, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets>;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.TypeKey: int untypedHash(com.fasterxml.jackson.databind.JavaType)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _mask>;
v5 = v3 & v4;
v6 = v2[v5];
if v6 != null goto label1;
return null;
label1:
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesUntyped(com.fasterxml.jackson.databind.JavaType)>(v1);
if v7 == 0 goto label2;
v8 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v8;
label2:
v9 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next>;
v6 = v9;
if v9 == null goto label3;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesUntyped(com.fasterxml.jackson.databind.JavaType)>(v1);
if v10 == 0 goto label2;
v11 = v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v11;
label3:
return null;
}
public com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket v6, v9;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
int v3, v4, v5;
com.fasterxml.jackson.databind.JsonSerializer v11, v8;
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v2;
boolean v10, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets>;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.TypeKey: int untypedHash(java.lang.Class)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: int _mask>;
v5 = v3 & v4;
v6 = v2[v5];
if v6 != null goto label1;
return null;
label1:
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesUntyped(java.lang.Class)>(v1);
if v7 == 0 goto label2;
v8 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v8;
label2:
v9 = v6.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next>;
v6 = v9;
if v9 == null goto label3;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: boolean matchesUntyped(java.lang.Class)>(v1);
if v10 == 0 goto label2;
v11 = v9.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket: com.fasterxml.jackson.databind.JsonSerializer value>;
return v11;
label3:
return null;
}
}