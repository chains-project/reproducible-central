public class com.fasterxml.jackson.databind.ser.impl.UnknownSerializer extends com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer
{
public void <init>()
{
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer: void <init>(java.lang.Class)>(class "Ljava/lang/Object;");
return;
}
public void <init>(java.lang.Class)
{
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer: void <init>(java.lang.Class)>(v1);
return;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v0;
com.fasterxml.jackson.databind.SerializationFeature v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v1);
label1:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
return;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v0;
com.fasterxml.jackson.databind.SerializationFeature v5;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v6;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
if v6 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v1);
label1:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v1, v2, v3, v4);
return;
}
protected void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v10, v6;
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer v0;
java.lang.Class v3, v5, v9;
java.lang.Object v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v11, v12, v7, v8;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.NativeImageUtil: boolean needsReflectionConfiguration(java.lang.Class)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: java.lang.Class handledType()>();
v6 = newarray (java.lang.Object)[1];
v7 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v6[0] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS). This appears to be a native image, in which case you may need to configure reflection for the class that is to be serialized", v6);
virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v5, v8);
goto label2;
label1:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: java.lang.Class handledType()>();
v10 = newarray (java.lang.Object)[1];
v11 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v10[0] = v11;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", v10);
virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v9, v12);
label2:
return;
}
}