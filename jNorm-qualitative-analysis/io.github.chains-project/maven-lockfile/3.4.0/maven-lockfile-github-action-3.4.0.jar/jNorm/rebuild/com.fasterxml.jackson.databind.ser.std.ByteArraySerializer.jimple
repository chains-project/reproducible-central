public class com.fasterxml.jackson.databind.ser.std.ByteArraySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(class "[B");
return;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, byte[])
{
byte[] v2;
int v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4;
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: byte[];
v3 = lengthof v2;
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public void serialize(byte[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.Base64Variant v5;
byte[] v1;
com.fasterxml.jackson.core.JsonGenerator v2;
int v6;
com.fasterxml.jackson.databind.SerializationConfig v4;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
v1 := @parameter0: byte[];
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
v6 = lengthof v1;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>(v5, v1, 0, v6);
return;
}
public void serializeWithType(byte[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.SerializationConfig v8;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.Base64Variant v9;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
int v10;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
v1 := @parameter0: byte[];
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
v10 = lengthof v1;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>(v9, v1, 0, v10);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
{
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.JsonNode v5;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.node.ObjectNode v3, v4;
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ByteArraySerializer: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ByteArraySerializer: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String)>("byte");
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>("items", v4);
return v5;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor v3;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes v4;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v3 == null goto label1;
v4 = <com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes INTEGER>;
interfaceinvoke v3.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor: void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)>(v4);
label1:
return;
}
}