public class com.fasterxml.jackson.databind.ser.std.InetAddressSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
protected final boolean _asNumeric;
public void <init>()
{
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void <init>(boolean)>(0);
return;
}
public void <init>(boolean)
{
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
v1 := @parameter0: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>(class "Ljava/net/InetAddress;");
v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: boolean _asNumeric> = v1;
return;
}
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer v0, v10;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v4;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v6, v8;
java.lang.Class v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v5, v7, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: java.lang.Class handledType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v3);
v5 = 0;
if v4 == null goto label2;
v6 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.'annotation'.JsonFormat$Shape: boolean isNumeric()>();
if v7 != 0 goto label1;
v8 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape ARRAY>;
if v6 != v8 goto label2;
label1:
v5 = 1;
label2:
v9 = v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: boolean _asNumeric>;
if v5 == v9 goto label3;
v10 = new com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
specialinvoke v10.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void <init>(boolean)>(v5);
return v10;
label3:
return v0;
}
public void serialize(java.net.InetAddress, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer v0;
java.net.InetAddress v1;
int v7;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v5, v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
v1 := @parameter0: java.net.InetAddress;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: boolean _asNumeric>;
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<java.net.InetAddress: java.lang.String getHostAddress()>();
goto label3;
label1:
v6 = virtualinvoke v1.<java.net.InetAddress: java.lang.String toString()>();
v5 = virtualinvoke v6.<java.lang.String: java.lang.String trim()>();
v7 = virtualinvoke v5.<java.lang.String: int indexOf(int)>(47);
if v7 < 0 goto label3;
if v7 != 0 goto label2;
v5 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int)>(1);
goto label3;
label2:
v5 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v7);
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v5);
return;
}
public void serializeWithType(java.net.InetAddress, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
java.net.InetAddress v1;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
v1 := @parameter0: java.net.InetAddress;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken)>(v1, class "Ljava/net/InetAddress;", v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
}