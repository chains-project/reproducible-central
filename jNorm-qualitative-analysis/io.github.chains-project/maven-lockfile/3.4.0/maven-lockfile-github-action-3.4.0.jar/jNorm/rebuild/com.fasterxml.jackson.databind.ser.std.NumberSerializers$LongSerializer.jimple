public class com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base
{
public void <init>(java.lang.Class)
{
com.fasterxml.jackson.core.JsonParser$NumberType v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer;
v1 := @parameter0: java.lang.Class;
v2 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base: void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String)>(v1, v2, "integer");
return;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.lang.Object v1;
long v4;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v1.<java.lang.Long: long longValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(v4);
return;
}
}