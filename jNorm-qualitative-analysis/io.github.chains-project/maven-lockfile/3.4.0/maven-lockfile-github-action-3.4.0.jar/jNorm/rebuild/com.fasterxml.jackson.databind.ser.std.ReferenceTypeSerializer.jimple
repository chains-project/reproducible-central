public abstract class com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
private static final long serialVersionUID;
public static final java.lang.Object MARKER_FOR_EMPTY;
protected final com.fasterxml.jackson.databind.JavaType _referredType;
protected final com.fasterxml.jackson.databind.BeanProperty _property;
protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;
protected final com.fasterxml.jackson.databind.JsonSerializer _valueSerializer;
protected final com.fasterxml.jackson.databind.util.NameTransformer _unwrapper;
protected transient com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
protected final java.lang.Object _suppressableValue;
protected final boolean _suppressNulls;
public void <init>(com.fasterxml.jackson.databind.type.ReferenceType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.type.ReferenceType v1;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v6;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v5;
boolean v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ReferenceType;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.type.ReferenceType: com.fasterxml.jackson.databind.JavaType getReferencedType()>();
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType> = v5;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = null;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v3;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = v4;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper> = null;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue> = null;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls> = 0;
v6 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v6;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.util.NameTransformer, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0, v1;
com.fasterxml.jackson.databind.util.NameTransformer v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v9;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v8;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.util.NameTransformer;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.StdSerializer)>(v1);
v8 = v1.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType> = v8;
v9 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v9;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v3;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = v4;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper> = v5;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue> = v6;
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls> = v7;
return;
}
public com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.BeanProperty v10;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v11;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0, v12;
com.fasterxml.jackson.databind.util.NameTransformer v1, v4, v5, v6, v7, v9;
com.fasterxml.jackson.databind.JsonSerializer v2, v3, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v2 == null goto label1;
v2 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v1);
v3 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v2 != v3 goto label1;
return v0;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v4 != null goto label2;
v5 = v1;
goto label3;
label2:
v6 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>(v1, v6);
label3:
v7 = v5;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v8 != v2 goto label4;
v9 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v9 != v5 goto label4;
return v0;
label4:
v10 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v11 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer)>(v10, v11, v2, v7);
return v12;
}
protected abstract com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.util.NameTransformer);
public abstract com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object, boolean);
protected abstract boolean _isValuePresent(java.lang.Object);
protected abstract java.lang.Object _getReferenced(java.lang.Object);
protected abstract java.lang.Object _getReferencedIfPresent(java.lang.Object);
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v13;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3, v9;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v16, v17;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v15;
int[] v18;
com.fasterxml.jackson.databind.JsonSerializer v10, v4;
boolean v23, v25, v27, v31, v6;
com.fasterxml.jackson.databind.BeanProperty v2, v8;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0, v11;
int v19, v20;
com.fasterxml.jackson.databind.JavaType v21, v26, v5, v7;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.util.NameTransformer v12;
java.lang.Class v14, v24, v29;
java.lang.Object v22, v28, v30;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v3 == null goto label01;
v3 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(v2);
label01:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
if v4 != null goto label03;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v4 != null goto label02;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _useStatic(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v5);
if v6 == 0 goto label03;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v4 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, v7, v2);
goto label03;
label02:
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
label03:
v8 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
if v8 != v2 goto label04;
v9 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v9 != v3 goto label04;
v10 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v10 != v4 goto label04;
v11 = v0;
goto label05;
label04:
v12 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer)>(v2, v3, v4, v12);
label05:
if v2 == null goto label17;
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Class handledType()>();
v15 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.'annotation'.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v13, v14);
if v15 == null goto label17;
v16 = virtualinvoke v15.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();
v17 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
if v16 == v17 goto label17;
v18 = <com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v19 = virtualinvoke v16.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v20 = v18[v19];
tableswitch(v20)
{
case 1: goto label06;
case 2: goto label07;
case 3: goto label10;
case 4: goto label11;
case 5: goto label13;
case 6: goto label14;
default: goto label14;
};
label06:
v21 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v22 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v21);
v23 = 1;
if v22 == null goto label15;
v24 = virtualinvoke v22.<java.lang.Object: java.lang.Class getClass()>();
v25 = virtualinvoke v24.<java.lang.Class: boolean isArray()>();
if v25 == 0 goto label15;
v22 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(v22);
goto label15;
label07:
v23 = 1;
v26 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v27 == 0 goto label08;
v28 = <com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label09;
label08:
v28 = null;
label09:
v22 = v28;
goto label15;
label10:
v23 = 1;
v22 = <com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label15;
label11:
v29 = virtualinvoke v15.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();
v22 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, v29);
if v22 != null goto label12;
v23 = 1;
goto label15;
label12:
v23 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(v22);
goto label15;
label13:
v22 = null;
v23 = 1;
goto label15;
label14:
v22 = null;
v23 = 0;
label15:
v30 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;
if v30 != v22 goto label16;
v31 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls>;
if v31 == v23 goto label17;
label16:
v11 = virtualinvoke v11.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean)>(v22, v23);
label17:
return v11;
}
protected boolean _useStatic(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v7;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing v10, v11, v12;
com.fasterxml.jackson.databind.MapperFeature v13;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v8, v9;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v14, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v4 == 0 goto label1;
return 0;
label1:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();
if v5 == 0 goto label2;
return 1;
label2:
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean useStaticType()>();
if v6 == 0 goto label3;
return 1;
label3:
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
if v7 == null goto label5;
if v2 == null goto label5;
v8 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v8 == null goto label5;
v9 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
v10 = virtualinvoke v7.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)>(v9);
v11 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC>;
if v10 != v11 goto label4;
return 1;
label4:
v12 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DYNAMIC>;
if v10 != v12 goto label5;
return 0;
label5:
v13 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v14 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v13);
return v14;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
{
com.fasterxml.jackson.databind.JsonSerializer v7;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.RuntimeJsonMappingException v10;
boolean v13, v15, v3, v5;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
java.lang.Class v8;
java.lang.Object v11, v12, v14, v2, v4, v6;
com.fasterxml.jackson.databind.JsonMappingException v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _isValuePresent(java.lang.Object)>(v2);
if v3 != 0 goto label1;
return 1;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _getReferenced(java.lang.Object)>(v2);
if v4 != null goto label2;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls>;
return v5;
label2:
v6 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;
if v6 != null goto label3;
return 0;
label3:
v7 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v7 != null goto label7;
label4:
v8 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class)>(v1, v8);
label5:
goto label7;
label6:
v9 := @caughtexception;
v10 = new com.fasterxml.jackson.databind.RuntimeJsonMappingException;
specialinvoke v10.<com.fasterxml.jackson.databind.RuntimeJsonMappingException: void <init>(com.fasterxml.jackson.databind.JsonMappingException)>(v9);
throw v10;
label7:
v11 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;
v12 = <com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v11 != v12 goto label8;
v13 = virtualinvoke v7.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v4);
return v13;
label8:
v14 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;
v15 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
return v15;
catch com.fasterxml.jackson.databind.JsonMappingException from label4 to label5 with label6;
}
public boolean isUnwrappingSerializer()
{
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.databind.JavaType getReferredType()
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
return v1;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v8, v9;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v5;
com.fasterxml.jackson.databind.JsonSerializer v6;
java.lang.Class v7;
java.lang.Object v1, v4;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _getReferencedIfPresent(java.lang.Object)>(v1);
if v4 != null goto label2;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v5 != null goto label1;
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v2);
label1:
return;
label2:
v6 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v6 != null goto label3;
v7 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v6 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class)>(v3, v7);
label3:
v8 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v8 == null goto label4;
v9 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v4, v2, v3, v9);
goto label5;
label4:
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v4, v2, v3);
label5:
return;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v6;
com.fasterxml.jackson.databind.JsonSerializer v7;
java.lang.Class v8;
java.lang.Object v1, v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _getReferencedIfPresent(java.lang.Object)>(v1);
if v5 != null goto label2;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v6 != null goto label1;
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v2);
label1:
return;
label2:
v7 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v7 != null goto label3;
v8 = virtualinvoke v5.<java.lang.Object: java.lang.Class getClass()>();
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class)>(v3, v8);
label3:
virtualinvoke v7.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v5, v2, v3, v4);
return;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v6;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v7, v8;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v2, v5, v9;
com.fasterxml.jackson.databind.SerializerProvider v4;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v3 != null goto label1;
v4 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.SerializerProvider getProvider()>();
v5 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v3 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v4, v5, v6);
v7 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v7 == null goto label1;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
v3 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v8);
label1:
v9 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
virtualinvoke v3.<com.fasterxml.jackson.databind.JsonSerializer: void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)>(v1, v9);
return;
}
private final com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v10, v9;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v11, v12;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v13, v14, v3;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v5, v7, v8;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v2);
if v4 != null goto label4;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();
if v6 == 0 goto label1;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.JavaType _referredType>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v7, v2);
v9 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v8, v9);
goto label2;
label1:
v10 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v2, v10);
label2:
v11 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
if v11 == null goto label3;
v12 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
v4 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v12);
label3:
v13 = v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v2, v4);
v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v14;
label4:
return v4;
}
private final com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v0;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3);
return v4;
}
static void <clinit>()
{
com.fasterxml.jackson.'annotation'.JsonInclude$Include v0;
v0 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_EMPTY>;
<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY> = v0;
return;
}
}