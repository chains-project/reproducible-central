public abstract class com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase extends com.fasterxml.jackson.databind.ser.std.StdSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
protected final java.lang.Boolean _unwrapSingle;
protected void <init>(java.lang.Class)
{
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(v1, 0);
v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Boolean _unwrapSingle> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase, java.lang.Boolean)
{
java.lang.Boolean v2;
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.StdSerializer)>(v1);
v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Boolean _unwrapSingle> = v2;
return;
}
public abstract com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean);
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v5;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v9;
com.fasterxml.jackson.databind.ser.std.CollectionSerializer v16;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v6;
com.fasterxml.jackson.databind.JsonSerializer v11, v15, v3;
java.lang.Boolean v13, v4;
com.fasterxml.jackson.databind.JavaType v17;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v12, v14;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v10;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase v0;
java.lang.Class v8;
java.lang.Object v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = null;
v4 = null;
if v2 == null goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v6 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v6 == null goto label1;
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v6);
if v7 == null goto label1;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v6, v7);
label1:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Class handledType()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v8);
if v9 == null goto label2;
v10 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v4 = virtualinvoke v9.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v10);
label2:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3);
if v11 != null goto label3;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(class "Ljava/lang/String;", v2);
label3:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)>(v11);
if v12 == 0 goto label5;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Boolean _unwrapSingle>;
v14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v13);
if v14 == 0 goto label4;
return v0;
label4:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean)>(v2, v4);
return v15;
label5:
v16 = new com.fasterxml.jackson.databind.ser.std.CollectionSerializer;
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(class "Ljava/lang/String;");
specialinvoke v16.<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v17, 1, null, v11);
return v16;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.util.Collection)
{
java.util.Collection v2;
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase v0;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v3, v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.util.Collection;
if v2 == null goto label1;
v3 = interfaceinvoke v2.<java.util.Collection: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
{
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.JsonNode v4, v5;
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase v0;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.node.ObjectNode v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: com.fasterxml.jackson.databind.JsonNode contentSchema()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>("items", v4);
return v5;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor v3;
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase v0;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v3 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor)>(v3);
label1:
return;
}
protected abstract com.fasterxml.jackson.databind.JsonNode contentSchema();
protected abstract void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) throws com.fasterxml.jackson.databind.JsonMappingException;
public abstract void serializeWithType(java.util.Collection, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
}