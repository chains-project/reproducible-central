public class com.fasterxml.jackson.databind.ser.std.StdArraySerializers extends java.lang.Object
{
protected static final java.util.HashMap _arraySerializers;
protected void <init>()
{
com.fasterxml.jackson.databind.ser.std.StdArraySerializers v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdArraySerializers;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class)
{
java.lang.Class v0;
java.lang.Object v3;
java.util.HashMap v1;
java.lang.String v2;
v0 := @parameter0: java.lang.Class;
v1 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v2 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v3 = virtualinvoke v1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer v20;
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer v24;
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer v4;
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer v8;
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer v16;
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer v32;
java.util.HashMap v0, v1, v13, v17, v21, v25, v29, v5, v9;
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer v28;
java.lang.String v11, v15, v19, v23, v27, v3, v31, v7;
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer v12;
java.lang.Class v10, v14, v18, v2, v22, v26, v30, v6;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
<com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers> = v0;
v1 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v2 = class "[Z";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer;
specialinvoke v4.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer: void <init>()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
v5 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v6 = class "[B";
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = new com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;
specialinvoke v8.<com.fasterxml.jackson.databind.ser.std.ByteArraySerializer: void <init>()>();
virtualinvoke v5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v8);
v9 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v10 = class "[C";
v11 = virtualinvoke v10.<java.lang.Class: java.lang.String getName()>();
v12 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;
specialinvoke v12.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void <init>()>();
virtualinvoke v9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v12);
v13 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v14 = class "[S";
v15 = virtualinvoke v14.<java.lang.Class: java.lang.String getName()>();
v16 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer;
specialinvoke v16.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer: void <init>()>();
virtualinvoke v13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v16);
v17 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v18 = class "[I";
v19 = virtualinvoke v18.<java.lang.Class: java.lang.String getName()>();
v20 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer;
specialinvoke v20.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer: void <init>()>();
virtualinvoke v17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v19, v20);
v21 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v22 = class "[J";
v23 = virtualinvoke v22.<java.lang.Class: java.lang.String getName()>();
v24 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer;
specialinvoke v24.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer: void <init>()>();
virtualinvoke v21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v23, v24);
v25 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v26 = class "[F";
v27 = virtualinvoke v26.<java.lang.Class: java.lang.String getName()>();
v28 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer;
specialinvoke v28.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer: void <init>()>();
virtualinvoke v25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v27, v28);
v29 = <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;
v30 = class "[D";
v31 = virtualinvoke v30.<java.lang.Class: java.lang.String getName()>();
v32 = new com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer;
specialinvoke v32.<com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer: void <init>()>();
virtualinvoke v29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v31, v32);
return;
}
}