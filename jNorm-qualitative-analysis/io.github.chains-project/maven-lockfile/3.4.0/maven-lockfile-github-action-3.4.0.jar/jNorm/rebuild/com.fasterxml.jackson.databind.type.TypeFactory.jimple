public class com.fasterxml.jackson.databind.type.TypeFactory extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private static final com.fasterxml.jackson.databind.JavaType[] NO_TYPES;
protected static final com.fasterxml.jackson.databind.type.TypeFactory instance;
protected static final com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS;
private static final java.lang.Class CLS_STRING;
private static final java.lang.Class CLS_OBJECT;
private static final java.lang.Class CLS_COMPARABLE;
private static final java.lang.Class CLS_ENUM;
private static final java.lang.Class CLS_JSON_NODE;
private static final java.lang.Class CLS_BOOL;
private static final java.lang.Class CLS_INT;
private static final java.lang.Class CLS_LONG;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM;
protected static final com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE;
protected final com.fasterxml.jackson.databind.util.LookupCache _typeCache;
protected final com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers;
protected final com.fasterxml.jackson.databind.type.TypeParser _parser;
protected final java.lang.ClassLoader _classLoader;
private void <init>()
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.util.LookupCache v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 = null;
specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LookupCache)>(v1);
return;
}
protected void <init>(com.fasterxml.jackson.databind.util.LRUMap)
{
com.fasterxml.jackson.databind.util.LRUMap v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LRUMap;
specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LookupCache)>(v1);
return;
}
protected void <init>(com.fasterxml.jackson.databind.util.LookupCache)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeParser v3;
com.fasterxml.jackson.databind.util.LookupCache v1;
com.fasterxml.jackson.databind.util.LRUMap v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LookupCache;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v2 = new com.fasterxml.jackson.databind.util.LRUMap;
specialinvoke v2.<com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(16, 200);
v1 = v2;
label1:
v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache> = v1;
v3 = new com.fasterxml.jackson.databind.type.TypeParser;
specialinvoke v3.<com.fasterxml.jackson.databind.type.TypeParser: void <init>(com.fasterxml.jackson.databind.type.TypeFactory)>(v0);
v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser> = v3;
v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers> = null;
v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.util.LRUMap, com.fasterxml.jackson.databind.type.TypeParser, com.fasterxml.jackson.databind.type.TypeModifier[], java.lang.ClassLoader)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeParser v2;
com.fasterxml.jackson.databind.type.TypeModifier[] v3;
com.fasterxml.jackson.databind.util.LRUMap v1;
java.lang.ClassLoader v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LRUMap;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeParser;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeModifier[];
v4 := @parameter3: java.lang.ClassLoader;
specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LookupCache,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(v1, v2, v3, v4);
return;
}
protected void <init>(com.fasterxml.jackson.databind.util.LookupCache, com.fasterxml.jackson.databind.type.TypeParser, com.fasterxml.jackson.databind.type.TypeModifier[], java.lang.ClassLoader)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeParser v2, v6;
com.fasterxml.jackson.databind.type.TypeModifier[] v3;
com.fasterxml.jackson.databind.util.LookupCache v1;
com.fasterxml.jackson.databind.util.LRUMap v5;
java.lang.ClassLoader v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LookupCache;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeParser;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeModifier[];
v4 := @parameter3: java.lang.ClassLoader;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v5 = new com.fasterxml.jackson.databind.util.LRUMap;
specialinvoke v5.<com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(16, 200);
v1 = v5;
label1:
v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache> = v1;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeParser: com.fasterxml.jackson.databind.type.TypeParser withFactory(com.fasterxml.jackson.databind.type.TypeFactory)>(v0);
v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser> = v6;
v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers> = v3;
v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader> = v4;
return;
}
public com.fasterxml.jackson.databind.type.TypeFactory withModifier(com.fasterxml.jackson.databind.type.TypeModifier)
{
java.lang.Object[] v6;
com.fasterxml.jackson.databind.type.TypeParser v8;
com.fasterxml.jackson.databind.type.TypeModifier[] v3, v4, v5;
com.fasterxml.jackson.databind.type.TypeModifier v1;
com.fasterxml.jackson.databind.type.TypeFactory v0, v7;
com.fasterxml.jackson.databind.util.LookupCache v2;
java.lang.ClassLoader v9;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeModifier;
v2 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache>;
if v1 != null goto label1;
v2 = null;
goto label3;
label1:
v3 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
if v3 != null goto label2;
v4 = newarray (com.fasterxml.jackson.databind.type.TypeModifier)[1];
v4[0] = v1;
v2 = null;
goto label3;
label2:
v5 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>(v5, v1);
label3:
v7 = new com.fasterxml.jackson.databind.type.TypeFactory;
v8 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser>;
v9 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;
specialinvoke v7.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LookupCache,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(v2, v8, v6, v9);
return v7;
}
public com.fasterxml.jackson.databind.type.TypeFactory withClassLoader(java.lang.ClassLoader)
{
com.fasterxml.jackson.databind.type.TypeFactory v0, v2;
com.fasterxml.jackson.databind.type.TypeParser v4;
com.fasterxml.jackson.databind.type.TypeModifier[] v5;
com.fasterxml.jackson.databind.util.LookupCache v3;
java.lang.ClassLoader v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.ClassLoader;
v2 = new com.fasterxml.jackson.databind.type.TypeFactory;
v3 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache>;
v4 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser>;
v5 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
specialinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LookupCache,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(v3, v4, v5, v1);
return v2;
}
public com.fasterxml.jackson.databind.type.TypeFactory withCache(com.fasterxml.jackson.databind.util.LRUMap)
{
com.fasterxml.jackson.databind.type.TypeFactory v0, v2;
com.fasterxml.jackson.databind.type.TypeParser v3;
com.fasterxml.jackson.databind.type.TypeModifier[] v4;
com.fasterxml.jackson.databind.util.LRUMap v1;
java.lang.ClassLoader v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LRUMap;
v2 = new com.fasterxml.jackson.databind.type.TypeFactory;
v3 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser>;
v4 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
v5 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;
specialinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LRUMap,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(v1, v3, v4, v5);
return v2;
}
public com.fasterxml.jackson.databind.type.TypeFactory withCache(com.fasterxml.jackson.databind.util.LookupCache)
{
com.fasterxml.jackson.databind.type.TypeFactory v0, v2;
com.fasterxml.jackson.databind.type.TypeParser v3;
com.fasterxml.jackson.databind.type.TypeModifier[] v4;
com.fasterxml.jackson.databind.util.LookupCache v1;
java.lang.ClassLoader v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.util.LookupCache;
v2 = new com.fasterxml.jackson.databind.type.TypeFactory;
v3 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser>;
v4 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
v5 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;
specialinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>(com.fasterxml.jackson.databind.util.LookupCache,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(v1, v3, v4, v5);
return v2;
}
public static com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory instance>;
return v0;
}
public void clearCache()
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.util.LookupCache v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache>;
interfaceinvoke v1.<com.fasterxml.jackson.databind.util.LookupCache: void clear()>();
return;
}
public java.lang.ClassLoader getClassLoader()
{
java.lang.ClassLoader v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;
return v1;
}
public static com.fasterxml.jackson.databind.JavaType unknownType()
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _unknownType()>();
return v1;
}
public static java.lang.Class rawClass(java.lang.reflect.Type)
{
com.fasterxml.jackson.databind.type.TypeFactory v2;
java.lang.reflect.Type v0;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v3;
boolean v1;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 == 0 goto label1;
return v0;
label1:
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v0);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
return v4;
}
public java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
{
java.lang.Throwable v4;
java.lang.Exception v10, v8;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Thread v6;
int v2;
java.lang.Class v3, v7, v9;
java.lang.ClassNotFoundException v11;
java.lang.ClassLoader v5;
java.lang.String v1, v12;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(46);
if v2 >= 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class _findPrimitive(java.lang.String)>(v1);
if v3 == null goto label1;
return v3;
label1:
v4 = null;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader getClassLoader()>();
if v5 != null goto label2;
v6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v5 = virtualinvoke v6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label2:
if v5 == null goto label6;
label3:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader)>(v1, 1, v5);
label4:
return v7;
label5:
v8 := @caughtexception;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>(v8);
label6:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class classForName(java.lang.String)>(v1);
label7:
return v9;
label8:
v10 := @caughtexception;
if v4 != null goto label9;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>(v10);
label9:
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfRTE(java.lang.Throwable)>(v4);
v11 = new java.lang.ClassNotFoundException;
v12 = virtualinvoke v4.<java.lang.Throwable: java.lang.String getMessage()>();
specialinvoke v11.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(v12, v4);
throw v11;
catch java.lang.Exception from label3 to label4 with label5;
catch java.lang.Exception from label6 to label7 with label8;
}
protected java.lang.Class classForName(java.lang.String, boolean, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v4;
java.lang.ClassLoader v3;
java.lang.String v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.ClassLoader;
v4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v1, 1, v3);
return v4;
}
protected java.lang.Class classForName(java.lang.String) throws java.lang.ClassNotFoundException
{
java.lang.Class v2;
java.lang.String v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(v1);
return v2;
}
protected java.lang.Class _findPrimitive(java.lang.String)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.String v1, v11, v14, v17, v2, v20, v23, v26, v5, v8;
boolean v12, v15, v18, v21, v24, v27, v3, v6, v9;
java.lang.Class v10, v13, v16, v19, v22, v25, v28, v4, v7;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.String;
v2 = "int";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label1;
v4 = <java.lang.Integer: java.lang.Class TYPE>;
return v4;
label1:
v5 = "long";
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v6 == 0 goto label2;
v7 = <java.lang.Long: java.lang.Class TYPE>;
return v7;
label2:
v8 = "float";
v9 = virtualinvoke v8.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v9 == 0 goto label3;
v10 = <java.lang.Float: java.lang.Class TYPE>;
return v10;
label3:
v11 = "double";
v12 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v12 == 0 goto label4;
v13 = <java.lang.Double: java.lang.Class TYPE>;
return v13;
label4:
v14 = "boolean";
v15 = virtualinvoke v14.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v15 == 0 goto label5;
v16 = <java.lang.Boolean: java.lang.Class TYPE>;
return v16;
label5:
v17 = "byte";
v18 = virtualinvoke v17.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v18 == 0 goto label6;
v19 = <java.lang.Byte: java.lang.Class TYPE>;
return v19;
label6:
v20 = "char";
v21 = virtualinvoke v20.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v21 == 0 goto label7;
v22 = <java.lang.Character: java.lang.Class TYPE>;
return v22;
label7:
v23 = "short";
v24 = virtualinvoke v23.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v24 == 0 goto label8;
v25 = <java.lang.Short: java.lang.Class TYPE>;
return v25;
label8:
v26 = "void";
v27 = virtualinvoke v26.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v27 == 0 goto label9;
v28 = <java.lang.Void: java.lang.Class TYPE>;
return v28;
label9:
return null;
}
public com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1, v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean)>(v1, v2, 0);
return v3;
}
public com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class, boolean) throws java.lang.IllegalArgumentException
{
java.lang.Object[] v9;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v17, v20, v21, v23, v26, v27, v5;
int v25;
com.fasterxml.jackson.databind.JavaType v1, v15, v16, v19, v28, v6;
java.lang.String v10, v11, v12;
boolean v13, v14, v18, v22, v3, v7;
java.lang.IllegalArgumentException v8;
java.lang.reflect.TypeVariable[] v24;
java.lang.Class v2, v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: boolean;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v4 != v2 goto label01;
return v1;
label01:
if v4 != class "Ljava/lang/Object;" goto label02;
v5 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v5);
goto label11;
label02:
v7 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v2);
if v7 != 0 goto label03;
v8 = new java.lang.IllegalArgumentException;
v9 = newarray (java.lang.Object)[2];
v10 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v2);
v9[0] = v10;
v11 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
v9[1] = v11;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Class %s not subtype of %s", v9);
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v8;
label03:
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v13 == 0 goto label08;
v14 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v14 == 0 goto label05;
if v2 == class "Ljava/util/HashMap;" goto label04;
if v2 == class "Ljava/util/LinkedHashMap;" goto label04;
if v2 == class "Ljava/util/EnumMap;" goto label04;
if v2 != class "Ljava/util/TreeMap;" goto label08;
label04:
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
v16 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v17 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v2, v15, v16);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v17);
goto label11;
label05:
v18 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();
if v18 == 0 goto label08;
if v2 == class "Ljava/util/ArrayList;" goto label06;
if v2 == class "Ljava/util/LinkedList;" goto label06;
if v2 == class "Ljava/util/HashSet;" goto label06;
if v2 != class "Ljava/util/TreeSet;" goto label07;
label06:
v19 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v20 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v2, v19);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v20);
goto label11;
label07:
if v4 != class "Ljava/util/EnumSet;" goto label08;
return v1;
label08:
v21 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v22 = virtualinvoke v21.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v22 == 0 goto label09;
v23 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v23);
goto label11;
label09:
v24 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v25 = lengthof v24;
if v25 != 0 goto label10;
v26 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v26);
goto label11;
label10:
v27 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(com.fasterxml.jackson.databind.JavaType,int,java.lang.Class,boolean)>(v1, v25, v2, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v27);
label11:
v28 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType)>(v1);
return v28;
}
private com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(com.fasterxml.jackson.databind.JavaType, int, java.lang.Class, boolean)
{
com.fasterxml.jackson.databind.type.PlaceholderForType v25, v7;
java.lang.Object[] v13;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v27, v8;
int v2, v24, v6;
com.fasterxml.jackson.databind.JavaType v1, v11, v26, v9;
java.lang.String v15, v16, v17, v18, v20, v21, v22;
boolean v4;
java.lang.IllegalArgumentException v12, v19;
com.fasterxml.jackson.databind.JavaType[] v23;
com.fasterxml.jackson.databind.type.PlaceholderForType[] v5;
java.lang.Class v10, v14, v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Class;
v4 := @parameter3: boolean;
v5 = newarray (com.fasterxml.jackson.databind.type.PlaceholderForType)[v2];
v6 = 0;
label1:
if v6 >= v2 goto label2;
v7 = new com.fasterxml.jackson.databind.type.PlaceholderForType;
specialinvoke v7.<com.fasterxml.jackson.databind.type.PlaceholderForType: void <init>(int)>(v6);
v5[v6] = v7;
v6 = v6 + 1;
goto label1;
label2:
v8 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v3, v5);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v3, v8);
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v11 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(v10);
if v11 != null goto label3;
v12 = new java.lang.IllegalArgumentException;
v13 = newarray (java.lang.Object)[2];
v14 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v15 = virtualinvoke v14.<java.lang.Class: java.lang.String getName()>();
v13[0] = v15;
v16 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v13[1] = v16;
v17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Internal error: unable to locate supertype (%s) from resolved subtype %s", v13);
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v12;
label3:
v18 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.String _resolveTypePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v11);
if v18 == null goto label4;
if v4 != 0 goto label4;
v19 = new java.lang.IllegalArgumentException;
v20 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();
v21 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v20, v21, v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to specialize base type \u0001 as \u0001, problem: \u0001");
specialinvoke v19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v22);
throw v19;
label4:
v23 = newarray (com.fasterxml.jackson.databind.JavaType)[v2];
v24 = 0;
label5:
if v24 >= v2 goto label7;
v25 = v5[v24];
v26 = virtualinvoke v25.<com.fasterxml.jackson.databind.type.PlaceholderForType: com.fasterxml.jackson.databind.JavaType actualType()>();
if v26 != null goto label6;
v26 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
label6:
v23[v24] = v26;
v24 = v24 + 1;
goto label5;
label7:
v27 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v3, v23);
return v27;
}
private java.lang.String _resolveTypePlaceholders(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException
{
java.lang.Object[] v20;
java.lang.Integer v22, v23;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3, v5;
int v21, v7, v8, v9;
com.fasterxml.jackson.databind.JavaType v1, v12, v2;
java.lang.String v24, v25, v26;
boolean v13, v14, v15, v16, v17, v19;
java.util.List v4, v6;
java.lang.Class v18;
java.lang.Object v10, v11;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v7 = interfaceinvoke v6.<java.util.List: int size()>();
v8 = 0;
v9 = interfaceinvoke v4.<java.util.List: int size()>();
label1:
if v8 >= v9 goto label7;
v10 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(v8);
if v8 >= v7 goto label2;
v11 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v8);
goto label3;
label2:
v11 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
label3:
v12 = v11;
v13 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v10, v11);
if v13 != 0 goto label6;
v14 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");
if v14 != 0 goto label6;
if v8 != 0 goto label4;
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v15 == 0 goto label4;
v16 = virtualinvoke v11.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");
if v16 != 0 goto label6;
label4:
v17 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: boolean isInterface()>();
if v17 == 0 goto label5;
v18 = virtualinvoke v12.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v19 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>(v18);
if v19 != 0 goto label6;
label5:
v20 = newarray (java.lang.Object)[4];
v21 = v8 + 1;
v22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v21);
v20[0] = v22;
v23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v9);
v20[1] = v23;
v24 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();
v20[2] = v24;
v25 = virtualinvoke v12.<com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();
v20[3] = v25;
v26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Type parameter #%d/%d differs; can not specialize %s with %s", v20);
return v26;
label6:
v8 = v8 + 1;
goto label1;
label7:
return null;
}
private boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
java.util.List v7, v9;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v6, v8;
int v10, v11;
java.lang.Class v4, v5;
java.lang.Object v12, v13;
com.fasterxml.jackson.databind.JavaType v1, v2;
boolean v14, v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v2 instanceof com.fasterxml.jackson.databind.type.PlaceholderForType;
if v3 == 0 goto label1;
virtualinvoke v2.<com.fasterxml.jackson.databind.type.PlaceholderForType: void actualType(com.fasterxml.jackson.databind.JavaType)>(v1);
return 1;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v4 == v5 goto label2;
return 0;
label2:
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v10 = 0;
v11 = interfaceinvoke v7.<java.util.List: int size()>();
label3:
if v10 >= v11 goto label5;
v12 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(v10);
v13 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(v10);
v14 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v12, v13);
if v14 != 0 goto label4;
return 0;
label4:
v10 = v10 + 1;
goto label3;
label5:
return 1;
}
public com.fasterxml.jackson.databind.JavaType constructGeneralizedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class)
{
java.lang.Object[] v11, v7;
java.lang.IllegalArgumentException v10, v6;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v2, v3;
com.fasterxml.jackson.databind.JavaType v1, v4;
java.lang.String v12, v13, v8, v9;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v3 != v2 goto label1;
return v1;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(v2);
if v4 != null goto label3;
v5 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v5 != 0 goto label2;
v6 = new java.lang.IllegalArgumentException;
v7 = newarray (java.lang.Object)[2];
v8 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v7[0] = v8;
v7[1] = v1;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Class %s not a super-type of %s", v7);
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v6;
label2:
v10 = new java.lang.IllegalArgumentException;
v11 = newarray (java.lang.Object)[2];
v12 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v11[0] = v12;
v11[1] = v1;
v13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Internal error: class %s not included as super-type for %s", v11);
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v13);
throw v10;
label3:
return v4;
}
public com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeParser v2;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeParser _parser>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeParser: com.fasterxml.jackson.databind.JavaType parse(java.lang.String)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType, java.lang.Class)
{
com.fasterxml.jackson.databind.JavaType[] v4, v6;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v5;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1, v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(v2);
if v3 != null goto label1;
v4 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;
return v4;
label1:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType[] typeParameterArray()>();
return v6;
}
public com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class, java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.JavaType[] v5;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v4, v2);
return v5;
}
public com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v3, v2);
return v4;
}
public com.fasterxml.jackson.databind.JavaType moreSpecificType(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v3, v4;
com.fasterxml.jackson.databind.JavaType v1, v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
if v1 != null goto label1;
return v2;
label1:
if v2 != null goto label2;
return v1;
label2:
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v3 != v4 goto label3;
return v1;
label3:
v5 = virtualinvoke v3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v4);
if v5 == 0 goto label4;
return v2;
label4:
return v1;
}
public com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v1;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.reflect.Type;
v2 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.type.TypeBindings v3;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.type.TypeReference: java.lang.reflect.Type getType()>();
v3 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v3);
return v4;
}
public com.fasterxml.jackson.databind.JavaType resolveMemberType(java.lang.reflect.Type, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v1;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v1;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.JavaType v4, v5, v6;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 = v1 instanceof java.lang.Class;
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v2);
return v6;
}
public com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type, java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v1;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v3, v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: java.lang.Class;
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v1;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v2, v6;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
if v2 != null goto label1;
v3 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
goto label3;
label1:
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v4 == class "Ljava/lang/Class;" goto label3;
label2:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v5 == 0 goto label3;
v2 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getSuperClass()>();
if v2 == null goto label3;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
goto label2;
label3:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v3);
return v6;
}
public com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.ArrayType v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, null);
v3 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings)>(v2, null);
return v3;
}
public com.fasterxml.jackson.databind.type.ArrayType constructArrayType(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.type.ArrayType v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, null);
return v2;
}
public com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
com.fasterxml.jackson.databind.type.CollectionType v5;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class, com.fasterxml.jackson.databind.JavaType)
{
java.lang.Object[] v10;
java.lang.IllegalArgumentException v9;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2, v4, v6, v7;
java.lang.String v11, v12;
boolean v5, v8;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v3);
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v5 == 0 goto label1;
if v2 == null goto label1;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(class "Ljava/util/Collection;");
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(v2);
if v8 != 0 goto label1;
v9 = new java.lang.IllegalArgumentException;
v10 = newarray (java.lang.Object)[3];
v11 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v10[0] = v11;
v10[1] = v2;
v10[2] = v7;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-generic Collection class %s did not resolve to something with element type %s but %s ", v10);
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v9;
label1:
return v4;
}
public com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.type.CollectionLikeType v5;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.type.CollectionLikeType v6;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2, v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v3);
v5 = v4 instanceof com.fasterxml.jackson.databind.type.CollectionLikeType;
if v5 == 0 goto label1;
return v4;
label1:
v6 = staticinvoke <com.fasterxml.jackson.databind.type.CollectionLikeType: com.fasterxml.jackson.databind.type.CollectionLikeType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v6;
}
public com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class, java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.type.SimpleType v4;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v7, v8;
java.lang.Class v1, v2, v3;
com.fasterxml.jackson.databind.JavaType v5, v6;
com.fasterxml.jackson.databind.type.MapType v9;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.Class;
if v1 != class "Ljava/util/Properties;" goto label1;
v4 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;
v5 = v4;
v6 = v4;
goto label2;
label1:
v7 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v7);
v8 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v3, v8);
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v6, v5);
return v9;
}
public com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
java.lang.Object[] v12, v18;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v5;
com.fasterxml.jackson.databind.JavaType v15, v2, v3, v6, v8, v9;
java.lang.String v13, v14, v19, v20;
boolean v10, v16, v7;
java.lang.IllegalArgumentException v11, v17;
com.fasterxml.jackson.databind.JavaType[] v4;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = newarray (com.fasterxml.jackson.databind.JavaType)[2];
v4[0] = v2;
v4[1] = v3;
v5 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v5);
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v7 == 0 goto label2;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(class "Ljava/util/Map;");
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(v2);
if v10 != 0 goto label1;
v11 = new java.lang.IllegalArgumentException;
v12 = newarray (java.lang.Object)[3];
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v12[0] = v13;
v12[1] = v2;
v12[2] = v9;
v14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-generic Map class %s did not resolve to something with key type %s but %s ", v12);
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v11;
label1:
v15 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(v3);
if v16 != 0 goto label2;
v17 = new java.lang.IllegalArgumentException;
v18 = newarray (java.lang.Object)[3];
v19 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v18[0] = v19;
v18[1] = v3;
v18[2] = v15;
v20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-generic Map class %s did not resolve to something with value type %s but %s ", v18);
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v20);
throw v17;
label2:
return v6;
}
public com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class, java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v4, v6;
java.lang.Class v1, v2, v3;
com.fasterxml.jackson.databind.JavaType v5, v7;
com.fasterxml.jackson.databind.type.MapLikeType v8;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.Class;
v4 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v2, v4);
v6 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v3, v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v5, v7);
return v8;
}
public com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v5;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2, v3, v6;
com.fasterxml.jackson.databind.type.MapLikeType v8;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = newarray (com.fasterxml.jackson.databind.JavaType)[2];
v4[0] = v2;
v4[1] = v3;
v5 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v5);
v7 = v6 instanceof com.fasterxml.jackson.databind.type.MapLikeType;
if v7 == 0 goto label1;
return v6;
label1:
v8 = staticinvoke <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v6, v2, v3);
return v8;
}
public com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v2;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType[];
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class, java.lang.Class, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v3;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.JavaType constructReferenceType(java.lang.Class, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.ReferenceType v4;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
v4 = staticinvoke <com.fasterxml.jackson.databind.type.ReferenceType: com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType)>(v1, v3, null, null, v2);
return v4;
}
public com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v1, v2, null, null);
return v3;
}
public transient com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class, java.lang.Class[])
{
java.lang.Class[] v2;
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v7;
int v3, v5;
java.lang.Class v1, v6;
com.fasterxml.jackson.databind.JavaType v8, v9;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class[];
v3 = lengthof v2;
v4 = newarray (com.fasterxml.jackson.databind.JavaType)[v3];
v5 = 0;
label1:
if v5 >= v3 goto label2;
v6 = v2[v5];
v7 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v6, v7);
v4[v5] = v8;
v5 = v5 + 1;
goto label1;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v4);
return v9;
}
public transient com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v2;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType[];
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3, v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(null, v1, v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType)>(v1, v3);
return v4;
}
public transient com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class, java.lang.Class, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v3;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v1, v3);
return v4;
}
public transient com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class, java.lang.Class, java.lang.Class[])
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class[] v3;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.Class[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,java.lang.Class[])>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.type.CollectionType constructRawCollectionType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.CollectionType v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.CollectionLikeType v3;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.type.MapType constructRawMapType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2, v3;
com.fasterxml.jackson.databind.type.MapType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
return v4;
}
public com.fasterxml.jackson.databind.type.MapLikeType constructRawMapLikeType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2, v3;
com.fasterxml.jackson.databind.type.MapLikeType v4;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
return v4;
}
private com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
java.lang.Object[] v11;
com.fasterxml.jackson.databind.type.SimpleType v5;
java.lang.Integer v13;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v7;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v12, v14, v15;
com.fasterxml.jackson.databind.type.MapType v16;
java.lang.IllegalArgumentException v10;
com.fasterxml.jackson.databind.JavaType[] v4;
java.util.List v6;
java.lang.Class v1;
java.lang.Object v8, v9;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
if v1 != class "Ljava/util/Properties;" goto label1;
v5 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;
goto label7;
label1:
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v7 = interfaceinvoke v6.<java.util.List: int size()>();
lookupswitch(v7)
{
case 0: goto label2;
case 2: goto label3;
default: goto label4;
};
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _unknownType()>();
goto label7;
label3:
v8 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(0);
v9 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(1);
goto label7;
label4:
v10 = new java.lang.IllegalArgumentException;
v11 = newarray (java.lang.Object)[4];
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v11[0] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
v11[1] = v13;
if v7 != 1 goto label5;
v14 = "";
goto label6;
label5:
v14 = "s";
label6:
v11[2] = v14;
v11[3] = v2;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Strange Map type %s with %d type parameter%s (%s), can not resolve", v11);
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v10;
label7:
v16 = staticinvoke <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v8, v9);
return v16;
}
private com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.type.CollectionType v12;
java.lang.IllegalArgumentException v9;
com.fasterxml.jackson.databind.JavaType[] v4;
java.util.List v5;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v7;
java.lang.Class v1;
java.lang.Object v8;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v10, v11;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v6 = interfaceinvoke v5.<java.util.List: boolean isEmpty()>();
if v6 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _unknownType()>();
goto label3;
label1:
v7 = interfaceinvoke v5.<java.util.List: int size()>();
if v7 != 1 goto label2;
v8 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(0);
goto label3;
label2:
v9 = new java.lang.IllegalArgumentException;
v10 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Strange Collection type \u0001: cannot determine type parameters");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v9;
label3:
v12 = staticinvoke <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v8);
return v12;
}
private com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
java.lang.IllegalArgumentException v9;
com.fasterxml.jackson.databind.JavaType[] v4;
java.util.List v5;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.ReferenceType v12;
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v7;
java.lang.Class v1;
java.lang.Object v8;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v10, v11;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();
v6 = interfaceinvoke v5.<java.util.List: boolean isEmpty()>();
if v6 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _unknownType()>();
goto label3;
label1:
v7 = interfaceinvoke v5.<java.util.List: int size()>();
if v7 != 1 goto label2;
v8 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(0);
goto label3;
label2:
v9 = new java.lang.IllegalArgumentException;
v10 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Strange Reference type \u0001: cannot determine type parameters");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v9;
label3:
v12 = staticinvoke <com.fasterxml.jackson.databind.type.ReferenceType: com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v8);
return v12;
}
protected com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3, v6, v7;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v5 == 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class)>(v1);
if v6 == null goto label1;
return v6;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v1, v2, v3, v4);
return v7;
}
protected com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.type.SimpleType v5;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 = new com.fasterxml.jackson.databind.type.SimpleType;
specialinvoke v5.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v1, v2, v3, v4);
return v5;
}
protected com.fasterxml.jackson.databind.JavaType _unknownType()
{
com.fasterxml.jackson.databind.type.SimpleType v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT>;
return v1;
}
protected com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class)
{
com.fasterxml.jackson.databind.type.SimpleType v10, v12, v14, v4, v6, v8;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.Class v1, v11, v13, v3, v5, v7, v9;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isPrimitive()>();
if v2 == 0 goto label3;
v3 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_BOOL>;
if v1 != v3 goto label1;
v4 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL>;
return v4;
label1:
v5 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_INT>;
if v1 != v5 goto label2;
v6 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT>;
return v6;
label2:
v7 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_LONG>;
if v1 != v7 goto label6;
v8 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG>;
return v8;
label3:
v9 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_STRING>;
if v1 != v9 goto label4;
v10 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;
return v10;
label4:
v11 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_OBJECT>;
if v1 != v11 goto label5;
v12 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT>;
return v12;
label5:
v13 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_JSON_NODE>;
if v1 != v13 goto label6;
v14 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE>;
return v14;
label6:
return null;
}
protected com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.Type, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.ClassStack v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3, v5;
com.fasterxml.jackson.databind.JavaType v15, v6;
java.lang.String v13, v14;
boolean v10, v11, v4, v7, v8, v9;
java.lang.IllegalArgumentException v12;
java.lang.reflect.Type v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.reflect.Type;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = v2 instanceof java.lang.Class;
if v4 == 0 goto label1;
v5 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v2, v5);
goto label9;
label1:
v7 = v2 instanceof java.lang.reflect.ParameterizedType;
if v7 == 0 goto label2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromParamType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v2, v3);
goto label9;
label2:
v8 = v2 instanceof com.fasterxml.jackson.databind.JavaType;
if v8 == 0 goto label3;
return v2;
label3:
v9 = v2 instanceof java.lang.reflect.GenericArrayType;
if v9 == 0 goto label4;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromArrayType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v2, v3);
goto label9;
label4:
v10 = v2 instanceof java.lang.reflect.TypeVariable;
if v10 == 0 goto label5;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromVariable(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v2, v3);
goto label9;
label5:
v11 = v2 instanceof java.lang.reflect.WildcardType;
if v11 == 0 goto label6;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromWildcard(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v2, v3);
goto label9;
label6:
v12 = new java.lang.IllegalArgumentException;
if v2 != null goto label7;
v13 = "[null]";
goto label8;
label7:
v13 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
label8:
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unrecognized Type: \u0001");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v12;
label9:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType)>(v2, v6);
return v15;
}
protected com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type, com.fasterxml.jackson.databind.JavaType)
{
java.lang.IllegalStateException v11;
java.lang.Object[] v12;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v5;
int v7, v8;
com.fasterxml.jackson.databind.JavaType v10, v2, v4;
java.lang.String v14, v15;
com.fasterxml.jackson.databind.type.TypeModifier[] v3, v6;
com.fasterxml.jackson.databind.type.TypeModifier v9;
java.lang.reflect.Type v1;
java.lang.Class v13;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
if v3 != null goto label1;
return v2;
label1:
v4 = v2;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
if v5 != null goto label2;
v5 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
label2:
v6 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;
v7 = lengthof v6;
v8 = 0;
label3:
if v8 >= v7 goto label5;
v9 = v6[v8];
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.type.TypeModifier: com.fasterxml.jackson.databind.JavaType modifyType(com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.type.TypeFactory)>(v4, v1, v5, v0);
if v10 != null goto label4;
v11 = new java.lang.IllegalStateException;
v12 = newarray (java.lang.Object)[3];
v12[0] = v9;
v13 = virtualinvoke v9.<java.lang.Object: java.lang.Class getClass()>();
v14 = virtualinvoke v13.<java.lang.Class: java.lang.String getName()>();
v12[1] = v14;
v12[2] = v4;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("TypeModifier %s (of type %s) return null for type %s", v12);
specialinvoke v11.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v15);
throw v11;
label4:
v4 = v10;
v8 = v8 + 1;
goto label3;
label5:
return v4;
}
protected com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.SimpleType v21, v22;
com.fasterxml.jackson.databind.type.ClassStack v1, v10, v11, v12;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v14, v3;
com.fasterxml.jackson.databind.JavaType v17, v19, v4, v9;
boolean v15, v18, v23, v5;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v13;
com.fasterxml.jackson.databind.JavaType[] v20;
com.fasterxml.jackson.databind.util.LookupCache v24, v7;
java.lang.Class v16, v2;
java.lang.Object v6, v8;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class)>(v2);
if v4 == null goto label01;
return v4;
label01:
if v3 == null goto label02;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v5 == 0 goto label03;
label02:
v6 = v2;
goto label04;
label03:
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Object asKey(java.lang.Class)>(v2);
label04:
if v6 == null goto label05;
v7 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache>;
v8 = interfaceinvoke v7.<com.fasterxml.jackson.databind.util.LookupCache: java.lang.Object get(java.lang.Object)>(v6);
label05:
v9 = v8;
if v8 == null goto label06;
return v8;
label06:
if v1 != null goto label07;
v10 = new com.fasterxml.jackson.databind.type.ClassStack;
specialinvoke v10.<com.fasterxml.jackson.databind.type.ClassStack: void <init>(java.lang.Class)>(v2);
v11 = v10;
goto label09;
label07:
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.type.ClassStack: com.fasterxml.jackson.databind.type.ClassStack find(java.lang.Class)>(v2);
if v12 == null goto label08;
v13 = new com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v14 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
specialinvoke v13.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v2, v14);
virtualinvoke v12.<com.fasterxml.jackson.databind.type.ClassStack: void addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType)>(v13);
return v13;
label08:
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.type.ClassStack: com.fasterxml.jackson.databind.type.ClassStack child(java.lang.Class)>(v2);
label09:
v15 = virtualinvoke v2.<java.lang.Class: boolean isArray()>();
if v15 == 0 goto label10;
v16 = virtualinvoke v2.<java.lang.Class: java.lang.Class getComponentType()>();
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v11, v16, v3);
v9 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings)>(v17, v3);
goto label15;
label10:
v18 = virtualinvoke v2.<java.lang.Class: boolean isInterface()>();
if v18 == 0 goto label11;
v19 = null;
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v11, v2, v3);
goto label12;
label11:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v11, v2, v3);
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v11, v2, v3);
label12:
if v2 != class "Ljava/util/Properties;" goto label13;
v21 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;
v22 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;
v9 = staticinvoke <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v2, v3, v19, v20, v21, v22);
goto label14;
label13:
if v19 == null goto label14;
v9 = virtualinvoke v19.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v2, v3, v19, v20);
label14:
if v9 != null goto label15;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v11, v2, v3, v19, v20);
if v9 != null goto label15;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v11, v2, v3, v19, v20);
if v9 != null goto label15;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v2, v3, v19, v20);
label15:
virtualinvoke v11.<com.fasterxml.jackson.databind.type.ClassStack: void resolveSelfReferences(com.fasterxml.jackson.databind.JavaType)>(v9);
if v6 == null goto label16;
v23 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: boolean hasHandlers()>();
if v23 != 0 goto label16;
v24 = v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.util.LookupCache _typeCache>;
interfaceinvoke v24.<com.fasterxml.jackson.databind.util.LookupCache: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v6, v9);
label16:
return v9;
}
protected com.fasterxml.jackson.databind.JavaType _resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v4;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v5;
com.fasterxml.jackson.databind.type.ClassStack v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Type getGenericSuperclass(java.lang.Class)>(v2);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v4, v3);
return v5;
}
protected com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.ClassStack v1;
com.fasterxml.jackson.databind.JavaType[] v6, v8;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v10;
com.fasterxml.jackson.databind.type.TypeBindings v3;
int v5, v7, v9;
java.lang.reflect.Type[] v4;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v11;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class)>(v2);
if v4 == null goto label1;
v5 = lengthof v4;
if v5 != 0 goto label2;
label1:
v6 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;
return v6;
label2:
v7 = lengthof v4;
v8 = newarray (com.fasterxml.jackson.databind.JavaType)[v7];
v9 = 0;
label3:
if v9 >= v7 goto label4;
v10 = v4[v9];
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v10, v3);
v8[v9] = v11;
v9 = v9 + 1;
goto label3;
label4:
return v8;
}
protected com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.type.ClassStack v1;
com.fasterxml.jackson.databind.JavaType[] v5;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v4, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType[];
if v3 != null goto label1;
v3 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
label1:
if v2 != class "Ljava/util/Map;" goto label2;
v6 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v2, v3, v4, v5);
return v6;
label2:
if v2 != class "Ljava/util/Collection;" goto label3;
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v2, v3, v4, v5);
return v7;
label3:
if v2 != class "Ljava/util/concurrent/atomic/AtomicReference;" goto label4;
v8 = specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v2, v3, v4, v5);
return v8;
label4:
return null;
}
protected com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.type.ClassStack v1;
com.fasterxml.jackson.databind.JavaType[] v5;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v3;
int v6, v7;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v4, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType[];
v6 = lengthof v5;
v7 = 0;
label1:
if v7 >= v6 goto label3;
v8 = v5[v7];
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v2, v3, v4, v5);
if v9 == null goto label2;
return v9;
label2:
v7 = v7 + 1;
goto label1;
label3:
return null;
}
protected com.fasterxml.jackson.databind.JavaType _fromParamType(com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.ParameterizedType, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.SimpleType v6, v8;
com.fasterxml.jackson.databind.type.ClassStack v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
com.fasterxml.jackson.databind.type.TypeBindings v12, v3;
int v10, v11, v14;
com.fasterxml.jackson.databind.JavaType v16, v17;
com.fasterxml.jackson.databind.JavaType[] v13;
java.lang.reflect.ParameterizedType v2;
java.lang.reflect.Type v15, v4;
java.lang.reflect.Type[] v9;
java.lang.Class v5, v7;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.reflect.ParameterizedType;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = interfaceinvoke v2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v5 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_ENUM>;
if v4 != v5 goto label1;
v6 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM>;
return v6;
label1:
v7 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_COMPARABLE>;
if v4 != v7 goto label2;
v8 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE>;
return v8;
label2:
v9 = interfaceinvoke v2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
if v9 != null goto label3;
v10 = 0;
goto label4;
label3:
v10 = lengthof v9;
label4:
v11 = v10;
if v10 != 0 goto label5;
v12 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;
goto label8;
label5:
v13 = newarray (com.fasterxml.jackson.databind.JavaType)[v10];
v14 = 0;
label6:
if v14 >= v11 goto label7;
v15 = v9[v14];
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v15, v3);
v13[v14] = v16;
v14 = v14 + 1;
goto label6;
label7:
v12 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(v4, v13);
label8:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v4, v12);
return v17;
}
protected com.fasterxml.jackson.databind.JavaType _fromArrayType(com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.GenericArrayType, com.fasterxml.jackson.databind.type.TypeBindings)
{
java.lang.reflect.GenericArrayType v2;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v4;
com.fasterxml.jackson.databind.type.TypeBindings v3;
com.fasterxml.jackson.databind.type.ArrayType v6;
com.fasterxml.jackson.databind.JavaType v5;
com.fasterxml.jackson.databind.type.ClassStack v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.reflect.GenericArrayType;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = interfaceinvoke v2.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v4, v3);
v6 = staticinvoke <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings)>(v5, v3);
return v6;
}
protected com.fasterxml.jackson.databind.JavaType _fromVariable(com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.TypeVariable, com.fasterxml.jackson.databind.type.TypeBindings)
{
java.lang.Throwable v12;
java.lang.reflect.TypeVariable v2;
com.fasterxml.jackson.databind.type.SimpleType v9;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.databind.type.ClassStack v1;
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v13;
com.fasterxml.jackson.databind.type.TypeBindings v10, v3;
java.lang.reflect.Type[] v11;
com.fasterxml.jackson.databind.JavaType v14, v7;
java.lang.String v4, v6;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.reflect.TypeVariable;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = interfaceinvoke v2.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
if v3 != null goto label1;
v5 = new java.lang.IllegalArgumentException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Null `bindings` passed (type variable \"\u0001\")");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v5;
label1:
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType findBoundType(java.lang.String)>(v4);
if v7 == null goto label2;
return v7;
label2:
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: boolean hasUnbound(java.lang.String)>(v4);
if v8 == 0 goto label3;
v9 = <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT>;
return v9;
label3:
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings withUnboundVariable(java.lang.String)>(v4);
entermonitor v2;
label4:
v11 = interfaceinvoke v2.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
exitmonitor v2;
label5:
goto label7;
label6:
v12 := @caughtexception;
exitmonitor v2;
throw v12;
label7:
v13 = v11[0];
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v13, v10);
return v14;
catch java.lang.Throwable from label4 to label5 with label6;
}
protected com.fasterxml.jackson.databind.JavaType _fromWildcard(com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.WildcardType, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.TypeFactory v0;
java.lang.reflect.Type v5;
com.fasterxml.jackson.databind.type.TypeBindings v3;
java.lang.reflect.WildcardType v2;
java.lang.reflect.Type[] v4;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.databind.type.ClassStack v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ClassStack;
v2 := @parameter1: java.lang.reflect.WildcardType;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeBindings;
v4 = interfaceinvoke v2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
v5 = v4[0];
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v5, v3);
return v6;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.type.SimpleType v10, v12, v14, v16, v18, v20, v6, v8;
com.fasterxml.jackson.databind.type.TypeFactory v1;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.JavaType[] v0;
java.lang.Class v11, v13, v15, v17, v19, v21, v3, v4, v5, v7, v9;
v0 = newarray (com.fasterxml.jackson.databind.JavaType)[0];
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] NO_TYPES> = v0;
v1 = new com.fasterxml.jackson.databind.type.TypeFactory;
specialinvoke v1.<com.fasterxml.jackson.databind.type.TypeFactory: void <init>()>();
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory instance> = v1;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS> = v2;
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_STRING> = class "Ljava/lang/String;";
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_OBJECT> = class "Ljava/lang/Object;";
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_COMPARABLE> = class "Ljava/lang/Comparable;";
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_ENUM> = class "Ljava/lang/Enum;";
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_JSON_NODE> = class "Lcom/fasterxml/jackson/databind/JsonNode;";
v3 = <java.lang.Boolean: java.lang.Class TYPE>;
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_BOOL> = v3;
v4 = <java.lang.Integer: java.lang.Class TYPE>;
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_INT> = v4;
v5 = <java.lang.Long: java.lang.Class TYPE>;
<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_LONG> = v5;
v6 = new com.fasterxml.jackson.databind.type.SimpleType;
v7 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_BOOL>;
specialinvoke v6.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v7);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL> = v6;
v8 = new com.fasterxml.jackson.databind.type.SimpleType;
v9 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_INT>;
specialinvoke v8.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v9);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT> = v8;
v10 = new com.fasterxml.jackson.databind.type.SimpleType;
v11 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_LONG>;
specialinvoke v10.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v11);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG> = v10;
v12 = new com.fasterxml.jackson.databind.type.SimpleType;
v13 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_STRING>;
specialinvoke v12.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v13);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING> = v12;
v14 = new com.fasterxml.jackson.databind.type.SimpleType;
v15 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_OBJECT>;
specialinvoke v14.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v15);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT> = v14;
v16 = new com.fasterxml.jackson.databind.type.SimpleType;
v17 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_COMPARABLE>;
specialinvoke v16.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v17);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE> = v16;
v18 = new com.fasterxml.jackson.databind.type.SimpleType;
v19 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_ENUM>;
specialinvoke v18.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v19);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM> = v18;
v20 = new com.fasterxml.jackson.databind.type.SimpleType;
v21 = <com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_JSON_NODE>;
specialinvoke v20.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>(v21);
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE> = v20;
return;
}
}