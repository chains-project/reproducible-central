public class com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream extends java.io.InputStream
{
protected final java.nio.ByteBuffer _b;
public void <init>(java.nio.ByteBuffer)
{
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream v0;
java.nio.ByteBuffer v1;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream;
v1 := @parameter0: java.nio.ByteBuffer;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b> = v1;
return;
}
public int available()
{
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream v0;
int v2;
java.nio.ByteBuffer v1;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream;
v1 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b>;
v2 = virtualinvoke v1.<java.nio.ByteBuffer: int remaining()>();
return v2;
}
public int read() throws java.io.IOException
{
short v5;
byte v4;
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream v0;
java.nio.ByteBuffer v1, v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream;
v1 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b>;
v2 = virtualinvoke v1.<java.nio.ByteBuffer: boolean hasRemaining()>();
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b>;
v4 = virtualinvoke v3.<java.nio.ByteBuffer: byte get()>();
v5 = v4 & 255;
goto label2;
label1:
v5 = -1;
label2:
return v5;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream v0;
java.nio.ByteBuffer v10, v4, v7;
int v2, v3, v6, v8, v9;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b>;
v5 = virtualinvoke v4.<java.nio.ByteBuffer: boolean hasRemaining()>();
if v5 != 0 goto label1;
v6 = (int) -1;
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b>;
v8 = virtualinvoke v7.<java.nio.ByteBuffer: int remaining()>();
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v3, v8);
v10 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: java.nio.ByteBuffer _b>;
virtualinvoke v10.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(v1, v2, v9);
return v9;
}
}