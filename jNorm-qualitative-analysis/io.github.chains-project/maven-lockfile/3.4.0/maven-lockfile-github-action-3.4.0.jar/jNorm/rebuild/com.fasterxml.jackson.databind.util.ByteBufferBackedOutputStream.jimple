public class com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream extends java.io.OutputStream
{
protected final java.nio.ByteBuffer _b;
public void <init>(java.nio.ByteBuffer)
{
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream v0;
java.nio.ByteBuffer v1;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream;
v1 := @parameter0: java.nio.ByteBuffer;
specialinvoke v0.<java.io.OutputStream: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream: java.nio.ByteBuffer _b> = v1;
return;
}
public void write(int) throws java.io.IOException
{
int v1;
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream v0;
java.nio.ByteBuffer v2;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream: java.nio.ByteBuffer _b>;
virtualinvoke v2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(v1);
return;
}
public void write(byte[], int, int) throws java.io.IOException
{
byte[] v1;
int v2, v3;
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream v0;
java.nio.ByteBuffer v4;
v0 := @this: com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream: java.nio.ByteBuffer _b>;
virtualinvoke v4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(v1, v2, v3);
return;
}
}