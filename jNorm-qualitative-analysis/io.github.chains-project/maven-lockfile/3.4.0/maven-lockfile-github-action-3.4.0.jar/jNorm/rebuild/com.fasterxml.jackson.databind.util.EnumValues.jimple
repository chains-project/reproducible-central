public final class com.fasterxml.jackson.databind.util.EnumValues extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private final java.lang.Class _enumClass;
private final java.lang.Enum[] _values;
private final com.fasterxml.jackson.core.SerializableString[] _textual;
private transient java.util.EnumMap _asMap;
private void <init>(java.lang.Class, com.fasterxml.jackson.core.SerializableString[])
{
java.lang.Object[] v3;
com.fasterxml.jackson.core.SerializableString[] v2;
com.fasterxml.jackson.databind.util.EnumValues v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.util.EnumValues;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.core.SerializableString[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Class _enumClass> = v1;
v3 = virtualinvoke v1.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v0.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Enum[] _values> = v3;
v0.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.SerializableString[] _textual> = v2;
return;
}
public static com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.util.EnumValues v4, v5;
com.fasterxml.jackson.databind.SerializationConfig v0;
com.fasterxml.jackson.databind.SerializationFeature v2;
java.lang.Class v1;
boolean v3;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v2);
if v3 == 0 goto label1;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromToString(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v1);
return v4;
label1:
v5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v1);
return v5;
}
public static com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class)
{
java.lang.Object[] v3;
com.fasterxml.jackson.databind.AnnotationIntrospector v7;
com.fasterxml.jackson.core.SerializableString v20;
java.lang.String[] v10, v9;
java.lang.Enum v15;
int v11, v13, v14, v19, v8;
java.lang.String v16, v5, v6;
boolean v18;
com.fasterxml.jackson.core.SerializableString[] v12;
java.lang.IllegalArgumentException v4;
com.fasterxml.jackson.databind.cfg.EnumFeature v17;
com.fasterxml.jackson.databind.util.EnumValues v21;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1, v2;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.lang.Class)>(v1);
v3 = virtualinvoke v2.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
if v3 != null goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot determine enum constants for Class \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v4;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v8 = lengthof v3;
v9 = newarray (java.lang.String)[v8];
v10 = virtualinvoke v7.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[])>(v2, v3, v9);
v11 = lengthof v3;
v12 = newarray (com.fasterxml.jackson.core.SerializableString)[v11];
v13 = 0;
v14 = lengthof v3;
label2:
if v13 >= v14 goto label5;
v15 = v3[v13];
v16 = v10[v13];
if v16 != null goto label3;
v16 = virtualinvoke v15.<java.lang.Enum: java.lang.String name()>();
label3:
v17 = <com.fasterxml.jackson.databind.cfg.EnumFeature: com.fasterxml.jackson.databind.cfg.EnumFeature WRITE_ENUMS_TO_LOWERCASE>;
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v17);
if v18 == 0 goto label4;
v16 = virtualinvoke v16.<java.lang.String: java.lang.String toLowerCase()>();
label4:
v19 = virtualinvoke v15.<java.lang.Enum: int ordinal()>();
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.core.SerializableString compileString(java.lang.String)>(v16);
v12[v19] = v20;
v13 = v13 + 1;
goto label2;
label5:
v21 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class,com.fasterxml.jackson.core.SerializableString[])>(v1, v12);
return v21;
}
public static com.fasterxml.jackson.databind.util.EnumValues constructFromToString(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class)
{
java.lang.Object[] v3;
java.lang.IllegalArgumentException v4;
java.util.ArrayList v7;
java.lang.Enum v11;
com.fasterxml.jackson.databind.util.EnumValues v13;
int v10, v8, v9;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1, v2;
java.lang.String v12, v5, v6;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.lang.Class)>(v1);
v3 = virtualinvoke v2.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
if v3 != null goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot determine enum constants for Class \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v4;
label1:
v7 = new java.util.ArrayList;
v8 = lengthof v3;
specialinvoke v7.<java.util.ArrayList: void <init>(int)>(v8);
v9 = lengthof v3;
v10 = 0;
label2:
if v10 >= v9 goto label3;
v11 = v3[v10];
v12 = virtualinvoke v11.<java.lang.Enum: java.lang.String toString()>();
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>(v12);
v10 = v10 + 1;
goto label2;
label3:
v13 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,java.util.List)>(v0, v1, v7);
return v13;
}
public static com.fasterxml.jackson.databind.util.EnumValues constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class, com.fasterxml.jackson.databind.EnumNamingStrategy)
{
java.lang.Object[] v4;
java.util.ArrayList v8;
com.fasterxml.jackson.databind.EnumNamingStrategy v2;
java.lang.Enum v12;
int v10, v11, v9;
java.lang.String v13, v14, v6, v7;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.databind.util.EnumValues v15;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1, v3;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.EnumNamingStrategy;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.lang.Class)>(v1);
v4 = virtualinvoke v3.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
if v4 != null goto label1;
v5 = new java.lang.IllegalArgumentException;
v6 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot determine enum constants for Class \u0001");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v5;
label1:
v8 = new java.util.ArrayList;
v9 = lengthof v4;
specialinvoke v8.<java.util.ArrayList: void <init>(int)>(v9);
v10 = lengthof v4;
v11 = 0;
label2:
if v11 >= v10 goto label3;
v12 = v4[v11];
v13 = virtualinvoke v12.<java.lang.Enum: java.lang.String name()>();
v14 = interfaceinvoke v2.<com.fasterxml.jackson.databind.EnumNamingStrategy: java.lang.String convertEnumToExternalName(java.lang.String)>(v13);
virtualinvoke v8.<java.util.ArrayList: boolean add(java.lang.Object)>(v14);
v11 = v11 + 1;
goto label2;
label3:
v15 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,java.util.List)>(v0, v1, v8);
return v15;
}
public static com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class, java.util.List)
{
com.fasterxml.jackson.core.SerializableString[] v4;
com.fasterxml.jackson.core.SerializableString v7;
java.util.List v2;
com.fasterxml.jackson.databind.util.EnumValues v8;
int v3, v5;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1;
java.lang.Object v6;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.util.List;
v3 = interfaceinvoke v2.<java.util.List: int size()>();
v4 = newarray (com.fasterxml.jackson.core.SerializableString)[v3];
v5 = 0;
label1:
if v5 >= v3 goto label2;
v6 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v5);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.core.SerializableString compileString(java.lang.String)>(v6);
v4[v5] = v7;
v5 = v5 + 1;
goto label1;
label2:
v8 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class,com.fasterxml.jackson.core.SerializableString[])>(v1, v4);
return v8;
}
public static com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class, com.fasterxml.jackson.core.SerializableString[])
{
com.fasterxml.jackson.databind.util.EnumValues v2;
java.lang.Class v0;
com.fasterxml.jackson.core.SerializableString[] v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: com.fasterxml.jackson.core.SerializableString[];
v2 = new com.fasterxml.jackson.databind.util.EnumValues;
specialinvoke v2.<com.fasterxml.jackson.databind.util.EnumValues: void <init>(java.lang.Class,com.fasterxml.jackson.core.SerializableString[])>(v0, v1);
return v2;
}
public com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum)
{
java.lang.Enum v1;
com.fasterxml.jackson.core.SerializableString[] v2;
com.fasterxml.jackson.core.SerializableString v4;
com.fasterxml.jackson.databind.util.EnumValues v0;
int v3;
v0 := @this: com.fasterxml.jackson.databind.util.EnumValues;
v1 := @parameter0: java.lang.Enum;
v2 = v0.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.SerializableString[] _textual>;
v3 = virtualinvoke v1.<java.lang.Enum: int ordinal()>();
v4 = v2[v3];
return v4;
}
public java.util.Collection values()
{
com.fasterxml.jackson.databind.util.EnumValues v0;
java.util.List v2;
com.fasterxml.jackson.core.SerializableString[] v1;
v0 := @this: com.fasterxml.jackson.databind.util.EnumValues;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.SerializableString[] _textual>;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v2;
}
public java.util.List enums()
{
com.fasterxml.jackson.databind.util.EnumValues v0;
java.lang.Enum[] v1;
java.util.List v2;
v0 := @this: com.fasterxml.jackson.databind.util.EnumValues;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Enum[] _values>;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v2;
}
public java.util.EnumMap internalMap()
{
java.util.EnumMap v1, v10;
com.fasterxml.jackson.core.SerializableString[] v7;
com.fasterxml.jackson.core.SerializableString v9;
java.util.LinkedHashMap v2;
java.lang.Enum v6;
com.fasterxml.jackson.databind.util.EnumValues v0;
int v4, v5, v8;
java.lang.Enum[] v3;
v0 := @this: com.fasterxml.jackson.databind.util.EnumValues;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumValues: java.util.EnumMap _asMap>;
if v1 != null goto label3;
v2 = new java.util.LinkedHashMap;
specialinvoke v2.<java.util.LinkedHashMap: void <init>()>();
v3 = v0.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Enum[] _values>;
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v3[v5];
v7 = v0.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.SerializableString[] _textual>;
v8 = virtualinvoke v6.<java.lang.Enum: int ordinal()>();
v9 = v7[v8];
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v9);
v5 = v5 + 1;
goto label1;
label2:
v10 = new java.util.EnumMap;
specialinvoke v10.<java.util.EnumMap: void <init>(java.util.Map)>(v2);
v1 = v10;
label3:
return v1;
}
public java.lang.Class getEnumClass()
{
com.fasterxml.jackson.databind.util.EnumValues v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.util.EnumValues;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Class _enumClass>;
return v1;
}
}