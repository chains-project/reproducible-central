public class com.fasterxml.jackson.databind.util.ExceptionUtil extends java.lang.Object
{
private void <init>()
{
com.fasterxml.jackson.databind.util.ExceptionUtil v0;
v0 := @this: com.fasterxml.jackson.databind.util.ExceptionUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void rethrowIfFatal(java.lang.Throwable) throws java.lang.Error, java.lang.RuntimeException
{
java.lang.Throwable v0;
java.lang.RuntimeException v4;
boolean v1, v2, v3;
v0 := @parameter0: java.lang.Throwable;
v1 = staticinvoke <com.fasterxml.jackson.databind.util.ExceptionUtil: boolean isFatal(java.lang.Throwable)>(v0);
if v1 == 0 goto label3;
v2 = v0 instanceof java.lang.Error;
if v2 == 0 goto label1;
throw v0;
label1:
v3 = v0 instanceof java.lang.RuntimeException;
if v3 == 0 goto label2;
throw v0;
label2:
v4 = new java.lang.RuntimeException;
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v0);
throw v4;
label3:
return;
}
private static boolean isFatal(java.lang.Throwable)
{
java.lang.Throwable v0;
boolean v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: java.lang.Throwable;
v1 = v0 instanceof java.lang.VirtualMachineError;
if v1 != 0 goto label1;
v2 = v0 instanceof java.lang.ThreadDeath;
if v2 != 0 goto label1;
v3 = v0 instanceof java.lang.InterruptedException;
if v3 != 0 goto label1;
v4 = v0 instanceof java.lang.ClassCircularityError;
if v4 != 0 goto label1;
v5 = v0 instanceof java.lang.ClassFormatError;
if v5 != 0 goto label1;
v6 = v0 instanceof java.lang.IncompatibleClassChangeError;
if v6 != 0 goto label1;
v7 = v0 instanceof java.lang.BootstrapMethodError;
if v7 != 0 goto label1;
v8 = v0 instanceof java.lang.VerifyError;
if v8 == 0 goto label2;
label1:
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
}
public static java.lang.Object throwSneaky(java.io.IOException)
{
java.io.IOException v0;
v0 := @parameter0: java.io.IOException;
staticinvoke <com.fasterxml.jackson.databind.util.ExceptionUtil: void _sneaky(java.lang.Throwable)>(v0);
return null;
}
private static void _sneaky(java.lang.Throwable) throws java.lang.Throwable
{
java.lang.Throwable v0;
v0 := @parameter0: java.lang.Throwable;
throw v0;
}
}