public class com.fasterxml.jackson.databind.util.LRUMap extends java.lang.Object implements com.fasterxml.jackson.databind.util.LookupCache, java.io.Serializable
{
private static final long serialVersionUID;
protected final int _initialEntries;
protected final int _maxEntries;
protected final transient com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map;
public void <init>(int, int)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder v3, v4, v5, v6;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v7;
com.fasterxml.jackson.databind.util.LRUMap v0;
int v1, v2;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 := @parameter0: int;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.LRUMap: int _initialEntries> = v1;
v0.<com.fasterxml.jackson.databind.util.LRUMap: int _maxEntries> = v2;
v3 = new com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder;
specialinvoke v3.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: void <init>()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder initialCapacity(int)>(v1);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder maximumCapacity(long)>(v2);
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder concurrencyLevel(int)>(4);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap build()>();
v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map> = v7;
return;
}
public java.lang.Object put(java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v3;
com.fasterxml.jackson.databind.util.LRUMap v0;
java.lang.Object v1, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v3;
com.fasterxml.jackson.databind.util.LRUMap v0;
java.lang.Object v1, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public java.lang.Object get(java.lang.Object)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v2;
com.fasterxml.jackson.databind.util.LRUMap v0;
java.lang.Object v1, v3;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public void clear()
{
com.fasterxml.jackson.databind.util.LRUMap v0;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 = v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map>;
virtualinvoke v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void clear()>();
return;
}
public int size()
{
com.fasterxml.jackson.databind.util.LRUMap v0;
int v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 = v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: int size()>();
return v2;
}
public void contents(java.util.function.BiConsumer)
{
java.util.Iterator v4;
java.util.Set v3;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v2;
com.fasterxml.jackson.databind.util.LRUMap v0;
java.util.function.BiConsumer v1;
java.lang.Object v6, v7, v8;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 := @parameter0: java.util.function.BiConsumer;
v2 = v0.<com.fasterxml.jackson.databind.util.LRUMap: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v1.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v7, v8);
goto label1;
label2:
return;
}
protected java.lang.Object readResolve()
{
com.fasterxml.jackson.databind.util.LRUMap v0, v1;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.util.LRUMap;
v1 = new com.fasterxml.jackson.databind.util.LRUMap;
v2 = v0.<com.fasterxml.jackson.databind.util.LRUMap: int _initialEntries>;
v3 = v0.<com.fasterxml.jackson.databind.util.LRUMap: int _maxEntries>;
specialinvoke v1.<com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(v2, v3);
return v1;
}
}