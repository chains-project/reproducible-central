public abstract class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder extends java.lang.Object
{
static final int INITIAL_CHUNK_SIZE;
static final int SMALL_CHUNK_SIZE;
static final int MAX_CHUNK_SIZE;
protected java.lang.Object _freeBuffer;
protected com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead;
protected com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail;
protected int _bufferedEntryCount;
protected void <init>()
{
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public int bufferedSize()
{
int v1;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
v1 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: int _bufferedEntryCount>;
return v1;
}
public java.lang.Object resetAndStart()
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: void _reset()>();
v1 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object _freeBuffer>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object _constructArray(int)>(12);
goto label2;
label1:
v2 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object _freeBuffer>;
label2:
return v2;
}
public final java.lang.Object appendCompletedChunk(java.lang.Object, int)
{
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder v0;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v3, v4, v5;
int v2, v6, v7, v8, v9;
java.lang.Object v1, v10;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = new com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
specialinvoke v3.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: void <init>(java.lang.Object,int)>(v1, v2);
v4 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead>;
if v4 != null goto label1;
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail> = v3;
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead> = v3;
goto label2;
label1:
v5 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail>;
virtualinvoke v5.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node)>(v3);
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail> = v3;
label2:
v6 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: int _bufferedEntryCount>;
v7 = v6 + v2;
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: int _bufferedEntryCount> = v7;
if v2 >= 16384 goto label3;
v8 = v2 + v2;
goto label4;
label3:
v9 = v2 >> 2;
v8 = v2 + v9;
label4:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object _constructArray(int)>(v8);
return v10;
}
public java.lang.Object completeAndClearBuffer(java.lang.Object, int)
{
java.lang.IllegalStateException v9;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder v0;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v7;
int v2, v3, v4, v6, v8;
java.lang.Object v1, v5;
java.lang.String v10;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: int _bufferedEntryCount>;
v4 = v2 + v3;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object _constructArray(int)>(v4);
v6 = 0;
v7 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead>;
label1:
if v7 == null goto label2;
v6 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int copyData(java.lang.Object,int)>(v5, v6);
v7 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next()>();
goto label1;
label2:
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, 0, v5, v6, v2);
v8 = v6 + v2;
if v8 == v4 goto label3;
v9 = new java.lang.IllegalStateException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v4, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Should have gotten \u0001 entries, got \u0001");
specialinvoke v9.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v10);
throw v9;
label3:
return v5;
}
protected abstract java.lang.Object _constructArray(int);
protected void _reset()
{
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder v0;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v1, v2;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
v1 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object getData()>();
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object _freeBuffer> = v3;
label1:
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail> = null;
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead> = null;
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: int _bufferedEntryCount> = 0;
return;
}
}