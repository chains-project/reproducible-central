public class com.fasterxml.jackson.databind.util.TokenBuffer extends com.fasterxml.jackson.core.JsonGenerator
{
protected static final int DEFAULT_GENERATOR_FEATURES;
protected com.fasterxml.jackson.core.ObjectCodec _objectCodec;
protected com.fasterxml.jackson.core.JsonStreamContext _parentContext;
protected int _generatorFeatures;
protected com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints;
protected boolean _closed;
protected boolean _hasNativeTypeIds;
protected boolean _hasNativeObjectIds;
protected boolean _mayHaveNativeIds;
protected boolean _forceBigDecimal;
protected com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first;
protected com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last;
protected int _appendAt;
protected java.lang.Object _typeId;
protected java.lang.Object _objectId;
protected boolean _hasNativeId;
protected com.fasterxml.jackson.core.json.JsonWriteContext _writeContext;
public void <init>(com.fasterxml.jackson.core.ObjectCodec, boolean)
{
com.fasterxml.jackson.core.json.JsonWriteContext v5;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v6;
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.StreamReadConstraints v3;
int v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v2, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v2 := @parameter1: boolean;
specialinvoke v0.<com.fasterxml.jackson.core.JsonGenerator: void <init>()>();
v3 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v3;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 0;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v1;
v4 = <com.fasterxml.jackson.databind.util.TokenBuffer: int DEFAULT_GENERATOR_FEATURES>;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = v4;
v5 = staticinvoke <com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector)>(null);
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v5;
v6 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v6.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v6;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first> = v6;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 0;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds> = v2;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds> = v2;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
if v7 != 0 goto label1;
v8 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
if v8 == 0 goto label2;
label1:
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds> = v9;
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, null);
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.core.ObjectCodec v4;
com.fasterxml.jackson.core.StreamReadConstraints v3, v5;
com.fasterxml.jackson.databind.DeserializationFeature v16;
int v7;
boolean v10, v11, v12, v13, v14, v15;
com.fasterxml.jackson.core.json.JsonWriteContext v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v9;
com.fasterxml.jackson.core.JsonStreamContext v6;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
specialinvoke v0.<com.fasterxml.jackson.core.JsonGenerator: void <init>()>();
v3 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v3;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 0;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v4;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v5;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonStreamContext _parentContext> = v6;
v7 = <com.fasterxml.jackson.databind.util.TokenBuffer: int DEFAULT_GENERATOR_FEATURES>;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = v7;
v8 = staticinvoke <com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector)>(null);
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v8;
v9 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v9.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v9;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first> = v9;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 0;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean canReadTypeId()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds> = v10;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean canReadObjectId()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds> = v11;
v12 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
if v12 != 0 goto label1;
v13 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
if v13 == 0 goto label2;
label1:
v14 = 1;
goto label3;
label2:
v14 = 0;
label3:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds> = v14;
if v2 != null goto label4;
v15 = 0;
goto label5;
label4:
v16 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v16);
label5:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _forceBigDecimal> = v15;
return;
}
public static com.fasterxml.jackson.databind.util.TokenBuffer asCopyOfValue(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v0;
com.fasterxml.jackson.databind.util.TokenBuffer v1;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 = new com.fasterxml.jackson.databind.util.TokenBuffer;
specialinvoke v1.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.JsonParser)>(v0);
virtualinvoke v1.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>(v0);
return v1;
}
public com.fasterxml.jackson.databind.util.TokenBuffer overrideParentContext(com.fasterxml.jackson.core.JsonStreamContext)
{
com.fasterxml.jackson.core.JsonStreamContext v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonStreamContext;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonStreamContext _parentContext> = v1;
return v0;
}
public com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: boolean;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _forceBigDecimal> = v1;
return v0;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.Version v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = <com.fasterxml.jackson.databind.cfg.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public com.fasterxml.jackson.core.JsonParser asParser()
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser asParserOnFirstToken() throws java.io.IOException
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
return v2;
}
public com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v3;
com.fasterxml.jackson.core.JsonStreamContext v6;
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.StreamReadConstraints v7;
com.fasterxml.jackson.databind.util.TokenBuffer$Parser v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v2 = new com.fasterxml.jackson.databind.util.TokenBuffer$Parser;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonStreamContext _parentContext>;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
specialinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.StreamReadConstraints)>(v3, v1, v4, v5, v6, v7);
return v2;
}
public com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.StreamReadConstraints)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v3;
com.fasterxml.jackson.core.JsonStreamContext v7;
com.fasterxml.jackson.core.ObjectCodec v4;
com.fasterxml.jackson.core.StreamReadConstraints v1;
com.fasterxml.jackson.databind.util.TokenBuffer$Parser v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.StreamReadConstraints;
v2 = new com.fasterxml.jackson.databind.util.TokenBuffer$Parser;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonStreamContext _parentContext>;
specialinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.StreamReadConstraints)>(v3, v4, v5, v6, v7, v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser)
{
com.fasterxml.jackson.core.JsonLocation v9;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v3;
com.fasterxml.jackson.core.JsonStreamContext v7;
com.fasterxml.jackson.core.ObjectCodec v4;
com.fasterxml.jackson.core.StreamReadConstraints v8;
com.fasterxml.jackson.databind.util.TokenBuffer$Parser v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = new com.fasterxml.jackson.databind.util.TokenBuffer$Parser;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonStreamContext _parentContext>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()>();
specialinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.StreamReadConstraints)>(v3, v4, v5, v6, v7, v8);
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getTokenLocation()>();
virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void setLocation(com.fasterxml.jackson.core.JsonLocation)>(v9);
return v2;
}
public com.fasterxml.jackson.core.JsonToken firstToken()
{
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken type(int)>(0);
return v2;
}
public boolean isEmpty()
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v2, v3;
int v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
if v1 != 0 goto label1;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
if v2 != v3 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v9;
com.fasterxml.jackson.core.JsonToken v10;
com.fasterxml.jackson.databind.util.TokenBuffer v0, v1;
boolean v2, v3, v4, v5, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.TokenBuffer;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean canWriteTypeId()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
if v4 != 0 goto label2;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean canWriteObjectId()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds> = v5;
label2:
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
if v6 != 0 goto label3;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
if v7 == 0 goto label4;
label3:
v8 = 1;
goto label5;
label4:
v8 = 0;
label5:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds> = v8;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();
label6:
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v10 == null goto label7;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>(v9);
goto label6;
label7:
return v0;
}
public void serialize(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
int[] v14;
boolean v10, v18, v20, v22, v24, v25, v27, v31, v33, v34, v36, v42, v43, v5, v6, v7, v8, v9;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v2;
float v35;
java.lang.Object[] v37;
com.fasterxml.jackson.core.JsonGenerator v1;
long v26;
short v28;
int v15, v16, v23, v29, v3, v4;
com.fasterxml.jackson.core.JsonToken v11;
java.lang.String v39, v40;
double v32;
java.lang.RuntimeException v44;
java.lang.Class v38;
java.lang.Object v12, v13, v17, v19, v21, v30, v41;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;
v3 = (int) -1;
v4 = v3;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v5 == 0 goto label01;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: boolean hasIds()>();
if v6 == 0 goto label01;
v7 = 1;
goto label02;
label01:
v7 = 0;
label02:
v8 = v7;
label03:
v4 = v4 + 1;
if v4 < 16 goto label06;
v4 = 0;
v2 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment next()>();
if v2 == null goto label35;
if v5 == 0 goto label04;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: boolean hasIds()>();
if v9 == 0 goto label04;
v10 = 1;
goto label05;
label04:
v10 = 0;
label05:
v8 = v10;
label06:
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken type(int)>(v4);
if v11 == null goto label35;
if v8 == 0 goto label08;
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findObjectId(int)>(v4);
if v12 == null goto label07;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeObjectId(java.lang.Object)>(v12);
label07:
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findTypeId(int)>(v4);
if v13 == null goto label08;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeTypeId(java.lang.Object)>(v13);
label08:
v14 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v15 = virtualinvoke v11.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v16 = v14[v15];
tableswitch(v16)
{
case 1: goto label09;
case 2: goto label10;
case 3: goto label11;
case 4: goto label12;
case 5: goto label13;
case 6: goto label15;
case 7: goto label17;
case 8: goto label22;
case 9: goto label28;
case 10: goto label29;
case 11: goto label30;
case 12: goto label31;
default: goto label34;
};
label09:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
goto label03;
label10:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
goto label03;
label11:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();
goto label03;
label12:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
goto label03;
label13:
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(v4);
v18 = v17 instanceof com.fasterxml.jackson.core.SerializableString;
if v18 == 0 goto label14;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>(v17);
goto label03;
label14:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v17);
goto label03;
label15:
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(v4);
v20 = v19 instanceof com.fasterxml.jackson.core.SerializableString;
if v20 == 0 goto label16;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeString(com.fasterxml.jackson.core.SerializableString)>(v19);
goto label03;
label16:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v19);
goto label03;
label17:
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(v4);
v22 = v21 instanceof java.lang.Integer;
if v22 == 0 goto label18;
v23 = virtualinvoke v21.<java.lang.Integer: int intValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v23);
goto label03;
label18:
v24 = v21 instanceof java.math.BigInteger;
if v24 == 0 goto label19;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigInteger)>(v21);
goto label03;
label19:
v25 = v21 instanceof java.lang.Long;
if v25 == 0 goto label20;
v26 = virtualinvoke v21.<java.lang.Long: long longValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(v26);
goto label03;
label20:
v27 = v21 instanceof java.lang.Short;
if v27 == 0 goto label21;
v28 = virtualinvoke v21.<java.lang.Short: short shortValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(short)>(v28);
goto label03;
label21:
v29 = virtualinvoke v21.<java.lang.Number: int intValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v29);
goto label03;
label22:
v30 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(v4);
v31 = v30 instanceof java.lang.Double;
if v31 == 0 goto label23;
v32 = virtualinvoke v30.<java.lang.Double: double doubleValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>(v32);
goto label03;
label23:
v33 = v30 instanceof java.math.BigDecimal;
if v33 == 0 goto label24;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>(v30);
goto label03;
label24:
v34 = v30 instanceof java.lang.Float;
if v34 == 0 goto label25;
v35 = virtualinvoke v30.<java.lang.Float: float floatValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(float)>(v35);
goto label03;
label25:
if v30 != null goto label26;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
goto label03;
label26:
v36 = v30 instanceof java.lang.String;
if v36 == 0 goto label27;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.lang.String)>(v30);
goto label03;
label27:
v37 = newarray (java.lang.Object)[1];
v38 = virtualinvoke v30.<java.lang.Object: java.lang.Class getClass()>();
v39 = virtualinvoke v38.<java.lang.Class: java.lang.String getName()>();
v37[0] = v39;
v40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unrecognized value type for VALUE_NUMBER_FLOAT: %s, cannot serialize", v37);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportError(java.lang.String)>(v40);
goto label03;
label28:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeBoolean(boolean)>(1);
goto label03;
label29:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeBoolean(boolean)>(0);
goto label03;
label30:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
goto label03;
label31:
v41 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(v4);
v42 = v41 instanceof com.fasterxml.jackson.databind.util.RawValue;
if v42 == 0 goto label32;
virtualinvoke v41.<com.fasterxml.jackson.databind.util.RawValue: void serialize(com.fasterxml.jackson.core.JsonGenerator)>(v1);
goto label03;
label32:
v43 = v41 instanceof com.fasterxml.jackson.databind.JsonSerializable;
if v43 == 0 goto label33;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeObject(java.lang.Object)>(v41);
goto label03;
label33:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEmbeddedObject(java.lang.Object)>(v41);
goto label03;
label34:
v44 = new java.lang.RuntimeException;
specialinvoke v44.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error: should never end up through this code path");
throw v44;
label35:
return;
}
public com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v10;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonToken v3, v5, v6, v7, v8;
java.lang.String v9;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 != 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>(v1);
return v0;
label1:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>(v1);
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v5 == v6 goto label2;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v5 == v7 goto label3;
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.core.JsonToken)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got \u0001");
v10 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(class "Lcom/fasterxml/jackson/databind/util/TokenBuffer;", v8, v9, v10);
label3:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();
return v0;
}
public java.lang.String toString()
{
java.lang.IllegalStateException v13;
int v15, v3;
com.fasterxml.jackson.core.JsonToken v10, v8;
java.lang.String v11, v17, v9;
boolean v4, v5, v6, v7;
com.fasterxml.jackson.core.JsonParser v2;
java.io.IOException v12;
java.lang.StringBuilder v1, v14, v16;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[TokenBuffer: ");
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();
v3 = 0;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
if v4 != 0 goto label01;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
if v5 == 0 goto label02;
label01:
v6 = 1;
goto label03;
label02:
v6 = 0;
label03:
v7 = v6;
label04:
v8 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v8 == null goto label11;
label05:
if v7 == 0 goto label06;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendNativeIds(java.lang.StringBuilder)>(v1);
label06:
if v3 >= 100 goto label10;
if v3 <= 0 goto label07;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label07:
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonToken: java.lang.String toString()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v9);
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v8 != v10 goto label10;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
v11 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
label08:
goto label10;
label09:
v12 := @caughtexception;
v13 = new java.lang.IllegalStateException;
specialinvoke v13.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v12);
throw v13;
label10:
v3 = v3 + 1;
goto label04;
label11:
if v3 < 100 goto label12;
v14 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... (truncated ");
v15 = v3 - 100;
v16 = virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v15);
virtualinvoke v16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries)");
label12:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
v17 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v17;
catch java.io.IOException from label04 to label05 with label09;
catch java.io.IOException from label05 to label08 with label09;
}
private final void _appendNativeIds(java.lang.StringBuilder)
{
int v10, v11, v3, v4;
java.lang.String v14, v7;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v2, v9;
java.lang.Object v12, v5;
java.lang.StringBuilder v1, v13, v15, v6, v8;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.StringBuilder;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v4 = v3 - 1;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findObjectId(int)>(v4);
if v5 == null goto label1;
v6 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[objectId=");
v7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v5);
v8 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
label1:
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v11 = v10 - 1;
v12 = virtualinvoke v9.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findTypeId(int)>(v11);
if v12 == null goto label2;
v13 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[typeId=");
v14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v12);
v15 = virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v14);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
label2:
return;
}
public com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4, v5, v6;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = v6;
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int getFeatureMask()
{
int v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;
return v1;
}
public com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int)
{
int v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: int;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int)
{
int v1, v2, v3, v4, v5, v6, v7, v8;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int getFeatureMask()>();
v4 = (int) -1;
v5 = v2 ^ v4;
v6 = v3 & v5;
v7 = v1 & v2;
v8 = v6 | v7;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = v8;
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
return v0;
}
public com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v1;
return v0;
}
public com.fasterxml.jackson.core.ObjectCodec getCodec()
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
return v1;
}
public final com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext()
{
com.fasterxml.jackson.core.json.JsonWriteContext v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
return v1;
}
public boolean canWriteBinaryNatively()
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
return 1;
}
public com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities()
{
com.fasterxml.jackson.core.util.JacksonFeatureSet v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = <com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_WRITE_CAPABILITIES>;
return v1;
}
public void flush() throws java.io.IOException
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
return;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _closed> = 1;
return;
}
public boolean isClosed()
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _closed>;
return v1;
}
public final void writeStartArray() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v3, v4;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)>(v2);
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v4;
return;
}
public void writeStartArray(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v4, v5;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)>(v3);
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v5;
return;
}
public void writeStartArray(java.lang.Object, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v3, v5, v6;
int v2;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)>(v4);
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v6;
return;
}
public final void writeEndArray() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v3;
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendEndMarker(com.fasterxml.jackson.core.JsonToken)>(v1);
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>();
if v3 == null goto label1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v3;
label1:
return;
}
public final void writeStartObject() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v3, v4;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)>(v2);
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v4;
return;
}
public void writeStartObject(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v4, v5;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)>(v3);
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v5;
return;
}
public void writeStartObject(java.lang.Object, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v3, v5, v6;
int v2;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)>(v4);
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v6;
return;
}
public final void writeEndObject() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v3;
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendEndMarker(com.fasterxml.jackson.core.JsonToken)>(v1);
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>();
if v3 == null goto label1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v3;
label1:
return;
}
public final void writeFieldName(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
java.lang.String v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendFieldName(java.lang.Object)>(v1);
return;
}
public void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.core.SerializableString v1;
java.lang.String v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v3);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendFieldName(java.lang.Object)>(v1);
return;
}
public void writeString(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v2;
java.lang.String v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
label2:
return;
}
public void writeString(char[], int, int) throws java.io.IOException
{
int v2, v3;
char[] v1;
java.lang.String v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = new java.lang.String;
specialinvoke v4.<java.lang.String: void <init>(char[],int,int)>(v1, v2, v3);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>(v4);
return;
}
public void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
label2:
return;
}
public void writeString(java.io.Reader, int) throws java.io.IOException
{
java.io.Reader v1;
int v2, v3, v4, v7, v8, v9;
char[] v5;
java.lang.StringBuilder v6;
com.fasterxml.jackson.core.JsonToken v10;
java.lang.String v11;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: int;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportError(java.lang.String)>("null reader");
label1:
if v2 < 0 goto label2;
v3 = v2;
goto label3;
label2:
v3 = 2147483647;
label3:
v4 = v3;
v5 = newarray (char)[1000];
v6 = new java.lang.StringBuilder;
specialinvoke v6.<java.lang.StringBuilder: void <init>(int)>(1000);
label4:
if v4 <= 0 goto label6;
v7 = lengthof v5;
v8 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v7);
v9 = virtualinvoke v1.<java.io.Reader: int read(char[],int,int)>(v5, 0, v8);
if v9 <= 0 goto label5;
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(v5, 0, v9);
v4 = v4 - v9;
goto label4;
label5:
if v4 <= 0 goto label6;
if v2 < 0 goto label6;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportError(java.lang.String)>("Was not able to read enough from reader");
label6:
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v11 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v10, v11);
return;
}
public void writeRawUTF8String(byte[], int, int) throws java.io.IOException
{
byte[] v1;
int v2, v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeUTF8String(byte[], int, int) throws java.io.IOException
{
byte[] v1;
int v2, v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(java.lang.String, int, int) throws java.io.IOException
{
int v2, v3;
java.lang.String v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(char[], int, int) throws java.io.IOException
{
int v2, v3;
char[] v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(char) throws java.io.IOException
{
char v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: char;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();
return;
}
public void writeRawValue(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v2;
java.lang.String v1;
com.fasterxml.jackson.databind.util.RawValue v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v3 = new com.fasterxml.jackson.databind.util.RawValue;
specialinvoke v3.<com.fasterxml.jackson.databind.util.RawValue: void <init>(java.lang.String)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v3);
return;
}
public void writeRawValue(java.lang.String, int, int) throws java.io.IOException
{
int v2, v3, v4, v5;
com.fasterxml.jackson.core.JsonToken v6;
java.lang.String v1;
com.fasterxml.jackson.databind.util.RawValue v7;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
if v2 > 0 goto label1;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
if v3 == v4 goto label2;
label1:
v5 = v2 + v3;
v1 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v2, v5);
label2:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v7 = new com.fasterxml.jackson.databind.util.RawValue;
specialinvoke v7.<com.fasterxml.jackson.databind.util.RawValue: void <init>(java.lang.String)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v6, v7);
return;
}
public void writeRawValue(char[], int, int) throws java.io.IOException
{
int v2, v3;
char[] v1;
com.fasterxml.jackson.core.JsonToken v4;
java.lang.String v5;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v5 = new java.lang.String;
specialinvoke v5.<java.lang.String: void <init>(char[],int,int)>(v1, v2, v3);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v4, v5);
return;
}
public void writeNumber(short) throws java.io.IOException
{
short v1;
java.lang.Short v3;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: short;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v3);
return;
}
public void writeNumber(int) throws java.io.IOException
{
int v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
java.lang.Integer v3;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: int;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v3);
return;
}
public void writeNumber(long) throws java.io.IOException
{
java.lang.Long v3;
long v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: long;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v3);
return;
}
public void writeNumber(double) throws java.io.IOException
{
java.lang.Double v3;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: double;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v3);
return;
}
public void writeNumber(float) throws java.io.IOException
{
java.lang.Float v3;
float v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: float;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v3);
return;
}
public void writeNumber(java.math.BigDecimal) throws java.io.IOException
{
java.math.BigDecimal v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.math.BigDecimal;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
label2:
return;
}
public void writeNumber(java.math.BigInteger) throws java.io.IOException
{
java.math.BigInteger v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.math.BigInteger;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
label2:
return;
}
public void writeNumber(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v2;
java.lang.String v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.String;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
return;
}
private void writeLazyInteger(java.lang.Object) throws java.io.IOException
{
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
return;
}
private void writeLazyDecimal(java.lang.Object) throws java.io.IOException
{
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
return;
}
public void writeBoolean(boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken)>(v2);
return;
}
public void writeNull() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken)>(v1);
return;
}
public void writeObject(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.ObjectCodec v5, v7;
java.lang.Class v2;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v4, v6;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
return;
label1:
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == class "[B" goto label2;
v3 = v1 instanceof com.fasterxml.jackson.databind.util.RawValue;
if v3 == 0 goto label3;
label2:
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v4, v1);
return;
label3:
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
if v5 != null goto label4;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v6, v1);
goto label5;
label4:
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
virtualinvoke v7.<com.fasterxml.jackson.core.ObjectCodec: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v0, v1);
label5:
return;
}
public void writeTree(com.fasterxml.jackson.core.TreeNode) throws java.io.IOException
{
com.fasterxml.jackson.core.TreeNode v1;
com.fasterxml.jackson.core.ObjectCodec v2, v4;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.TreeNode;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
return;
label1:
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
if v2 != null goto label2;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v3, v1);
goto label3;
label2:
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
virtualinvoke v4.<com.fasterxml.jackson.core.ObjectCodec: void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)>(v0, v1);
label3:
return;
}
public void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.Base64Variant v1;
byte[] v2, v5;
int v3, v4;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = newarray (byte)[v4];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, v3, v5, 0, v4);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeObject(java.lang.Object)>(v5);
return;
}
public int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)
{
com.fasterxml.jackson.core.Base64Variant v1;
java.lang.UnsupportedOperationException v4;
int v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: int;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
}
public boolean canWriteTypeId()
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;
return v1;
}
public boolean canWriteObjectId()
{
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;
return v1;
}
public void writeTypeId(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId> = v1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;
return;
}
public void writeObjectId(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId> = v1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;
return;
}
public void writeEmbeddedObject(java.lang.Object) throws java.io.IOException
{
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v2, v1);
return;
}
public void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v14;
long v19;
int[] v13, v3;
int v10, v11, v15, v16, v17, v5, v6;
com.fasterxml.jackson.core.JsonToken v23, v4;
java.lang.String v12, v24, v7;
boolean v2, v8;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.RuntimeException v22;
char[] v9;
java.lang.Object v18, v20, v21;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v2 == 0 goto label01;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label01:
v3 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v6 = v3[v5];
tableswitch(v6)
{
case 1: goto label02;
case 2: goto label03;
case 3: goto label04;
case 4: goto label05;
case 5: goto label06;
case 6: goto label07;
case 7: goto label09;
case 8: goto label13;
case 9: goto label14;
case 10: goto label15;
case 11: goto label16;
case 12: goto label17;
default: goto label18;
};
label02:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();
goto label19;
label03:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();
goto label19;
label04:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartArray()>();
goto label19;
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndArray()>();
goto label19;
label06:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>(v7);
goto label19;
label07:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasTextCharacters()>();
if v8 == 0 goto label08;
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: char[] getTextCharacters()>();
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getTextOffset()>();
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getTextLength()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(char[],int,int)>(v9, v10, v11);
goto label19;
label08:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>(v12);
goto label19;
label09:
v13 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
v15 = virtualinvoke v14.<com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();
v16 = v13[v15];
lookupswitch(v16)
{
case 1: goto label10;
case 2: goto label11;
default: goto label12;
};
label10:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(int)>(v17);
goto label19;
label11:
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getNumberValueDeferred()>();
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeLazyInteger(java.lang.Object)>(v18);
goto label19;
label12:
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(long)>(v19);
goto label19;
label13:
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getNumberValueDeferred()>();
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeLazyDecimal(java.lang.Object)>(v20);
goto label19;
label14:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(1);
goto label19;
label15:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(0);
goto label19;
label16:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
goto label19;
label17:
v21 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeObject(java.lang.Object)>(v21);
goto label19;
label18:
v22 = new java.lang.RuntimeException;
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.core.JsonToken)>(v23) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Internal error: unexpected token: \u0001");
specialinvoke v22.<java.lang.RuntimeException: void <init>(java.lang.String)>(v24);
throw v22;
label19:
return;
}
public void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
java.lang.IllegalStateException v6;
com.fasterxml.jackson.core.JsonParser v1;
int[] v7;
int v8, v9;
com.fasterxml.jackson.core.JsonToken v2, v3;
java.lang.String v5;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v10, v11, v4;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v2 != v3 goto label02;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v4 == 0 goto label01;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label01:
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>(v5);
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
goto label03;
label02:
if v2 != null goto label03;
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No token available from argument `JsonParser`");
throw v6;
label03:
v7 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v8 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v9 = v7[v8];
tableswitch(v9)
{
case 1: goto label06;
case 2: goto label09;
case 3: goto label04;
case 4: goto label08;
default: goto label10;
};
label04:
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v10 == 0 goto label05;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartArray()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferContents(com.fasterxml.jackson.core.JsonParser)>(v1);
goto label11;
label06:
v11 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v11 == 0 goto label07;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label07:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferContents(com.fasterxml.jackson.core.JsonParser)>(v1);
goto label11;
label08:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndArray()>();
goto label11;
label09:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();
goto label11;
label10:
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)>(v1, v2);
label11:
return;
}
protected void _copyBufferContents(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
int[] v4;
int v2, v5, v6;
com.fasterxml.jackson.core.JsonToken v3;
java.lang.String v8;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v10, v7, v9;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = 1;
label01:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v3 == null goto label11;
v4 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v6 = v4[v5];
tableswitch(v6)
{
case 1: goto label06;
case 2: goto label09;
case 3: goto label04;
case 4: goto label08;
case 5: goto label02;
default: goto label10;
};
label02:
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v7 == 0 goto label03;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label03:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>(v8);
goto label01;
label04:
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v9 == 0 goto label05;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartArray()>();
v2 = v2 + 1;
goto label01;
label06:
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v10 == 0 goto label07;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label07:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();
v2 = v2 + 1;
goto label01;
label08:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndArray()>();
v2 = v2 - 1;
if v2 != 0 goto label01;
return;
label09:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();
v2 = v2 - 1;
if v2 != 0 goto label01;
return;
label10:
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)>(v1, v3);
goto label01;
label11:
return;
}
private void _copyBufferValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v13;
long v18;
int[] v12, v4;
int v10, v14, v15, v16, v5, v6, v9;
com.fasterxml.jackson.core.JsonToken v2;
java.lang.String v11, v22;
boolean v3, v7;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.RuntimeException v21;
char[] v8;
java.lang.Object v17, v19, v20;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;
if v3 == 0 goto label01;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(com.fasterxml.jackson.core.JsonParser)>(v1);
label01:
v4 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v6 = v4[v5];
tableswitch(v6)
{
case 6: goto label02;
case 7: goto label04;
case 8: goto label08;
case 9: goto label09;
case 10: goto label10;
case 11: goto label11;
case 12: goto label12;
default: goto label13;
};
label02:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasTextCharacters()>();
if v7 == 0 goto label03;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: char[] getTextCharacters()>();
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getTextOffset()>();
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getTextLength()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(char[],int,int)>(v8, v9, v10);
goto label14;
label03:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>(v11);
goto label14;
label04:
v12 = <com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
v14 = virtualinvoke v13.<com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();
v15 = v12[v14];
lookupswitch(v15)
{
case 1: goto label05;
case 2: goto label06;
default: goto label07;
};
label05:
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(int)>(v16);
goto label14;
label06:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getNumberValueDeferred()>();
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeLazyInteger(java.lang.Object)>(v17);
goto label14;
label07:
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(long)>(v18);
goto label14;
label08:
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getNumberValueDeferred()>();
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeLazyDecimal(java.lang.Object)>(v19);
goto label14;
label09:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(1);
goto label14;
label10:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(0);
goto label14;
label11:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();
goto label14;
label12:
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeObject(java.lang.Object)>(v20);
goto label14;
label13:
v21 = new java.lang.RuntimeException;
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.core.JsonToken)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Internal error: unexpected token: \u0001");
specialinvoke v21.<java.lang.RuntimeException: void <init>(java.lang.String)>(v22);
throw v21;
label14:
return;
}
private final void _checkNativeIds(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v2, v3;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getTypeId()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId> = v2;
if v2 == null goto label1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getObjectId()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId> = v3;
if v3 == null goto label2;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;
label2:
return;
}
protected final void _appendValue(com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v4, v8, v9;
int v10, v11, v12, v5;
java.lang.Object v6, v7;
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonToken;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;
if v3 == 0 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>(v5, v1, v6, v7);
goto label2;
label1:
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v8 = virtualinvoke v9.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken)>(v10, v1);
label2:
if v8 != null goto label3;
v11 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = v12;
goto label4;
label3:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v8;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;
label4:
return;
}
protected final void _appendValue(com.fasterxml.jackson.core.JsonToken, java.lang.Object)
{
com.fasterxml.jackson.core.json.JsonWriteContext v3;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v10, v5, v9;
int v11, v12, v13, v6;
java.lang.Object v2, v7, v8;
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonToken;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;
if v4 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;
v8 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;
v9 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>(v6, v1, v2, v7, v8);
goto label2;
label1:
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v11 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v9 = virtualinvoke v10.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v11, v1, v2);
label2:
if v9 != null goto label3;
v12 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v13 = v12 + 1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = v13;
goto label4;
label3:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v9;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;
label4:
return;
}
protected final void _appendFieldName(java.lang.Object)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v3, v8, v9;
int v10, v12, v13, v4;
java.lang.Object v1, v6, v7;
com.fasterxml.jackson.core.JsonToken v11, v5;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>(v4, v5, v1, v6, v7);
goto label2;
label1:
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v8 = virtualinvoke v9.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v10, v11, v1);
label2:
if v8 != null goto label3;
v12 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v13 = v12 + 1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = v13;
goto label4;
label3:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v8;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;
label4:
return;
}
protected final void _appendStartMarker(com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v3, v7, v8;
int v10, v11, v4, v9;
java.lang.Object v5, v6;
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonToken;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>(v4, v1, v5, v6);
goto label2;
label1:
v8 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v7 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken)>(v9, v1);
label2:
if v7 != null goto label3;
v10 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v11 = v10 + 1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = v11;
goto label4;
label3:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v7;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;
label4:
return;
}
protected final void _appendEndMarker(com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v2, v4;
int v3, v5, v6;
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonToken;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;
v3 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken)>(v3, v1);
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = v6;
goto label2;
label1:
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = v4;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;
label2:
return;
}
protected void _reportUnsupportedOperation()
{
java.lang.UnsupportedOperationException v1;
com.fasterxml.jackson.databind.util.TokenBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Called operation not supported for TokenBuffer");
throw v1;
}
static void <clinit>()
{
int v0;
v0 = staticinvoke <com.fasterxml.jackson.core.JsonGenerator$Feature: int collectDefaults()>();
<com.fasterxml.jackson.databind.util.TokenBuffer: int DEFAULT_GENERATOR_FEATURES> = v0;
return;
}
}