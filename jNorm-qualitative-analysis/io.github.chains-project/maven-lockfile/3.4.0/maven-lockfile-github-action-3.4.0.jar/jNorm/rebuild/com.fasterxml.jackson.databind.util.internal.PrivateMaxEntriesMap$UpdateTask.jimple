final class com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask extends java.lang.Object implements java.lang.Runnable
{
final int weightDifference;
final com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node;
final com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0;
void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap, com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node, int)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask v0;
int v3;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask;
v1 := @parameter0: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap;
v2 := @parameter1: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v3 := @parameter2: int;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: int weightDifference> = v3;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node> = v2;
return;
}
public void run()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask v0;
long v5, v7;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1, v10, v3, v8;
java.util.concurrent.atomic.AtomicLong v2, v4;
int v6;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v9;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v2 = v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.util.concurrent.atomic.AtomicLong weightedSize>;
v3 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v4 = v3.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.util.concurrent.atomic.AtomicLong weightedSize>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicLong: long get()>();
v6 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: int weightDifference>;
v7 = v5 + v6;
virtualinvoke v2.<java.util.concurrent.atomic.AtomicLong: void lazySet(long)>(v7);
v8 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v9 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node>;
virtualinvoke v8.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void applyRead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node)>(v9);
v10 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
virtualinvoke v10.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void evict()>();
return;
}
}