public final enum class com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature extends java.lang.Enum implements com.fasterxml.jackson.core.FormatFeature
{
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature WRITE_DOC_START_MARKER;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_OBJECT_ID;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_TYPE_ID;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature CANONICAL_OUTPUT;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature SPLIT_LINES;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature MINIMIZE_QUOTES;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALWAYS_QUOTE_NUMBERS_AS_STRINGS;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature LITERAL_BLOCK_STYLE;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS_WITH_INDICATOR;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_PLATFORM_LINE_BREAKS;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALLOW_LONG_KEYS;
protected final boolean _defaultState;
protected final int _mask;
private static final com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] $VALUES;
public static com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] values()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] v0;
java.lang.Object v1;
v0 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/dataformat/yaml/YAMLGenerator$Feature;", v0);
return v1;
}
public static int collectDefaults()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] v1;
int v0, v2, v3, v6;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v4;
boolean v5;
v0 = 0;
v1 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledByDefault()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v4.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v0 = v0 | v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
return v0;
}
private void <init>(java.lang.String, int, boolean)
{
int v2, v4, v5;
java.lang.String v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean _defaultState> = v3;
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int ordinal()>();
v5 = 1 << v4;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int _mask> = v5;
return;
}
public boolean enabledByDefault()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean _defaultState>;
return v1;
}
public boolean enabledIn(int)
{
int v1, v2, v3;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int _mask>;
v3 = v1 & v2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int getMask()
{
int v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int _mask>;
return v1;
}
private static com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] $values()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] v0;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1, v10, v11, v12, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)[12];
v1 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature WRITE_DOC_START_MARKER>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_OBJECT_ID>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_TYPE_ID>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature CANONICAL_OUTPUT>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature SPLIT_LINES>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature MINIMIZE_QUOTES>;
v0[5] = v6;
v7 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALWAYS_QUOTE_NUMBERS_AS_STRINGS>;
v0[6] = v7;
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature LITERAL_BLOCK_STYLE>;
v0[7] = v8;
v9 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS>;
v0[8] = v9;
v10 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS_WITH_INDICATOR>;
v0[9] = v10;
v11 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_PLATFORM_LINE_BREAKS>;
v0[10] = v11;
v12 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALLOW_LONG_KEYS>;
v0[11] = v12;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] v12;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v0, v1, v10, v11, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_DOC_START_MARKER", 0, 1);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature WRITE_DOC_START_MARKER> = v0;
v1 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("USE_NATIVE_OBJECT_ID", 1, 1);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_OBJECT_ID> = v1;
v2 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v2.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("USE_NATIVE_TYPE_ID", 2, 1);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_TYPE_ID> = v2;
v3 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v3.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("CANONICAL_OUTPUT", 3, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature CANONICAL_OUTPUT> = v3;
v4 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v4.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("SPLIT_LINES", 4, 1);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature SPLIT_LINES> = v4;
v5 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v5.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("MINIMIZE_QUOTES", 5, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature MINIMIZE_QUOTES> = v5;
v6 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v6.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("ALWAYS_QUOTE_NUMBERS_AS_STRINGS", 6, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALWAYS_QUOTE_NUMBERS_AS_STRINGS> = v6;
v7 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v7.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("LITERAL_BLOCK_STYLE", 7, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature LITERAL_BLOCK_STYLE> = v7;
v8 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v8.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("INDENT_ARRAYS", 8, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS> = v8;
v9 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v9.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("INDENT_ARRAYS_WITH_INDICATOR", 9, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS_WITH_INDICATOR> = v9;
v10 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v10.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("USE_PLATFORM_LINE_BREAKS", 10, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_PLATFORM_LINE_BREAKS> = v10;
v11 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
specialinvoke v11.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: void <init>(java.lang.String,int,boolean)>("ALLOW_LONG_KEYS", 11, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALLOW_LONG_KEYS> = v11;
v12 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] $values()>();
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature[] $VALUES> = v12;
return;
}
}