public final enum class com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature extends java.lang.Enum implements com.fasterxml.jackson.core.FormatFeature
{
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature EMPTY_STRING_AS_NULL;
public static final enum com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature PARSE_BOOLEAN_LIKE_WORDS_AS_STRINGS;
final boolean _defaultState;
final int _mask;
private static final com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] $VALUES;
public static com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] v0;
v0 = <com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/dataformat/yaml/YAMLParser$Feature;", v0);
return v1;
}
public static int collectDefaults()
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v4;
int v0, v2, v3, v6;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] v1;
boolean v5;
v0 = 0;
v1 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: boolean enabledByDefault()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v4.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int getMask()>();
v0 = v0 | v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
return v0;
}
private void <init>(java.lang.String, int, boolean)
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v0;
int v2, v4, v5;
java.lang.String v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: boolean _defaultState> = v3;
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int ordinal()>();
v5 = 1 << v4;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int _mask> = v5;
return;
}
public boolean enabledByDefault()
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: boolean _defaultState>;
return v1;
}
public boolean enabledIn(int)
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v0;
int v1, v2, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int _mask>;
v3 = v1 & v2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int getMask()
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v0;
int v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int _mask>;
return v1;
}
private static com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] $values()
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v1, v2;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] v0;
v0 = newarray (com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature)[2];
v1 = <com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature EMPTY_STRING_AS_NULL>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature PARSE_BOOLEAN_LIKE_WORDS_AS_STRINGS>;
v0[1] = v2;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v0, v1;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] v2;
v0 = new com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: void <init>(java.lang.String,int,boolean)>("EMPTY_STRING_AS_NULL", 0, 1);
<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature EMPTY_STRING_AS_NULL> = v0;
v1 = new com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
specialinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: void <init>(java.lang.String,int,boolean)>("PARSE_BOOLEAN_LIKE_WORDS_AS_STRINGS", 1, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature PARSE_BOOLEAN_LIKE_WORDS_AS_STRINGS> = v1;
v2 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] $values()>();
<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature[] $VALUES> = v2;
return;
}
}