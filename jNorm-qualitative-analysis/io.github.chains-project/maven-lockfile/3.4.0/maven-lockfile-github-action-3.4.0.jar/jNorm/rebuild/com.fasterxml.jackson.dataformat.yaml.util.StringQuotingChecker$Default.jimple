public class com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default extends com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker implements java.io.Serializable
{
private static final long serialVersionUID;
private static final com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default INSTANCE;
public void <init>()
{
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker: void <init>()>();
return;
}
public static com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default instance()
{
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default v0;
v0 = <com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default INSTANCE>;
return v0;
}
public boolean needToQuoteName(java.lang.String)
{
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default v0;
java.lang.String v1;
boolean v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: boolean isReservedKeyword(java.lang.String)>(v1);
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: boolean looksLikeYAMLNumber(java.lang.String)>(v1);
if v3 != 0 goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: boolean nameHasQuotableChar(java.lang.String)>(v1);
if v4 == 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public boolean needToQuoteValue(java.lang.String)
{
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default v0;
java.lang.String v1;
boolean v2, v3, v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: boolean isReservedKeyword(java.lang.String)>(v1);
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: boolean valueHasQuotableChar(java.lang.String)>(v1);
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
static void <clinit>()
{
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default v0;
v0 = new com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: void <init>()>();
<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default INSTANCE> = v0;
return;
}
}