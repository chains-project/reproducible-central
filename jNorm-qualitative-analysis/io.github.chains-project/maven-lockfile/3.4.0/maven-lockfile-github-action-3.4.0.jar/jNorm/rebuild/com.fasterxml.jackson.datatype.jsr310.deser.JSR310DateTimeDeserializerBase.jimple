public abstract class com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase implements com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
protected final java.time.format.DateTimeFormatter _formatter;
protected final com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape;
protected void <init>(java.lang.Class, java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0;
java.lang.Class v1;
java.time.format.DateTimeFormatter v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter> = v2;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape> = null;
return;
}
public void <init>(java.lang.Class, java.time.format.DateTimeFormatter, java.lang.Boolean)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0;
java.time.format.DateTimeFormatter v2;
java.lang.Boolean v3;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 := @parameter2: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(java.lang.Class,java.lang.Boolean)>(v1, v3);
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter> = v2;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape> = null;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase, java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0, v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v3;
java.time.format.DateTimeFormatter v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v2 := @parameter1: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase)>(v1);
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter> = v2;
v3 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape> = v3;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase, java.lang.Boolean)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0, v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v4;
java.time.format.DateTimeFormatter v3;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase,java.lang.Boolean)>(v1, v2);
v3 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter> = v3;
v4 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase, com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0, v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v2;
java.time.format.DateTimeFormatter v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v2 := @parameter1: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase)>(v1);
v3 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.time.format.DateTimeFormatter _formatter> = v3;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape> = v2;
return;
}
protected abstract com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase withDateFormat(java.time.format.DateTimeFormatter);
protected abstract com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase withLeniency(java.lang.Boolean);
protected abstract com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape);
public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0, v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Class v3;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.lang.Class handledType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v3);
if v4 != null goto label1;
v5 = v0;
goto label2;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase _withFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(v1, v2, v4);
label2:
return v5;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase _withFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.'annotation'.JsonFormat$Value)
{
java.time.format.ResolverStyle v16;
java.time.format.DateTimeFormatterBuilder v12;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v3;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v20, v21;
java.util.Locale v10, v11;
java.lang.Boolean v6;
java.lang.String v8;
boolean v13, v15, v17, v5, v7, v9;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.TimeZone v18;
com.fasterxml.jackson.databind.BeanProperty v2;
java.time.ZoneId v19;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0, v4;
java.time.format.DateTimeFormatter v14;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.JsonFormat$Value;
v4 = v0;
v5 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasLenient()>();
if v5 == 0 goto label01;
v6 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getLenient()>();
if v6 == null goto label01;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase withLeniency(java.lang.Boolean)>(v6);
label01:
v7 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasPattern()>();
if v7 == 0 goto label09;
v8 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.String getPattern()>();
v9 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasLocale()>();
if v9 == 0 goto label02;
v10 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.util.Locale getLocale()>();
goto label03;
label02:
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.util.Locale getLocale()>();
label03:
v11 = v10;
v12 = new java.time.format.DateTimeFormatterBuilder;
specialinvoke v12.<java.time.format.DateTimeFormatterBuilder: void <init>()>();
v13 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: boolean acceptCaseInsensitiveValues(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(v1, v3);
if v13 == 0 goto label04;
virtualinvoke v12.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseInsensitive()>();
label04:
virtualinvoke v12.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)>(v8);
if v11 != null goto label05;
v14 = virtualinvoke v12.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter()>();
goto label06;
label05:
v14 = virtualinvoke v12.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter(java.util.Locale)>(v11);
label06:
v15 = virtualinvoke v4.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: boolean isLenient()>();
if v15 != 0 goto label07;
v16 = <java.time.format.ResolverStyle: java.time.format.ResolverStyle STRICT>;
v14 = virtualinvoke v14.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverStyle(java.time.format.ResolverStyle)>(v16);
label07:
v17 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasTimeZone()>();
if v17 == 0 goto label08;
v18 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.util.TimeZone getTimeZone()>();
v19 = virtualinvoke v18.<java.util.TimeZone: java.time.ZoneId toZoneId()>();
v14 = virtualinvoke v14.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v19);
label08:
v4 = virtualinvoke v4.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase withDateFormat(java.time.format.DateTimeFormatter)>(v14);
label09:
v20 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
if v20 == null goto label10;
v21 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape>;
if v20 == v21 goto label10;
v4 = virtualinvoke v4.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape)>(v20);
label10:
return v4;
}
private boolean acceptCaseInsensitiveValues(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.'annotation'.JsonFormat$Value)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v3;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v2;
com.fasterxml.jackson.databind.MapperFeature v5;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0;
java.lang.Boolean v4;
boolean v6, v7;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.'annotation'.JsonFormat$Value;
v3 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_VALUES>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v3);
if v4 != null goto label1;
v5 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_VALUES>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v5);
v4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
label1:
v7 = virtualinvoke v4.<java.lang.Boolean: boolean booleanValue()>();
return v7;
}
protected void _throwNoNumericTimestampNeedTimeZone(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v0;
java.lang.Class v3, v6;
java.lang.String v7;
java.lang.Number v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.lang.Class handledType()>();
v4 = newarray (java.lang.Object)[2];
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v4[0] = v5;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: java.lang.Class handledType()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v4[1] = v7;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v3, "raw timestamp (%d) not allowed for `%s`: need additional information such as an offset or time-zone (see class Javadocs)", v4);
return;
}
}