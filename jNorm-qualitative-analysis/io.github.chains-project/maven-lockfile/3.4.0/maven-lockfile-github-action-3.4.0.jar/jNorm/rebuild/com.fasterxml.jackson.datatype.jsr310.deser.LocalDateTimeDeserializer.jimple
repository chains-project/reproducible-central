public class com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase
{
private static final long serialVersionUID;
private static final java.time.format.DateTimeFormatter DEFAULT_FORMATTER;
public static final com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 = <com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER>;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return;
}
public void <init>(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(class "Ljava/time/LocalDateTime;", v1);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer, java.lang.Boolean)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0, v1;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase,java.lang.Boolean)>(v1, v2);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer withDateFormat(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0, v2;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer withLeniency(java.lang.Boolean)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0, v2;
java.lang.Boolean v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: java.lang.Boolean;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer,java.lang.Boolean)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
return v0;
}
public java.time.LocalDateTime deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v15, v37;
boolean v10, v16, v3, v38, v47, v50, v6;
com.fasterxml.jackson.databind.JsonMappingException v43;
java.lang.Object[] v45, v51;
java.time.LocalDateTime v17, v32, v5, v9;
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0;
int v21, v22, v23, v24, v25, v26, v27, v28, v29, v33, v36;
com.fasterxml.jackson.core.JsonToken v11, v12, v13, v14, v18, v19, v20, v30, v31, v34, v35, v39, v40, v42, v46, v49;
java.lang.String v4, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v41, v44, v7;
java.lang.Object v48, v52;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasTokenId(int)>(6);
if v3 == 0 goto label01;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.LocalDateTime _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v4);
return v5;
label01:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v6 == 0 goto label02;
v7 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.lang.Class handledType()>();
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v7);
v9 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.LocalDateTime _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v8);
return v9;
label02:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v10 == 0 goto label13;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v11 != v12 goto label03;
return null;
label03:
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v11 == v13 goto label04;
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v11 != v14 goto label06;
label04:
v15 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v15);
if v16 == 0 goto label06;
v17 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.LocalDateTime deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v18 == v19 goto label05;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label05:
return v17;
label06:
v20 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v11 != v20 goto label12;
v21 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v22 = (int) -1;
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int nextIntValue(int)>(v22);
v24 = (int) -1;
v25 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int nextIntValue(int)>(v24);
v26 = (int) -1;
v27 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int nextIntValue(int)>(v26);
v28 = (int) -1;
v29 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int nextIntValue(int)>(v28);
v30 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v31 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v30 != v31 goto label07;
v32 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int)>(v21, v23, v25, v27, v29);
goto label11;
label07:
v33 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v34 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v35 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v34 != v35 goto label08;
v32 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int)>(v21, v23, v25, v27, v29, v33);
goto label11;
label08:
v36 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
if v36 >= 1000 goto label09;
v37 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v38 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v37);
if v38 != 0 goto label09;
v36 = v36 * 1000000;
label09:
v39 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v40 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v39 == v40 goto label10;
v41 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.lang.Class handledType()>();
v42 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
v43 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v41, v42, "Expected array to end");
throw v43;
label10:
v32 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(v21, v23, v25, v27, v29, v33, v36);
label11:
return v32;
label12:
v44 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.lang.Class handledType()>();
v45 = newarray (java.lang.Object)[1];
v45[0] = v11;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v44, "Unexpected token (%s) within Array, expected VALUE_NUMBER_INT", v45);
label13:
v46 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v47 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v46);
if v47 == 0 goto label14;
v48 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v48;
label14:
v49 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v50 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v49);
if v50 == 0 goto label15;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: void _throwNoNumericTimestampNeedTimeZone(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label15:
v51 = newarray (java.lang.Object)[0];
v52 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v2, v1, "Expected array or string.", v51);
return v52;
}
protected java.time.LocalDateTime _fromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
java.lang.Object[] v20;
java.time.LocalDateTime v17, v23;
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v0;
int v13, v14, v5, v9;
com.fasterxml.jackson.databind.JavaType v18;
java.lang.String v15, v3, v4;
java.time.DateTimeException v24;
boolean v11, v12;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
char v10;
java.time.format.DateTimeFormatter v16, v22, v7, v8;
java.lang.Class v19;
java.lang.Object v21, v25, v6;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.lang.Object _fromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v4);
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.format.DateTimeFormatter _formatter>;
v8 = <com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER>;
if v7 != v8 goto label5;
v9 = virtualinvoke v4.<java.lang.String: int length()>();
if v9 <= 10 goto label5;
v10 = virtualinvoke v4.<java.lang.String: char charAt(int)>(10);
if v10 != 84 goto label5;
v11 = virtualinvoke v4.<java.lang.String: boolean endsWith(java.lang.String)>("Z");
if v11 == 0 goto label5;
v12 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: boolean isLenient()>();
if v12 == 0 goto label3;
v13 = virtualinvoke v4.<java.lang.String: int length()>();
v14 = v13 - 1;
v15 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v14);
v16 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.format.DateTimeFormatter _formatter>;
v17 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v15, v16);
label2:
return v17;
label3:
v18 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v20 = newarray (java.lang.Object)[0];
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v19, v4, "Should not contain offset when \'strict\' mode set for property or type (enable \'lenient\' handling to allow)", v20);
label4:
return v21;
label5:
v22 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.format.DateTimeFormatter _formatter>;
v23 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v4, v22);
label6:
return v23;
label7:
v24 := @caughtexception;
v25 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.time.DateTimeException,java.lang.String)>(v2, v24, v4);
return v25;
catch java.time.DateTimeException from label1 to label2 with label7;
catch java.time.DateTimeException from label3 to label4 with label7;
catch java.time.DateTimeException from label5 to label6 with label7;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer v1;
java.time.format.DateTimeFormatter v0;
v0 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_LOCAL_DATE_TIME>;
<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER> = v0;
v1 = new com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
specialinvoke v1.<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer INSTANCE> = v1;
return;
}
}