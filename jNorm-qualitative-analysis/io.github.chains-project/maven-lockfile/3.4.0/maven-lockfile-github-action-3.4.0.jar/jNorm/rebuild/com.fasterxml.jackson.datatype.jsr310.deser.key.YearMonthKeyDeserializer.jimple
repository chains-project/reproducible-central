public class com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.key.Jsr310KeyDeserializer
{
public static final com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer INSTANCE;
private static final java.time.format.DateTimeFormatter FORMATTER;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.key.Jsr310KeyDeserializer: void <init>()>();
return;
}
protected java.time.YearMonth deserialize(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer v0;
java.time.format.DateTimeFormatter v3;
java.time.YearMonth v4;
java.lang.Object v6;
java.lang.String v1;
java.time.DateTimeException v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
label1:
v3 = <com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer: java.time.format.DateTimeFormatter FORMATTER>;
v4 = staticinvoke <java.time.YearMonth: java.time.YearMonth parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v1, v3);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.time.DateTimeException,java.lang.String)>(v2, class "Ljava/time/YearMonth;", v5, v1);
return v6;
catch java.time.DateTimeException from label1 to label2 with label3;
}
static void <clinit>()
{
java.time.format.DateTimeFormatterBuilder v1, v4, v5, v7;
java.time.temporal.ChronoField v2, v6;
java.time.format.SignStyle v3;
com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer v0;
java.time.format.DateTimeFormatter v8;
v0 = new com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer INSTANCE> = v0;
v1 = new java.time.format.DateTimeFormatterBuilder;
specialinvoke v1.<java.time.format.DateTimeFormatterBuilder: void <init>()>();
v2 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField YEAR>;
v3 = <java.time.format.SignStyle: java.time.format.SignStyle EXCEEDS_PAD>;
v4 = virtualinvoke v1.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle)>(v2, 4, 10, v3);
v5 = virtualinvoke v4.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);
v6 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MONTH_OF_YEAR>;
v7 = virtualinvoke v5.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField,int)>(v6, 2);
v8 = virtualinvoke v7.<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter()>();
<com.fasterxml.jackson.datatype.jsr310.deser.key.YearMonthKeyDeserializer: java.time.format.DateTimeFormatter FORMATTER> = v8;
return;
}
}