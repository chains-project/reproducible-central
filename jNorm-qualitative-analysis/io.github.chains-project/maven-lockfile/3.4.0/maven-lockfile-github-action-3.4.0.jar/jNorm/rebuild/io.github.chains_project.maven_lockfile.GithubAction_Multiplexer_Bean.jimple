public class io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean extends java.lang.Object implements io.quarkus.arc.InjectableBean, java.util.function.Supplier
{
private final java.util.Set types;
private final java.util.Set qualifiers;
private volatile io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy proxy;
private final java.util.function.Supplier injectProviderSupplier1;
private io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy proxy()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v1, v2;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy proxy>;
if v1 != null goto label1;
v2 = new io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
specialinvoke v2.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: void <init>(java.lang.String)>("fdb7af6b2ee872755a3a6027fbbc739ae9aab9db");
v1 = v2;
v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy proxy> = v2;
label1:
return v1;
}
public void <init>(java.util.function.Supplier)
{
java.lang.Object[] v13, v17;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
jakarta.enterprise.inject.literal.InjectLiteral v8;
org.eclipse.microprofile.config.inject.ConfigProperty_ArcAnnotationLiteral v5, v7;
java.util.function.Supplier v1;
java.util.HashSet v4, v6;
java.lang.Thread v2;
int v11;
io.quarkiverse.githubaction.runtime.Multiplexer_ArcAnnotationLiteral v19;
io.quarkus.arc.impl.FixedValueSupplier v12;
jakarta.enterprise.inject.Any$Literal v18;
io.quarkus.arc.impl.CurrentInjectionPointProvider v10;
java.util.Set v16, v20;
java.lang.reflect.Field v9;
java.lang.Class v14, v15;
java.lang.ClassLoader v3;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: java.util.function.Supplier;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v4 = new java.util.HashSet;
specialinvoke v4.<java.util.HashSet: void <init>()>();
v5 = new org.eclipse.microprofile.config.inject.ConfigProperty_ArcAnnotationLiteral;
specialinvoke v5.<org.eclipse.microprofile.config.inject.ConfigProperty_ArcAnnotationLiteral: void <init>(java.lang.String,java.lang.String)>("quarkus.application.version", "org.eclipse.microprofile.config.configproperty.unconfigureddvalue");
interfaceinvoke v4.<java.util.Set: boolean add(java.lang.Object)>(v5);
v6 = new java.util.HashSet;
specialinvoke v6.<java.util.HashSet: void <init>()>();
v7 = new org.eclipse.microprofile.config.inject.ConfigProperty_ArcAnnotationLiteral;
specialinvoke v7.<org.eclipse.microprofile.config.inject.ConfigProperty_ArcAnnotationLiteral: void <init>(java.lang.String,java.lang.String)>("quarkus.application.version", "org.eclipse.microprofile.config.configproperty.unconfigureddvalue");
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v7);
v8 = <jakarta.enterprise.inject.literal.InjectLiteral: jakarta.enterprise.inject.literal.InjectLiteral INSTANCE>;
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v8);
v9 = staticinvoke <io.quarkus.arc.impl.Reflections: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>(class "Lio/github/chains_project/maven_lockfile/GithubAction;", "version");
v10 = new io.quarkus.arc.impl.CurrentInjectionPointProvider;
v11 = (int) -1;
specialinvoke v10.<io.quarkus.arc.impl.CurrentInjectionPointProvider: void <init>(io.quarkus.arc.InjectableBean,java.util.function.Supplier,java.lang.reflect.Type,java.util.Set,java.util.Set,java.lang.reflect.Member,int,boolean)>(v0, v1, class "Ljava/lang/String;", v4, v6, v9, v11, 0);
v12 = new io.quarkus.arc.impl.FixedValueSupplier;
specialinvoke v12.<io.quarkus.arc.impl.FixedValueSupplier: void <init>(java.lang.Object)>(v10);
v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: java.util.function.Supplier injectProviderSupplier1> = v12;
v13 = newarray (java.lang.Object)[3];
v14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.github.chains_project.maven_lockfile.GithubAction", 0, v3);
v13[0] = v14;
v15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.github.chains_project.maven_lockfile.GithubAction_Multiplexer", 0, v3);
v13[1] = v15;
v13[2] = class "Ljava/lang/Object;";
v16 = staticinvoke <io.quarkus.arc.impl.Sets: java.util.Set of(java.lang.Object[])>(v13);
v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: java.util.Set types> = v16;
v17 = newarray (java.lang.Object)[2];
v18 = <jakarta.enterprise.inject.Any$Literal: jakarta.enterprise.inject.Any$Literal INSTANCE>;
v17[0] = v18;
v19 = <io.quarkiverse.githubaction.runtime.Multiplexer_ArcAnnotationLiteral: io.quarkiverse.githubaction.runtime.Multiplexer_ArcAnnotationLiteral INSTANCE>;
v17[1] = v19;
v20 = staticinvoke <io.quarkus.arc.impl.Sets: java.util.Set of(java.lang.Object[])>(v17);
v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: java.util.Set qualifiers> = v20;
return;
}
public java.lang.String getIdentifier()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
return "fdb7af6b2ee872755a3a6027fbbc739ae9aab9db";
}
public java.lang.Object get()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
return v0;
}
private io.github.chains_project.maven_lockfile.GithubAction_Multiplexer doCreate(jakarta.enterprise.context.spi.CreationalContext)
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
jakarta.enterprise.context.spi.CreationalContext v1;
java.lang.RuntimeException v7, v8;
java.util.function.Supplier v3;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v2;
io.quarkus.arc.impl.CreationalContextImpl v5;
java.lang.Object v4, v6;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = new io.github.chains_project.maven_lockfile.GithubAction_Multiplexer;
specialinvoke v2.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void <init>()>();
label1:
v3 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: java.util.function.Supplier injectProviderSupplier1>;
v4 = interfaceinvoke v3.<java.util.function.Supplier: java.lang.Object get()>();
v5 = staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl child(io.quarkus.arc.InjectableReferenceProvider,jakarta.enterprise.context.spi.CreationalContext)>(v4, v1);
v6 = interfaceinvoke v4.<io.quarkus.arc.InjectableReferenceProvider: java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)>(v5);
v2.<io.github.chains_project.maven_lockfile.GithubAction: java.lang.String version> = v6;
label2:
goto label4;
label3:
v7 := @caughtexception;
v8 = new java.lang.RuntimeException;
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error injecting java.lang.String io.github.chains_project.maven_lockfile.GithubAction.version", v7);
throw v8;
label4:
return v2;
catch java.lang.RuntimeException from label1 to label2 with label3;
}
public io.github.chains_project.maven_lockfile.GithubAction_Multiplexer create(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.spi.CreationalContext v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v2;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer doCreate(jakarta.enterprise.context.spi.CreationalContext)>(v1);
return v2;
}
public volatile java.lang.Object create(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.spi.CreationalContext v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v2;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = virtualinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer create(jakarta.enterprise.context.spi.CreationalContext)>(v1);
return v2;
}
public io.github.chains_project.maven_lockfile.GithubAction_Multiplexer get(jakarta.enterprise.context.spi.CreationalContext)
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v2;
jakarta.enterprise.context.spi.CreationalContext v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy proxy()>();
return v2;
}
public volatile java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.spi.CreationalContext v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v2;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = virtualinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer get(jakarta.enterprise.context.spi.CreationalContext)>(v1);
return v2;
}
public java.util.Set getTypes()
{
java.util.Set v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: java.util.Set types>;
return v1;
}
public java.lang.Class getScope()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
return class "Ljakarta/enterprise/context/ApplicationScoped;";
}
public java.util.Set getQualifiers()
{
java.util.Set v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean: java.util.Set qualifiers>;
return v1;
}
public java.lang.Class getBeanClass()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
return class "Lio/github/chains_project/maven_lockfile/GithubAction_Multiplexer;";
}
public boolean isSuppressed()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
return 0;
}
public boolean equals(java.lang.Object)
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
java.lang.Object v1;
java.lang.String v3, v4;
boolean v2, v5;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof io.quarkus.arc.InjectableBean;
if v2 != 0 goto label3;
return 0;
label3:
v3 = interfaceinvoke v1.<io.quarkus.arc.InjectableBean: java.lang.String getIdentifier()>();
v4 = "fdb7af6b2ee872755a3a6027fbbc739ae9aab9db";
v5 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
return v5;
}
public int hashCode()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
return -243097946;
}
public java.lang.String toString()
{
java.lang.String v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_Bean;
v1 = staticinvoke <io.quarkus.arc.impl.Beans: java.lang.String toString(io.quarkus.arc.InjectableBean)>(v0);
return v1;
}
}