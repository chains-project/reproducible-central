final class io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise extends io.netty.channel.DefaultChannelPromise
{
private volatile boolean registered;
void <init>(io.netty.channel.Channel)
{
io.netty.channel.Channel v1;
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise v0;
v0 := @this: io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise;
v1 := @parameter0: io.netty.channel.Channel;
specialinvoke v0.<io.netty.channel.DefaultChannelPromise: void <init>(io.netty.channel.Channel)>(v1);
return;
}
void registered()
{
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise v0;
v0 := @this: io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise;
v0.<io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise: boolean registered> = 1;
return;
}
protected io.netty.util.concurrent.EventExecutor executor()
{
io.netty.util.concurrent.EventExecutor v2;
io.netty.util.concurrent.GlobalEventExecutor v3;
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise v0;
boolean v1;
v0 := @this: io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise;
v1 = v0.<io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise: boolean registered>;
if v1 == 0 goto label1;
v2 = specialinvoke v0.<io.netty.channel.DefaultChannelPromise: io.netty.util.concurrent.EventExecutor executor()>();
return v2;
label1:
v3 = <io.netty.util.concurrent.GlobalEventExecutor: io.netty.util.concurrent.GlobalEventExecutor INSTANCE>;
return v3;
}
}