class io.netty.bootstrap.ServerBootstrap$1 extends io.netty.channel.ChannelInitializer
{
final io.netty.channel.EventLoopGroup val$currentChildGroup;
final io.netty.channel.ChannelHandler val$currentChildHandler;
final java.util.Map$Entry[] val$currentChildOptions;
final java.util.Map$Entry[] val$currentChildAttrs;
final io.netty.bootstrap.ServerBootstrap this$0;
void <init>(io.netty.bootstrap.ServerBootstrap, io.netty.channel.EventLoopGroup, io.netty.channel.ChannelHandler, java.util.Map$Entry[], java.util.Map$Entry[])
{
io.netty.channel.EventLoopGroup v2;
io.netty.bootstrap.ServerBootstrap$1 v0;
io.netty.bootstrap.ServerBootstrap v1;
io.netty.channel.ChannelHandler v3;
java.util.Map$Entry[] v4, v5;
v0 := @this: io.netty.bootstrap.ServerBootstrap$1;
v1 := @parameter0: io.netty.bootstrap.ServerBootstrap;
v2 := @parameter1: io.netty.channel.EventLoopGroup;
v3 := @parameter2: io.netty.channel.ChannelHandler;
v4 := @parameter3: java.util.Map$Entry[];
v5 := @parameter4: java.util.Map$Entry[];
v0.<io.netty.bootstrap.ServerBootstrap$1: io.netty.bootstrap.ServerBootstrap this$0> = v1;
v0.<io.netty.bootstrap.ServerBootstrap$1: io.netty.channel.EventLoopGroup val$currentChildGroup> = v2;
v0.<io.netty.bootstrap.ServerBootstrap$1: io.netty.channel.ChannelHandler val$currentChildHandler> = v3;
v0.<io.netty.bootstrap.ServerBootstrap$1: java.util.Map$Entry[] val$currentChildOptions> = v4;
v0.<io.netty.bootstrap.ServerBootstrap$1: java.util.Map$Entry[] val$currentChildAttrs> = v5;
specialinvoke v0.<io.netty.channel.ChannelInitializer: void <init>()>();
return;
}
public void initChannel(io.netty.channel.Channel)
{
io.netty.channel.ChannelPipeline v2;
io.netty.channel.EventLoop v7;
io.netty.channel.ChannelHandler[] v6;
io.netty.channel.Channel v1;
io.netty.bootstrap.ServerBootstrap$1 v0;
io.netty.bootstrap.ServerBootstrap$1$1 v8;
io.netty.bootstrap.ServerBootstrap v3;
io.netty.channel.ChannelHandler v5;
io.netty.bootstrap.ServerBootstrapConfig v4;
v0 := @this: io.netty.bootstrap.ServerBootstrap$1;
v1 := @parameter0: io.netty.channel.Channel;
v2 = interfaceinvoke v1.<io.netty.channel.Channel: io.netty.channel.ChannelPipeline pipeline()>();
v3 = v0.<io.netty.bootstrap.ServerBootstrap$1: io.netty.bootstrap.ServerBootstrap this$0>;
v4 = v3.<io.netty.bootstrap.ServerBootstrap: io.netty.bootstrap.ServerBootstrapConfig config>;
v5 = virtualinvoke v4.<io.netty.bootstrap.ServerBootstrapConfig: io.netty.channel.ChannelHandler handler()>();
if v5 == null goto label1;
v6 = newarray (io.netty.channel.ChannelHandler)[1];
v6[0] = v5;
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])>(v6);
label1:
v7 = interfaceinvoke v1.<io.netty.channel.Channel: io.netty.channel.EventLoop eventLoop()>();
v8 = new io.netty.bootstrap.ServerBootstrap$1$1;
specialinvoke v8.<io.netty.bootstrap.ServerBootstrap$1$1: void <init>(io.netty.bootstrap.ServerBootstrap$1,io.netty.channel.ChannelPipeline,io.netty.channel.Channel)>(v0, v2, v1);
interfaceinvoke v7.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v8);
return;
}
}