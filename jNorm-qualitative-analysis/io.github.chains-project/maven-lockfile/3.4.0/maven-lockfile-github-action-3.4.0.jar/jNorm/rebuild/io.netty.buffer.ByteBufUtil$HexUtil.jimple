final class io.netty.buffer.ByteBufUtil$HexUtil extends java.lang.Object
{
private static final char[] BYTE2CHAR;
private static final char[] HEXDUMP_TABLE;
private static final java.lang.String[] HEXPADDING;
private static final java.lang.String[] HEXDUMP_ROWPREFIXES;
private static final java.lang.String[] BYTE2HEX;
private static final java.lang.String[] BYTEPADDING;
private void <init>()
{
io.netty.buffer.ByteBufUtil$HexUtil v0;
v0 := @this: io.netty.buffer.ByteBufUtil$HexUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static java.lang.String hexDump(io.netty.buffer.ByteBuf, int, int)
{
short v9;
io.netty.buffer.ByteBuf v0;
int v1, v10, v2, v3, v4, v6, v7;
char[] v5, v8;
java.lang.String v11;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v2, "length");
if v2 != 0 goto label1;
return "";
label1:
v3 = v1 + v2;
v4 = v2 << 1;
v5 = newarray (char)[v4];
v6 = v1;
v7 = 0;
label2:
if v6 >= v3 goto label3;
v8 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] HEXDUMP_TABLE>;
v9 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v6);
v10 = v9 << 1;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v8, v10, v5, v7, 2);
v6 = v6 + 1;
v7 = v7 + 2;
goto label2;
label3:
v11 = new java.lang.String;
specialinvoke v11.<java.lang.String: void <init>(char[])>(v5);
return v11;
}
private static java.lang.String hexDump(byte[], int, int)
{
byte[] v0;
short v10;
byte v9;
int v1, v11, v2, v3, v4, v6, v7;
char[] v5, v8;
java.lang.String v12;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v2, "length");
if v2 != 0 goto label1;
return "";
label1:
v3 = v1 + v2;
v4 = v2 << 1;
v5 = newarray (char)[v4];
v6 = v1;
v7 = 0;
label2:
if v6 >= v3 goto label3;
v8 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] HEXDUMP_TABLE>;
v9 = v0[v6];
v10 = v9 & 255;
v11 = v10 << 1;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v8, v11, v5, v7, 2);
v6 = v6 + 1;
v7 = v7 + 2;
goto label2;
label3:
v12 = new java.lang.String;
specialinvoke v12.<java.lang.String: void <init>(char[])>(v5);
return v12;
}
private static java.lang.String prettyHexDump(io.netty.buffer.ByteBuf, int, int)
{
io.netty.buffer.ByteBuf v0;
int v1, v2, v3, v4, v6, v7, v9;
java.lang.StringBuilder v8;
java.lang.String v10;
boolean v5;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v2 != 0 goto label1;
return "";
label1:
v3 = v2 / 16;
v4 = v2 & 15;
if v4 != 0 goto label2;
v5 = 0;
goto label3;
label2:
v5 = 1;
label3:
v6 = v3 + v5;
v7 = v6 + 4;
v8 = new java.lang.StringBuilder;
v9 = v7 * 80;
specialinvoke v8.<java.lang.StringBuilder: void <init>(int)>(v9);
staticinvoke <io.netty.buffer.ByteBufUtil$HexUtil: void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int)>(v8, v0, v1, v2);
v10 = virtualinvoke v8.<java.lang.StringBuilder: java.lang.String toString()>();
return v10;
}
private static void appendPrettyHexDump(java.lang.StringBuilder, io.netty.buffer.ByteBuf, int, int)
{
java.lang.IndexOutOfBoundsException v6;
boolean v5;
java.lang.StringBuilder v0;
java.lang.String[] v19, v30, v33, v39;
short v20, v24, v31, v37;
io.netty.buffer.ByteBuf v1;
int v12, v13, v14, v15, v16, v17, v18, v2, v22, v26, v27, v28, v29, v3, v35, v4, v7;
java.lang.String v10, v11, v21, v32, v34, v40, v41, v42, v8, v9;
char v25, v38;
char[] v23, v36;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int capacity()>();
v5 = staticinvoke <io.netty.util.internal.MathUtil: boolean isOutOfBounds(int,int,int)>(v2, v3, v4);
if v5 == 0 goto label01;
v6 = new java.lang.IndexOutOfBoundsException;
v7 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int capacity()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v2, v3, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected: 0 <= offset(\u0001) <= offset + length(\u0001) <= buf.capacity(\u0001)");
specialinvoke v6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v8);
throw v6;
label01:
if v3 != 0 goto label02;
return;
label02:
v9 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
v10 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("         +-------------------------------------------------+\u0001         |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |\u0001+--------+-------------------------------------------------+----------------+");
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
v12 = v3 >>> 4;
v13 = v3 & 15;
v14 = 0;
label03:
if v14 >= v12 goto label08;
v15 = v14 << 4;
v16 = v15 + v2;
staticinvoke <io.netty.buffer.ByteBufUtil$HexUtil: void appendHexDumpRowPrefix(java.lang.StringBuilder,int,int)>(v0, v14, v16);
v17 = v16 + 16;
v18 = v16;
label04:
if v18 >= v17 goto label05;
v19 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTE2HEX>;
v20 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v18);
v21 = v19[v20];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v21);
v18 = v18 + 1;
goto label04;
label05:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |");
v22 = v16;
label06:
if v22 >= v17 goto label07;
v23 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] BYTE2CHAR>;
v24 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v22);
v25 = v23[v24];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v25);
v22 = v22 + 1;
goto label06;
label07:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);
v14 = v14 + 1;
goto label03;
label08:
if v13 == 0 goto label13;
v26 = v12 << 4;
v27 = v26 + v2;
staticinvoke <io.netty.buffer.ByteBufUtil$HexUtil: void appendHexDumpRowPrefix(java.lang.StringBuilder,int,int)>(v0, v12, v27);
v28 = v27 + v13;
v29 = v27;
label09:
if v29 >= v28 goto label10;
v30 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTE2HEX>;
v31 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v29);
v32 = v30[v31];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v32);
v29 = v29 + 1;
goto label09;
label10:
v33 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXPADDING>;
v34 = v33[v13];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v34);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |");
v35 = v27;
label11:
if v35 >= v28 goto label12;
v36 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] BYTE2CHAR>;
v37 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v35);
v38 = v36[v37];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v38);
v35 = v35 + 1;
goto label11;
label12:
v39 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTEPADDING>;
v40 = v39[v13];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v40);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);
label13:
v41 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
v42 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001+--------+-------------------------------------------------+----------------+");
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v42);
return;
}
private static void appendHexDumpRowPrefix(java.lang.StringBuilder, int, int)
{
java.lang.String[] v3, v5;
long v8, v9;
int v1, v11, v12, v2, v4;
java.lang.StringBuilder v0;
java.lang.String v10, v6, v7;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXDUMP_ROWPREFIXES>;
v4 = lengthof v3;
if v1 >= v4 goto label1;
v5 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXDUMP_ROWPREFIXES>;
v6 = v5[v1];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
goto label2;
label1:
v7 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
v8 = v2 & 4294967295L;
v9 = v8 | 4294967296L;
v10 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(v9);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
v11 = virtualinvoke v0.<java.lang.StringBuilder: int length()>();
v12 = v11 - 9;
virtualinvoke v0.<java.lang.StringBuilder: void setCharAt(int,char)>(v12, 124);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);
label2:
return;
}
static void <clinit>()
{
java.lang.StringBuilder v25, v33, v55;
long v36, v37;
java.lang.String v29, v34, v38, v42, v47, v48, v58, v6;
char[] v0, v1, v14, v60, v62, v63, v7, v9;
java.lang.String[] v2, v20, v22, v28, v3, v31, v4, v41, v44, v46, v5, v50, v52, v57;
int v10, v11, v12, v15, v16, v17, v19, v21, v23, v24, v26, v27, v30, v32, v35, v39, v40, v43, v45, v49, v51, v53, v54, v56, v59, v61, v8;
char v13, v18;
v0 = newarray (char)[256];
<io.netty.buffer.ByteBufUtil$HexUtil: char[] BYTE2CHAR> = v0;
v1 = newarray (char)[1024];
<io.netty.buffer.ByteBufUtil$HexUtil: char[] HEXDUMP_TABLE> = v1;
v2 = newarray (java.lang.String)[16];
<io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXPADDING> = v2;
v3 = newarray (java.lang.String)[4096];
<io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXDUMP_ROWPREFIXES> = v3;
v4 = newarray (java.lang.String)[256];
<io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTE2HEX> = v4;
v5 = newarray (java.lang.String)[16];
<io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTEPADDING> = v5;
v6 = "0123456789abcdef";
v7 = virtualinvoke v6.<java.lang.String: char[] toCharArray()>();
v8 = 0;
label01:
if v8 >= 256 goto label02;
v9 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] HEXDUMP_TABLE>;
v10 = v8 << 1;
v11 = v8 >>> 4;
v12 = v11 & 15;
v13 = v7[v12];
v9[v10] = v13;
v14 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] HEXDUMP_TABLE>;
v15 = v8 << 1;
v16 = v15 + 1;
v17 = v8 & 15;
v18 = v7[v17];
v14[v16] = v18;
v8 = v8 + 1;
goto label01;
label02:
v19 = 0;
label03:
v20 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXPADDING>;
v21 = lengthof v20;
if v19 >= v21 goto label06;
v22 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXPADDING>;
v23 = lengthof v22;
v24 = v23 - v19;
v25 = new java.lang.StringBuilder;
v26 = v24 * 3;
specialinvoke v25.<java.lang.StringBuilder: void <init>(int)>(v26);
v27 = 0;
label04:
if v27 >= v24 goto label05;
virtualinvoke v25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");
v27 = v27 + 1;
goto label04;
label05:
v28 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXPADDING>;
v29 = virtualinvoke v25.<java.lang.StringBuilder: java.lang.String toString()>();
v28[v19] = v29;
v19 = v19 + 1;
goto label03;
label06:
v30 = 0;
label07:
v31 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXDUMP_ROWPREFIXES>;
v32 = lengthof v31;
if v30 >= v32 goto label08;
v33 = new java.lang.StringBuilder;
specialinvoke v33.<java.lang.StringBuilder: void <init>(int)>(12);
v34 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
virtualinvoke v33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v34);
v35 = v30 << 4;
v36 = v35 & 4294967295L;
v37 = v36 | 4294967296L;
v38 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(v37);
virtualinvoke v33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v38);
v39 = virtualinvoke v33.<java.lang.StringBuilder: int length()>();
v40 = v39 - 9;
virtualinvoke v33.<java.lang.StringBuilder: void setCharAt(int,char)>(v40, 124);
virtualinvoke v33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);
v41 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] HEXDUMP_ROWPREFIXES>;
v42 = virtualinvoke v33.<java.lang.StringBuilder: java.lang.String toString()>();
v41[v30] = v42;
v30 = v30 + 1;
goto label07;
label08:
v43 = 0;
label09:
v44 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTE2HEX>;
v45 = lengthof v44;
if v43 >= v45 goto label10;
v46 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTE2HEX>;
v47 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String byteToHexStringPadded(int)>(v43);
v48 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v47) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" \u0001");
v46[v43] = v48;
v43 = v43 + 1;
goto label09;
label10:
v49 = 0;
label11:
v50 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTEPADDING>;
v51 = lengthof v50;
if v49 >= v51 goto label14;
v52 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTEPADDING>;
v53 = lengthof v52;
v54 = v53 - v49;
v55 = new java.lang.StringBuilder;
specialinvoke v55.<java.lang.StringBuilder: void <init>(int)>(v54);
v56 = 0;
label12:
if v56 >= v54 goto label13;
virtualinvoke v55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v56 = v56 + 1;
goto label12;
label13:
v57 = <io.netty.buffer.ByteBufUtil$HexUtil: java.lang.String[] BYTEPADDING>;
v58 = virtualinvoke v55.<java.lang.StringBuilder: java.lang.String toString()>();
v57[v49] = v58;
v49 = v49 + 1;
goto label11;
label14:
v59 = 0;
label15:
v60 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] BYTE2CHAR>;
v61 = lengthof v60;
if v59 >= v61 goto label19;
if v59 <= 31 goto label16;
if v59 < 127 goto label17;
label16:
v62 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] BYTE2CHAR>;
v62[v59] = 46;
goto label18;
label17:
v63 = <io.netty.buffer.ByteBufUtil$HexUtil: char[] BYTE2CHAR>;
v63[v59] = v59;
label18:
v59 = v59 + 1;
goto label15;
label19:
return;
}
}