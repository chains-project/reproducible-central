class io.netty.buffer.SimpleLeakAwareByteBuf extends io.netty.buffer.WrappedByteBuf
{
private final io.netty.buffer.ByteBuf trackedByteBuf;
final io.netty.util.ResourceLeakTracker leak;
static final boolean $assertionsDisabled;
void <init>(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker)
{
io.netty.buffer.ByteBuf v1, v2;
java.lang.Object v4, v5;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
io.netty.util.ResourceLeakTracker v3;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.util.ResourceLeakTracker;
specialinvoke v0.<io.netty.buffer.WrappedByteBuf: void <init>(io.netty.buffer.ByteBuf)>(v1);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "trackedByteBuf");
v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf trackedByteBuf> = v4;
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "leak");
v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.util.ResourceLeakTracker leak> = v5;
return;
}
void <init>(io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker)
{
io.netty.buffer.ByteBuf v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
io.netty.util.ResourceLeakTracker v2;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: io.netty.util.ResourceLeakTracker;
specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v1, v1, v2);
return;
}
public io.netty.buffer.ByteBuf slice()
{
io.netty.buffer.ByteBuf v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v2;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf slice()>();
v2 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public io.netty.buffer.ByteBuf retainedSlice()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf retainedSlice()>();
v2 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public io.netty.buffer.ByteBuf retainedSlice(int, int)
{
io.netty.buffer.ByteBuf v3, v4;
int v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf retainedSlice(int,int)>(v1, v2);
v4 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf)>(v3);
return v4;
}
public io.netty.buffer.ByteBuf retainedDuplicate()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf retainedDuplicate()>();
v2 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public io.netty.buffer.ByteBuf readRetainedSlice(int)
{
io.netty.buffer.ByteBuf v2, v3;
int v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v1);
v3 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.buffer.ByteBuf slice(int, int)
{
io.netty.buffer.ByteBuf v3;
int v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v4;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(v1, v2);
v4 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v3);
return v4;
}
public io.netty.buffer.ByteBuf duplicate()
{
io.netty.buffer.ByteBuf v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v2;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf duplicate()>();
v2 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public io.netty.buffer.ByteBuf readSlice(int)
{
io.netty.buffer.ByteBuf v2;
int v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v3;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v1);
v3 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.buffer.ByteBuf asReadOnly()
{
io.netty.buffer.ByteBuf v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v2;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf asReadOnly()>();
v2 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public io.netty.buffer.ByteBuf touch()
{
io.netty.buffer.SimpleLeakAwareByteBuf v0;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
return v0;
}
public io.netty.buffer.ByteBuf touch(java.lang.Object)
{
java.lang.Object v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: java.lang.Object;
return v0;
}
public boolean release()
{
io.netty.buffer.SimpleLeakAwareByteBuf v0;
boolean v1;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: boolean release()>();
if v1 == 0 goto label1;
specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: void closeLeak()>();
return 1;
label1:
return 0;
}
public boolean release(int)
{
int v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
boolean v2;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: boolean release(int)>(v1);
if v2 == 0 goto label1;
specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: void closeLeak()>();
return 1;
label1:
return 0;
}
private void closeLeak()
{
io.netty.buffer.ByteBuf v2;
java.lang.AssertionError v5;
io.netty.buffer.SimpleLeakAwareByteBuf v0;
io.netty.util.ResourceLeakTracker v1;
boolean v3, v4;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 = v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.util.ResourceLeakTracker leak>;
v2 = v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf trackedByteBuf>;
v3 = interfaceinvoke v1.<io.netty.util.ResourceLeakTracker: boolean close(java.lang.Object)>(v2);
v4 = <io.netty.buffer.SimpleLeakAwareByteBuf: boolean $assertionsDisabled>;
if v4 != 0 goto label1;
if v3 != 0 goto label1;
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label1:
return;
}
public io.netty.buffer.ByteBuf order(java.nio.ByteOrder)
{
java.nio.ByteOrder v1, v2;
io.netty.buffer.ByteBuf v3;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v4;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: java.nio.ByteOrder;
v2 = virtualinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: java.nio.ByteOrder order()>();
if v2 != v1 goto label1;
return v0;
label1:
v3 = specialinvoke v0.<io.netty.buffer.WrappedByteBuf: io.netty.buffer.ByteBuf order(java.nio.ByteOrder)>(v1);
v4 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v3);
return v4;
}
private io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf)
{
io.netty.util.ResourceLeakDetector v4;
io.netty.buffer.ByteBuf v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v6, v7;
io.netty.util.ResourceLeakTracker v5;
boolean v3;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = staticinvoke <io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf unwrapSwapped(io.netty.buffer.ByteBuf)>(v1);
v3 = v2 instanceof io.netty.buffer.AbstractPooledDerivedByteBuf;
if v3 == 0 goto label2;
virtualinvoke v2.<io.netty.buffer.AbstractPooledDerivedByteBuf: void parent(io.netty.buffer.ByteBuf)>(v0);
v4 = <io.netty.buffer.AbstractByteBuf: io.netty.util.ResourceLeakDetector leakDetector>;
v5 = virtualinvoke v4.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v1);
if v5 != null goto label1;
return v1;
label1:
v6 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v1, v5);
return v6;
label2:
v7 = specialinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)>(v1);
return v7;
}
private static io.netty.buffer.ByteBuf unwrapSwapped(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v0;
boolean v1, v2;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = v0 instanceof io.netty.buffer.SwappedByteBuf;
if v1 == 0 goto label2;
label1:
v0 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf unwrap()>();
v2 = v0 instanceof io.netty.buffer.SwappedByteBuf;
if v2 != 0 goto label1;
return v0;
label2:
return v0;
}
private io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v4;
io.netty.util.ResourceLeakTracker v3;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.ByteBuf trackedByteBuf>;
v3 = v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.util.ResourceLeakTracker leak>;
v4 = virtualinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v1, v2, v3);
return v4;
}
private io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker)
{
io.netty.buffer.ByteBuf v1;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v3;
io.netty.util.ResourceLeakTracker v2;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: io.netty.util.ResourceLeakTracker;
v3 = virtualinvoke v0.<io.netty.buffer.SimpleLeakAwareByteBuf: io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v1, v1, v2);
return v3;
}
protected io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker)
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.buffer.SimpleLeakAwareByteBuf v0, v4;
io.netty.util.ResourceLeakTracker v3;
v0 := @this: io.netty.buffer.SimpleLeakAwareByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.util.ResourceLeakTracker;
v4 = new io.netty.buffer.SimpleLeakAwareByteBuf;
specialinvoke v4.<io.netty.buffer.SimpleLeakAwareByteBuf: void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v1, v2, v3);
return v4;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/buffer/SimpleLeakAwareByteBuf;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.buffer.SimpleLeakAwareByteBuf: boolean $assertionsDisabled> = v2;
return;
}
}