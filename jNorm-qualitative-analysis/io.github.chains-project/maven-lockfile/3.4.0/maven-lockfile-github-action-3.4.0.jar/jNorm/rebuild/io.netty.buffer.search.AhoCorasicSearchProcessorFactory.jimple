public class io.netty.buffer.search.AhoCorasicSearchProcessorFactory extends io.netty.buffer.search.AbstractMultiSearchProcessorFactory
{
private final int[] jumpTable;
private final int[] matchForNeedleId;
static final int BITS_PER_SYMBOL;
static final int ALPHABET_SIZE;
transient void <init>(byte[][])
{
byte[] v4;
io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context v7;
int[] v11, v13, v14, v18, v19, v8, v9;
int v10, v12, v15, v16, v17, v2, v20, v21, v3, v5;
java.lang.IllegalArgumentException v6;
io.netty.buffer.search.AhoCorasicSearchProcessorFactory v0;
byte[][] v1;
v0 := @this: io.netty.buffer.search.AhoCorasicSearchProcessorFactory;
v1 := @parameter0: byte[][];
specialinvoke v0.<io.netty.buffer.search.AbstractMultiSearchProcessorFactory: void <init>()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = lengthof v4;
if v5 != 0 goto label2;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Needle must be non empty");
throw v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
v7 = staticinvoke <io.netty.buffer.search.AhoCorasicSearchProcessorFactory: io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context buildTrie(byte[][])>(v1);
v8 = v7.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: int[] jumpTable>;
v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable> = v8;
v9 = v7.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: int[] matchForNeedleId>;
v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId> = v9;
specialinvoke v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: void linkSuffixes()>();
v10 = 0;
label4:
v11 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v12 = lengthof v11;
if v10 >= v12 goto label6;
v13 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId>;
v14 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v15 = v14[v10];
v16 = v15 >> 8;
v17 = v13[v16];
if v17 < 0 goto label5;
v18 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v19 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v20 = v19[v10];
v21 = neg v20;
v18[v10] = v21;
label5:
v10 = v10 + 1;
goto label4;
label6:
return;
}
private static io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context buildTrie(byte[][])
{
byte[] v10;
java.lang.Integer v21, v24, v26, v29, v4, v7;
byte v14;
int[] v32, v35, v39, v42;
byte[][] v0;
io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context v30;
java.util.ArrayList v1, v5;
short v15;
int v11, v12, v13, v16, v18, v19, v2, v20, v22, v23, v25, v28, v3, v31, v33, v34, v37, v38, v40, v41, v44, v6, v8, v9;
java.lang.Object v17, v27, v36, v43;
v0 := @parameter0: byte[][];
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>(int)>(256);
v2 = 0;
label01:
if v2 >= 256 goto label02;
v3 = (int) -1;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
v2 = v2 + 1;
goto label01;
label02:
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
v6 = (int) -1;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
virtualinvoke v5.<java.util.ArrayList: boolean add(java.lang.Object)>(v7);
v8 = 0;
label03:
v9 = lengthof v0;
if v8 >= v9 goto label09;
v10 = v0[v8];
v11 = 0;
v12 = lengthof v10;
v13 = 0;
label04:
if v13 >= v12 goto label08;
v14 = v10[v13];
v15 = v14 & 255;
v16 = v11 + v15;
v17 = virtualinvoke v1.<java.util.ArrayList: java.lang.Object get(int)>(v16);
v18 = virtualinvoke v17.<java.lang.Integer: int intValue()>();
v19 = (int) -1;
if v18 != v19 goto label07;
v20 = virtualinvoke v1.<java.util.ArrayList: int size()>();
v21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v20);
virtualinvoke v1.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(v16, v21);
v22 = 0;
label05:
if v22 >= 256 goto label06;
v23 = (int) -1;
v24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v23);
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v24);
v22 = v22 + 1;
goto label05;
label06:
v25 = (int) -1;
v26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v25);
virtualinvoke v5.<java.util.ArrayList: boolean add(java.lang.Object)>(v26);
label07:
v27 = virtualinvoke v1.<java.util.ArrayList: java.lang.Object get(int)>(v16);
v11 = virtualinvoke v27.<java.lang.Integer: int intValue()>();
v13 = v13 + 1;
goto label04;
label08:
v28 = v11 >> 8;
v29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v8);
virtualinvoke v5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(v28, v29);
v8 = v8 + 1;
goto label03;
label09:
v30 = new io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context;
specialinvoke v30.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: void <init>()>();
v31 = virtualinvoke v1.<java.util.ArrayList: int size()>();
v32 = newarray (int)[v31];
v30.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: int[] jumpTable> = v32;
v33 = 0;
label10:
v34 = virtualinvoke v1.<java.util.ArrayList: int size()>();
if v33 >= v34 goto label11;
v35 = v30.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: int[] jumpTable>;
v36 = virtualinvoke v1.<java.util.ArrayList: java.lang.Object get(int)>(v33);
v37 = virtualinvoke v36.<java.lang.Integer: int intValue()>();
v35[v33] = v37;
v33 = v33 + 1;
goto label10;
label11:
v38 = virtualinvoke v5.<java.util.ArrayList: int size()>();
v39 = newarray (int)[v38];
v30.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: int[] matchForNeedleId> = v39;
v40 = 0;
label12:
v41 = virtualinvoke v5.<java.util.ArrayList: int size()>();
if v40 >= v41 goto label13;
v42 = v30.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context: int[] matchForNeedleId>;
v43 = virtualinvoke v5.<java.util.ArrayList: java.lang.Object get(int)>(v40);
v44 = virtualinvoke v43.<java.lang.Integer: int intValue()>();
v42[v40] = v44;
v40 = v40 + 1;
goto label12;
label13:
return v30;
}
private void linkSuffixes()
{
java.lang.Integer v2, v33;
int[] v15, v18, v19, v25, v27, v3, v34, v5;
boolean v7;
io.netty.buffer.search.AhoCorasicSearchProcessorFactory v0;
int v10, v11, v12, v13, v14, v16, v17, v20, v21, v22, v23, v24, v26, v28, v29, v30, v31, v32, v35, v36, v4, v6, v9;
java.lang.Object v8;
java.util.ArrayDeque v1;
v0 := @this: io.netty.buffer.search.AhoCorasicSearchProcessorFactory;
v1 = new java.util.ArrayDeque;
specialinvoke v1.<java.util.ArrayDeque: void <init>()>();
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
interfaceinvoke v1.<java.util.Queue: boolean add(java.lang.Object)>(v2);
v3 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId>;
v4 = lengthof v3;
v5 = newarray (int)[v4];
v6 = (int) -1;
staticinvoke <java.util.Arrays: void fill(int[],int)>(v5, v6);
label01:
v7 = interfaceinvoke v1.<java.util.Queue: boolean isEmpty()>();
if v7 != 0 goto label12;
v8 = interfaceinvoke v1.<java.util.Queue: java.lang.Object remove()>();
v9 = virtualinvoke v8.<java.lang.Integer: int intValue()>();
v10 = v9 >> 8;
v11 = v5[v10];
v12 = (int) -1;
if v11 != v12 goto label02;
v13 = 0;
goto label03;
label02:
v13 = v5[v10];
label03:
v14 = v13;
v15 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId>;
v16 = v15[v10];
v17 = (int) -1;
if v16 != v17 goto label04;
v18 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId>;
v19 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId>;
v20 = v13 >> 8;
v21 = v19[v20];
v18[v10] = v21;
label04:
v22 = 0;
label05:
if v22 >= 256 goto label01;
v23 = v9 | v22;
v24 = v14 | v22;
v25 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v26 = v25[v23];
v27 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v28 = v27[v24];
v29 = (int) -1;
if v26 == v29 goto label08;
v30 = v26 >> 8;
if v9 <= 0 goto label06;
v31 = (int) -1;
if v28 == v31 goto label06;
v32 = v28;
goto label07;
label06:
v32 = 0;
label07:
v5[v30] = v32;
v33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v26);
interfaceinvoke v1.<java.util.Queue: boolean add(java.lang.Object)>(v33);
goto label11;
label08:
v34 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v35 = (int) -1;
if v28 == v35 goto label09;
v36 = v28;
goto label10;
label09:
v36 = 0;
label10:
v34[v23] = v36;
label11:
v22 = v22 + 1;
goto label05;
label12:
return;
}
public io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor newSearchProcessor()
{
io.netty.buffer.search.AhoCorasicSearchProcessorFactory v0;
int[] v2, v3;
io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor v1;
v0 := @this: io.netty.buffer.search.AhoCorasicSearchProcessorFactory;
v1 = new io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor;
v2 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] jumpTable>;
v3 = v0.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory: int[] matchForNeedleId>;
specialinvoke v1.<io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor: void <init>(int[],int[])>(v2, v3);
return v1;
}
}