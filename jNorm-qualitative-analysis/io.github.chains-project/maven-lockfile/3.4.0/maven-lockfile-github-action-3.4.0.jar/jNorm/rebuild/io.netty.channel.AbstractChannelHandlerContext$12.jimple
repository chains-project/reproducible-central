class io.netty.channel.AbstractChannelHandlerContext$12 extends java.lang.Object implements java.lang.Runnable
{
final io.netty.channel.AbstractChannelHandlerContext val$next;
final io.netty.channel.ChannelPromise val$promise;
final io.netty.channel.AbstractChannelHandlerContext this$0;
void <init>(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelPromise v3;
io.netty.channel.AbstractChannelHandlerContext v1, v2;
io.netty.channel.AbstractChannelHandlerContext$12 v0;
v0 := @this: io.netty.channel.AbstractChannelHandlerContext$12;
v1 := @parameter0: io.netty.channel.AbstractChannelHandlerContext;
v2 := @parameter1: io.netty.channel.AbstractChannelHandlerContext;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v0.<io.netty.channel.AbstractChannelHandlerContext$12: io.netty.channel.AbstractChannelHandlerContext this$0> = v1;
v0.<io.netty.channel.AbstractChannelHandlerContext$12: io.netty.channel.AbstractChannelHandlerContext val$next> = v2;
v0.<io.netty.channel.AbstractChannelHandlerContext$12: io.netty.channel.ChannelPromise val$promise> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.channel.AbstractChannelHandlerContext v1;
io.netty.channel.AbstractChannelHandlerContext$12 v0;
io.netty.channel.ChannelPromise v2;
v0 := @this: io.netty.channel.AbstractChannelHandlerContext$12;
v1 = v0.<io.netty.channel.AbstractChannelHandlerContext$12: io.netty.channel.AbstractChannelHandlerContext val$next>;
v2 = v0.<io.netty.channel.AbstractChannelHandlerContext$12: io.netty.channel.ChannelPromise val$promise>;
specialinvoke v1.<io.netty.channel.AbstractChannelHandlerContext: void invokeDeregister(io.netty.channel.ChannelPromise)>(v2);
return;
}
}