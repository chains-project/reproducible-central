class io.netty.channel.ChannelHandlerMask$2 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
final java.lang.Class val$handlerType;
final java.lang.String val$methodName;
final java.lang.Class[] val$paramTypes;
void <init>(java.lang.Class, java.lang.String, java.lang.Class[])
{
io.netty.channel.ChannelHandlerMask$2 v0;
java.lang.Class[] v3;
java.lang.Class v1;
java.lang.String v2;
v0 := @this: io.netty.channel.ChannelHandlerMask$2;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Class[];
v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.Class val$handlerType> = v1;
v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.String val$methodName> = v2;
v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.Class[] val$paramTypes> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Boolean run() throws java.lang.Exception
{
java.lang.Object[] v9;
java.lang.NoSuchMethodException v5;
java.lang.Class[] v3;
io.netty.util.internal.logging.InternalLogger v6, v8;
io.netty.channel.ChannelHandlerMask$2 v0;
java.lang.Boolean v12, v14;
java.lang.Class v1, v10;
java.lang.String v11, v2;
java.lang.reflect.Method v4;
boolean v13, v7;
v0 := @this: io.netty.channel.ChannelHandlerMask$2;
label1:
v1 = v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.Class val$handlerType>;
v2 = v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.String val$methodName>;
v3 = v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.Class[] val$paramTypes>;
v4 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(v2, v3);
label2:
goto label5;
label3:
v5 := @caughtexception;
v6 = <io.netty.channel.ChannelHandlerMask: io.netty.util.internal.logging.InternalLogger logger>;
v7 = interfaceinvoke v6.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v7 == 0 goto label4;
v8 = <io.netty.channel.ChannelHandlerMask: io.netty.util.internal.logging.InternalLogger logger>;
v9 = newarray (java.lang.Object)[3];
v10 = v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.Class val$handlerType>;
v9[0] = v10;
v11 = v0.<io.netty.channel.ChannelHandlerMask$2: java.lang.String val$methodName>;
v9[1] = v11;
v9[2] = v5;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object[])>("Class {} missing method {}, assume we can not skip execution", v9);
label4:
v12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return v12;
label5:
v13 = virtualinvoke v4.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Lio/netty/channel/ChannelHandlerMask$Skip;");
v14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v13);
return v14;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
}
}