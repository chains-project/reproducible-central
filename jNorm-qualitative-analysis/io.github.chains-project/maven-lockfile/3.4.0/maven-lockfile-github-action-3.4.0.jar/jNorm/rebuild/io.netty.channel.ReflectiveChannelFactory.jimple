public class io.netty.channel.ReflectiveChannelFactory extends java.lang.Object implements io.netty.channel.ChannelFactory
{
private final java.lang.reflect.Constructor constructor;
public void <init>(java.lang.Class)
{
java.lang.NoSuchMethodException v4;
java.lang.Class[] v2;
java.lang.IllegalArgumentException v5;
java.lang.reflect.Constructor v3;
io.netty.channel.ReflectiveChannelFactory v0;
java.lang.Class v1;
java.lang.String v6, v7;
v0 := @this: io.netty.channel.ReflectiveChannelFactory;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "clazz");
label1:
v2 = newarray (java.lang.Class)[0];
v3 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v2);
v0.<io.netty.channel.ReflectiveChannelFactory: java.lang.reflect.Constructor constructor> = v3;
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
v6 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(v1);
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class \u0001 does not have a public non-arg constructor");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v4);
throw v5;
label4:
return;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
}
public io.netty.channel.Channel newChannel()
{
java.lang.Throwable v4;
java.lang.Object[] v2;
java.lang.reflect.Constructor v1, v6;
io.netty.channel.ChannelException v5;
io.netty.channel.ReflectiveChannelFactory v0;
java.lang.Class v7;
java.lang.Object v3;
java.lang.String v8;
v0 := @this: io.netty.channel.ReflectiveChannelFactory;
label1:
v1 = v0.<io.netty.channel.ReflectiveChannelFactory: java.lang.reflect.Constructor constructor>;
v2 = newarray (java.lang.Object)[0];
v3 = virtualinvoke v1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = new io.netty.channel.ChannelException;
v6 = v0.<io.netty.channel.ReflectiveChannelFactory: java.lang.reflect.Constructor constructor>;
v7 = virtualinvoke v6.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to create Channel from class \u0001");
specialinvoke v5.<io.netty.channel.ChannelException: void <init>(java.lang.String,java.lang.Throwable)>(v8, v4);
throw v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.lang.String toString()
{
io.netty.channel.ReflectiveChannelFactory v0;
java.lang.Class v3;
java.lang.String v1, v4, v5;
java.lang.reflect.Constructor v2;
v0 := @this: io.netty.channel.ReflectiveChannelFactory;
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(class "Lio/netty/channel/ReflectiveChannelFactory;");
v2 = v0.<io.netty.channel.ReflectiveChannelFactory: java.lang.reflect.Constructor constructor>;
v3 = virtualinvoke v2.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();
v4 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(v3);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001.class)");
return v5;
}
}