final class io.netty.channel.group.VoidChannelGroupFuture extends java.lang.Object implements io.netty.channel.group.ChannelGroupFuture
{
private static final java.util.Iterator EMPTY;
private final io.netty.channel.group.ChannelGroup group;
void <init>(io.netty.channel.group.ChannelGroup)
{
io.netty.channel.group.ChannelGroup v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: io.netty.channel.group.ChannelGroup;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.channel.group.VoidChannelGroupFuture: io.netty.channel.group.ChannelGroup group> = v1;
return;
}
public io.netty.channel.group.ChannelGroup group()
{
io.netty.channel.group.ChannelGroup v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = v0.<io.netty.channel.group.VoidChannelGroupFuture: io.netty.channel.group.ChannelGroup group>;
return v1;
}
public io.netty.channel.ChannelFuture find(io.netty.channel.Channel)
{
io.netty.channel.Channel v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: io.netty.channel.Channel;
return null;
}
public boolean isSuccess()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return 0;
}
public io.netty.channel.group.ChannelGroupException cause()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return null;
}
public boolean isPartialSuccess()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return 0;
}
public boolean isPartialFailure()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return 0;
}
public io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener)
{
io.netty.util.concurrent.GenericFutureListener v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v2;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener;
v2 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v2;
}
public transient io.netty.channel.group.ChannelGroupFuture addListeners(io.netty.util.concurrent.GenericFutureListener[])
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v2;
io.netty.util.concurrent.GenericFutureListener[] v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener[];
v2 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v2;
}
public io.netty.channel.group.ChannelGroupFuture removeListener(io.netty.util.concurrent.GenericFutureListener)
{
io.netty.util.concurrent.GenericFutureListener v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v2;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener;
v2 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v2;
}
public transient io.netty.channel.group.ChannelGroupFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[])
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v2;
io.netty.util.concurrent.GenericFutureListener[] v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener[];
v2 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v2;
}
public io.netty.channel.group.ChannelGroupFuture await()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v1;
}
public io.netty.channel.group.ChannelGroupFuture awaitUninterruptibly()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v1;
}
public io.netty.channel.group.ChannelGroupFuture syncUninterruptibly()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v1;
}
public io.netty.channel.group.ChannelGroupFuture sync()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v1;
}
public java.util.Iterator iterator()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.util.Iterator v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = <io.netty.channel.group.VoidChannelGroupFuture: java.util.Iterator EMPTY>;
return v1;
}
public boolean isCancellable()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return 0;
}
public boolean await(long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v2;
long v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v3;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v3;
}
public boolean await(long)
{
long v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v2;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: long;
v2 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v2;
}
public boolean awaitUninterruptibly(long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v2;
long v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v3;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v3;
}
public boolean awaitUninterruptibly(long)
{
long v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v2;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: long;
v2 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v2;
}
public java.lang.Void getNow()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return null;
}
public boolean cancel(boolean)
{
io.netty.channel.group.VoidChannelGroupFuture v0;
boolean v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: boolean;
return 0;
}
public boolean isCancelled()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return 0;
}
public boolean isDone()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
return 0;
}
public java.lang.Void get()
{
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v1;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v1;
}
public java.lang.Void get(long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v2;
long v1;
io.netty.channel.group.VoidChannelGroupFuture v0;
java.lang.RuntimeException v3;
v0 := @this: io.netty.channel.group.VoidChannelGroupFuture;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = staticinvoke <io.netty.channel.group.VoidChannelGroupFuture: java.lang.RuntimeException reject()>();
throw v3;
}
private static java.lang.RuntimeException reject()
{
java.lang.IllegalStateException v0;
v0 = new java.lang.IllegalStateException;
specialinvoke v0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("void future");
return v0;
}
static void <clinit>()
{
java.util.List v0;
java.util.Iterator v1;
v0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v1 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
<io.netty.channel.group.VoidChannelGroupFuture: java.util.Iterator EMPTY> = v1;
return;
}
}