public abstract class io.netty.channel.nio.AbstractNioByteChannel extends io.netty.channel.nio.AbstractNioChannel
{
private static final io.netty.channel.ChannelMetadata METADATA;
private static final java.lang.String EXPECTED_TYPES;
private final java.lang.Runnable flushTask;
private boolean inputClosedSeenErrorOnRead;
protected void <init>(io.netty.channel.Channel, java.nio.channels.SelectableChannel)
{
io.netty.channel.Channel v1;
java.nio.channels.SelectableChannel v2;
io.netty.channel.nio.AbstractNioByteChannel v0;
io.netty.channel.nio.AbstractNioByteChannel$1 v3;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: io.netty.channel.Channel;
v2 := @parameter1: java.nio.channels.SelectableChannel;
specialinvoke v0.<io.netty.channel.nio.AbstractNioChannel: void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel,int)>(v1, v2, 1);
v3 = new io.netty.channel.nio.AbstractNioByteChannel$1;
specialinvoke v3.<io.netty.channel.nio.AbstractNioByteChannel$1: void <init>(io.netty.channel.nio.AbstractNioByteChannel)>(v0);
v0.<io.netty.channel.nio.AbstractNioByteChannel: java.lang.Runnable flushTask> = v3;
return;
}
protected abstract io.netty.channel.ChannelFuture shutdownInput();
protected boolean isInputShutdown0()
{
io.netty.channel.nio.AbstractNioByteChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
return 0;
}
protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe()
{
io.netty.channel.nio.AbstractNioByteChannel v0;
io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe v1;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 = new io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe;
specialinvoke v1.<io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe: void <init>(io.netty.channel.nio.AbstractNioByteChannel)>(v0);
return v1;
}
public io.netty.channel.ChannelMetadata metadata()
{
io.netty.channel.ChannelMetadata v1;
io.netty.channel.nio.AbstractNioByteChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 = <io.netty.channel.nio.AbstractNioByteChannel: io.netty.channel.ChannelMetadata METADATA>;
return v1;
}
final boolean shouldBreakReadReady(io.netty.channel.ChannelConfig)
{
io.netty.channel.ChannelConfig v1;
io.netty.channel.nio.AbstractNioByteChannel v0;
boolean v2, v3, v4, v5;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: io.netty.channel.ChannelConfig;
v2 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: boolean isInputShutdown0()>();
if v2 == 0 goto label2;
v3 = v0.<io.netty.channel.nio.AbstractNioByteChannel: boolean inputClosedSeenErrorOnRead>;
if v3 != 0 goto label1;
v4 = staticinvoke <io.netty.channel.nio.AbstractNioByteChannel: boolean isAllowHalfClosure(io.netty.channel.ChannelConfig)>(v1);
if v4 != 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
private static boolean isAllowHalfClosure(io.netty.channel.ChannelConfig)
{
io.netty.channel.ChannelConfig v0;
boolean v1, v2, v3;
v0 := @parameter0: io.netty.channel.ChannelConfig;
v1 = v0 instanceof io.netty.channel.socket.SocketChannelConfig;
if v1 == 0 goto label1;
v2 = interfaceinvoke v0.<io.netty.channel.socket.SocketChannelConfig: boolean isAllowHalfClosure()>();
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
protected final int doWrite0(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception
{
io.netty.channel.ChannelOutboundBuffer v1;
int v4;
java.lang.Object v2, v3;
io.netty.channel.nio.AbstractNioByteChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: io.netty.channel.ChannelOutboundBuffer;
v2 = virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: java.lang.Object current()>();
if v2 != null goto label1;
return 0;
label1:
v3 = virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: java.lang.Object current()>();
v4 = specialinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: int doWriteInternal(io.netty.channel.ChannelOutboundBuffer,java.lang.Object)>(v1, v3);
return v4;
}
private int doWriteInternal(io.netty.channel.ChannelOutboundBuffer, java.lang.Object) throws java.lang.Exception
{
java.lang.Error v16;
long v11, v13, v14, v8, v9;
byte v10, v12, v15;
int v5;
boolean v3, v4, v6, v7;
io.netty.channel.ChannelOutboundBuffer v1;
java.lang.Object v2;
io.netty.channel.nio.AbstractNioByteChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: io.netty.channel.ChannelOutboundBuffer;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.buffer.ByteBuf;
if v3 == 0 goto label3;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 != 0 goto label1;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean remove()>();
return 0;
label1:
v5 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: int doWriteBytes(io.netty.buffer.ByteBuf)>(v2);
if v5 <= 0 goto label7;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: void progress(long)>(v5);
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v6 != 0 goto label2;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean remove()>();
label2:
return 1;
label3:
v7 = v2 instanceof io.netty.channel.FileRegion;
if v7 == 0 goto label6;
v8 = interfaceinvoke v2.<io.netty.channel.FileRegion: long transferred()>();
v9 = interfaceinvoke v2.<io.netty.channel.FileRegion: long count()>();
v10 = v8 cmp v9;
if v10 < 0 goto label4;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean remove()>();
return 0;
label4:
v11 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: long doWriteFileRegion(io.netty.channel.FileRegion)>(v2);
v12 = v11 cmp 0L;
if v12 <= 0 goto label7;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: void progress(long)>(v11);
v13 = interfaceinvoke v2.<io.netty.channel.FileRegion: long transferred()>();
v14 = interfaceinvoke v2.<io.netty.channel.FileRegion: long count()>();
v15 = v13 cmp v14;
if v15 < 0 goto label5;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean remove()>();
label5:
return 1;
label6:
v16 = new java.lang.Error;
specialinvoke v16.<java.lang.Error: void <init>()>();
throw v16;
label7:
return 2147483647;
}
protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception
{
io.netty.channel.ChannelOutboundBuffer v1;
io.netty.channel.ChannelConfig v2;
int v3, v5;
java.lang.Object v4;
io.netty.channel.nio.AbstractNioByteChannel v0;
boolean v6;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: io.netty.channel.ChannelOutboundBuffer;
v2 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: io.netty.channel.ChannelConfig config()>();
v3 = interfaceinvoke v2.<io.netty.channel.ChannelConfig: int getWriteSpinCount()>();
label1:
v4 = virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: java.lang.Object current()>();
if v4 != null goto label2;
virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: void clearOpWrite()>();
return;
label2:
v5 = specialinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: int doWriteInternal(io.netty.channel.ChannelOutboundBuffer,java.lang.Object)>(v1, v4);
v3 = v3 - v5;
if v3 > 0 goto label1;
if v3 >= 0 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: void incompleteWrite(boolean)>(v6);
return;
}
protected final java.lang.Object filterOutboundMessage(java.lang.Object)
{
java.lang.UnsupportedOperationException v6;
io.netty.buffer.ByteBuf v4;
java.lang.Object v1;
java.lang.String v7, v8, v9;
io.netty.channel.nio.AbstractNioByteChannel v0;
boolean v2, v3, v5;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.buffer.ByteBuf;
if v2 == 0 goto label2;
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean isDirect()>();
if v3 == 0 goto label1;
return v1;
label1:
v4 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: io.netty.buffer.ByteBuf newDirectBuffer(io.netty.buffer.ByteBuf)>(v1);
return v4;
label2:
v5 = v1 instanceof io.netty.channel.FileRegion;
if v5 == 0 goto label3;
return v1;
label3:
v6 = new java.lang.UnsupportedOperationException;
v7 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v1);
v8 = <io.netty.channel.nio.AbstractNioByteChannel: java.lang.String EXPECTED_TYPES>;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported message type: \u0001\u0001");
specialinvoke v6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v9);
throw v6;
}
protected final void incompleteWrite(boolean)
{
io.netty.channel.nio.NioEventLoop v2;
java.lang.Runnable v3;
io.netty.channel.nio.AbstractNioByteChannel v0;
boolean v1;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: void setOpWrite()>();
goto label2;
label1:
virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: void clearOpWrite()>();
v2 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: io.netty.channel.nio.NioEventLoop eventLoop()>();
v3 = v0.<io.netty.channel.nio.AbstractNioByteChannel: java.lang.Runnable flushTask>;
virtualinvoke v2.<io.netty.channel.nio.NioEventLoop: void execute(java.lang.Runnable)>(v3);
label2:
return;
}
protected abstract long doWriteFileRegion(io.netty.channel.FileRegion) throws java.lang.Exception;
protected abstract int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
protected abstract int doWriteBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
protected final void setOpWrite()
{
java.nio.channels.SelectionKey v1;
int v3, v4, v5;
io.netty.channel.nio.AbstractNioByteChannel v0;
boolean v2;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: java.nio.channels.SelectionKey selectionKey()>();
v2 = virtualinvoke v1.<java.nio.channels.SelectionKey: boolean isValid()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<java.nio.channels.SelectionKey: int interestOps()>();
v4 = v3 & 4;
if v4 != 0 goto label2;
v5 = v3 | 4;
virtualinvoke v1.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(v5);
label2:
return;
}
protected final void clearOpWrite()
{
java.nio.channels.SelectionKey v1;
int v3, v4, v5, v6;
io.netty.channel.nio.AbstractNioByteChannel v0;
boolean v2;
v0 := @this: io.netty.channel.nio.AbstractNioByteChannel;
v1 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioByteChannel: java.nio.channels.SelectionKey selectionKey()>();
v2 = virtualinvoke v1.<java.nio.channels.SelectionKey: boolean isValid()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<java.nio.channels.SelectionKey: int interestOps()>();
v4 = v3 & 4;
if v4 == 0 goto label2;
v5 = (int) -5;
v6 = v3 & v5;
virtualinvoke v1.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(v6);
label2:
return;
}
static void <clinit>()
{
io.netty.channel.ChannelMetadata v0;
java.lang.String v1, v2, v3;
v0 = new io.netty.channel.ChannelMetadata;
specialinvoke v0.<io.netty.channel.ChannelMetadata: void <init>(boolean,int)>(0, 16);
<io.netty.channel.nio.AbstractNioByteChannel: io.netty.channel.ChannelMetadata METADATA> = v0;
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(class "Lio/netty/buffer/ByteBuf;");
v2 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(class "Lio/netty/channel/FileRegion;");
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" (expected: \u0001, \u0001)");
<io.netty.channel.nio.AbstractNioByteChannel: java.lang.String EXPECTED_TYPES> = v3;
return;
}
}