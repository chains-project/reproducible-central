public abstract class io.netty.channel.oio.AbstractOioMessageChannel extends io.netty.channel.oio.AbstractOioChannel
{
private final java.util.List readBuf;
protected void <init>(io.netty.channel.Channel)
{
io.netty.channel.Channel v1;
io.netty.channel.oio.AbstractOioMessageChannel v0;
java.util.ArrayList v2;
v0 := @this: io.netty.channel.oio.AbstractOioMessageChannel;
v1 := @parameter0: io.netty.channel.Channel;
specialinvoke v0.<io.netty.channel.oio.AbstractOioChannel: void <init>(io.netty.channel.Channel)>(v1);
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<io.netty.channel.oio.AbstractOioMessageChannel: java.util.List readBuf> = v2;
return;
}
protected void doRead()
{
java.lang.Throwable v11, v7;
io.netty.channel.ChannelPromise v23;
int v14, v15, v9;
boolean v1, v10, v12, v19, v20, v24, v25, v26, v6;
io.netty.channel.oio.AbstractOioMessageChannel v0;
io.netty.channel.ChannelPipeline v3;
io.netty.channel.Channel$Unsafe v21, v22, v4;
java.util.List v13, v16, v18, v8;
io.netty.channel.RecvByteBufAllocator$Handle v5;
io.netty.channel.ChannelConfig v2;
java.lang.Object v17;
v0 := @this: io.netty.channel.oio.AbstractOioMessageChannel;
v1 = v0.<io.netty.channel.oio.AbstractOioMessageChannel: boolean readPending>;
if v1 != 0 goto label01;
return;
label01:
v0.<io.netty.channel.oio.AbstractOioMessageChannel: boolean readPending> = 0;
v2 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: io.netty.channel.ChannelConfig config()>();
v3 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: io.netty.channel.ChannelPipeline pipeline()>();
v4 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: io.netty.channel.Channel$Unsafe unsafe()>();
v5 = interfaceinvoke v4.<io.netty.channel.Channel$Unsafe: io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle()>();
interfaceinvoke v5.<io.netty.channel.RecvByteBufAllocator$Handle: void reset(io.netty.channel.ChannelConfig)>(v2);
v6 = 0;
v7 = null;
label02:
v8 = v0.<io.netty.channel.oio.AbstractOioMessageChannel: java.util.List readBuf>;
v9 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: int doReadMessages(java.util.List)>(v8);
if v9 == 0 goto label06;
if v9 >= 0 goto label03;
v6 = 1;
goto label06;
label03:
interfaceinvoke v5.<io.netty.channel.RecvByteBufAllocator$Handle: void incMessagesRead(int)>(v9);
v10 = interfaceinvoke v5.<io.netty.channel.RecvByteBufAllocator$Handle: boolean continueReading()>();
if v10 != 0 goto label02;
label04:
goto label06;
label05:
v11 := @caughtexception;
v7 = v11;
label06:
v12 = 0;
v13 = v0.<io.netty.channel.oio.AbstractOioMessageChannel: java.util.List readBuf>;
v14 = interfaceinvoke v13.<java.util.List: int size()>();
if v14 <= 0 goto label09;
v12 = 1;
v15 = 0;
label07:
if v15 >= v14 goto label08;
v0.<io.netty.channel.oio.AbstractOioMessageChannel: boolean readPending> = 0;
v16 = v0.<io.netty.channel.oio.AbstractOioMessageChannel: java.util.List readBuf>;
v17 = interfaceinvoke v16.<java.util.List: java.lang.Object get(int)>(v15);
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object)>(v17);
v15 = v15 + 1;
goto label07;
label08:
v18 = v0.<io.netty.channel.oio.AbstractOioMessageChannel: java.util.List readBuf>;
interfaceinvoke v18.<java.util.List: void clear()>();
interfaceinvoke v5.<io.netty.channel.RecvByteBufAllocator$Handle: void readComplete()>();
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireChannelReadComplete()>();
label09:
if v7 == null goto label11;
v19 = v7 instanceof java.io.IOException;
if v19 == 0 goto label10;
v6 = 1;
label10:
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable)>(v7);
label11:
if v6 == 0 goto label12;
v20 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: boolean isOpen()>();
if v20 == 0 goto label14;
v21 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: io.netty.channel.Channel$Unsafe unsafe()>();
v22 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: io.netty.channel.Channel$Unsafe unsafe()>();
v23 = interfaceinvoke v22.<io.netty.channel.Channel$Unsafe: io.netty.channel.ChannelPromise voidPromise()>();
interfaceinvoke v21.<io.netty.channel.Channel$Unsafe: void close(io.netty.channel.ChannelPromise)>(v23);
goto label14;
label12:
v24 = v0.<io.netty.channel.oio.AbstractOioMessageChannel: boolean readPending>;
if v24 != 0 goto label13;
v25 = interfaceinvoke v2.<io.netty.channel.ChannelConfig: boolean isAutoRead()>();
if v25 != 0 goto label13;
if v12 != 0 goto label14;
v26 = virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: boolean isActive()>();
if v26 == 0 goto label14;
label13:
virtualinvoke v0.<io.netty.channel.oio.AbstractOioMessageChannel: io.netty.channel.Channel read()>();
label14:
return;
catch java.lang.Throwable from label02 to label04 with label05;
}
protected abstract int doReadMessages(java.util.List) throws java.lang.Exception;
}