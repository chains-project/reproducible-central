class io.netty.channel.pool.FixedChannelPool$1 extends io.netty.channel.pool.FixedChannelPool$TimeoutTask
{
final io.netty.channel.pool.FixedChannelPool this$0;
void <init>(io.netty.channel.pool.FixedChannelPool)
{
io.netty.channel.pool.FixedChannelPool v1;
io.netty.channel.pool.FixedChannelPool$1 v0;
v0 := @this: io.netty.channel.pool.FixedChannelPool$1;
v1 := @parameter0: io.netty.channel.pool.FixedChannelPool;
v0.<io.netty.channel.pool.FixedChannelPool$1: io.netty.channel.pool.FixedChannelPool this$0> = v1;
specialinvoke v0.<io.netty.channel.pool.FixedChannelPool$TimeoutTask: void <init>(io.netty.channel.pool.FixedChannelPool)>(v1);
return;
}
public void onTimeout(io.netty.channel.pool.FixedChannelPool$AcquireTask)
{
io.netty.channel.pool.FixedChannelPool$AcquireTask v1;
io.netty.util.concurrent.Promise v2;
io.netty.channel.pool.FixedChannelPool$1 v0;
io.netty.channel.pool.FixedChannelPool$AcquireTimeoutException v3;
v0 := @this: io.netty.channel.pool.FixedChannelPool$1;
v1 := @parameter0: io.netty.channel.pool.FixedChannelPool$AcquireTask;
v2 = v1.<io.netty.channel.pool.FixedChannelPool$AcquireTask: io.netty.util.concurrent.Promise promise>;
v3 = new io.netty.channel.pool.FixedChannelPool$AcquireTimeoutException;
specialinvoke v3.<io.netty.channel.pool.FixedChannelPool$AcquireTimeoutException: void <init>()>();
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v3);
return;
}
}