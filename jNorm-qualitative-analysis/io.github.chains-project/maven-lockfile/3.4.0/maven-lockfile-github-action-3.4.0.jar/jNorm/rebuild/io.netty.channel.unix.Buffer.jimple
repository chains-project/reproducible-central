public final class io.netty.channel.unix.Buffer extends java.lang.Object
{
static final boolean $assertionsDisabled;
private void <init>()
{
io.netty.channel.unix.Buffer v0;
v0 := @this: io.netty.channel.unix.Buffer;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void free(java.nio.ByteBuffer)
{
java.nio.ByteBuffer v0;
v0 := @parameter0: java.nio.ByteBuffer;
staticinvoke <io.netty.util.internal.PlatformDependent: void freeDirectBuffer(java.nio.ByteBuffer)>(v0);
return;
}
public static java.nio.ByteBuffer allocateDirectWithNativeOrder(int)
{
java.nio.ByteOrder v3;
int v0;
java.nio.ByteBuffer v1, v4;
boolean v2;
v0 := @parameter0: int;
v1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(v0);
v2 = <io.netty.util.internal.PlatformDependent: boolean BIG_ENDIAN_NATIVE_ORDER>;
if v2 == 0 goto label1;
v3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;
goto label2;
label1:
v3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;
label2:
v4 = virtualinvoke v1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(v3);
return v4;
}
public static long memoryAddress(java.nio.ByteBuffer)
{
long v5, v6;
java.lang.AssertionError v3;
java.nio.ByteBuffer v0;
boolean v1, v2, v4;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = <io.netty.channel.unix.Buffer: boolean $assertionsDisabled>;
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<java.nio.ByteBuffer: boolean isDirect()>();
if v2 != 0 goto label1;
v3 = new java.lang.AssertionError;
specialinvoke v3.<java.lang.AssertionError: void <init>()>();
throw v3;
label1:
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v4 == 0 goto label2;
v5 = staticinvoke <io.netty.util.internal.PlatformDependent: long directBufferAddress(java.nio.ByteBuffer)>(v0);
return v5;
label2:
v6 = staticinvoke <io.netty.channel.unix.Buffer: long memoryAddress0(java.nio.ByteBuffer)>(v0);
return v6;
}
public static int addressSize()
{
int v1, v2;
boolean v0;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v0 == 0 goto label1;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int addressSize()>();
return v1;
label1:
v2 = staticinvoke <io.netty.channel.unix.Buffer: int addressSize0()>();
return v2;
}
private static native int addressSize0();
private static native long memoryAddress0(java.nio.ByteBuffer);
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/channel/unix/Buffer;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.channel.unix.Buffer: boolean $assertionsDisabled> = v2;
return;
}
}