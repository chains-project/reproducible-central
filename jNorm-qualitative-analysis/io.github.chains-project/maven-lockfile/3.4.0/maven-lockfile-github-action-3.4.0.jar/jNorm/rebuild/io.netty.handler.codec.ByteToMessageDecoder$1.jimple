class io.netty.handler.codec.ByteToMessageDecoder$1 extends java.lang.Object implements io.netty.handler.codec.ByteToMessageDecoder$Cumulator
{
void <init>()
{
io.netty.handler.codec.ByteToMessageDecoder$1 v0;
v0 := @this: io.netty.handler.codec.ByteToMessageDecoder$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf)
{
java.lang.Throwable v14;
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.codec.ByteToMessageDecoder$1 v0;
io.netty.buffer.ByteBuf v11, v2, v3;
int v12, v13, v6, v7, v8, v9;
boolean v10, v4, v5;
v0 := @this: io.netty.handler.codec.ByteToMessageDecoder$1;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
if v2 != v3 goto label1;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
return v2;
label1:
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 != 0 goto label2;
v5 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isContiguous()>();
if v5 == 0 goto label2;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
return v3;
label2:
v6 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int maxWritableBytes()>();
if v6 > v7 goto label4;
v8 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int maxFastWritableBytes()>();
if v6 <= v8 goto label3;
v9 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int refCnt()>();
if v9 > 1 goto label4;
label3:
v10 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadOnly()>();
if v10 == 0 goto label6;
label4:
v11 = staticinvoke <io.netty.handler.codec.ByteToMessageDecoder: io.netty.buffer.ByteBuf expandCumulation(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v1, v2, v3);
label5:
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
return v11;
label6:
v12 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int)>(v3, v12, v6);
v13 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int writerIndex()>();
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v13);
label7:
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
return v2;
label8:
v14 := @caughtexception;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
throw v14;
catch java.lang.Throwable from label2 to label5 with label8;
catch java.lang.Throwable from label6 to label7 with label8;
}
}