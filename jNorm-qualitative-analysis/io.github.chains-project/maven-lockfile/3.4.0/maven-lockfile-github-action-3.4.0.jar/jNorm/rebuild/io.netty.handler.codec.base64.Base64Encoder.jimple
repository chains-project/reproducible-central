public class io.netty.handler.codec.base64.Base64Encoder extends io.netty.handler.codec.MessageToMessageEncoder
{
private final boolean breakLines;
private final io.netty.handler.codec.base64.Base64Dialect dialect;
public void <init>()
{
io.netty.handler.codec.base64.Base64Encoder v0;
v0 := @this: io.netty.handler.codec.base64.Base64Encoder;
specialinvoke v0.<io.netty.handler.codec.base64.Base64Encoder: void <init>(boolean)>(1);
return;
}
public void <init>(boolean)
{
io.netty.handler.codec.base64.Base64Encoder v0;
boolean v1;
io.netty.handler.codec.base64.Base64Dialect v2;
v0 := @this: io.netty.handler.codec.base64.Base64Encoder;
v1 := @parameter0: boolean;
v2 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
specialinvoke v0.<io.netty.handler.codec.base64.Base64Encoder: void <init>(boolean,io.netty.handler.codec.base64.Base64Dialect)>(v1, v2);
return;
}
public void <init>(boolean, io.netty.handler.codec.base64.Base64Dialect)
{
java.lang.Object v3;
io.netty.handler.codec.base64.Base64Encoder v0;
boolean v1;
io.netty.handler.codec.base64.Base64Dialect v2;
v0 := @this: io.netty.handler.codec.base64.Base64Encoder;
v1 := @parameter0: boolean;
v2 := @parameter1: io.netty.handler.codec.base64.Base64Dialect;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageEncoder: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "dialect");
v0.<io.netty.handler.codec.base64.Base64Encoder: io.netty.handler.codec.base64.Base64Dialect dialect> = v3;
v0.<io.netty.handler.codec.base64.Base64Encoder: boolean breakLines> = v1;
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v2, v8;
int v4, v5;
io.netty.handler.codec.base64.Base64Encoder v0;
boolean v6;
io.netty.handler.codec.base64.Base64Dialect v7;
v0 := @this: io.netty.handler.codec.base64.Base64Encoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v6 = v0.<io.netty.handler.codec.base64.Base64Encoder: boolean breakLines>;
v7 = v0.<io.netty.handler.codec.base64.Base64Encoder: io.netty.handler.codec.base64.Base64Dialect dialect>;
v8 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect)>(v2, v4, v5, v6, v7);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v8);
return;
}
}