final enum class io.netty.handler.codec.compression.Bzip2Decoder$State extends java.lang.Enum
{
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State INIT;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK_PARAMS;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_MAP;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_BITMAPS;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS_NUMBER;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_LENGTH;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State DECODE_HUFFMAN_DATA;
public static final enum io.netty.handler.codec.compression.Bzip2Decoder$State EOF;
private static final io.netty.handler.codec.compression.Bzip2Decoder$State[] $VALUES;
public static io.netty.handler.codec.compression.Bzip2Decoder$State[] values()
{
java.lang.Object v1;
io.netty.handler.codec.compression.Bzip2Decoder$State[] v0;
v0 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.compression.Bzip2Decoder$State valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/compression/Bzip2Decoder$State;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
io.netty.handler.codec.compression.Bzip2Decoder$State v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2Decoder$State;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static io.netty.handler.codec.compression.Bzip2Decoder$State[] $values()
{
io.netty.handler.codec.compression.Bzip2Decoder$State v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2Decoder$State[] v0;
v0 = newarray (io.netty.handler.codec.compression.Bzip2Decoder$State)[10];
v1 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State INIT>;
v0[0] = v1;
v2 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK>;
v0[1] = v2;
v3 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK_PARAMS>;
v0[2] = v3;
v4 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_MAP>;
v0[3] = v4;
v5 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_BITMAPS>;
v0[4] = v5;
v6 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS_NUMBER>;
v0[5] = v6;
v7 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS>;
v0[6] = v7;
v8 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_LENGTH>;
v0[7] = v8;
v9 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State DECODE_HUFFMAN_DATA>;
v0[8] = v9;
v10 = <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State EOF>;
v0[9] = v10;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.compression.Bzip2Decoder$State v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2Decoder$State[] v10;
v0 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("INIT", 0);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State INIT> = v0;
v1 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v1.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("INIT_BLOCK", 1);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK> = v1;
v2 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v2.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("INIT_BLOCK_PARAMS", 2);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK_PARAMS> = v2;
v3 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v3.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("RECEIVE_HUFFMAN_USED_MAP", 3);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_MAP> = v3;
v4 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v4.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("RECEIVE_HUFFMAN_USED_BITMAPS", 4);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_BITMAPS> = v4;
v5 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v5.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("RECEIVE_SELECTORS_NUMBER", 5);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS_NUMBER> = v5;
v6 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v6.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("RECEIVE_SELECTORS", 6);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS> = v6;
v7 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v7.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("RECEIVE_HUFFMAN_LENGTH", 7);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_LENGTH> = v7;
v8 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v8.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("DECODE_HUFFMAN_DATA", 8);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State DECODE_HUFFMAN_DATA> = v8;
v9 = new io.netty.handler.codec.compression.Bzip2Decoder$State;
specialinvoke v9.<io.netty.handler.codec.compression.Bzip2Decoder$State: void <init>(java.lang.String,int)>("EOF", 9);
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State EOF> = v9;
v10 = staticinvoke <io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State[] $values()>();
<io.netty.handler.codec.compression.Bzip2Decoder$State: io.netty.handler.codec.compression.Bzip2Decoder$State[] $VALUES> = v10;
return;
}
}