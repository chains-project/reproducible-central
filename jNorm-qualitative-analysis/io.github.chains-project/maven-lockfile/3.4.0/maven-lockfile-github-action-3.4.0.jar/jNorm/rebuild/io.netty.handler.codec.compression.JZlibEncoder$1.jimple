class io.netty.handler.codec.compression.JZlibEncoder$1 extends java.lang.Object implements java.lang.Runnable
{
final io.netty.channel.ChannelPromise val$p;
final io.netty.channel.ChannelPromise val$promise;
final io.netty.handler.codec.compression.JZlibEncoder this$0;
void <init>(io.netty.handler.codec.compression.JZlibEncoder, io.netty.channel.ChannelPromise, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelPromise v2, v3;
io.netty.handler.codec.compression.JZlibEncoder$1 v0;
io.netty.handler.codec.compression.JZlibEncoder v1;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder$1;
v1 := @parameter0: io.netty.handler.codec.compression.JZlibEncoder;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.handler.codec.compression.JZlibEncoder this$0> = v1;
v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.channel.ChannelPromise val$p> = v2;
v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.channel.ChannelPromise val$promise> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.channel.ChannelHandlerContext v3;
io.netty.channel.ChannelPromise v4, v6;
io.netty.handler.codec.compression.JZlibEncoder$1 v0;
io.netty.handler.codec.compression.JZlibEncoder v1, v2;
io.netty.channel.ChannelFuture v5;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder$1;
v1 = v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.handler.codec.compression.JZlibEncoder this$0>;
v2 = v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.handler.codec.compression.JZlibEncoder this$0>;
v3 = specialinvoke v2.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelHandlerContext ctx()>();
v4 = v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.channel.ChannelPromise val$p>;
v5 = specialinvoke v1.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v3, v4);
v6 = v0.<io.netty.handler.codec.compression.JZlibEncoder$1: io.netty.channel.ChannelPromise val$promise>;
staticinvoke <io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Future cascade(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise)>(v5, v6);
return;
}
}