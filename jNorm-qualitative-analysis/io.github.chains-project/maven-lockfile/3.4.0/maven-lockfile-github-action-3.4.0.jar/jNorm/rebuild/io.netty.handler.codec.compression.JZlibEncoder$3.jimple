class io.netty.handler.codec.compression.JZlibEncoder$3 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.util.concurrent.Future val$future;
final io.netty.channel.ChannelPromise val$promise;
final io.netty.channel.ChannelHandlerContext val$ctx;
final io.netty.handler.codec.compression.JZlibEncoder this$0;
void <init>(io.netty.handler.codec.compression.JZlibEncoder, io.netty.util.concurrent.Future, io.netty.channel.ChannelPromise, io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v4;
io.netty.channel.ChannelPromise v3;
io.netty.handler.codec.compression.JZlibEncoder$3 v0;
io.netty.handler.codec.compression.JZlibEncoder v1;
io.netty.util.concurrent.Future v2;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder$3;
v1 := @parameter0: io.netty.handler.codec.compression.JZlibEncoder;
v2 := @parameter1: io.netty.util.concurrent.Future;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 := @parameter3: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.handler.codec.compression.JZlibEncoder this$0> = v1;
v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.util.concurrent.Future val$future> = v2;
v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.channel.ChannelPromise val$promise> = v3;
v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.channel.ChannelHandlerContext val$ctx> = v4;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.channel.ChannelHandlerContext v5;
io.netty.channel.ChannelPromise v3, v6;
io.netty.handler.codec.compression.JZlibEncoder$3 v0;
io.netty.util.concurrent.Future v2;
boolean v4;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder$3;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.util.concurrent.Future val$future>;
interfaceinvoke v2.<io.netty.util.concurrent.Future: boolean cancel(boolean)>(1);
v3 = v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.channel.ChannelPromise val$promise>;
v4 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: boolean isDone()>();
if v4 != 0 goto label1;
v5 = v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.channel.ChannelHandlerContext val$ctx>;
v6 = v0.<io.netty.handler.codec.compression.JZlibEncoder$3: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v5.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v6);
label1:
return;
}
}