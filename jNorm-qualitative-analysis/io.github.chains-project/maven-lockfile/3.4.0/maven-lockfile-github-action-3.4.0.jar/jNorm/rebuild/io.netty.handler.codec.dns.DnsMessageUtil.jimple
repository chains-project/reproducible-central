final class io.netty.handler.codec.dns.DnsMessageUtil extends java.lang.Object
{
static java.lang.StringBuilder appendQuery(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsQuery)
{
io.netty.handler.codec.dns.DnsQuery v1;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsQuery;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendQueryHeader(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsQuery)>(v0, v1);
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendAllRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage)>(v0, v1);
return v0;
}
static java.lang.StringBuilder appendResponse(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsResponse)
{
io.netty.handler.codec.dns.DnsResponse v1;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsResponse;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendResponseHeader(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsResponse)>(v0, v1);
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendAllRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage)>(v0, v1);
return v0;
}
static java.lang.StringBuilder appendRecordClass(java.lang.StringBuilder, int)
{
int v1, v2, v3;
java.lang.StringBuilder v0, v5, v6;
java.lang.String v4;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: int;
v2 = (int) 65535;
v3 = v1 & v2;
lookupswitch(v3)
{
case 1: goto label01;
case 2: goto label02;
case 3: goto label03;
case 4: goto label04;
case 254: goto label05;
case 255: goto label06;
default: goto label07;
};
label01:
v4 = "IN";
goto label08;
label02:
v4 = "CSNET";
goto label08;
label03:
v4 = "CHAOS";
goto label08;
label04:
v4 = "HESIOD";
goto label08;
label05:
v4 = "NONE";
goto label08;
label06:
v4 = "ANY";
goto label08;
label07:
v4 = null;
label08:
if v4 == null goto label09;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
goto label10;
label09:
v5 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN(");
v6 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v3);
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
label10:
return v0;
}
private static void appendQueryHeader(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsQuery)
{
io.netty.handler.codec.dns.DnsOpCode v8;
int v10, v12, v5;
io.netty.handler.codec.dns.DnsQuery v1;
java.lang.StringBuilder v0, v11, v3, v4, v6, v7;
java.lang.String v2;
boolean v9;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsQuery;
v2 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
v4 = staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: java.lang.StringBuilder appendAddresses(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage)>(v0, v1);
v5 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: int id()>();
v6 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v5);
v7 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v8 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsOpCode opCode()>();
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v8);
v9 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: boolean isRecursionDesired()>();
if v9 == 0 goto label1;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RD");
label1:
v10 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: int z()>();
if v10 == 0 goto label2;
v11 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Z: ");
v12 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: int z()>();
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v12);
label2:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
return;
}
private static void appendResponseHeader(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsResponse)
{
io.netty.handler.codec.dns.DnsResponseCode v11;
io.netty.handler.codec.dns.DnsResponse v1;
io.netty.handler.codec.dns.DnsOpCode v8;
int v18, v20, v21, v22, v5;
java.lang.String v2;
boolean v13, v14, v15, v16, v17;
java.lang.StringBuilder v0, v10, v12, v19, v3, v4, v6, v7, v9;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsResponse;
v2 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
v4 = staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: java.lang.StringBuilder appendAddresses(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage)>(v0, v1);
v5 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: int id()>();
v6 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v5);
v7 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v8 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsOpCode opCode()>();
v9 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v8);
v10 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v11 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponseCode code()>();
v12 = virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v11);
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
v13 = 1;
v14 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: boolean isRecursionDesired()>();
if v14 == 0 goto label1;
v13 = 0;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RD");
label1:
v15 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: boolean isAuthoritativeAnswer()>();
if v15 == 0 goto label2;
v13 = 0;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AA");
label2:
v16 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: boolean isTruncated()>();
if v16 == 0 goto label3;
v13 = 0;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TC");
label3:
v17 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: boolean isRecursionAvailable()>();
if v17 == 0 goto label4;
v13 = 0;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RA");
label4:
v18 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: int z()>();
if v18 == 0 goto label6;
if v13 != 0 goto label5;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
label5:
v19 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Z: ");
v20 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: int z()>();
virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v20);
label6:
if v13 == 0 goto label7;
v21 = virtualinvoke v0.<java.lang.StringBuilder: int length()>();
v22 = v21 - 1;
virtualinvoke v0.<java.lang.StringBuilder: void setCharAt(int,char)>(v22, 41);
goto label8;
label7:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
label8:
return;
}
private static java.lang.StringBuilder appendAddresses(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsMessage)
{
java.net.SocketAddress v3, v6;
io.netty.handler.codec.dns.DnsMessage v1;
java.lang.StringBuilder v0, v4, v5, v7, v8;
boolean v2;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsMessage;
v2 = v1 instanceof io.netty.channel.AddressedEnvelope;
if v2 != 0 goto label1;
return v0;
label1:
v3 = interfaceinvoke v1.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress sender()>();
if v3 == null goto label2;
v4 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from: ");
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v3);
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label2:
v6 = interfaceinvoke v1.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress recipient()>();
if v6 == null goto label3;
v7 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to: ");
v8 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v6);
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label3:
return v0;
}
private static void appendAllRecords(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsMessage)
{
io.netty.handler.codec.dns.DnsMessage v1;
io.netty.handler.codec.dns.DnsSection v2, v3, v4, v5;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsMessage;
v2 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage,io.netty.handler.codec.dns.DnsSection)>(v0, v1, v2);
v3 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ANSWER>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage,io.netty.handler.codec.dns.DnsSection)>(v0, v1, v3);
v4 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection AUTHORITY>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage,io.netty.handler.codec.dns.DnsSection)>(v0, v1, v4);
v5 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void appendRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage,io.netty.handler.codec.dns.DnsSection)>(v0, v1, v5);
return;
}
private static void appendRecords(java.lang.StringBuilder, io.netty.handler.codec.dns.DnsMessage, io.netty.handler.codec.dns.DnsSection)
{
io.netty.handler.codec.dns.DnsRecord v8;
io.netty.handler.codec.dns.DnsMessage v1;
io.netty.handler.codec.dns.DnsSection v2;
int v3, v4;
java.lang.StringBuilder v0, v6, v7;
java.lang.String v5;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsMessage;
v2 := @parameter2: io.netty.handler.codec.dns.DnsSection;
v3 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsMessage: int count(io.netty.handler.codec.dns.DnsSection)>(v2);
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
v6 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
v7 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);
v8 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsMessage: io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int)>(v2, v4);
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v8);
v4 = v4 + 1;
goto label1;
label2:
return;
}
static io.netty.handler.codec.dns.DnsQuery decodeDnsQuery(io.netty.handler.codec.dns.DnsRecordDecoder, io.netty.buffer.ByteBuf, io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory) throws java.lang.Exception
{
java.lang.Throwable v11;
io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory v2;
io.netty.handler.codec.dns.DnsRecordDecoder v0;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DnsSection v10, v8, v9;
int v4, v5, v6, v7;
io.netty.handler.codec.dns.DnsQuery v3;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecordDecoder;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 := @parameter2: io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory;
v3 = staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: io.netty.handler.codec.dns.DnsQuery newQuery(io.netty.buffer.ByteBuf,io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory)>(v1, v2);
label1:
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v7 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void decodeQuestions(io.netty.handler.codec.dns.DnsRecordDecoder,io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf,int)>(v0, v3, v1, v4);
v8 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ANSWER>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void decodeRecords(io.netty.handler.codec.dns.DnsRecordDecoder,io.netty.handler.codec.dns.DnsQuery,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int)>(v0, v3, v8, v1, v5);
v9 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection AUTHORITY>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void decodeRecords(io.netty.handler.codec.dns.DnsRecordDecoder,io.netty.handler.codec.dns.DnsQuery,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int)>(v0, v3, v9, v1, v6);
v10 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void decodeRecords(io.netty.handler.codec.dns.DnsRecordDecoder,io.netty.handler.codec.dns.DnsQuery,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int)>(v0, v3, v10, v1, v7);
label2:
return v3;
label3:
v11 := @caughtexception;
interfaceinvoke v3.<io.netty.handler.codec.dns.DnsQuery: boolean release()>();
throw v11;
catch java.lang.Throwable from label1 to label2 with label3;
}
private static io.netty.handler.codec.dns.DnsQuery newQuery(io.netty.buffer.ByteBuf, io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory)
{
io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory v1;
io.netty.handler.codec.dns.DnsOpCode v6;
byte v13;
io.netty.buffer.ByteBuf v0;
int v11, v12, v2, v3, v4, v8, v9;
io.netty.handler.codec.dns.DnsQuery v7;
io.netty.handler.codec.CorruptedFrameException v5;
boolean v10;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v3 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v4 = v3 >> 15;
if v4 != 1 goto label1;
v5 = new io.netty.handler.codec.CorruptedFrameException;
specialinvoke v5.<io.netty.handler.codec.CorruptedFrameException: void <init>(java.lang.String)>("not a query");
throw v5;
label1:
v6 = staticinvoke <io.netty.handler.codec.dns.DnsOpCode: io.netty.handler.codec.dns.DnsOpCode valueOf(int)>(v13);
v7 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsMessageUtil$DnsQueryFactory: io.netty.handler.codec.dns.DnsQuery newQuery(int,io.netty.handler.codec.dns.DnsOpCode)>(v2, v6);
v8 = v3 >> 8;
v9 = v8 & 1;
if v9 != 1 goto label2;
v10 = 1;
goto label3;
label2:
v10 = 0;
label3:
interfaceinvoke v7.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsQuery setRecursionDesired(boolean)>(v10);
v11 = v3 >> 4;
v12 = v11 & 7;
interfaceinvoke v7.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsQuery setZ(int)>(v12);
return v7;
}
private static void decodeQuestions(io.netty.handler.codec.dns.DnsRecordDecoder, io.netty.handler.codec.dns.DnsQuery, io.netty.buffer.ByteBuf, int) throws java.lang.Exception
{
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsSection v5;
io.netty.handler.codec.dns.DnsQuestion v6;
int v3, v4;
io.netty.handler.codec.dns.DnsQuery v1;
io.netty.handler.codec.dns.DnsRecordDecoder v0;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecordDecoder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsQuery;
v2 := @parameter2: io.netty.buffer.ByteBuf;
v3 := @parameter3: int;
v4 = v3;
label1:
if v4 <= 0 goto label2;
v5 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v6 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsRecordDecoder: io.netty.handler.codec.dns.DnsQuestion decodeQuestion(io.netty.buffer.ByteBuf)>(v2);
interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord)>(v5, v6);
v4 = v4 - 1;
goto label1;
label2:
return;
}
private static void decodeRecords(io.netty.handler.codec.dns.DnsRecordDecoder, io.netty.handler.codec.dns.DnsQuery, io.netty.handler.codec.dns.DnsSection, io.netty.buffer.ByteBuf, int) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v6;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.dns.DnsSection v2;
int v4, v5;
io.netty.handler.codec.dns.DnsQuery v1;
io.netty.handler.codec.dns.DnsRecordDecoder v0;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecordDecoder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsQuery;
v2 := @parameter2: io.netty.handler.codec.dns.DnsSection;
v3 := @parameter3: io.netty.buffer.ByteBuf;
v4 := @parameter4: int;
v5 = v4;
label1:
if v5 <= 0 goto label2;
v6 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsRecordDecoder: io.netty.handler.codec.dns.DnsRecord decodeRecord(io.netty.buffer.ByteBuf)>(v3);
if v6 == null goto label2;
interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord)>(v2, v6);
v5 = v5 - 1;
goto label1;
label2:
return;
}
static void encodeDnsResponse(io.netty.handler.codec.dns.DnsRecordEncoder, io.netty.handler.codec.dns.DnsResponse, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
java.lang.Throwable v6;
io.netty.handler.codec.dns.DnsResponse v1;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsRecordEncoder v0;
io.netty.handler.codec.dns.DnsSection v3, v4, v5;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecordEncoder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsResponse;
v2 := @parameter2: io.netty.buffer.ByteBuf;
label1:
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void encodeHeader(io.netty.handler.codec.dns.DnsResponse,io.netty.buffer.ByteBuf)>(v1, v2);
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void encodeQuestions(io.netty.handler.codec.dns.DnsRecordEncoder,io.netty.handler.codec.dns.DnsResponse,io.netty.buffer.ByteBuf)>(v0, v1, v2);
v3 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ANSWER>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void encodeRecords(io.netty.handler.codec.dns.DnsRecordEncoder,io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf)>(v0, v1, v3, v2);
v4 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection AUTHORITY>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void encodeRecords(io.netty.handler.codec.dns.DnsRecordEncoder,io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf)>(v0, v1, v4, v2);
v5 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: void encodeRecords(io.netty.handler.codec.dns.DnsRecordEncoder,io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf)>(v0, v1, v5, v2);
label2:
goto label4;
label3:
v6 := @caughtexception;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
throw v6;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private static void encodeHeader(io.netty.handler.codec.dns.DnsResponse, io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.dns.DnsResponseCode v15;
io.netty.handler.codec.dns.DnsResponse v0;
short v5;
io.netty.handler.codec.dns.DnsOpCode v3;
byte v4;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DnsSection v18, v20, v22, v24;
int v12, v13, v14, v16, v17, v19, v2, v21, v23, v25, v6, v7;
boolean v10, v11, v8, v9;
v0 := @parameter0: io.netty.handler.codec.dns.DnsResponse;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: int id()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v2);
v3 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsOpCode opCode()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.dns.DnsOpCode: byte byteValue()>();
v5 = v4 & 255;
v6 = v5 << 11;
v7 = 32768 | v6;
v8 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: boolean isAuthoritativeAnswer()>();
if v8 == 0 goto label1;
v7 = v7 | 1024;
label1:
v9 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: boolean isTruncated()>();
if v9 == 0 goto label2;
v7 = v7 | 512;
label2:
v10 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: boolean isRecursionDesired()>();
if v10 == 0 goto label3;
v7 = v7 | 256;
label3:
v11 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: boolean isRecursionAvailable()>();
if v11 == 0 goto label4;
v7 = v7 | 128;
label4:
v12 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: int z()>();
v13 = v12 << 4;
v14 = v7 | v13;
v15 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponseCode code()>();
v16 = virtualinvoke v15.<io.netty.handler.codec.dns.DnsResponseCode: int intValue()>();
v17 = v14 | v16;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v17);
v18 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v19 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: int count(io.netty.handler.codec.dns.DnsSection)>(v18);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v19);
v20 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ANSWER>;
v21 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: int count(io.netty.handler.codec.dns.DnsSection)>(v20);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v21);
v22 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection AUTHORITY>;
v23 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: int count(io.netty.handler.codec.dns.DnsSection)>(v22);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v23);
v24 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
v25 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsResponse: int count(io.netty.handler.codec.dns.DnsSection)>(v24);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v25);
return;
}
private static void encodeQuestions(io.netty.handler.codec.dns.DnsRecordEncoder, io.netty.handler.codec.dns.DnsResponse, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v7;
io.netty.handler.codec.dns.DnsResponse v1;
io.netty.handler.codec.dns.DnsRecordEncoder v0;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsSection v3, v6;
int v4, v5;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecordEncoder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsResponse;
v2 := @parameter2: io.netty.buffer.ByteBuf;
v3 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: int count(io.netty.handler.codec.dns.DnsSection)>(v3);
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v7 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int)>(v6, v5);
interfaceinvoke v0.<io.netty.handler.codec.dns.DnsRecordEncoder: void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf)>(v7, v2);
v5 = v5 + 1;
goto label1;
label2:
return;
}
private static void encodeRecords(io.netty.handler.codec.dns.DnsRecordEncoder, io.netty.handler.codec.dns.DnsResponse, io.netty.handler.codec.dns.DnsSection, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v6;
io.netty.handler.codec.dns.DnsResponse v1;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.dns.DnsRecordEncoder v0;
io.netty.handler.codec.dns.DnsSection v2;
int v4, v5;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecordEncoder;
v1 := @parameter1: io.netty.handler.codec.dns.DnsResponse;
v2 := @parameter2: io.netty.handler.codec.dns.DnsSection;
v3 := @parameter3: io.netty.buffer.ByteBuf;
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: int count(io.netty.handler.codec.dns.DnsSection)>(v2);
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int)>(v2, v5);
interfaceinvoke v0.<io.netty.handler.codec.dns.DnsRecordEncoder: void encodeRecord(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf)>(v6, v3);
v5 = v5 + 1;
goto label1;
label2:
return;
}
private void <init>()
{
io.netty.handler.codec.dns.DnsMessageUtil v0;
v0 := @this: io.netty.handler.codec.dns.DnsMessageUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}