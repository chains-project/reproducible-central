public final class io.netty.handler.codec.haproxy.HAProxySSLTLV extends io.netty.handler.codec.haproxy.HAProxyTLV
{
private final int verify;
private final java.util.List tlvs;
private final byte clientBitField;
public void <init>(int, byte, java.util.List)
{
java.util.List v3;
byte v2;
io.netty.buffer.ByteBuf v4;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
int v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 := @parameter0: int;
v2 := @parameter1: byte;
v3 := @parameter2: java.util.List;
v4 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: void <init>(int,byte,java.util.List,io.netty.buffer.ByteBuf)>(v1, v2, v3, v4);
return;
}
void <init>(int, byte, java.util.List, io.netty.buffer.ByteBuf)
{
java.util.List v3, v6;
byte v2;
io.netty.buffer.ByteBuf v4;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v5;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
int v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 := @parameter0: int;
v2 := @parameter1: byte;
v3 := @parameter2: java.util.List;
v4 := @parameter3: io.netty.buffer.ByteBuf;
v5 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL>;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyTLV: void <init>(io.netty.handler.codec.haproxy.HAProxyTLV$Type,byte,io.netty.buffer.ByteBuf)>(v5, 32, v4);
v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: int verify> = v1;
v6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v3);
v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: java.util.List tlvs> = v6;
v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte clientBitField> = v2;
return;
}
public boolean isPP2ClientCertConn()
{
byte v1, v2;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
boolean v3;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte clientBitField>;
v2 = v1 & 2;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isPP2ClientSSL()
{
byte v1, v2;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
boolean v3;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte clientBitField>;
v2 = v1 & 1;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isPP2ClientCertSess()
{
byte v1, v2;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
boolean v3;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte clientBitField>;
v2 = v1 & 4;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public byte client()
{
byte v1;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte clientBitField>;
return v1;
}
public int verify()
{
int v1;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: int verify>;
return v1;
}
public java.util.List encapsulatedTLVs()
{
java.util.List v1;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: java.util.List tlvs>;
return v1;
}
int contentNumBytes()
{
java.util.List v3, v5;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
int v1, v2, v4, v7, v8;
java.lang.Object v6;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = 0;
v2 = 0;
label1:
v3 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: java.util.List tlvs>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 >= v4 goto label2;
v5 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: java.util.List tlvs>;
v6 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v2);
v7 = virtualinvoke v6.<io.netty.handler.codec.haproxy.HAProxyTLV: int totalNumBytes()>();
v1 = v1 + v7;
v2 = v2 + 1;
goto label1;
label2:
v8 = 5 + v1;
return v8;
}
public java.lang.String toString()
{
java.util.List v6;
byte v3, v4;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v2;
io.netty.handler.codec.haproxy.HAProxySSLTLV v0;
int v5, v7;
java.lang.String v1, v8;
v0 := @this: io.netty.handler.codec.haproxy.HAProxySSLTLV;
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v0);
v2 = virtualinvoke v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: io.netty.handler.codec.haproxy.HAProxyTLV$Type type()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte typeByteValue()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: byte client()>();
v5 = virtualinvoke v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: int verify()>();
v6 = v0.<io.netty.handler.codec.haproxy.HAProxySSLTLV: java.util.List tlvs>;
v7 = interfaceinvoke v6.<java.util.List: int size()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,io.netty.handler.codec.haproxy.HAProxyTLV$Type,byte,byte,int,int)>(v1, v2, v3, v4, v5, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(type: \u0001, typeByteValue: \u0001, client: \u0001, verify: \u0001, numEncapsulatedTlvs: \u0001)");
return v8;
}
}