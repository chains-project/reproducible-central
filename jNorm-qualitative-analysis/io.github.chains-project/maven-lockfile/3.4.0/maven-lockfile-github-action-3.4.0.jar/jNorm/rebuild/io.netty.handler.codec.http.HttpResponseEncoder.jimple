public class io.netty.handler.codec.http.HttpResponseEncoder extends io.netty.handler.codec.http.HttpObjectEncoder
{
public void <init>()
{
io.netty.handler.codec.http.HttpResponseEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpResponseEncoder;
specialinvoke v0.<io.netty.handler.codec.http.HttpObjectEncoder: void <init>()>();
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpResponseEncoder v0;
java.lang.Class v2;
java.lang.Object v1;
boolean v3, v4, v5;
v0 := @this: io.netty.handler.codec.http.HttpResponseEncoder;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == class "Lio/netty/handler/codec/http/DefaultFullHttpResponse;" goto label1;
if v2 != class "Lio/netty/handler/codec/http/DefaultHttpResponse;" goto label2;
label1:
return 1;
label2:
v3 = specialinvoke v0.<io.netty.handler.codec.http.HttpObjectEncoder: boolean acceptOutboundMessage(java.lang.Object)>(v1);
if v3 == 0 goto label3;
v4 = v1 instanceof io.netty.handler.codec.http.HttpRequest;
if v4 != 0 goto label3;
v5 = 1;
goto label4;
label3:
v5 = 0;
label4:
return v5;
}
protected void encodeInitialLine(io.netty.buffer.ByteBuf, io.netty.handler.codec.http.HttpResponse) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpVersion v3;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.http.HttpResponseEncoder v0;
io.netty.handler.codec.http.HttpResponse v2;
io.netty.handler.codec.http.HttpResponseStatus v4;
v0 := @this: io.netty.handler.codec.http.HttpResponseEncoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: io.netty.handler.codec.http.HttpResponse;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpVersion protocolVersion()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpVersion: void encode(io.netty.buffer.ByteBuf)>(v1);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(32);
v4 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
virtualinvoke v4.<io.netty.handler.codec.http.HttpResponseStatus: void encode(io.netty.buffer.ByteBuf)>(v1);
staticinvoke <io.netty.buffer.ByteBufUtil: io.netty.buffer.ByteBuf writeShortBE(io.netty.buffer.ByteBuf,int)>(v1, 3338);
return;
}
protected void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse, boolean)
{
io.netty.handler.codec.http.HttpHeaders v11, v16, v18, v9;
io.netty.util.AsciiString v10, v12, v17, v19;
io.netty.handler.codec.http.HttpResponseEncoder v0;
io.netty.handler.codec.http.HttpStatusClass v4, v5;
int v13, v15, v6, v8;
boolean v2;
io.netty.handler.codec.http.HttpResponseStatus v14, v3, v7;
io.netty.handler.codec.http.HttpResponse v1;
v0 := @this: io.netty.handler.codec.http.HttpResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 := @parameter1: boolean;
if v2 == 0 goto label3;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpStatusClass codeClass()>();
v5 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL>;
if v4 == v5 goto label1;
v6 = virtualinvoke v3.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v7 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus NO_CONTENT>;
v8 = virtualinvoke v7.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v6 != v8 goto label2;
label1:
v9 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v10 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
virtualinvoke v9.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v10);
v11 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v12 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
virtualinvoke v11.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v12);
goto label3;
label2:
v13 = virtualinvoke v3.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v14 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus RESET_CONTENT>;
v15 = virtualinvoke v14.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v13 != v15 goto label3;
v16 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v17 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
virtualinvoke v16.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v17);
v18 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v19 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v19, 0);
label3:
return;
}
protected boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse)
{
io.netty.handler.codec.http.HttpHeaders v8;
io.netty.util.AsciiString v9;
io.netty.handler.codec.http.HttpResponseEncoder v0;
io.netty.handler.codec.http.HttpStatusClass v3, v4;
int v11, v13, v14, v16, v17, v19, v5, v7;
boolean v10, v20;
io.netty.handler.codec.http.HttpResponseStatus v12, v15, v18, v2, v6;
io.netty.handler.codec.http.HttpResponse v1;
v0 := @this: io.netty.handler.codec.http.HttpResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpStatusClass codeClass()>();
v4 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL>;
if v3 != v4 goto label2;
v5 = virtualinvoke v2.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v6 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS>;
v7 = virtualinvoke v6.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v5 != v7 goto label1;
v8 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v9 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_VERSION>;
v10 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v9);
return v10;
label1:
return 1;
label2:
v11 = virtualinvoke v2.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v12 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus NO_CONTENT>;
v13 = virtualinvoke v12.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v11 == v13 goto label3;
v14 = virtualinvoke v2.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v15 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED>;
v16 = virtualinvoke v15.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v14 == v16 goto label3;
v17 = virtualinvoke v2.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v18 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus RESET_CONTENT>;
v19 = virtualinvoke v18.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v17 != v19 goto label4;
label3:
v20 = 1;
goto label5;
label4:
v20 = 0;
label5:
return v20;
}
}