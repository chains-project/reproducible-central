public final class io.netty.handler.codec.http.HttpServerCodec extends io.netty.channel.CombinedChannelDuplexHandler implements io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec
{
private final java.util.Queue queue;
public void <init>()
{
io.netty.handler.codec.http.HttpServerCodec v0;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
specialinvoke v0.<io.netty.handler.codec.http.HttpServerCodec: void <init>(int,int,int)>(4096, 8192, 8192);
return;
}
public void <init>(int, int, int)
{
io.netty.handler.codec.http.HttpServerCodec v0;
int v1, v2, v3;
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder v5;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v6;
java.util.ArrayDeque v4;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>()>();
v4 = new java.util.ArrayDeque;
specialinvoke v4.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.handler.codec.http.HttpServerCodec: java.util.Queue queue> = v4;
v5 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder;
specialinvoke v5.<io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder: void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int)>(v0, v1, v2, v3);
v6 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
specialinvoke v6.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: void <init>(io.netty.handler.codec.http.HttpServerCodec)>(v0);
virtualinvoke v0.<io.netty.handler.codec.http.HttpServerCodec: void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v5, v6);
return;
}
public void <init>(int, int, int, boolean)
{
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder v6;
io.netty.handler.codec.http.HttpServerCodec v0;
int v1, v2, v3;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v7;
java.util.ArrayDeque v5;
boolean v4;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>()>();
v5 = new java.util.ArrayDeque;
specialinvoke v5.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.handler.codec.http.HttpServerCodec: java.util.Queue queue> = v5;
v6 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder;
specialinvoke v6.<io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder: void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean)>(v0, v1, v2, v3, v4);
v7 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
specialinvoke v7.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: void <init>(io.netty.handler.codec.http.HttpServerCodec)>(v0);
virtualinvoke v0.<io.netty.handler.codec.http.HttpServerCodec: void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v6, v7);
return;
}
public void <init>(int, int, int, boolean, int)
{
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder v7;
io.netty.handler.codec.http.HttpServerCodec v0;
int v1, v2, v3, v5;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v8;
java.util.ArrayDeque v6;
boolean v4;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 := @parameter4: int;
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>()>();
v6 = new java.util.ArrayDeque;
specialinvoke v6.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.handler.codec.http.HttpServerCodec: java.util.Queue queue> = v6;
v7 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder;
specialinvoke v7.<io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder: void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean,int)>(v0, v1, v2, v3, v4, v5);
v8 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
specialinvoke v8.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: void <init>(io.netty.handler.codec.http.HttpServerCodec)>(v0);
virtualinvoke v0.<io.netty.handler.codec.http.HttpServerCodec: void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v7, v8);
return;
}
public void <init>(int, int, int, boolean, int, boolean)
{
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder v8;
io.netty.handler.codec.http.HttpServerCodec v0;
int v1, v2, v3, v5;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v9;
java.util.ArrayDeque v7;
boolean v4, v6;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 := @parameter4: int;
v6 := @parameter5: boolean;
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>()>();
v7 = new java.util.ArrayDeque;
specialinvoke v7.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.handler.codec.http.HttpServerCodec: java.util.Queue queue> = v7;
v8 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder;
specialinvoke v8.<io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder: void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean,int,boolean)>(v0, v1, v2, v3, v4, v5, v6);
v9 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
specialinvoke v9.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: void <init>(io.netty.handler.codec.http.HttpServerCodec)>(v0);
virtualinvoke v0.<io.netty.handler.codec.http.HttpServerCodec: void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v8, v9);
return;
}
public void <init>(int, int, int, boolean, int, boolean, boolean)
{
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder v9;
io.netty.handler.codec.http.HttpServerCodec v0;
int v1, v2, v3, v5;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v10;
java.util.ArrayDeque v8;
boolean v4, v6, v7;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 := @parameter4: int;
v6 := @parameter5: boolean;
v7 := @parameter6: boolean;
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>()>();
v8 = new java.util.ArrayDeque;
specialinvoke v8.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.handler.codec.http.HttpServerCodec: java.util.Queue queue> = v8;
v9 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder;
specialinvoke v9.<io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder: void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean,int,boolean,boolean)>(v0, v1, v2, v3, v4, v5, v6, v7);
v10 = new io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
specialinvoke v10.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: void <init>(io.netty.handler.codec.http.HttpServerCodec)>(v0);
virtualinvoke v0.<io.netty.handler.codec.http.HttpServerCodec: void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v9, v10);
return;
}
public void upgradeFrom(io.netty.channel.ChannelHandlerContext)
{
io.netty.handler.codec.http.HttpServerCodec v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPipeline v2;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
return;
}
}