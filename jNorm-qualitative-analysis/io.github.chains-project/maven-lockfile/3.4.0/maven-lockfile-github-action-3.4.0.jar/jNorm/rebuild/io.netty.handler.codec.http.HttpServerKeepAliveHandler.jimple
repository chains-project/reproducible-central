public class io.netty.handler.codec.http.HttpServerKeepAliveHandler extends io.netty.channel.ChannelDuplexHandler
{
private static final java.lang.String MULTIPART_PREFIX;
private boolean persistentConnection;
private int pendingResponses;
public void <init>()
{
io.netty.handler.codec.http.HttpServerKeepAliveHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpServerKeepAliveHandler;
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void <init>()>();
v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean persistentConnection> = 1;
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
int v5, v6;
io.netty.handler.codec.http.HttpServerKeepAliveHandler v0;
java.lang.Object v2;
boolean v3, v4, v7;
v0 := @this: io.netty.handler.codec.http.HttpServerKeepAliveHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.codec.http.HttpRequest;
if v3 == 0 goto label1;
v4 = v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean persistentConnection>;
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: int pendingResponses>;
v6 = v5 + 1;
v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: int pendingResponses> = v6;
v7 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)>(v2);
v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean persistentConnection> = v7;
label1:
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v10, v3;
io.netty.channel.ChannelFutureListener v11;
io.netty.handler.codec.http.HttpServerKeepAliveHandler v0;
java.lang.Object v2;
boolean v4, v5, v6, v7, v8, v9;
v0 := @this: io.netty.handler.codec.http.HttpServerKeepAliveHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v4 == 0 goto label3;
specialinvoke v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: void trackResponse(io.netty.handler.codec.http.HttpResponse)>(v2);
v5 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)>(v2);
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean isSelfDefinedMessageLength(io.netty.handler.codec.http.HttpResponse)>(v2);
if v6 != 0 goto label2;
label1:
v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: int pendingResponses> = 0;
v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean persistentConnection> = 0;
label2:
v7 = specialinvoke v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean shouldKeepAlive()>();
if v7 != 0 goto label3;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)>(v2, 0);
label3:
v8 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v8 == 0 goto label4;
v9 = specialinvoke v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean shouldKeepAlive()>();
if v9 != 0 goto label4;
v10 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise unvoid()>();
v11 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE>;
v3 = interfaceinvoke v10.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)>(v11);
label4:
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)>(v1, v2, v3);
return;
}
private void trackResponse(io.netty.handler.codec.http.HttpResponse)
{
int v3, v4;
io.netty.handler.codec.http.HttpServerKeepAliveHandler v0;
io.netty.handler.codec.http.HttpResponse v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpServerKeepAliveHandler;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 = staticinvoke <io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean isInformational(io.netty.handler.codec.http.HttpResponse)>(v1);
if v2 != 0 goto label1;
v3 = v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: int pendingResponses>;
v4 = v3 - 1;
v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: int pendingResponses> = v4;
label1:
return;
}
private boolean shouldKeepAlive()
{
int v1;
io.netty.handler.codec.http.HttpServerKeepAliveHandler v0;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.http.HttpServerKeepAliveHandler;
v1 = v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: int pendingResponses>;
if v1 != 0 goto label1;
v2 = v0.<io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean persistentConnection>;
if v2 == 0 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
private static boolean isSelfDefinedMessageLength(io.netty.handler.codec.http.HttpResponse)
{
io.netty.handler.codec.http.HttpResponseStatus v5, v7;
int v6, v8;
io.netty.handler.codec.http.HttpResponse v0;
boolean v1, v2, v3, v4, v9;
v0 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v1 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage)>(v0);
if v1 != 0 goto label1;
v2 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage)>(v0);
if v2 != 0 goto label1;
v3 = staticinvoke <io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean isMultipart(io.netty.handler.codec.http.HttpResponse)>(v0);
if v3 != 0 goto label1;
v4 = staticinvoke <io.netty.handler.codec.http.HttpServerKeepAliveHandler: boolean isInformational(io.netty.handler.codec.http.HttpResponse)>(v0);
if v4 != 0 goto label1;
v5 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v7 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus NO_CONTENT>;
v8 = virtualinvoke v7.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v6 != v8 goto label2;
label1:
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
}
private static boolean isInformational(io.netty.handler.codec.http.HttpResponse)
{
io.netty.handler.codec.http.HttpStatusClass v2, v3;
io.netty.handler.codec.http.HttpResponse v0;
io.netty.handler.codec.http.HttpResponseStatus v1;
boolean v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v1 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpStatusClass codeClass()>();
v3 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL>;
if v2 != v3 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
private static boolean isMultipart(io.netty.handler.codec.http.HttpResponse)
{
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.util.AsciiString v2;
int v5;
io.netty.handler.codec.http.HttpResponse v0;
java.lang.String v3, v4;
boolean v6, v7;
v0 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v1 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v2 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_TYPE>;
v3 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v2);
if v3 == null goto label1;
v4 = "multipart";
v5 = virtualinvoke v4.<java.lang.String: int length()>();
v6 = virtualinvoke v3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, "multipart", 0, v5);
if v6 == 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
}
}