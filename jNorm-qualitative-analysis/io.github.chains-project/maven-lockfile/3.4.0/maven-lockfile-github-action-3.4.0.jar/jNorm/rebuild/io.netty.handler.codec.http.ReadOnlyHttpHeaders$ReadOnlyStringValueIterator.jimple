final class io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator extends java.lang.Object implements java.util.Iterator
{
private final java.lang.CharSequence name;
private final int nameHash;
private int nextNameIndex;
final io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0;
void <init>(io.netty.handler.codec.http.ReadOnlyHttpHeaders, java.lang.CharSequence)
{
java.lang.CharSequence v2;
io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator v0;
int v3, v4;
io.netty.handler.codec.http.ReadOnlyHttpHeaders v1;
v0 := @this: io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator;
v1 := @parameter0: io.netty.handler.codec.http.ReadOnlyHttpHeaders;
v2 := @parameter1: java.lang.CharSequence;
v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: java.lang.CharSequence name> = v2;
v3 = staticinvoke <io.netty.util.AsciiString: int hashCode(java.lang.CharSequence)>(v2);
v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nameHash> = v3;
v4 = specialinvoke v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int findNextValue()>();
v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nextNameIndex> = v4;
return;
}
public boolean hasNext()
{
io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator v0;
int v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator;
v1 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nextNameIndex>;
v2 = (int) -1;
if v1 == v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public java.lang.String next()
{
java.lang.CharSequence v7;
java.lang.CharSequence[] v4;
io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator v0;
int v5, v6, v9;
io.netty.handler.codec.http.ReadOnlyHttpHeaders v3;
java.lang.String v8;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0>;
v4 = v3.<io.netty.handler.codec.http.ReadOnlyHttpHeaders: java.lang.CharSequence[] nameValuePairs>;
v5 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nextNameIndex>;
v6 = v5 + 1;
v7 = v4[v6];
v8 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
v9 = specialinvoke v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int findNextValue()>();
v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nextNameIndex> = v9;
return v8;
}
public void remove()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator v0;
v0 := @this: io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("read only");
throw v1;
}
private int findNextValue()
{
java.lang.CharSequence v10, v7;
java.lang.CharSequence[] v3, v6;
io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator v0;
int v1, v12, v4, v8, v9;
io.netty.handler.codec.http.ReadOnlyHttpHeaders v2, v5;
boolean v11;
v0 := @this: io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator;
v1 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nextNameIndex>;
label1:
v2 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0>;
v3 = v2.<io.netty.handler.codec.http.ReadOnlyHttpHeaders: java.lang.CharSequence[] nameValuePairs>;
v4 = lengthof v3;
if v1 >= v4 goto label3;
v5 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0>;
v6 = v5.<io.netty.handler.codec.http.ReadOnlyHttpHeaders: java.lang.CharSequence[] nameValuePairs>;
v7 = v6[v1];
v8 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: int nameHash>;
v9 = staticinvoke <io.netty.util.AsciiString: int hashCode(java.lang.CharSequence)>(v7);
if v8 != v9 goto label2;
v10 = v0.<io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator: java.lang.CharSequence name>;
v11 = staticinvoke <io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>(v10, v7);
if v11 == 0 goto label2;
return v1;
label2:
v1 = v1 + 2;
goto label1;
label3:
v12 = (int) -1;
return v12;
}
}