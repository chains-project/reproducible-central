public final class io.netty.handler.codec.http.cors.CorsConfig extends java.lang.Object
{
private final java.util.Set origins;
private final boolean anyOrigin;
private final boolean enabled;
private final java.util.Set exposeHeaders;
private final boolean allowCredentials;
private final long maxAge;
private final java.util.Set allowedRequestMethods;
private final java.util.Set allowedRequestHeaders;
private final boolean allowNullOrigin;
private final java.util.Map preflightHeaders;
private final boolean shortCircuit;
private final boolean allowPrivateNetwork;
void <init>(io.netty.handler.codec.http.cors.CorsConfigBuilder)
{
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v10, v3, v6, v9;
long v8;
java.util.Map v12;
io.netty.handler.codec.http.cors.CorsConfigBuilder v1;
java.util.LinkedHashSet v2;
boolean v11, v13, v14, v4, v5, v7;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 := @parameter0: io.netty.handler.codec.http.cors.CorsConfigBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.LinkedHashSet;
v3 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: java.util.Set origins>;
specialinvoke v2.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v3);
v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set origins> = v2;
v4 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: boolean anyOrigin>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean anyOrigin> = v4;
v5 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: boolean enabled>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean enabled> = v5;
v6 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: java.util.Set exposeHeaders>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set exposeHeaders> = v6;
v7 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: boolean allowCredentials>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowCredentials> = v7;
v8 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: long maxAge>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: long maxAge> = v8;
v9 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: java.util.Set requestMethods>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set allowedRequestMethods> = v9;
v10 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: java.util.Set requestHeaders>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set allowedRequestHeaders> = v10;
v11 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: boolean allowNullOrigin>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowNullOrigin> = v11;
v12 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: java.util.Map preflightHeaders>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Map preflightHeaders> = v12;
v13 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: boolean shortCircuit>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean shortCircuit> = v13;
v14 = v1.<io.netty.handler.codec.http.cors.CorsConfigBuilder: boolean allowPrivateNetwork>;
v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowPrivateNetwork> = v14;
return;
}
public boolean isCorsSupportEnabled()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean enabled>;
return v1;
}
public boolean isAnyOriginSupported()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean anyOrigin>;
return v1;
}
public java.lang.String origin()
{
java.util.Iterator v4;
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v1, v3;
java.lang.Object v5;
boolean v2;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set origins>;
v2 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set origins>;
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
v5 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
label1:
return v5;
}
public java.util.Set origins()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set origins>;
return v1;
}
public boolean isNullOriginAllowed()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowNullOrigin>;
return v1;
}
public boolean isPrivateNetworkAllowed()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowPrivateNetwork>;
return v1;
}
public java.util.Set exposedHeaders()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v1, v2;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set exposeHeaders>;
v2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v2;
}
public boolean isCredentialsAllowed()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowCredentials>;
return v1;
}
public long maxAge()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
long v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: long maxAge>;
return v1;
}
public java.util.Set allowedRequestMethods()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v1, v2;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set allowedRequestMethods>;
v2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v2;
}
public java.util.Set allowedRequestHeaders()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v1, v2;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set allowedRequestHeaders>;
v2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v2;
}
public io.netty.handler.codec.http.HttpHeaders preflightResponseHeaders()
{
java.util.Iterator v7;
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v6;
io.netty.handler.codec.http.EmptyHttpHeaders v3;
io.netty.handler.codec.http.DefaultHttpHeaders v4;
java.util.Map v1, v5;
java.lang.Object v10, v11, v13, v14, v9;
boolean v12, v2, v8;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Map preflightHeaders>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
if v2 == 0 goto label1;
v3 = <io.netty.handler.codec.http.EmptyHttpHeaders: io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE>;
return v3;
label1:
v4 = new io.netty.handler.codec.http.DefaultHttpHeaders;
specialinvoke v4.<io.netty.handler.codec.http.DefaultHttpHeaders: void <init>()>();
v5 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Map preflightHeaders>;
v6 = interfaceinvoke v5.<java.util.Map: java.util.Set entrySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label4;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
v11 = staticinvoke <io.netty.handler.codec.http.cors.CorsConfig: java.lang.Object getValue(java.util.concurrent.Callable)>(v10);
v12 = v11 instanceof java.lang.Iterable;
if v12 == 0 goto label3;
v13 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable)>(v13, v11);
goto label2;
label3:
v14 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v14, v11);
goto label2;
label4:
return v4;
}
public boolean isShortCircuit()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean shortCircuit>;
return v1;
}
public boolean isShortCurcuit()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean isShortCircuit()>();
return v1;
}
private static java.lang.Object getValue(java.util.concurrent.Callable)
{
java.lang.IllegalStateException v3;
java.lang.Object v1;
java.util.concurrent.Callable v0;
java.lang.String v4;
java.lang.Exception v2;
v0 := @parameter0: java.util.concurrent.Callable;
label1:
v1 = interfaceinvoke v0.<java.util.concurrent.Callable: java.lang.Object call()>();
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = new java.lang.IllegalStateException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.concurrent.Callable)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not generate value for callable [\u0001]");
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v4, v2);
throw v3;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.lang.String toString()
{
io.netty.handler.codec.http.cors.CorsConfig v0;
java.util.Set v3, v5, v8, v9;
long v7;
java.util.Map v10;
java.lang.String v1, v12;
boolean v11, v2, v4, v6;
v0 := @this: io.netty.handler.codec.http.cors.CorsConfig;
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v0);
v2 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean enabled>;
v3 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set origins>;
v4 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean anyOrigin>;
v5 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set exposeHeaders>;
v6 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowCredentials>;
v7 = v0.<io.netty.handler.codec.http.cors.CorsConfig: long maxAge>;
v8 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set allowedRequestMethods>;
v9 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Set allowedRequestHeaders>;
v10 = v0.<io.netty.handler.codec.http.cors.CorsConfig: java.util.Map preflightHeaders>;
v11 = v0.<io.netty.handler.codec.http.cors.CorsConfig: boolean allowPrivateNetwork>;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,boolean,java.util.Set,boolean,java.util.Set,boolean,long,java.util.Set,java.util.Set,java.util.Map,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[enabled=\u0001, origins=\u0001, anyOrigin=\u0001, exposedHeaders=\u0001, isCredentialsAllowed=\u0001, maxAge=\u0001, allowedRequestMethods=\u0001, allowedRequestHeaders=\u0001, preflightHeaders=\u0001, isPrivateNetworkAllowed=\u0001]");
return v12;
}
public static io.netty.handler.codec.http.cors.CorsConfig$Builder withAnyOrigin()
{
io.netty.handler.codec.http.cors.CorsConfig$Builder v0;
v0 = new io.netty.handler.codec.http.cors.CorsConfig$Builder;
specialinvoke v0.<io.netty.handler.codec.http.cors.CorsConfig$Builder: void <init>()>();
return v0;
}
public static io.netty.handler.codec.http.cors.CorsConfig$Builder withOrigin(java.lang.String)
{
io.netty.handler.codec.http.cors.CorsConfig$Builder v3, v4;
java.lang.String[] v5;
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 = "*";
v2 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v2 == 0 goto label1;
v3 = new io.netty.handler.codec.http.cors.CorsConfig$Builder;
specialinvoke v3.<io.netty.handler.codec.http.cors.CorsConfig$Builder: void <init>()>();
return v3;
label1:
v4 = new io.netty.handler.codec.http.cors.CorsConfig$Builder;
v5 = newarray (java.lang.String)[1];
v5[0] = v0;
specialinvoke v4.<io.netty.handler.codec.http.cors.CorsConfig$Builder: void <init>(java.lang.String[])>(v5);
return v4;
}
public static transient io.netty.handler.codec.http.cors.CorsConfig$Builder withOrigins(java.lang.String[])
{
java.lang.String[] v0;
io.netty.handler.codec.http.cors.CorsConfig$Builder v1;
v0 := @parameter0: java.lang.String[];
v1 = new io.netty.handler.codec.http.cors.CorsConfig$Builder;
specialinvoke v1.<io.netty.handler.codec.http.cors.CorsConfig$Builder: void <init>(java.lang.String[])>(v0);
return v1;
}
}