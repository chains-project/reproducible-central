public final class io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig extends java.lang.Object
{
static final boolean DEFAULT_PERFORM_MASKING;
static final boolean DEFAULT_ALLOW_MASK_MISMATCH;
static final boolean DEFAULT_HANDLE_CLOSE_FRAMES;
static final boolean DEFAULT_DROP_PONG_FRAMES;
static final boolean DEFAULT_GENERATE_ORIGIN_HEADER;
private final java.net.URI webSocketUri;
private final java.lang.String subprotocol;
private final io.netty.handler.codec.http.websocketx.WebSocketVersion version;
private final boolean allowExtensions;
private final io.netty.handler.codec.http.HttpHeaders customHeaders;
private final int maxFramePayloadLength;
private final boolean performMasking;
private final boolean allowMaskMismatch;
private final boolean handleCloseFrames;
private final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame;
private final boolean dropPongFrames;
private final long handshakeTimeoutMillis;
private final long forceCloseTimeoutMillis;
private final boolean absoluteUpgradeUrl;
private final boolean generateOriginHeader;
private final boolean withUTF8Validator;
private void <init>(java.net.URI, java.lang.String, io.netty.handler.codec.http.websocketx.WebSocketVersion, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, boolean, io.netty.handler.codec.http.websocketx.WebSocketCloseStatus, boolean, long, long, boolean, boolean, boolean)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v10;
long v12, v13, v17;
io.netty.handler.codec.http.websocketx.WebSocketVersion v3;
int v6;
java.lang.String v2;
java.net.URI v1;
boolean v11, v14, v15, v16, v4, v7, v8, v9;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: boolean;
v10 := @parameter9: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v11 := @parameter10: boolean;
v12 := @parameter11: long;
v13 := @parameter12: long;
v14 := @parameter13: boolean;
v15 := @parameter14: boolean;
v16 := @parameter15: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.net.URI webSocketUri> = v1;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.lang.String subprotocol> = v2;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketVersion version> = v3;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowExtensions> = v4;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.HttpHeaders customHeaders> = v5;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: int maxFramePayloadLength> = v6;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean performMasking> = v7;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowMaskMismatch> = v8;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long forceCloseTimeoutMillis> = v13;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean handleCloseFrames> = v9;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame> = v10;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean dropPongFrames> = v11;
v17 = staticinvoke <io.netty.util.internal.ObjectUtil: long checkPositive(long,java.lang.String)>(v12, "handshakeTimeoutMillis");
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long handshakeTimeoutMillis> = v17;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean absoluteUpgradeUrl> = v14;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean generateOriginHeader> = v15;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean withUTF8Validator> = v16;
return;
}
public java.net.URI webSocketUri()
{
java.net.URI v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.net.URI webSocketUri>;
return v1;
}
public java.lang.String subprotocol()
{
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.lang.String subprotocol>;
return v1;
}
public io.netty.handler.codec.http.websocketx.WebSocketVersion version()
{
io.netty.handler.codec.http.websocketx.WebSocketVersion v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketVersion version>;
return v1;
}
public boolean allowExtensions()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowExtensions>;
return v1;
}
public io.netty.handler.codec.http.HttpHeaders customHeaders()
{
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.HttpHeaders customHeaders>;
return v1;
}
public int maxFramePayloadLength()
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: int maxFramePayloadLength>;
return v1;
}
public boolean performMasking()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean performMasking>;
return v1;
}
public boolean allowMaskMismatch()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowMaskMismatch>;
return v1;
}
public boolean handleCloseFrames()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean handleCloseFrames>;
return v1;
}
public io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame()
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame>;
return v1;
}
public boolean dropPongFrames()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean dropPongFrames>;
return v1;
}
public long handshakeTimeoutMillis()
{
long v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long handshakeTimeoutMillis>;
return v1;
}
public long forceCloseTimeoutMillis()
{
long v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long forceCloseTimeoutMillis>;
return v1;
}
public boolean absoluteUpgradeUrl()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean absoluteUpgradeUrl>;
return v1;
}
public boolean generateOriginHeader()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean generateOriginHeader>;
return v1;
}
public boolean withUTF8Validator()
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean withUTF8Validator>;
return v1;
}
public java.lang.String toString()
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v10;
long v12, v13;
io.netty.handler.codec.http.websocketx.WebSocketVersion v3;
int v6;
java.lang.String v16, v2;
java.net.URI v1;
boolean v11, v14, v15, v4, v7, v8, v9;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.net.URI webSocketUri>;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.lang.String subprotocol>;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketVersion version>;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowExtensions>;
v5 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.HttpHeaders customHeaders>;
v6 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: int maxFramePayloadLength>;
v7 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean performMasking>;
v8 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowMaskMismatch>;
v9 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean handleCloseFrames>;
v10 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame>;
v11 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean dropPongFrames>;
v12 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long handshakeTimeoutMillis>;
v13 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long forceCloseTimeoutMillis>;
v14 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean absoluteUpgradeUrl>;
v15 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean generateOriginHeader>;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.net.URI,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("WebSocketClientProtocolConfig {webSocketUri=\u0001, subprotocol=\u0001, version=\u0001, allowExtensions=\u0001, customHeaders=\u0001, maxFramePayloadLength=\u0001, performMasking=\u0001, allowMaskMismatch=\u0001, handleCloseFrames=\u0001, sendCloseFrame=\u0001, dropPongFrames=\u0001, handshakeTimeoutMillis=\u0001, forceCloseTimeoutMillis=\u0001, absoluteUpgradeUrl=\u0001, generateOriginHeader=\u0001}");
return v16;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder toBuilder()
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v1 = new io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig)>(v0);
return v1;
}
public static io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder newBuilder()
{
io.netty.handler.codec.http.EmptyHttpHeaders v3;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v4;
java.net.URI v1;
v0 = new io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("https://localhost/");
v2 = <io.netty.handler.codec.http.websocketx.WebSocketVersion: io.netty.handler.codec.http.websocketx.WebSocketVersion V13>;
v3 = <io.netty.handler.codec.http.EmptyHttpHeaders: io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE>;
v4 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus NORMAL_CLOSURE>;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: void <init>(java.net.URI,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean,boolean)>(v1, null, v2, 0, v3, 65536, 1, 0, 1, v4, 1, 10000L, -1L, 0, 1, 1);
return v0;
}
}