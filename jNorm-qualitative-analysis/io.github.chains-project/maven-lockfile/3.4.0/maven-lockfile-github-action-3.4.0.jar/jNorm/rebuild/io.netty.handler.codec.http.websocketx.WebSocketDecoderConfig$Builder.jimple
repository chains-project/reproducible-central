public final class io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder extends java.lang.Object
{
private int maxFramePayloadLength;
private boolean expectMaskedFrames;
private boolean allowMaskMismatch;
private boolean allowExtensions;
private boolean closeOnProtocolViolation;
private boolean withUTF8Validator;
private void <init>(io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
int v2;
boolean v3, v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "decoderConfig");
v2 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: int maxFramePayloadLength()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: int maxFramePayloadLength> = v2;
v3 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean expectMaskedFrames()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean expectMaskedFrames> = v3;
v4 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean allowMaskMismatch()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean allowMaskMismatch> = v4;
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean allowExtensions()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean allowExtensions> = v5;
v6 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean closeOnProtocolViolation()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean closeOnProtocolViolation> = v6;
v7 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean withUTF8Validator()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean withUTF8Validator> = v7;
return;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder maxFramePayloadLength(int)
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: int;
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: int maxFramePayloadLength> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder expectMaskedFrames(boolean)
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean expectMaskedFrames> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowMaskMismatch(boolean)
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean allowMaskMismatch> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowExtensions(boolean)
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean allowExtensions> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder closeOnProtocolViolation(boolean)
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean closeOnProtocolViolation> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder withUTF8Validator(boolean)
{
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean withUTF8Validator> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig build()
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v0;
int v2;
boolean v3, v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder;
v1 = new io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: int maxFramePayloadLength>;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean expectMaskedFrames>;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean allowMaskMismatch>;
v5 = v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean allowExtensions>;
v6 = v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean closeOnProtocolViolation>;
v7 = v0.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: boolean withUTF8Validator>;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: void <init>(int,boolean,boolean,boolean,boolean,boolean)>(v2, v3, v4, v5, v6, v7);
return v1;
}
}