public class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler extends io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler
{
private static final io.netty.util.AttributeKey HANDSHAKER_ATTR_KEY;
private final io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig;
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v4;
java.lang.Object v2;
long v5;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig v1;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "serverConfig");
v3 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: boolean dropPongFrames()>();
v4 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame()>();
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: long forceCloseTimeoutMillis()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler: void <init>(boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,long)>(v3, v4, v5);
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig> = v1;
return;
}
public void <init>(java.lang.String)
{
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,long)>(v1, 10000L);
return;
}
public void <init>(java.lang.String, long)
{
long v2;
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,boolean,long)>(v1, 0, v2);
return;
}
public void <init>(java.lang.String, boolean)
{
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,boolean,long)>(v1, v2, 10000L);
return;
}
public void <init>(java.lang.String, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
long v3;
java.lang.String v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,long)>(v1, null, 0, 65536, 0, v2, v3);
return;
}
public void <init>(java.lang.String, java.lang.String)
{
java.lang.String v1, v2;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,long)>(v1, v2, 10000L);
return;
}
public void <init>(java.lang.String, java.lang.String, long)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
long v3;
java.lang.String v1, v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,long)>(v1, v2, 0, v3);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
java.lang.String v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,long)>(v1, v2, v3, 10000L);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
long v4;
java.lang.String v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,long)>(v1, v2, v3, 65536, v4);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
java.lang.String v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,long)>(v1, v2, v3, v4, 10000L);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, long)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
long v5;
java.lang.String v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,long)>(v1, v2, v3, v4, 0, v5);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
java.lang.String v1, v2;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,long)>(v1, v2, v3, v4, v5, 10000L);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
long v6;
java.lang.String v1, v2;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,long)>(v1, v2, v3, v4, v5, 0, v6);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
java.lang.String v1, v2;
boolean v3, v5, v6;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,long)>(v1, v2, v3, v4, v5, v6, 10000L);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean, boolean, long)
{
long v7;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
java.lang.String v1, v2;
boolean v3, v5, v6;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,boolean,long)>(v1, v2, v3, v4, v5, v6, 1, v7);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean, boolean, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
int v4;
java.lang.String v1, v2;
boolean v3, v5, v6, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,boolean,long)>(v1, v2, v3, v4, v5, v6, v7, 10000L);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean, boolean, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v13;
long v8;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v10, v11, v12, v9;
int v4;
java.lang.String v1, v2;
boolean v3, v5, v6, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: boolean;
v8 := @parameter7: long;
v9 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder newBuilder()>();
v10 = virtualinvoke v9.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder maxFramePayloadLength(int)>(v4);
v11 = virtualinvoke v10.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowMaskMismatch(boolean)>(v5);
v12 = virtualinvoke v11.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowExtensions(boolean)>(v3);
v13 = virtualinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig build()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v1, v2, v6, v7, v8, v13);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, boolean, long, io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v6;
long v5;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v10, v11, v12, v13, v7, v8, v9;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
java.lang.String v1, v2;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig v14;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
v5 := @parameter4: long;
v6 := @parameter5: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
v7 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder newBuilder()>();
v8 = virtualinvoke v7.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder websocketPath(java.lang.String)>(v1);
v9 = virtualinvoke v8.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder subprotocols(java.lang.String)>(v2);
v10 = virtualinvoke v9.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder checkStartsWith(boolean)>(v3);
v11 = virtualinvoke v10.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder handshakeTimeoutMillis(long)>(v5);
v12 = virtualinvoke v11.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder dropPongFrames(boolean)>(v4);
v13 = virtualinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder decoderConfig(io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v6);
v14 = virtualinvoke v13.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig build()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig)>(v14);
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext)
{
io.netty.handler.codec.http.websocketx.Utf8FrameValidator v16;
io.netty.channel.ChannelHandlerContext v1;
java.lang.String v13, v15, v4, v6;
boolean v11, v19;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler v7;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v10, v18;
io.netty.channel.ChannelPipeline v2;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
io.netty.channel.ChannelHandler v12, v3;
java.lang.Class v14, v5;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig v17, v8, v9;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler get(java.lang.Class)>(class "Lio/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler;");
if v3 != null goto label1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v5 = class "Lio/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = new io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler;
v8 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig>;
specialinvoke v7.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig)>(v8);
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v4, v6, v7);
label1:
v9 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig>;
v10 = virtualinvoke v9.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig()>();
v11 = virtualinvoke v10.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean withUTF8Validator()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler get(java.lang.Class)>(class "Lio/netty/handler/codec/http/websocketx/Utf8FrameValidator;");
if v12 != null goto label2;
v13 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v14 = class "Lio/netty/handler/codec/http/websocketx/Utf8FrameValidator;";
v15 = virtualinvoke v14.<java.lang.Class: java.lang.String getName()>();
v16 = new io.netty.handler.codec.http.websocketx.Utf8FrameValidator;
v17 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig>;
v18 = virtualinvoke v17.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig()>();
v19 = virtualinvoke v18.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: boolean closeOnProtocolViolation()>();
specialinvoke v16.<io.netty.handler.codec.http.websocketx.Utf8FrameValidator: void <init>(boolean)>(v19);
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v13, v15, v16);
label2:
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.websocketx.WebSocketFrame, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.http.websocketx.WebSocketFrame v2;
io.netty.channel.ChannelFuture v11;
io.netty.channel.Channel v7;
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v10;
io.netty.channel.ChannelPromise v9;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
io.netty.channel.ChannelFutureListener v12;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker v8;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig v4;
boolean v5, v6;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v3 := @parameter2: java.util.List;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: boolean handleCloseFrames()>();
if v5 == 0 goto label3;
v6 = v2 instanceof io.netty.handler.codec.http.websocketx.CloseWebSocketFrame;
if v6 == 0 goto label3;
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v8 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker getHandshaker(io.netty.channel.Channel)>(v7);
if v8 == null goto label1;
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: io.netty.handler.codec.http.websocketx.WebSocketFrame retain()>();
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: void closeSent(io.netty.channel.ChannelPromise)>(v9);
virtualinvoke v8.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise)>(v1, v2, v9);
goto label2;
label1:
v10 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
v11 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v10);
v12 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE>;
interfaceinvoke v11.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v12);
label2:
return;
label3:
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler: void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List)>(v1, v2, v3);
return;
}
protected io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException buildHandshakeException(java.lang.String)
{
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
specialinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String)>(v1);
return v2;
}
public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception
{
java.lang.Throwable v2;
byte[] v8;
io.netty.handler.codec.http.HttpVersion v5;
io.netty.handler.codec.http.HttpResponseStatus v6;
io.netty.channel.ChannelFuture v11;
io.netty.channel.Channel v10;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v9;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler v0;
io.netty.channel.ChannelFutureListener v12;
io.netty.handler.codec.http.DefaultFullHttpResponse v4;
java.lang.String v7;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Throwable;
v3 = v2 instanceof io.netty.handler.codec.http.websocketx.WebSocketHandshakeException;
if v3 == 0 goto label1;
v4 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v5 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v6 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST>;
v7 = virtualinvoke v2.<java.lang.Throwable: java.lang.String getMessage()>();
v8 = virtualinvoke v7.<java.lang.String: byte[] getBytes()>();
v9 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v8);
specialinvoke v4.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v5, v6, v9);
v10 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v11 = interfaceinvoke v10.<io.netty.channel.Channel: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v4);
v12 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE>;
interfaceinvoke v11.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v12);
goto label2;
label1:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v2);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close()>();
label2:
return;
}
static io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker getHandshaker(io.netty.channel.Channel)
{
io.netty.channel.Channel v0;
io.netty.util.AttributeKey v1;
io.netty.util.Attribute v2;
java.lang.Object v3;
v0 := @parameter0: io.netty.channel.Channel;
v1 = <io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.util.AttributeKey HANDSHAKER_ATTR_KEY>;
v2 = interfaceinvoke v0.<io.netty.channel.Channel: io.netty.util.Attribute attr(io.netty.util.AttributeKey)>(v1);
v3 = interfaceinvoke v2.<io.netty.util.Attribute: java.lang.Object get()>();
return v3;
}
static void setHandshaker(io.netty.channel.Channel, io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker)
{
io.netty.channel.Channel v0;
io.netty.util.AttributeKey v2;
io.netty.util.Attribute v3;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker v1;
v0 := @parameter0: io.netty.channel.Channel;
v1 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker;
v2 = <io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.util.AttributeKey HANDSHAKER_ATTR_KEY>;
v3 = interfaceinvoke v0.<io.netty.channel.Channel: io.netty.util.Attribute attr(io.netty.util.AttributeKey)>(v2);
interfaceinvoke v3.<io.netty.util.Attribute: void set(java.lang.Object)>(v1);
return;
}
static void <clinit>()
{
io.netty.util.AttributeKey v0;
v0 = staticinvoke <io.netty.util.AttributeKey: io.netty.util.AttributeKey valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;", "HANDSHAKER");
<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler: io.netty.util.AttributeKey HANDSHAKER_ATTR_KEY> = v0;
return;
}
}