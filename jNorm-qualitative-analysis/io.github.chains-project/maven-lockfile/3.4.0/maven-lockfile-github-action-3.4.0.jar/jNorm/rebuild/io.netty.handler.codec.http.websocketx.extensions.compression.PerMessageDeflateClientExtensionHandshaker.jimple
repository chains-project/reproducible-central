public final class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker extends java.lang.Object implements io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker
{
private final int compressionLevel;
private final boolean allowClientWindowSize;
private final int requestedServerWindowSize;
private final boolean allowClientNoContext;
private final boolean requestedServerNoContext;
private final io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider;
public void <init>()
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker;
v1 = staticinvoke <io.netty.handler.codec.compression.ZlibCodecFactory: boolean isSupportingWindowSizeAndMemLevel()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: void <init>(int,boolean,int,boolean,boolean)>(6, v1, 15, 0, 0);
return;
}
public void <init>(int, boolean, int, boolean, boolean)
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider v6;
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker v0;
int v1, v3;
boolean v2, v4, v5;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 = <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider DEFAULT>;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: void <init>(int,boolean,int,boolean,boolean,io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider)>(v1, v2, v3, v4, v5, v6);
return;
}
public void <init>(int, boolean, int, boolean, boolean, io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider)
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider v6;
java.lang.IllegalArgumentException v7, v9;
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker v0;
int v1, v3;
java.lang.Object v11;
java.lang.String v10, v8;
boolean v2, v4, v5;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v3 > 15 goto label1;
if v3 >= 8 goto label2;
label1:
v7 = new java.lang.IllegalArgumentException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("requestedServerWindowSize: \u0001 (expected: 8-15)");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v7;
label2:
if v1 < 0 goto label3;
if v1 <= 9 goto label4;
label3:
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("compressionLevel: \u0001 (expected: 0-9)");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
label4:
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: int compressionLevel> = v1;
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean allowClientWindowSize> = v2;
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: int requestedServerWindowSize> = v3;
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean allowClientNoContext> = v4;
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean requestedServerNoContext> = v5;
v11 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v6, "extensionFilterProvider");
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider> = v11;
return;
}
public io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newRequestData()
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData v8;
java.util.HashMap v1;
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker v0;
int v4, v5;
java.lang.String v6;
boolean v2, v3, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>(int)>(4);
v2 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean requestedServerNoContext>;
if v2 == 0 goto label1;
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("server_no_context_takeover", null);
label1:
v3 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean allowClientNoContext>;
if v3 == 0 goto label2;
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("client_no_context_takeover", null);
label2:
v4 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: int requestedServerWindowSize>;
if v4 == 15 goto label3;
v5 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: int requestedServerWindowSize>;
v6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v5);
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("server_max_window_bits", v6);
label3:
v7 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean allowClientWindowSize>;
if v7 == 0 goto label4;
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("client_max_window_bits", null);
label4:
v8 = new io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData;
specialinvoke v8.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData: void <init>(java.lang.String,java.util.Map)>("permessage-deflate", v1);
return v8;
}
public io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension handshakeExtension(io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension v33;
java.util.Map v10;
boolean v13, v17, v18, v22, v26, v27, v30, v31, v4, v5, v8, v9;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData v1;
java.util.Set v11;
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker v0;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider v34;
int v32, v6, v7;
java.lang.String v15, v2, v20, v24, v28, v3;
java.util.Iterator v12;
java.lang.Object v14, v16, v19, v21, v23, v25, v29;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData;
v2 = "permessage-deflate";
v3 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData: java.lang.String name()>();
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 != 0 goto label01;
return null;
label01:
v5 = 1;
v6 = 15;
v7 = 15;
v8 = 0;
v9 = 0;
v10 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData: java.util.Map parameters()>();
v11 = interfaceinvoke v10.<java.util.Map: java.util.Set entrySet()>();
v12 = interfaceinvoke v11.<java.util.Set: java.util.Iterator iterator()>();
label02:
if v5 == 0 goto label11;
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label11;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = "client_max_window_bits";
v16 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v17 = virtualinvoke v15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v16);
if v17 == 0 goto label05;
v18 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean allowClientWindowSize>;
if v18 == 0 goto label04;
v19 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
v6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v19);
if v6 > 15 goto label03;
if v6 >= 8 goto label02;
label03:
v5 = 0;
goto label02;
label04:
v5 = 0;
goto label02;
label05:
v20 = "server_max_window_bits";
v21 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v22 = virtualinvoke v20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v21);
if v22 == 0 goto label07;
v23 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
v7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v23);
if v7 > 15 goto label06;
if v7 >= 8 goto label02;
label06:
v5 = 0;
goto label02;
label07:
v24 = "client_no_context_takeover";
v25 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v26 = virtualinvoke v24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v25);
if v26 == 0 goto label09;
v27 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean allowClientNoContext>;
if v27 == 0 goto label08;
v9 = 1;
goto label02;
label08:
v5 = 0;
goto label02;
label09:
v28 = "server_no_context_takeover";
v29 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v30 = virtualinvoke v28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v29);
if v30 == 0 goto label10;
v8 = 1;
goto label02;
label10:
v5 = 0;
goto label02;
label11:
v31 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: boolean requestedServerNoContext>;
if v31 == 0 goto label12;
if v8 == 0 goto label13;
label12:
v32 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: int requestedServerWindowSize>;
if v32 >= v7 goto label14;
label13:
v5 = 0;
label14:
if v5 == 0 goto label15;
v33 = new io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension;
v34 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider>;
specialinvoke v33.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension: void <init>(io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker,boolean,int,boolean,int,io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider)>(v0, v8, v7, v9, v6, v34);
return v33;
label15:
return null;
}
}