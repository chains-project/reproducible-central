final class io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig extends io.netty.channel.DefaultChannelConfig
{
void <init>(io.netty.channel.Channel)
{
io.netty.channel.Channel v1;
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig v0;
v0 := @this: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig;
v1 := @parameter0: io.netty.channel.Channel;
specialinvoke v0.<io.netty.channel.DefaultChannelConfig: void <init>(io.netty.channel.Channel)>(v1);
return;
}
public io.netty.channel.MessageSizeEstimator getMessageSizeEstimator()
{
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig v0;
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$FlowControlledFrameSizeEstimator v1;
v0 := @this: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig;
v1 = <io.netty.handler.codec.http2.AbstractHttp2StreamChannel$FlowControlledFrameSizeEstimator: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$FlowControlledFrameSizeEstimator INSTANCE>;
return v1;
}
public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator)
{
io.netty.channel.MessageSizeEstimator v1;
java.lang.UnsupportedOperationException v2;
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig v0;
v0 := @this: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig;
v1 := @parameter0: io.netty.channel.MessageSizeEstimator;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator)
{
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig v0;
io.netty.channel.RecvByteBufAllocator$Handle v2;
io.netty.channel.RecvByteBufAllocator v1;
java.lang.String v5;
java.lang.IllegalArgumentException v4;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig;
v1 := @parameter0: io.netty.channel.RecvByteBufAllocator;
v2 = interfaceinvoke v1.<io.netty.channel.RecvByteBufAllocator: io.netty.channel.RecvByteBufAllocator$Handle newHandle()>();
v3 = v2 instanceof io.netty.channel.RecvByteBufAllocator$ExtendedHandle;
if v3 != 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(class "Lio/netty/channel/RecvByteBufAllocator$ExtendedHandle;") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("allocator.newHandle() must return an object of type: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
specialinvoke v0.<io.netty.channel.DefaultChannelConfig: io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator)>(v1);
return v0;
}
}