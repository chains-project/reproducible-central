final class io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams extends java.lang.Object
{
private final java.util.List listeners;
private final java.util.Queue pendingEvents;
private final java.util.Set streams;
private int pendingIterations;
final io.netty.handler.codec.http2.DefaultHttp2Connection this$0;
void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection, java.util.List)
{
java.util.List v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
java.util.ArrayDeque v3;
java.util.LinkedHashSet v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection;
v2 := @parameter1: java.util.List;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: io.netty.handler.codec.http2.DefaultHttp2Connection this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.ArrayDeque;
specialinvoke v3.<java.util.ArrayDeque: void <init>(int)>(4);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Queue pendingEvents> = v3;
v4 = new java.util.LinkedHashSet;
specialinvoke v4.<java.util.LinkedHashSet: void <init>()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Set streams> = v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.List listeners> = v2;
return;
}
public int size()
{
int v2;
java.util.Set v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Set streams>;
v2 = interfaceinvoke v1.<java.util.Set: int size()>();
return v2;
}
public void activate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$1 v4;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v1;
java.util.Queue v3;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: boolean allowModifications()>();
if v2 == 0 goto label1;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void addToActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream)>(v1);
goto label2;
label1:
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Queue pendingEvents>;
v4 = new io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$1;
specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$1: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream)>(v0, v1);
interfaceinvoke v3.<java.util.Queue: boolean add(java.lang.Object)>(v4);
label2:
return;
}
public void deactivate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream, java.util.Iterator)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$2 v5;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v1;
java.util.Iterator v2;
java.util.Queue v4;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v2 := @parameter1: java.util.Iterator;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: boolean allowModifications()>();
if v3 != 0 goto label1;
if v2 == null goto label2;
label1:
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void removeFromActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator)>(v1, v2);
goto label3;
label2:
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Queue pendingEvents>;
v5 = new io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$2;
specialinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$2: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator)>(v0, v1, v2);
interfaceinvoke v4.<java.util.Queue: boolean add(java.lang.Object)>(v5);
label3:
return;
}
public io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v7;
java.util.Iterator v3;
java.util.Set v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
io.netty.handler.codec.http2.Http2StreamVisitor v1;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 := @parameter0: io.netty.handler.codec.http2.Http2StreamVisitor;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void incrementPendingIterations()>();
label1:
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Set streams>;
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label2:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label4;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2StreamVisitor: boolean visit(io.netty.handler.codec.http2.Http2Stream)>(v5);
if v6 != 0 goto label2;
label3:
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void decrementPendingIterations()>();
return v5;
label4:
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void decrementPendingIterations()>();
return null;
label5:
v7 := @caughtexception;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void decrementPendingIterations()>();
throw v7;
catch java.lang.Throwable from label1 to label3 with label5;
catch java.lang.Throwable from label4 to label4 with label5;
}
void addToActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream)
{
java.lang.Throwable v12;
java.util.Set v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
java.util.List v10, v8;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v1;
io.netty.util.internal.logging.InternalLogger v13;
int v5, v6, v7, v9;
java.lang.Object v11;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v4;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Set streams>;
v3 = interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v1);
if v3 == 0 goto label6;
v4 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy()>();
v5 = v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int numActiveStreams>;
v6 = v5 + 1;
v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int numActiveStreams> = v6;
v7 = 0;
label1:
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.List listeners>;
v9 = interfaceinvoke v8.<java.util.List: int size()>();
if v7 >= v9 goto label6;
label2:
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.List listeners>;
v11 = interfaceinvoke v10.<java.util.List: java.lang.Object get(int)>(v7);
interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Connection$Listener: void onStreamActive(io.netty.handler.codec.http2.Http2Stream)>(v1);
label3:
goto label5;
label4:
v12 := @caughtexception;
v13 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v13.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable from listener onStreamActive.", v12);
label5:
v7 = v7 + 1;
goto label1;
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
void removeFromActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream, java.util.Iterator)
{
java.util.Iterator v2;
java.util.Set v3;
io.netty.handler.codec.http2.DefaultHttp2Connection v8, v9;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v1;
int v6, v7;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v5;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v2 := @parameter1: java.util.Iterator;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Set streams>;
v4 = interfaceinvoke v3.<java.util.Set: boolean remove(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy()>();
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int numActiveStreams>;
v7 = v6 - 1;
v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int numActiveStreams> = v7;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
virtualinvoke v8.<io.netty.handler.codec.http2.DefaultHttp2Connection: void notifyClosed(io.netty.handler.codec.http2.Http2Stream)>(v1);
label1:
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
virtualinvoke v9.<io.netty.handler.codec.http2.DefaultHttp2Connection: void removeStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator)>(v1, v2);
return;
}
boolean allowModifications()
{
int v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: int pendingIterations>;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
void incrementPendingIterations()
{
int v1, v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: int pendingIterations>;
v2 = v1 + 1;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: int pendingIterations> = v2;
return;
}
void decrementPendingIterations()
{
java.lang.Throwable v6;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v0;
io.netty.util.internal.logging.InternalLogger v7;
int v1, v2;
java.lang.Object v5;
java.util.Queue v4;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: int pendingIterations>;
v2 = v1 - 1;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: int pendingIterations> = v2;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: boolean allowModifications()>();
if v3 == 0 goto label5;
label1:
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: java.util.Queue pendingEvents>;
v5 = interfaceinvoke v4.<java.util.Queue: java.lang.Object poll()>();
if v5 == null goto label5;
label2:
interfaceinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$Event: void process()>();
label3:
goto label1;
label4:
v6 := @caughtexception;
v7 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v7.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable while processing pending ActiveStreams$Event.", v6);
goto label1;
label5:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
}