final class io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener extends java.lang.Object implements io.netty.handler.codec.http2.Http2FrameListener
{
final io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0;
private void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder)
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public int onDataRead(io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Integer v18, v29, v35;
int[] v21;
io.netty.handler.codec.http2.Http2Exception v14, v19, v20, v45;
boolean v13, v5;
io.netty.handler.codec.http2.Http2LifecycleManager v43;
io.netty.handler.codec.http2.Http2Stream$State v22, v30, v36;
io.netty.handler.codec.http2.Http2FrameListener v41;
io.netty.handler.codec.http2.Http2Error v16, v26, v32;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v37, v38, v39, v40, v42, v46, v48, v6, v9;
java.lang.Throwable v15, v49;
java.lang.Object[] v17, v27, v33;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v3;
int v11, v12, v2, v23, v24, v25, v28, v31, v34, v4;
io.netty.handler.codec.http2.Http2Stream v8;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
java.lang.RuntimeException v47;
io.netty.channel.ChannelFuture v44;
io.netty.handler.codec.http2.Http2Connection v7;
io.netty.handler.codec.http2.Http2LocalFlowController v10;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v7 = v6.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v8 = interfaceinvoke v7.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v10 = virtualinvoke v9.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LocalFlowController flowController()>();
v11 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v12 = v11 + v4;
label01:
v13 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: boolean shouldIgnoreHeadersOrDataFrame(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Stream,java.lang.String)>(v1, v2, v8, "DATA");
label02:
goto label05;
label03:
v14 := @caughtexception;
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean)>(v8, v3, v4, v5);
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int)>(v8, v12);
throw v14;
label04:
v15 := @caughtexception;
v16 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR>;
v17 = newarray (java.lang.Object)[1];
v18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v17[0] = v18;
v19 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v16, v15, "Unhandled error on data stream id %d", v17);
throw v19;
label05:
if v13 == 0 goto label06;
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean)>(v8, v3, v4, v5);
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int)>(v8, v12);
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: void verifyStreamMayHaveExisted(int)>(v2);
return v12;
label06:
v20 = null;
v21 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v22 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v23 = virtualinvoke v22.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v24 = v21[v23];
tableswitch(v24)
{
case 1: goto label09;
case 2: goto label09;
case 3: goto label07;
case 4: goto label07;
default: goto label08;
};
label07:
v25 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v26 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
v27 = newarray (java.lang.Object)[2];
v28 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v28);
v27[0] = v29;
v30 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v27[1] = v30;
v20 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v25, v26, "Stream %d in unexpected state: %s", v27);
goto label09;
label08:
v31 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v32 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v33 = newarray (java.lang.Object)[2];
v34 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v34);
v33[0] = v35;
v36 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v33[1] = v36;
v20 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v31, v32, "Stream %d in unexpected state: %s", v33);
label09:
v37 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
specialinvoke v37.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream)>(v8);
label10:
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean)>(v8, v3, v4, v5);
v38 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
specialinvoke v38.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream)>(v8);
if v20 == null goto label11;
throw v20;
label11:
v39 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
specialinvoke v39.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void verifyContentLength(io.netty.handler.codec.http2.Http2Stream,int,boolean)>(v8, v11, v5);
v40 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v41 = v40.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
v12 = interfaceinvoke v41.<io.netty.handler.codec.http2.Http2FrameListener: int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)>(v1, v2, v3, v4, v5);
if v5 == 0 goto label12;
v42 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v43 = v42.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager>;
v44 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture newSucceededFuture()>();
interfaceinvoke v43.<io.netty.handler.codec.http2.Http2LifecycleManager: void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture)>(v8, v44);
label12:
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int)>(v8, v12);
return v12;
label13:
v45 := @caughtexception;
v46 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
specialinvoke v46.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream)>(v8);
throw v45;
label14:
v47 := @caughtexception;
v48 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
specialinvoke v48.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream)>(v8);
throw v47;
label15:
v49 := @caughtexception;
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2LocalFlowController: boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int)>(v8, v12);
throw v49;
catch io.netty.handler.codec.http2.Http2Exception from label01 to label02 with label03;
catch java.lang.Throwable from label01 to label02 with label04;
catch io.netty.handler.codec.http2.Http2Exception from label10 to label12 with label13;
catch java.lang.RuntimeException from label10 to label12 with label14;
catch java.lang.Throwable from label10 to label12 with label15;
}
public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2Headers v3;
int v2, v4;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)>(v1, v2, v3, 0, 16, 0, v4, v5);
return;
}
public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, short, boolean, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength v72;
io.netty.handler.codec.http2.Http2ConnectionEncoder v80;
io.netty.util.AsciiString v64, v69;
java.lang.Integer v36, v48, v55, v61;
byte v68;
io.netty.handler.codec.http2.Http2Connection$Endpoint v19;
io.netty.handler.codec.http2.Http2LifecycleManager v85;
java.lang.CharSequence v27;
io.netty.handler.codec.http2.Http2FrameListener v83;
io.netty.handler.codec.http2.Http2Headers v3;
io.netty.handler.codec.http2.Http2Error v34, v45, v52, v58, v75;
java.lang.Object[] v35, v46, v53, v59, v76;
long v67;
short v5;
io.netty.handler.codec.http.HttpStatusClass v28, v29;
int[] v40;
io.netty.handler.codec.http2.Http2Exception v39, v50, v57, v63, v77;
boolean v12, v13, v16, v22, v23, v26, v30, v31, v32, v33, v6, v66, v8;
io.netty.handler.codec.http2.Http2Stream$State v20, v21, v38, v41, v49, v56, v62;
java.util.List v65;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v14, v17, v24, v70, v78, v79, v82, v84, v9;
io.netty.channel.ChannelHandlerContext v1;
int v2, v4, v42, v43, v44, v47, v51, v54, v60, v7, v74;
io.netty.handler.codec.http2.Http2Stream v11;
java.lang.Boolean v37;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
java.lang.IllegalArgumentException v73;
io.netty.channel.ChannelFuture v86;
io.netty.handler.codec.http2.Http2Connection v10, v15, v18, v25;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v71;
io.netty.handler.codec.http2.Http2RemoteFlowController v81;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: short;
v6 := @parameter5: boolean;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v10 = v9.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v11 = interfaceinvoke v10.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v12 = 0;
v13 = 0;
if v11 != null goto label03;
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v15 = v14.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v16 = interfaceinvoke v15.<io.netty.handler.codec.http2.Http2Connection: boolean streamMayHaveExisted(int)>(v2);
if v16 != 0 goto label03;
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v18 = v17.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v19 = interfaceinvoke v18.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint remote()>();
v11 = interfaceinvoke v19.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2Stream createStream(int,boolean)>(v2, v8);
v20 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v21 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE>;
if v20 != v21 goto label01;
v22 = 1;
goto label02;
label01:
v22 = 0;
label02:
v12 = v22;
goto label04;
label03:
if v11 == null goto label04;
v13 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: boolean isHeadersReceived()>();
label04:
v23 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: boolean shouldIgnoreHeadersOrDataFrame(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Stream,java.lang.String)>(v1, v2, v11, "HEADERS");
if v23 == 0 goto label05;
return;
label05:
v24 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v25 = v24.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v26 = interfaceinvoke v25.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
if v26 != 0 goto label06;
v27 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: java.lang.CharSequence status()>();
v28 = staticinvoke <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.CharSequence)>(v27);
v29 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL>;
if v28 != v29 goto label06;
v30 = 1;
goto label07;
label06:
v30 = 0;
label07:
v31 = v30;
if v30 != 0 goto label08;
if v8 != 0 goto label09;
label08:
v32 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: boolean isHeadersReceived()>();
if v32 != 0 goto label10;
label09:
v33 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: boolean isTrailersReceived()>();
if v33 == 0 goto label11;
label10:
v34 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v35 = newarray (java.lang.Object)[3];
v36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v35[0] = v36;
v37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v8);
v35[1] = v37;
v38 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v35[2] = v38;
v39 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v2, v34, "Stream %d received too many headers EOS: %s state: %s", v35);
throw v39;
label11:
v40 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v41 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v42 = virtualinvoke v41.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v43 = v40[v42];
tableswitch(v43)
{
case 1: goto label16;
case 2: goto label16;
case 3: goto label13;
case 4: goto label14;
case 5: goto label12;
default: goto label15;
};
label12:
interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream open(boolean)>(v8);
goto label16;
label13:
if v12 != 0 goto label16;
v44 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v45 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
v46 = newarray (java.lang.Object)[2];
v47 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v47);
v46[0] = v48;
v49 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v46[1] = v49;
v50 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v44, v45, "Stream %d in unexpected state: %s", v46);
throw v50;
label14:
v51 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v52 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
v53 = newarray (java.lang.Object)[2];
v54 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v54);
v53[0] = v55;
v56 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v53[1] = v56;
v57 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v51, v52, "Stream %d in unexpected state: %s", v53);
throw v57;
label15:
v58 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v59 = newarray (java.lang.Object)[2];
v60 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v60);
v59[0] = v61;
v62 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v59[1] = v62;
v63 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v58, "Stream %d in unexpected state: %s", v59);
throw v63;
label16:
if v13 != 0 goto label20;
v64 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v65 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: java.util.List getAll(java.lang.Object)>(v64);
if v65 == null goto label20;
v66 = interfaceinvoke v65.<java.util.List: boolean isEmpty()>();
if v66 != 0 goto label20;
label17:
v67 = staticinvoke <io.netty.handler.codec.http.HttpUtil: long normalizeAndGetContentLength(java.util.List,boolean,boolean)>(v65, 0, 1);
v68 = v67 cmp -1L;
if v68 == 0 goto label20;
v69 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: io.netty.handler.codec.Headers setLong(java.lang.Object,long)>(v69, v67);
v70 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v71 = v70.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection$PropertyKey contentLengthKey>;
v72 = new io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength;
specialinvoke v72.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: void <init>(long)>(v67);
interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object)>(v71, v72);
label18:
goto label20;
label19:
v73 := @caughtexception;
v74 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v75 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v76 = newarray (java.lang.Object)[0];
v77 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v74, v75, v73, "Multiple content-length headers received", v76);
throw v77;
label20:
interfaceinvoke v11.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream headersReceived(boolean)>(v31);
v78 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
specialinvoke v78.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void verifyContentLength(io.netty.handler.codec.http2.Http2Stream,int,boolean)>(v11, 0, v8);
v79 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v80 = v79.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v81 = interfaceinvoke v80.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.handler.codec.http2.Http2RemoteFlowController flowController()>();
interfaceinvoke v81.<io.netty.handler.codec.http2.Http2RemoteFlowController: void updateDependencyTree(int,int,short,boolean)>(v2, v4, v5, v6);
v82 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v83 = v82.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v83.<io.netty.handler.codec.http2.Http2FrameListener: void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8);
if v8 == 0 goto label21;
v84 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v85 = v84.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager>;
v86 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture newSucceededFuture()>();
interfaceinvoke v85.<io.netty.handler.codec.http2.Http2LifecycleManager: void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture)>(v11, v86);
label21:
return;
catch java.lang.IllegalArgumentException from label17 to label18 with label19;
}
public void onPriorityRead(io.netty.channel.ChannelHandlerContext, int, int, short, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2ConnectionEncoder v7;
io.netty.handler.codec.http2.Http2FrameListener v10;
io.netty.channel.ChannelHandlerContext v1;
short v4;
int v2, v3;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v6, v9;
io.netty.handler.codec.http2.Http2RemoteFlowController v8;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: short;
v5 := @parameter4: boolean;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v7 = v6.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v8 = interfaceinvoke v7.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.handler.codec.http2.Http2RemoteFlowController flowController()>();
interfaceinvoke v8.<io.netty.handler.codec.http2.Http2RemoteFlowController: void updateDependencyTree(int,int,short,boolean)>(v2, v3, v4, v5);
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v10 = v9.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2FrameListener: void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean)>(v1, v2, v3, v4, v5);
return;
}
public void onRstStreamRead(io.netty.channel.ChannelHandlerContext, int, long) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v12;
long v3;
java.lang.Integer v13;
io.netty.channel.ChannelHandlerContext v1;
int[] v7;
io.netty.handler.codec.http2.Http2Exception v14;
int v10, v2, v9;
io.netty.handler.codec.http2.Http2Stream v6;
io.netty.handler.codec.http2.Http2LifecycleManager v18;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2Stream$State v8;
io.netty.handler.codec.http2.Http2FrameListener v16;
io.netty.channel.ChannelFuture v19;
io.netty.handler.codec.http2.Http2Connection v5;
io.netty.handler.codec.http2.Http2Error v11;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v15, v17, v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v5 = v4.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
if v6 != null goto label1;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: void verifyStreamMayHaveExisted(int)>(v2);
return;
label1:
v7 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v8 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v9 = virtualinvoke v8.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v10 = v7[v9];
lookupswitch(v10)
{
case 4: goto label3;
case 6: goto label2;
default: goto label4;
};
label2:
v11 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v12 = newarray (java.lang.Object)[1];
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v12[0] = v13;
v14 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v11, "RST_STREAM received for IDLE stream %d", v12);
throw v14;
label3:
return;
label4:
v15 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v16 = v15.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v16.<io.netty.handler.codec.http2.Http2FrameListener: void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long)>(v1, v2, v3);
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v18 = v17.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager>;
v19 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture newSucceededFuture()>();
interfaceinvoke v18.<io.netty.handler.codec.http2.Http2LifecycleManager: void closeStream(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture)>(v6, v19);
return;
}
public void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2Settings v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2ConnectionEncoder v3;
io.netty.handler.codec.http2.Http2FrameListener v6;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v2, v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.handler.codec.http2.Http2Settings pollSentSettings()>();
if v4 == null goto label1;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: void applyLocalSettings(io.netty.handler.codec.http2.Http2Settings)>(v4);
label1:
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2FrameListener: void onSettingsAckRead(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
private void applyLocalSettings(io.netty.handler.codec.http2.Http2Settings) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2FrameReader v4;
io.netty.handler.codec.http2.Http2FrameSizePolicy v7;
java.lang.Integer v31, v33;
java.lang.Long v18, v24, v26;
io.netty.handler.codec.http2.Http2Exception v13;
boolean v10, v17;
io.netty.handler.codec.http2.Http2Connection$Endpoint v16, v21;
io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration v6;
io.netty.handler.codec.http2.Http2FrameReader$Configuration v5;
io.netty.handler.codec.http2.Http2Error v11;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v14, v19, v28, v3, v34, v8;
java.lang.Object[] v12;
long v22, v23, v25, v27, v29, v30;
int v32, v36;
java.lang.Boolean v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2Settings v1;
io.netty.handler.codec.http2.Http2Connection v15, v20, v9;
io.netty.handler.codec.http2.Http2LocalFlowController v35;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Settings;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: java.lang.Boolean pushEnabled()>();
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v4 = v3.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameReader frameReader>;
v5 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2FrameReader: io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration()>();
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2FrameReader$Configuration: io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration()>();
v7 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2FrameReader$Configuration: io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy()>();
if v2 == null goto label2;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v9 = v8.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v10 = interfaceinvoke v9.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
if v10 == 0 goto label1;
v11 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v12 = newarray (java.lang.Object)[0];
v13 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v11, "Server sending SETTINGS frame with ENABLE_PUSH specified", v12);
throw v13;
label1:
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v15 = v14.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v16 = interfaceinvoke v15.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v17 = virtualinvoke v2.<java.lang.Boolean: boolean booleanValue()>();
interfaceinvoke v16.<io.netty.handler.codec.http2.Http2Connection$Endpoint: void allowPushTo(boolean)>(v17);
label2:
v18 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: java.lang.Long maxConcurrentStreams()>();
if v18 == null goto label3;
v19 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v20 = v19.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v21 = interfaceinvoke v20.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint remote()>();
v22 = virtualinvoke v18.<java.lang.Long: long longValue()>();
v23 = staticinvoke <java.lang.Math: long min(long,long)>(v22, 2147483647L);
interfaceinvoke v21.<io.netty.handler.codec.http2.Http2Connection$Endpoint: void maxActiveStreams(int)>(v23);
label3:
v24 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: java.lang.Long headerTableSize()>();
if v24 == null goto label4;
v25 = virtualinvoke v24.<java.lang.Long: long longValue()>();
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration: void maxHeaderTableSize(long)>(v25);
label4:
v26 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: java.lang.Long maxHeaderListSize()>();
if v26 == null goto label5;
v27 = virtualinvoke v26.<java.lang.Long: long longValue()>();
v28 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v29 = virtualinvoke v26.<java.lang.Long: long longValue()>();
v30 = virtualinvoke v28.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: long calculateMaxHeaderListSizeGoAway(long)>(v29);
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration: void maxHeaderListSize(long,long)>(v27, v30);
label5:
v31 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: java.lang.Integer maxFrameSize()>();
if v31 == null goto label6;
v32 = virtualinvoke v31.<java.lang.Integer: int intValue()>();
interfaceinvoke v7.<io.netty.handler.codec.http2.Http2FrameSizePolicy: void maxFrameSize(int)>(v32);
label6:
v33 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: java.lang.Integer initialWindowSize()>();
if v33 == null goto label7;
v34 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v35 = virtualinvoke v34.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LocalFlowController flowController()>();
v36 = virtualinvoke v33.<java.lang.Integer: int intValue()>();
interfaceinvoke v35.<io.netty.handler.codec.http2.Http2LocalFlowController: void initialWindowSize(int)>(v36);
label7:
return;
}
public void onSettingsRead(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Settings) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2ConnectionEncoder v6, v9;
io.netty.handler.codec.http2.Http2FrameListener v13;
io.netty.handler.codec.http2.Http2Settings v2;
io.netty.handler.codec.http2.Http2SettingsReceivedConsumer v11, v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v7;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v10, v12, v3, v5, v8;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Settings;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v4 = v3.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2SettingsReceivedConsumer settingsReceivedConsumer>;
if v4 != null goto label1;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v7);
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v9 = v8.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
interfaceinvoke v9.<io.netty.handler.codec.http2.Http2ConnectionEncoder: void remoteSettings(io.netty.handler.codec.http2.Http2Settings)>(v2);
goto label2;
label1:
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v11 = v10.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2SettingsReceivedConsumer settingsReceivedConsumer>;
interfaceinvoke v11.<io.netty.handler.codec.http2.Http2SettingsReceivedConsumer: void consumeReceivedSettings(io.netty.handler.codec.http2.Http2Settings)>(v2);
label2:
v12 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v13 = v12.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v13.<io.netty.handler.codec.http2.Http2FrameListener: void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings)>(v1, v2);
return;
}
public void onPingRead(io.netty.channel.ChannelHandlerContext, long) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2ConnectionEncoder v6;
long v2;
io.netty.handler.codec.http2.Http2FrameListener v9;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v7;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v3, v5, v8;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: long;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v4 = v3.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: boolean autoAckPing>;
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,long,io.netty.channel.ChannelPromise)>(v1, 1, v2, v7);
label1:
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v9 = v8.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v9.<io.netty.handler.codec.http2.Http2FrameListener: void onPingRead(io.netty.channel.ChannelHandlerContext,long)>(v1, v2);
return;
}
public void onPingAckRead(io.netty.channel.ChannelHandlerContext, long) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
long v2;
io.netty.handler.codec.http2.Http2FrameListener v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: long;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v4 = v3.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v4.<io.netty.handler.codec.http2.Http2FrameListener: void onPingAckRead(io.netty.channel.ChannelHandlerContext,long)>(v1, v2);
return;
}
public void onPushPromiseRead(io.netty.channel.ChannelHandlerContext, int, int, io.netty.handler.codec.http2.Http2Headers, int) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Integer v23, v31, v32, v39, v40, v47, v48;
int[] v16;
io.netty.handler.codec.http2.Http2Exception v11, v25, v33, v41, v49;
boolean v15, v28, v36, v44, v8;
io.netty.handler.codec.http2.Http2Connection$Endpoint v52;
io.netty.handler.codec.http2.Http2Stream$State v17, v24;
io.netty.handler.codec.http2.Http2FrameListener v54;
io.netty.handler.codec.http2.Http2Headers v4;
io.netty.handler.codec.http2.Http2Error v20, v29, v37, v45, v9;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v12, v26, v34, v42, v50, v53, v6;
java.lang.Object[] v10, v21, v30, v38, v46;
io.netty.channel.ChannelHandlerContext v1;
int v18, v19, v2, v22, v3, v5;
io.netty.handler.codec.http2.Http2Stream v14;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2PromisedRequestVerifier v27, v35, v43;
io.netty.handler.codec.http2.Http2Connection v13, v51, v7;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Headers;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v7 = virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection()>();
v8 = interfaceinvoke v7.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
if v8 == 0 goto label1;
v9 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v10 = newarray (java.lang.Object)[0];
v11 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v9, "A client cannot push.", v10);
throw v11;
label1:
v12 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v13 = v12.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v14 = interfaceinvoke v13.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v15 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: boolean shouldIgnoreHeadersOrDataFrame(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Stream,java.lang.String)>(v1, v2, v14, "PUSH_PROMISE");
if v15 == 0 goto label2;
return;
label2:
v16 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v17 = interfaceinvoke v14.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v18 = virtualinvoke v17.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v19 = v16[v18];
lookupswitch(v19)
{
case 1: goto label4;
case 2: goto label4;
default: goto label3;
};
label3:
v20 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v21 = newarray (java.lang.Object)[2];
v22 = interfaceinvoke v14.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v22);
v21[0] = v23;
v24 = interfaceinvoke v14.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v21[1] = v24;
v25 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v20, "Stream %d in unexpected state for receiving push promise: %s", v21);
throw v25;
label4:
v26 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v27 = v26.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier>;
v28 = interfaceinvoke v27.<io.netty.handler.codec.http2.Http2PromisedRequestVerifier: boolean isAuthoritative(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers)>(v1, v4);
if v28 != 0 goto label5;
v29 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v30 = newarray (java.lang.Object)[2];
v31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v30[0] = v31;
v32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v30[1] = v32;
v33 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v3, v29, "Promised request on stream %d for promised stream %d is not authoritative", v30);
throw v33;
label5:
v34 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v35 = v34.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier>;
v36 = interfaceinvoke v35.<io.netty.handler.codec.http2.Http2PromisedRequestVerifier: boolean isCacheable(io.netty.handler.codec.http2.Http2Headers)>(v4);
if v36 != 0 goto label6;
v37 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v38 = newarray (java.lang.Object)[2];
v39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v38[0] = v39;
v40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v38[1] = v40;
v41 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v3, v37, "Promised request on stream %d for promised stream %d is not known to be cacheable", v38);
throw v41;
label6:
v42 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v43 = v42.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier>;
v44 = interfaceinvoke v43.<io.netty.handler.codec.http2.Http2PromisedRequestVerifier: boolean isSafe(io.netty.handler.codec.http2.Http2Headers)>(v4);
if v44 != 0 goto label7;
v45 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v46 = newarray (java.lang.Object)[2];
v47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v46[0] = v47;
v48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v46[1] = v48;
v49 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v3, v45, "Promised request on stream %d for promised stream %d is not known to be safe", v46);
throw v49;
label7:
v50 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v51 = v50.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v52 = interfaceinvoke v51.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint remote()>();
interfaceinvoke v52.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2Stream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream)>(v3, v14);
v53 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v54 = v53.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v54.<io.netty.handler.codec.http2.Http2FrameListener: void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int)>(v1, v2, v3, v4, v5);
return;
}
public void onGoAwayRead(io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
int v2;
long v3;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.buffer.ByteBuf;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
virtualinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void onGoAwayRead0(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf)>(v1, v2, v3, v4);
return;
}
public void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext, int, int) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2Stream$State v7, v8;
io.netty.handler.codec.http2.Http2ConnectionEncoder v11;
io.netty.handler.codec.http2.Http2FrameListener v14;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2Connection v5;
int v2, v3;
io.netty.handler.codec.http2.Http2Stream v6;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v10, v13, v4;
io.netty.handler.codec.http2.Http2RemoteFlowController v12;
boolean v9;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v5 = v4.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
if v6 == null goto label1;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
v8 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State CLOSED>;
if v7 == v8 goto label1;
v9 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: boolean streamCreatedAfterGoAwaySent(int)>(v2);
if v9 == 0 goto label2;
label1:
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: void verifyStreamMayHaveExisted(int)>(v2);
return;
label2:
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v11 = v10.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v12 = interfaceinvoke v11.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.handler.codec.http2.Http2RemoteFlowController flowController()>();
interfaceinvoke v12.<io.netty.handler.codec.http2.Http2RemoteFlowController: void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int)>(v6, v3);
v13 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v14 = v13.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v14.<io.netty.handler.codec.http2.Http2FrameListener: void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int)>(v1, v2, v3);
return;
}
public void onUnknownFrame(io.netty.channel.ChannelHandlerContext, byte, int, io.netty.handler.codec.http2.Http2Flags, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
byte v2;
io.netty.buffer.ByteBuf v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2Flags v4;
int v3;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: byte;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Flags;
v5 := @parameter4: io.netty.buffer.ByteBuf;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void onUnknownFrame0(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf)>(v1, v2, v3, v4, v5);
return;
}
private boolean shouldIgnoreHeadersOrDataFrame(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Stream, java.lang.String) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v11, v19, v7;
java.lang.Integer v12, v9;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2Exception v13;
int v2, v26;
io.netty.handler.codec.http2.Http2Stream v3;
java.lang.String v22, v4;
boolean v14, v15, v17, v21, v5;
io.netty.handler.codec.http2.Http2Connection$Endpoint v25;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.channel.Channel v20, v8;
io.netty.handler.codec.http2.Http2Connection v24;
io.netty.util.internal.logging.InternalLogger v16, v18, v6;
io.netty.handler.codec.http2.Http2Error v10;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v23;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Stream;
v4 := @parameter3: java.lang.String;
if v3 != null goto label2;
v5 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: boolean streamCreatedAfterGoAwaySent(int)>(v2);
if v5 == 0 goto label1;
v6 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.util.internal.logging.InternalLogger logger>;
v7 = newarray (java.lang.Object)[3];
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v7[0] = v8;
v7[1] = v4;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v7[2] = v9;
interfaceinvoke v6.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object[])>("{} ignoring {} frame for stream {}. Stream sent after GOAWAY sent", v7);
return 1;
label1:
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: void verifyStreamMayHaveExisted(int)>(v2);
v10 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
v11 = newarray (java.lang.Object)[2];
v11[0] = v4;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v11[1] = v12;
v13 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v2, v10, "Received %s frame for an unknown stream %d", v11);
throw v13;
label2:
v14 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Stream: boolean isResetSent()>();
if v14 != 0 goto label3;
v15 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: boolean streamCreatedAfterGoAwaySent(int)>(v2);
if v15 == 0 goto label7;
label3:
v16 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.util.internal.logging.InternalLogger logger>;
v17 = interfaceinvoke v16.<io.netty.util.internal.logging.InternalLogger: boolean isInfoEnabled()>();
if v17 == 0 goto label6;
v18 = <io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.util.internal.logging.InternalLogger logger>;
v19 = newarray (java.lang.Object)[3];
v20 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v19[0] = v20;
v19[1] = v4;
v21 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Stream: boolean isResetSent()>();
if v21 == 0 goto label4;
v22 = "RST_STREAM sent.";
goto label5;
label4:
v23 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v24 = v23.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v25 = interfaceinvoke v24.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint remote()>();
v26 = interfaceinvoke v25.<io.netty.handler.codec.http2.Http2Connection$Endpoint: int lastStreamKnownByPeer()>();
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Stream created after GOAWAY sent. Last known stream by peer \u0001");
label5:
v19[2] = v22;
interfaceinvoke v18.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object[])>("{} ignoring {} frame for stream {}", v19);
label6:
return 1;
label7:
return 0;
}
private boolean streamCreatedAfterGoAwaySent(int)
{
io.netty.handler.codec.http2.Http2Connection$Endpoint v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
io.netty.handler.codec.http2.Http2Connection v3, v6;
int v1, v9;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v2, v5;
boolean v10, v7, v8;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint remote()>();
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: boolean goAwaySent()>();
if v7 == 0 goto label1;
v8 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2Connection$Endpoint: boolean isValidStreamId(int)>(v1);
if v8 == 0 goto label1;
v9 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2Connection$Endpoint: int lastStreamKnownByPeer()>();
if v1 <= v9 goto label1;
v10 = 1;
goto label2;
label1:
v10 = 0;
label2:
return v10;
}
private void verifyStreamMayHaveExisted(int) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v6;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener v0;
java.lang.Integer v7;
io.netty.handler.codec.http2.Http2Connection v3;
io.netty.handler.codec.http2.Http2Exception v8;
int v1;
io.netty.handler.codec.http2.Http2Error v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v2;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Connection: boolean streamMayHaveExisted(int)>(v1);
if v4 != 0 goto label1;
v5 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v6 = newarray (java.lang.Object)[1];
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v6[0] = v7;
v8 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v5, "Stream %d does not exist", v6);
throw v8;
label1:
return;
}
}