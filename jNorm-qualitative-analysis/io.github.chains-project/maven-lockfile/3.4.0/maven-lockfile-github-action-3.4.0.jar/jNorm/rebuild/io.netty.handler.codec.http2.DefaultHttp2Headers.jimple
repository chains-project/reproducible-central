public class io.netty.handler.codec.http2.DefaultHttp2Headers extends io.netty.handler.codec.DefaultHeaders implements io.netty.handler.codec.http2.Http2Headers
{
private static final io.netty.util.ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR;
static final io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR;
private static final io.netty.handler.codec.DefaultHeaders$ValueValidator VALUE_VALIDATOR;
private io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo;
public void <init>()
{
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: void <init>(boolean)>(1);
return;
}
public void <init>(boolean)
{
io.netty.util.HashingStrategy v2;
io.netty.handler.codec.DefaultHeaders$NameValidator v4;
io.netty.handler.codec.CharSequenceValueConverter v3;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v5;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: boolean;
v2 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
v3 = <io.netty.handler.codec.CharSequenceValueConverter: io.netty.handler.codec.CharSequenceValueConverter INSTANCE>;
if v1 == 0 goto label1;
v4 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR>;
goto label2;
label1:
v4 = <io.netty.handler.codec.DefaultHeaders$NameValidator: io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL>;
label2:
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator)>(v2, v3, v4);
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo> = v5;
return;
}
public void <init>(boolean, int)
{
io.netty.util.HashingStrategy v3;
int v2;
io.netty.handler.codec.DefaultHeaders$NameValidator v5;
io.netty.handler.codec.CharSequenceValueConverter v4;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v6;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
v4 = <io.netty.handler.codec.CharSequenceValueConverter: io.netty.handler.codec.CharSequenceValueConverter INSTANCE>;
if v1 == 0 goto label1;
v5 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR>;
goto label2;
label1:
v5 = <io.netty.handler.codec.DefaultHeaders$NameValidator: io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL>;
label2:
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int)>(v3, v4, v5, v2);
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo> = v6;
return;
}
public void <init>(boolean, boolean, int)
{
io.netty.handler.codec.CharSequenceValueConverter v5;
io.netty.util.HashingStrategy v4;
int v3;
io.netty.handler.codec.DefaultHeaders$NameValidator v6;
io.netty.handler.codec.DefaultHeaders$ValueValidator v7;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v8;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v1, v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
v5 = <io.netty.handler.codec.CharSequenceValueConverter: io.netty.handler.codec.CharSequenceValueConverter INSTANCE>;
if v1 == 0 goto label1;
v6 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR>;
goto label2;
label1:
v6 = <io.netty.handler.codec.DefaultHeaders$NameValidator: io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL>;
label2:
if v2 == 0 goto label3;
v7 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$ValueValidator VALUE_VALIDATOR>;
goto label4;
label3:
v7 = <io.netty.handler.codec.DefaultHeaders$ValueValidator: io.netty.handler.codec.DefaultHeaders$ValueValidator NO_VALIDATION>;
label4:
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int,io.netty.handler.codec.DefaultHeaders$ValueValidator)>(v4, v5, v6, v3, v7);
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo> = v8;
return;
}
protected void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator, boolean, java.lang.CharSequence)
{
java.lang.Object[] v9;
java.lang.CharSequence v3;
io.netty.handler.codec.http2.Http2Exception v10;
io.netty.handler.codec.DefaultHeaders$NameValidator v1, v4, v5;
io.netty.handler.codec.http2.Http2Error v8;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v2, v6, v7;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: io.netty.handler.codec.DefaultHeaders$NameValidator;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.CharSequence;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v1, v2, v3);
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator()>();
v5 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR>;
if v4 != v5 goto label1;
if v2 == 0 goto label1;
v6 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: boolean hasPseudoHeaderFormat(java.lang.CharSequence)>(v3);
if v6 == 0 goto label1;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: boolean contains(java.lang.Object)>(v3);
if v7 == 0 goto label1;
v8 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v9 = newarray (java.lang.Object)[1];
v9[0] = v3;
v10 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v8, "Duplicate HTTP/2 pseudo-header \'%s\' encountered.", v9);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v10);
label1:
return;
}
protected void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator, java.lang.CharSequence, java.lang.CharSequence)
{
java.lang.Object[] v9;
java.lang.CharSequence v2, v3;
io.netty.handler.codec.http2.Http2Exception v10;
int v6;
io.netty.handler.codec.DefaultHeaders$NameValidator v4, v5;
io.netty.handler.codec.http2.Http2Error v8;
io.netty.handler.codec.DefaultHeaders$ValueValidator v1;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v7;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: io.netty.handler.codec.DefaultHeaders$ValueValidator;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: java.lang.CharSequence;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator()>();
v5 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR>;
if v4 != v5 goto label2;
if v3 == null goto label1;
v6 = interfaceinvoke v3.<java.lang.CharSequence: int length()>();
if v6 != 0 goto label2;
label1:
v7 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: boolean hasPseudoHeaderFormat(java.lang.CharSequence)>(v2);
if v7 == 0 goto label2;
v8 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v9 = newarray (java.lang.Object)[1];
v9[0] = v2;
v10 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v8, "HTTP/2 pseudo-header \'%s\' must not be empty.", v9);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v10);
label2:
return;
}
public io.netty.handler.codec.http2.Http2Headers clear()
{
io.netty.handler.codec.Headers v2;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v1;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo> = v1;
v2 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers clear()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.netty.util.HashingStrategy v3;
java.lang.Object v1;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v2, v4, v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.http2.Http2Headers;
if v2 == 0 goto label1;
v3 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: boolean equals(io.netty.handler.codec.Headers,io.netty.util.HashingStrategy)>(v1, v3);
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int hashCode()
{
int v2;
io.netty.util.HashingStrategy v1;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: int hashCode(io.netty.util.HashingStrategy)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence)
{
java.lang.CharSequence v1;
io.netty.util.AsciiString v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v3, v1);
return v0;
}
public io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence)
{
java.lang.CharSequence v1;
io.netty.util.AsciiString v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v3, v1);
return v0;
}
public io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence)
{
java.lang.CharSequence v1;
io.netty.util.AsciiString v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v3, v1);
return v0;
}
public io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence)
{
java.lang.CharSequence v1;
io.netty.util.AsciiString v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v3, v1);
return v0;
}
public io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence)
{
java.lang.CharSequence v1;
io.netty.util.AsciiString v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v3, v1);
return v0;
}
public java.lang.CharSequence method()
{
io.netty.util.AsciiString v2;
java.lang.Object v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
public java.lang.CharSequence scheme()
{
io.netty.util.AsciiString v2;
java.lang.Object v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
public java.lang.CharSequence authority()
{
io.netty.util.AsciiString v2;
java.lang.Object v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
public java.lang.CharSequence path()
{
io.netty.util.AsciiString v2;
java.lang.Object v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
public java.lang.CharSequence status()
{
io.netty.util.AsciiString v2;
java.lang.Object v3;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
public boolean contains(java.lang.CharSequence, java.lang.CharSequence)
{
java.lang.CharSequence v1, v2;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v1, v2, 0);
return v3;
}
public boolean contains(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
io.netty.util.HashingStrategy v4;
java.lang.CharSequence v1, v2;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: boolean;
if v3 == 0 goto label1;
v4 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER>;
goto label2;
label1:
v4 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
label2:
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers: boolean contains(java.lang.Object,java.lang.Object,io.netty.util.HashingStrategy)>(v1, v2, v4);
return v5;
}
protected final io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int, java.lang.CharSequence, java.lang.CharSequence, io.netty.handler.codec.DefaultHeaders$HeaderEntry)
{
java.lang.CharSequence v2, v3;
io.netty.handler.codec.http2.DefaultHttp2Headers$Http2HeaderEntry v5;
int v1;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v4;
io.netty.handler.codec.http2.DefaultHttp2Headers v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: java.lang.CharSequence;
v4 := @parameter3: io.netty.handler.codec.DefaultHeaders$HeaderEntry;
v5 = new io.netty.handler.codec.http2.DefaultHttp2Headers$Http2HeaderEntry;
specialinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2Headers$Http2HeaderEntry: void <init>(io.netty.handler.codec.http2.DefaultHttp2Headers,int,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.DefaultHeaders$HeaderEntry)>(v0, v1, v2, v3, v4);
return v5;
}
static void <clinit>()
{
io.netty.handler.codec.http2.DefaultHttp2Headers$3 v2;
io.netty.handler.codec.http2.DefaultHttp2Headers$2 v1;
io.netty.handler.codec.http2.DefaultHttp2Headers$1 v0;
v0 = new io.netty.handler.codec.http2.DefaultHttp2Headers$1;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Headers$1: void <init>()>();
<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.util.ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR> = v0;
v1 = new io.netty.handler.codec.http2.DefaultHttp2Headers$2;
specialinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Headers$2: void <init>()>();
<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR> = v1;
v2 = new io.netty.handler.codec.http2.DefaultHttp2Headers$3;
specialinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Headers$3: void <init>()>();
<io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.handler.codec.DefaultHeaders$ValueValidator VALUE_VALIDATOR> = v2;
return;
}
}