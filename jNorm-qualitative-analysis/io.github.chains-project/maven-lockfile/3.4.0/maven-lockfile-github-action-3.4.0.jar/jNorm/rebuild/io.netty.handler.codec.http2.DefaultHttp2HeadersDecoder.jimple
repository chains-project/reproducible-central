public class io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder extends java.lang.Object implements io.netty.handler.codec.http2.Http2HeadersDecoder, io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration
{
private static final float HEADERS_COUNT_WEIGHT_NEW;
private static final float HEADERS_COUNT_WEIGHT_HISTORICAL;
private final io.netty.handler.codec.http2.HpackDecoder hpackDecoder;
private final boolean validateHeaders;
private final boolean validateHeaderValues;
private long maxHeaderListSizeGoAway;
private float headerArraySizeAccumulator;
public void <init>()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean)>(1);
return;
}
public void <init>(boolean)
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean,long)>(v1, 8192L);
return;
}
public void <init>(boolean, boolean)
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
boolean v1, v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean,boolean,long)>(v1, v2, 8192L);
return;
}
public void <init>(boolean, long)
{
io.netty.handler.codec.http2.HpackDecoder v3;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: long;
v3 = new io.netty.handler.codec.http2.HpackDecoder;
specialinvoke v3.<io.netty.handler.codec.http2.HpackDecoder: void <init>(long)>(v2);
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean,boolean,io.netty.handler.codec.http2.HpackDecoder)>(v1, 0, v3);
return;
}
public void <init>(boolean, boolean, long)
{
io.netty.handler.codec.http2.HpackDecoder v4;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v3;
boolean v1, v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 := @parameter2: long;
v4 = new io.netty.handler.codec.http2.HpackDecoder;
specialinvoke v4.<io.netty.handler.codec.http2.HpackDecoder: void <init>(long)>(v3);
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean,boolean,io.netty.handler.codec.http2.HpackDecoder)>(v1, v2, v4);
return;
}
public void <init>(boolean, long, int)
{
io.netty.handler.codec.http2.HpackDecoder v4;
int v3;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: long;
v3 := @parameter2: int;
v4 = new io.netty.handler.codec.http2.HpackDecoder;
specialinvoke v4.<io.netty.handler.codec.http2.HpackDecoder: void <init>(long)>(v2);
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean,boolean,io.netty.handler.codec.http2.HpackDecoder)>(v1, 0, v4);
return;
}
void <init>(boolean, boolean, io.netty.handler.codec.http2.HpackDecoder)
{
io.netty.handler.codec.http2.HpackDecoder v3;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
java.lang.Object v4;
long v5, v6;
boolean v1, v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 := @parameter2: io.netty.handler.codec.http2.HpackDecoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: float headerArraySizeAccumulator> = 8.0F;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "hpackDecoder");
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.HpackDecoder hpackDecoder> = v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaders> = v1;
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaderValues> = v2;
v5 = virtualinvoke v3.<io.netty.handler.codec.http2.HpackDecoder: long getMaxHeaderListSize()>();
v6 = staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: long calculateMaxHeaderListSizeGoAway(long)>(v5);
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: long maxHeaderListSizeGoAway> = v6;
return;
}
public void maxHeaderTableSize(long) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v1;
io.netty.handler.codec.http2.HpackDecoder v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: long;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.HpackDecoder hpackDecoder>;
virtualinvoke v2.<io.netty.handler.codec.http2.HpackDecoder: void setMaxHeaderTableSize(long)>(v1);
return;
}
public long maxHeaderTableSize()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v2;
io.netty.handler.codec.http2.HpackDecoder v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.HpackDecoder hpackDecoder>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.HpackDecoder: long getMaxHeaderTableSize()>();
return v2;
}
public void maxHeaderListSize(long, long) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v6;
io.netty.handler.codec.http2.HpackDecoder v10;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v1, v2;
byte v3, v4;
java.lang.Long v7, v8;
io.netty.handler.codec.http2.Http2Exception v9;
io.netty.handler.codec.http2.Http2Error v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = v2 cmp v1;
if v3 < 0 goto label1;
v4 = v2 cmp 0L;
if v4 >= 0 goto label2;
label1:
v5 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR>;
v6 = newarray (java.lang.Object)[2];
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v2);
v6[0] = v7;
v8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v1);
v6[1] = v8;
v9 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v5, "Header List Size GO_AWAY %d must be non-negative and >= %d", v6);
throw v9;
label2:
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.HpackDecoder hpackDecoder>;
virtualinvoke v10.<io.netty.handler.codec.http2.HpackDecoder: void setMaxHeaderListSize(long)>(v1);
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: long maxHeaderListSizeGoAway> = v2;
return;
}
public long maxHeaderListSize()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v2;
io.netty.handler.codec.http2.HpackDecoder v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.HpackDecoder hpackDecoder>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.HpackDecoder: long getMaxHeaderListSize()>();
return v2;
}
public long maxHeaderListSizeGoAway()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
long v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: long maxHeaderListSizeGoAway>;
return v1;
}
public io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration configuration()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
return v0;
}
public io.netty.handler.codec.http2.Http2Headers decodeHeaders(int, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v12;
java.lang.Object[] v14;
io.netty.handler.codec.http2.HpackDecoder v4;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http2.Http2Exception v11, v16;
int v1, v6;
java.lang.String v15;
boolean v5;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
io.netty.handler.codec.http2.Http2Headers v3;
io.netty.handler.codec.http2.Http2Error v13;
float v10, v7, v8, v9;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.buffer.ByteBuf;
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.Http2Headers newHeaders()>();
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: io.netty.handler.codec.http2.HpackDecoder hpackDecoder>;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaders>;
virtualinvoke v4.<io.netty.handler.codec.http2.HpackDecoder: void decode(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,boolean)>(v1, v2, v3, v5);
v6 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: int size()>();
v7 = 0.2F * v6;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: float headerArraySizeAccumulator>;
v9 = 0.8F * v8;
v10 = v7 + v9;
v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: float headerArraySizeAccumulator> = v10;
label2:
return v3;
label3:
v11 := @caughtexception;
throw v11;
label4:
v12 := @caughtexception;
v13 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error COMPRESSION_ERROR>;
v14 = newarray (java.lang.Object)[1];
v15 = virtualinvoke v12.<java.lang.Throwable: java.lang.String getMessage()>();
v14[0] = v15;
v16 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v13, v12, "Error decoding headers: %s", v14);
throw v16;
catch io.netty.handler.codec.http2.Http2Exception from label1 to label2 with label3;
catch java.lang.Throwable from label1 to label2 with label4;
}
protected final int numberOfHeadersGuess()
{
float v1;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: float headerArraySizeAccumulator>;
return v1;
}
protected final boolean validateHeaders()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaders>;
return v1;
}
protected boolean validateHeaderValues()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaderValues>;
return v1;
}
protected io.netty.handler.codec.http2.Http2Headers newHeaders()
{
float v4;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v0;
io.netty.handler.codec.http2.DefaultHttp2Headers v1;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v1 = new io.netty.handler.codec.http2.DefaultHttp2Headers;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaders>;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: boolean validateHeaderValues>;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: float headerArraySizeAccumulator>;
specialinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Headers: void <init>(boolean,boolean,int)>(v2, v3, v4);
return v1;
}
}