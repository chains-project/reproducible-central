public class io.netty.handler.codec.http2.DelegatingDecompressorFrameListener extends io.netty.handler.codec.http2.Http2FrameListenerDecorator
{
private final io.netty.handler.codec.http2.Http2Connection connection;
private final boolean strict;
private boolean flowControllerInitialized;
private final io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey;
public void <init>(io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2FrameListener)
{
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
io.netty.handler.codec.http2.Http2FrameListener v2;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: io.netty.handler.codec.http2.Http2FrameListener;
specialinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,boolean)>(v1, v2, 1);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2FrameListener, boolean)
{
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$1 v5;
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v4;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
io.netty.handler.codec.http2.Http2FrameListener v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: io.netty.handler.codec.http2.Http2FrameListener;
v3 := @parameter2: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameListenerDecorator: void <init>(io.netty.handler.codec.http2.Http2FrameListener)>(v2);
v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection connection> = v1;
v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: boolean strict> = v3;
v4 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey()>();
v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey> = v4;
v5 = new io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$1;
specialinvoke v5.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$1: void <init>(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener)>(v0);
interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: void addListener(io.netty.handler.codec.http2.Http2Connection$Listener)>(v5);
return;
}
public int onDataRead(io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Integer v38;
io.netty.handler.codec.http2.Http2Exception v32, v39;
boolean v17, v24, v25, v26, v27, v5;
io.netty.handler.codec.http2.Http2Connection$Endpoint v21;
io.netty.handler.codec.http2.Http2FlowController v22;
io.netty.handler.codec.http2.Http2FrameListener v18, v29, v9;
io.netty.handler.codec.http2.Http2Error v35;
java.lang.Throwable v31, v33;
java.lang.Object[] v14, v36;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor v8;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v15, v16, v19, v23, v3;
int v10, v12, v13, v2, v28, v30, v34, v37, v4;
io.netty.handler.codec.http2.Http2Stream v7;
io.netty.channel.embedded.EmbeddedChannel v11;
io.netty.handler.codec.http2.Http2Connection v20, v6;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection connection>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v8 = virtualinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor decompressor(io.netty.handler.codec.http2.Http2Stream)>(v7);
if v8 != null goto label01;
v9 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2FrameListener listener>;
v10 = interfaceinvoke v9.<io.netty.handler.codec.http2.Http2FrameListener: int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)>(v1, v2, v3, v4, v5);
return v10;
label01:
v11 = virtualinvoke v8.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: io.netty.channel.embedded.EmbeddedChannel decompressor()>();
v12 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v13 = v12 + v4;
virtualinvoke v8.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: void incrementCompressedBytes(int)>(v13);
label02:
v14 = newarray (java.lang.Object)[1];
v15 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
v14[0] = v15;
virtualinvoke v11.<io.netty.channel.embedded.EmbeddedChannel: boolean writeInbound(java.lang.Object[])>(v14);
v16 = staticinvoke <io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel)>(v11);
if v16 != null goto label06;
if v5 == 0 goto label03;
v17 = virtualinvoke v11.<io.netty.channel.embedded.EmbeddedChannel: boolean finish()>();
if v17 == 0 goto label03;
v16 = staticinvoke <io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel)>(v11);
label03:
if v16 != null goto label06;
if v5 == 0 goto label04;
v18 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2FrameListener listener>;
v19 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
interfaceinvoke v18.<io.netty.handler.codec.http2.Http2FrameListener: int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)>(v1, v2, v19, v4, 1);
label04:
virtualinvoke v8.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: void incrementDecompressedBytes(int)>(v13);
label05:
return v13;
label06:
v20 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection connection>;
v21 = interfaceinvoke v20.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v22 = interfaceinvoke v21.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2FlowController flowController()>();
virtualinvoke v8.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: void incrementDecompressedBytes(int)>(v4);
label07:
v23 = staticinvoke <io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel)>(v11);
if v23 != null goto label08;
if v5 == 0 goto label08;
v24 = 1;
goto label09;
label08:
v24 = 0;
label09:
v25 = v24;
if v24 == 0 goto label12;
v26 = virtualinvoke v11.<io.netty.channel.embedded.EmbeddedChannel: boolean finish()>();
if v26 == 0 goto label12;
v23 = staticinvoke <io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel)>(v11);
if v23 != null goto label10;
v27 = 1;
goto label11;
label10:
v27 = 0;
label11:
v25 = v27;
label12:
v28 = virtualinvoke v16.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v8.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: void incrementDecompressedBytes(int)>(v28);
v29 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2FrameListener listener>;
v30 = interfaceinvoke v29.<io.netty.handler.codec.http2.Http2FrameListener: int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)>(v1, v2, v16, v4, v25);
interfaceinvoke v22.<io.netty.handler.codec.http2.Http2LocalFlowController: boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int)>(v7, v30);
if v23 == null goto label13;
v4 = 0;
virtualinvoke v16.<io.netty.buffer.ByteBuf: boolean release()>();
v16 = v23;
goto label07;
label13:
virtualinvoke v16.<io.netty.buffer.ByteBuf: boolean release()>();
label14:
return 0;
label15:
v31 := @caughtexception;
virtualinvoke v16.<io.netty.buffer.ByteBuf: boolean release()>();
throw v31;
label16:
v32 := @caughtexception;
throw v32;
label17:
v33 := @caughtexception;
v34 = interfaceinvoke v7.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v35 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR>;
v36 = newarray (java.lang.Object)[1];
v37 = interfaceinvoke v7.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v37);
v36[0] = v38;
v39 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v34, v35, v33, "Decompressor error detected while delegating data read on streamId %d", v36);
throw v39;
catch java.lang.Throwable from label06 to label13 with label15;
catch io.netty.handler.codec.http2.Http2Exception from label02 to label05 with label16;
catch io.netty.handler.codec.http2.Http2Exception from label06 to label14 with label16;
catch java.lang.Throwable from label02 to label05 with label17;
catch java.lang.Throwable from label06 to label14 with label17;
catch java.lang.Throwable from label15 to label16 with label17;
}
public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2Headers v3;
int v2, v4;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
io.netty.handler.codec.http2.Http2FrameListener v6;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: void initDecompressor(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,boolean)>(v1, v2, v3, v5);
v6 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2FrameListener: void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)>(v1, v2, v3, v4, v5);
return;
}
public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, short, boolean, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2FrameListener v9;
io.netty.channel.ChannelHandlerContext v1;
short v5;
io.netty.handler.codec.http2.Http2Headers v3;
int v2, v4, v7;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
boolean v6, v8;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: short;
v6 := @parameter5: boolean;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: void initDecompressor(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,boolean)>(v1, v2, v3, v8);
v9 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v9.<io.netty.handler.codec.http2.Http2FrameListener: void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8);
return;
}
protected io.netty.channel.embedded.EmbeddedChannel newContentDecompressor(io.netty.channel.ChannelHandlerContext, java.lang.CharSequence) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelId v26, v39, v9;
io.netty.util.AsciiString v18, v20, v3, v35, v5;
io.netty.handler.codec.compression.BrotliDecoder v46;
io.netty.handler.codec.compression.ZlibDecoder v17, v33;
boolean v12, v19, v21, v22, v29, v34, v36, v4, v42, v6;
java.lang.CharSequence v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelMetadata v11, v28, v41;
io.netty.channel.embedded.EmbeddedChannel v24, v37, v7;
io.netty.handler.codec.compression.ZlibWrapper v16, v23;
io.netty.channel.ChannelHandler[] v15, v32, v45;
io.netty.channel.Channel v10, v13, v25, v27, v30, v38, v40, v43, v8;
io.netty.channel.ChannelConfig v14, v31, v44;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.CharSequence;
v3 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString GZIP>;
v4 = virtualinvoke v3.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v2);
if v4 != 0 goto label1;
v5 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString X_GZIP>;
v6 = virtualinvoke v5.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v2);
if v6 == 0 goto label2;
label1:
v7 = new io.netty.channel.embedded.EmbeddedChannel;
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v9 = interfaceinvoke v8.<io.netty.channel.Channel: io.netty.channel.ChannelId id()>();
v10 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v11 = interfaceinvoke v10.<io.netty.channel.Channel: io.netty.channel.ChannelMetadata metadata()>();
v12 = virtualinvoke v11.<io.netty.channel.ChannelMetadata: boolean hasDisconnect()>();
v13 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v14 = interfaceinvoke v13.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v15 = newarray (io.netty.channel.ChannelHandler)[1];
v16 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper GZIP>;
v17 = staticinvoke <io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper)>(v16);
v15[0] = v17;
specialinvoke v7.<io.netty.channel.embedded.EmbeddedChannel: void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[])>(v9, v12, v14, v15);
return v7;
label2:
v18 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString DEFLATE>;
v19 = virtualinvoke v18.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v2);
if v19 != 0 goto label3;
v20 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString X_DEFLATE>;
v21 = virtualinvoke v20.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v2);
if v21 == 0 goto label6;
label3:
v22 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: boolean strict>;
if v22 == 0 goto label4;
v23 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
goto label5;
label4:
v23 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE>;
label5:
v24 = new io.netty.channel.embedded.EmbeddedChannel;
v25 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v26 = interfaceinvoke v25.<io.netty.channel.Channel: io.netty.channel.ChannelId id()>();
v27 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v28 = interfaceinvoke v27.<io.netty.channel.Channel: io.netty.channel.ChannelMetadata metadata()>();
v29 = virtualinvoke v28.<io.netty.channel.ChannelMetadata: boolean hasDisconnect()>();
v30 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v31 = interfaceinvoke v30.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v32 = newarray (io.netty.channel.ChannelHandler)[1];
v33 = staticinvoke <io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper)>(v23);
v32[0] = v33;
specialinvoke v24.<io.netty.channel.embedded.EmbeddedChannel: void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[])>(v26, v29, v31, v32);
return v24;
label6:
v34 = staticinvoke <io.netty.handler.codec.compression.Brotli: boolean isAvailable()>();
if v34 == 0 goto label7;
v35 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString BR>;
v36 = virtualinvoke v35.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v2);
if v36 == 0 goto label7;
v37 = new io.netty.channel.embedded.EmbeddedChannel;
v38 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v39 = interfaceinvoke v38.<io.netty.channel.Channel: io.netty.channel.ChannelId id()>();
v40 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v41 = interfaceinvoke v40.<io.netty.channel.Channel: io.netty.channel.ChannelMetadata metadata()>();
v42 = virtualinvoke v41.<io.netty.channel.ChannelMetadata: boolean hasDisconnect()>();
v43 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v44 = interfaceinvoke v43.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v45 = newarray (io.netty.channel.ChannelHandler)[1];
v46 = new io.netty.handler.codec.compression.BrotliDecoder;
specialinvoke v46.<io.netty.handler.codec.compression.BrotliDecoder: void <init>()>();
v45[0] = v46;
specialinvoke v37.<io.netty.channel.embedded.EmbeddedChannel: void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[])>(v39, v42, v44, v45);
return v37;
label7:
return null;
}
protected java.lang.CharSequence getTargetContentEncoding(java.lang.CharSequence) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.util.AsciiString v2;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
java.lang.CharSequence v1;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: java.lang.CharSequence;
v2 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString IDENTITY>;
return v2;
}
private void initDecompressor(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor v11, v7;
io.netty.util.AsciiString v14, v16, v17, v18, v8;
io.netty.channel.ChannelHandlerContext v1;
int v2;
io.netty.handler.codec.http2.Http2Stream v6;
boolean v15, v19, v4;
io.netty.handler.codec.http2.Http2Connection$Endpoint v21, v24;
java.lang.CharSequence v13;
io.netty.channel.embedded.EmbeddedChannel v10;
io.netty.handler.codec.http2.Http2FlowController v25;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$ConsumedBytesConverter v22;
io.netty.handler.codec.http2.Http2Connection v20, v23, v5;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v12;
io.netty.handler.codec.http2.Http2Headers v3;
java.lang.Object v9;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: boolean;
v5 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection connection>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
if v6 != null goto label1;
return;
label1:
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor decompressor(io.netty.handler.codec.http2.Http2Stream)>(v6);
if v7 != null goto label4;
if v4 != 0 goto label4;
v8 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_ENCODING>;
v9 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: java.lang.Object get(java.lang.Object)>(v8);
if v9 != null goto label2;
v9 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString IDENTITY>;
label2:
v10 = virtualinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.channel.embedded.EmbeddedChannel newContentDecompressor(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence)>(v1, v9);
if v10 == null goto label4;
v11 = new io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor;
specialinvoke v11.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: void <init>(io.netty.channel.embedded.EmbeddedChannel)>(v10);
v7 = v11;
v12 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey>;
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object)>(v12, v11);
v13 = virtualinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: java.lang.CharSequence getTargetContentEncoding(java.lang.CharSequence)>(v9);
v14 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString IDENTITY>;
v15 = virtualinvoke v14.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v13);
if v15 == 0 goto label3;
v16 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_ENCODING>;
interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: boolean remove(java.lang.Object)>(v16);
goto label4;
label3:
v17 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_ENCODING>;
interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v17, v13);
label4:
if v7 == null goto label5;
v18 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
interfaceinvoke v3.<io.netty.handler.codec.http2.Http2Headers: boolean remove(java.lang.Object)>(v18);
v19 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: boolean flowControllerInitialized>;
if v19 != 0 goto label5;
v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: boolean flowControllerInitialized> = 1;
v20 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection connection>;
v21 = interfaceinvoke v20.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v22 = new io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$ConsumedBytesConverter;
v23 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection connection>;
v24 = interfaceinvoke v23.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v25 = interfaceinvoke v24.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2FlowController flowController()>();
specialinvoke v22.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$ConsumedBytesConverter: void <init>(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener,io.netty.handler.codec.http2.Http2LocalFlowController)>(v0, v25);
interfaceinvoke v21.<io.netty.handler.codec.http2.Http2Connection$Endpoint: void flowController(io.netty.handler.codec.http2.Http2FlowController)>(v22);
label5:
return;
}
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor decompressor(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.Http2Connection$PropertyKey v2;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v3;
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener v0;
v0 := @this: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener: io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey>;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v2);
label1:
return v3;
}
private static void cleanup(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor)
{
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor v0;
io.netty.channel.embedded.EmbeddedChannel v1;
v0 := @parameter0: io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor;
v1 = virtualinvoke v0.<io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor: io.netty.channel.embedded.EmbeddedChannel decompressor()>();
virtualinvoke v1.<io.netty.channel.embedded.EmbeddedChannel: boolean finishAndReleaseAll()>();
return;
}
private static io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel)
{
java.lang.Object v1;
boolean v2;
io.netty.channel.embedded.EmbeddedChannel v0;
v0 := @parameter0: io.netty.channel.embedded.EmbeddedChannel;
label1:
v1 = virtualinvoke v0.<io.netty.channel.embedded.EmbeddedChannel: java.lang.Object readInbound()>();
if v1 != null goto label2;
return null;
label2:
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v2 != 0 goto label3;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
goto label1;
label3:
return v1;
}
}