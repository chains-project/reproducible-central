final class io.netty.handler.codec.http2.HpackStaticTable extends java.lang.Object
{
static final int NOT_FOUND;
private static final java.util.List STATIC_TABLE;
private static final int HEADER_NAMES_TABLE_SIZE;
private static final int HEADER_NAMES_TABLE_SHIFT;
private static final io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] HEADER_NAMES;
private static final int HEADERS_WITH_NON_EMPTY_VALUES_TABLE_SIZE;
private static final int HEADERS_WITH_NON_EMPTY_VALUES_TABLE_SHIFT;
private static final io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] HEADERS_WITH_NON_EMPTY_VALUES;
static final int length;
private static io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)
{
io.netty.util.AsciiString v2, v3;
java.lang.String v0;
io.netty.handler.codec.http2.HpackHeaderField v1;
v0 := @parameter0: java.lang.String;
v1 = new io.netty.handler.codec.http2.HpackHeaderField;
v2 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString cached(java.lang.String)>(v0);
v3 = <io.netty.util.AsciiString: io.netty.util.AsciiString EMPTY_STRING>;
specialinvoke v1.<io.netty.handler.codec.http2.HpackHeaderField: void <init>(java.lang.CharSequence,java.lang.CharSequence)>(v2, v3);
return v1;
}
private static io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String, java.lang.String)
{
io.netty.util.AsciiString v3, v4;
java.lang.String v0, v1;
io.netty.handler.codec.http2.HpackHeaderField v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = new io.netty.handler.codec.http2.HpackHeaderField;
v3 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString cached(java.lang.String)>(v0);
v4 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString cached(java.lang.String)>(v1);
specialinvoke v2.<io.netty.handler.codec.http2.HpackHeaderField: void <init>(java.lang.CharSequence,java.lang.CharSequence)>(v3, v4);
return v2;
}
static io.netty.handler.codec.http2.HpackHeaderField getEntry(int)
{
java.util.List v1;
int v0, v2;
java.lang.Object v3;
v0 := @parameter0: int;
v1 = <io.netty.handler.codec.http2.HpackStaticTable: java.util.List STATIC_TABLE>;
v2 = v0 - 1;
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v2);
return v3;
}
static int getIndex(java.lang.CharSequence)
{
java.lang.CharSequence v0;
int v2, v3;
io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex v1;
v0 := @parameter0: java.lang.CharSequence;
v1 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex getEntry(java.lang.CharSequence)>(v0);
if v1 != null goto label1;
v2 = (int) -1;
v3 = v2;
goto label2;
label1:
v3 = v1.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: int index>;
label2:
return v3;
}
static int getIndexInsensitive(java.lang.CharSequence, java.lang.CharSequence)
{
io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex v9;
io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex v3;
io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] v8;
int v10, v15, v16, v2, v5, v6, v7;
boolean v12, v14, v4;
java.lang.CharSequence v0, v1, v11, v13;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v2 != 0 goto label4;
v3 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex getEntry(java.lang.CharSequence)>(v0);
if v3 == null goto label1;
v4 = v3.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: boolean emptyValue>;
if v4 != 0 goto label2;
label1:
v5 = (int) -1;
v6 = v5;
goto label3;
label2:
v6 = v3.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: int index>;
label3:
return v6;
label4:
v7 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: int headerBucket(java.lang.CharSequence)>(v1);
v8 = <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] HEADERS_WITH_NON_EMPTY_VALUES>;
v9 = v8[v7];
if v9 != null goto label5;
v10 = (int) -1;
return v10;
label5:
v11 = v9.<io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex: java.lang.CharSequence name>;
v12 = staticinvoke <io.netty.handler.codec.http2.HpackUtil: boolean equalsVariableTime(java.lang.CharSequence,java.lang.CharSequence)>(v11, v0);
if v12 == 0 goto label6;
v13 = v9.<io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex: java.lang.CharSequence value>;
v14 = staticinvoke <io.netty.handler.codec.http2.HpackUtil: boolean equalsVariableTime(java.lang.CharSequence,java.lang.CharSequence)>(v13, v1);
if v14 == 0 goto label6;
v15 = v9.<io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex: int index>;
return v15;
label6:
v16 = (int) -1;
return v16;
}
private static io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex getEntry(java.lang.CharSequence)
{
io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] v2;
java.lang.CharSequence v0, v4;
int v1;
io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex v3, v6;
boolean v5;
v0 := @parameter0: java.lang.CharSequence;
v1 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: int headerNameBucket(java.lang.CharSequence)>(v0);
v2 = <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] HEADER_NAMES>;
v3 = v2[v1];
if v3 != null goto label1;
return null;
label1:
v4 = v3.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: java.lang.CharSequence name>;
v5 = staticinvoke <io.netty.handler.codec.http2.HpackUtil: boolean equalsVariableTime(java.lang.CharSequence,java.lang.CharSequence)>(v4, v0);
if v5 == 0 goto label2;
v6 = v3;
goto label3;
label2:
v6 = null;
label3:
return v6;
}
private static int headerNameBucket(java.lang.CharSequence)
{
int v1, v2;
java.lang.CharSequence v0;
v0 := @parameter0: java.lang.CharSequence;
v1 = <io.netty.handler.codec.http2.HpackStaticTable: int HEADER_NAMES_TABLE_SHIFT>;
v2 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: int bucket(java.lang.CharSequence,int,int)>(v0, v1, 511);
return v2;
}
private static int headerBucket(java.lang.CharSequence)
{
int v1, v2;
java.lang.CharSequence v0;
v0 := @parameter0: java.lang.CharSequence;
v1 = <io.netty.handler.codec.http2.HpackStaticTable: int HEADERS_WITH_NON_EMPTY_VALUES_TABLE_SHIFT>;
v2 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: int bucket(java.lang.CharSequence,int,int)>(v0, v1, 63);
return v2;
}
private static int bucket(java.lang.CharSequence, int, int)
{
java.lang.CharSequence v0;
int v1, v2, v3, v4, v5;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <io.netty.util.AsciiString: int hashCode(java.lang.CharSequence)>(v0);
v4 = v3 >> v1;
v5 = v4 & v2;
return v5;
}
private void <init>()
{
io.netty.handler.codec.http2.HpackStaticTable v0;
v0 := @this: io.netty.handler.codec.http2.HpackStaticTable;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
byte v64, v88;
java.lang.CharSequence v100, v101, v105, v106, v69, v73, v74, v77, v78, v82, v84, v93, v95;
io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex v72, v81;
io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] v103, v89, v97;
java.lang.String v102, v79;
io.netty.handler.codec.http2.HpackHeaderField[] v0;
java.lang.IllegalStateException v76, v99;
boolean v63, v75, v86, v87;
io.netty.handler.codec.http2.HpackHeaderField v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v6, v60, v61, v68, v7, v8, v9, v92;
java.util.List v107, v62, v66, v90;
io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex v104, v98;
int v108, v67, v70, v83, v85, v91, v94, v96;
io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] v65, v71, v80;
v0 = newarray (io.netty.handler.codec.http2.HpackHeaderField)[61];
v1 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>(":authority");
v0[0] = v1;
v2 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":method", "GET");
v0[1] = v2;
v3 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":method", "POST");
v0[2] = v3;
v4 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":path", "/");
v0[3] = v4;
v5 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":path", "/index.html");
v0[4] = v5;
v6 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":scheme", "http");
v0[5] = v6;
v7 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":scheme", "https");
v0[6] = v7;
v8 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "200");
v0[7] = v8;
v9 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "204");
v0[8] = v9;
v10 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "206");
v0[9] = v10;
v11 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "304");
v0[10] = v11;
v12 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "400");
v0[11] = v12;
v13 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "404");
v0[12] = v13;
v14 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>(":status", "500");
v0[13] = v14;
v15 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("accept-charset");
v0[14] = v15;
v16 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String)>("accept-encoding", "gzip, deflate");
v0[15] = v16;
v17 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("accept-language");
v0[16] = v17;
v18 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("accept-ranges");
v0[17] = v18;
v19 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("accept");
v0[18] = v19;
v20 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("access-control-allow-origin");
v0[19] = v20;
v21 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("age");
v0[20] = v21;
v22 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("allow");
v0[21] = v22;
v23 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("authorization");
v0[22] = v23;
v24 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("cache-control");
v0[23] = v24;
v25 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-disposition");
v0[24] = v25;
v26 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-encoding");
v0[25] = v26;
v27 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-language");
v0[26] = v27;
v28 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-length");
v0[27] = v28;
v29 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-location");
v0[28] = v29;
v30 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-range");
v0[29] = v30;
v31 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("content-type");
v0[30] = v31;
v32 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("cookie");
v0[31] = v32;
v33 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("date");
v0[32] = v33;
v34 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("etag");
v0[33] = v34;
v35 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("expect");
v0[34] = v35;
v36 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("expires");
v0[35] = v36;
v37 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("from");
v0[36] = v37;
v38 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("host");
v0[37] = v38;
v39 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("if-match");
v0[38] = v39;
v40 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("if-modified-since");
v0[39] = v40;
v41 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("if-none-match");
v0[40] = v41;
v42 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("if-range");
v0[41] = v42;
v43 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("if-unmodified-since");
v0[42] = v43;
v44 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("last-modified");
v0[43] = v44;
v45 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("link");
v0[44] = v45;
v46 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("location");
v0[45] = v46;
v47 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("max-forwards");
v0[46] = v47;
v48 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("proxy-authenticate");
v0[47] = v48;
v49 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("proxy-authorization");
v0[48] = v49;
v50 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("range");
v0[49] = v50;
v51 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("referer");
v0[50] = v51;
v52 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("refresh");
v0[51] = v52;
v53 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("retry-after");
v0[52] = v53;
v54 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("server");
v0[53] = v54;
v55 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("set-cookie");
v0[54] = v55;
v56 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("strict-transport-security");
v0[55] = v56;
v57 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("transfer-encoding");
v0[56] = v57;
v58 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("user-agent");
v0[57] = v58;
v59 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("vary");
v0[58] = v59;
v60 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("via");
v0[59] = v60;
v61 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String)>("www-authenticate");
v0[60] = v61;
v62 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
<io.netty.handler.codec.http2.HpackStaticTable: java.util.List STATIC_TABLE> = v62;
v63 = <io.netty.util.internal.PlatformDependent: boolean BIG_ENDIAN_NATIVE_ORDER>;
if v63 == 0 goto label01;
v64 = 22;
goto label02;
label01:
v64 = 18;
label02:
<io.netty.handler.codec.http2.HpackStaticTable: int HEADER_NAMES_TABLE_SHIFT> = v64;
v65 = newarray (io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex)[512];
<io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] HEADER_NAMES> = v65;
v66 = <io.netty.handler.codec.http2.HpackStaticTable: java.util.List STATIC_TABLE>;
v67 = interfaceinvoke v66.<java.util.List: int size()>();
label03:
if v67 <= 0 goto label07;
v68 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField getEntry(int)>(v67);
v69 = v68.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v70 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: int headerNameBucket(java.lang.CharSequence)>(v69);
v71 = <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] HEADER_NAMES>;
v72 = v71[v70];
if v72 == null goto label04;
v73 = v72.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: java.lang.CharSequence name>;
v74 = v68.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v75 = staticinvoke <io.netty.handler.codec.http2.HpackUtil: boolean equalsVariableTime(java.lang.CharSequence,java.lang.CharSequence)>(v73, v74);
if v75 != 0 goto label04;
v76 = new java.lang.IllegalStateException;
v77 = v72.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: java.lang.CharSequence name>;
v78 = v68.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v79 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence,java.lang.CharSequence)>(v77, v78) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Hash bucket collision between \u0001 and \u0001");
specialinvoke v76.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v79);
throw v76;
label04:
v80 = <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex[] HEADER_NAMES>;
v81 = new io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex;
v82 = v68.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v83 = v67;
v84 = v68.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v85 = interfaceinvoke v84.<java.lang.CharSequence: int length()>();
if v85 != 0 goto label05;
v86 = 1;
goto label06;
label05:
v86 = 0;
label06:
specialinvoke v81.<io.netty.handler.codec.http2.HpackStaticTable$HeaderNameIndex: void <init>(java.lang.CharSequence,int,boolean)>(v82, v83, v86);
v80[v70] = v81;
v67 = v67 - 1;
goto label03;
label07:
v87 = <io.netty.util.internal.PlatformDependent: boolean BIG_ENDIAN_NATIVE_ORDER>;
if v87 == 0 goto label08;
v88 = 0;
goto label09;
label08:
v88 = 6;
label09:
<io.netty.handler.codec.http2.HpackStaticTable: int HEADERS_WITH_NON_EMPTY_VALUES_TABLE_SHIFT> = v88;
v89 = newarray (io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex)[64];
<io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] HEADERS_WITH_NON_EMPTY_VALUES> = v89;
v90 = <io.netty.handler.codec.http2.HpackStaticTable: java.util.List STATIC_TABLE>;
v91 = interfaceinvoke v90.<java.util.List: int size()>();
label10:
if v91 <= 0 goto label13;
v92 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackHeaderField getEntry(int)>(v91);
v93 = v92.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v94 = interfaceinvoke v93.<java.lang.CharSequence: int length()>();
if v94 <= 0 goto label12;
v95 = v92.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v96 = staticinvoke <io.netty.handler.codec.http2.HpackStaticTable: int headerBucket(java.lang.CharSequence)>(v95);
v97 = <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] HEADERS_WITH_NON_EMPTY_VALUES>;
v98 = v97[v96];
if v98 == null goto label11;
v99 = new java.lang.IllegalStateException;
v100 = v98.<io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex: java.lang.CharSequence value>;
v101 = v92.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v102 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence,java.lang.CharSequence)>(v100, v101) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Hash bucket collision between \u0001 and \u0001");
specialinvoke v99.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v102);
throw v99;
label11:
v103 = <io.netty.handler.codec.http2.HpackStaticTable: io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex[] HEADERS_WITH_NON_EMPTY_VALUES>;
v104 = new io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex;
v105 = v92.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v106 = v92.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
specialinvoke v104.<io.netty.handler.codec.http2.HpackStaticTable$HeaderIndex: void <init>(java.lang.CharSequence,java.lang.CharSequence,int)>(v105, v106, v91);
v103[v96] = v104;
label12:
v91 = v91 - 1;
goto label10;
label13:
v107 = <io.netty.handler.codec.http2.HpackStaticTable: java.util.List STATIC_TABLE>;
v108 = interfaceinvoke v107.<java.util.List: int size()>();
<io.netty.handler.codec.http2.HpackStaticTable: int length> = v108;
return;
}
}