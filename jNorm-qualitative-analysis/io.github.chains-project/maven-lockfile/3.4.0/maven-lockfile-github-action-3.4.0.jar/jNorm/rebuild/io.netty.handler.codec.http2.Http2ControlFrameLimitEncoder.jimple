final class io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder extends io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private final int maxOutstandingControlFrames;
private final io.netty.channel.ChannelFutureListener outstandingControlFramesListener;
private io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager;
private int outstandingControlFrames;
private boolean limitReached;
void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder, int)
{
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder$1 v3;
int v2, v4;
io.netty.handler.codec.http2.Http2ConnectionEncoder v1;
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder: void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder)>(v1);
v3 = new io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder$1;
specialinvoke v3.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder$1: void <init>(io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder)>(v0);
v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.channel.ChannelFutureListener outstandingControlFramesListener> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v2, "maxOutstandingControlFrames");
v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int maxOutstandingControlFrames> = v4;
return;
}
public void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager)
{
io.netty.handler.codec.http2.Http2LifecycleManager v1;
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2LifecycleManager;
v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager> = v1;
specialinvoke v0.<io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder: void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager)>(v1);
return;
}
public io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2, v3;
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder v0;
io.netty.channel.ChannelFuture v4;
v0 := @this: io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.channel.ChannelPromise handleOutstandingControlFrames(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v2);
if v3 != null goto label1;
return v2;
label1:
v4 = specialinvoke v0.<io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder: io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v3);
return v4;
}
public io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext, boolean, long, io.netty.channel.ChannelPromise)
{
long v3;
io.netty.channel.ChannelFuture v6, v7;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v4, v5;
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: boolean;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.channel.ChannelPromise;
if v2 == 0 goto label2;
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.channel.ChannelPromise handleOutstandingControlFrames(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v4);
if v5 != null goto label1;
return v4;
label1:
v6 = specialinvoke v0.<io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder: io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,long,io.netty.channel.ChannelPromise)>(v1, v2, v3, v5);
return v6;
label2:
v7 = specialinvoke v0.<io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder: io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,long,io.netty.channel.ChannelPromise)>(v1, v2, v3, v4);
return v7;
}
public io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext, int, long, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v4, v5;
int v2;
long v3;
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder v0;
io.netty.channel.ChannelFuture v6;
v0 := @this: io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.channel.ChannelPromise;
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.channel.ChannelPromise handleOutstandingControlFrames(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v4);
if v5 != null goto label1;
return v4;
label1:
v6 = specialinvoke v0.<io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder: io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise)>(v1, v2, v3, v5);
return v6;
}
private io.netty.channel.ChannelPromise handleOutstandingControlFrames(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
java.lang.Object[] v14, v9;
java.lang.Integer v11, v16;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2, v21, v23;
io.netty.channel.ChannelFutureListener v22;
io.netty.handler.codec.http2.Http2Exception v12;
int v10, v15, v19, v20, v4, v5, v6, v7;
boolean v3;
io.netty.handler.codec.http2.Http2LifecycleManager v18;
io.netty.channel.Channel v17;
io.netty.util.internal.logging.InternalLogger v13;
io.netty.handler.codec.http2.Http2Error v8;
io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: boolean limitReached>;
if v3 != 0 goto label3;
v4 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int outstandingControlFrames>;
v5 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int maxOutstandingControlFrames>;
if v4 != v5 goto label1;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext flush()>();
label1:
v6 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int outstandingControlFrames>;
v7 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int maxOutstandingControlFrames>;
if v6 != v7 goto label2;
v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: boolean limitReached> = 1;
v8 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error ENHANCE_YOUR_CALM>;
v9 = newarray (java.lang.Object)[1];
v10 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int maxOutstandingControlFrames>;
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v10);
v9[0] = v11;
v12 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v8, "Maximum number %d of outstanding control frames reached", v9);
v13 = <io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.util.internal.logging.InternalLogger logger>;
v14 = newarray (java.lang.Object)[3];
v15 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int maxOutstandingControlFrames>;
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v15);
v14[0] = v16;
v17 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v14[1] = v17;
v14[2] = v12;
interfaceinvoke v13.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object[])>("Maximum number {} of outstanding control frames reached. Closing channel {}", v14);
v18 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager>;
interfaceinvoke v18.<io.netty.handler.codec.http2.Http2LifecycleManager: void onError(io.netty.channel.ChannelHandlerContext,boolean,java.lang.Throwable)>(v1, 1, v12);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close()>();
label2:
v19 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int outstandingControlFrames>;
v20 = v19 + 1;
v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: int outstandingControlFrames> = v20;
v21 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise unvoid()>();
v22 = v0.<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.channel.ChannelFutureListener outstandingControlFramesListener>;
v23 = interfaceinvoke v21.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)>(v22);
return v23;
label3:
return v2;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http2/Http2ControlFrameLimitEncoder;");
<io.netty.handler.codec.http2.Http2ControlFrameLimitEncoder: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}