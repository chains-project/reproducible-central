public final class io.netty.handler.codec.http2.Http2DataChunkedInput extends java.lang.Object implements io.netty.handler.stream.ChunkedInput
{
private final io.netty.handler.stream.ChunkedInput input;
private final io.netty.handler.codec.http2.Http2FrameStream stream;
private boolean endStreamSent;
public void <init>(io.netty.handler.stream.ChunkedInput, io.netty.handler.codec.http2.Http2FrameStream)
{
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
io.netty.handler.codec.http2.Http2FrameStream v2;
io.netty.handler.stream.ChunkedInput v1;
java.lang.Object v3, v4;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 := @parameter0: io.netty.handler.stream.ChunkedInput;
v2 := @parameter1: io.netty.handler.codec.http2.Http2FrameStream;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "input");
v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "stream");
v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.codec.http2.Http2FrameStream stream> = v4;
return;
}
public boolean isEndOfInput() throws java.lang.Exception
{
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
io.netty.handler.stream.ChunkedInput v1;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
v2 = interfaceinvoke v1.<io.netty.handler.stream.ChunkedInput: boolean isEndOfInput()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: boolean endStreamSent>;
return v3;
label1:
return 0;
}
public void close() throws java.lang.Exception
{
io.netty.handler.stream.ChunkedInput v1;
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
interfaceinvoke v1.<io.netty.handler.stream.ChunkedInput: void close()>();
return;
}
public io.netty.handler.codec.http2.Http2DataFrame readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBufAllocator v2;
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
io.netty.handler.codec.http2.Http2DataFrame v3;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.codec.http2.Http2DataFrame readChunk(io.netty.buffer.ByteBufAllocator)>(v2);
return v3;
}
public io.netty.handler.codec.http2.Http2DataFrame readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception
{
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.codec.http2.DefaultHttp2DataFrame v10, v14, v5, v7;
boolean v12, v15, v2, v4;
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
io.netty.handler.codec.http2.Http2FrameStream v13, v6;
io.netty.handler.stream.ChunkedInput v11, v3, v8;
java.lang.Object v9;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: boolean endStreamSent>;
if v2 == 0 goto label1;
return null;
label1:
v3 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
v4 = interfaceinvoke v3.<io.netty.handler.stream.ChunkedInput: boolean isEndOfInput()>();
if v4 == 0 goto label2;
v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: boolean endStreamSent> = 1;
v5 = new io.netty.handler.codec.http2.DefaultHttp2DataFrame;
specialinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2DataFrame: void <init>(boolean)>(1);
v6 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.codec.http2.Http2FrameStream stream>;
v7 = virtualinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2DataFrame: io.netty.handler.codec.http2.DefaultHttp2DataFrame stream(io.netty.handler.codec.http2.Http2FrameStream)>(v6);
return v7;
label2:
v8 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
v9 = interfaceinvoke v8.<io.netty.handler.stream.ChunkedInput: java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator)>(v1);
if v9 != null goto label3;
return null;
label3:
v10 = new io.netty.handler.codec.http2.DefaultHttp2DataFrame;
v11 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
v12 = interfaceinvoke v11.<io.netty.handler.stream.ChunkedInput: boolean isEndOfInput()>();
specialinvoke v10.<io.netty.handler.codec.http2.DefaultHttp2DataFrame: void <init>(io.netty.buffer.ByteBuf,boolean)>(v9, v12);
v13 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.codec.http2.Http2FrameStream stream>;
v14 = virtualinvoke v10.<io.netty.handler.codec.http2.DefaultHttp2DataFrame: io.netty.handler.codec.http2.DefaultHttp2DataFrame stream(io.netty.handler.codec.http2.Http2FrameStream)>(v13);
v15 = interfaceinvoke v14.<io.netty.handler.codec.http2.Http2DataFrame: boolean isEndStream()>();
if v15 == 0 goto label4;
v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: boolean endStreamSent> = 1;
label4:
return v14;
}
public long length()
{
io.netty.handler.stream.ChunkedInput v1;
long v2;
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
v2 = interfaceinvoke v1.<io.netty.handler.stream.ChunkedInput: long length()>();
return v2;
}
public long progress()
{
io.netty.handler.stream.ChunkedInput v1;
long v2;
io.netty.handler.codec.http2.Http2DataChunkedInput v0;
v0 := @this: io.netty.handler.codec.http2.Http2DataChunkedInput;
v1 = v0.<io.netty.handler.codec.http2.Http2DataChunkedInput: io.netty.handler.stream.ChunkedInput input>;
v2 = interfaceinvoke v1.<io.netty.handler.stream.ChunkedInput: long progress()>();
return v2;
}
}