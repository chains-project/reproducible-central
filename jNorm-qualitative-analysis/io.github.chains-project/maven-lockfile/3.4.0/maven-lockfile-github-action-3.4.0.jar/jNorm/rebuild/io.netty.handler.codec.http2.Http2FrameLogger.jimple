public class io.netty.handler.codec.http2.Http2FrameLogger extends io.netty.channel.ChannelHandlerAdapter
{
private static final int BUFFER_LENGTH_THRESHOLD;
private final io.netty.util.internal.logging.InternalLogger logger;
private final io.netty.util.internal.logging.InternalLogLevel level;
public void <init>(io.netty.handler.logging.LogLevel)
{
io.netty.handler.logging.LogLevel v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v3;
io.netty.util.internal.logging.InternalLogLevel v2;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.logging.LogLevel;
v2 = staticinvoke <io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)>(v1);
v3 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http2/Http2FrameLogger;");
specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: void <init>(io.netty.util.internal.logging.InternalLogLevel,io.netty.util.internal.logging.InternalLogger)>(v2, v3);
return;
}
public void <init>(io.netty.handler.logging.LogLevel, java.lang.String)
{
io.netty.handler.logging.LogLevel v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v5;
io.netty.util.internal.logging.InternalLogLevel v3;
java.lang.Object v4;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.logging.LogLevel;
v2 := @parameter1: java.lang.String;
v3 = staticinvoke <io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)>(v1);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "name");
v5 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.String)>(v4);
specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: void <init>(io.netty.util.internal.logging.InternalLogLevel,io.netty.util.internal.logging.InternalLogger)>(v3, v5);
return;
}
public void <init>(io.netty.handler.logging.LogLevel, java.lang.Class)
{
io.netty.handler.logging.LogLevel v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v5;
io.netty.util.internal.logging.InternalLogLevel v3;
java.lang.Class v2;
java.lang.Object v4;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.logging.LogLevel;
v2 := @parameter1: java.lang.Class;
v3 = staticinvoke <io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)>(v1);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "clazz");
v5 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(v4);
specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: void <init>(io.netty.util.internal.logging.InternalLogLevel,io.netty.util.internal.logging.InternalLogger)>(v3, v5);
return;
}
private void <init>(io.netty.util.internal.logging.InternalLogLevel, io.netty.util.internal.logging.InternalLogger)
{
io.netty.util.internal.logging.InternalLogLevel v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v2;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.util.internal.logging.InternalLogLevel;
v2 := @parameter1: io.netty.util.internal.logging.InternalLogger;
specialinvoke v0.<io.netty.channel.ChannelHandlerAdapter: void <init>()>();
v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level> = v1;
v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger> = v2;
return;
}
private static io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)
{
io.netty.util.internal.logging.InternalLogLevel v2;
java.lang.Object v1;
io.netty.handler.logging.LogLevel v0;
v0 := @parameter0: io.netty.handler.logging.LogLevel;
v1 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "level");
v2 = virtualinvoke v1.<io.netty.handler.logging.LogLevel: io.netty.util.internal.logging.InternalLogLevel toInternalLevel()>();
return v2;
}
public boolean isEnabled()
{
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v1;
io.netty.util.internal.logging.InternalLogLevel v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v2 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v3 = interfaceinvoke v1.<io.netty.util.internal.logging.InternalLogger: boolean isEnabled(io.netty.util.internal.logging.InternalLogLevel)>(v2);
return v3;
}
public void logData(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, int, boolean)
{
java.lang.Object[] v10;
java.lang.Integer v13, v14, v17;
io.netty.channel.ChannelHandlerContext v2;
io.netty.buffer.ByteBuf v4;
io.netty.handler.codec.http2.Http2FrameLogger v0;
int v16, v3, v5;
java.lang.Boolean v15;
java.lang.String v12, v18;
boolean v6, v7;
io.netty.util.internal.logging.InternalLogLevel v9;
io.netty.channel.Channel v11;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.util.internal.logging.InternalLogger v8;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.buffer.ByteBuf;
v5 := @parameter4: int;
v6 := @parameter5: boolean;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v9 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v10 = newarray (java.lang.Object)[7];
v11 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v10[0] = v11;
v12 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[2] = v13;
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v10[3] = v14;
v15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
v10[4] = v15;
v16 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readableBytes()>();
v17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v16);
v10[5] = v17;
v18 = specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: java.lang.String toString(io.netty.buffer.ByteBuf)>(v4);
v10[6] = v18;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v9, "{} {} DATA: streamId={} padding={} endStream={} length={} bytes={}", v10);
label1:
return;
}
public void logHeaders(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean)
{
java.lang.Object[] v10;
java.lang.Integer v13, v14;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger v0;
int v3, v5;
java.lang.Boolean v15;
java.lang.String v12;
boolean v6, v7;
io.netty.util.internal.logging.InternalLogLevel v9;
io.netty.channel.Channel v11;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.handler.codec.http2.Http2Headers v4;
io.netty.util.internal.logging.InternalLogger v8;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Headers;
v5 := @parameter4: int;
v6 := @parameter5: boolean;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v9 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v10 = newarray (java.lang.Object)[6];
v11 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v10[0] = v11;
v12 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[2] = v13;
v10[3] = v4;
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v10[4] = v14;
v15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
v10[5] = v15;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v9, "{} {} HEADERS: streamId={} headers={} padding={} endStream={}", v10);
label1:
return;
}
public void logHeaders(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, short, boolean, int, boolean)
{
java.lang.Object[] v13;
java.lang.Integer v16, v17, v20;
io.netty.channel.ChannelHandlerContext v2;
short v6;
io.netty.handler.codec.http2.Http2FrameLogger v0;
java.lang.Short v18;
int v3, v5, v8;
java.lang.Boolean v19, v21;
java.lang.String v15;
boolean v10, v7, v9;
io.netty.util.internal.logging.InternalLogLevel v12;
io.netty.channel.Channel v14;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.handler.codec.http2.Http2Headers v4;
io.netty.util.internal.logging.InternalLogger v11;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Headers;
v5 := @parameter4: int;
v6 := @parameter5: short;
v7 := @parameter6: boolean;
v8 := @parameter7: int;
v9 := @parameter8: boolean;
v10 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v10 == 0 goto label1;
v11 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v12 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v13 = newarray (java.lang.Object)[9];
v14 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v13[0] = v14;
v15 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v13[1] = v15;
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v13[2] = v16;
v13[3] = v4;
v17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v13[4] = v17;
v18 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v6);
v13[5] = v18;
v19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v7);
v13[6] = v19;
v20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v8);
v13[7] = v20;
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v9);
v13[8] = v21;
interfaceinvoke v11.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v12, "{} {} HEADERS: streamId={} headers={} streamDependency={} weight={} exclusive={} padding={} endStream={}", v13);
label1:
return;
}
public void logPriority(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, int, short, boolean)
{
java.lang.Object[] v10;
java.lang.Integer v13, v14;
io.netty.channel.ChannelHandlerContext v2;
short v5;
io.netty.handler.codec.http2.Http2FrameLogger v0;
java.lang.Short v15;
int v3, v4;
java.lang.Boolean v16;
java.lang.String v12;
boolean v6, v7;
io.netty.util.internal.logging.InternalLogLevel v9;
io.netty.channel.Channel v11;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.util.internal.logging.InternalLogger v8;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: short;
v6 := @parameter5: boolean;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v9 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v10 = newarray (java.lang.Object)[6];
v11 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v10[0] = v11;
v12 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[2] = v13;
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v10[3] = v14;
v15 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v5);
v10[4] = v15;
v16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
v10[5] = v16;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v9, "{} {} PRIORITY: streamId={} streamDependency={} weight={} exclusive={}", v10);
label1:
return;
}
public void logRstStream(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, long)
{
java.lang.Object[] v8;
io.netty.util.internal.logging.InternalLogLevel v7;
long v4;
java.lang.Integer v11;
io.netty.channel.Channel v9;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
java.lang.Long v12;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v6;
int v3;
java.lang.String v10;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: long;
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v5 == 0 goto label1;
v6 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v7 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v8 = newarray (java.lang.Object)[4];
v9 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v8[0] = v9;
v10 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v8[1] = v10;
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v8[2] = v11;
v12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v4);
v8[3] = v12;
interfaceinvoke v6.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v7, "{} {} RST_STREAM: streamId={} errorCode={}", v8);
label1:
return;
}
public void logSettingsAck(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.Channel v5;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v3;
io.netty.util.internal.logging.InternalLogLevel v4;
java.lang.String v6;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v4 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v5 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v6 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object)>(v4, "{} {} SETTINGS: ack=true", v5, v6);
return;
}
public void logSettings(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Settings)
{
java.lang.Object[] v7;
io.netty.util.internal.logging.InternalLogLevel v6;
io.netty.channel.Channel v8;
io.netty.handler.codec.http2.Http2Settings v3;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v5;
java.lang.String v9;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Settings;
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v6 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v7 = newarray (java.lang.Object)[3];
v8 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v7[0] = v8;
v9 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v7[1] = v9;
v7[2] = v3;
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v6, "{} {} SETTINGS: ack=false settings={}", v7);
label1:
return;
}
public void logPing(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, long)
{
java.lang.Object[] v7;
io.netty.util.internal.logging.InternalLogLevel v6;
long v3;
io.netty.channel.Channel v8;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
java.lang.Long v10;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v5;
java.lang.String v9;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: long;
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v6 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v7 = newarray (java.lang.Object)[3];
v8 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v7[0] = v8;
v9 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v7[1] = v9;
v10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
v7[2] = v10;
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v6, "{} {} PING: ack=false bytes={}", v7);
label1:
return;
}
public void logPingAck(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, long)
{
java.lang.Object[] v7;
io.netty.util.internal.logging.InternalLogLevel v6;
long v3;
io.netty.channel.Channel v8;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
java.lang.Long v10;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v5;
java.lang.String v9;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: long;
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v6 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v7 = newarray (java.lang.Object)[3];
v8 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v7[0] = v8;
v9 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v7[1] = v9;
v10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
v7[2] = v10;
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v6, "{} {} PING: ack=true bytes={}", v7);
label1:
return;
}
public void logPushPromise(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, int, io.netty.handler.codec.http2.Http2Headers, int)
{
java.lang.Object[] v10;
java.lang.Integer v13, v14, v15;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger v0;
int v3, v4, v6;
java.lang.String v12;
boolean v7;
io.netty.util.internal.logging.InternalLogLevel v9;
io.netty.channel.Channel v11;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.handler.codec.http2.Http2Headers v5;
io.netty.util.internal.logging.InternalLogger v8;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: io.netty.handler.codec.http2.Http2Headers;
v6 := @parameter5: int;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v9 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v10 = newarray (java.lang.Object)[6];
v11 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v10[0] = v11;
v12 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v10[1] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v10[2] = v13;
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v10[3] = v14;
v10[4] = v5;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
v10[5] = v15;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v9, "{} {} PUSH_PROMISE: streamId={} promisedStreamId={} headers={} padding={}", v10);
label1:
return;
}
public void logGoAway(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf)
{
java.lang.Object[] v9;
long v4;
java.lang.Integer v12, v15;
io.netty.channel.ChannelHandlerContext v2;
io.netty.buffer.ByteBuf v5;
java.lang.Long v13;
io.netty.handler.codec.http2.Http2FrameLogger v0;
int v14, v3;
java.lang.String v11, v16;
boolean v6;
io.netty.util.internal.logging.InternalLogLevel v8;
io.netty.channel.Channel v10;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.util.internal.logging.InternalLogger v7;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: long;
v5 := @parameter4: io.netty.buffer.ByteBuf;
v6 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v6 == 0 goto label1;
v7 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v8 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v9 = newarray (java.lang.Object)[6];
v10 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v9[0] = v10;
v11 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v9[1] = v11;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v9[2] = v12;
v13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v4);
v9[3] = v13;
v14 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v14);
v9[4] = v15;
v16 = specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: java.lang.String toString(io.netty.buffer.ByteBuf)>(v5);
v9[5] = v16;
interfaceinvoke v7.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v8, "{} {} GO_AWAY: lastStreamId={} errorCode={} length={} bytes={}", v9);
label1:
return;
}
public void logWindowsUpdate(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, int, int)
{
java.lang.Object[] v8;
io.netty.util.internal.logging.InternalLogLevel v7;
java.lang.Integer v11, v12;
io.netty.channel.Channel v9;
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
io.netty.util.internal.logging.InternalLogger v6;
int v3, v4;
java.lang.String v10;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v5 == 0 goto label1;
v6 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v7 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v8 = newarray (java.lang.Object)[4];
v9 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v8[0] = v9;
v10 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v8[1] = v10;
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v8[2] = v11;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v8[3] = v12;
interfaceinvoke v6.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v7, "{} {} WINDOW_UPDATE: streamId={} windowSizeIncrement={}", v8);
label1:
return;
}
public void logUnknownFrame(io.netty.handler.codec.http2.Http2FrameLogger$Direction, io.netty.channel.ChannelHandlerContext, byte, int, io.netty.handler.codec.http2.Http2Flags, io.netty.buffer.ByteBuf)
{
java.lang.Object[] v10;
java.lang.Integer v14, v15, v19;
io.netty.channel.ChannelHandlerContext v2;
short v13, v16;
byte v3;
io.netty.buffer.ByteBuf v6;
io.netty.handler.codec.http2.Http2FrameLogger v0;
java.lang.Short v17;
int v18, v4;
java.lang.String v12, v20;
boolean v7;
io.netty.handler.codec.http2.Http2Flags v5;
io.netty.util.internal.logging.InternalLogLevel v9;
io.netty.channel.Channel v11;
io.netty.handler.codec.http2.Http2FrameLogger$Direction v1;
io.netty.util.internal.logging.InternalLogger v8;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger$Direction;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: byte;
v4 := @parameter3: int;
v5 := @parameter4: io.netty.handler.codec.http2.Http2Flags;
v6 := @parameter5: io.netty.buffer.ByteBuf;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: boolean isEnabled()>();
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogger logger>;
v9 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v10 = newarray (java.lang.Object)[7];
v11 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v10[0] = v11;
v12 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2FrameLogger$Direction: java.lang.String name()>();
v10[1] = v12;
v13 = v3 & 255;
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v13);
v10[2] = v14;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v10[3] = v15;
v16 = virtualinvoke v5.<io.netty.handler.codec.http2.Http2Flags: short value()>();
v17 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v16);
v10[4] = v17;
v18 = virtualinvoke v6.<io.netty.buffer.ByteBuf: int readableBytes()>();
v19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v18);
v10[5] = v19;
v20 = specialinvoke v0.<io.netty.handler.codec.http2.Http2FrameLogger: java.lang.String toString(io.netty.buffer.ByteBuf)>(v6);
v10[6] = v20;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[])>(v9, "{} {} UNKNOWN: frameType={} streamId={} flags={} length={} bytes={}", v10);
label1:
return;
}
private java.lang.String toString(io.netty.buffer.ByteBuf)
{
io.netty.util.internal.logging.InternalLogLevel v2, v3;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.http2.Http2FrameLogger v0;
int v4, v6, v7, v8;
java.lang.String v10, v5, v9;
v0 := @this: io.netty.handler.codec.http2.Http2FrameLogger;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = v0.<io.netty.handler.codec.http2.Http2FrameLogger: io.netty.util.internal.logging.InternalLogLevel level>;
v3 = <io.netty.util.internal.logging.InternalLogLevel: io.netty.util.internal.logging.InternalLogLevel TRACE>;
if v2 == v3 goto label1;
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v4 > 64 goto label2;
label1:
v5 = staticinvoke <io.netty.buffer.ByteBufUtil: java.lang.String hexDump(io.netty.buffer.ByteBuf)>(v1);
return v5;
label2:
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = staticinvoke <java.lang.Math: int min(int,int)>(v6, 64);
v8 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v9 = staticinvoke <io.netty.buffer.ByteBufUtil: java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int)>(v1, v8, v7);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001...");
return v10;
}
}