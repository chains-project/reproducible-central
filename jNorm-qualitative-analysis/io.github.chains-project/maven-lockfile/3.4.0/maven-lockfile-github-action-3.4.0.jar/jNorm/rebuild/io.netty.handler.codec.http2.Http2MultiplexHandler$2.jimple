class io.netty.handler.codec.http2.Http2MultiplexHandler$2 extends java.lang.Object implements io.netty.handler.codec.http2.Http2FrameStreamVisitor
{
final java.lang.Throwable val$cause;
final io.netty.handler.codec.http2.Http2MultiplexHandler this$0;
void <init>(io.netty.handler.codec.http2.Http2MultiplexHandler, java.lang.Throwable)
{
io.netty.handler.codec.http2.Http2MultiplexHandler$2 v0;
java.lang.Throwable v2;
io.netty.handler.codec.http2.Http2MultiplexHandler v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexHandler$2;
v1 := @parameter0: io.netty.handler.codec.http2.Http2MultiplexHandler;
v2 := @parameter1: java.lang.Throwable;
v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$2: io.netty.handler.codec.http2.Http2MultiplexHandler this$0> = v1;
v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$2: java.lang.Throwable val$cause> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean visit(io.netty.handler.codec.http2.Http2FrameStream)
{
io.netty.channel.Channel v2;
io.netty.handler.codec.http2.Http2MultiplexHandler$2 v0;
java.lang.Throwable v4;
io.netty.handler.codec.http2.Http2FrameStream v1;
io.netty.channel.ChannelPipeline v3;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexHandler$2;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameStream;
v2 = v1.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: io.netty.channel.Channel attachment>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.AbstractHttp2StreamChannel: io.netty.channel.ChannelPipeline pipeline()>();
v4 = v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$2: java.lang.Throwable val$cause>;
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable)>(v4);
return 1;
}
}