class io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.util.concurrent.Promise val$promise;
final io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel;
final io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0;
void <init>(io.netty.handler.codec.http2.Http2StreamChannelBootstrap, io.netty.util.concurrent.Promise, io.netty.handler.codec.http2.Http2StreamChannel)
{
io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2 v0;
io.netty.handler.codec.http2.Http2StreamChannelBootstrap v1;
io.netty.util.concurrent.Promise v2;
io.netty.handler.codec.http2.Http2StreamChannel v3;
v0 := @this: io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2;
v1 := @parameter0: io.netty.handler.codec.http2.Http2StreamChannelBootstrap;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v3 := @parameter2: io.netty.handler.codec.http2.Http2StreamChannel;
v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0> = v1;
v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.util.concurrent.Promise val$promise> = v2;
v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2 v0;
java.lang.Throwable v13;
io.netty.util.concurrent.Promise v12, v3, v6;
io.netty.channel.Channel$Unsafe v11;
io.netty.channel.ChannelFuture v1;
io.netty.handler.codec.http2.Http2StreamChannel v10, v4, v7, v9;
boolean v2, v5, v8;
v0 := @this: io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.util.concurrent.Promise val$promise>;
v4 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel>;
interfaceinvoke v3.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v4);
goto label5;
label1:
v5 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isCancelled()>();
if v5 == 0 goto label2;
v6 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.util.concurrent.Promise val$promise>;
interfaceinvoke v6.<io.netty.util.concurrent.Promise: boolean cancel(boolean)>(0);
goto label5;
label2:
v7 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel>;
v8 = interfaceinvoke v7.<io.netty.handler.codec.http2.Http2StreamChannel: boolean isRegistered()>();
if v8 == 0 goto label3;
v9 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel>;
interfaceinvoke v9.<io.netty.handler.codec.http2.Http2StreamChannel: io.netty.channel.ChannelFuture close()>();
goto label4;
label3:
v10 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel>;
v11 = interfaceinvoke v10.<io.netty.handler.codec.http2.Http2StreamChannel: io.netty.channel.Channel$Unsafe unsafe()>();
interfaceinvoke v11.<io.netty.channel.Channel$Unsafe: void closeForcibly()>();
label4:
v12 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2: io.netty.util.concurrent.Promise val$promise>;
v13 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
interfaceinvoke v12.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v13);
label5:
return;
}
}