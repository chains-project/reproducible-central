final class io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator extends java.lang.Object
{
private static final io.netty.handler.codec.http2.CharSequenceMap REQUEST_HEADER_TRANSLATIONS;
private static final io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS;
private final int streamId;
private final io.netty.handler.codec.http.HttpHeaders output;
private final io.netty.handler.codec.http2.CharSequenceMap translations;
void <init>(int, io.netty.handler.codec.http.HttpHeaders, boolean)
{
io.netty.handler.codec.http.HttpHeaders v2;
io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator v0;
int v1;
io.netty.handler.codec.http2.CharSequenceMap v4;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.http.HttpHeaders;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: int streamId> = v1;
v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http.HttpHeaders output> = v2;
if v3 == 0 goto label1;
v4 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap REQUEST_HEADER_TRANSLATIONS>;
goto label2;
label1:
v4 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS>;
label2:
v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap translations> = v4;
return;
}
void translateHeaders(java.lang.Iterable) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http.HttpHeaders v10, v23, v24;
java.lang.Object[] v17;
io.netty.util.internal.InternalThreadLocalMap v21;
io.netty.util.AsciiString v11, v19, v25;
java.lang.Iterable v1;
io.netty.handler.codec.http2.Http2Exception v18;
io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator v0;
int v13, v15, v22;
java.lang.String v26;
io.netty.handler.codec.http2.CharSequenceMap v8;
boolean v12, v20, v4;
java.util.Iterator v3;
char v14;
io.netty.handler.codec.http2.Http2Error v16;
java.lang.Object v5, v6, v7, v9;
java.lang.StringBuilder v2;
v0 := @this: io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator;
v1 := @parameter0: java.lang.Iterable;
v2 = null;
v3 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label8;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
v8 = v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap translations>;
v9 = virtualinvoke v8.<io.netty.handler.codec.http2.CharSequenceMap: java.lang.Object get(java.lang.Object)>(v6);
if v9 == null goto label2;
v10 = v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http.HttpHeaders output>;
v11 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString of(java.lang.CharSequence)>(v7);
virtualinvoke v10.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v9, v11);
goto label1;
label2:
v12 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: boolean isPseudoHeader(java.lang.CharSequence)>(v6);
if v12 != 0 goto label1;
v13 = interfaceinvoke v6.<java.lang.CharSequence: int length()>();
if v13 == 0 goto label3;
v14 = interfaceinvoke v6.<java.lang.CharSequence: char charAt(int)>(0);
if v14 != 58 goto label4;
label3:
v15 = v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: int streamId>;
v16 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v17 = newarray (java.lang.Object)[1];
v17[0] = v6;
v18 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v15, v16, "Invalid HTTP/2 header \'%s\' encountered in translation to HTTP/1.x", v17);
throw v18;
label4:
v19 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString COOKIE>;
v20 = virtualinvoke v19.<io.netty.util.AsciiString: boolean equals(java.lang.Object)>(v6);
if v20 == 0 goto label7;
if v2 != null goto label5;
v21 = staticinvoke <io.netty.util.internal.InternalThreadLocalMap: io.netty.util.internal.InternalThreadLocalMap get()>();
v2 = virtualinvoke v21.<io.netty.util.internal.InternalThreadLocalMap: java.lang.StringBuilder stringBuilder()>();
goto label6;
label5:
v22 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
if v22 <= 0 goto label6;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");
label6:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(v7);
goto label1;
label7:
v23 = v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http.HttpHeaders output>;
virtualinvoke v23.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v6, v7);
goto label1;
label8:
if v2 == null goto label9;
v24 = v0.<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http.HttpHeaders output>;
v25 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString COOKIE>;
v26 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v24.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v25, v26);
label9:
return;
}
static void <clinit>()
{
io.netty.util.AsciiString v10, v15, v17, v4, v5, v8;
io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames v16, v9;
io.netty.handler.codec.http2.CharSequenceMap v0, v1, v11, v12, v13, v2, v6;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v14, v3, v7;
v0 = new io.netty.handler.codec.http2.CharSequenceMap;
specialinvoke v0.<io.netty.handler.codec.http2.CharSequenceMap: void <init>()>();
<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap REQUEST_HEADER_TRANSLATIONS> = v0;
v1 = new io.netty.handler.codec.http2.CharSequenceMap;
specialinvoke v1.<io.netty.handler.codec.http2.CharSequenceMap: void <init>()>();
<io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS> = v1;
v2 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS>;
v3 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY>;
v4 = virtualinvoke v3.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v5 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
virtualinvoke v2.<io.netty.handler.codec.http2.CharSequenceMap: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v4, v5);
v6 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS>;
v7 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME>;
v8 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v9 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames SCHEME>;
v10 = virtualinvoke v9.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
virtualinvoke v6.<io.netty.handler.codec.http2.CharSequenceMap: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v8, v10);
v11 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap REQUEST_HEADER_TRANSLATIONS>;
v12 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS>;
virtualinvoke v11.<io.netty.handler.codec.http2.CharSequenceMap: io.netty.handler.codec.Headers add(io.netty.handler.codec.Headers)>(v12);
v13 = <io.netty.handler.codec.http2.HttpConversionUtil$Http2ToHttpHeaderTranslator: io.netty.handler.codec.http2.CharSequenceMap RESPONSE_HEADER_TRANSLATIONS>;
v14 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH>;
v15 = virtualinvoke v14.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
v16 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames PATH>;
v17 = virtualinvoke v16.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
virtualinvoke v13.<io.netty.handler.codec.http2.CharSequenceMap: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v15, v17);
return;
}
}