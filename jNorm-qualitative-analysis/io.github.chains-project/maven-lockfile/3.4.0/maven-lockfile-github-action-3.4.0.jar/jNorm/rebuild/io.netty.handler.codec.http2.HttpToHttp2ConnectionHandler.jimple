public class io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler extends io.netty.handler.codec.http2.Http2ConnectionHandler
{
private final boolean validateHeaders;
private int currentStreamId;
private io.netty.handler.codec.http.HttpScheme httpScheme;
protected void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, boolean)
{
io.netty.handler.codec.http2.Http2Settings v3;
io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler v0;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
boolean v4;
io.netty.handler.codec.http2.Http2ConnectionDecoder v1;
v0 := @this: io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionDecoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Settings;
v4 := @parameter3: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler: void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings)>(v1, v2, v3);
v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: boolean validateHeaders> = v4;
return;
}
protected void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, boolean, boolean)
{
io.netty.handler.codec.http2.Http2Settings v3;
io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler v0;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
boolean v4, v5;
io.netty.handler.codec.http2.Http2ConnectionDecoder v1;
v0 := @this: io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionDecoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Settings;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings,boolean,boolean,io.netty.handler.codec.http.HttpScheme)>(v1, v2, v3, v4, v5, null);
return;
}
protected void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, boolean, boolean, io.netty.handler.codec.http.HttpScheme)
{
io.netty.handler.codec.http2.Http2Settings v3;
io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler v0;
io.netty.handler.codec.http.HttpScheme v6;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
boolean v4, v5;
io.netty.handler.codec.http2.Http2ConnectionDecoder v1;
v0 := @this: io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionDecoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Settings;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: io.netty.handler.codec.http.HttpScheme;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler: void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings,boolean)>(v1, v2, v3, v5);
v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: boolean validateHeaders> = v4;
v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: io.netty.handler.codec.http.HttpScheme httpScheme> = v6;
return;
}
protected void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, boolean, boolean, boolean, io.netty.handler.codec.http.HttpScheme)
{
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
io.netty.handler.codec.http2.Http2ConnectionDecoder v1;
io.netty.handler.codec.http2.Http2Settings v3;
io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler v0;
io.netty.handler.codec.http.HttpScheme v7;
boolean v4, v5, v6;
v0 := @this: io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionDecoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Settings;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: io.netty.handler.codec.http.HttpScheme;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler: void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings,boolean,boolean)>(v1, v2, v3, v5, v6);
v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: boolean validateHeaders> = v4;
v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: io.netty.handler.codec.http.HttpScheme httpScheme> = v7;
return;
}
private int getStreamId(io.netty.handler.codec.http.HttpHeaders) throws java.lang.Exception
{
io.netty.handler.codec.http2.Http2Connection$Endpoint v5;
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.util.AsciiString v3;
io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler v0;
io.netty.handler.codec.http2.Http2Connection v4;
io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames v2;
int v6, v7;
v0 := @this: io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
v2 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_ID>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: io.netty.handler.codec.http2.Http2Connection connection()>();
v5 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2Connection$Endpoint: int incrementAndGetNextStreamId()>();
v7 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: int getInt(java.lang.CharSequence,int)>(v3, v6);
return v7;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise)
{
io.netty.handler.codec.http.HttpHeaders v13, v16, v20, v32, v35;
io.netty.handler.codec.http2.Http2ConnectionEncoder v10;
io.netty.util.AsciiString v18, v22, v24;
io.netty.channel.ChannelPromise v3, v43;
io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames v17, v21;
boolean v11, v12, v19, v25, v27, v29, v30, v33, v34, v37, v38, v4, v40, v41, v44, v5, v6;
io.netty.handler.codec.http2.Http2Headers v26, v36;
io.netty.util.concurrent.EventExecutor v9;
java.lang.Throwable v46, v47;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v28, v39;
int v14, v31, v42, v45;
io.netty.channel.Channel v8;
io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler v0;
io.netty.handler.codec.http.HttpScheme v15, v23;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v7;
java.lang.Object v2;
v0 := @this: io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v2 instanceof io.netty.handler.codec.http.HttpMessage;
if v4 != 0 goto label01;
v5 = v2 instanceof io.netty.handler.codec.http.HttpContent;
if v5 != 0 goto label01;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
return;
label01:
v6 = 1;
v7 = new io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v3, v8, v9);
label02:
v10 = virtualinvoke v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder()>();
v11 = 0;
v12 = v2 instanceof io.netty.handler.codec.http.HttpMessage;
if v12 == 0 goto label06;
v13 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v14 = specialinvoke v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: int getStreamId(io.netty.handler.codec.http.HttpHeaders)>(v13);
v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: int currentStreamId> = v14;
v15 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: io.netty.handler.codec.http.HttpScheme httpScheme>;
if v15 == null goto label03;
v16 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v17 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames SCHEME>;
v18 = virtualinvoke v17.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
v19 = virtualinvoke v16.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v18);
if v19 != 0 goto label03;
v20 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v21 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames SCHEME>;
v22 = virtualinvoke v21.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
v23 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: io.netty.handler.codec.http.HttpScheme httpScheme>;
v24 = virtualinvoke v23.<io.netty.handler.codec.http.HttpScheme: io.netty.util.AsciiString name()>();
virtualinvoke v20.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v22, v24);
label03:
v25 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: boolean validateHeaders>;
v26 = staticinvoke <io.netty.handler.codec.http2.HttpConversionUtil: io.netty.handler.codec.http2.Http2Headers toHttp2Headers(io.netty.handler.codec.http.HttpMessage,boolean)>(v2, v25);
v27 = v2 instanceof io.netty.handler.codec.http.FullHttpMessage;
if v27 == 0 goto label04;
v28 = interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpMessage: io.netty.buffer.ByteBuf content()>();
v29 = virtualinvoke v28.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v29 != 0 goto label04;
v30 = 1;
goto label05;
label04:
v30 = 0;
label05:
v11 = v30;
v31 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: int currentStreamId>;
v32 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
staticinvoke <io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: void writeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2ConnectionEncoder,int,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.http2.Http2Headers,boolean,io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator)>(v1, v10, v31, v32, v26, v30, v7);
label06:
if v11 != 0 goto label10;
v33 = v2 instanceof io.netty.handler.codec.http.HttpContent;
if v33 == 0 goto label10;
v34 = 0;
v35 = <io.netty.handler.codec.http.EmptyHttpHeaders: io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE>;
v36 = <io.netty.handler.codec.http2.EmptyHttp2Headers: io.netty.handler.codec.http2.EmptyHttp2Headers INSTANCE>;
v37 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v37 == 0 goto label07;
v34 = 1;
v35 = interfaceinvoke v2.<io.netty.handler.codec.http.LastHttpContent: io.netty.handler.codec.http.HttpHeaders trailingHeaders()>();
v38 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: boolean validateHeaders>;
v36 = staticinvoke <io.netty.handler.codec.http2.HttpConversionUtil: io.netty.handler.codec.http2.Http2Headers toHttp2Headers(io.netty.handler.codec.http.HttpHeaders,boolean)>(v35, v38);
label07:
v39 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpContent: io.netty.buffer.ByteBuf content()>();
if v34 == 0 goto label08;
v40 = virtualinvoke v35.<io.netty.handler.codec.http.HttpHeaders: boolean isEmpty()>();
if v40 == 0 goto label08;
v41 = 1;
goto label09;
label08:
v41 = 0;
label09:
v42 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: int currentStreamId>;
v43 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v10.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise)>(v1, v42, v39, 0, v41, v43);
v6 = 0;
v44 = virtualinvoke v35.<io.netty.handler.codec.http.HttpHeaders: boolean isEmpty()>();
if v44 != 0 goto label10;
v45 = v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: int currentStreamId>;
staticinvoke <io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: void writeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2ConnectionEncoder,int,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.http2.Http2Headers,boolean,io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator)>(v1, v10, v45, v35, v36, 1, v7);
label10:
if v6 == 0 goto label11;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
label11:
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
goto label17;
label12:
v46 := @caughtexception;
virtualinvoke v0.<io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler: void onError(io.netty.channel.ChannelHandlerContext,boolean,java.lang.Throwable)>(v1, 1, v46);
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v46);
label13:
if v6 == 0 goto label14;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
label14:
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
goto label17;
label15:
v47 := @caughtexception;
if v6 == 0 goto label16;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
label16:
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
throw v47;
label17:
return;
catch java.lang.Throwable from label02 to label10 with label12;
catch java.lang.Throwable from label12 to label13 with label15;
}
private static void writeHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2ConnectionEncoder, int, io.netty.handler.codec.http.HttpHeaders, io.netty.handler.codec.http2.Http2Headers, boolean, io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http2.Http2ConnectionEncoder v1;
io.netty.util.AsciiString v11, v8;
io.netty.channel.ChannelHandlerContext v0;
short v12;
io.netty.channel.ChannelPromise v13;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v6;
io.netty.handler.codec.http2.Http2Headers v4;
io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames v10, v7;
int v2, v9;
boolean v5;
v0 := @parameter0: io.netty.channel.ChannelHandlerContext;
v1 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v2 := @parameter2: int;
v3 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
v4 := @parameter4: io.netty.handler.codec.http2.Http2Headers;
v5 := @parameter5: boolean;
v6 := @parameter6: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v7 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_DEPENDENCY_ID>;
v8 = virtualinvoke v7.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
v9 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: int getInt(java.lang.CharSequence,int)>(v8, 0);
v10 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_WEIGHT>;
v11 = virtualinvoke v10.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
v12 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: short getShort(java.lang.CharSequence,short)>(v11, 16);
v13 = virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise)>(v0, v2, v4, v9, v12, 0, 0, v5, v13);
return;
}
}