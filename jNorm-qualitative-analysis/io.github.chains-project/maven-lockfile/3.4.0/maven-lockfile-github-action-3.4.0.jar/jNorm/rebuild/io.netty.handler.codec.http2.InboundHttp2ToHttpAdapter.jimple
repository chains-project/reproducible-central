public class io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter extends io.netty.handler.codec.http2.Http2EventAdapter
{
private static final io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector DEFAULT_SEND_DETECTOR;
private final int maxContentLength;
private final io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector sendDetector;
private final io.netty.handler.codec.http2.Http2Connection$PropertyKey messageKey;
private final boolean propagateSettings;
protected final io.netty.handler.codec.http2.Http2Connection connection;
protected final boolean validateHttpHeaders;
protected void <init>(io.netty.handler.codec.http2.Http2Connection, int, boolean, boolean)
{
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v8;
int v2, v6;
java.lang.Object v5;
boolean v3, v4;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector v7;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.Http2EventAdapter: void <init>()>();
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "connection");
v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection> = v5;
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v2, "maxContentLength");
v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: int maxContentLength> = v6;
v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: boolean validateHttpHeaders> = v3;
v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: boolean propagateSettings> = v4;
v7 = <io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector DEFAULT_SEND_DETECTOR>;
v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector sendDetector> = v7;
v8 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey()>();
v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection$PropertyKey messageKey> = v8;
return;
}
protected final void removeMessage(io.netty.handler.codec.http2.Http2Stream, boolean)
{
io.netty.handler.codec.http2.Http2Connection$PropertyKey v3;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v4;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 := @parameter1: boolean;
v3 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection$PropertyKey messageKey>;
v4 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v3);
if v2 == 0 goto label1;
if v4 == null goto label1;
interfaceinvoke v4.<io.netty.handler.codec.http.FullHttpMessage: boolean release()>();
label1:
return;
}
protected final io.netty.handler.codec.http.FullHttpMessage getMessage(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.Http2Connection$PropertyKey v2;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v3;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection$PropertyKey messageKey>;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v2);
return v3;
}
protected final void putMessage(io.netty.handler.codec.http2.Http2Stream, io.netty.handler.codec.http.FullHttpMessage)
{
io.netty.handler.codec.http.FullHttpMessage v2;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v3;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v4;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 := @parameter1: io.netty.handler.codec.http.FullHttpMessage;
v3 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection$PropertyKey messageKey>;
v4 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object)>(v3, v2);
if v4 == v2 goto label1;
if v4 == null goto label1;
interfaceinvoke v4.<io.netty.handler.codec.http.FullHttpMessage: boolean release()>();
label1:
return;
}
public void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void removeMessage(io.netty.handler.codec.http2.Http2Stream,boolean)>(v1, 1);
return;
}
protected void fireChannelRead(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpMessage, boolean, io.netty.handler.codec.http2.Http2Stream)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.FullHttpMessage v2;
io.netty.buffer.ByteBuf v5;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
int v6;
io.netty.handler.codec.http2.Http2Stream v4;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.FullHttpMessage;
v3 := @parameter2: boolean;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Stream;
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void removeMessage(io.netty.handler.codec.http2.Http2Stream,boolean)>(v4, v3);
v5 = interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpMessage: io.netty.buffer.ByteBuf content()>();
v6 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v2, v6);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)>(v2);
return;
}
protected io.netty.handler.codec.http.FullHttpMessage newMessage(io.netty.handler.codec.http2.Http2Stream, io.netty.handler.codec.http2.Http2Headers, boolean, io.netty.buffer.ByteBufAllocator) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.buffer.ByteBufAllocator v4;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.handler.codec.http.FullHttpMessage v8;
io.netty.handler.codec.http2.Http2Connection v5;
io.netty.handler.codec.http2.Http2Headers v2;
int v7, v9;
io.netty.handler.codec.http2.Http2Stream v1;
boolean v3, v6;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Headers;
v3 := @parameter2: boolean;
v4 := @parameter3: io.netty.buffer.ByteBufAllocator;
v5 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
if v6 == 0 goto label1;
v7 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v8 = staticinvoke <io.netty.handler.codec.http2.HttpConversionUtil: io.netty.handler.codec.http.FullHttpRequest toFullHttpRequest(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBufAllocator,boolean)>(v7, v2, v4, v3);
goto label2;
label1:
v9 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v8 = staticinvoke <io.netty.handler.codec.http2.HttpConversionUtil: io.netty.handler.codec.http.FullHttpResponse toFullHttpResponse(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBufAllocator,boolean)>(v9, v2, v4, v3);
label2:
return v8;
}
protected io.netty.handler.codec.http.FullHttpMessage processHeadersBegin(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Stream, io.netty.handler.codec.http2.Http2Headers, boolean, boolean, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.buffer.ByteBufAllocator v10, v16;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.channel.ChannelHandlerContext v1;
int v11;
io.netty.handler.codec.http2.Http2Stream v2;
boolean v13, v4, v5, v6, v8, v9;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector v12, v15;
io.netty.handler.codec.http.FullHttpMessage v14, v7;
io.netty.handler.codec.http2.Http2Headers v3;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Stream;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage getMessage(io.netty.handler.codec.http2.Http2Stream)>(v2);
v8 = 1;
if v7 != null goto label1;
v9 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: boolean validateHttpHeaders>;
v10 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage newMessage(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,io.netty.buffer.ByteBufAllocator)>(v2, v3, v9, v10);
goto label3;
label1:
if v5 == 0 goto label2;
v8 = 0;
v11 = interfaceinvoke v2.<io.netty.handler.codec.http2.Http2Stream: int id()>();
staticinvoke <io.netty.handler.codec.http2.HttpConversionUtil: void addHttp2ToHttpHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http.FullHttpMessage,boolean)>(v11, v3, v7, v6);
goto label3;
label2:
v8 = 0;
v7 = null;
label3:
v12 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector sendDetector>;
v13 = interfaceinvoke v12.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector: boolean mustSendImmediately(io.netty.handler.codec.http.FullHttpMessage)>(v7);
if v13 == 0 goto label6;
if v4 == 0 goto label4;
v14 = null;
goto label5;
label4:
v15 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector sendDetector>;
v16 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v14 = interfaceinvoke v15.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector: io.netty.handler.codec.http.FullHttpMessage copyIfNeeded(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.http.FullHttpMessage)>(v16, v7);
label5:
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void fireChannelRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpMessage,boolean,io.netty.handler.codec.http2.Http2Stream)>(v1, v7, v8, v2);
return v14;
label6:
return v7;
}
private void processHeadersEnd(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Stream, io.netty.handler.codec.http.FullHttpMessage, boolean)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.FullHttpMessage v3, v5;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.handler.codec.http2.Http2Stream v2;
boolean v4, v6;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Stream;
v3 := @parameter2: io.netty.handler.codec.http.FullHttpMessage;
v4 := @parameter3: boolean;
if v4 == 0 goto label3;
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage getMessage(io.netty.handler.codec.http2.Http2Stream)>(v2);
if v5 == v3 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void fireChannelRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpMessage,boolean,io.netty.handler.codec.http2.Http2Stream)>(v1, v3, v6, v2);
goto label4;
label3:
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void putMessage(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http.FullHttpMessage)>(v2, v3);
label4:
return;
}
public int onDataRead(io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v10, v19;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
java.lang.Integer v11, v21, v22;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v13, v3;
io.netty.handler.codec.http2.Http2Exception v12, v23;
int v14, v15, v16, v17, v2, v20, v24, v25, v4;
io.netty.handler.codec.http2.Http2Stream v7;
boolean v5;
io.netty.handler.codec.http.FullHttpMessage v8;
io.netty.handler.codec.http2.Http2Connection v6;
io.netty.handler.codec.http2.Http2Error v18, v9;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v8 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage getMessage(io.netty.handler.codec.http2.Http2Stream)>(v7);
if v8 != null goto label1;
v9 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v10 = newarray (java.lang.Object)[1];
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v10[0] = v11;
v12 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v9, "Data Frame received for unknown stream id %d", v10);
throw v12;
label1:
v13 = interfaceinvoke v8.<io.netty.handler.codec.http.FullHttpMessage: io.netty.buffer.ByteBuf content()>();
v14 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v15 = virtualinvoke v13.<io.netty.buffer.ByteBuf: int readableBytes()>();
v16 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: int maxContentLength>;
v17 = v16 - v14;
if v15 <= v17 goto label2;
v18 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR>;
v19 = newarray (java.lang.Object)[2];
v20 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: int maxContentLength>;
v21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v20);
v19[0] = v21;
v22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v19[1] = v22;
v23 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v18, "Content length exceeded max of %d for stream id %d", v19);
throw v23;
label2:
v24 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v13.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int)>(v3, v24, v14);
if v5 == 0 goto label3;
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void fireChannelRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpMessage,boolean,io.netty.handler.codec.http2.Http2Stream)>(v1, v8, 0, v7);
label3:
v25 = v14 + v4;
return v25;
}
public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.FullHttpMessage v8;
io.netty.handler.codec.http2.Http2Connection v6;
io.netty.handler.codec.http2.Http2Headers v3;
int v2, v4;
io.netty.handler.codec.http2.Http2Stream v7;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v8 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage processHeadersBegin(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean,boolean)>(v1, v7, v3, v5, 1, 1);
if v8 == null goto label1;
specialinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void processHeadersEnd(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http.FullHttpMessage,boolean)>(v1, v7, v8, v5);
label1:
return;
}
public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, short, boolean, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http.HttpHeaders v12, v15;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.util.AsciiString v14, v17;
io.netty.channel.ChannelHandlerContext v1;
short v5;
io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames v13, v16;
int v2, v4, v7;
io.netty.handler.codec.http2.Http2Stream v10;
boolean v6, v8;
io.netty.handler.codec.http.FullHttpMessage v11;
io.netty.handler.codec.http2.Http2Connection v9;
io.netty.handler.codec.http2.Http2Headers v3;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: short;
v6 := @parameter5: boolean;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection>;
v10 = interfaceinvoke v9.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v11 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage processHeadersBegin(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean,boolean)>(v1, v10, v3, v8, 1, 1);
if v11 == null goto label2;
if v4 == 0 goto label1;
v12 = interfaceinvoke v11.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v13 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_DEPENDENCY_ID>;
v14 = virtualinvoke v13.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
virtualinvoke v12.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v14, v4);
label1:
v15 = interfaceinvoke v11.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v16 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_WEIGHT>;
v17 = virtualinvoke v16.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
virtualinvoke v15.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence,short)>(v17, v5);
specialinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void processHeadersEnd(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http.FullHttpMessage,boolean)>(v1, v10, v11, v8);
label2:
return;
}
public void onRstStreamRead(io.netty.channel.ChannelHandlerContext, int, long) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v8;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
long v3;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.FullHttpMessage v6;
io.netty.handler.codec.http2.Http2Connection v4;
io.netty.handler.codec.http2.Http2Exception v9;
int v2;
io.netty.handler.codec.http2.Http2Error v7;
io.netty.handler.codec.http2.Http2Stream v5;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection>;
v5 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v2);
v6 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage getMessage(io.netty.handler.codec.http2.Http2Stream)>(v5);
if v6 == null goto label1;
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void onRstStreamRead(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http.FullHttpMessage)>(v5, v6);
label1:
v7 = staticinvoke <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error valueOf(long)>(v3);
v8 = newarray (java.lang.Object)[0];
v9 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v2, v7, "HTTP/2 to HTTP layer caught stream reset", v8);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v9);
return;
}
public void onPushPromiseRead(io.netty.channel.ChannelHandlerContext, int, int, io.netty.handler.codec.http2.Http2Headers, int) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http.HttpHeaders v16, v19;
java.lang.Object[] v13;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
io.netty.util.AsciiString v10, v18, v21;
java.lang.Integer v14;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames v17, v20;
io.netty.handler.codec.http2.Http2Exception v15;
int v2, v3, v5;
io.netty.handler.codec.http2.Http2Stream v7;
java.lang.CharSequence v8;
io.netty.handler.codec.http.HttpResponseStatus v9;
io.netty.handler.codec.http.FullHttpMessage v11;
io.netty.handler.codec.http2.Http2Connection v6;
io.netty.handler.codec.http2.Http2Headers v4;
io.netty.handler.codec.http2.Http2Error v12;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Headers;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.Http2Connection connection>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream stream(int)>(v3);
v8 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2Headers: java.lang.CharSequence status()>();
if v8 != null goto label1;
v9 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus OK>;
v10 = virtualinvoke v9.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.util.AsciiString codeAsText()>();
interfaceinvoke v4.<io.netty.handler.codec.http2.Http2Headers: io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence)>(v10);
label1:
v11 = virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http.FullHttpMessage processHeadersBegin(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean,boolean)>(v1, v7, v4, 0, 0, 0);
if v11 != null goto label2;
v12 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v13 = newarray (java.lang.Object)[1];
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v13[0] = v14;
v15 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v12, "Push Promise Frame received for pre-existing stream id %d", v13);
throw v15;
label2:
v16 = interfaceinvoke v11.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v17 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_PROMISE_ID>;
v18 = virtualinvoke v17.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
virtualinvoke v16.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v18, v2);
v19 = interfaceinvoke v11.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v20 = <io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames STREAM_WEIGHT>;
v21 = virtualinvoke v20.<io.netty.handler.codec.http2.HttpConversionUtil$ExtensionHeaderNames: io.netty.util.AsciiString text()>();
virtualinvoke v19.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence,short)>(v21, 16);
specialinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void processHeadersEnd(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http.FullHttpMessage,boolean)>(v1, v7, v11, 0);
return;
}
public void onSettingsRead(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Settings) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2Settings v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Settings;
v3 = v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: boolean propagateSettings>;
if v3 == 0 goto label1;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)>(v2);
label1:
return;
}
protected void onRstStreamRead(io.netty.handler.codec.http2.Http2Stream, io.netty.handler.codec.http.FullHttpMessage)
{
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http.FullHttpMessage v2;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v0;
v0 := @this: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 := @parameter1: io.netty.handler.codec.http.FullHttpMessage;
virtualinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: void removeMessage(io.netty.handler.codec.http2.Http2Stream,boolean)>(v1, 1);
return;
}
static void <clinit>()
{
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$1 v0;
v0 = new io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$1;
specialinvoke v0.<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$1: void <init>()>();
<io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter$ImmediateSendDetector DEFAULT_SEND_DETECTOR> = v0;
return;
}
}