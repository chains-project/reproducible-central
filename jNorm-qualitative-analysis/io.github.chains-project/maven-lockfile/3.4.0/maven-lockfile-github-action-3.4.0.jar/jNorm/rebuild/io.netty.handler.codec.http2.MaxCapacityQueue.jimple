final class io.netty.handler.codec.http2.MaxCapacityQueue extends java.lang.Object implements java.util.Queue
{
private final java.util.Queue queue;
private final int maxCapacity;
void <init>(java.util.Queue, int)
{
int v2;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.util.Queue;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue> = v1;
v0.<io.netty.handler.codec.http2.MaxCapacityQueue: int maxCapacity> = v2;
return;
}
public boolean add(java.lang.Object)
{
java.lang.IllegalStateException v3;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.MaxCapacityQueue: boolean offer(java.lang.Object)>(v1);
if v2 == 0 goto label1;
return 1;
label1:
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
}
public boolean offer(java.lang.Object)
{
int v2, v4;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v1;
java.util.Queue v3, v5;
boolean v6;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: int maxCapacity>;
v3 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v4 = interfaceinvoke v3.<java.util.Queue: int size()>();
if v2 > v4 goto label1;
return 0;
label1:
v5 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v6 = interfaceinvoke v5.<java.util.Queue: boolean offer(java.lang.Object)>(v1);
return v6;
}
public java.lang.Object remove()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v2;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object remove()>();
return v2;
}
public java.lang.Object poll()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v2;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object poll()>();
return v2;
}
public java.lang.Object element()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v2;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object element()>();
return v2;
}
public java.lang.Object peek()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v2;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object peek()>();
return v2;
}
public int size()
{
int v2;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: int size()>();
return v2;
}
public boolean isEmpty()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: boolean isEmpty()>();
return v2;
}
public boolean contains(java.lang.Object)
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v1;
java.util.Queue v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean contains(java.lang.Object)>(v1);
return v3;
}
public java.util.Iterator iterator()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v1;
java.util.Iterator v2;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: java.util.Iterator iterator()>();
return v2;
}
public java.lang.Object[] toArray()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object[] v2;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object[] toArray()>();
return v2;
}
public java.lang.Object[] toArray(java.lang.Object[])
{
java.lang.Object[] v1, v3;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v2;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v3 = interfaceinvoke v2.<java.util.Queue: java.lang.Object[] toArray(java.lang.Object[])>(v1);
return v3;
}
public boolean remove(java.lang.Object)
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.lang.Object v1;
java.util.Queue v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean remove(java.lang.Object)>(v1);
return v3;
}
public boolean containsAll(java.util.Collection)
{
java.util.Collection v1;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.util.Collection;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean containsAll(java.util.Collection)>(v1);
return v3;
}
public boolean addAll(java.util.Collection)
{
java.lang.IllegalStateException v8;
java.util.Collection v1;
int v2, v3, v4, v5;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v6;
boolean v7;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.util.Collection;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: int maxCapacity>;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.MaxCapacityQueue: int size()>();
v4 = interfaceinvoke v1.<java.util.Collection: int size()>();
v5 = v3 + v4;
if v2 < v5 goto label1;
v6 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v7 = interfaceinvoke v6.<java.util.Queue: boolean addAll(java.util.Collection)>(v1);
return v7;
label1:
v8 = new java.lang.IllegalStateException;
specialinvoke v8.<java.lang.IllegalStateException: void <init>()>();
throw v8;
}
public boolean removeAll(java.util.Collection)
{
java.util.Collection v1;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.util.Collection;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean removeAll(java.util.Collection)>(v1);
return v3;
}
public boolean retainAll(java.util.Collection)
{
java.util.Collection v1;
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 := @parameter0: java.util.Collection;
v2 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean retainAll(java.util.Collection)>(v1);
return v3;
}
public void clear()
{
io.netty.handler.codec.http2.MaxCapacityQueue v0;
java.util.Queue v1;
v0 := @this: io.netty.handler.codec.http2.MaxCapacityQueue;
v1 = v0.<io.netty.handler.codec.http2.MaxCapacityQueue: java.util.Queue queue>;
interfaceinvoke v1.<java.util.Queue: void clear()>();
return;
}
}