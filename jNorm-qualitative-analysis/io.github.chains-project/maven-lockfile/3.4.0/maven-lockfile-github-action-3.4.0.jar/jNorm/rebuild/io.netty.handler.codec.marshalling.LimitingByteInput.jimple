class io.netty.handler.codec.marshalling.LimitingByteInput extends java.lang.Object implements org.jboss.marshalling.ByteInput
{
private static final io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION;
private final org.jboss.marshalling.ByteInput input;
private final long limit;
private long read;
void <init>(org.jboss.marshalling.ByteInput, long)
{
org.jboss.marshalling.ByteInput v1;
io.netty.handler.codec.marshalling.LimitingByteInput v0;
long v2, v3;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 := @parameter0: org.jboss.marshalling.ByteInput;
v2 := @parameter1: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.marshalling.LimitingByteInput: org.jboss.marshalling.ByteInput input> = v1;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: long checkPositive(long,java.lang.String)>(v2, "limit");
v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long limit> = v3;
return;
}
public void close() throws java.io.IOException
{
io.netty.handler.codec.marshalling.LimitingByteInput v0;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
return;
}
public int available() throws java.io.IOException
{
org.jboss.marshalling.ByteInput v1;
io.netty.handler.codec.marshalling.LimitingByteInput v0;
int v2, v3;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: org.jboss.marshalling.ByteInput input>;
v2 = interfaceinvoke v1.<org.jboss.marshalling.ByteInput: int available()>();
v3 = specialinvoke v0.<io.netty.handler.codec.marshalling.LimitingByteInput: int readable(int)>(v2);
return v3;
}
public int read() throws java.io.IOException
{
org.jboss.marshalling.ByteInput v2;
io.netty.handler.codec.marshalling.LimitingByteInput v0;
int v1, v3;
long v4, v5;
io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException v6;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 = specialinvoke v0.<io.netty.handler.codec.marshalling.LimitingByteInput: int readable(int)>(1);
if v1 <= 0 goto label1;
v2 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: org.jboss.marshalling.ByteInput input>;
v3 = interfaceinvoke v2.<org.jboss.marshalling.ByteInput: int read()>();
v4 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read>;
v5 = v4 + 1L;
v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read> = v5;
return v3;
label1:
v6 = <io.netty.handler.codec.marshalling.LimitingByteInput: io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION>;
throw v6;
}
public int read(byte[]) throws java.io.IOException
{
byte[] v1;
io.netty.handler.codec.marshalling.LimitingByteInput v0;
int v2, v3;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<io.netty.handler.codec.marshalling.LimitingByteInput: int read(byte[],int,int)>(v1, 0, v2);
return v3;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
org.jboss.marshalling.ByteInput v5;
long v7, v8;
io.netty.handler.codec.marshalling.LimitingByteInput v0;
int v2, v3, v4, v6;
io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException v9;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = specialinvoke v0.<io.netty.handler.codec.marshalling.LimitingByteInput: int readable(int)>(v3);
if v4 <= 0 goto label1;
v5 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: org.jboss.marshalling.ByteInput input>;
v6 = interfaceinvoke v5.<org.jboss.marshalling.ByteInput: int read(byte[],int,int)>(v1, v2, v4);
v7 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read>;
v8 = v7 + v6;
v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read> = v8;
return v6;
label1:
v9 = <io.netty.handler.codec.marshalling.LimitingByteInput: io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION>;
throw v9;
}
public long skip(long) throws java.io.IOException
{
org.jboss.marshalling.ByteInput v3;
long v1, v4, v5, v6;
io.netty.handler.codec.marshalling.LimitingByteInput v0;
int v2;
io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException v7;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 := @parameter0: long;
v2 = specialinvoke v0.<io.netty.handler.codec.marshalling.LimitingByteInput: int readable(int)>(v1);
if v2 <= 0 goto label1;
v3 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: org.jboss.marshalling.ByteInput input>;
v4 = interfaceinvoke v3.<org.jboss.marshalling.ByteInput: long skip(long)>(v2);
v5 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read>;
v6 = v5 + v4;
v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read> = v6;
return v4;
label1:
v7 = <io.netty.handler.codec.marshalling.LimitingByteInput: io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION>;
throw v7;
}
private int readable(int)
{
io.netty.handler.codec.marshalling.LimitingByteInput v0;
int v1;
long v2, v3, v4, v5;
v0 := @this: io.netty.handler.codec.marshalling.LimitingByteInput;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long limit>;
v3 = v0.<io.netty.handler.codec.marshalling.LimitingByteInput: long read>;
v4 = v2 - v3;
v5 = staticinvoke <java.lang.Math: long min(long,long)>(v1, v4);
return v5;
}
static void <clinit>()
{
io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException v0;
v0 = new io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException;
specialinvoke v0.<io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException: void <init>()>();
<io.netty.handler.codec.marshalling.LimitingByteInput: io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION> = v0;
return;
}
}