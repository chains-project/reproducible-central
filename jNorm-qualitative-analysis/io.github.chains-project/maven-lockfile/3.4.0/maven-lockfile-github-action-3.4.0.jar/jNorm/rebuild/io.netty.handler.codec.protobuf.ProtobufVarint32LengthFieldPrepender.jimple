public class io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender extends io.netty.handler.codec.MessageToByteEncoder
{
public void <init>()
{
io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender v0;
v0 := @this: io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>()>();
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v3;
int v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v5 = staticinvoke <io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender: int computeRawVarint32Size(int)>(v4);
v6 = v5 + v4;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf ensureWritable(int)>(v6);
staticinvoke <io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender: void writeRawVarint32(io.netty.buffer.ByteBuf,int)>(v3, v4);
v7 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int)>(v2, v7, v4);
return;
}
static void writeRawVarint32(io.netty.buffer.ByteBuf, int)
{
io.netty.buffer.ByteBuf v0;
int v1, v2, v3, v4, v5;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
label1:
v2 = (int) -128;
v3 = v1 & v2;
if v3 != 0 goto label2;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v1);
return;
label2:
v4 = v1 & 127;
v5 = v4 | 128;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v5);
v1 = v1 >>> 7;
goto label1;
}
static int computeRawVarint32Size(int)
{
int v0, v1, v2, v3, v4, v5, v6;
v0 := @parameter0: int;
v1 = (int) -128;
v2 = v0 & v1;
if v2 != 0 goto label1;
return 1;
label1:
v3 = (int) -16384;
v4 = v0 & v3;
if v4 != 0 goto label2;
return 2;
label2:
v5 = v0 & -2097152;
if v5 != 0 goto label3;
return 3;
label3:
v6 = v0 & -268435456;
if v6 != 0 goto label4;
return 4;
label4:
return 5;
}
}