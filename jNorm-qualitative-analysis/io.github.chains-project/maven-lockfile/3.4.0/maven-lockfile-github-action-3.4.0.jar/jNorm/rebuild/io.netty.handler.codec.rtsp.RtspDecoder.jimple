public class io.netty.handler.codec.rtsp.RtspDecoder extends io.netty.handler.codec.http.HttpObjectDecoder
{
private static final io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS;
private boolean isDecodingRequest;
private static final java.util.regex.Pattern versionPattern;
public static final int DEFAULT_MAX_CONTENT_LENGTH;
public void <init>()
{
io.netty.handler.codec.rtsp.RtspDecoder v0;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
specialinvoke v0.<io.netty.handler.codec.rtsp.RtspDecoder: void <init>(int,int,int)>(4096, 8192, 8192);
return;
}
public void <init>(int, int, int)
{
io.netty.handler.codec.rtsp.RtspDecoder v0;
int v1, v2, v3, v4;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v3 * 2;
specialinvoke v0.<io.netty.handler.codec.http.HttpObjectDecoder: void <init>(int,int,int,boolean)>(v1, v2, v4, 0);
return;
}
public void <init>(int, int, int, boolean)
{
io.netty.handler.codec.rtsp.RtspDecoder v0;
int v1, v2, v3, v5;
boolean v4;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 = v3 * 2;
specialinvoke v0.<io.netty.handler.codec.http.HttpObjectDecoder: void <init>(int,int,int,boolean,boolean)>(v1, v2, v5, 0, v4);
return;
}
protected io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpVersion v16, v8;
java.lang.String[] v1;
io.netty.handler.codec.http.DefaultHttpRequest v14;
java.util.regex.Matcher v4;
int v11;
java.lang.String v10, v12, v15, v17, v19, v3, v7;
boolean v13, v20, v5;
io.netty.handler.codec.http.HttpMethod v18;
io.netty.handler.codec.http.HttpResponseStatus v9;
io.netty.handler.codec.rtsp.RtspDecoder v0;
io.netty.handler.codec.http.DefaultHttpResponse v6;
java.util.regex.Pattern v2;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
v1 := @parameter0: java.lang.String[];
v2 = <io.netty.handler.codec.rtsp.RtspDecoder: java.util.regex.Pattern versionPattern>;
v3 = v1[0];
v4 = virtualinvoke v2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v3);
v5 = virtualinvoke v4.<java.util.regex.Matcher: boolean matches()>();
if v5 == 0 goto label1;
v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean isDecodingRequest> = 0;
v6 = new io.netty.handler.codec.http.DefaultHttpResponse;
v7 = v1[0];
v8 = staticinvoke <io.netty.handler.codec.rtsp.RtspVersions: io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String)>(v7);
v9 = new io.netty.handler.codec.http.HttpResponseStatus;
v10 = v1[1];
v11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v10);
v12 = v1[2];
specialinvoke v9.<io.netty.handler.codec.http.HttpResponseStatus: void <init>(int,java.lang.String)>(v11, v12);
v13 = v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean validateHeaders>;
specialinvoke v6.<io.netty.handler.codec.http.DefaultHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean)>(v8, v9, v13);
return v6;
label1:
v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean isDecodingRequest> = 1;
v14 = new io.netty.handler.codec.http.DefaultHttpRequest;
v15 = v1[2];
v16 = staticinvoke <io.netty.handler.codec.rtsp.RtspVersions: io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String)>(v15);
v17 = v1[0];
v18 = staticinvoke <io.netty.handler.codec.rtsp.RtspMethods: io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String)>(v17);
v19 = v1[1];
v20 = v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean validateHeaders>;
specialinvoke v14.<io.netty.handler.codec.http.DefaultHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean)>(v16, v18, v19, v20);
return v14;
}
protected boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.rtsp.RtspDecoder v0;
io.netty.handler.codec.http.HttpMessage v1;
io.netty.util.AsciiString v4;
boolean v2, v5, v6;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v2 = specialinvoke v0.<io.netty.handler.codec.http.HttpObjectDecoder: boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage)>(v1);
if v2 != 0 goto label1;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = <io.netty.handler.codec.rtsp.RtspHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v5 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v4);
if v5 != 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
protected io.netty.handler.codec.http.HttpMessage createInvalidMessage()
{
io.netty.handler.codec.http.HttpVersion v3, v7;
io.netty.handler.codec.http.DefaultFullHttpRequest v2;
io.netty.handler.codec.http.HttpMethod v4;
io.netty.handler.codec.http.HttpResponseStatus v8;
io.netty.handler.codec.rtsp.RtspDecoder v0;
io.netty.handler.codec.http.DefaultFullHttpResponse v6;
boolean v1, v5, v9;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
v1 = v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean isDecodingRequest>;
if v1 == 0 goto label1;
v2 = new io.netty.handler.codec.http.DefaultFullHttpRequest;
v3 = <io.netty.handler.codec.rtsp.RtspVersions: io.netty.handler.codec.http.HttpVersion RTSP_1_0>;
v4 = <io.netty.handler.codec.rtsp.RtspMethods: io.netty.handler.codec.http.HttpMethod OPTIONS>;
v5 = v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean validateHeaders>;
specialinvoke v2.<io.netty.handler.codec.http.DefaultFullHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean)>(v3, v4, "/bad-request", v5);
return v2;
label1:
v6 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v7 = <io.netty.handler.codec.rtsp.RtspVersions: io.netty.handler.codec.http.HttpVersion RTSP_1_0>;
v8 = <io.netty.handler.codec.rtsp.RtspDecoder: io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS>;
v9 = v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean validateHeaders>;
specialinvoke v6.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean)>(v7, v8, v9);
return v6;
}
protected boolean isDecodingRequest()
{
io.netty.handler.codec.rtsp.RtspDecoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.rtsp.RtspDecoder;
v1 = v0.<io.netty.handler.codec.rtsp.RtspDecoder: boolean isDecodingRequest>;
return v1;
}
static void <clinit>()
{
io.netty.handler.codec.http.HttpResponseStatus v0;
java.util.regex.Pattern v1;
v0 = new io.netty.handler.codec.http.HttpResponseStatus;
specialinvoke v0.<io.netty.handler.codec.http.HttpResponseStatus: void <init>(int,java.lang.String)>(999, "Unknown");
<io.netty.handler.codec.rtsp.RtspDecoder: io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("RTSP/\\d\\.\\d");
<io.netty.handler.codec.rtsp.RtspDecoder: java.util.regex.Pattern versionPattern> = v1;
return;
}
}