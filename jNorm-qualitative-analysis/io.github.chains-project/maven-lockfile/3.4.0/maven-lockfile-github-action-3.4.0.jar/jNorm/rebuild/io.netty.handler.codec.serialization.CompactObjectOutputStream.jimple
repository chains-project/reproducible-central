class io.netty.handler.codec.serialization.CompactObjectOutputStream extends java.io.ObjectOutputStream
{
static final int TYPE_FAT_DESCRIPTOR;
static final int TYPE_THIN_DESCRIPTOR;
void <init>(java.io.OutputStream) throws java.io.IOException
{
io.netty.handler.codec.serialization.CompactObjectOutputStream v0;
java.io.OutputStream v1;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectOutputStream;
v1 := @parameter0: java.io.OutputStream;
specialinvoke v0.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(v1);
return;
}
protected void writeStreamHeader() throws java.io.IOException
{
io.netty.handler.codec.serialization.CompactObjectOutputStream v0;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectOutputStream;
virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectOutputStream: void writeByte(int)>(5);
return;
}
protected void writeClassDescriptor(java.io.ObjectStreamClass) throws java.io.IOException
{
java.io.ObjectStreamClass v1;
long v6;
byte v7;
io.netty.handler.codec.serialization.CompactObjectOutputStream v0;
java.lang.Class v2;
java.lang.String v8;
boolean v3, v4, v5;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectOutputStream;
v1 := @parameter0: java.io.ObjectStreamClass;
v2 = virtualinvoke v1.<java.io.ObjectStreamClass: java.lang.Class forClass()>();
v3 = virtualinvoke v2.<java.lang.Class: boolean isPrimitive()>();
if v3 != 0 goto label1;
v4 = virtualinvoke v2.<java.lang.Class: boolean isArray()>();
if v4 != 0 goto label1;
v5 = virtualinvoke v2.<java.lang.Class: boolean isInterface()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v1.<java.io.ObjectStreamClass: long getSerialVersionUID()>();
v7 = v6 cmp 0L;
if v7 != 0 goto label2;
label1:
virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectOutputStream: void write(int)>(0);
specialinvoke v0.<java.io.ObjectOutputStream: void writeClassDescriptor(java.io.ObjectStreamClass)>(v1);
goto label3;
label2:
virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectOutputStream: void write(int)>(1);
v8 = virtualinvoke v1.<java.io.ObjectStreamClass: java.lang.String getName()>();
virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectOutputStream: void writeUTF(java.lang.String)>(v8);
label3:
return;
}
}