abstract class io.netty.handler.codec.serialization.ReferenceMap extends java.lang.Object implements java.util.Map
{
private final java.util.Map delegate;
protected void <init>(java.util.Map)
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.util.Map v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate> = v1;
return;
}
abstract java.lang.ref.Reference fold(java.lang.Object);
private java.lang.Object unfold(java.lang.ref.Reference)
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.ref.Reference v1;
java.lang.Object v2;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.lang.ref.Reference;
if v1 != null goto label1;
return null;
label1:
v2 = virtualinvoke v1.<java.lang.ref.Reference: java.lang.Object get()>();
return v2;
}
public int size()
{
int v2;
io.netty.handler.codec.serialization.ReferenceMap v0;
java.util.Map v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
return v2;
}
public boolean isEmpty()
{
io.netty.handler.codec.serialization.ReferenceMap v0;
boolean v2;
java.util.Map v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
return v2;
}
public boolean containsKey(java.lang.Object)
{
java.util.Map v2;
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.Object v1;
boolean v3;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v3;
}
public boolean containsValue(java.lang.Object)
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public java.lang.Object get(java.lang.Object)
{
java.util.Map v2;
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.Object v1, v3, v4;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v4 = specialinvoke v0.<io.netty.handler.codec.serialization.ReferenceMap: java.lang.Object unfold(java.lang.ref.Reference)>(v3);
return v4;
}
public java.lang.Object put(java.lang.Object, java.lang.Object)
{
java.lang.ref.Reference v4;
java.util.Map v3;
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.Object v1, v2, v5, v6;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v4 = virtualinvoke v0.<io.netty.handler.codec.serialization.ReferenceMap: java.lang.ref.Reference fold(java.lang.Object)>(v2);
v5 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v4);
v6 = specialinvoke v0.<io.netty.handler.codec.serialization.ReferenceMap: java.lang.Object unfold(java.lang.ref.Reference)>(v5);
return v6;
}
public java.lang.Object remove(java.lang.Object)
{
java.util.Map v2;
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.Object v1, v3, v4;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
v4 = specialinvoke v0.<io.netty.handler.codec.serialization.ReferenceMap: java.lang.Object unfold(java.lang.ref.Reference)>(v3);
return v4;
}
public void putAll(java.util.Map)
{
java.util.Iterator v3;
io.netty.handler.codec.serialization.ReferenceMap v0;
java.util.Set v2;
java.lang.ref.Reference v9;
java.util.Map v1, v6;
java.lang.Object v5, v7, v8;
boolean v4;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
v9 = virtualinvoke v0.<io.netty.handler.codec.serialization.ReferenceMap: java.lang.ref.Reference fold(java.lang.Object)>(v8);
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v9);
goto label1;
label2:
return;
}
public void clear()
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.util.Map v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
interfaceinvoke v1.<java.util.Map: void clear()>();
return;
}
public java.util.Set keySet()
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.util.Set v2;
java.util.Map v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 = v0.<io.netty.handler.codec.serialization.ReferenceMap: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
public java.util.Collection values()
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Set entrySet()
{
io.netty.handler.codec.serialization.ReferenceMap v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.netty.handler.codec.serialization.ReferenceMap;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
}