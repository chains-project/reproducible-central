public class io.netty.handler.codec.spdy.SpdyStreamStatus extends java.lang.Object implements java.lang.Comparable
{
public static final io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_STREAM;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus REFUSED_STREAM;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus UNSUPPORTED_VERSION;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus CANCEL;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus FLOW_CONTROL_ERROR;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_IN_USE;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_ALREADY_CLOSED;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_CREDENTIALS;
public static final io.netty.handler.codec.spdy.SpdyStreamStatus FRAME_TOO_LARGE;
private final int code;
private final java.lang.String statusPhrase;
public static io.netty.handler.codec.spdy.SpdyStreamStatus valueOf(int)
{
io.netty.handler.codec.spdy.SpdyStreamStatus v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
java.lang.IllegalArgumentException v1;
int v0;
java.lang.String v14;
v0 := @parameter0: int;
if v0 != 0 goto label01;
v1 = new java.lang.IllegalArgumentException;
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("0 is not a valid status code for a RST_STREAM");
throw v1;
label01:
tableswitch(v0)
{
case 1: goto label02;
case 2: goto label03;
case 3: goto label04;
case 4: goto label05;
case 5: goto label06;
case 6: goto label07;
case 7: goto label08;
case 8: goto label09;
case 9: goto label10;
case 10: goto label11;
case 11: goto label12;
default: goto label13;
};
label02:
v2 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR>;
return v2;
label03:
v3 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_STREAM>;
return v3;
label04:
v4 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus REFUSED_STREAM>;
return v4;
label05:
v5 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus UNSUPPORTED_VERSION>;
return v5;
label06:
v6 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus CANCEL>;
return v6;
label07:
v7 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR>;
return v7;
label08:
v8 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus FLOW_CONTROL_ERROR>;
return v8;
label09:
v9 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_IN_USE>;
return v9;
label10:
v10 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_ALREADY_CLOSED>;
return v10;
label11:
v11 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_CREDENTIALS>;
return v11;
label12:
v12 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus FRAME_TOO_LARGE>;
return v12;
label13:
v13 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("UNKNOWN (\u0001)");
specialinvoke v13.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(v0, v14);
return v13;
}
public void <init>(int, java.lang.String)
{
io.netty.handler.codec.spdy.SpdyStreamStatus v0;
int v1;
java.lang.Object v4;
java.lang.String v2;
java.lang.IllegalArgumentException v3;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("0 is not a valid status code for a RST_STREAM");
throw v3;
label1:
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "statusPhrase");
v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: java.lang.String statusPhrase> = v4;
v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code> = v1;
return;
}
public int code()
{
int v1;
io.netty.handler.codec.spdy.SpdyStreamStatus v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 = v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code>;
return v1;
}
public java.lang.String statusPhrase()
{
java.lang.String v1;
io.netty.handler.codec.spdy.SpdyStreamStatus v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 = v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: java.lang.String statusPhrase>;
return v1;
}
public int hashCode()
{
int v1;
io.netty.handler.codec.spdy.SpdyStreamStatus v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 = virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code()>();
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.spdy.SpdyStreamStatus v0;
int v3, v4;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.spdy.SpdyStreamStatus;
if v2 != 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code()>();
v4 = virtualinvoke v1.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code()>();
if v3 != v4 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public java.lang.String toString()
{
java.lang.String v1;
io.netty.handler.codec.spdy.SpdyStreamStatus v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 = virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: java.lang.String statusPhrase()>();
return v1;
}
public int compareTo(io.netty.handler.codec.spdy.SpdyStreamStatus)
{
io.netty.handler.codec.spdy.SpdyStreamStatus v0, v1;
int v2, v3, v4;
v0 := @this: io.netty.handler.codec.spdy.SpdyStreamStatus;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyStreamStatus;
v2 = virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code()>();
v3 = virtualinvoke v1.<io.netty.handler.codec.spdy.SpdyStreamStatus: int code()>();
v4 = v2 - v3;
return v4;
}
static void <clinit>()
{
io.netty.handler.codec.spdy.SpdyStreamStatus v0, v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(1, "PROTOCOL_ERROR");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR> = v0;
v1 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v1.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(2, "INVALID_STREAM");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_STREAM> = v1;
v2 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v2.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(3, "REFUSED_STREAM");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus REFUSED_STREAM> = v2;
v3 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v3.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(4, "UNSUPPORTED_VERSION");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus UNSUPPORTED_VERSION> = v3;
v4 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v4.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(5, "CANCEL");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus CANCEL> = v4;
v5 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v5.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(6, "INTERNAL_ERROR");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR> = v5;
v6 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v6.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(7, "FLOW_CONTROL_ERROR");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus FLOW_CONTROL_ERROR> = v6;
v7 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v7.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(8, "STREAM_IN_USE");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_IN_USE> = v7;
v8 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v8.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(9, "STREAM_ALREADY_CLOSED");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_ALREADY_CLOSED> = v8;
v9 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v9.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(10, "INVALID_CREDENTIALS");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_CREDENTIALS> = v9;
v10 = new io.netty.handler.codec.spdy.SpdyStreamStatus;
specialinvoke v10.<io.netty.handler.codec.spdy.SpdyStreamStatus: void <init>(int,java.lang.String)>(11, "FRAME_TOO_LARGE");
<io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus FRAME_TOO_LARGE> = v10;
return;
}
}