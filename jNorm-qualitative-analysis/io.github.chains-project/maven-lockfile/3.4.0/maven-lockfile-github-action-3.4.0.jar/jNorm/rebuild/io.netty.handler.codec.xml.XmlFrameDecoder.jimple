public class io.netty.handler.codec.xml.XmlFrameDecoder extends io.netty.handler.codec.ByteToMessageDecoder
{
private final int maxFrameLength;
public void <init>(int)
{
int v1, v2;
io.netty.handler.codec.xml.XmlFrameDecoder v0;
v0 := @this: io.netty.handler.codec.xml.XmlFrameDecoder;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v1, "maxFrameLength");
v0.<io.netty.handler.codec.xml.XmlFrameDecoder: int maxFrameLength> = v2;
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.xml.XmlFrameDecoder v0;
byte v14, v19, v22, v28, v32, v36, v40, v41, v44;
boolean v15, v23, v24, v25, v4, v5, v6;
java.util.List v3;
long v7;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v48;
int v10, v11, v12, v13, v16, v17, v18, v20, v21, v26, v27, v29, v30, v31, v33, v34, v35, v37, v38, v39, v42, v43, v45, v46, v47, v8, v9;
v0 := @this: io.netty.handler.codec.xml.XmlFrameDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = 0;
v5 = 0;
v6 = 0;
v7 = 0L;
v8 = 0;
v9 = 0;
v10 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int writerIndex()>();
v11 = v0.<io.netty.handler.codec.xml.XmlFrameDecoder: int maxFrameLength>;
if v10 <= v11 goto label01;
v12 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v12);
specialinvoke v0.<io.netty.handler.codec.xml.XmlFrameDecoder: void fail(long)>(v10);
return;
label01:
v13 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
label02:
if v13 >= v10 goto label17;
v14 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v13);
if v4 != 0 goto label04;
v15 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(v14);
if v15 == 0 goto label03;
v9 = v9 + 1;
goto label16;
label03:
if v4 != 0 goto label04;
if v14 == 60 goto label04;
staticinvoke <io.netty.handler.codec.xml.XmlFrameDecoder: void fail(io.netty.channel.ChannelHandlerContext)>(v1);
v16 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v16);
return;
label04:
if v6 != 0 goto label12;
if v14 != 60 goto label11;
v4 = 1;
v17 = v10 - 1;
if v13 >= v17 goto label16;
v18 = v13 + 1;
v19 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v18);
if v19 != 47 goto label07;
v20 = v13 + 2;
label05:
v21 = v10 - 1;
if v20 > v21 goto label16;
v22 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v20);
if v22 != 62 goto label06;
v7 = v7 - 1L;
goto label16;
label06:
v20 = v20 + 1;
goto label05;
label07:
v23 = staticinvoke <io.netty.handler.codec.xml.XmlFrameDecoder: boolean isValidStartCharForXmlElement(byte)>(v19);
if v23 == 0 goto label08;
v5 = 1;
v7 = v7 + 1L;
goto label16;
label08:
if v19 != 33 goto label10;
v24 = staticinvoke <io.netty.handler.codec.xml.XmlFrameDecoder: boolean isCommentBlockStart(io.netty.buffer.ByteBuf,int)>(v2, v13);
if v24 == 0 goto label09;
v7 = v7 + 1L;
goto label16;
label09:
v25 = staticinvoke <io.netty.handler.codec.xml.XmlFrameDecoder: boolean isCDATABlockStart(io.netty.buffer.ByteBuf,int)>(v2, v13);
if v25 == 0 goto label16;
v7 = v7 + 1L;
v6 = 1;
goto label16;
label10:
if v19 != 63 goto label16;
v7 = v7 + 1L;
goto label16;
label11:
if v6 != 0 goto label12;
if v14 != 47 goto label12;
v26 = v10 - 1;
if v13 >= v26 goto label16;
v27 = v13 + 1;
v28 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v27);
if v28 != 62 goto label16;
v7 = v7 - 1L;
goto label16;
label12:
if v14 != 62 goto label16;
v8 = v13 + 1;
v29 = v13 - 1;
v30 = (int) -1;
if v29 <= v30 goto label15;
v31 = v13 - 1;
v32 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v31);
if v6 != 0 goto label14;
if v32 != 63 goto label13;
v7 = v7 - 1L;
goto label15;
label13:
if v32 != 45 goto label15;
v33 = v13 - 2;
v34 = (int) -1;
if v33 <= v34 goto label15;
v35 = v13 - 2;
v36 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v35);
if v36 != 45 goto label15;
v7 = v7 - 1L;
goto label15;
label14:
if v32 != 93 goto label15;
v37 = v13 - 2;
v38 = (int) -1;
if v37 <= v38 goto label15;
v39 = v13 - 2;
v40 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v39);
if v40 != 93 goto label15;
v7 = v7 - 1L;
v6 = 0;
label15:
if v5 == 0 goto label16;
v41 = v7 cmp 0L;
if v41 == 0 goto label17;
label16:
v13 = v13 + 1;
goto label02;
label17:
v42 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v43 = v8 - v42;
v44 = v7 cmp 0L;
if v44 != 0 goto label19;
if v43 <= 0 goto label19;
v45 = v42 + v43;
if v45 < v10 goto label18;
v43 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
label18:
v46 = v42 + v9;
v47 = v43 - v9;
v48 = staticinvoke <io.netty.handler.codec.xml.XmlFrameDecoder: io.netty.buffer.ByteBuf extractFrame(io.netty.buffer.ByteBuf,int,int)>(v2, v46, v47);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v43);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v48);
label19:
return;
}
private void fail(long)
{
io.netty.handler.codec.xml.XmlFrameDecoder v0;
io.netty.handler.codec.TooLongFrameException v3, v6;
long v1;
byte v2;
int v4, v7;
java.lang.String v5, v8;
v0 := @this: io.netty.handler.codec.xml.XmlFrameDecoder;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = new io.netty.handler.codec.TooLongFrameException;
v4 = v0.<io.netty.handler.codec.xml.XmlFrameDecoder: int maxFrameLength>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,long)>(v4, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("frame length exceeds \u0001: \u0001 - discarded");
specialinvoke v3.<io.netty.handler.codec.TooLongFrameException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v6 = new io.netty.handler.codec.TooLongFrameException;
v7 = v0.<io.netty.handler.codec.xml.XmlFrameDecoder: int maxFrameLength>;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("frame length exceeds \u0001 - discarding");
specialinvoke v6.<io.netty.handler.codec.TooLongFrameException: void <init>(java.lang.String)>(v8);
throw v6;
}
private static void fail(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v0;
io.netty.handler.codec.CorruptedFrameException v1;
v0 := @parameter0: io.netty.channel.ChannelHandlerContext;
v1 = new io.netty.handler.codec.CorruptedFrameException;
specialinvoke v1.<io.netty.handler.codec.CorruptedFrameException: void <init>(java.lang.String)>("frame contains content before the xml starts");
interfaceinvoke v0.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v1);
return;
}
private static io.netty.buffer.ByteBuf extractFrame(io.netty.buffer.ByteBuf, int, int)
{
io.netty.buffer.ByteBuf v0, v3;
int v1, v2;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf copy(int,int)>(v1, v2);
return v3;
}
private static boolean isValidStartCharForXmlElement(byte)
{
byte v0;
boolean v1;
v0 := @parameter0: byte;
if v0 < 97 goto label1;
if v0 <= 122 goto label3;
label1:
if v0 < 65 goto label2;
if v0 <= 90 goto label3;
label2:
if v0 == 58 goto label3;
if v0 != 95 goto label4;
label3:
v1 = 1;
goto label5;
label4:
v1 = 0;
label5:
return v1;
}
private static boolean isCommentBlockStart(io.netty.buffer.ByteBuf, int)
{
byte v5, v7;
io.netty.buffer.ByteBuf v0;
int v1, v2, v3, v4, v6;
boolean v8;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
v3 = v2 - 3;
if v1 >= v3 goto label1;
v4 = v1 + 2;
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v4);
if v5 != 45 goto label1;
v6 = v1 + 3;
v7 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v6);
if v7 != 45 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
return v8;
}
private static boolean isCDATABlockStart(io.netty.buffer.ByteBuf, int)
{
byte v11, v13, v15, v17, v5, v7, v9;
io.netty.buffer.ByteBuf v0;
int v1, v10, v12, v14, v16, v2, v3, v4, v6, v8;
boolean v18;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
v3 = v2 - 8;
if v1 >= v3 goto label1;
v4 = v1 + 2;
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v4);
if v5 != 91 goto label1;
v6 = v1 + 3;
v7 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v6);
if v7 != 67 goto label1;
v8 = v1 + 4;
v9 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v8);
if v9 != 68 goto label1;
v10 = v1 + 5;
v11 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v10);
if v11 != 65 goto label1;
v12 = v1 + 6;
v13 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v12);
if v13 != 84 goto label1;
v14 = v1 + 7;
v15 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v14);
if v15 != 65 goto label1;
v16 = v1 + 8;
v17 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v16);
if v17 != 91 goto label1;
v18 = 1;
goto label2;
label1:
v18 = 0;
label2:
return v18;
}
}