final class io.netty.handler.ipfilter.IpSubnetFilterRuleComparator extends java.lang.Object implements java.util.Comparator
{
static final io.netty.handler.ipfilter.IpSubnetFilterRuleComparator INSTANCE;
private void <init>()
{
io.netty.handler.ipfilter.IpSubnetFilterRuleComparator v0;
v0 := @this: io.netty.handler.ipfilter.IpSubnetFilterRuleComparator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public int compare(java.lang.Object, java.lang.Object)
{
int v3;
java.lang.Object v1, v2;
io.netty.handler.ipfilter.IpSubnetFilterRuleComparator v0;
v0 := @this: io.netty.handler.ipfilter.IpSubnetFilterRuleComparator;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v1.<io.netty.handler.ipfilter.IpSubnetFilterRule: int compareTo(java.net.InetSocketAddress)>(v2);
return v3;
}
static void <clinit>()
{
io.netty.handler.ipfilter.IpSubnetFilterRuleComparator v0;
v0 = new io.netty.handler.ipfilter.IpSubnetFilterRuleComparator;
specialinvoke v0.<io.netty.handler.ipfilter.IpSubnetFilterRuleComparator: void <init>()>();
<io.netty.handler.ipfilter.IpSubnetFilterRuleComparator: io.netty.handler.ipfilter.IpSubnetFilterRuleComparator INSTANCE> = v0;
return;
}
}