final class io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper extends io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory
{
private void <init>()
{
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper v0;
v0 := @this: io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper;
specialinvoke v0.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory: void <init>()>();
return;
}
public javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine, io.netty.buffer.ByteBufAllocator, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, boolean)
{
io.netty.buffer.ByteBufAllocator v2;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v3;
javax.net.ssl.SSLEngine v1;
io.netty.handler.ssl.ConscryptAlpnSslEngine v6;
io.netty.handler.ssl.JettyAlpnSslEngine v12;
io.netty.handler.ssl.BouncyCastleAlpnSslEngine v8;
java.lang.String v15, v16;
io.netty.handler.ssl.JdkAlpnSslEngine v10;
boolean v11, v4, v5, v7, v9;
java.lang.UnsupportedOperationException v13;
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper v0;
java.lang.Class v14;
v0 := @this: io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper;
v1 := @parameter0: javax.net.ssl.SSLEngine;
v2 := @parameter1: io.netty.buffer.ByteBufAllocator;
v3 := @parameter2: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v4 := @parameter3: boolean;
v5 = staticinvoke <io.netty.handler.ssl.Conscrypt: boolean isEngineSupported(javax.net.ssl.SSLEngine)>(v1);
if v5 == 0 goto label3;
if v4 == 0 goto label1;
v6 = staticinvoke <io.netty.handler.ssl.ConscryptAlpnSslEngine: io.netty.handler.ssl.ConscryptAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)>(v1, v2, v3);
goto label2;
label1:
v6 = staticinvoke <io.netty.handler.ssl.ConscryptAlpnSslEngine: io.netty.handler.ssl.ConscryptAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)>(v1, v2, v3);
label2:
return v6;
label3:
v7 = staticinvoke <io.netty.handler.ssl.BouncyCastle: boolean isInUse(javax.net.ssl.SSLEngine)>(v1);
if v7 == 0 goto label4;
v8 = new io.netty.handler.ssl.BouncyCastleAlpnSslEngine;
specialinvoke v8.<io.netty.handler.ssl.BouncyCastleAlpnSslEngine: void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean)>(v1, v3, v4);
return v8;
label4:
v9 = staticinvoke <io.netty.handler.ssl.JdkAlpnSslUtils: boolean supportsAlpn()>();
if v9 == 0 goto label5;
v10 = new io.netty.handler.ssl.JdkAlpnSslEngine;
specialinvoke v10.<io.netty.handler.ssl.JdkAlpnSslEngine: void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean)>(v1, v3, v4);
return v10;
label5:
v11 = staticinvoke <io.netty.handler.ssl.JettyAlpnSslEngine: boolean isAvailable()>();
if v11 == 0 goto label8;
if v4 == 0 goto label6;
v12 = staticinvoke <io.netty.handler.ssl.JettyAlpnSslEngine: io.netty.handler.ssl.JettyAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)>(v1, v3);
goto label7;
label6:
v12 = staticinvoke <io.netty.handler.ssl.JettyAlpnSslEngine: io.netty.handler.ssl.JettyAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)>(v1, v3);
label7:
return v12;
label8:
v13 = new java.lang.UnsupportedOperationException;
v14 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v15 = virtualinvoke v14.<java.lang.Class: java.lang.String getName()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("ALPN not supported. Unable to wrap SSLEngine of type \'\u0001\')");
specialinvoke v13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v16);
throw v13;
}
}