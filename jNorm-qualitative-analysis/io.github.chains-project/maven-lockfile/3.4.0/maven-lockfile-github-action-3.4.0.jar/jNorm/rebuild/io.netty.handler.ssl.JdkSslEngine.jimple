class io.netty.handler.ssl.JdkSslEngine extends javax.net.ssl.SSLEngine implements io.netty.handler.ssl.ApplicationProtocolAccessor
{
private final javax.net.ssl.SSLEngine engine;
private volatile java.lang.String applicationProtocol;
void <init>(javax.net.ssl.SSLEngine)
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: javax.net.ssl.SSLEngine;
specialinvoke v0.<javax.net.ssl.SSLEngine: void <init>()>();
v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine> = v1;
return;
}
public java.lang.String getNegotiatedApplicationProtocol()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: java.lang.String applicationProtocol>;
return v1;
}
void setNegotiatedApplicationProtocol(java.lang.String)
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.lang.String;
v0.<io.netty.handler.ssl.JdkSslEngine: java.lang.String applicationProtocol> = v1;
return;
}
public javax.net.ssl.SSLSession getSession()
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLSession v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLSession getSession()>();
return v2;
}
public javax.net.ssl.SSLEngine getWrappedEngine()
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
return v1;
}
public void closeInbound() throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v1.<javax.net.ssl.SSLEngine: void closeInbound()>();
return;
}
public void closeOutbound()
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v1.<javax.net.ssl.SSLEngine: void closeOutbound()>();
return;
}
public java.lang.String getPeerHost()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()>();
return v2;
}
public int getPeerPort()
{
int v2;
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: int getPeerPort()>();
return v2;
}
public javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngineResult v4;
java.nio.ByteBuffer v1, v2;
javax.net.ssl.SSLEngine v3;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: java.nio.ByteBuffer;
v3 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v4 = virtualinvoke v3.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>(v1, v2);
return v4;
}
public javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer) throws javax.net.ssl.SSLException
{
java.nio.ByteBuffer[] v1;
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngineResult v4;
java.nio.ByteBuffer v2;
javax.net.ssl.SSLEngine v3;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.nio.ByteBuffer[];
v2 := @parameter1: java.nio.ByteBuffer;
v3 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v4 = virtualinvoke v3.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)>(v1, v2);
return v4;
}
public javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer) throws javax.net.ssl.SSLException
{
java.nio.ByteBuffer[] v1;
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngineResult v6;
int v2, v3;
java.nio.ByteBuffer v4;
javax.net.ssl.SSLEngine v5;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.nio.ByteBuffer[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: java.nio.ByteBuffer;
v5 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v6 = virtualinvoke v5.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)>(v1, v2, v3, v4);
return v6;
}
public javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngineResult v4;
java.nio.ByteBuffer v1, v2;
javax.net.ssl.SSLEngine v3;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: java.nio.ByteBuffer;
v3 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v4 = virtualinvoke v3.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>(v1, v2);
return v4;
}
public javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[]) throws javax.net.ssl.SSLException
{
java.nio.ByteBuffer[] v2;
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngineResult v4;
java.nio.ByteBuffer v1;
javax.net.ssl.SSLEngine v3;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: java.nio.ByteBuffer[];
v3 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v4 = virtualinvoke v3.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])>(v1, v2);
return v4;
}
public javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException
{
java.nio.ByteBuffer[] v2;
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngineResult v6;
int v3, v4;
java.nio.ByteBuffer v1;
javax.net.ssl.SSLEngine v5;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: java.nio.ByteBuffer[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v6 = virtualinvoke v5.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>(v1, v2, v3, v4);
return v6;
}
public java.lang.Runnable getDelegatedTask()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.Runnable v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: java.lang.Runnable getDelegatedTask()>();
return v2;
}
public boolean isInboundDone()
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: boolean isInboundDone()>();
return v2;
}
public boolean isOutboundDone()
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: boolean isOutboundDone()>();
return v2;
}
public java.lang.String[] getSupportedCipherSuites()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String[] v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedCipherSuites()>();
return v2;
}
public java.lang.String[] getEnabledCipherSuites()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String[] v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: java.lang.String[] getEnabledCipherSuites()>();
return v2;
}
public void setEnabledCipherSuites(java.lang.String[])
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String[] v1;
javax.net.ssl.SSLEngine v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.lang.String[];
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>(v1);
return;
}
public java.lang.String[] getSupportedProtocols()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String[] v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedProtocols()>();
return v2;
}
public java.lang.String[] getEnabledProtocols()
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String[] v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: java.lang.String[] getEnabledProtocols()>();
return v2;
}
public void setEnabledProtocols(java.lang.String[])
{
io.netty.handler.ssl.JdkSslEngine v0;
java.lang.String[] v1;
javax.net.ssl.SSLEngine v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: java.lang.String[];
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setEnabledProtocols(java.lang.String[])>(v1);
return;
}
public javax.net.ssl.SSLSession getHandshakeSession()
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLSession v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLSession getHandshakeSession()>();
return v2;
}
public void beginHandshake() throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v1.<javax.net.ssl.SSLEngine: void beginHandshake()>();
return;
}
public javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()
{
javax.net.ssl.SSLEngineResult$HandshakeStatus v2;
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()>();
return v2;
}
public void setUseClientMode(boolean)
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v1;
javax.net.ssl.SSLEngine v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: boolean;
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setUseClientMode(boolean)>(v1);
return;
}
public boolean getUseClientMode()
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: boolean getUseClientMode()>();
return v2;
}
public void setNeedClientAuth(boolean)
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v1;
javax.net.ssl.SSLEngine v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: boolean;
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setNeedClientAuth(boolean)>(v1);
return;
}
public boolean getNeedClientAuth()
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: boolean getNeedClientAuth()>();
return v2;
}
public void setWantClientAuth(boolean)
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v1;
javax.net.ssl.SSLEngine v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: boolean;
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setWantClientAuth(boolean)>(v1);
return;
}
public boolean getWantClientAuth()
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: boolean getWantClientAuth()>();
return v2;
}
public void setEnableSessionCreation(boolean)
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v1;
javax.net.ssl.SSLEngine v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: boolean;
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setEnableSessionCreation(boolean)>(v1);
return;
}
public boolean getEnableSessionCreation()
{
io.netty.handler.ssl.JdkSslEngine v0;
boolean v2;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: boolean getEnableSessionCreation()>();
return v2;
}
public javax.net.ssl.SSLParameters getSSLParameters()
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v1;
javax.net.ssl.SSLParameters v2;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
v2 = virtualinvoke v1.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()>();
return v2;
}
public void setSSLParameters(javax.net.ssl.SSLParameters)
{
io.netty.handler.ssl.JdkSslEngine v0;
javax.net.ssl.SSLEngine v2;
javax.net.ssl.SSLParameters v1;
v0 := @this: io.netty.handler.ssl.JdkSslEngine;
v1 := @parameter0: javax.net.ssl.SSLParameters;
v2 = v0.<io.netty.handler.ssl.JdkSslEngine: javax.net.ssl.SSLEngine engine>;
virtualinvoke v2.<javax.net.ssl.SSLEngine: void setSSLParameters(javax.net.ssl.SSLParameters)>(v1);
return;
}
}