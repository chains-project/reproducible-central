class io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 extends java.lang.Object implements org.eclipse.jetty.alpn.ALPN$ClientProvider
{
final io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator;
final io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener;
final io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine this$0;
void <init>(io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener)
{
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine v1;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener v3;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v2;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 v0;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1;
v1 := @parameter0: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine;
v2 := @parameter1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v3 := @parameter2: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener;
v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine this$0> = v1;
v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator> = v2;
v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.List protocols()
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v1;
java.util.List v2;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 v0;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1;
v1 = v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator>;
v2 = interfaceinvoke v1.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator: java.util.List protocols()>();
return v2;
}
public void selected(java.lang.String) throws javax.net.ssl.SSLException
{
java.lang.Throwable v3;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener v2;
javax.net.ssl.SSLHandshakeException v4;
java.lang.String v1;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 v0;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1;
v1 := @parameter0: java.lang.String;
label1:
v2 = v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener>;
interfaceinvoke v2.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener: void selected(java.lang.String)>(v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = staticinvoke <io.netty.handler.ssl.SslUtils: javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable)>(v3);
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void unsupported()
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener v1;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 v0;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1;
v1 = v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener>;
interfaceinvoke v1.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener: void unsupported()>();
return;
}
}