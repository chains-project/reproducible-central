final class io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine extends io.netty.handler.ssl.JettyAlpnSslEngine
{
void <init>(javax.net.ssl.SSLEngine, io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener v5;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v2;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory v3;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 v7;
javax.net.ssl.SSLEngine v1;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine v0;
java.util.List v4;
java.lang.Object v6;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine;
v1 := @parameter0: javax.net.ssl.SSLEngine;
v2 := @parameter1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
specialinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine: void <init>(javax.net.ssl.SSLEngine)>(v1);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "applicationNegotiator");
v3 = interfaceinvoke v2.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory()>();
v4 = interfaceinvoke v2.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator: java.util.List protocols()>();
v5 = interfaceinvoke v3.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List)>(v0, v4);
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v5, "protocolListener");
v7 = new io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1;
specialinvoke v7.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1: void <init>(io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener)>(v0, v2, v6);
staticinvoke <org.eclipse.jetty.alpn.ALPN: void put(javax.net.ssl.SSLEngine,org.eclipse.jetty.alpn.ALPN$Provider)>(v1, v7);
return;
}
public void closeInbound() throws javax.net.ssl.SSLException
{
java.lang.Throwable v2;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine;
label1:
v1 = virtualinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine: javax.net.ssl.SSLEngine getWrappedEngine()>();
staticinvoke <org.eclipse.jetty.alpn.ALPN: org.eclipse.jetty.alpn.ALPN$Provider remove(javax.net.ssl.SSLEngine)>(v1);
label2:
specialinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine: void closeInbound()>();
goto label4;
label3:
v2 := @caughtexception;
specialinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine: void closeInbound()>();
throw v2;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void closeOutbound()
{
java.lang.Throwable v2;
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine v0;
javax.net.ssl.SSLEngine v1;
v0 := @this: io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine;
label1:
v1 = virtualinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine: javax.net.ssl.SSLEngine getWrappedEngine()>();
staticinvoke <org.eclipse.jetty.alpn.ALPN: org.eclipse.jetty.alpn.ALPN$Provider remove(javax.net.ssl.SSLEngine)>(v1);
label2:
specialinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine: void closeOutbound()>();
goto label4;
label3:
v2 := @caughtexception;
specialinvoke v0.<io.netty.handler.ssl.JettyAlpnSslEngine: void closeOutbound()>();
throw v2;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}