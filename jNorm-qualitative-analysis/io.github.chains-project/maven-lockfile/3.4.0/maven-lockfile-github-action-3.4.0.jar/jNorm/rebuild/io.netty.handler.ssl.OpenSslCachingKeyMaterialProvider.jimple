final class io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider extends io.netty.handler.ssl.OpenSslKeyMaterialProvider
{
private final int maxCachedEntries;
private volatile boolean full;
private final java.util.concurrent.ConcurrentMap cache;
void <init>(javax.net.ssl.X509KeyManager, java.lang.String, int)
{
javax.net.ssl.X509KeyManager v1;
io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider v0;
int v3;
java.util.concurrent.ConcurrentHashMap v4;
java.lang.String v2;
v0 := @this: io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider;
v1 := @parameter0: javax.net.ssl.X509KeyManager;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.handler.ssl.OpenSslKeyMaterialProvider: void <init>(javax.net.ssl.X509KeyManager,java.lang.String)>(v1, v2);
v4 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: java.util.concurrent.ConcurrentMap cache> = v4;
v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: int maxCachedEntries> = v3;
return;
}
io.netty.handler.ssl.OpenSslKeyMaterial chooseKeyMaterial(io.netty.buffer.ByteBufAllocator, java.lang.String) throws java.lang.Exception
{
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider v0;
java.util.concurrent.ConcurrentMap v3, v6, v9;
int v7, v8;
java.lang.Object v10, v4;
java.lang.String v2;
io.netty.handler.ssl.OpenSslKeyMaterial v11;
boolean v5;
v0 := @this: io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: java.util.concurrent.ConcurrentMap cache>;
v4 = interfaceinvoke v3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v2);
if v4 != null goto label4;
v4 = specialinvoke v0.<io.netty.handler.ssl.OpenSslKeyMaterialProvider: io.netty.handler.ssl.OpenSslKeyMaterial chooseKeyMaterial(io.netty.buffer.ByteBufAllocator,java.lang.String)>(v1, v2);
if v4 != null goto label1;
return null;
label1:
v5 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: boolean full>;
if v5 == 0 goto label2;
return v4;
label2:
v6 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: java.util.concurrent.ConcurrentMap cache>;
v7 = interfaceinvoke v6.<java.util.concurrent.ConcurrentMap: int size()>();
v8 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: int maxCachedEntries>;
if v7 <= v8 goto label3;
v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: boolean full> = 1;
return v4;
label3:
v9 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: java.util.concurrent.ConcurrentMap cache>;
v10 = interfaceinvoke v9.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v2, v4);
if v10 == null goto label4;
interfaceinvoke v4.<io.netty.handler.ssl.OpenSslKeyMaterial: boolean release()>();
v4 = v10;
label4:
v11 = interfaceinvoke v4.<io.netty.handler.ssl.OpenSslKeyMaterial: io.netty.handler.ssl.OpenSslKeyMaterial retain()>();
return v11;
}
void destroy()
{
java.util.Iterator v3;
io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider v0;
java.util.Collection v2;
java.util.concurrent.ConcurrentMap v1, v6;
java.lang.Object v5;
boolean v4, v7;
v0 := @this: io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider;
label1:
v1 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: java.util.concurrent.ConcurrentMap cache>;
v2 = interfaceinvoke v1.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>();
v3 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v5.<io.netty.handler.ssl.OpenSslKeyMaterial: boolean release()>();
interfaceinvoke v3.<java.util.Iterator: void remove()>();
goto label2;
label3:
v6 = v0.<io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider: java.util.concurrent.ConcurrentMap cache>;
v7 = interfaceinvoke v6.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>();
if v7 == 0 goto label1;
return;
}
}