public final class io.netty.handler.ssl.OpenSslCertificateException extends java.security.cert.CertificateException
{
private static final long serialVersionUID;
private final int errorCode;
public void <init>(int)
{
int v1;
io.netty.handler.ssl.OpenSslCertificateException v0;
java.lang.String v2;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateException;
v1 := @parameter0: int;
v2 = null;
specialinvoke v0.<io.netty.handler.ssl.OpenSslCertificateException: void <init>(java.lang.String,int)>(v2, v1);
return;
}
public void <init>(java.lang.String, int)
{
io.netty.handler.ssl.OpenSslCertificateException v0;
int v2, v3;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.security.cert.CertificateException: void <init>(java.lang.String)>(v1);
v3 = staticinvoke <io.netty.handler.ssl.OpenSslCertificateException: int checkErrorCode(int)>(v2);
v0.<io.netty.handler.ssl.OpenSslCertificateException: int errorCode> = v3;
return;
}
public void <init>(java.lang.String, java.lang.Throwable, int)
{
java.lang.Throwable v2;
io.netty.handler.ssl.OpenSslCertificateException v0;
int v3, v4;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: int;
specialinvoke v0.<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>(v1, v2);
v4 = staticinvoke <io.netty.handler.ssl.OpenSslCertificateException: int checkErrorCode(int)>(v3);
v0.<io.netty.handler.ssl.OpenSslCertificateException: int errorCode> = v4;
return;
}
public void <init>(java.lang.Throwable, int)
{
int v2;
java.lang.Throwable v1;
io.netty.handler.ssl.OpenSslCertificateException v0;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateException;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.ssl.OpenSslCertificateException: void <init>(java.lang.String,java.lang.Throwable,int)>(null, v1, v2);
return;
}
public int errorCode()
{
int v1;
io.netty.handler.ssl.OpenSslCertificateException v0;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateException;
v1 = v0.<io.netty.handler.ssl.OpenSslCertificateException: int errorCode>;
return v1;
}
private static int checkErrorCode(int)
{
int v0;
java.lang.String v4;
java.lang.IllegalArgumentException v3;
boolean v1, v2;
v0 := @parameter0: int;
v1 = staticinvoke <io.netty.handler.ssl.OpenSsl: boolean isAvailable()>();
if v1 == 0 goto label1;
v2 = staticinvoke <io.netty.internal.tcnative.CertificateVerifier: boolean isValid(int)>(v0);
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("errorCode \'\u0001\' invalid, see https://www.openssl.org/docs/man1.0.2/apps/verify.html.");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
return v0;
}
}