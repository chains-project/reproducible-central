public final class io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator extends java.lang.Object implements io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator
{
private final io.netty.handler.ssl.ApplicationProtocolConfig config;
public void <init>(io.netty.handler.ssl.ApplicationProtocolConfig)
{
java.lang.Object v2;
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.ApplicationProtocolConfig v1;
v0 := @this: io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator;
v1 := @parameter0: io.netty.handler.ssl.ApplicationProtocolConfig;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "config");
v0.<io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.ApplicationProtocolConfig config> = v2;
return;
}
public java.util.List protocols()
{
java.util.List v2;
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.ApplicationProtocolConfig v1;
v0 := @this: io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator;
v1 = v0.<io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.ApplicationProtocolConfig config>;
v2 = virtualinvoke v1.<io.netty.handler.ssl.ApplicationProtocolConfig: java.util.List supportedProtocols()>();
return v2;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol()
{
io.netty.handler.ssl.ApplicationProtocolConfig$Protocol v2;
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.ApplicationProtocolConfig v1;
v0 := @this: io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator;
v1 = v0.<io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.ApplicationProtocolConfig config>;
v2 = virtualinvoke v1.<io.netty.handler.ssl.ApplicationProtocolConfig: io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol()>();
return v2;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior()
{
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior v2;
io.netty.handler.ssl.ApplicationProtocolConfig v1;
v0 := @this: io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator;
v1 = v0.<io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.ApplicationProtocolConfig config>;
v2 = virtualinvoke v1.<io.netty.handler.ssl.ApplicationProtocolConfig: io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior()>();
return v2;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior()
{
io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior v2;
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.ApplicationProtocolConfig v1;
v0 := @this: io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator;
v1 = v0.<io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.ApplicationProtocolConfig config>;
v2 = virtualinvoke v1.<io.netty.handler.ssl.ApplicationProtocolConfig: io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior()>();
return v2;
}
}