public final class io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator extends java.lang.Object implements io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator
{
private final java.util.List protocols;
public void <init>(java.lang.Iterable)
{
java.util.List v2;
java.lang.Object v3;
io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator v0;
java.lang.Iterable v1;
v0 := @this: io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator;
v1 := @parameter0: java.lang.Iterable;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.handler.ssl.ApplicationProtocolUtil: java.util.List toList(java.lang.Iterable)>(v1);
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "protocols");
v0.<io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator: java.util.List protocols> = v3;
return;
}
public transient void <init>(java.lang.String[])
{
java.util.List v2;
java.lang.Object v3;
java.lang.String[] v1;
io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator;
v1 := @parameter0: java.lang.String[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.handler.ssl.ApplicationProtocolUtil: java.util.List toList(java.lang.String[])>(v1);
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "protocols");
v0.<io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator: java.util.List protocols> = v3;
return;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol()
{
io.netty.handler.ssl.ApplicationProtocolConfig$Protocol v1;
io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator;
v1 = <io.netty.handler.ssl.ApplicationProtocolConfig$Protocol: io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN>;
return v1;
}
public java.util.List protocols()
{
java.util.List v1;
io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator;
v1 = v0.<io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator: java.util.List protocols>;
return v1;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior()
{
io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior v1;
io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator;
v1 = <io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior: io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior CHOOSE_MY_LAST_PROTOCOL>;
return v1;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior()
{
io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior v1;
io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator;
v1 = <io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior: io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior ACCEPT>;
return v1;
}
}