final class io.netty.handler.ssl.OpenSslSessionId extends java.lang.Object
{
private final byte[] id;
private final int hashCode;
static final io.netty.handler.ssl.OpenSslSessionId NULL_ID;
void <init>(byte[])
{
int v2;
byte[] v1;
io.netty.handler.ssl.OpenSslSessionId v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionId;
v1 := @parameter0: byte[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.ssl.OpenSslSessionId: byte[] id> = v1;
v2 = staticinvoke <java.util.Arrays: int hashCode(byte[])>(v1);
v0.<io.netty.handler.ssl.OpenSslSessionId: int hashCode> = v2;
return;
}
public boolean equals(java.lang.Object)
{
byte[] v3, v4;
java.lang.Object v1;
io.netty.handler.ssl.OpenSslSessionId v0;
boolean v2, v5;
v0 := @this: io.netty.handler.ssl.OpenSslSessionId;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.netty.handler.ssl.OpenSslSessionId;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<io.netty.handler.ssl.OpenSslSessionId: byte[] id>;
v4 = v1.<io.netty.handler.ssl.OpenSslSessionId: byte[] id>;
v5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(v3, v4);
return v5;
}
public java.lang.String toString()
{
byte[] v1;
java.lang.String v2, v3;
io.netty.handler.ssl.OpenSslSessionId v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionId;
v1 = v0.<io.netty.handler.ssl.OpenSslSessionId: byte[] id>;
v2 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(v1);
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("OpenSslSessionId{id=\u0001}");
return v3;
}
public int hashCode()
{
int v1;
io.netty.handler.ssl.OpenSslSessionId v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionId;
v1 = v0.<io.netty.handler.ssl.OpenSslSessionId: int hashCode>;
return v1;
}
byte[] cloneBytes()
{
byte[] v1;
java.lang.Object v2;
io.netty.handler.ssl.OpenSslSessionId v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionId;
v1 = v0.<io.netty.handler.ssl.OpenSslSessionId: byte[] id>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
static void <clinit>()
{
byte[] v1;
io.netty.handler.ssl.OpenSslSessionId v0;
v0 = new io.netty.handler.ssl.OpenSslSessionId;
v1 = <io.netty.util.internal.EmptyArrays: byte[] EMPTY_BYTES>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslSessionId: void <init>(byte[])>(v1);
<io.netty.handler.ssl.OpenSslSessionId: io.netty.handler.ssl.OpenSslSessionId NULL_ID> = v0;
return;
}
}