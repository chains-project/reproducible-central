public final class io.netty.handler.ssl.PemX509Certificate extends java.security.cert.X509Certificate implements io.netty.handler.ssl.PemEncoded
{
private static final byte[] BEGIN_CERT;
private static final byte[] END_CERT;
private final io.netty.buffer.ByteBuf content;
static transient io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator, boolean, java.security.cert.X509Certificate[]) throws java.security.cert.CertificateEncodingException
{
java.lang.Throwable v18;
java.security.cert.X509Certificate v10, v4;
io.netty.handler.ssl.PemValue v17;
io.netty.buffer.ByteBufAllocator v0;
io.netty.handler.ssl.PemEncoded v6;
io.netty.buffer.ByteBuf v7;
int v15, v16, v3, v8, v9;
java.lang.String v12, v13;
boolean v1, v14, v5;
java.lang.IllegalArgumentException v11;
java.security.cert.X509Certificate[] v2;
v0 := @parameter0: io.netty.buffer.ByteBufAllocator;
v1 := @parameter1: boolean;
v2 := @parameter2: java.security.cert.X509Certificate[];
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object[] checkNonEmpty(java.lang.Object[],java.lang.String)>(v2, "chain");
v3 = lengthof v2;
if v3 != 1 goto label01;
v4 = v2[0];
v5 = v4 instanceof io.netty.handler.ssl.PemEncoded;
if v5 == 0 goto label01;
v6 = interfaceinvoke v4.<io.netty.handler.ssl.PemEncoded: io.netty.handler.ssl.PemEncoded retain()>();
return v6;
label01:
v7 = null;
label02:
v8 = lengthof v2;
v9 = 0;
label03:
if v9 >= v8 goto label07;
v10 = v2[v9];
if v10 != null goto label04;
v11 = new java.lang.IllegalArgumentException;
v12 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v2);
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Null element in chain: \u0001");
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v13);
throw v11;
label04:
v14 = v10 instanceof io.netty.handler.ssl.PemEncoded;
if v14 == 0 goto label05;
v15 = lengthof v2;
v7 = staticinvoke <io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator,boolean,io.netty.handler.ssl.PemEncoded,int,io.netty.buffer.ByteBuf)>(v0, v1, v10, v15, v7);
goto label06;
label05:
v16 = lengthof v2;
v7 = staticinvoke <io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate,int,io.netty.buffer.ByteBuf)>(v0, v1, v10, v16, v7);
label06:
v9 = v9 + 1;
goto label03;
label07:
v17 = new io.netty.handler.ssl.PemValue;
specialinvoke v17.<io.netty.handler.ssl.PemValue: void <init>(io.netty.buffer.ByteBuf,boolean)>(v7, 0);
label08:
return v17;
label09:
v18 := @caughtexception;
if v7 == null goto label10;
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
label10:
throw v18;
catch java.lang.Throwable from label02 to label08 with label09;
}
private static io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator, boolean, io.netty.handler.ssl.PemEncoded, int, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBufAllocator v0;
io.netty.handler.ssl.PemEncoded v2;
io.netty.buffer.ByteBuf v4, v5, v8;
int v3, v6, v7;
boolean v1;
v0 := @parameter0: io.netty.buffer.ByteBufAllocator;
v1 := @parameter1: boolean;
v2 := @parameter2: io.netty.handler.ssl.PemEncoded;
v3 := @parameter3: int;
v4 := @parameter4: io.netty.buffer.ByteBuf;
v5 = interfaceinvoke v2.<io.netty.handler.ssl.PemEncoded: io.netty.buffer.ByteBuf content()>();
if v4 != null goto label1;
v6 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = v6 * v3;
v4 = staticinvoke <io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf newBuffer(io.netty.buffer.ByteBufAllocator,boolean,int)>(v0, v1, v7);
label1:
v8 = virtualinvoke v5.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice()>();
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v8);
return v4;
}
private static io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator, boolean, java.security.cert.X509Certificate, int, io.netty.buffer.ByteBuf) throws java.security.cert.CertificateEncodingException
{
java.lang.Throwable v18, v19;
java.security.cert.X509Certificate v2;
byte[] v12, v16, v17, v5, v8;
io.netty.buffer.ByteBufAllocator v0;
io.netty.buffer.ByteBuf v4, v6, v7;
int v10, v11, v13, v14, v15, v3, v9;
boolean v1;
v0 := @parameter0: io.netty.buffer.ByteBufAllocator;
v1 := @parameter1: boolean;
v2 := @parameter2: java.security.cert.X509Certificate;
v3 := @parameter3: int;
v4 := @parameter4: io.netty.buffer.ByteBuf;
v5 = virtualinvoke v2.<java.security.cert.X509Certificate: byte[] getEncoded()>();
v6 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v5);
label1:
v7 = staticinvoke <io.netty.handler.ssl.SslUtils: io.netty.buffer.ByteBuf toBase64(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf)>(v0, v6);
label2:
if v4 != null goto label3;
v8 = <io.netty.handler.ssl.PemX509Certificate: byte[] BEGIN_CERT>;
v9 = lengthof v8;
v10 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int readableBytes()>();
v11 = v9 + v10;
v12 = <io.netty.handler.ssl.PemX509Certificate: byte[] END_CERT>;
v13 = lengthof v12;
v14 = v11 + v13;
v15 = v14 * v3;
v4 = staticinvoke <io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf newBuffer(io.netty.buffer.ByteBufAllocator,boolean,int)>(v0, v1, v15);
label3:
v16 = <io.netty.handler.ssl.PemX509Certificate: byte[] BEGIN_CERT>;
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v16);
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v7);
v17 = <io.netty.handler.ssl.PemX509Certificate: byte[] END_CERT>;
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v17);
label4:
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
goto label6;
label5:
v18 := @caughtexception;
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
throw v18;
label6:
virtualinvoke v6.<io.netty.buffer.ByteBuf: boolean release()>();
goto label8;
label7:
v19 := @caughtexception;
virtualinvoke v6.<io.netty.buffer.ByteBuf: boolean release()>();
throw v19;
label8:
return v4;
catch java.lang.Throwable from label2 to label4 with label5;
catch java.lang.Throwable from label1 to label6 with label7;
}
private static io.netty.buffer.ByteBuf newBuffer(io.netty.buffer.ByteBufAllocator, boolean, int)
{
io.netty.buffer.ByteBuf v3;
io.netty.buffer.ByteBufAllocator v0;
int v2;
boolean v1;
v0 := @parameter0: io.netty.buffer.ByteBufAllocator;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
if v1 == 0 goto label1;
v3 = interfaceinvoke v0.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int)>(v2);
goto label2;
label1:
v3 = interfaceinvoke v0.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(v2);
label2:
return v3;
}
public static io.netty.handler.ssl.PemX509Certificate valueOf(byte[])
{
byte[] v0;
io.netty.handler.ssl.PemX509Certificate v2;
io.netty.buffer.ByteBuf v1;
v0 := @parameter0: byte[];
v1 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v0);
v2 = staticinvoke <io.netty.handler.ssl.PemX509Certificate: io.netty.handler.ssl.PemX509Certificate valueOf(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public static io.netty.handler.ssl.PemX509Certificate valueOf(io.netty.buffer.ByteBuf)
{
io.netty.handler.ssl.PemX509Certificate v1;
io.netty.buffer.ByteBuf v0;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = new io.netty.handler.ssl.PemX509Certificate;
specialinvoke v1.<io.netty.handler.ssl.PemX509Certificate: void <init>(io.netty.buffer.ByteBuf)>(v0);
return v1;
}
private void <init>(io.netty.buffer.ByteBuf)
{
java.lang.Object v2;
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: io.netty.buffer.ByteBuf;
specialinvoke v0.<java.security.cert.X509Certificate: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "content");
v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content> = v2;
return;
}
public boolean isSensitive()
{
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
return 0;
}
public int refCnt()
{
int v2;
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int refCnt()>();
return v2;
}
public io.netty.buffer.ByteBuf content()
{
io.netty.buffer.ByteBuf v3;
io.netty.util.IllegalReferenceCountException v2;
int v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = virtualinvoke v0.<io.netty.handler.ssl.PemX509Certificate: int refCnt()>();
if v1 > 0 goto label1;
v2 = new io.netty.util.IllegalReferenceCountException;
specialinvoke v2.<io.netty.util.IllegalReferenceCountException: void <init>(int)>(v1);
throw v2;
label1:
v3 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
return v3;
}
public io.netty.handler.ssl.PemX509Certificate copy()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.ssl.PemX509Certificate v0, v3;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf copy()>();
v3 = virtualinvoke v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.handler.ssl.PemX509Certificate replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.ssl.PemX509Certificate duplicate()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.ssl.PemX509Certificate v0, v3;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf duplicate()>();
v3 = virtualinvoke v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.handler.ssl.PemX509Certificate replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.ssl.PemX509Certificate retainedDuplicate()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.ssl.PemX509Certificate v0, v3;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedDuplicate()>();
v3 = virtualinvoke v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.handler.ssl.PemX509Certificate replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.ssl.PemX509Certificate replace(io.netty.buffer.ByteBuf)
{
io.netty.handler.ssl.PemX509Certificate v0, v2;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = new io.netty.handler.ssl.PemX509Certificate;
specialinvoke v2.<io.netty.handler.ssl.PemX509Certificate: void <init>(io.netty.buffer.ByteBuf)>(v1);
return v2;
}
public io.netty.handler.ssl.PemX509Certificate retain()
{
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
return v0;
}
public io.netty.handler.ssl.PemX509Certificate retain(int)
{
int v1;
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v2;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain(int)>(v1);
return v0;
}
public io.netty.handler.ssl.PemX509Certificate touch()
{
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf touch()>();
return v0;
}
public io.netty.handler.ssl.PemX509Certificate touch(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v2;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf touch(java.lang.Object)>(v1);
return v0;
}
public boolean release()
{
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v1;
boolean v2;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
return v2;
}
public boolean release(int)
{
io.netty.buffer.ByteBuf v2;
int v1;
io.netty.handler.ssl.PemX509Certificate v0;
boolean v3;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release(int)>(v1);
return v3;
}
public byte[] getEncoded()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean hasUnsupportedCriticalExtension()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Set getCriticalExtensionOIDs()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Set getNonCriticalExtensionOIDs()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public byte[] getExtensionValue(java.lang.String)
{
java.lang.UnsupportedOperationException v2;
io.netty.handler.ssl.PemX509Certificate v0;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public void checkValidity()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void checkValidity(java.util.Date)
{
java.lang.UnsupportedOperationException v2;
io.netty.handler.ssl.PemX509Certificate v0;
java.util.Date v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: java.util.Date;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public int getVersion()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.math.BigInteger getSerialNumber()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.security.Principal getIssuerDN()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.security.Principal getSubjectDN()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Date getNotBefore()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Date getNotAfter()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public byte[] getTBSCertificate()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public byte[] getSignature()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String getSigAlgName()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String getSigAlgOID()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public byte[] getSigAlgParams()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean[] getIssuerUniqueID()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean[] getSubjectUniqueID()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean[] getKeyUsage()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public int getBasicConstraints()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void verify(java.security.PublicKey)
{
java.lang.UnsupportedOperationException v2;
java.security.PublicKey v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: java.security.PublicKey;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public void verify(java.security.PublicKey, java.lang.String)
{
java.lang.UnsupportedOperationException v3;
java.security.PublicKey v1;
io.netty.handler.ssl.PemX509Certificate v0;
java.lang.String v2;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: java.security.PublicKey;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public java.security.PublicKey getPublicKey()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.PemX509Certificate v0;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean equals(java.lang.Object)
{
io.netty.buffer.ByteBuf v3, v4;
java.lang.Object v1;
io.netty.handler.ssl.PemX509Certificate v0;
boolean v2, v5;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
v2 = v1 instanceof io.netty.handler.ssl.PemX509Certificate;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v4 = v1.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v5 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean equals(java.lang.Object)>(v4);
return v5;
}
public int hashCode()
{
int v2;
io.netty.handler.ssl.PemX509Certificate v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int hashCode()>();
return v2;
}
public java.lang.String toString()
{
io.netty.buffer.ByteBuf v1;
java.nio.charset.Charset v2;
io.netty.handler.ssl.PemX509Certificate v0;
java.lang.String v3;
v0 := @this: io.netty.handler.ssl.PemX509Certificate;
v1 = v0.<io.netty.handler.ssl.PemX509Certificate: io.netty.buffer.ByteBuf content>;
v2 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: java.lang.String toString(java.nio.charset.Charset)>(v2);
return v3;
}
static void <clinit>()
{
byte[] v2, v5;
java.nio.charset.Charset v1, v4;
java.lang.String v0, v3;
v0 = "-----BEGIN CERTIFICATE-----\n";
v1 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v2 = virtualinvoke v0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v1);
<io.netty.handler.ssl.PemX509Certificate: byte[] BEGIN_CERT> = v2;
v3 = "\n-----END CERTIFICATE-----\n";
v4 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v5 = virtualinvoke v3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v4);
<io.netty.handler.ssl.PemX509Certificate: byte[] END_CERT> = v5;
return;
}
}