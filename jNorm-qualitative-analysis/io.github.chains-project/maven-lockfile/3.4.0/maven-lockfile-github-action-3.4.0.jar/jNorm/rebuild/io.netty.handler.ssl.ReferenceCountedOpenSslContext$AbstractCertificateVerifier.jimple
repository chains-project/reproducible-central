abstract class io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier extends io.netty.internal.tcnative.CertificateVerifier
{
private final io.netty.handler.ssl.OpenSslEngineMap engineMap;
void <init>(io.netty.handler.ssl.OpenSslEngineMap)
{
io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier v0;
io.netty.handler.ssl.OpenSslEngineMap v1;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier;
v1 := @parameter0: io.netty.handler.ssl.OpenSslEngineMap;
specialinvoke v0.<io.netty.internal.tcnative.CertificateVerifier: void <init>()>();
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier: io.netty.handler.ssl.OpenSslEngineMap engineMap> = v1;
return;
}
public final int verify(long, byte[][], java.lang.String)
{
java.lang.Throwable v9;
long v1;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v5;
int v12, v14, v16, v17, v18, v19, v6, v8;
java.lang.String v3;
boolean v11, v13, v15;
io.netty.handler.ssl.OpenSslEngineMap v4;
byte[][] v2;
io.netty.util.internal.logging.InternalLogger v10;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier v0;
java.security.cert.X509Certificate[] v7;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier;
v1 := @parameter0: long;
v2 := @parameter1: byte[][];
v3 := @parameter2: java.lang.String;
v4 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier: io.netty.handler.ssl.OpenSslEngineMap engineMap>;
v5 = interfaceinvoke v4.<io.netty.handler.ssl.OpenSslEngineMap: io.netty.handler.ssl.ReferenceCountedOpenSslEngine get(long)>(v1);
if v5 != null goto label1;
v6 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_UNSPECIFIED>;
return v6;
label1:
v7 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslContext: java.security.cert.X509Certificate[] certificates(byte[][])>(v2);
label2:
virtualinvoke v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier: void verify(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String)>(v5, v7, v3);
v8 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_OK>;
label3:
return v8;
label4:
v9 := @caughtexception;
v10 = <io.netty.handler.ssl.ReferenceCountedOpenSslContext: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v10.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("verification of certificate failed", v9);
virtualinvoke v5.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void initHandshakeException(java.lang.Throwable)>(v9);
v11 = v9 instanceof io.netty.handler.ssl.OpenSslCertificateException;
if v11 == 0 goto label5;
v12 = virtualinvoke v9.<io.netty.handler.ssl.OpenSslCertificateException: int errorCode()>();
return v12;
label5:
v13 = v9 instanceof java.security.cert.CertificateExpiredException;
if v13 == 0 goto label6;
v14 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_CERT_HAS_EXPIRED>;
return v14;
label6:
v15 = v9 instanceof java.security.cert.CertificateNotYetValidException;
if v15 == 0 goto label7;
v16 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_CERT_NOT_YET_VALID>;
return v16;
label7:
v17 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v17 < 7 goto label8;
v18 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier: int translateToError(java.lang.Throwable)>(v9);
return v18;
label8:
v19 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_UNSPECIFIED>;
return v19;
catch java.lang.Throwable from label2 to label3 with label4;
}
private static int translateToError(java.lang.Throwable)
{
java.lang.Throwable v0, v3;
java.security.cert.CertPathValidatorException$BasicReason v10, v6, v8;
java.security.cert.CertPathValidatorException$Reason v5;
int v11, v12, v2, v7, v9;
boolean v1, v4;
v0 := @parameter0: java.lang.Throwable;
v1 = v0 instanceof java.security.cert.CertificateRevokedException;
if v1 == 0 goto label1;
v2 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_CERT_REVOKED>;
return v2;
label1:
v3 = virtualinvoke v0.<java.lang.Throwable: java.lang.Throwable getCause()>();
label2:
if v3 == null goto label6;
v4 = v3 instanceof java.security.cert.CertPathValidatorException;
if v4 == 0 goto label5;
v5 = virtualinvoke v3.<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException$Reason getReason()>();
v6 = <java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason EXPIRED>;
if v5 != v6 goto label3;
v7 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_CERT_HAS_EXPIRED>;
return v7;
label3:
v8 = <java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason NOT_YET_VALID>;
if v5 != v8 goto label4;
v9 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_CERT_NOT_YET_VALID>;
return v9;
label4:
v10 = <java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason REVOKED>;
if v5 != v10 goto label5;
v11 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_CERT_REVOKED>;
return v11;
label5:
v3 = virtualinvoke v3.<java.lang.Throwable: java.lang.Throwable getCause()>();
goto label2;
label6:
v12 = <io.netty.internal.tcnative.CertificateVerifier: int X509_V_ERR_UNSPECIFIED>;
return v12;
}
abstract void verify(io.netty.handler.ssl.ReferenceCountedOpenSslEngine, java.security.cert.X509Certificate[], java.lang.String) throws java.lang.Exception;
}