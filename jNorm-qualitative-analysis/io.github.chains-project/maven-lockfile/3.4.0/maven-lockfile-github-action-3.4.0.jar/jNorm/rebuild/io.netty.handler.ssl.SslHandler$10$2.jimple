class io.netty.handler.ssl.SslHandler$10$2 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.util.concurrent.Future val$closeNotifyReadTimeoutFuture;
final io.netty.handler.ssl.SslHandler$10 this$1;
void <init>(io.netty.handler.ssl.SslHandler$10, io.netty.util.concurrent.Future)
{
io.netty.handler.ssl.SslHandler$10 v1;
io.netty.util.concurrent.Future v2;
io.netty.handler.ssl.SslHandler$10$2 v0;
v0 := @this: io.netty.handler.ssl.SslHandler$10$2;
v1 := @parameter0: io.netty.handler.ssl.SslHandler$10;
v2 := @parameter1: io.netty.util.concurrent.Future;
v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.handler.ssl.SslHandler$10 this$1> = v1;
v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.util.concurrent.Future val$closeNotifyReadTimeoutFuture> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
io.netty.handler.ssl.SslHandler$10$2 v0;
io.netty.channel.ChannelFuture v9;
io.netty.channel.ChannelHandlerContext v5, v7;
io.netty.channel.ChannelPromise v11, v8;
io.netty.handler.ssl.SslHandler$10 v10, v4, v6;
io.netty.util.concurrent.Future v1, v2, v3;
v0 := @this: io.netty.handler.ssl.SslHandler$10$2;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.util.concurrent.Future val$closeNotifyReadTimeoutFuture>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.util.concurrent.Future val$closeNotifyReadTimeoutFuture>;
interfaceinvoke v3.<io.netty.util.concurrent.Future: boolean cancel(boolean)>(0);
label1:
v4 = v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.handler.ssl.SslHandler$10 this$1>;
v5 = v4.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelHandlerContext val$ctx>;
v6 = v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.handler.ssl.SslHandler$10 this$1>;
v7 = v6.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelHandlerContext val$ctx>;
v8 = interfaceinvoke v7.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v9 = interfaceinvoke v5.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v8);
v10 = v0.<io.netty.handler.ssl.SslHandler$10$2: io.netty.handler.ssl.SslHandler$10 this$1>;
v11 = v10.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelPromise val$promise>;
staticinvoke <io.netty.handler.ssl.SslHandler: void addCloseListener(io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise)>(v9, v11);
return;
}
}