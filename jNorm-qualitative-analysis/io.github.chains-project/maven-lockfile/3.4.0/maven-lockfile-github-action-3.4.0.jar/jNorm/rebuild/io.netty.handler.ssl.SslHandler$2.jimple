class io.netty.handler.ssl.SslHandler$2 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.channel.ChannelHandlerContext val$ctx;
final io.netty.handler.ssl.SslHandler this$0;
void <init>(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.ssl.SslHandler v1;
io.netty.handler.ssl.SslHandler$2 v0;
v0 := @this: io.netty.handler.ssl.SslHandler$2;
v1 := @parameter0: io.netty.handler.ssl.SslHandler;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.ssl.SslHandler$2: io.netty.handler.ssl.SslHandler this$0> = v1;
v0.<io.netty.handler.ssl.SslHandler$2: io.netty.channel.ChannelHandlerContext val$ctx> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v4;
io.netty.handler.ssl.SslHandler v3;
io.netty.handler.ssl.SslHandler$2 v0;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.ssl.SslHandler$2;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
if v2 == null goto label1;
v3 = v0.<io.netty.handler.ssl.SslHandler$2: io.netty.handler.ssl.SslHandler this$0>;
v4 = v0.<io.netty.handler.ssl.SslHandler$2: io.netty.channel.ChannelHandlerContext val$ctx>;
specialinvoke v3.<io.netty.handler.ssl.SslHandler: void setHandshakeFailureTransportFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)>(v4, v2);
label1:
return;
}
}