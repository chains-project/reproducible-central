final class io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator extends java.lang.Object
{
private static final java.security.Provider PROVIDER;
static java.lang.String[] generate(java.lang.String, java.security.KeyPair, java.security.SecureRandom, java.util.Date, java.util.Date, java.lang.String) throws java.lang.Exception
{
java.security.cert.X509Certificate v20;
java.security.KeyPair v1;
org.bouncycastle.cert.X509CertificateHolder v16;
org.bouncycastle.operator.ContentSigner v15;
java.util.Date v3, v4;
org.bouncycastle.cert.jcajce.JcaX509CertificateConverter v17, v19;
org.bouncycastle.operator.jcajce.JcaContentSignerBuilder v12;
java.lang.String[] v22;
java.security.SecureRandom v2;
org.bouncycastle.asn1.x500.X500Name v7;
java.math.BigInteger v10;
java.lang.String v0, v14, v5, v8;
boolean v13;
org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder v9;
java.security.PublicKey v11, v21;
java.security.Provider v18;
java.security.PrivateKey v6;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.security.KeyPair;
v2 := @parameter2: java.security.SecureRandom;
v3 := @parameter3: java.util.Date;
v4 := @parameter4: java.util.Date;
v5 := @parameter5: java.lang.String;
v6 = virtualinvoke v1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();
v7 = new org.bouncycastle.asn1.x500.X500Name;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("CN=\u0001");
specialinvoke v7.<org.bouncycastle.asn1.x500.X500Name: void <init>(java.lang.String)>(v8);
v9 = new org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;
v10 = new java.math.BigInteger;
specialinvoke v10.<java.math.BigInteger: void <init>(int,java.util.Random)>(64, v2);
v11 = virtualinvoke v1.<java.security.KeyPair: java.security.PublicKey getPublic()>();
specialinvoke v9.<org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder: void <init>(org.bouncycastle.asn1.x500.X500Name,java.math.BigInteger,java.util.Date,java.util.Date,org.bouncycastle.asn1.x500.X500Name,java.security.PublicKey)>(v7, v10, v3, v4, v7, v11);
v12 = new org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;
v13 = virtualinvoke v5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("EC");
if v13 == 0 goto label1;
v14 = "SHA256withECDSA";
goto label2;
label1:
v14 = "SHA256WithRSAEncryption";
label2:
specialinvoke v12.<org.bouncycastle.operator.jcajce.JcaContentSignerBuilder: void <init>(java.lang.String)>(v14);
v15 = virtualinvoke v12.<org.bouncycastle.operator.jcajce.JcaContentSignerBuilder: org.bouncycastle.operator.ContentSigner build(java.security.PrivateKey)>(v6);
v16 = virtualinvoke v9.<org.bouncycastle.cert.X509v3CertificateBuilder: org.bouncycastle.cert.X509CertificateHolder build(org.bouncycastle.operator.ContentSigner)>(v15);
v17 = new org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;
specialinvoke v17.<org.bouncycastle.cert.jcajce.JcaX509CertificateConverter: void <init>()>();
v18 = <io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator: java.security.Provider PROVIDER>;
v19 = virtualinvoke v17.<org.bouncycastle.cert.jcajce.JcaX509CertificateConverter: org.bouncycastle.cert.jcajce.JcaX509CertificateConverter setProvider(java.security.Provider)>(v18);
v20 = virtualinvoke v19.<org.bouncycastle.cert.jcajce.JcaX509CertificateConverter: java.security.cert.X509Certificate getCertificate(org.bouncycastle.cert.X509CertificateHolder)>(v16);
v21 = virtualinvoke v1.<java.security.KeyPair: java.security.PublicKey getPublic()>();
virtualinvoke v20.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>(v21);
v22 = staticinvoke <io.netty.handler.ssl.util.SelfSignedCertificate: java.lang.String[] newSelfSignedCertificate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate)>(v0, v6, v20);
return v22;
}
private void <init>()
{
io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator v0;
v0 := @this: io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
org.bouncycastle.jce.provider.BouncyCastleProvider v0;
v0 = new org.bouncycastle.jce.provider.BouncyCastleProvider;
specialinvoke v0.<org.bouncycastle.jce.provider.BouncyCastleProvider: void <init>()>();
<io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator: java.security.Provider PROVIDER> = v0;
return;
}
}