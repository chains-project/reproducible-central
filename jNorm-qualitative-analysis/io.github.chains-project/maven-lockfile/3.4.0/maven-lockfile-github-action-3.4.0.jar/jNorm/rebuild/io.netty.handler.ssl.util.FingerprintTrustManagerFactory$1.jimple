class io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
final io.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0;
void <init>(io.netty.handler.ssl.util.FingerprintTrustManagerFactory)
{
io.netty.handler.ssl.util.FingerprintTrustManagerFactory v1;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 v0;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1;
v1 := @parameter0: io.netty.handler.ssl.util.FingerprintTrustManagerFactory;
v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: io.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
{
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 v0;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
specialinvoke v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: void checkTrusted(java.lang.String,java.security.cert.X509Certificate[])>("client", v1);
return;
}
public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
{
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 v0;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
specialinvoke v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: void checkTrusted(java.lang.String,java.security.cert.X509Certificate[])>("server", v1);
return;
}
private void checkTrusted(java.lang.String, java.security.cert.X509Certificate[]) throws java.security.cert.CertificateException
{
java.security.cert.X509Certificate v3;
byte[] v10, v4;
java.security.cert.CertificateException v12;
byte[][] v7;
java.security.Principal v13;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory v6;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 v0;
int v8, v9;
java.lang.String v1, v14;
java.security.cert.X509Certificate[] v2;
boolean v11, v5;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.security.cert.X509Certificate[];
v3 = v2[0];
v4 = specialinvoke v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: byte[] fingerprint(java.security.cert.X509Certificate)>(v3);
v5 = 0;
v6 = v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: io.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0>;
v7 = v6.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory: byte[][] fingerprints>;
v8 = lengthof v7;
v9 = 0;
label1:
if v9 >= v8 goto label3;
v10 = v7[v9];
v11 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(v4, v10);
if v11 == 0 goto label2;
v5 = 1;
goto label3;
label2:
v9 = v9 + 1;
goto label1;
label3:
if v5 != 0 goto label4;
v12 = new java.security.cert.CertificateException;
v13 = virtualinvoke v3.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.security.Principal)>(v1, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 certificate with unknown fingerprint: \u0001");
specialinvoke v12.<java.security.cert.CertificateException: void <init>(java.lang.String)>(v14);
throw v12;
label4:
return;
}
private byte[] fingerprint(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException
{
java.security.cert.X509Certificate v1;
byte[] v5, v6;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory v2;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 v0;
io.netty.util.concurrent.FastThreadLocal v3;
java.lang.Object v4;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1;
v1 := @parameter0: java.security.cert.X509Certificate;
v2 = v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: io.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0>;
v3 = v2.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory: io.netty.util.concurrent.FastThreadLocal tlmd>;
v4 = virtualinvoke v3.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
virtualinvoke v4.<java.security.MessageDigest: void reset()>();
v5 = virtualinvoke v1.<java.security.cert.X509Certificate: byte[] getEncoded()>();
v6 = virtualinvoke v4.<java.security.MessageDigest: byte[] digest(byte[])>(v5);
return v6;
}
public java.security.cert.X509Certificate[] getAcceptedIssuers()
{
java.security.cert.X509Certificate[] v1;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 v0;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1;
v1 = <io.netty.util.internal.EmptyArrays: java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES>;
return v1;
}
}