final class io.netty.handler.ssl.util.X509TrustManagerWrapper extends javax.net.ssl.X509ExtendedTrustManager
{
private final javax.net.ssl.X509TrustManager delegate;
void <init>(javax.net.ssl.X509TrustManager)
{
java.lang.Object v2;
javax.net.ssl.X509TrustManager v1;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: javax.net.ssl.X509TrustManager;
specialinvoke v0.<javax.net.ssl.X509ExtendedTrustManager: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "delegate");
v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate> = v2;
return;
}
public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
{
javax.net.ssl.X509TrustManager v3;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
interfaceinvoke v3.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>(v1, v2);
return;
}
public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket) throws java.security.cert.CertificateException
{
java.net.Socket v3;
javax.net.ssl.X509TrustManager v4;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.net.Socket;
v4 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
interfaceinvoke v4.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>(v1, v2);
return;
}
public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine) throws java.security.cert.CertificateException
{
javax.net.ssl.X509TrustManager v4;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
javax.net.ssl.SSLEngine v3;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 := @parameter2: javax.net.ssl.SSLEngine;
v4 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
interfaceinvoke v4.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>(v1, v2);
return;
}
public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
{
javax.net.ssl.X509TrustManager v3;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
interfaceinvoke v3.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>(v1, v2);
return;
}
public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket) throws java.security.cert.CertificateException
{
java.net.Socket v3;
javax.net.ssl.X509TrustManager v4;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.net.Socket;
v4 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
interfaceinvoke v4.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>(v1, v2);
return;
}
public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine) throws java.security.cert.CertificateException
{
javax.net.ssl.X509TrustManager v4;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
java.lang.String v2;
java.security.cert.X509Certificate[] v1;
javax.net.ssl.SSLEngine v3;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 := @parameter2: javax.net.ssl.SSLEngine;
v4 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
interfaceinvoke v4.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>(v1, v2);
return;
}
public java.security.cert.X509Certificate[] getAcceptedIssuers()
{
java.security.cert.X509Certificate[] v2;
javax.net.ssl.X509TrustManager v1;
io.netty.handler.ssl.util.X509TrustManagerWrapper v0;
v0 := @this: io.netty.handler.ssl.util.X509TrustManagerWrapper;
v1 = v0.<io.netty.handler.ssl.util.X509TrustManagerWrapper: javax.net.ssl.X509TrustManager delegate>;
v2 = interfaceinvoke v1.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();
return v2;
}
}