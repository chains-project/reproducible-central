class io.netty.handler.stream.ChunkedWriteHandler$2 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite;
final io.netty.handler.stream.ChunkedWriteHandler this$0;
void <init>(io.netty.handler.stream.ChunkedWriteHandler, io.netty.handler.stream.ChunkedWriteHandler$PendingWrite)
{
io.netty.handler.stream.ChunkedWriteHandler v1;
io.netty.handler.stream.ChunkedWriteHandler$2 v0;
io.netty.handler.stream.ChunkedWriteHandler$PendingWrite v2;
v0 := @this: io.netty.handler.stream.ChunkedWriteHandler$2;
v1 := @parameter0: io.netty.handler.stream.ChunkedWriteHandler;
v2 := @parameter1: io.netty.handler.stream.ChunkedWriteHandler$PendingWrite;
v0.<io.netty.handler.stream.ChunkedWriteHandler$2: io.netty.handler.stream.ChunkedWriteHandler this$0> = v1;
v0.<io.netty.handler.stream.ChunkedWriteHandler$2: io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.handler.stream.ChunkedWriteHandler$2 v0;
io.netty.handler.stream.ChunkedWriteHandler$PendingWrite v2;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.stream.ChunkedWriteHandler$2;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.handler.stream.ChunkedWriteHandler$2: io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite>;
staticinvoke <io.netty.handler.stream.ChunkedWriteHandler: void handleEndOfInputFuture(io.netty.channel.ChannelFuture,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite)>(v1, v2);
return;
}
}