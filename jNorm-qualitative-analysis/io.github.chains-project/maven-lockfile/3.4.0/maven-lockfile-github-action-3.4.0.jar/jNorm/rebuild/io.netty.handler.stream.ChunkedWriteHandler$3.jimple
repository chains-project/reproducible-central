class io.netty.handler.stream.ChunkedWriteHandler$3 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite;
final boolean val$resume;
final io.netty.handler.stream.ChunkedWriteHandler this$0;
void <init>(io.netty.handler.stream.ChunkedWriteHandler, io.netty.handler.stream.ChunkedWriteHandler$PendingWrite, boolean)
{
io.netty.handler.stream.ChunkedWriteHandler$3 v0;
io.netty.handler.stream.ChunkedWriteHandler$PendingWrite v2;
io.netty.handler.stream.ChunkedWriteHandler v1;
boolean v3;
v0 := @this: io.netty.handler.stream.ChunkedWriteHandler$3;
v1 := @parameter0: io.netty.handler.stream.ChunkedWriteHandler;
v2 := @parameter1: io.netty.handler.stream.ChunkedWriteHandler$PendingWrite;
v3 := @parameter2: boolean;
v0.<io.netty.handler.stream.ChunkedWriteHandler$3: io.netty.handler.stream.ChunkedWriteHandler this$0> = v1;
v0.<io.netty.handler.stream.ChunkedWriteHandler$3: io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite> = v2;
v0.<io.netty.handler.stream.ChunkedWriteHandler$3: boolean val$resume> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.handler.stream.ChunkedWriteHandler$3 v0;
io.netty.handler.stream.ChunkedWriteHandler$PendingWrite v3;
io.netty.handler.stream.ChunkedWriteHandler v2;
boolean v4;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.stream.ChunkedWriteHandler$3;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.handler.stream.ChunkedWriteHandler$3: io.netty.handler.stream.ChunkedWriteHandler this$0>;
v3 = v0.<io.netty.handler.stream.ChunkedWriteHandler$3: io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite>;
v4 = v0.<io.netty.handler.stream.ChunkedWriteHandler$3: boolean val$resume>;
specialinvoke v2.<io.netty.handler.stream.ChunkedWriteHandler: void handleFuture(io.netty.channel.ChannelFuture,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,boolean)>(v1, v3, v4);
return;
}
}