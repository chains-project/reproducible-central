class io.netty.resolver.InetSocketAddressResolver$2 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final java.net.InetSocketAddress val$unresolvedAddress;
final io.netty.util.concurrent.Promise val$promise;
final io.netty.resolver.InetSocketAddressResolver this$0;
void <init>(io.netty.resolver.InetSocketAddressResolver, java.net.InetSocketAddress, io.netty.util.concurrent.Promise)
{
io.netty.util.concurrent.Promise v3;
io.netty.resolver.InetSocketAddressResolver v1;
io.netty.resolver.InetSocketAddressResolver$2 v0;
java.net.InetSocketAddress v2;
v0 := @this: io.netty.resolver.InetSocketAddressResolver$2;
v1 := @parameter0: io.netty.resolver.InetSocketAddressResolver;
v2 := @parameter1: java.net.InetSocketAddress;
v3 := @parameter2: io.netty.util.concurrent.Promise;
v0.<io.netty.resolver.InetSocketAddressResolver$2: io.netty.resolver.InetSocketAddressResolver this$0> = v1;
v0.<io.netty.resolver.InetSocketAddressResolver$2: java.net.InetSocketAddress val$unresolvedAddress> = v2;
v0.<io.netty.resolver.InetSocketAddressResolver$2: io.netty.util.concurrent.Promise val$promise> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v14;
io.netty.util.concurrent.Promise v12, v13;
java.util.Iterator v6;
java.net.InetSocketAddress v10, v9;
java.util.ArrayList v4;
int v11, v5;
io.netty.resolver.InetSocketAddressResolver$2 v0;
java.lang.Object v3, v8;
io.netty.util.concurrent.Future v1;
boolean v2, v7;
v0 := @this: io.netty.resolver.InetSocketAddressResolver$2;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label3;
v3 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
v4 = new java.util.ArrayList;
v5 = interfaceinvoke v3.<java.util.List: int size()>();
specialinvoke v4.<java.util.ArrayList: void <init>(int)>(v5);
v6 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label2;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = new java.net.InetSocketAddress;
v10 = v0.<io.netty.resolver.InetSocketAddressResolver$2: java.net.InetSocketAddress val$unresolvedAddress>;
v11 = virtualinvoke v10.<java.net.InetSocketAddress: int getPort()>();
specialinvoke v9.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(v8, v11);
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label1;
label2:
v12 = v0.<io.netty.resolver.InetSocketAddressResolver$2: io.netty.util.concurrent.Promise val$promise>;
interfaceinvoke v12.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v4);
goto label4;
label3:
v13 = v0.<io.netty.resolver.InetSocketAddressResolver$2: io.netty.util.concurrent.Promise val$promise>;
v14 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
interfaceinvoke v13.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v14);
label4:
return;
}
}