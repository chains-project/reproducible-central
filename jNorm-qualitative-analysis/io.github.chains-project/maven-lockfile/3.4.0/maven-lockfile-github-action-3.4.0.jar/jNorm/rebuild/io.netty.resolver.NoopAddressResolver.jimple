public class io.netty.resolver.NoopAddressResolver extends io.netty.resolver.AbstractAddressResolver
{
public void <init>(io.netty.util.concurrent.EventExecutor)
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.resolver.NoopAddressResolver v0;
v0 := @this: io.netty.resolver.NoopAddressResolver;
v1 := @parameter0: io.netty.util.concurrent.EventExecutor;
specialinvoke v0.<io.netty.resolver.AbstractAddressResolver: void <init>(io.netty.util.concurrent.EventExecutor)>(v1);
return;
}
protected boolean doIsResolved(java.net.SocketAddress)
{
io.netty.resolver.NoopAddressResolver v0;
java.net.SocketAddress v1;
v0 := @this: io.netty.resolver.NoopAddressResolver;
v1 := @parameter0: java.net.SocketAddress;
return 1;
}
protected void doResolve(java.net.SocketAddress, io.netty.util.concurrent.Promise) throws java.lang.Exception
{
io.netty.resolver.NoopAddressResolver v0;
io.netty.util.concurrent.Promise v2;
java.net.SocketAddress v1;
v0 := @this: io.netty.resolver.NoopAddressResolver;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: io.netty.util.concurrent.Promise;
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v1);
return;
}
protected void doResolveAll(java.net.SocketAddress, io.netty.util.concurrent.Promise) throws java.lang.Exception
{
java.util.List v3;
io.netty.util.concurrent.Promise v2;
java.net.SocketAddress v1;
io.netty.resolver.NoopAddressResolver v0;
v0 := @this: io.netty.resolver.NoopAddressResolver;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v3);
return;
}
}