final class io.netty.resolver.dns.DatagramDnsQueryContext extends io.netty.resolver.dns.DnsQueryContext
{
void <init>(io.netty.resolver.dns.DnsNameResolver, java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise)
{
io.netty.resolver.dns.DatagramDnsQueryContext v0;
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.handler.codec.dns.DnsRecord[] v4;
io.netty.util.concurrent.Promise v5;
io.netty.handler.codec.dns.DnsQuestion v3;
java.net.InetSocketAddress v2;
v0 := @this: io.netty.resolver.dns.DatagramDnsQueryContext;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: java.net.InetSocketAddress;
v3 := @parameter2: io.netty.handler.codec.dns.DnsQuestion;
v4 := @parameter3: io.netty.handler.codec.dns.DnsRecord[];
v5 := @parameter4: io.netty.util.concurrent.Promise;
specialinvoke v0.<io.netty.resolver.dns.DnsQueryContext: void <init>(io.netty.resolver.dns.DnsNameResolver,java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise)>(v1, v2, v3, v4, v5);
return;
}
protected io.netty.handler.codec.dns.DnsQuery newQuery(int)
{
io.netty.resolver.dns.DatagramDnsQueryContext v0;
io.netty.handler.codec.dns.DatagramDnsQuery v2;
int v1;
java.net.InetSocketAddress v3;
v0 := @this: io.netty.resolver.dns.DatagramDnsQueryContext;
v1 := @parameter0: int;
v2 = new io.netty.handler.codec.dns.DatagramDnsQuery;
v3 = virtualinvoke v0.<io.netty.resolver.dns.DatagramDnsQueryContext: java.net.InetSocketAddress nameServerAddr()>();
specialinvoke v2.<io.netty.handler.codec.dns.DatagramDnsQuery: void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int)>(null, v3, v1);
return v2;
}
protected io.netty.channel.Channel channel()
{
io.netty.channel.Channel v2;
io.netty.resolver.dns.DatagramDnsQueryContext v0;
io.netty.resolver.dns.DnsNameResolver v1;
v0 := @this: io.netty.resolver.dns.DatagramDnsQueryContext;
v1 = virtualinvoke v0.<io.netty.resolver.dns.DatagramDnsQueryContext: io.netty.resolver.dns.DnsNameResolver parent()>();
v2 = v1.<io.netty.resolver.dns.DnsNameResolver: io.netty.channel.Channel ch>;
return v2;
}
protected java.lang.String protocol()
{
io.netty.resolver.dns.DatagramDnsQueryContext v0;
v0 := @this: io.netty.resolver.dns.DatagramDnsQueryContext;
return "UDP";
}
}