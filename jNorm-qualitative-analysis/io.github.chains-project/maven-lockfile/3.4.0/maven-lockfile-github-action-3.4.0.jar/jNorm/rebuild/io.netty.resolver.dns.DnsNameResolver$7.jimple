class io.netty.resolver.dns.DnsNameResolver$7 extends java.lang.Object implements java.lang.Runnable
{
final java.lang.String val$hostname;
final io.netty.handler.codec.dns.DnsRecord[] val$additionals;
final io.netty.util.concurrent.Promise val$originalPromise;
final io.netty.util.concurrent.Promise val$promise;
final io.netty.resolver.dns.DnsCache val$resolveCache;
final boolean val$completeEarlyIfPossible;
final io.netty.resolver.dns.DnsNameResolver this$0;
void <init>(io.netty.resolver.dns.DnsNameResolver, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise, io.netty.util.concurrent.Promise, io.netty.resolver.dns.DnsCache, boolean)
{
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.util.concurrent.Promise v4, v5;
io.netty.resolver.dns.DnsNameResolver$7 v0;
io.netty.resolver.dns.DnsCache v6;
io.netty.handler.codec.dns.DnsRecord[] v3;
java.lang.String v2;
boolean v7;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$7;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord[];
v4 := @parameter3: io.netty.util.concurrent.Promise;
v5 := @parameter4: io.netty.util.concurrent.Promise;
v6 := @parameter5: io.netty.resolver.dns.DnsCache;
v7 := @parameter6: boolean;
v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.resolver.dns.DnsNameResolver this$0> = v1;
v0.<io.netty.resolver.dns.DnsNameResolver$7: java.lang.String val$hostname> = v2;
v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.handler.codec.dns.DnsRecord[] val$additionals> = v3;
v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.util.concurrent.Promise val$originalPromise> = v4;
v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.util.concurrent.Promise val$promise> = v5;
v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.resolver.dns.DnsCache val$resolveCache> = v6;
v0.<io.netty.resolver.dns.DnsNameResolver$7: boolean val$completeEarlyIfPossible> = v7;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.util.concurrent.Promise v4, v5;
io.netty.resolver.dns.DnsNameResolver$7 v0;
io.netty.resolver.dns.DnsCache v6;
io.netty.handler.codec.dns.DnsRecord[] v3;
java.lang.String v2;
boolean v7;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$7;
v1 = v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.resolver.dns.DnsNameResolver this$0>;
v2 = v0.<io.netty.resolver.dns.DnsNameResolver$7: java.lang.String val$hostname>;
v3 = v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.handler.codec.dns.DnsRecord[] val$additionals>;
v4 = v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.util.concurrent.Promise val$originalPromise>;
v5 = v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.util.concurrent.Promise val$promise>;
v6 = v0.<io.netty.resolver.dns.DnsNameResolver$7: io.netty.resolver.dns.DnsCache val$resolveCache>;
v7 = v0.<io.netty.resolver.dns.DnsNameResolver$7: boolean val$completeEarlyIfPossible>;
specialinvoke v1.<io.netty.resolver.dns.DnsNameResolver: void doResolveAllUncached0(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache,boolean)>(v2, v3, v4, v5, v6, v7);
return;
}
}