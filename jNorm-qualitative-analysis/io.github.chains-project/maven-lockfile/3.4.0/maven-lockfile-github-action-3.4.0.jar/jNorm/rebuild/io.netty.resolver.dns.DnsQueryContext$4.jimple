class io.netty.resolver.dns.DnsQueryContext$4 extends java.lang.Object implements java.lang.Runnable
{
final long val$queryTimeoutMillis;
final io.netty.resolver.dns.DnsQueryContext this$0;
void <init>(io.netty.resolver.dns.DnsQueryContext, long)
{
io.netty.resolver.dns.DnsQueryContext v1;
io.netty.resolver.dns.DnsQueryContext$4 v0;
long v2;
v0 := @this: io.netty.resolver.dns.DnsQueryContext$4;
v1 := @parameter0: io.netty.resolver.dns.DnsQueryContext;
v2 := @parameter1: long;
v0.<io.netty.resolver.dns.DnsQueryContext$4: io.netty.resolver.dns.DnsQueryContext this$0> = v1;
v0.<io.netty.resolver.dns.DnsQueryContext$4: long val$queryTimeoutMillis> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.resolver.dns.DnsQueryContext$4 v0;
io.netty.util.concurrent.Promise v2;
io.netty.resolver.dns.DnsQueryContext v1, v4, v5, v7;
long v9;
int v6;
java.lang.String v10, v8;
boolean v3;
v0 := @this: io.netty.resolver.dns.DnsQueryContext$4;
v1 = v0.<io.netty.resolver.dns.DnsQueryContext$4: io.netty.resolver.dns.DnsQueryContext this$0>;
v2 = v1.<io.netty.resolver.dns.DnsQueryContext: io.netty.util.concurrent.Promise promise>;
v3 = interfaceinvoke v2.<io.netty.util.concurrent.Promise: boolean isDone()>();
if v3 == 0 goto label1;
return;
label1:
v4 = v0.<io.netty.resolver.dns.DnsQueryContext$4: io.netty.resolver.dns.DnsQueryContext this$0>;
v5 = v0.<io.netty.resolver.dns.DnsQueryContext$4: io.netty.resolver.dns.DnsQueryContext this$0>;
v6 = v5.<io.netty.resolver.dns.DnsQueryContext: int id>;
v7 = v0.<io.netty.resolver.dns.DnsQueryContext$4: io.netty.resolver.dns.DnsQueryContext this$0>;
v8 = virtualinvoke v7.<io.netty.resolver.dns.DnsQueryContext: java.lang.String protocol()>();
v9 = v0.<io.netty.resolver.dns.DnsQueryContext$4: long val$queryTimeoutMillis>;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String,long)>(v6, v8, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("query \'\u0001\' via \u0001 timed out after \u0001 milliseconds");
virtualinvoke v4.<io.netty.resolver.dns.DnsQueryContext: boolean tryFailure(java.lang.String,java.lang.Throwable,boolean)>(v10, null, 1);
return;
}
}