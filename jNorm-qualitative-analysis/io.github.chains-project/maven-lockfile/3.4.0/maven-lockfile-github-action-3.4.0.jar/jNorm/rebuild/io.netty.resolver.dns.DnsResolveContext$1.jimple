class io.netty.resolver.dns.DnsResolveContext$1 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
private int searchDomainIdx;
final int val$initialSearchDomainIdx;
final io.netty.util.concurrent.Promise val$promise;
final java.lang.String[] val$searchDomains;
final boolean val$startWithoutSearchDomain;
final io.netty.resolver.dns.DnsResolveContext this$0;
void <init>(io.netty.resolver.dns.DnsResolveContext, int, io.netty.util.concurrent.Promise, java.lang.String[], boolean)
{
io.netty.resolver.dns.DnsResolveContext v1;
io.netty.resolver.dns.DnsResolveContext$1 v0;
io.netty.util.concurrent.Promise v3;
int v2, v6;
java.lang.String[] v4;
boolean v5;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$1;
v1 := @parameter0: io.netty.resolver.dns.DnsResolveContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.util.concurrent.Promise;
v4 := @parameter3: java.lang.String[];
v5 := @parameter4: boolean;
v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0> = v1;
v0.<io.netty.resolver.dns.DnsResolveContext$1: int val$initialSearchDomainIdx> = v2;
v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.util.concurrent.Promise val$promise> = v3;
v0.<io.netty.resolver.dns.DnsResolveContext$1: java.lang.String[] val$searchDomains> = v4;
v0.<io.netty.resolver.dns.DnsResolveContext$1: boolean val$startWithoutSearchDomain> = v5;
specialinvoke v0.<java.lang.Object: void <init>()>();
v6 = v0.<io.netty.resolver.dns.DnsResolveContext$1: int val$initialSearchDomainIdx>;
v0.<io.netty.resolver.dns.DnsResolveContext$1: int searchDomainIdx> = v6;
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
io.netty.handler.codec.dns.DnsRecordType[] v15, v42;
io.netty.resolver.dns.DnsResolveContext v12, v14, v20, v24, v25, v33, v34, v39, v41;
boolean v32, v5, v7, v9;
io.netty.resolver.dns.DnsNameResolver v21;
io.netty.channel.EventLoop v22;
io.netty.resolver.dns.DnsResolveContext$1 v0;
java.lang.Throwable v2;
java.lang.String[] v16, v18, v27, v43;
int v17, v19, v28, v29;
java.lang.String v13, v26, v30, v31, v35, v40;
io.netty.util.concurrent.Promise v10, v23, v36, v37, v4;
java.util.Iterator v6;
io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException v11, v38;
java.lang.Object v3, v8;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
if v2 != null goto label2;
v3 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
v4 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.util.concurrent.Promise val$promise>;
v5 = interfaceinvoke v4.<io.netty.util.concurrent.Promise: boolean trySuccess(java.lang.Object)>(v3);
if v5 != 0 goto label6;
v6 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label6;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <io.netty.util.ReferenceCountUtil: void safeRelease(java.lang.Object)>(v8);
goto label1;
label2:
v9 = staticinvoke <io.netty.resolver.dns.DnsNameResolver: boolean isTransportOrTimeoutError(java.lang.Throwable)>(v2);
if v9 == 0 goto label3;
v10 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.util.concurrent.Promise val$promise>;
v11 = new io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException;
v12 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v13 = v12.<io.netty.resolver.dns.DnsResolveContext: java.lang.String hostname>;
v14 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v15 = v14.<io.netty.resolver.dns.DnsResolveContext: io.netty.handler.codec.dns.DnsRecordType[] expectedTypes>;
v16 = v0.<io.netty.resolver.dns.DnsResolveContext$1: java.lang.String[] val$searchDomains>;
specialinvoke v11.<io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: void <init>(java.lang.Throwable,java.lang.String,io.netty.handler.codec.dns.DnsRecordType[],java.lang.String[])>(v2, v13, v15, v16);
interfaceinvoke v10.<io.netty.util.concurrent.Promise: boolean tryFailure(java.lang.Throwable)>(v11);
goto label6;
label3:
v17 = v0.<io.netty.resolver.dns.DnsResolveContext$1: int searchDomainIdx>;
v18 = v0.<io.netty.resolver.dns.DnsResolveContext$1: java.lang.String[] val$searchDomains>;
v19 = lengthof v18;
if v17 >= v19 goto label4;
v20 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v21 = v20.<io.netty.resolver.dns.DnsResolveContext: io.netty.resolver.dns.DnsNameResolver parent>;
v22 = virtualinvoke v21.<io.netty.resolver.dns.DnsNameResolver: io.netty.channel.EventLoop executor()>();
v23 = interfaceinvoke v22.<io.netty.channel.EventLoop: io.netty.util.concurrent.Promise newPromise()>();
interfaceinvoke v23.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)>(v0);
v24 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v25 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v26 = v25.<io.netty.resolver.dns.DnsResolveContext: java.lang.String hostname>;
v27 = v0.<io.netty.resolver.dns.DnsResolveContext$1: java.lang.String[] val$searchDomains>;
v28 = v0.<io.netty.resolver.dns.DnsResolveContext$1: int searchDomainIdx>;
v29 = v28 + 1;
v0.<io.netty.resolver.dns.DnsResolveContext$1: int searchDomainIdx> = v29;
v30 = v27[v28];
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v26, v30) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
virtualinvoke v24.<io.netty.resolver.dns.DnsResolveContext: void doSearchDomainQuery(java.lang.String,io.netty.util.concurrent.Promise)>(v31, v23);
goto label6;
label4:
v32 = v0.<io.netty.resolver.dns.DnsResolveContext$1: boolean val$startWithoutSearchDomain>;
if v32 != 0 goto label5;
v33 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v34 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v35 = v34.<io.netty.resolver.dns.DnsResolveContext: java.lang.String hostname>;
v36 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.util.concurrent.Promise val$promise>;
specialinvoke v33.<io.netty.resolver.dns.DnsResolveContext: void internalResolve(java.lang.String,io.netty.util.concurrent.Promise)>(v35, v36);
goto label6;
label5:
v37 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.util.concurrent.Promise val$promise>;
v38 = new io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException;
v39 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v40 = v39.<io.netty.resolver.dns.DnsResolveContext: java.lang.String hostname>;
v41 = v0.<io.netty.resolver.dns.DnsResolveContext$1: io.netty.resolver.dns.DnsResolveContext this$0>;
v42 = v41.<io.netty.resolver.dns.DnsResolveContext: io.netty.handler.codec.dns.DnsRecordType[] expectedTypes>;
v43 = v0.<io.netty.resolver.dns.DnsResolveContext$1: java.lang.String[] val$searchDomains>;
specialinvoke v38.<io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: void <init>(java.lang.Throwable,java.lang.String,io.netty.handler.codec.dns.DnsRecordType[],java.lang.String[])>(v2, v40, v42, v43);
interfaceinvoke v37.<io.netty.util.concurrent.Promise: boolean tryFailure(java.lang.Throwable)>(v38);
label6:
return;
}
}