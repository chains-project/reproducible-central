class io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1 extends java.lang.Object implements java.util.Iterator
{
private final io.netty.resolver.dns.DnsServerAddressStream stream;
private int i;
final io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList this$0;
void <init>(io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList)
{
io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList v1, v2;
io.netty.resolver.dns.DnsServerAddressStream v3, v4;
io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1 v0;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1;
v1 := @parameter0: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList;
v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList this$0>;
v3 = v2.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList: io.netty.resolver.dns.DnsServerAddressStream duplicate>;
v4 = interfaceinvoke v3.<io.netty.resolver.dns.DnsServerAddressStream: io.netty.resolver.dns.DnsServerAddressStream duplicate()>();
v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: io.netty.resolver.dns.DnsServerAddressStream stream> = v4;
return;
}
public boolean hasNext()
{
io.netty.resolver.dns.DnsServerAddressStream v2;
io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1 v0;
int v1, v3;
boolean v4;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1;
v1 = v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: int i>;
v2 = v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: io.netty.resolver.dns.DnsServerAddressStream stream>;
v3 = interfaceinvoke v2.<io.netty.resolver.dns.DnsServerAddressStream: int size()>();
if v1 >= v3 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public java.net.InetSocketAddress next()
{
io.netty.resolver.dns.DnsServerAddressStream v5;
io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1 v0;
int v3, v4;
java.util.NoSuchElementException v2;
java.net.InetSocketAddress v6;
boolean v1;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1;
v1 = virtualinvoke v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: int i>;
v4 = v3 + 1;
v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: int i> = v4;
v5 = v0.<io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1: io.netty.resolver.dns.DnsServerAddressStream stream>;
v6 = interfaceinvoke v5.<io.netty.resolver.dns.DnsServerAddressStream: java.net.InetSocketAddress next()>();
return v6;
}
public void remove()
{
java.lang.UnsupportedOperationException v1;
io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1 v0;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$DnsAddressStreamList$1;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
}