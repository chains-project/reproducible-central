final class io.netty.resolver.dns.UnixResolverOptions$Builder extends java.lang.Object
{
private int ndots;
private int timeout;
private int attempts;
private void <init>()
{
io.netty.resolver.dns.UnixResolverOptions$Builder v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions$Builder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int ndots> = 1;
v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int timeout> = 5;
v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int attempts> = 16;
return;
}
void setNdots(int)
{
int v1;
io.netty.resolver.dns.UnixResolverOptions$Builder v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions$Builder;
v1 := @parameter0: int;
v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int ndots> = v1;
return;
}
void setTimeout(int)
{
int v1;
io.netty.resolver.dns.UnixResolverOptions$Builder v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions$Builder;
v1 := @parameter0: int;
v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int timeout> = v1;
return;
}
void setAttempts(int)
{
int v1;
io.netty.resolver.dns.UnixResolverOptions$Builder v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions$Builder;
v1 := @parameter0: int;
v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int attempts> = v1;
return;
}
io.netty.resolver.dns.UnixResolverOptions build()
{
io.netty.resolver.dns.UnixResolverOptions v1;
int v2, v3, v4;
io.netty.resolver.dns.UnixResolverOptions$Builder v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions$Builder;
v1 = new io.netty.resolver.dns.UnixResolverOptions;
v2 = v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int ndots>;
v3 = v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int timeout>;
v4 = v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: int attempts>;
specialinvoke v1.<io.netty.resolver.dns.UnixResolverOptions: void <init>(int,int,int)>(v2, v3, v4);
return v1;
}
}