public final class io.netty.util.DomainMappingBuilder extends java.lang.Object
{
private final io.netty.util.DomainNameMappingBuilder builder;
public void <init>(java.lang.Object)
{
java.lang.Object v1;
io.netty.util.DomainMappingBuilder v0;
io.netty.util.DomainNameMappingBuilder v2;
v0 := @this: io.netty.util.DomainMappingBuilder;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new io.netty.util.DomainNameMappingBuilder;
specialinvoke v2.<io.netty.util.DomainNameMappingBuilder: void <init>(java.lang.Object)>(v1);
v0.<io.netty.util.DomainMappingBuilder: io.netty.util.DomainNameMappingBuilder builder> = v2;
return;
}
public void <init>(int, java.lang.Object)
{
io.netty.util.DomainNameMappingBuilder v3;
int v1;
java.lang.Object v2;
io.netty.util.DomainMappingBuilder v0;
v0 := @this: io.netty.util.DomainMappingBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new io.netty.util.DomainNameMappingBuilder;
specialinvoke v3.<io.netty.util.DomainNameMappingBuilder: void <init>(int,java.lang.Object)>(v1, v2);
v0.<io.netty.util.DomainMappingBuilder: io.netty.util.DomainNameMappingBuilder builder> = v3;
return;
}
public io.netty.util.DomainMappingBuilder add(java.lang.String, java.lang.Object)
{
io.netty.util.DomainNameMappingBuilder v3;
java.lang.Object v2;
java.lang.String v1;
io.netty.util.DomainMappingBuilder v0;
v0 := @this: io.netty.util.DomainMappingBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.util.DomainMappingBuilder: io.netty.util.DomainNameMappingBuilder builder>;
virtualinvoke v3.<io.netty.util.DomainNameMappingBuilder: io.netty.util.DomainNameMappingBuilder add(java.lang.String,java.lang.Object)>(v1, v2);
return v0;
}
public io.netty.util.DomainNameMapping build()
{
io.netty.util.DomainMappingBuilder v0;
io.netty.util.DomainNameMapping v2;
io.netty.util.DomainNameMappingBuilder v1;
v0 := @this: io.netty.util.DomainMappingBuilder;
v1 = v0.<io.netty.util.DomainMappingBuilder: io.netty.util.DomainNameMappingBuilder builder>;
v2 = virtualinvoke v1.<io.netty.util.DomainNameMappingBuilder: io.netty.util.DomainNameMapping build()>();
return v2;
}
}