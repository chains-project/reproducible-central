final class io.netty.util.NetUtilInitializations extends java.lang.Object
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private void <init>()
{
io.netty.util.NetUtilInitializations v0;
v0 := @this: io.netty.util.NetUtilInitializations;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.net.Inet4Address createLocalhost4()
{
java.net.InetAddress v1;
byte[] v0;
java.lang.Exception v2;
v0 = newarray (byte)[4];
v0[0] = 127;
v0[1] = 0;
v0[2] = 0;
v0[3] = 1;
label1:
v1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>("localhost", v0);
label2:
goto label4;
label3:
v2 := @caughtexception;
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v2);
label4:
return v1;
catch java.lang.Exception from label1 to label2 with label3;
}
static java.net.Inet6Address createLocalhost6()
{
java.net.InetAddress v1;
byte[] v0;
java.lang.Exception v2;
v0 = newarray (byte)[16];
v0[0] = 0;
v0[1] = 0;
v0[2] = 0;
v0[3] = 0;
v0[4] = 0;
v0[5] = 0;
v0[6] = 0;
v0[7] = 0;
v0[8] = 0;
v0[9] = 0;
v0[10] = 0;
v0[11] = 0;
v0[12] = 0;
v0[13] = 0;
v0[14] = 0;
v0[15] = 1;
label1:
v1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>("localhost", v0);
label2:
goto label4;
label3:
v2 := @caughtexception;
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v2);
label4:
return v1;
catch java.lang.Exception from label1 to label2 with label3;
}
static java.util.Collection networkInterfaces()
{
java.util.Enumeration v1;
java.lang.NullPointerException v6;
java.util.ArrayList v0;
java.net.SocketException v4;
java.util.List v8;
io.netty.util.internal.logging.InternalLogger v5;
java.lang.Object v3;
boolean v2, v7;
v0 = new java.util.ArrayList;
specialinvoke v0.<java.util.ArrayList: void <init>()>();
label1:
v1 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();
if v1 == null goto label5;
label2:
v2 = interfaceinvoke v1.<java.util.Enumeration: boolean hasMoreElements()>();
if v2 == 0 goto label5;
v3 = interfaceinvoke v1.<java.util.Enumeration: java.lang.Object nextElement()>();
interfaceinvoke v0.<java.util.List: boolean add(java.lang.Object)>(v3);
goto label2;
label3:
v4 := @caughtexception;
v5 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String,java.lang.Throwable)>("Failed to retrieve the list of available network interfaces", v4);
goto label5;
label4:
v6 := @caughtexception;
v7 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean isAndroid()>();
if v7 != 0 goto label5;
throw v6;
label5:
v8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v0);
return v8;
catch java.net.SocketException from label1 to label3 with label3;
catch java.lang.NullPointerException from label1 to label3 with label4;
}
static io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress determineLoopback(java.util.Collection, java.net.Inet4Address, java.net.Inet6Address)
{
java.util.Enumeration v13, v21, v7;
boolean v11, v14, v16, v18, v20, v22, v5, v8;
java.util.Collection v0;
java.net.NetworkInterface v32, v9;
java.lang.Exception v35;
io.netty.util.internal.logging.InternalLogger v24, v26, v27, v33, v34, v36, v38;
java.lang.Throwable v37;
java.lang.Object[] v28;
java.util.ArrayList v3;
java.net.SocketException v25;
io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress v39;
java.lang.String v29, v30, v31;
java.util.Iterator v10, v17, v4;
java.net.Inet4Address v1;
java.net.Inet6Address v2;
java.lang.Object v12, v15, v19, v23, v6;
v0 := @parameter0: java.util.Collection;
v1 := @parameter1: java.net.Inet4Address;
v2 := @parameter2: java.net.Inet6Address;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = interfaceinvoke v0.<java.util.Collection: java.util.Iterator iterator()>();
label01:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label02;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = staticinvoke <io.netty.util.internal.SocketUtils: java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface)>(v6);
v8 = interfaceinvoke v7.<java.util.Enumeration: boolean hasMoreElements()>();
if v8 == 0 goto label01;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label01;
label02:
v9 = null;
v10 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label03:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label05;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = staticinvoke <io.netty.util.internal.SocketUtils: java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface)>(v12);
label04:
v14 = interfaceinvoke v13.<java.util.Enumeration: boolean hasMoreElements()>();
if v14 == 0 goto label03;
v15 = interfaceinvoke v13.<java.util.Enumeration: java.lang.Object nextElement()>();
v16 = virtualinvoke v15.<java.net.InetAddress: boolean isLoopbackAddress()>();
if v16 == 0 goto label04;
v9 = v12;
label05:
if v9 != null goto label11;
label06:
v17 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label07:
v18 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v18 == 0 goto label08;
v19 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v20 = virtualinvoke v19.<java.net.NetworkInterface: boolean isLoopback()>();
if v20 == 0 goto label07;
v21 = staticinvoke <io.netty.util.internal.SocketUtils: java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface)>(v19);
v22 = interfaceinvoke v21.<java.util.Enumeration: boolean hasMoreElements()>();
if v22 == 0 goto label07;
v9 = v19;
v23 = interfaceinvoke v21.<java.util.Enumeration: java.lang.Object nextElement()>();
label08:
if v9 != null goto label11;
v24 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v24.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String)>("Failed to find the loopback interface");
label09:
goto label11;
label10:
v25 := @caughtexception;
v26 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v26.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String,java.lang.Throwable)>("Failed to find the loopback interface", v25);
label11:
if v9 == null goto label12;
v27 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
v28 = newarray (java.lang.Object)[3];
v29 = virtualinvoke v9.<java.net.NetworkInterface: java.lang.String getName()>();
v28[0] = v29;
v30 = virtualinvoke v9.<java.net.NetworkInterface: java.lang.String getDisplayName()>();
v28[1] = v30;
v31 = virtualinvoke v23.<java.net.InetAddress: java.lang.String getHostAddress()>();
v28[2] = v31;
interfaceinvoke v27.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object[])>("Loopback interface: {} ({}, {})", v28);
goto label19;
label12:
if v23 != null goto label19;
label13:
v32 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>(v2);
if v32 == null goto label14;
v33 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v33.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Using hard-coded IPv6 localhost address: {}", v2);
v23 = v2;
label14:
if v23 != null goto label19;
v34 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v34.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Using hard-coded IPv4 localhost address: {}", v1);
v23 = v1;
goto label19;
label15:
v35 := @caughtexception;
label16:
if v23 != null goto label19;
v36 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v36.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Using hard-coded IPv4 localhost address: {}", v1);
v23 = v1;
goto label19;
label17:
v37 := @caughtexception;
if v23 != null goto label18;
v38 = <io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v38.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Using hard-coded IPv4 localhost address: {}", v1);
label18:
throw v37;
label19:
v39 = new io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress;
specialinvoke v39.<io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress: void <init>(java.net.NetworkInterface,java.net.InetAddress)>(v9, v23);
return v39;
catch java.net.SocketException from label06 to label09 with label10;
catch java.lang.Exception from label13 to label14 with label15;
catch java.lang.Throwable from label13 to label14 with label17;
catch java.lang.Throwable from label15 to label16 with label17;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/util/NetUtilInitializations;");
<io.netty.util.NetUtilInitializations: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}