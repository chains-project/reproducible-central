class io.netty.util.NettyRuntime$AvailableProcessorsHolder extends java.lang.Object
{
private int availableProcessors;
void <init>()
{
io.netty.util.NettyRuntime$AvailableProcessorsHolder v0;
v0 := @this: io.netty.util.NettyRuntime$AvailableProcessorsHolder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
synchronized void setAvailableProcessors(int)
{
java.lang.IllegalStateException v9;
java.lang.Object[] v4;
java.lang.Integer v6, v7;
io.netty.util.NettyRuntime$AvailableProcessorsHolder v0;
java.util.Locale v3;
int v1, v2, v5;
java.lang.String v8;
v0 := @this: io.netty.util.NettyRuntime$AvailableProcessorsHolder;
v1 := @parameter0: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v1, "availableProcessors");
v2 = v0.<io.netty.util.NettyRuntime$AvailableProcessorsHolder: int availableProcessors>;
if v2 == 0 goto label1;
v3 = <java.util.Locale: java.util.Locale ROOT>;
v4 = newarray (java.lang.Object)[2];
v5 = v0.<io.netty.util.NettyRuntime$AvailableProcessorsHolder: int availableProcessors>;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v4[0] = v6;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v4[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, "availableProcessors is already set to [%d], rejecting [%d]", v4);
v9 = new java.lang.IllegalStateException;
specialinvoke v9.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v8);
throw v9;
label1:
v0.<io.netty.util.NettyRuntime$AvailableProcessorsHolder: int availableProcessors> = v1;
return;
}
synchronized int availableProcessors()
{
io.netty.util.NettyRuntime$AvailableProcessorsHolder v0;
java.lang.Runtime v2;
int v1, v3, v4, v5;
v0 := @this: io.netty.util.NettyRuntime$AvailableProcessorsHolder;
v1 = v0.<io.netty.util.NettyRuntime$AvailableProcessorsHolder: int availableProcessors>;
if v1 != 0 goto label1;
v2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
v3 = virtualinvoke v2.<java.lang.Runtime: int availableProcessors()>();
v4 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.availableProcessors", v3);
virtualinvoke v0.<io.netty.util.NettyRuntime$AvailableProcessorsHolder: void setAvailableProcessors(int)>(v4);
label1:
v5 = v0.<io.netty.util.NettyRuntime$AvailableProcessorsHolder: int availableProcessors>;
return v5;
}
}