final class io.netty.util.ReferenceCountUtil$ReleasingTask extends java.lang.Object implements java.lang.Runnable
{
private final io.netty.util.ReferenceCounted obj;
private final int decrement;
void <init>(io.netty.util.ReferenceCounted, int)
{
int v2;
io.netty.util.ReferenceCounted v1;
io.netty.util.ReferenceCountUtil$ReleasingTask v0;
v0 := @this: io.netty.util.ReferenceCountUtil$ReleasingTask;
v1 := @parameter0: io.netty.util.ReferenceCounted;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: io.netty.util.ReferenceCounted obj> = v1;
v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: int decrement> = v2;
return;
}
public void run()
{
io.netty.util.ReferenceCountUtil$ReleasingTask v0;
io.netty.util.ReferenceCounted v1, v8;
java.lang.Exception v6;
io.netty.util.internal.logging.InternalLogger v4, v5, v7;
int v2;
boolean v3;
v0 := @this: io.netty.util.ReferenceCountUtil$ReleasingTask;
label1:
v1 = v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: io.netty.util.ReferenceCounted obj>;
v2 = v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: int decrement>;
v3 = interfaceinvoke v1.<io.netty.util.ReferenceCounted: boolean release(int)>(v2);
if v3 != 0 goto label2;
v4 = <io.netty.util.ReferenceCountUtil: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v4.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String,java.lang.Object)>("Non-zero refCnt: {}", v0);
goto label5;
label2:
v5 = <io.netty.util.ReferenceCountUtil: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Released: {}", v0);
label3:
goto label5;
label4:
v6 := @caughtexception;
v7 = <io.netty.util.ReferenceCountUtil: io.netty.util.internal.logging.InternalLogger logger>;
v8 = v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: io.netty.util.ReferenceCounted obj>;
interfaceinvoke v7.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to release an object: {}", v8, v6);
label5:
return;
catch java.lang.Exception from label1 to label3 with label4;
}
public java.lang.String toString()
{
io.netty.util.ReferenceCountUtil$ReleasingTask v0;
int v3, v5;
java.lang.String v2, v6;
io.netty.util.ReferenceCounted v1, v4;
v0 := @this: io.netty.util.ReferenceCountUtil$ReleasingTask;
v1 = v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: io.netty.util.ReferenceCounted obj>;
v2 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v1);
v3 = v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: int decrement>;
v4 = v0.<io.netty.util.ReferenceCountUtil$ReleasingTask: io.netty.util.ReferenceCounted obj>;
v5 = interfaceinvoke v4.<io.netty.util.ReferenceCounted: int refCnt()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int,int)>(v2, v3, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.release(\u0001) refCnt: \u0001");
return v6;
}
}