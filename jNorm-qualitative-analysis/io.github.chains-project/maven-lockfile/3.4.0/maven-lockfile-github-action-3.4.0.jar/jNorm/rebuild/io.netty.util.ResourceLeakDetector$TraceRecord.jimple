class io.netty.util.ResourceLeakDetector$TraceRecord extends java.lang.Throwable
{
private static final long serialVersionUID;
private static final io.netty.util.ResourceLeakDetector$TraceRecord BOTTOM;
private final java.lang.String hintString;
private final io.netty.util.ResourceLeakDetector$TraceRecord next;
private final int pos;
void <init>(io.netty.util.ResourceLeakDetector$TraceRecord, java.lang.Object)
{
int v5, v6;
io.netty.util.ResourceLeakDetector$TraceRecord v0, v1;
java.lang.Object v2;
java.lang.String v4;
boolean v3;
v0 := @this: io.netty.util.ResourceLeakDetector$TraceRecord;
v1 := @parameter0: io.netty.util.ResourceLeakDetector$TraceRecord;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<java.lang.Throwable: void <init>()>();
v3 = v2 instanceof io.netty.util.ResourceLeakHint;
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<io.netty.util.ResourceLeakHint: java.lang.String toHintString()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
label2:
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: java.lang.String hintString> = v4;
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: io.netty.util.ResourceLeakDetector$TraceRecord next> = v1;
v5 = v1.<io.netty.util.ResourceLeakDetector$TraceRecord: int pos>;
v6 = v5 + 1;
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: int pos> = v6;
return;
}
void <init>(io.netty.util.ResourceLeakDetector$TraceRecord)
{
int v2, v3;
io.netty.util.ResourceLeakDetector$TraceRecord v0, v1;
v0 := @this: io.netty.util.ResourceLeakDetector$TraceRecord;
v1 := @parameter0: io.netty.util.ResourceLeakDetector$TraceRecord;
specialinvoke v0.<java.lang.Throwable: void <init>()>();
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: java.lang.String hintString> = null;
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: io.netty.util.ResourceLeakDetector$TraceRecord next> = v1;
v2 = v1.<io.netty.util.ResourceLeakDetector$TraceRecord: int pos>;
v3 = v2 + 1;
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: int pos> = v3;
return;
}
private void <init>()
{
int v1;
io.netty.util.ResourceLeakDetector$TraceRecord v0;
v0 := @this: io.netty.util.ResourceLeakDetector$TraceRecord;
specialinvoke v0.<java.lang.Throwable: void <init>()>();
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: java.lang.String hintString> = null;
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: io.netty.util.ResourceLeakDetector$TraceRecord next> = null;
v1 = (int) -1;
v0.<io.netty.util.ResourceLeakDetector$TraceRecord: int pos> = v1;
return;
}
public java.lang.String toString()
{
io.netty.util.ResourceLeakDetector$TraceRecord v0;
java.util.concurrent.atomic.AtomicReference v11;
int v13, v14, v18, v8, v9;
java.lang.StackTraceElement v10;
java.lang.String v15, v16, v19, v2, v20, v22, v23, v24, v4, v6;
boolean v17, v21;
java.lang.StackTraceElement[] v7;
java.lang.Object v12;
java.lang.StringBuilder v1, v3, v5;
v0 := @this: io.netty.util.ResourceLeakDetector$TraceRecord;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>(int)>(2048);
v2 = v0.<io.netty.util.ResourceLeakDetector$TraceRecord: java.lang.String hintString>;
if v2 == null goto label1;
v3 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tHint: ");
v4 = v0.<io.netty.util.ResourceLeakDetector$TraceRecord: java.lang.String hintString>;
v5 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
v6 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
label1:
v7 = virtualinvoke v0.<io.netty.util.ResourceLeakDetector$TraceRecord: java.lang.StackTraceElement[] getStackTrace()>();
v8 = 3;
label2:
v9 = lengthof v7;
if v8 >= v9 goto label7;
v10 = v7[v8];
v11 = <io.netty.util.ResourceLeakDetector: java.util.concurrent.atomic.AtomicReference excludedMethods>;
v12 = virtualinvoke v11.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v13 = 0;
label3:
v14 = lengthof v12;
if v13 >= v14 goto label5;
v15 = v12[v13];
v16 = virtualinvoke v10.<java.lang.StackTraceElement: java.lang.String getClassName()>();
v17 = virtualinvoke v15.<java.lang.String: boolean equals(java.lang.Object)>(v16);
if v17 == 0 goto label4;
v18 = v13 + 1;
v19 = v12[v18];
v20 = virtualinvoke v10.<java.lang.StackTraceElement: java.lang.String getMethodName()>();
v21 = virtualinvoke v19.<java.lang.String: boolean equals(java.lang.Object)>(v20);
if v21 != 0 goto label6;
label4:
v13 = v13 + 2;
goto label3;
label5:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);
v22 = virtualinvoke v10.<java.lang.StackTraceElement: java.lang.String toString()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v22);
v23 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v23);
label6:
v8 = v8 + 1;
goto label2;
label7:
v24 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v24;
}
static void <clinit>()
{
io.netty.util.ResourceLeakDetector$TraceRecord$1 v0;
v0 = new io.netty.util.ResourceLeakDetector$TraceRecord$1;
specialinvoke v0.<io.netty.util.ResourceLeakDetector$TraceRecord$1: void <init>()>();
<io.netty.util.ResourceLeakDetector$TraceRecord: io.netty.util.ResourceLeakDetector$TraceRecord BOTTOM> = v0;
return;
}
}