public final class io.netty.util.Signal extends java.lang.Error implements io.netty.util.Constant
{
private static final long serialVersionUID;
private static final io.netty.util.ConstantPool pool;
private final io.netty.util.Signal$SignalConstant constant;
public static io.netty.util.Signal valueOf(java.lang.String)
{
io.netty.util.Constant v2;
java.lang.String v0;
io.netty.util.ConstantPool v1;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.util.Signal: io.netty.util.ConstantPool pool>;
v2 = virtualinvoke v1.<io.netty.util.ConstantPool: io.netty.util.Constant valueOf(java.lang.String)>(v0);
return v2;
}
public static io.netty.util.Signal valueOf(java.lang.Class, java.lang.String)
{
io.netty.util.Constant v3;
io.netty.util.ConstantPool v2;
java.lang.Class v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = <io.netty.util.Signal: io.netty.util.ConstantPool pool>;
v3 = virtualinvoke v2.<io.netty.util.ConstantPool: io.netty.util.Constant valueOf(java.lang.Class,java.lang.String)>(v0, v1);
return v3;
}
private void <init>(int, java.lang.String)
{
int v1;
java.lang.String v2;
io.netty.util.Signal v0;
io.netty.util.Signal$SignalConstant v3;
v0 := @this: io.netty.util.Signal;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Error: void <init>()>();
v3 = new io.netty.util.Signal$SignalConstant;
specialinvoke v3.<io.netty.util.Signal$SignalConstant: void <init>(int,java.lang.String)>(v1, v2);
v0.<io.netty.util.Signal: io.netty.util.Signal$SignalConstant constant> = v3;
return;
}
public void expect(io.netty.util.Signal)
{
java.lang.IllegalStateException v2;
java.lang.String v3;
io.netty.util.Signal v0, v1;
v0 := @this: io.netty.util.Signal;
v1 := @parameter0: io.netty.util.Signal;
if v0 == v1 goto label1;
v2 = new java.lang.IllegalStateException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.util.Signal)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected signal: \u0001");
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
return;
}
public java.lang.Throwable initCause(java.lang.Throwable)
{
java.lang.Throwable v1;
io.netty.util.Signal v0;
v0 := @this: io.netty.util.Signal;
v1 := @parameter0: java.lang.Throwable;
return v0;
}
public java.lang.Throwable fillInStackTrace()
{
io.netty.util.Signal v0;
v0 := @this: io.netty.util.Signal;
return v0;
}
public int id()
{
int v2;
io.netty.util.Signal v0;
io.netty.util.Signal$SignalConstant v1;
v0 := @this: io.netty.util.Signal;
v1 = v0.<io.netty.util.Signal: io.netty.util.Signal$SignalConstant constant>;
v2 = virtualinvoke v1.<io.netty.util.Signal$SignalConstant: int id()>();
return v2;
}
public java.lang.String name()
{
java.lang.String v2;
io.netty.util.Signal v0;
io.netty.util.Signal$SignalConstant v1;
v0 := @this: io.netty.util.Signal;
v1 = v0.<io.netty.util.Signal: io.netty.util.Signal$SignalConstant constant>;
v2 = virtualinvoke v1.<io.netty.util.Signal$SignalConstant: java.lang.String name()>();
return v2;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
io.netty.util.Signal v0;
boolean v2;
v0 := @this: io.netty.util.Signal;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public int hashCode()
{
int v1;
io.netty.util.Signal v0;
v0 := @this: io.netty.util.Signal;
v1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(v0);
return v1;
}
public int compareTo(io.netty.util.Signal)
{
int v4;
io.netty.util.Signal v0, v1;
io.netty.util.Signal$SignalConstant v2, v3;
v0 := @this: io.netty.util.Signal;
v1 := @parameter0: io.netty.util.Signal;
if v0 != v1 goto label1;
return 0;
label1:
v2 = v0.<io.netty.util.Signal: io.netty.util.Signal$SignalConstant constant>;
v3 = v1.<io.netty.util.Signal: io.netty.util.Signal$SignalConstant constant>;
v4 = virtualinvoke v2.<io.netty.util.Signal$SignalConstant: int compareTo(io.netty.util.AbstractConstant)>(v3);
return v4;
}
public java.lang.String toString()
{
java.lang.String v1;
io.netty.util.Signal v0;
v0 := @this: io.netty.util.Signal;
v1 = virtualinvoke v0.<io.netty.util.Signal: java.lang.String name()>();
return v1;
}
static void <clinit>()
{
io.netty.util.Signal$1 v0;
v0 = new io.netty.util.Signal$1;
specialinvoke v0.<io.netty.util.Signal$1: void <init>()>();
<io.netty.util.Signal: io.netty.util.ConstantPool pool> = v0;
return;
}
}