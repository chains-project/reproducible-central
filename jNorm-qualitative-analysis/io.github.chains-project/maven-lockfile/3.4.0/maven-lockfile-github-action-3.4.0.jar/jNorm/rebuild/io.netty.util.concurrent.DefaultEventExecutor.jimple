public final class io.netty.util.concurrent.DefaultEventExecutor extends io.netty.util.concurrent.SingleThreadEventExecutor
{
public void <init>()
{
io.netty.util.concurrent.DefaultEventExecutor v0;
io.netty.util.concurrent.EventExecutorGroup v1;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 = null;
specialinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup)>(v1);
return;
}
public void <init>(java.util.concurrent.ThreadFactory)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
java.util.concurrent.ThreadFactory v1;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: java.util.concurrent.ThreadFactory;
specialinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory)>(null, v1);
return;
}
public void <init>(java.util.concurrent.Executor)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
java.util.concurrent.Executor v1;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: java.util.concurrent.Executor;
specialinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor)>(null, v1);
return;
}
public void <init>(io.netty.util.concurrent.EventExecutorGroup)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
io.netty.util.concurrent.DefaultThreadFactory v2;
io.netty.util.concurrent.EventExecutorGroup v1;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: io.netty.util.concurrent.EventExecutorGroup;
v2 = new io.netty.util.concurrent.DefaultThreadFactory;
specialinvoke v2.<io.netty.util.concurrent.DefaultThreadFactory: void <init>(java.lang.Class)>(class "Lio/netty/util/concurrent/DefaultEventExecutor;");
specialinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory)>(v1, v2);
return;
}
public void <init>(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
io.netty.util.concurrent.EventExecutorGroup v1;
java.util.concurrent.ThreadFactory v2;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: io.netty.util.concurrent.EventExecutorGroup;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
specialinvoke v0.<io.netty.util.concurrent.SingleThreadEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean)>(v1, v2, 1);
return;
}
public void <init>(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
io.netty.util.concurrent.EventExecutorGroup v1;
java.util.concurrent.Executor v2;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: io.netty.util.concurrent.EventExecutorGroup;
v2 := @parameter1: java.util.concurrent.Executor;
specialinvoke v0.<io.netty.util.concurrent.SingleThreadEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean)>(v1, v2, 1);
return;
}
public void <init>(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory, int, io.netty.util.concurrent.RejectedExecutionHandler)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
int v3;
io.netty.util.concurrent.EventExecutorGroup v1;
java.util.concurrent.ThreadFactory v2;
io.netty.util.concurrent.RejectedExecutionHandler v4;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: io.netty.util.concurrent.EventExecutorGroup;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.util.concurrent.RejectedExecutionHandler;
specialinvoke v0.<io.netty.util.concurrent.SingleThreadEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler)>(v1, v2, 1, v3, v4);
return;
}
public void <init>(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor, int, io.netty.util.concurrent.RejectedExecutionHandler)
{
io.netty.util.concurrent.DefaultEventExecutor v0;
java.util.concurrent.Executor v2;
int v3;
io.netty.util.concurrent.EventExecutorGroup v1;
io.netty.util.concurrent.RejectedExecutionHandler v4;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
v1 := @parameter0: io.netty.util.concurrent.EventExecutorGroup;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.util.concurrent.RejectedExecutionHandler;
specialinvoke v0.<io.netty.util.concurrent.SingleThreadEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler)>(v1, v2, 1, v3, v4);
return;
}
protected void run()
{
io.netty.util.concurrent.DefaultEventExecutor v0;
java.lang.Runnable v1;
boolean v2;
v0 := @this: io.netty.util.concurrent.DefaultEventExecutor;
label1:
v1 = virtualinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: java.lang.Runnable takeTask()>();
if v1 == null goto label2;
staticinvoke <io.netty.util.concurrent.DefaultEventExecutor: void runTask(java.lang.Runnable)>(v1);
virtualinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: void updateLastExecutionTime()>();
label2:
v2 = virtualinvoke v0.<io.netty.util.concurrent.DefaultEventExecutor: boolean confirmShutdown()>();
if v2 == 0 goto label1;
return;
}
}