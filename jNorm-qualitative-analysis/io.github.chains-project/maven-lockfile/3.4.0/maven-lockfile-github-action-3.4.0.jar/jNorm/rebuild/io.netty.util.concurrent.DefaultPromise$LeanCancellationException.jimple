final class io.netty.util.concurrent.DefaultPromise$LeanCancellationException extends java.util.concurrent.CancellationException
{
private static final long serialVersionUID;
private void <init>()
{
io.netty.util.concurrent.DefaultPromise$LeanCancellationException v0;
v0 := @this: io.netty.util.concurrent.DefaultPromise$LeanCancellationException;
specialinvoke v0.<java.util.concurrent.CancellationException: void <init>()>();
return;
}
public java.lang.Throwable fillInStackTrace()
{
io.netty.util.concurrent.DefaultPromise$LeanCancellationException v0;
java.lang.StackTraceElement[] v1;
v0 := @this: io.netty.util.concurrent.DefaultPromise$LeanCancellationException;
v1 = <io.netty.util.concurrent.DefaultPromise: java.lang.StackTraceElement[] CANCELLATION_STACK>;
virtualinvoke v0.<io.netty.util.concurrent.DefaultPromise$LeanCancellationException: void setStackTrace(java.lang.StackTraceElement[])>(v1);
return v0;
}
public java.lang.String toString()
{
io.netty.util.concurrent.DefaultPromise$LeanCancellationException v0;
java.lang.Class v1;
java.lang.String v2;
v0 := @this: io.netty.util.concurrent.DefaultPromise$LeanCancellationException;
v1 = class "Ljava/util/concurrent/CancellationException;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
return v2;
}
}