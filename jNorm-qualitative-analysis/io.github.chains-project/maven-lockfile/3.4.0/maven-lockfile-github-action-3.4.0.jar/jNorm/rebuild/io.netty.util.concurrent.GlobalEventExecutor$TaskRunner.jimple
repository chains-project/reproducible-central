final class io.netty.util.concurrent.GlobalEventExecutor$TaskRunner extends java.lang.Object implements java.lang.Runnable
{
static final boolean $assertionsDisabled;
final io.netty.util.concurrent.GlobalEventExecutor this$0;
void <init>(io.netty.util.concurrent.GlobalEventExecutor)
{
io.netty.util.concurrent.GlobalEventExecutor v1;
io.netty.util.concurrent.GlobalEventExecutor$TaskRunner v0;
v0 := @this: io.netty.util.concurrent.GlobalEventExecutor$TaskRunner;
v1 := @parameter0: io.netty.util.concurrent.GlobalEventExecutor;
v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.util.concurrent.ScheduledFutureTask v6;
java.lang.Throwable v3;
io.netty.util.internal.PriorityQueue v8;
java.util.concurrent.atomic.AtomicBoolean v14, v22;
java.lang.AssertionError v17;
java.lang.Runnable v2;
io.netty.util.concurrent.GlobalEventExecutor v1, v13, v18, v21, v5, v7, v9;
int v12;
boolean v11, v15, v16, v20, v23;
io.netty.util.concurrent.GlobalEventExecutor$TaskRunner v0;
java.util.concurrent.BlockingQueue v10, v19;
io.netty.util.internal.logging.InternalLogger v4;
v0 := @this: io.netty.util.concurrent.GlobalEventExecutor$TaskRunner;
label1:
v1 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v2 = virtualinvoke v1.<io.netty.util.concurrent.GlobalEventExecutor: java.lang.Runnable takeTask()>();
if v2 == null goto label6;
label2:
staticinvoke <io.netty.util.concurrent.AbstractEventExecutor: void runTask(java.lang.Runnable)>(v2);
label3:
goto label5;
label4:
v3 := @caughtexception;
v4 = <io.netty.util.concurrent.GlobalEventExecutor: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v4.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception from the global event executor: ", v3);
label5:
v5 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v6 = v5.<io.netty.util.concurrent.GlobalEventExecutor: io.netty.util.concurrent.ScheduledFutureTask quietPeriodTask>;
if v2 != v6 goto label1;
label6:
v7 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v8 = v7.<io.netty.util.concurrent.GlobalEventExecutor: io.netty.util.internal.PriorityQueue scheduledTaskQueue>;
v9 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v10 = v9.<io.netty.util.concurrent.GlobalEventExecutor: java.util.concurrent.BlockingQueue taskQueue>;
v11 = interfaceinvoke v10.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();
if v11 == 0 goto label1;
if v8 == null goto label7;
v12 = interfaceinvoke v8.<java.util.Queue: int size()>();
if v12 != 1 goto label1;
label7:
v13 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v14 = v13.<io.netty.util.concurrent.GlobalEventExecutor: java.util.concurrent.atomic.AtomicBoolean started>;
v15 = virtualinvoke v14.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(1, 0);
v16 = <io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: boolean $assertionsDisabled>;
if v16 != 0 goto label8;
if v15 != 0 goto label8;
v17 = new java.lang.AssertionError;
specialinvoke v17.<java.lang.AssertionError: void <init>()>();
throw v17;
label8:
v18 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v19 = v18.<io.netty.util.concurrent.GlobalEventExecutor: java.util.concurrent.BlockingQueue taskQueue>;
v20 = interfaceinvoke v19.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();
if v20 != 0 goto label9;
v21 = v0.<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: io.netty.util.concurrent.GlobalEventExecutor this$0>;
v22 = v21.<io.netty.util.concurrent.GlobalEventExecutor: java.util.concurrent.atomic.AtomicBoolean started>;
v23 = virtualinvoke v22.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v23 != 0 goto label1;
label9:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/util/concurrent/GlobalEventExecutor;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: boolean $assertionsDisabled> = v2;
return;
}
}