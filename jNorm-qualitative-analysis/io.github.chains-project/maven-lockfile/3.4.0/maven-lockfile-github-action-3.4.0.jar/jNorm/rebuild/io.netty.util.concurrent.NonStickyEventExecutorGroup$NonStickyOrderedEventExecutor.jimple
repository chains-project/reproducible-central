final class io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor extends io.netty.util.concurrent.AbstractEventExecutor implements java.lang.Runnable, io.netty.util.concurrent.OrderedEventExecutor
{
private final io.netty.util.concurrent.EventExecutor executor;
private final java.util.Queue tasks;
private static final int NONE;
private static final int SUBMITTED;
private static final int RUNNING;
private final java.util.concurrent.atomic.AtomicInteger state;
private final int maxTaskExecutePerRun;
private final java.util.concurrent.atomic.AtomicReference executingThread;
void <init>(io.netty.util.concurrent.EventExecutor, int)
{
io.netty.util.concurrent.EventExecutor v1;
java.util.concurrent.atomic.AtomicInteger v4;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
int v2;
java.util.Queue v3;
java.util.concurrent.atomic.AtomicReference v5;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 := @parameter0: io.netty.util.concurrent.EventExecutor;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.util.concurrent.AbstractEventExecutor: void <init>(io.netty.util.concurrent.EventExecutorGroup)>(v1);
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.Queue newMpscQueue()>();
v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.Queue tasks> = v3;
v4 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v4.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state> = v4;
v5 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v5.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread> = v5;
v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor> = v1;
v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: int maxTaskExecutePerRun> = v2;
return;
}
public void run()
{
java.util.concurrent.atomic.AtomicInteger v1, v10, v14, v15, v18, v23, v27, v28, v31;
java.lang.Thread v3;
boolean v17, v19, v2, v30, v32;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
java.util.Queue v16, v29, v7;
io.netty.util.concurrent.EventExecutor v12, v25;
java.lang.Throwable v13, v21, v26;
java.util.concurrent.atomic.AtomicReference v11, v20, v24, v33, v4;
int v22, v5, v6, v9;
java.lang.Object v8;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1, 2);
if v2 != 0 goto label01;
return;
label01:
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v4 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread>;
virtualinvoke v4.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v3);
label02:
v5 = 0;
label03:
v6 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: int maxTaskExecutePerRun>;
if v5 >= v6 goto label04;
v7 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.Queue tasks>;
v8 = interfaceinvoke v7.<java.util.Queue: java.lang.Object poll()>();
if v8 == null goto label04;
staticinvoke <io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: void safeExecute(java.lang.Runnable)>(v8);
v5 = v5 + 1;
goto label03;
label04:
v9 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: int maxTaskExecutePerRun>;
if v5 != v9 goto label08;
label05:
v10 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
virtualinvoke v10.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(1);
v11 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread>;
virtualinvoke v11.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(v3, null);
v12 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
interfaceinvoke v12.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v0);
label06:
return;
label07:
v13 := @caughtexception;
v14 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
virtualinvoke v14.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(2);
goto label02;
label08:
v15 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
virtualinvoke v15.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);
v16 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.Queue tasks>;
v17 = interfaceinvoke v16.<java.util.Queue: boolean isEmpty()>();
if v17 != 0 goto label09;
v18 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
v19 = virtualinvoke v18.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(0, 2);
if v19 != 0 goto label02;
label09:
v20 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread>;
virtualinvoke v20.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(v3, null);
return;
label10:
v21 := @caughtexception;
v22 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: int maxTaskExecutePerRun>;
if v5 != v22 goto label14;
label11:
v23 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
virtualinvoke v23.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(1);
v24 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread>;
virtualinvoke v24.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(v3, null);
v25 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
interfaceinvoke v25.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v0);
label12:
return;
label13:
v26 := @caughtexception;
v27 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
virtualinvoke v27.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(2);
goto label16;
label14:
v28 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
virtualinvoke v28.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);
v29 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.Queue tasks>;
v30 = interfaceinvoke v29.<java.util.Queue: boolean isEmpty()>();
if v30 != 0 goto label15;
v31 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
v32 = virtualinvoke v31.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(0, 2);
if v32 != 0 goto label16;
label15:
v33 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread>;
virtualinvoke v33.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(v3, null);
return;
label16:
throw v21;
catch java.lang.Throwable from label05 to label06 with label07;
catch java.lang.Throwable from label03 to label04 with label10;
catch java.lang.Throwable from label11 to label12 with label13;
}
public boolean inEventLoop(java.lang.Thread)
{
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
java.lang.Thread v1;
java.lang.Object v3;
java.util.concurrent.atomic.AtomicReference v2;
boolean v4;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 := @parameter0: java.lang.Thread;
v2 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicReference executingThread>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
if v3 != v1 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isShuttingDown()
{
io.netty.util.concurrent.EventExecutor v1;
boolean v2;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.EventExecutor: boolean isShutdown()>();
return v2;
}
public io.netty.util.concurrent.Future shutdownGracefully(long, long, java.util.concurrent.TimeUnit)
{
io.netty.util.concurrent.EventExecutor v4;
java.util.concurrent.TimeUnit v3;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
long v1, v2;
io.netty.util.concurrent.Future v5;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 := @parameter2: java.util.concurrent.TimeUnit;
v4 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
v5 = interfaceinvoke v4.<io.netty.util.concurrent.EventExecutor: io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit)>(v1, v2, v3);
return v5;
}
public io.netty.util.concurrent.Future terminationFuture()
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.util.concurrent.Future v2;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.EventExecutor: io.netty.util.concurrent.Future terminationFuture()>();
return v2;
}
public void shutdown()
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
interfaceinvoke v1.<io.netty.util.concurrent.EventExecutor: void shutdown()>();
return;
}
public boolean isShutdown()
{
io.netty.util.concurrent.EventExecutor v1;
boolean v2;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.EventExecutor: boolean isShutdown()>();
return v2;
}
public boolean isTerminated()
{
io.netty.util.concurrent.EventExecutor v1;
boolean v2;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.EventExecutor: boolean isTerminated()>();
return v2;
}
public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
{
io.netty.util.concurrent.EventExecutor v3;
java.util.concurrent.TimeUnit v2;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
long v1;
boolean v4;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
v4 = interfaceinvoke v3.<io.netty.util.concurrent.EventExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(v1, v2);
return v4;
}
public void execute(java.lang.Runnable)
{
io.netty.util.concurrent.EventExecutor v7;
java.lang.Runnable v1;
java.util.concurrent.RejectedExecutionException v4;
java.util.concurrent.atomic.AtomicInteger v5;
io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor v0;
java.util.Queue v2;
boolean v3, v6;
v0 := @this: io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor;
v1 := @parameter0: java.lang.Runnable;
v2 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.Queue tasks>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean offer(java.lang.Object)>(v1);
if v3 != 0 goto label1;
v4 = new java.util.concurrent.RejectedExecutionException;
specialinvoke v4.<java.util.concurrent.RejectedExecutionException: void <init>()>();
throw v4;
label1:
v5 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: java.util.concurrent.atomic.AtomicInteger state>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(0, 1);
if v6 == 0 goto label2;
v7 = v0.<io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor: io.netty.util.concurrent.EventExecutor executor>;
interfaceinvoke v7.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v0);
label2:
return;
}
}