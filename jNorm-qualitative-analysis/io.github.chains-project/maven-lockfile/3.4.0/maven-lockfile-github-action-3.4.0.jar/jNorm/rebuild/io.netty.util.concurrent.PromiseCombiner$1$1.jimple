class io.netty.util.concurrent.PromiseCombiner$1$1 extends java.lang.Object implements java.lang.Runnable
{
final io.netty.util.concurrent.Future val$future;
final io.netty.util.concurrent.PromiseCombiner$1 this$1;
void <init>(io.netty.util.concurrent.PromiseCombiner$1, io.netty.util.concurrent.Future)
{
io.netty.util.concurrent.PromiseCombiner$1 v1;
io.netty.util.concurrent.PromiseCombiner$1$1 v0;
io.netty.util.concurrent.Future v2;
v0 := @this: io.netty.util.concurrent.PromiseCombiner$1$1;
v1 := @parameter0: io.netty.util.concurrent.PromiseCombiner$1;
v2 := @parameter1: io.netty.util.concurrent.Future;
v0.<io.netty.util.concurrent.PromiseCombiner$1$1: io.netty.util.concurrent.PromiseCombiner$1 this$1> = v1;
v0.<io.netty.util.concurrent.PromiseCombiner$1$1: io.netty.util.concurrent.Future val$future> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.util.concurrent.PromiseCombiner$1 v1;
io.netty.util.concurrent.PromiseCombiner$1$1 v0;
io.netty.util.concurrent.Future v2;
v0 := @this: io.netty.util.concurrent.PromiseCombiner$1$1;
v1 = v0.<io.netty.util.concurrent.PromiseCombiner$1$1: io.netty.util.concurrent.PromiseCombiner$1 this$1>;
v2 = v0.<io.netty.util.concurrent.PromiseCombiner$1$1: io.netty.util.concurrent.Future val$future>;
specialinvoke v1.<io.netty.util.concurrent.PromiseCombiner$1: void operationComplete0(io.netty.util.concurrent.Future)>(v2);
return;
}
}