public class io.netty.util.concurrent.PromiseNotifier extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private final io.netty.util.concurrent.Promise[] promises;
private final boolean logNotifyFailure;
public transient void <init>(io.netty.util.concurrent.Promise[])
{
io.netty.util.concurrent.Promise[] v1;
io.netty.util.concurrent.PromiseNotifier v0;
v0 := @this: io.netty.util.concurrent.PromiseNotifier;
v1 := @parameter0: io.netty.util.concurrent.Promise[];
specialinvoke v0.<io.netty.util.concurrent.PromiseNotifier: void <init>(boolean,io.netty.util.concurrent.Promise[])>(1, v1);
return;
}
public transient void <init>(boolean, io.netty.util.concurrent.Promise[])
{
io.netty.util.concurrent.Promise v5;
io.netty.util.concurrent.PromiseNotifier v0;
int v3, v4;
java.lang.Object v6;
io.netty.util.concurrent.Promise[] v2;
boolean v1;
v0 := @this: io.netty.util.concurrent.PromiseNotifier;
v1 := @parameter0: boolean;
v2 := @parameter1: io.netty.util.concurrent.Promise[];
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "promises");
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNullWithIAE(java.lang.Object,java.lang.String)>(v5, "promise");
v4 = v4 + 1;
goto label1;
label2:
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
v0.<io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Promise[] promises> = v6;
v0.<io.netty.util.concurrent.PromiseNotifier: boolean logNotifyFailure> = v1;
return;
}
public static io.netty.util.concurrent.Future cascade(io.netty.util.concurrent.Future, io.netty.util.concurrent.Promise)
{
io.netty.util.concurrent.Future v0, v2;
io.netty.util.concurrent.Promise v1;
v0 := @parameter0: io.netty.util.concurrent.Future;
v1 := @parameter1: io.netty.util.concurrent.Promise;
v2 = staticinvoke <io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Future cascade(boolean,io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise)>(1, v0, v1);
return v2;
}
public static io.netty.util.concurrent.Future cascade(boolean, io.netty.util.concurrent.Future, io.netty.util.concurrent.Promise)
{
io.netty.util.concurrent.PromiseNotifier$2 v4;
io.netty.util.concurrent.Promise v2;
io.netty.util.concurrent.Promise[] v5;
io.netty.util.concurrent.Future v1;
io.netty.util.concurrent.PromiseNotifier$1 v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: io.netty.util.concurrent.Future;
v2 := @parameter2: io.netty.util.concurrent.Promise;
v3 = new io.netty.util.concurrent.PromiseNotifier$1;
specialinvoke v3.<io.netty.util.concurrent.PromiseNotifier$1: void <init>(io.netty.util.concurrent.Future)>(v1);
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)>(v3);
v4 = new io.netty.util.concurrent.PromiseNotifier$2;
v5 = newarray (io.netty.util.concurrent.Promise)[1];
v5[0] = v2;
specialinvoke v4.<io.netty.util.concurrent.PromiseNotifier$2: void <init>(boolean,io.netty.util.concurrent.Promise[],io.netty.util.concurrent.Promise,io.netty.util.concurrent.Future)>(v0, v5, v2, v1);
interfaceinvoke v1.<io.netty.util.concurrent.Future: io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)>(v4);
return v1;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v16;
io.netty.util.concurrent.PromiseNotifier v0;
int v13, v14, v18, v19, v8, v9;
boolean v11, v2, v5;
io.netty.util.concurrent.Promise v10, v15, v20;
io.netty.util.internal.logging.InternalLogger v3, v4;
java.lang.Object v6;
io.netty.util.concurrent.Promise[] v12, v17, v7;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.util.concurrent.PromiseNotifier;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.util.concurrent.PromiseNotifier: boolean logNotifyFailure>;
if v2 == 0 goto label1;
v3 = <io.netty.util.concurrent.PromiseNotifier: io.netty.util.internal.logging.InternalLogger logger>;
goto label2;
label1:
v3 = null;
label2:
v4 = v3;
v5 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object get()>();
v7 = v0.<io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Promise[] promises>;
v8 = lengthof v7;
v9 = 0;
label3:
if v9 >= v8 goto label8;
v10 = v7[v9];
staticinvoke <io.netty.util.internal.PromiseNotificationUtil: void trySuccess(io.netty.util.concurrent.Promise,java.lang.Object,io.netty.util.internal.logging.InternalLogger)>(v10, v6, v4);
v9 = v9 + 1;
goto label3;
label4:
v11 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isCancelled()>();
if v11 == 0 goto label6;
v12 = v0.<io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Promise[] promises>;
v13 = lengthof v12;
v14 = 0;
label5:
if v14 >= v13 goto label8;
v15 = v12[v14];
staticinvoke <io.netty.util.internal.PromiseNotificationUtil: void tryCancel(io.netty.util.concurrent.Promise,io.netty.util.internal.logging.InternalLogger)>(v15, v4);
v14 = v14 + 1;
goto label5;
label6:
v16 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
v17 = v0.<io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Promise[] promises>;
v18 = lengthof v17;
v19 = 0;
label7:
if v19 >= v18 goto label8;
v20 = v17[v19];
staticinvoke <io.netty.util.internal.PromiseNotificationUtil: void tryFailure(io.netty.util.concurrent.Promise,java.lang.Throwable,io.netty.util.internal.logging.InternalLogger)>(v20, v16, v4);
v19 = v19 + 1;
goto label7;
label8:
return;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/util/concurrent/PromiseNotifier;");
<io.netty.util.concurrent.PromiseNotifier: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}