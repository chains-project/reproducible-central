final class io.netty.util.concurrent.ScheduledFutureTask extends io.netty.util.concurrent.PromiseTask implements io.netty.util.concurrent.ScheduledFuture, io.netty.util.internal.PriorityQueueNode
{
private long id;
private long deadlineNanos;
private final long periodNanos;
private int queueIndex;
static final boolean $assertionsDisabled;
void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor, java.lang.Runnable, long)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.concurrent.AbstractScheduledEventExecutor v1;
int v4;
long v3;
java.lang.Runnable v2;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: io.netty.util.concurrent.AbstractScheduledEventExecutor;
v2 := @parameter1: java.lang.Runnable;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.util.concurrent.PromiseTask: void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Runnable)>(v1, v2);
v4 = (int) -1;
v0.<io.netty.util.concurrent.ScheduledFutureTask: int queueIndex> = v4;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = v3;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos> = 0L;
return;
}
void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor, java.lang.Runnable, long, long)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.concurrent.AbstractScheduledEventExecutor v1;
int v5;
long v3, v4, v6;
java.lang.Runnable v2;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: io.netty.util.concurrent.AbstractScheduledEventExecutor;
v2 := @parameter1: java.lang.Runnable;
v3 := @parameter2: long;
v4 := @parameter3: long;
specialinvoke v0.<io.netty.util.concurrent.PromiseTask: void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Runnable)>(v1, v2);
v5 = (int) -1;
v0.<io.netty.util.concurrent.ScheduledFutureTask: int queueIndex> = v5;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = v3;
v6 = staticinvoke <io.netty.util.concurrent.ScheduledFutureTask: long validatePeriod(long)>(v4);
v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos> = v6;
return;
}
void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor, java.util.concurrent.Callable, long, long)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.concurrent.AbstractScheduledEventExecutor v1;
int v5;
java.util.concurrent.Callable v2;
long v3, v4, v6;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: io.netty.util.concurrent.AbstractScheduledEventExecutor;
v2 := @parameter1: java.util.concurrent.Callable;
v3 := @parameter2: long;
v4 := @parameter3: long;
specialinvoke v0.<io.netty.util.concurrent.PromiseTask: void <init>(io.netty.util.concurrent.EventExecutor,java.util.concurrent.Callable)>(v1, v2);
v5 = (int) -1;
v0.<io.netty.util.concurrent.ScheduledFutureTask: int queueIndex> = v5;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = v3;
v6 = staticinvoke <io.netty.util.concurrent.ScheduledFutureTask: long validatePeriod(long)>(v4);
v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos> = v6;
return;
}
void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor, java.util.concurrent.Callable, long)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.concurrent.AbstractScheduledEventExecutor v1;
int v4;
java.util.concurrent.Callable v2;
long v3;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: io.netty.util.concurrent.AbstractScheduledEventExecutor;
v2 := @parameter1: java.util.concurrent.Callable;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.util.concurrent.PromiseTask: void <init>(io.netty.util.concurrent.EventExecutor,java.util.concurrent.Callable)>(v1, v2);
v4 = (int) -1;
v0.<io.netty.util.concurrent.ScheduledFutureTask: int queueIndex> = v4;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = v3;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos> = 0L;
return;
}
private static long validatePeriod(long)
{
long v0;
byte v1;
java.lang.IllegalArgumentException v2;
v0 := @parameter0: long;
v1 = v0 cmp 0L;
if v1 != 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("period: 0 (expected: != 0)");
throw v2;
label1:
return v0;
}
io.netty.util.concurrent.ScheduledFutureTask setId(long)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
byte v3;
long v1, v2;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: long;
v2 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long id>;
v3 = v2 cmp 0L;
if v3 != 0 goto label1;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long id> = v1;
label1:
return v0;
}
protected io.netty.util.concurrent.EventExecutor executor()
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.util.concurrent.ScheduledFutureTask v0;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = specialinvoke v0.<io.netty.util.concurrent.PromiseTask: io.netty.util.concurrent.EventExecutor executor()>();
return v1;
}
public long deadlineNanos()
{
io.netty.util.concurrent.ScheduledFutureTask v0;
long v1;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos>;
return v1;
}
void setConsumed()
{
io.netty.util.concurrent.ScheduledFutureTask v0;
long v1, v5, v6;
java.lang.AssertionError v8;
byte v2, v7;
io.netty.util.concurrent.AbstractScheduledEventExecutor v4;
boolean v3;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos>;
v2 = v1 cmp 0L;
if v2 != 0 goto label2;
v3 = <io.netty.util.concurrent.ScheduledFutureTask: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
v4 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
v5 = virtualinvoke v4.<io.netty.util.concurrent.AbstractScheduledEventExecutor: long getCurrentTimeNanos()>();
v6 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos>;
v7 = v5 cmp v6;
if v7 >= 0 goto label1;
v8 = new java.lang.AssertionError;
specialinvoke v8.<java.lang.AssertionError: void <init>()>();
throw v8;
label1:
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = 0L;
label2:
return;
}
public long delayNanos()
{
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.concurrent.AbstractScheduledEventExecutor v1;
long v2, v3;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
v2 = virtualinvoke v1.<io.netty.util.concurrent.AbstractScheduledEventExecutor: long getCurrentTimeNanos()>();
v3 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: long delayNanos(long)>(v2);
return v3;
}
static long deadlineToDelayNanos(long, long)
{
byte v2;
long v0, v1, v3, v4;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 = v1 cmp 0L;
if v2 != 0 goto label1;
v3 = 0L;
goto label2;
label1:
v4 = v1 - v0;
v3 = staticinvoke <java.lang.Math: long max(long,long)>(0L, v4);
label2:
return v3;
}
public long delayNanos(long)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
long v1, v2, v3;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: long;
v2 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos>;
v3 = staticinvoke <io.netty.util.concurrent.ScheduledFutureTask: long deadlineToDelayNanos(long,long)>(v1, v2);
return v3;
}
public long getDelay(java.util.concurrent.TimeUnit)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
java.util.concurrent.TimeUnit v1, v3;
long v2, v4;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v2 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: long delayNanos()>();
v3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
v4 = virtualinvoke v1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(v2, v3);
return v4;
}
public int compareTo(java.util.concurrent.Delayed)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
long v13, v14, v2, v3, v4, v8, v9;
java.lang.AssertionError v16;
byte v10, v15, v5, v7;
int v11, v6;
java.util.concurrent.Delayed v1;
boolean v12;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: java.util.concurrent.Delayed;
if v0 != v1 goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos()>();
v3 = virtualinvoke v1.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos()>();
v4 = v2 - v3;
v5 = v4 cmp 0L;
if v5 >= 0 goto label2;
v6 = (int) -1;
return v6;
label2:
v7 = v4 cmp 0L;
if v7 <= 0 goto label3;
return 1;
label3:
v8 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long id>;
v9 = v1.<io.netty.util.concurrent.ScheduledFutureTask: long id>;
v10 = v8 cmp v9;
if v10 >= 0 goto label4;
v11 = (int) -1;
return v11;
label4:
v12 = <io.netty.util.concurrent.ScheduledFutureTask: boolean $assertionsDisabled>;
if v12 != 0 goto label5;
v13 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long id>;
v14 = v1.<io.netty.util.concurrent.ScheduledFutureTask: long id>;
v15 = v13 cmp v14;
if v15 != 0 goto label5;
v16 = new java.lang.AssertionError;
specialinvoke v16.<java.lang.AssertionError: void <init>()>();
throw v16;
label5:
return 1;
}
public void run()
{
io.netty.util.concurrent.EventExecutor v16, v2;
io.netty.util.concurrent.ScheduledFutureTask v0;
java.lang.Throwable v30;
io.netty.util.internal.PriorityQueue v29, v9;
long v11, v18, v20, v21, v22, v24, v25, v26, v5;
java.lang.AssertionError v4;
byte v12, v19, v6;
boolean v1, v13, v15, v17, v27, v3, v7;
io.netty.util.concurrent.AbstractScheduledEventExecutor v10, v23, v28, v8;
java.lang.Object v14;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = <io.netty.util.concurrent.ScheduledFutureTask: boolean $assertionsDisabled>;
if v1 != 0 goto label01;
v2 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.EventExecutor executor()>();
v3 = interfaceinvoke v2.<io.netty.util.concurrent.EventExecutor: boolean inEventLoop()>();
if v3 != 0 goto label01;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label01:
v5 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: long delayNanos()>();
v6 = v5 cmp 0L;
if v6 <= 0 goto label04;
v7 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: boolean isCancelled()>();
if v7 == 0 goto label02;
v8 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
v9 = virtualinvoke v8.<io.netty.util.concurrent.AbstractScheduledEventExecutor: io.netty.util.internal.PriorityQueue scheduledTaskQueue()>();
interfaceinvoke v9.<io.netty.util.internal.PriorityQueue: boolean removeTyped(java.lang.Object)>(v0);
goto label03;
label02:
v10 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
virtualinvoke v10.<io.netty.util.concurrent.AbstractScheduledEventExecutor: void scheduleFromEventLoop(io.netty.util.concurrent.ScheduledFutureTask)>(v0);
label03:
return;
label04:
v11 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos>;
v12 = v11 cmp 0L;
if v12 != 0 goto label05;
v13 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: boolean setUncancellableInternal()>();
if v13 == 0 goto label10;
v14 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: java.lang.Object runTask()>();
virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.Promise setSuccessInternal(java.lang.Object)>(v14);
goto label10;
label05:
v15 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: boolean isCancelled()>();
if v15 != 0 goto label10;
virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: java.lang.Object runTask()>();
v16 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.EventExecutor executor()>();
v17 = interfaceinvoke v16.<io.netty.util.concurrent.EventExecutor: boolean isShutdown()>();
if v17 != 0 goto label10;
v18 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos>;
v19 = v18 cmp 0L;
if v19 <= 0 goto label06;
v20 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos>;
v21 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos>;
v22 = v20 + v21;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = v22;
goto label07;
label06:
v23 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
v24 = virtualinvoke v23.<io.netty.util.concurrent.AbstractScheduledEventExecutor: long getCurrentTimeNanos()>();
v25 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos>;
v26 = v24 - v25;
v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos> = v26;
label07:
v27 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: boolean isCancelled()>();
if v27 != 0 goto label10;
v28 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
v29 = virtualinvoke v28.<io.netty.util.concurrent.AbstractScheduledEventExecutor: io.netty.util.internal.PriorityQueue scheduledTaskQueue()>();
interfaceinvoke v29.<io.netty.util.internal.PriorityQueue: boolean add(java.lang.Object)>(v0);
label08:
goto label10;
label09:
v30 := @caughtexception;
virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.Promise setFailureInternal(java.lang.Throwable)>(v30);
label10:
return;
catch java.lang.Throwable from label01 to label03 with label09;
catch java.lang.Throwable from label04 to label08 with label09;
}
private io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.util.concurrent.ScheduledFutureTask v0;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = virtualinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.EventExecutor executor()>();
return v1;
}
public boolean cancel(boolean)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.concurrent.AbstractScheduledEventExecutor v3;
boolean v1, v2;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.util.concurrent.PromiseTask: boolean cancel(boolean)>(v1);
if v2 == 0 goto label1;
v3 = specialinvoke v0.<io.netty.util.concurrent.ScheduledFutureTask: io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor()>();
virtualinvoke v3.<io.netty.util.concurrent.AbstractScheduledEventExecutor: void removeScheduled(io.netty.util.concurrent.ScheduledFutureTask)>(v0);
label1:
return v2;
}
boolean cancelWithoutRemove(boolean)
{
io.netty.util.concurrent.ScheduledFutureTask v0;
boolean v1, v2;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.util.concurrent.PromiseTask: boolean cancel(boolean)>(v1);
return v2;
}
protected java.lang.StringBuilder toStringBuilder()
{
io.netty.util.concurrent.ScheduledFutureTask v0;
long v5, v8;
int v2, v3;
java.lang.StringBuilder v1, v10, v4, v6, v7, v9;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 = specialinvoke v0.<io.netty.util.concurrent.PromiseTask: java.lang.StringBuilder toStringBuilder()>();
v2 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v3 = v2 - 1;
virtualinvoke v1.<java.lang.StringBuilder: void setCharAt(int,char)>(v3, 44);
v4 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deadline: ");
v5 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long deadlineNanos>;
v6 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v5);
v7 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", period: ");
v8 = v0.<io.netty.util.concurrent.ScheduledFutureTask: long periodNanos>;
v9 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v8);
v10 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
return v10;
}
public int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue)
{
int v2;
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.internal.DefaultPriorityQueue v1;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: io.netty.util.internal.DefaultPriorityQueue;
v2 = v0.<io.netty.util.concurrent.ScheduledFutureTask: int queueIndex>;
return v2;
}
public void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue, int)
{
int v2;
io.netty.util.concurrent.ScheduledFutureTask v0;
io.netty.util.internal.DefaultPriorityQueue v1;
v0 := @this: io.netty.util.concurrent.ScheduledFutureTask;
v1 := @parameter0: io.netty.util.internal.DefaultPriorityQueue;
v2 := @parameter1: int;
v0.<io.netty.util.concurrent.ScheduledFutureTask: int queueIndex> = v2;
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/util/concurrent/ScheduledFutureTask;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.util.concurrent.ScheduledFutureTask: boolean $assertionsDisabled> = v2;
return;
}
}