class io.netty.util.internal.PlatformDependent0$1 extends java.lang.Object implements java.security.PrivilegedAction
{
void <init>()
{
io.netty.util.internal.PlatformDependent0$1 v0;
v0 := @this: io.netty.util.internal.PlatformDependent0$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object run()
{
java.lang.Throwable v3;
java.lang.IllegalAccessException v7;
java.lang.reflect.Field v2;
io.netty.util.internal.PlatformDependent0$1 v0;
java.lang.NoSuchFieldException v5;
java.lang.Class v1;
java.lang.Object v4;
java.lang.SecurityException v6;
java.lang.NoClassDefFoundError v8;
v0 := @this: io.netty.util.internal.PlatformDependent0$1;
label1:
v1 = class "Lsun/misc/Unsafe;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("theUnsafe");
v3 = staticinvoke <io.netty.util.internal.ReflectionUtil: java.lang.Throwable trySetAccessible(java.lang.reflect.AccessibleObject,boolean)>(v2, 0);
if v3 == null goto label3;
label2:
return v3;
label3:
v4 = virtualinvoke v2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
label4:
return v4;
label5:
v5 := @caughtexception;
return v5;
label6:
v6 := @caughtexception;
return v6;
label7:
v7 := @caughtexception;
return v7;
label8:
v8 := @caughtexception;
return v8;
catch java.lang.NoSuchFieldException from label1 to label2 with label5;
catch java.lang.NoSuchFieldException from label3 to label4 with label5;
catch java.lang.SecurityException from label1 to label2 with label6;
catch java.lang.SecurityException from label3 to label4 with label6;
catch java.lang.IllegalAccessException from label1 to label2 with label7;
catch java.lang.IllegalAccessException from label3 to label4 with label7;
catch java.lang.NoClassDefFoundError from label1 to label2 with label8;
catch java.lang.NoClassDefFoundError from label3 to label4 with label8;
}
}