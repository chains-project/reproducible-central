abstract class io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields extends io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3
{
private static final long P_LIMIT_OFFSET;
private volatile long producerLimit;
protected long producerMask;
protected java.lang.Object[] producerBuffer;
void <init>()
{
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields;
specialinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3: void <init>()>();
return;
}
final long lvProducerLimit()
{
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields v0;
long v1;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields;
v1 = v0.<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields: long producerLimit>;
return v1;
}
final boolean casProducerLimit(long, long)
{
sun.misc.Unsafe v3;
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields v0;
long v1, v2, v4;
boolean v5;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE>;
v4 = <io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields: long P_LIMIT_OFFSET>;
v5 = virtualinvoke v3.<sun.misc.Unsafe: boolean compareAndSwapLong(java.lang.Object,long,long,long)>(v0, v4, v1, v2);
return v5;
}
final void soProducerLimit(long)
{
sun.misc.Unsafe v2;
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields v0;
long v1, v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields;
v1 := @parameter0: long;
v2 = <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields: long P_LIMIT_OFFSET>;
virtualinvoke v2.<sun.misc.Unsafe: void putOrderedLong(java.lang.Object,long,long)>(v0, v3, v1);
return;
}
static void <clinit>()
{
long v0;
v0 = staticinvoke <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: long fieldOffset(java.lang.Class,java.lang.String)>(class "Lio/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueColdProducerFields;", "producerLimit");
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields: long P_LIMIT_OFFSET> = v0;
return;
}
}