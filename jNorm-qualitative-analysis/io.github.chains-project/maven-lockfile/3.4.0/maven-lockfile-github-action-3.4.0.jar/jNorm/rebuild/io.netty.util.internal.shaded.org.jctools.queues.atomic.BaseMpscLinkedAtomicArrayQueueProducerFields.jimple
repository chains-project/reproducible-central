abstract class io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields extends io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1
{
private static final java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER;
private volatile long producerIndex;
void <init>()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields;
specialinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1: void <init>()>();
return;
}
public final long lvProducerIndex()
{
long v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields;
v1 = v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields: long producerIndex>;
return v1;
}
final void soProducerIndex(long)
{
java.util.concurrent.atomic.AtomicLongFieldUpdater v2;
long v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields;
v1 := @parameter0: long;
v2 = <io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields: java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER>;
virtualinvoke v2.<java.util.concurrent.atomic.AtomicLongFieldUpdater: void lazySet(java.lang.Object,long)>(v0, v1);
return;
}
final boolean casProducerIndex(long, long)
{
java.util.concurrent.atomic.AtomicLongFieldUpdater v3;
long v1, v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields v0;
boolean v4;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = <io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields: java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>(v0, v1, v2);
return v4;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicLongFieldUpdater v0;
v0 = staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lio/netty/util/internal/shaded/org/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueueProducerFields;", "producerIndex");
<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields: java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER> = v0;
return;
}
}