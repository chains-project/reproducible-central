public class io.quarkiverse.githubaction.runtime.ActionMain extends java.lang.Object implements io.quarkus.runtime.QuarkusApplication
{
private static final org.jboss.logging.Logger LOG;
io.quarkiverse.githubaction.ContextInitializer contextInitializer;
io.quarkiverse.githubaction.InputsInitializer inputsInitializer;
io.quarkiverse.githubaction.CommandsInitializer commandsInitializer;
io.quarkiverse.githubaction.runtime.PayloadTypeResolver payloadTypeResolver;
io.quarkiverse.githubaction.runtime.GitHubEventHandler gitHubEventHandler;
com.fasterxml.jackson.databind.ObjectMapper objectMapper;
public void <init>()
{
io.quarkiverse.githubaction.runtime.ActionMain v0;
v0 := @this: io.quarkiverse.githubaction.runtime.ActionMain;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public transient int run(java.lang.String[]) throws java.lang.Exception
{
io.quarkiverse.githubaction.runtime.PayloadTypeResolver v11;
org.jboss.logging.Logger v16;
java.lang.String[] v1;
io.quarkiverse.githubaction.runtime.ActionMain v0;
io.quarkiverse.githubaction.Context v3;
io.quarkiverse.githubaction.ContextInitializer v2;
io.quarkiverse.githubaction.InputsInitializer v4;
java.lang.String v10, v12, v9;
io.quarkiverse.githubaction.runtime.GitHubEventHandler v14;
io.quarkiverse.githubaction.CommandsInitializer v6;
java.lang.Exception v15;
io.quarkiverse.githubaction.Inputs v5;
io.quarkiverse.githubaction.runtime.GitHubEvent v8;
io.quarkiverse.githubaction.Commands v7;
java.lang.Class v13;
v0 := @this: io.quarkiverse.githubaction.runtime.ActionMain;
v1 := @parameter0: java.lang.String[];
label1:
v2 = v0.<io.quarkiverse.githubaction.runtime.ActionMain: io.quarkiverse.githubaction.ContextInitializer contextInitializer>;
v3 = interfaceinvoke v2.<io.quarkiverse.githubaction.ContextInitializer: io.quarkiverse.githubaction.Context createContext()>();
v4 = v0.<io.quarkiverse.githubaction.runtime.ActionMain: io.quarkiverse.githubaction.InputsInitializer inputsInitializer>;
v5 = interfaceinvoke v4.<io.quarkiverse.githubaction.InputsInitializer: io.quarkiverse.githubaction.Inputs createInputs()>();
v6 = v0.<io.quarkiverse.githubaction.runtime.ActionMain: io.quarkiverse.githubaction.CommandsInitializer commandsInitializer>;
v7 = interfaceinvoke v6.<io.quarkiverse.githubaction.CommandsInitializer: io.quarkiverse.githubaction.Commands createCommands()>();
v8 = new io.quarkiverse.githubaction.runtime.GitHubEvent;
v9 = interfaceinvoke v5.<io.quarkiverse.githubaction.Inputs: java.lang.String getAction()>();
v10 = specialinvoke v0.<io.quarkiverse.githubaction.runtime.ActionMain: java.lang.String getEventAction(io.quarkiverse.githubaction.Context)>(v3);
v11 = v0.<io.quarkiverse.githubaction.runtime.ActionMain: io.quarkiverse.githubaction.runtime.PayloadTypeResolver payloadTypeResolver>;
v12 = interfaceinvoke v3.<io.quarkiverse.githubaction.Context: java.lang.String getGitHubEventName()>();
v13 = interfaceinvoke v11.<io.quarkiverse.githubaction.runtime.PayloadTypeResolver: java.lang.Class getPayloadType(java.lang.String)>(v12);
specialinvoke v8.<io.quarkiverse.githubaction.runtime.GitHubEvent: void <init>(java.lang.String,io.quarkiverse.githubaction.Context,java.lang.String,io.quarkiverse.githubaction.Inputs,io.quarkiverse.githubaction.Commands,java.lang.Class)>(v9, v3, v10, v5, v7, v13);
v14 = v0.<io.quarkiverse.githubaction.runtime.ActionMain: io.quarkiverse.githubaction.runtime.GitHubEventHandler gitHubEventHandler>;
interfaceinvoke v14.<io.quarkiverse.githubaction.runtime.GitHubEventHandler: void handle(io.quarkiverse.githubaction.runtime.GitHubEvent)>(v8);
label2:
return 0;
label3:
v15 := @caughtexception;
v16 = <io.quarkiverse.githubaction.runtime.ActionMain: org.jboss.logging.Logger LOG>;
virtualinvoke v16.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("An error occured while executing the action", v15);
return 1;
catch java.lang.Exception from label1 to label2 with label3;
}
private java.lang.String getEventAction(io.quarkiverse.githubaction.Context)
{
org.jboss.logging.Logger v8;
com.fasterxml.jackson.databind.ObjectMapper v3;
java.io.File v4;
java.lang.Exception v7;
io.quarkiverse.githubaction.runtime.ActionMain v0;
io.quarkiverse.githubaction.Context v1;
java.lang.Object v6;
java.lang.String v10, v2, v5, v9;
v0 := @this: io.quarkiverse.githubaction.runtime.ActionMain;
v1 := @parameter0: io.quarkiverse.githubaction.Context;
v2 = interfaceinvoke v1.<io.quarkiverse.githubaction.Context: java.lang.String getGitHubEventPath()>();
if v2 == null goto label4;
label1:
v3 = v0.<io.quarkiverse.githubaction.runtime.ActionMain: com.fasterxml.jackson.databind.ObjectMapper objectMapper>;
v4 = new java.io.File;
v5 = interfaceinvoke v1.<io.quarkiverse.githubaction.Context: java.lang.String getGitHubEventPath()>();
specialinvoke v4.<java.io.File: void <init>(java.lang.String)>(v5);
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.io.File,java.lang.Class)>(v4, class "Lio/quarkiverse/githubaction/runtime/ActionMain$GenericPayload;");
label2:
goto label4;
label3:
v7 := @caughtexception;
v8 = <io.quarkiverse.githubaction.runtime.ActionMain: org.jboss.logging.Logger LOG>;
v9 = interfaceinvoke v1.<io.quarkiverse.githubaction.Context: java.lang.String getGitHubEventPath()>();
virtualinvoke v8.<org.jboss.logging.Logger: void warnf(java.lang.String,java.lang.Object)>("Error extracting the event action from the payload %s", v9);
label4:
if v6 == null goto label5;
v10 = virtualinvoke v6.<io.quarkiverse.githubaction.runtime.ActionMain$GenericPayload: java.lang.String getAction()>();
goto label6;
label5:
v10 = null;
label6:
return v10;
catch java.lang.Exception from label1 to label2 with label3;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkiverse/githubaction/runtime/ActionMain;");
<io.quarkiverse.githubaction.runtime.ActionMain: org.jboss.logging.Logger LOG> = v0;
return;
}
}