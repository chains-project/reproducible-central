public class io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl extends java.lang.Object implements io.quarkiverse.githubaction.runtime.GitHubEventHandler
{
protected jakarta.enterprise.event.Event eventEmitter;
public void <init>()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void handle(io.quarkiverse.githubaction.runtime.GitHubEvent)
{
jakarta.enterprise.event.Event v7, v8;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl v0;
java.lang.'annotation'.Annotation[] v6;
io.quarkiverse.githubaction.runtime.GitHubEvent v1;
io.quarkiverse.githubaction.Action$ActionLiteral v5;
java.lang.String v2, v3;
boolean v4;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl;
v1 := @parameter0: io.quarkiverse.githubaction.runtime.GitHubEvent;
v2 = virtualinvoke v1.<io.quarkiverse.githubaction.runtime.GitHubEvent: java.lang.String getName()>();
virtualinvoke v1.<io.quarkiverse.githubaction.runtime.GitHubEvent: java.lang.String getEvent()>();
virtualinvoke v1.<io.quarkiverse.githubaction.runtime.GitHubEvent: java.lang.String getEventAction()>();
v3 = "<<UNNAMED>>";
v4 = virtualinvoke v3.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v4 == 0 goto label1;
v5 = new io.quarkiverse.githubaction.Action$ActionLiteral;
specialinvoke v5.<io.quarkiverse.githubaction.Action$ActionLiteral: void <init>(java.lang.String)>("<<UNNAMED>>");
v6 = newarray (java.lang.'annotation'.Annotation)[1];
v6[0] = v5;
v7 = v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl: jakarta.enterprise.event.Event eventEmitter>;
v8 = interfaceinvoke v7.<jakarta.enterprise.event.Event: jakarta.enterprise.event.Event select(java.lang.'annotation'.Annotation[])>(v6);
interfaceinvoke v8.<jakarta.enterprise.event.Event: void fire(java.lang.Object)>(v1);
label1:
return;
}
}