public class io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl extends java.lang.Object implements io.quarkiverse.githubaction.GitHubFileDownloader
{
private static final org.jboss.logging.Logger LOG;
io.quarkus.runtime.LaunchMode launchMode;
public void <init>()
{
io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl v0;
v0 := @this: io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.Optional getFileContent(org.kohsuke.github.GitHub, java.lang.String, java.lang.String)
{
java.lang.IllegalStateException v17, v5;
io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl v0;
org.kohsuke.github.GHRepository v6;
org.jboss.logging.Logger v13;
io.quarkus.runtime.LaunchMode v11;
org.kohsuke.github.GHFileNotFoundException v10;
java.lang.String v14, v18, v2, v3, v8;
org.kohsuke.github.GitHub v1;
boolean v12, v4;
org.kohsuke.github.GHContent v7;
java.io.IOException v16;
java.util.Optional v15, v9;
v0 := @this: io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v1.<org.kohsuke.github.GitHub: boolean isOffline()>();
if v4 == 0 goto label1;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A connected GitHub API client is necessary to read a config file and no token was provided. Please provide a token as input of the action.");
throw v5;
label1:
v6 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.GHRepository getRepository(java.lang.String)>(v2);
v7 = virtualinvoke v6.<org.kohsuke.github.GHRepository: org.kohsuke.github.GHContent getFileContent(java.lang.String)>(v3);
v8 = virtualinvoke v7.<org.kohsuke.github.GHContent: java.lang.String getContent()>();
v9 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v8);
label2:
return v9;
label3:
v10 := @caughtexception;
v11 = v0.<io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl: io.quarkus.runtime.LaunchMode launchMode>;
v12 = virtualinvoke v11.<io.quarkus.runtime.LaunchMode: boolean isDevOrTest()>();
if v12 == 0 goto label4;
v13 = <io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl: org.jboss.logging.Logger LOG>;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v3, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to read file \u0001 for repository \u0001. Either the file does not exist or the \'Contents\' permission has not been set for the application.");
virtualinvoke v13.<org.jboss.logging.Logger: void warn(java.lang.Object)>(v14);
label4:
v15 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v15;
label5:
v16 := @caughtexception;
v17 = new java.lang.IllegalStateException;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v3, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error downloading file \u0001 for repository \u0001");
specialinvoke v17.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v18, v16);
throw v17;
catch org.kohsuke.github.GHFileNotFoundException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label5;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkiverse/githubaction/runtime/github/GitHubFileDownloaderImpl;");
<io.quarkiverse.githubaction.runtime.github.GitHubFileDownloaderImpl: org.jboss.logging.Logger LOG> = v0;
return;
}
}