class io.quarkus.arc.impl.ArcContainerImpl$1 extends java.lang.Object implements java.util.function.Supplier
{
final java.util.List val$removedBeans;
final io.quarkus.arc.impl.ArcContainerImpl this$0;
void <init>(io.quarkus.arc.impl.ArcContainerImpl, java.util.List)
{
java.util.List v2;
io.quarkus.arc.impl.ArcContainerImpl$1 v0;
io.quarkus.arc.impl.ArcContainerImpl v1;
v0 := @this: io.quarkus.arc.impl.ArcContainerImpl$1;
v1 := @parameter0: io.quarkus.arc.impl.ArcContainerImpl;
v2 := @parameter1: java.util.List;
v0.<io.quarkus.arc.impl.ArcContainerImpl$1: io.quarkus.arc.impl.ArcContainerImpl this$0> = v1;
v0.<io.quarkus.arc.impl.ArcContainerImpl$1: java.util.List val$removedBeans> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.List get()
{
java.util.Iterator v3;
org.jboss.logging.Logger v7;
java.util.ArrayList v1;
java.util.List v2, v9;
int v8;
java.lang.Object v5, v6;
io.quarkus.arc.impl.ArcContainerImpl$1 v0;
boolean v4;
v0 := @this: io.quarkus.arc.impl.ArcContainerImpl$1;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<io.quarkus.arc.impl.ArcContainerImpl$1: java.util.List val$removedBeans>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.function.Supplier: java.lang.Object get()>();
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v6);
goto label1;
label2:
v7 = <io.quarkus.arc.impl.ArcContainerImpl: org.jboss.logging.Logger LOGGER>;
v8 = interfaceinvoke v1.<java.util.List: int size()>();
virtualinvoke v7.<org.jboss.logging.Logger: void debugf(java.lang.String,int)>("Loaded %s removed beans lazily", v8);
v9 = staticinvoke <java.util.List: java.util.List copyOf(java.util.Collection)>(v1);
return v9;
}
}