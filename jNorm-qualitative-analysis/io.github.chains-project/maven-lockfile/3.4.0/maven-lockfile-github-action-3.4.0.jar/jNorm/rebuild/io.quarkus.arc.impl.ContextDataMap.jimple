final class io.quarkus.arc.impl.ContextDataMap extends java.lang.Object implements java.util.Map
{
private final java.util.Set interceptorBindings;
private java.util.HashMap delegate;
void <init>(java.util.Set)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Set v1;
java.lang.Object v2;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.util.Set;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Set interceptorBindings> = v2;
return;
}
private java.util.Map getDelegateForRead()
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Map v2;
java.util.HashMap v1, v3;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
return v2;
label1:
v3 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
return v3;
}
private java.util.Map getDelegateForWrite(int)
{
io.quarkus.arc.impl.ContextDataMap v0;
int v1;
java.util.HashMap v2, v3, v4;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: int;
v2 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
if v2 != null goto label1;
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>(int,float)>(v1, 1.0F);
v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate> = v3;
label1:
v4 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
return v4;
}
public void clear()
{
io.quarkus.arc.impl.ContextDataMap v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not allowed to clear the context data map");
throw v1;
}
public boolean containsKey(java.lang.Object)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Map v4;
java.lang.Object v1;
java.lang.String v2;
boolean v3, v5;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.lang.Object;
v2 = "io.quarkus.arc.interceptorBindings";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label1;
return 1;
label1:
v4 = specialinvoke v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Map getDelegateForRead()>();
v5 = interfaceinvoke v4.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v5;
}
public boolean containsValue(java.lang.Object)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Map v4;
java.util.Set v2;
java.lang.Object v1;
boolean v3, v5;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Set interceptorBindings>;
v3 = interfaceinvoke v2.<java.util.Set: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label1;
return 1;
label1:
v4 = specialinvoke v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Map getDelegateForRead()>();
v5 = interfaceinvoke v4.<java.util.Map: boolean containsValue(java.lang.Object)>(v1);
return v5;
}
public java.util.Set entrySet()
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Set v10, v2, v4;
java.util.HashMap v3, v6, v9;
java.util.AbstractMap$SimpleImmutableEntry v1;
java.util.HashSet v5;
int v7, v8;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 = new java.util.AbstractMap$SimpleImmutableEntry;
v2 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Set interceptorBindings>;
specialinvoke v1.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>("io.quarkus.arc.interceptorBindings", v2);
v3 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
if v3 != null goto label1;
v4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v1);
return v4;
label1:
v5 = new java.util.HashSet;
v6 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v7 = virtualinvoke v6.<java.util.HashMap: int size()>();
v8 = v7 + 1;
specialinvoke v5.<java.util.HashSet: void <init>(int)>(v8);
v9 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v10 = virtualinvoke v9.<java.util.HashMap: java.util.Set entrySet()>();
interfaceinvoke v5.<java.util.Set: boolean addAll(java.util.Collection)>(v10);
interfaceinvoke v5.<java.util.Set: boolean add(java.lang.Object)>(v1);
return v5;
}
public java.lang.Object get(java.lang.Object)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Map v5;
java.util.Set v4;
java.lang.Object v1, v6;
java.lang.String v2;
boolean v3;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.lang.Object;
v2 = "io.quarkus.arc.interceptorBindings";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label1;
v4 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Set interceptorBindings>;
return v4;
label1:
v5 = specialinvoke v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Map getDelegateForRead()>();
v6 = interfaceinvoke v5.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v6;
}
public boolean isEmpty()
{
io.quarkus.arc.impl.ContextDataMap v0;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
return 0;
}
public java.util.Set keySet()
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Set v2, v8;
java.util.HashMap v1, v4, v7;
java.util.HashSet v3;
int v5, v6;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("io.quarkus.arc.interceptorBindings");
return v2;
label1:
v3 = new java.util.HashSet;
v4 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v5 = virtualinvoke v4.<java.util.HashMap: int size()>();
v6 = v5 + 1;
specialinvoke v3.<java.util.HashSet: void <init>(int)>(v6);
v7 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v8 = virtualinvoke v7.<java.util.HashMap: java.util.Set keySet()>();
interfaceinvoke v3.<java.util.Set: boolean addAll(java.util.Collection)>(v8);
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>("io.quarkus.arc.interceptorBindings");
return v3;
}
public void putAll(java.util.Map)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Map v1, v5;
int v4;
java.lang.IllegalArgumentException v3;
boolean v2;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("io.quarkus.arc.interceptorBindings");
if v2 == 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not allowed to put key \'io.quarkus.arc.interceptorBindings\' in the context data map");
throw v3;
label1:
v4 = interfaceinvoke v1.<java.util.Map: int size()>();
v5 = specialinvoke v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Map getDelegateForWrite(int)>(v4);
interfaceinvoke v5.<java.util.Map: void putAll(java.util.Map)>(v1);
return;
}
public java.lang.Object remove(java.lang.Object)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.HashMap v5, v6;
java.lang.IllegalArgumentException v4;
java.lang.Object v1, v7;
java.lang.String v2;
boolean v3;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.lang.Object;
v2 = "io.quarkus.arc.interceptorBindings";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not allowed to remove key \'io.quarkus.arc.interceptorBindings\' from the context data map");
throw v4;
label1:
v5 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
if v5 != null goto label2;
return null;
label2:
v6 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v7 = virtualinvoke v6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(v1);
return v7;
}
public int size()
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Map v1;
int v2, v3;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 = specialinvoke v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Map getDelegateForRead()>();
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
v3 = v2 + 1;
return v3;
}
public java.util.Collection values()
{
io.quarkus.arc.impl.ContextDataMap v0;
java.util.Collection v9;
java.util.Set v10, v2, v3;
java.util.HashMap v1, v5, v8;
java.util.ArrayList v4;
int v6, v7;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
if v1 != null goto label1;
v2 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Set interceptorBindings>;
v3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v2);
return v3;
label1:
v4 = new java.util.ArrayList;
v5 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v6 = virtualinvoke v5.<java.util.HashMap: int size()>();
v7 = v6 + 1;
specialinvoke v4.<java.util.ArrayList: void <init>(int)>(v7);
v8 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.HashMap delegate>;
v9 = virtualinvoke v8.<java.util.HashMap: java.util.Collection values()>();
interfaceinvoke v4.<java.util.List: boolean addAll(java.util.Collection)>(v9);
v10 = v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Set interceptorBindings>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v10);
return v4;
}
public java.lang.Object put(java.lang.String, java.lang.Object)
{
io.quarkus.arc.impl.ContextDataMap v0;
java.lang.IllegalArgumentException v5;
java.util.Map v6;
java.lang.Object v2, v7;
java.lang.String v1, v3;
boolean v4;
v0 := @this: io.quarkus.arc.impl.ContextDataMap;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = "io.quarkus.arc.interceptorBindings";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not allowed to put key \'io.quarkus.arc.interceptorBindings\' in the context data map");
throw v5;
label1:
v6 = specialinvoke v0.<io.quarkus.arc.impl.ContextDataMap: java.util.Map getDelegateForWrite(int)>(1);
v7 = interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v7;
}
}