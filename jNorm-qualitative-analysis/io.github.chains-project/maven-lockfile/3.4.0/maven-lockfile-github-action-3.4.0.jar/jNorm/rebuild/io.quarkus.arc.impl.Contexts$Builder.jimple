class io.quarkus.arc.impl.Contexts$Builder extends java.lang.Object
{
private final io.quarkus.arc.ManagedContext requestContext;
private final io.quarkus.arc.InjectableContext applicationContext;
private final io.quarkus.arc.InjectableContext singletonContext;
private final io.quarkus.arc.InjectableContext dependentContext;
private final java.util.Map contexts;
public void <init>(io.quarkus.arc.ManagedContext, io.quarkus.arc.InjectableContext, io.quarkus.arc.InjectableContext, io.quarkus.arc.InjectableContext)
{
io.quarkus.arc.ManagedContext v1;
io.quarkus.arc.impl.Contexts$Builder v0;
io.quarkus.arc.InjectableContext v2, v3, v4;
java.util.HashMap v5;
v0 := @this: io.quarkus.arc.impl.Contexts$Builder;
v1 := @parameter0: io.quarkus.arc.ManagedContext;
v2 := @parameter1: io.quarkus.arc.InjectableContext;
v3 := @parameter2: io.quarkus.arc.InjectableContext;
v4 := @parameter3: io.quarkus.arc.InjectableContext;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = new java.util.HashMap;
specialinvoke v5.<java.util.HashMap: void <init>()>();
v0.<io.quarkus.arc.impl.Contexts$Builder: java.util.Map contexts> = v5;
v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.ManagedContext requestContext> = v1;
v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.InjectableContext applicationContext> = v2;
v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.InjectableContext singletonContext> = v3;
v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.InjectableContext dependentContext> = v4;
return;
}
io.quarkus.arc.impl.Contexts$Builder putContext(io.quarkus.arc.InjectableContext)
{
io.quarkus.arc.impl.Contexts$Builder v0;
io.quarkus.arc.InjectableContext v1;
java.util.ArrayList v8;
java.util.List v13, v7;
java.util.Map v11, v2, v5;
int v10, v9;
java.lang.Class v12, v3, v6;
java.lang.Object v4;
v0 := @this: io.quarkus.arc.impl.Contexts$Builder;
v1 := @parameter0: io.quarkus.arc.InjectableContext;
v2 = v0.<io.quarkus.arc.impl.Contexts$Builder: java.util.Map contexts>;
v3 = interfaceinvoke v1.<io.quarkus.arc.InjectableContext: java.lang.Class getScope()>();
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
if v4 != null goto label1;
v5 = v0.<io.quarkus.arc.impl.Contexts$Builder: java.util.Map contexts>;
v6 = interfaceinvoke v1.<io.quarkus.arc.InjectableContext: java.lang.Class getScope()>();
v7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v7);
goto label2;
label1:
v8 = new java.util.ArrayList;
v9 = interfaceinvoke v4.<java.util.List: int size()>();
v10 = v9 + 1;
specialinvoke v8.<java.util.ArrayList: void <init>(int)>(v10);
interfaceinvoke v8.<java.util.List: boolean addAll(java.util.Collection)>(v4);
interfaceinvoke v8.<java.util.List: boolean add(java.lang.Object)>(v1);
v11 = v0.<io.quarkus.arc.impl.Contexts$Builder: java.util.Map contexts>;
v12 = interfaceinvoke v1.<io.quarkus.arc.InjectableContext: java.lang.Class getScope()>();
v13 = staticinvoke <java.util.List: java.util.List copyOf(java.util.Collection)>(v8);
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v13);
label2:
return v0;
}
io.quarkus.arc.impl.Contexts build()
{
io.quarkus.arc.ManagedContext v3, v5;
io.quarkus.arc.impl.Contexts$Builder v0;
io.quarkus.arc.InjectableContext v6, v7, v8;
io.quarkus.arc.impl.Contexts v4;
java.util.Map v1, v9;
boolean v2;
v0 := @this: io.quarkus.arc.impl.Contexts$Builder;
v1 = v0.<io.quarkus.arc.impl.Contexts$Builder: java.util.Map contexts>;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>(class "Ljakarta/enterprise/context/RequestScoped;");
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.ManagedContext requestContext>;
virtualinvoke v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.impl.Contexts$Builder putContext(io.quarkus.arc.InjectableContext)>(v3);
label1:
v4 = new io.quarkus.arc.impl.Contexts;
v5 = v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.ManagedContext requestContext>;
v6 = v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.InjectableContext applicationContext>;
v7 = v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.InjectableContext singletonContext>;
v8 = v0.<io.quarkus.arc.impl.Contexts$Builder: io.quarkus.arc.InjectableContext dependentContext>;
v9 = v0.<io.quarkus.arc.impl.Contexts$Builder: java.util.Map contexts>;
specialinvoke v4.<io.quarkus.arc.impl.Contexts: void <init>(io.quarkus.arc.ManagedContext,io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableContext,java.util.Map)>(v5, v6, v7, v8, v9);
return v4;
}
}