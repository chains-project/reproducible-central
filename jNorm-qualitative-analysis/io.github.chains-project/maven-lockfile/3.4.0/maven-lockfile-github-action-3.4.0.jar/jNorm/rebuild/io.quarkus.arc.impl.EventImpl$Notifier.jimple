class io.quarkus.arc.impl.EventImpl$Notifier extends java.lang.Object
{
private final java.lang.Class runtimeType;
private final java.util.List observerMethods;
final jakarta.enterprise.inject.spi.EventMetadata eventMetadata;
private final boolean hasTxObservers;
private final boolean activateRequestContext;
void <init>(java.lang.Class, java.util.List, jakarta.enterprise.inject.spi.EventMetadata)
{
java.util.List v2;
io.quarkus.arc.impl.EventImpl$Notifier v0;
java.lang.Class v1;
jakarta.enterprise.inject.spi.EventMetadata v3;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.List;
v3 := @parameter2: jakarta.enterprise.inject.spi.EventMetadata;
specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: void <init>(java.lang.Class,java.util.List,jakarta.enterprise.inject.spi.EventMetadata,boolean)>(v1, v2, v3, 1);
return;
}
void <init>(java.lang.Class, java.util.List, jakarta.enterprise.inject.spi.EventMetadata, boolean)
{
java.util.function.Predicate v6;
java.util.List v2;
java.util.stream.Stream v5;
io.quarkus.arc.impl.EventImpl$Notifier v0;
java.lang.Class v1;
jakarta.enterprise.inject.spi.EventMetadata v3;
boolean v4, v7;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.List;
v3 := @parameter2: jakarta.enterprise.inject.spi.EventMetadata;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.EventImpl$Notifier: java.lang.Class runtimeType> = v1;
v0.<io.quarkus.arc.impl.EventImpl$Notifier: java.util.List observerMethods> = v2;
v0.<io.quarkus.arc.impl.EventImpl$Notifier: jakarta.enterprise.inject.spi.EventMetadata eventMetadata> = v3;
v5 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v6 = staticinvoke <io.quarkus.arc.impl.EventImpl$Notifier$isTxObserver__2589: java.util.function.Predicate bootstrap$(io.quarkus.arc.impl.EventImpl$Notifier)>(v0);
v7 = interfaceinvoke v5.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>(v6);
v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean hasTxObservers> = v7;
v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean activateRequestContext> = v4;
return;
}
void notify(java.lang.Object)
{
io.quarkus.arc.impl.EventImpl$Notifier v0;
java.lang.Object v1;
io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler v2;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: java.lang.Object;
v2 = <io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler: io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler IMMEDIATE_HANDLER>;
virtualinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: void notify(java.lang.Object,io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler,boolean)>(v1, v2, 0);
return;
}
void notify(java.lang.Object, io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler, boolean)
{
io.quarkus.arc.impl.EventImpl$Notifier v0;
boolean v12, v20, v22, v3, v32, v34, v36, v4, v42, v45, v8;
io.quarkus.arc.impl.EventImpl$ArcSynchronization v26;
io.quarkus.arc.ManagedContext v44;
io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler v2;
io.quarkus.arc.impl.EventImpl$DeferredEventNotification v23;
java.util.function.Predicate v29, v37, v5, v6, v7;
jakarta.transaction.Transaction v28;
java.lang.Exception v30;
java.util.List v18;
java.lang.Throwable v31, v33, v35, v40, v41, v46;
org.jboss.logging.Logger v39;
java.lang.'annotation'.Annotation[] v10;
java.util.ArrayList v15;
int v14;
io.quarkus.arc.ArcContainer v43, v9;
io.quarkus.arc.impl.EventImpl$Status v25;
jakarta.enterprise.event.TransactionPhase v24;
jakarta.enterprise.inject.spi.EventMetadata v17;
java.util.Iterator v19;
io.quarkus.arc.InstanceHandle v11;
jakarta.transaction.SystemException v38;
java.lang.Object v1, v13, v21, v27;
io.quarkus.arc.impl.EventContextImpl v16;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler;
v3 := @parameter2: boolean;
v4 = virtualinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean isEmpty()>();
if v4 != 0 goto label19;
if v3 == 0 goto label01;
v5 = staticinvoke <io.quarkus.arc.impl.EventImpl$Notifier$isAsync__2592: java.util.function.Predicate bootstrap$()>();
goto label02;
label01:
v6 = staticinvoke <io.quarkus.arc.impl.EventImpl$Notifier$isAsync__2590: java.util.function.Predicate bootstrap$()>();
v5 = staticinvoke <java.util.function.Predicate: java.util.function.Predicate not(java.util.function.Predicate)>(v6);
label02:
v7 = v5;
if v3 != 0 goto label14;
v8 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean hasTxObservers>;
if v8 == 0 goto label14;
v9 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v10 = newarray (java.lang.'annotation'.Annotation)[0];
v11 = interfaceinvoke v9.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InstanceHandle instance(java.lang.Class,java.lang.'annotation'.Annotation[])>(class "Ljakarta/transaction/TransactionManager;", v10);
label03:
v12 = interfaceinvoke v11.<io.quarkus.arc.InstanceHandle: boolean isAvailable()>();
if v12 == 0 goto label14;
v13 = interfaceinvoke v11.<io.quarkus.arc.InstanceHandle: java.lang.Object get()>();
v14 = interfaceinvoke v13.<jakarta.transaction.TransactionManager: int getStatus()>();
if v14 != 0 goto label14;
v15 = new java.util.ArrayList;
specialinvoke v15.<java.util.ArrayList: void <init>()>();
v16 = new io.quarkus.arc.impl.EventContextImpl;
v17 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: jakarta.enterprise.inject.spi.EventMetadata eventMetadata>;
specialinvoke v16.<io.quarkus.arc.impl.EventContextImpl: void <init>(java.lang.Object,jakarta.enterprise.inject.spi.EventMetadata)>(v1, v17);
v18 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: java.util.List observerMethods>;
v19 = interfaceinvoke v18.<java.util.List: java.util.Iterator iterator()>();
label04:
v20 = interfaceinvoke v19.<java.util.Iterator: boolean hasNext()>();
if v20 == 0 goto label05;
v21 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
v22 = specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean isTxObserver(jakarta.enterprise.inject.spi.ObserverMethod)>(v21);
if v22 == 0 goto label04;
v23 = new io.quarkus.arc.impl.EventImpl$DeferredEventNotification;
v24 = interfaceinvoke v21.<jakarta.enterprise.inject.spi.ObserverMethod: jakarta.enterprise.event.TransactionPhase getTransactionPhase()>();
v25 = staticinvoke <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status valueOf(jakarta.enterprise.event.TransactionPhase)>(v24);
specialinvoke v23.<io.quarkus.arc.impl.EventImpl$DeferredEventNotification: void <init>(jakarta.enterprise.inject.spi.ObserverMethod,jakarta.enterprise.inject.spi.EventContext,io.quarkus.arc.impl.EventImpl$Status)>(v21, v16, v25);
interfaceinvoke v15.<java.util.List: boolean add(java.lang.Object)>(v23);
goto label04;
label05:
v26 = new io.quarkus.arc.impl.EventImpl$ArcSynchronization;
specialinvoke v26.<io.quarkus.arc.impl.EventImpl$ArcSynchronization: void <init>(java.util.List)>(v15);
v27 = interfaceinvoke v11.<io.quarkus.arc.InstanceHandle: java.lang.Object get()>();
label06:
v28 = interfaceinvoke v27.<jakarta.transaction.TransactionManager: jakarta.transaction.Transaction getTransaction()>();
interfaceinvoke v28.<jakarta.transaction.Transaction: void registerSynchronization(jakarta.transaction.Synchronization)>(v26);
v29 = staticinvoke <io.quarkus.arc.impl.EventImpl$Notifier$isNotTxObserver__2591: java.util.function.Predicate bootstrap$(io.quarkus.arc.impl.EventImpl$Notifier)>(v0);
v7 = interfaceinvoke v7.<java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>(v29);
label07:
goto label14;
label08:
v30 := @caughtexception;
v31 = virtualinvoke v30.<java.lang.Exception: java.lang.Throwable getCause()>();
v32 = v31 instanceof jakarta.transaction.RollbackException;
if v32 != 0 goto label09;
v33 = virtualinvoke v30.<java.lang.Exception: java.lang.Throwable getCause()>();
v34 = v33 instanceof java.lang.IllegalStateException;
if v34 != 0 goto label09;
v35 = virtualinvoke v30.<java.lang.Exception: java.lang.Throwable getCause()>();
v36 = v35 instanceof jakarta.transaction.SystemException;
if v36 == 0 goto label14;
label09:
v37 = staticinvoke <io.quarkus.arc.impl.EventImpl$Notifier$isNotAfterSuccess__2593: java.util.function.Predicate bootstrap$(io.quarkus.arc.impl.EventImpl$Notifier)>(v0);
v7 = interfaceinvoke v7.<java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>(v37);
label10:
goto label14;
label11:
v38 := @caughtexception;
v39 = <io.quarkus.arc.impl.EventImpl: org.jboss.logging.Logger LOGGER>;
v40 = virtualinvoke v38.<jakarta.transaction.SystemException: java.lang.Throwable getCause()>();
if v40 == null goto label12;
v41 = virtualinvoke v38.<jakarta.transaction.SystemException: java.lang.Throwable getCause()>();
goto label13;
label12:
v41 = v38;
label13:
virtualinvoke v39.<org.jboss.logging.Logger: void debugf(java.lang.String,java.lang.Object)>("Failure when trying to invoke TransactionManager#getStatus(). Stacktrace: %s", v41);
label14:
v42 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean activateRequestContext>;
if v42 == 0 goto label18;
v43 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v44 = interfaceinvoke v43.<io.quarkus.arc.ArcContainer: io.quarkus.arc.ManagedContext requestContext()>();
v45 = interfaceinvoke v44.<io.quarkus.arc.ManagedContext: boolean isActive()>();
if v45 == 0 goto label15;
specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: void notifyObservers(java.lang.Object,io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler,java.util.function.Predicate)>(v1, v2, v7);
goto label19;
label15:
interfaceinvoke v44.<io.quarkus.arc.ManagedContext: void activate()>();
specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: void notifyObservers(java.lang.Object,io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler,java.util.function.Predicate)>(v1, v2, v7);
label16:
interfaceinvoke v44.<io.quarkus.arc.ManagedContext: void terminate()>();
goto label19;
label17:
v46 := @caughtexception;
interfaceinvoke v44.<io.quarkus.arc.ManagedContext: void terminate()>();
throw v46;
label18:
specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: void notifyObservers(java.lang.Object,io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler,java.util.function.Predicate)>(v1, v2, v7);
label19:
return;
catch java.lang.Exception from label06 to label07 with label08;
catch jakarta.transaction.SystemException from label03 to label10 with label11;
catch java.lang.Throwable from label15 to label16 with label17;
}
private void notifyObservers(java.lang.Object, io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler, java.util.function.Predicate)
{
java.lang.Throwable v11;
io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler v2;
java.util.Iterator v7;
java.util.function.Predicate v3;
java.util.List v6;
io.quarkus.arc.impl.EventImpl$Notifier v0;
java.lang.Object v1, v9;
io.quarkus.arc.impl.EventContextImpl v4;
jakarta.enterprise.inject.spi.EventMetadata v5;
boolean v10, v8;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler;
v3 := @parameter2: java.util.function.Predicate;
v4 = new io.quarkus.arc.impl.EventContextImpl;
v5 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: jakarta.enterprise.inject.spi.EventMetadata eventMetadata>;
specialinvoke v4.<io.quarkus.arc.impl.EventContextImpl: void <init>(java.lang.Object,jakarta.enterprise.inject.spi.EventMetadata)>(v1, v5);
v6 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: java.util.List observerMethods>;
v7 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label5;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v3.<java.util.function.Predicate: boolean test(java.lang.Object)>(v9);
if v10 == 0 goto label1;
label2:
interfaceinvoke v9.<jakarta.enterprise.inject.spi.ObserverMethod: void notify(jakarta.enterprise.inject.spi.EventContext)>(v4);
label3:
goto label1;
label4:
v11 := @caughtexception;
interfaceinvoke v2.<io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler: void handle(java.lang.Throwable,jakarta.enterprise.inject.spi.ObserverMethod,jakarta.enterprise.inject.spi.EventContext)>(v11, v9, v4);
goto label1;
label5:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
boolean isEmpty()
{
io.quarkus.arc.impl.EventImpl$Notifier v0;
java.util.List v1;
boolean v2;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 = v0.<io.quarkus.arc.impl.EventImpl$Notifier: java.util.List observerMethods>;
v2 = interfaceinvoke v1.<java.util.List: boolean isEmpty()>();
return v2;
}
public boolean isTxObserver(jakarta.enterprise.inject.spi.ObserverMethod)
{
io.quarkus.arc.impl.EventImpl$Notifier v0;
jakarta.enterprise.inject.spi.ObserverMethod v1;
jakarta.enterprise.event.TransactionPhase v2, v3;
boolean v4, v5;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: jakarta.enterprise.inject.spi.ObserverMethod;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.ObserverMethod: jakarta.enterprise.event.TransactionPhase getTransactionPhase()>();
v3 = <jakarta.enterprise.event.TransactionPhase: jakarta.enterprise.event.TransactionPhase IN_PROGRESS>;
v4 = virtualinvoke v2.<jakarta.enterprise.event.TransactionPhase: boolean equals(java.lang.Object)>(v3);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public boolean isNotAfterSuccess(jakarta.enterprise.inject.spi.ObserverMethod)
{
io.quarkus.arc.impl.EventImpl$Notifier v0;
jakarta.enterprise.inject.spi.ObserverMethod v1;
jakarta.enterprise.event.TransactionPhase v2, v3;
boolean v4, v5;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: jakarta.enterprise.inject.spi.ObserverMethod;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.ObserverMethod: jakarta.enterprise.event.TransactionPhase getTransactionPhase()>();
v3 = <jakarta.enterprise.event.TransactionPhase: jakarta.enterprise.event.TransactionPhase AFTER_SUCCESS>;
v4 = virtualinvoke v2.<jakarta.enterprise.event.TransactionPhase: boolean equals(java.lang.Object)>(v3);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public boolean isNotTxObserver(jakarta.enterprise.inject.spi.ObserverMethod)
{
io.quarkus.arc.impl.EventImpl$Notifier v0;
jakarta.enterprise.inject.spi.ObserverMethod v1;
boolean v2, v3;
v0 := @this: io.quarkus.arc.impl.EventImpl$Notifier;
v1 := @parameter0: jakarta.enterprise.inject.spi.ObserverMethod;
v2 = specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Notifier: boolean isTxObserver(jakarta.enterprise.inject.spi.ObserverMethod)>(v1);
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
}