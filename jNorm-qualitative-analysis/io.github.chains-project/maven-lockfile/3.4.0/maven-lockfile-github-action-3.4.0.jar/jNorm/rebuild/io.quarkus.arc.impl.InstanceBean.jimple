public class io.quarkus.arc.impl.InstanceBean extends io.quarkus.arc.impl.BuiltInBean
{
public static final java.util.Set INSTANCE_TYPES;
static final io.quarkus.arc.impl.InstanceBean INSTANCE;
public void <init>()
{
io.quarkus.arc.impl.InstanceBean v0;
v0 := @this: io.quarkus.arc.impl.InstanceBean;
specialinvoke v0.<io.quarkus.arc.impl.BuiltInBean: void <init>()>();
return;
}
public java.util.Set getTypes()
{
java.util.Set v1;
io.quarkus.arc.impl.InstanceBean v0;
v0 := @this: io.quarkus.arc.impl.InstanceBean;
v1 = <io.quarkus.arc.impl.InstanceBean: java.util.Set INSTANCE_TYPES>;
return v1;
}
public java.lang.Class getBeanClass()
{
io.quarkus.arc.impl.InstanceBean v0;
v0 := @this: io.quarkus.arc.impl.InstanceBean;
return class "Lio/quarkus/arc/impl/InstanceImpl;";
}
public jakarta.enterprise.inject.Instance get(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.inject.spi.InjectionPoint v2;
java.lang.reflect.Member v8;
java.util.Set v6, v7;
jakarta.enterprise.context.spi.CreationalContext v1;
jakarta.enterprise.inject.spi.Bean v10, v4;
io.quarkus.arc.impl.InstanceImpl v3;
java.lang.reflect.Type v5;
io.quarkus.arc.impl.InstanceBean v0;
boolean v9;
v0 := @this: io.quarkus.arc.impl.InstanceBean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint get()>();
v3 = new io.quarkus.arc.impl.InstanceImpl;
v4 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionPoint: jakarta.enterprise.inject.spi.Bean getBean()>();
v5 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionPoint: java.lang.reflect.Type getType()>();
v6 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionPoint: java.util.Set getQualifiers()>();
v7 = <java.util.Collections: java.util.Set EMPTY_SET>;
v8 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionPoint: java.lang.reflect.Member getMember()>();
v9 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionPoint: boolean isTransient()>();
specialinvoke v3.<io.quarkus.arc.impl.InstanceImpl: void <init>(io.quarkus.arc.InjectableBean,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.impl.CreationalContextImpl,java.util.Set,java.lang.reflect.Member,int,boolean)>(v4, v5, v6, v1, v7, v8, 0, v9);
v10 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionPoint: jakarta.enterprise.inject.spi.Bean getBean()>();
staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: void addDependencyToParent(io.quarkus.arc.InjectableBean,java.lang.Object,jakarta.enterprise.context.spi.CreationalContext)>(v10, v3, v1);
return v3;
}
static void <clinit>()
{
java.util.Set v0;
io.quarkus.arc.impl.InstanceBean v1;
v0 = staticinvoke <java.util.Set: java.util.Set of(java.lang.Object,java.lang.Object)>(class "Ljakarta/enterprise/inject/Instance;", class "Ljava/lang/Object;");
<io.quarkus.arc.impl.InstanceBean: java.util.Set INSTANCE_TYPES> = v0;
v1 = new io.quarkus.arc.impl.InstanceBean;
specialinvoke v1.<io.quarkus.arc.impl.InstanceBean: void <init>()>();
<io.quarkus.arc.impl.InstanceBean: io.quarkus.arc.impl.InstanceBean INSTANCE> = v1;
return;
}
}