class io.quarkus.arc.impl.Instances$3 extends java.lang.Object implements java.util.function.Supplier
{
final java.util.function.Supplier val$injectionPointSupplier;
final io.quarkus.arc.InjectableBean val$bean;
final io.quarkus.arc.impl.CreationalContextImpl val$ctx;
void <init>(java.util.function.Supplier, io.quarkus.arc.InjectableBean, io.quarkus.arc.impl.CreationalContextImpl)
{
io.quarkus.arc.impl.Instances$3 v0;
io.quarkus.arc.InjectableBean v2;
io.quarkus.arc.impl.CreationalContextImpl v3;
java.util.function.Supplier v1;
v0 := @this: io.quarkus.arc.impl.Instances$3;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: io.quarkus.arc.InjectableBean;
v3 := @parameter2: io.quarkus.arc.impl.CreationalContextImpl;
v0.<io.quarkus.arc.impl.Instances$3: java.util.function.Supplier val$injectionPointSupplier> = v1;
v0.<io.quarkus.arc.impl.Instances$3: io.quarkus.arc.InjectableBean val$bean> = v2;
v0.<io.quarkus.arc.impl.Instances$3: io.quarkus.arc.impl.CreationalContextImpl val$ctx> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object get()
{
io.quarkus.arc.impl.Instances$3 v0;
java.lang.Throwable v7;
jakarta.enterprise.inject.spi.InjectionPoint v3;
io.quarkus.arc.InjectableBean v4;
java.util.function.Supplier v1;
io.quarkus.arc.impl.CreationalContextImpl v5;
java.lang.Object v2, v6;
v0 := @this: io.quarkus.arc.impl.Instances$3;
v1 = v0.<io.quarkus.arc.impl.Instances$3: java.util.function.Supplier val$injectionPointSupplier>;
v2 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
v3 = staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v2);
label1:
v4 = v0.<io.quarkus.arc.impl.Instances$3: io.quarkus.arc.InjectableBean val$bean>;
v5 = v0.<io.quarkus.arc.impl.Instances$3: io.quarkus.arc.impl.CreationalContextImpl val$ctx>;
v6 = interfaceinvoke v4.<io.quarkus.arc.InjectableBean: java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)>(v5);
label2:
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v3);
return v6;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v3);
throw v7;
catch java.lang.Throwable from label1 to label2 with label3;
}
}