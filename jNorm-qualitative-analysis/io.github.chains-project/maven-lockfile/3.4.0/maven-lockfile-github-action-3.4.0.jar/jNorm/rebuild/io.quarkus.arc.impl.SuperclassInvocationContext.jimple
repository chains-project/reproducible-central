class io.quarkus.arc.impl.SuperclassInvocationContext extends io.quarkus.arc.impl.InnerInvocationContext
{
private final java.lang.Object interceptorInstance;
private final java.util.List methods;
static java.lang.Object perform(jakarta.interceptor.InvocationContext, java.util.List, java.lang.Object, java.lang.Object[]) throws java.lang.Exception
{
java.util.List v1;
java.lang.Object[] v3;
jakarta.interceptor.InvocationContext v0;
java.lang.Object v2, v4, v6;
io.quarkus.arc.impl.SuperclassInvocationContext v5;
v0 := @parameter0: jakarta.interceptor.InvocationContext;
v1 := @parameter1: java.util.List;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: java.lang.Object[];
v4 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(0);
v5 = new io.quarkus.arc.impl.SuperclassInvocationContext;
specialinvoke v5.<io.quarkus.arc.impl.SuperclassInvocationContext: void <init>(jakarta.interceptor.InvocationContext,java.util.List,java.lang.Object,java.lang.Object[])>(v0, v1, v2, v3);
v6 = interfaceinvoke v4.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v2, v5);
return v6;
}
void <init>(jakarta.interceptor.InvocationContext, java.util.List, java.lang.Object, java.lang.Object[])
{
java.util.List v2;
java.lang.Object[] v4;
jakarta.interceptor.InvocationContext v1;
java.lang.Object v3;
io.quarkus.arc.impl.SuperclassInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.SuperclassInvocationContext;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object[];
specialinvoke v0.<io.quarkus.arc.impl.InnerInvocationContext: void <init>(jakarta.interceptor.InvocationContext,java.lang.Object[])>(v1, v4);
v0.<io.quarkus.arc.impl.SuperclassInvocationContext: java.util.List methods> = v2;
v0.<io.quarkus.arc.impl.SuperclassInvocationContext: java.lang.Object interceptorInstance> = v3;
return;
}
protected java.lang.Object proceed(int) throws java.lang.Exception
{
java.lang.Throwable v14;
java.lang.Object[] v9;
int v1, v3, v8;
boolean v15, v16;
io.quarkus.arc.impl.InnerInvocationContext$NextInnerInvocationContext v7;
java.lang.RuntimeException v17;
java.lang.reflect.InvocationTargetException v13;
java.util.List v2, v4;
io.quarkus.arc.ArcInvocationContext v11;
java.lang.Object v10, v12, v5, v6;
io.quarkus.arc.impl.SuperclassInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.SuperclassInvocationContext;
v1 := @parameter0: int;
label1:
v2 = v0.<io.quarkus.arc.impl.SuperclassInvocationContext: java.util.List methods>;
v3 = interfaceinvoke v2.<java.util.List: int size()>();
if v1 >= v3 goto label3;
v4 = v0.<io.quarkus.arc.impl.SuperclassInvocationContext: java.util.List methods>;
v5 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(v1);
v6 = v0.<io.quarkus.arc.impl.SuperclassInvocationContext: java.lang.Object interceptorInstance>;
v7 = new io.quarkus.arc.impl.InnerInvocationContext$NextInnerInvocationContext;
v8 = v1 + 1;
v9 = v0.<io.quarkus.arc.impl.SuperclassInvocationContext: java.lang.Object[] parameters>;
specialinvoke v7.<io.quarkus.arc.impl.InnerInvocationContext$NextInnerInvocationContext: void <init>(io.quarkus.arc.impl.InnerInvocationContext,int,java.lang.Object[])>(v0, v8, v9);
v10 = interfaceinvoke v5.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v6, v7);
label2:
return v10;
label3:
v11 = v0.<io.quarkus.arc.impl.SuperclassInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v12 = interfaceinvoke v11.<io.quarkus.arc.ArcInvocationContext: java.lang.Object proceed()>();
label4:
return v12;
label5:
v13 := @caughtexception;
v14 = virtualinvoke v13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
v15 = v14 instanceof java.lang.Error;
if v15 == 0 goto label6;
throw v14;
label6:
v16 = v14 instanceof java.lang.Exception;
if v16 == 0 goto label7;
throw v14;
label7:
v17 = new java.lang.RuntimeException;
specialinvoke v17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v14);
throw v17;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
}
}