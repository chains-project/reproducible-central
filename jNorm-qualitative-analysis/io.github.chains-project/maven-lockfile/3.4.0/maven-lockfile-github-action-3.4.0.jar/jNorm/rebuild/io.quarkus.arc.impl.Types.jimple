final class io.quarkus.arc.impl.Types extends java.lang.Object
{
private void <init>()
{
io.quarkus.arc.impl.Types v0;
v0 := @this: io.quarkus.arc.impl.Types;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.lang.reflect.Type boxedType(java.lang.reflect.Type)
{
java.lang.Class v2;
java.lang.reflect.Type v0;
boolean v1;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 == 0 goto label1;
v2 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class boxedClass(java.lang.Class)>(v0);
return v2;
label1:
return v0;
}
static java.lang.Class boxedClass(java.lang.Class)
{
boolean v1, v11, v13, v15, v17, v19, v3, v5, v7, v9;
java.lang.IllegalArgumentException v20;
java.lang.Class v0, v10, v12, v14, v16, v18, v2, v4, v6, v8;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isPrimitive()>();
if v1 != 0 goto label01;
return v0;
label01:
v2 = <java.lang.Boolean: java.lang.Class TYPE>;
v3 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v3 == 0 goto label02;
return class "Ljava/lang/Boolean;";
label02:
v4 = <java.lang.Character: java.lang.Class TYPE>;
v5 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label03;
return class "Ljava/lang/Character;";
label03:
v6 = <java.lang.Byte: java.lang.Class TYPE>;
v7 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v6);
if v7 == 0 goto label04;
return class "Ljava/lang/Byte;";
label04:
v8 = <java.lang.Short: java.lang.Class TYPE>;
v9 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label05;
return class "Ljava/lang/Short;";
label05:
v10 = <java.lang.Integer: java.lang.Class TYPE>;
v11 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label06;
return class "Ljava/lang/Integer;";
label06:
v12 = <java.lang.Long: java.lang.Class TYPE>;
v13 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v12);
if v13 == 0 goto label07;
return class "Ljava/lang/Long;";
label07:
v14 = <java.lang.Float: java.lang.Class TYPE>;
v15 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v14);
if v15 == 0 goto label08;
return class "Ljava/lang/Float;";
label08:
v16 = <java.lang.Double: java.lang.Class TYPE>;
v17 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v16);
if v17 == 0 goto label09;
return class "Ljava/lang/Double;";
label09:
v18 = <java.lang.Void: java.lang.Class TYPE>;
v19 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v18);
if v19 == 0 goto label10;
return class "Ljava/lang/Void;";
label10:
v20 = new java.lang.IllegalArgumentException;
specialinvoke v20.<java.lang.IllegalArgumentException: void <init>()>();
throw v20;
}
static boolean isActualType(java.lang.reflect.Type)
{
java.lang.reflect.Type v0;
boolean v1, v2, v3, v4;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 != 0 goto label1;
v2 = v0 instanceof java.lang.reflect.ParameterizedType;
if v2 != 0 goto label1;
v3 = v0 instanceof java.lang.reflect.GenericArrayType;
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
static boolean isArray(java.lang.reflect.Type)
{
java.lang.reflect.Type v0;
boolean v1, v2, v3, v4;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.reflect.GenericArrayType;
if v1 != 0 goto label1;
v2 = v0 instanceof java.lang.Class;
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<java.lang.Class: boolean isArray()>();
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
{
java.lang.IllegalArgumentException v8;
java.lang.reflect.Type v0, v4;
java.lang.Class v2, v7;
java.lang.Object v3;
java.lang.String v9;
boolean v1, v5, v6;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.reflect.GenericArrayType;
if v1 == 0 goto label1;
v2 = class "Ljava/lang/reflect/GenericArrayType;";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v0);
v4 = interfaceinvoke v3.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
return v4;
label1:
v5 = v0 instanceof java.lang.Class;
if v5 == 0 goto label2;
v6 = virtualinvoke v0.<java.lang.Class: boolean isArray()>();
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<java.lang.Class: java.lang.Class getComponentType()>();
return v7;
label2:
v8 = new java.lang.IllegalArgumentException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Type)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Not an array type \u0001");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v8;
}
static boolean isArrayOfUnboundedTypeVariablesOrObjects(java.lang.reflect.Type[])
{
java.lang.reflect.Type v11, v3;
int v1, v2, v8, v9;
java.lang.reflect.Type[] v0, v7;
java.lang.Class v10, v4;
boolean v12, v5, v6;
v0 := @parameter0: java.lang.reflect.Type[];
v1 = lengthof v0;
v2 = 0;
label1:
if v2 >= v1 goto label4;
v3 = v0[v2];
v4 = class "Ljava/lang/Object;";
v5 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
if v5 != 0 goto label3;
v6 = v3 instanceof java.lang.reflect.TypeVariable;
if v6 == 0 goto label2;
v7 = interfaceinvoke v3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
if v7 == null goto label3;
v8 = lengthof v7;
if v8 == 0 goto label3;
v9 = lengthof v7;
if v9 != 1 goto label2;
v10 = class "Ljava/lang/Object;";
v11 = v7[0];
v12 = virtualinvoke v10.<java.lang.Object: boolean equals(java.lang.Object)>(v11);
if v12 != 0 goto label3;
label2:
return 0;
label3:
v2 = v2 + 1;
goto label1;
label4:
return 1;
}
static java.lang.Class getRawType(java.lang.reflect.Type)
{
boolean v1, v10, v13, v2, v5, v7;
java.lang.reflect.ParameterizedType v3;
java.lang.reflect.Type v0, v14, v4, v6;
java.lang.reflect.Type[] v11, v8;
java.lang.Class v12, v15, v17, v9;
java.lang.Object v16;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 == 0 goto label1;
return v0;
label1:
v2 = staticinvoke <io.quarkus.arc.impl.TypeCachePollutionUtils: boolean isParameterizedType(java.lang.Object)>(v0);
if v2 == 0 goto label2;
v3 = staticinvoke <io.quarkus.arc.impl.TypeCachePollutionUtils: java.lang.reflect.ParameterizedType asParameterizedType(java.lang.Object)>(v0);
v4 = interfaceinvoke v3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v5 = v4 instanceof java.lang.Class;
if v5 == 0 goto label2;
v6 = interfaceinvoke v3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
return v6;
label2:
v7 = v0 instanceof java.lang.reflect.TypeVariable;
if v7 == 0 goto label3;
v8 = interfaceinvoke v0.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
v9 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class getBound(java.lang.reflect.Type[])>(v8);
return v9;
label3:
v10 = v0 instanceof java.lang.reflect.WildcardType;
if v10 == 0 goto label4;
v11 = interfaceinvoke v0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
v12 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class getBound(java.lang.reflect.Type[])>(v11);
return v12;
label4:
v13 = v0 instanceof java.lang.reflect.GenericArrayType;
if v13 == 0 goto label5;
v14 = interfaceinvoke v0.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
v15 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class getRawType(java.lang.reflect.Type)>(v14);
if v15 == null goto label5;
v16 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v15, 0);
v17 = virtualinvoke v16.<java.lang.Object: java.lang.Class getClass()>();
return v17;
label5:
return null;
}
static java.lang.reflect.Type getCanonicalType(java.lang.Class)
{
io.quarkus.arc.impl.GenericArrayTypeImpl v4;
java.lang.reflect.Type v3;
java.lang.reflect.TypeVariable[] v5, v7;
int v6;
java.lang.Class v0, v2, v9;
boolean v1;
io.quarkus.arc.impl.ParameterizedTypeImpl v8;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isArray()>();
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<java.lang.Class: java.lang.Class getComponentType()>();
v3 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.reflect.Type getCanonicalType(java.lang.Class)>(v2);
if v2 == v3 goto label1;
v4 = new io.quarkus.arc.impl.GenericArrayTypeImpl;
specialinvoke v4.<io.quarkus.arc.impl.GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>(v3);
return v4;
label1:
v5 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v6 = lengthof v5;
if v6 <= 0 goto label2;
v7 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v8 = new io.quarkus.arc.impl.ParameterizedTypeImpl;
v9 = virtualinvoke v0.<java.lang.Class: java.lang.Class getDeclaringClass()>();
specialinvoke v8.<io.quarkus.arc.impl.ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type[],java.lang.reflect.Type)>(v0, v7, v9);
return v8;
label2:
return v0;
}
public static java.lang.reflect.Type getCanonicalType(java.lang.reflect.Type)
{
java.lang.reflect.Type v0, v2;
boolean v1;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 == 0 goto label1;
v2 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.reflect.Type getCanonicalType(java.lang.Class)>(v0);
return v2;
label1:
return v0;
}
static boolean isRawGenericType(java.lang.reflect.Type)
{
java.lang.reflect.Type v0;
java.lang.reflect.TypeVariable[] v5;
int v6;
java.lang.Class v3;
boolean v1, v2, v4, v7;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 != 0 goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<java.lang.Class: boolean isArray()>();
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<java.lang.Class: java.lang.Class getComponentType()>();
v4 = staticinvoke <io.quarkus.arc.impl.Types: boolean isRawGenericType(java.lang.reflect.Type)>(v3);
return v4;
label2:
v5 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v6 = lengthof v5;
if v6 <= 0 goto label3;
v7 = 1;
goto label4;
label3:
v7 = 0;
label4:
return v7;
}
static boolean containsTypeVariable(java.lang.reflect.Type)
{
java.lang.reflect.ParameterizedType v4;
java.lang.reflect.Type v0, v1, v11, v8;
int v6, v7;
java.lang.reflect.Type[] v5;
boolean v10, v12, v2, v3, v9;
v0 := @parameter0: java.lang.reflect.Type;
v1 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.reflect.Type getCanonicalType(java.lang.reflect.Type)>(v0);
v2 = v1 instanceof java.lang.reflect.TypeVariable;
if v2 == 0 goto label1;
return 1;
label1:
v3 = staticinvoke <io.quarkus.arc.impl.TypeCachePollutionUtils: boolean isParameterizedType(java.lang.Object)>(v1);
if v3 == 0 goto label4;
v4 = staticinvoke <io.quarkus.arc.impl.TypeCachePollutionUtils: java.lang.reflect.ParameterizedType asParameterizedType(java.lang.Object)>(v1);
v5 = interfaceinvoke v4.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v6 = lengthof v5;
v7 = 0;
label2:
if v7 >= v6 goto label4;
v8 = v5[v7];
v9 = staticinvoke <io.quarkus.arc.impl.Types: boolean containsTypeVariable(java.lang.reflect.Type)>(v8);
if v9 == 0 goto label3;
return 1;
label3:
v7 = v7 + 1;
goto label2;
label4:
v10 = v1 instanceof java.lang.reflect.GenericArrayType;
if v10 == 0 goto label5;
v11 = interfaceinvoke v1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
v12 = staticinvoke <io.quarkus.arc.impl.Types: boolean containsTypeVariable(java.lang.reflect.Type)>(v11);
return v12;
label5:
return 0;
}
private static java.lang.Class getBound(java.lang.reflect.Type[])
{
java.lang.reflect.Type v2;
int v1;
java.lang.reflect.Type[] v0;
java.lang.Class v3;
v0 := @parameter0: java.lang.reflect.Type[];
v1 = lengthof v0;
if v1 != 0 goto label1;
return class "Ljava/lang/Object;";
label1:
v2 = v0[0];
v3 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class getRawType(java.lang.reflect.Type)>(v2);
return v3;
}
}