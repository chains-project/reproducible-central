public class io.quarkus.arc.runtime.ArcRecorder extends java.lang.Object
{
private static final org.jboss.logging.Logger LOG;
public static volatile java.util.Map syntheticBeanProviders;
public void <init>()
{
io.quarkus.arc.runtime.ArcRecorder v0;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.quarkus.arc.ArcContainer initContainer(io.quarkus.runtime.ShutdownContext, io.quarkus.runtime.RuntimeValue, boolean) throws java.lang.Exception
{
io.quarkus.arc.ArcInitConfig$Builder v4, v6, v7;
io.quarkus.arc.runtime.ArcRecorder$1 v10;
io.quarkus.runtime.RuntimeValue v2;
io.quarkus.arc.ArcContainer v9;
io.quarkus.arc.runtime.ArcRecorder v0;
java.lang.Object v5;
io.quarkus.runtime.ShutdownContext v1;
boolean v3;
io.quarkus.arc.ArcInitConfig v8;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: io.quarkus.runtime.ShutdownContext;
v2 := @parameter1: io.quarkus.runtime.RuntimeValue;
v3 := @parameter2: boolean;
v4 = staticinvoke <io.quarkus.arc.ArcInitConfig: io.quarkus.arc.ArcInitConfig$Builder builder()>();
if v2 == null goto label1;
v5 = virtualinvoke v2.<io.quarkus.runtime.RuntimeValue: java.lang.Object getValue()>();
goto label2;
label1:
v5 = null;
label2:
v6 = virtualinvoke v4.<io.quarkus.arc.ArcInitConfig$Builder: io.quarkus.arc.ArcInitConfig$Builder setCurrentContextFactory(io.quarkus.arc.CurrentContextFactory)>(v5);
v7 = virtualinvoke v6.<io.quarkus.arc.ArcInitConfig$Builder: io.quarkus.arc.ArcInitConfig$Builder setStrictCompatibility(boolean)>(v3);
v8 = virtualinvoke v7.<io.quarkus.arc.ArcInitConfig$Builder: io.quarkus.arc.ArcInitConfig build()>();
v9 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer initialize(io.quarkus.arc.ArcInitConfig)>(v8);
v10 = new io.quarkus.arc.runtime.ArcRecorder$1;
specialinvoke v10.<io.quarkus.arc.runtime.ArcRecorder$1: void <init>(io.quarkus.arc.runtime.ArcRecorder)>(v0);
interfaceinvoke v1.<io.quarkus.runtime.ShutdownContext: void addShutdownTask(java.lang.Runnable)>(v10);
return v9;
}
public void initExecutor(java.util.concurrent.ExecutorService)
{
io.quarkus.arc.runtime.ArcRecorder v0;
java.util.concurrent.ExecutorService v1;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: java.util.concurrent.ExecutorService;
staticinvoke <io.quarkus.arc.Arc: void setExecutor(java.util.concurrent.ExecutorService)>(v1);
return;
}
public void initStaticSupplierBeans(java.util.Map)
{
java.util.concurrent.ConcurrentHashMap v2;
io.quarkus.arc.runtime.ArcRecorder v0;
java.util.Map v1;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: java.util.Map;
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>(java.util.Map)>(v1);
<io.quarkus.arc.runtime.ArcRecorder: java.util.Map syntheticBeanProviders> = v2;
return;
}
public void initRuntimeSupplierBeans(java.util.Map)
{
io.quarkus.arc.runtime.ArcRecorder v0;
java.util.Map v1, v2;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: java.util.Map;
v2 = <io.quarkus.arc.runtime.ArcRecorder: java.util.Map syntheticBeanProviders>;
interfaceinvoke v2.<java.util.Map: void putAll(java.util.Map)>(v1);
return;
}
public io.quarkus.arc.runtime.BeanContainer initBeanContainer(io.quarkus.arc.ArcContainer, java.util.List) throws java.lang.Exception
{
java.util.Iterator v5;
org.jboss.logging.Logger v9;
long v12, v13, v8;
io.quarkus.arc.runtime.BeanContainerImpl v4;
java.lang.IllegalArgumentException v3;
java.util.List v2;
java.lang.Long v14;
io.quarkus.arc.ArcContainer v1;
io.quarkus.arc.runtime.ArcRecorder v0;
java.lang.Class v10;
java.lang.Object v7;
java.lang.String v11;
boolean v6;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: io.quarkus.arc.ArcContainer;
v2 := @parameter1: java.util.List;
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Arc container was null");
throw v3;
label1:
v4 = new io.quarkus.arc.runtime.BeanContainerImpl;
specialinvoke v4.<io.quarkus.arc.runtime.BeanContainerImpl: void <init>(io.quarkus.arc.ArcContainer)>(v1);
v5 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label2:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = staticinvoke <java.lang.System: long currentTimeMillis()>();
interfaceinvoke v7.<io.quarkus.arc.runtime.BeanContainerListener: void created(io.quarkus.arc.runtime.BeanContainer)>(v4);
v9 = <io.quarkus.arc.runtime.ArcRecorder: org.jboss.logging.Logger LOG>;
v10 = virtualinvoke v7.<java.lang.Object: java.lang.Class getClass()>();
v11 = virtualinvoke v10.<java.lang.Class: java.lang.String getName()>();
v12 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v13 = v12 - v8;
v14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v13);
virtualinvoke v9.<org.jboss.logging.Logger: void debugf(java.lang.String,java.lang.Object,java.lang.Object)>("Bean container listener %s finished in %s ms", v11, v14);
goto label2;
label3:
return v4;
}
public void handleLifecycleEvents(io.quarkus.runtime.ShutdownContext, io.quarkus.runtime.LaunchMode, boolean)
{
io.quarkus.runtime.LaunchMode v2, v5;
java.lang.'annotation'.Annotation[] v6;
io.quarkus.arc.impl.ArcContainerImpl v4;
java.util.ArrayList v9;
io.quarkus.arc.runtime.ArcRecorder v0;
java.lang.String v18;
io.quarkus.runtime.ShutdownContext v1;
boolean v13, v19, v3;
java.util.Iterator v12;
io.quarkus.arc.runtime.ArcRecorder$2 v22;
io.quarkus.arc.InjectableBean$Kind v15, v16;
java.util.List v10, v11;
java.lang.Class v17, v20;
java.lang.Object v14, v8;
io.quarkus.runtime.StartupEvent v21;
io.quarkus.arc.InjectableInstance v7;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: io.quarkus.runtime.ShutdownContext;
v2 := @parameter1: io.quarkus.runtime.LaunchMode;
v3 := @parameter2: boolean;
v4 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v5 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode TEST>;
if v2 != v5 goto label2;
if v3 == 0 goto label2;
v6 = newarray (java.lang.'annotation'.Annotation)[0];
v7 = virtualinvoke v4.<io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.InjectableInstance select(java.lang.Class,java.lang.'annotation'.Annotation[])>(class "Lio/quarkus/runtime/test/TestApplicationClassPredicate;", v6);
v8 = interfaceinvoke v7.<io.quarkus.arc.InjectableInstance: java.lang.Object get()>();
v9 = new java.util.ArrayList;
specialinvoke v9.<java.util.ArrayList: void <init>()>();
v10 = v9;
v11 = virtualinvoke v4.<io.quarkus.arc.impl.ArcContainerImpl: java.util.List getBeans()>();
v12 = interfaceinvoke v11.<java.util.List: java.util.Iterator iterator()>();
label1:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label3;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = interfaceinvoke v14.<io.quarkus.arc.InjectableBean: io.quarkus.arc.InjectableBean$Kind getKind()>();
v16 = <io.quarkus.arc.InjectableBean$Kind: io.quarkus.arc.InjectableBean$Kind CLASS>;
if v15 != v16 goto label1;
v17 = interfaceinvoke v14.<io.quarkus.arc.InjectableBean: java.lang.Class getBeanClass()>();
v18 = virtualinvoke v17.<java.lang.Class: java.lang.String getName()>();
v19 = interfaceinvoke v8.<java.util.function.Predicate: boolean test(java.lang.Object)>(v18);
if v19 == 0 goto label1;
v20 = interfaceinvoke v14.<io.quarkus.arc.InjectableBean: java.lang.Class getBeanClass()>();
interfaceinvoke v9.<java.util.List: boolean add(java.lang.Object)>(v20);
goto label1;
label2:
v10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
label3:
v21 = new io.quarkus.runtime.StartupEvent;
specialinvoke v21.<io.quarkus.runtime.StartupEvent: void <init>()>();
specialinvoke v0.<io.quarkus.arc.runtime.ArcRecorder: void fireLifecycleEvent(io.quarkus.arc.impl.ArcContainerImpl,java.lang.Object,java.util.List)>(v4, v21, v10);
v22 = new io.quarkus.arc.runtime.ArcRecorder$2;
specialinvoke v22.<io.quarkus.arc.runtime.ArcRecorder$2: void <init>(io.quarkus.arc.runtime.ArcRecorder,io.quarkus.arc.impl.ArcContainerImpl,java.util.List)>(v0, v4, v10);
interfaceinvoke v1.<io.quarkus.runtime.ShutdownContext: void addShutdownTask(java.lang.Runnable)>(v22);
return;
}
public java.util.function.Function createFunction(io.quarkus.runtime.RuntimeValue)
{
io.quarkus.arc.runtime.ArcRecorder v0;
io.quarkus.arc.runtime.ArcRecorder$3 v2;
io.quarkus.runtime.RuntimeValue v1;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: io.quarkus.runtime.RuntimeValue;
v2 = new io.quarkus.arc.runtime.ArcRecorder$3;
specialinvoke v2.<io.quarkus.arc.runtime.ArcRecorder$3: void <init>(io.quarkus.arc.runtime.ArcRecorder,io.quarkus.runtime.RuntimeValue)>(v0, v1);
return v2;
}
public java.util.function.Function createFunction(java.util.function.Supplier)
{
io.quarkus.arc.runtime.ArcRecorder v0;
io.quarkus.arc.runtime.ArcRecorder$4 v2;
java.util.function.Supplier v1;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: java.util.function.Supplier;
v2 = new io.quarkus.arc.runtime.ArcRecorder$4;
specialinvoke v2.<io.quarkus.arc.runtime.ArcRecorder$4: void <init>(io.quarkus.arc.runtime.ArcRecorder,java.util.function.Supplier)>(v0, v1);
return v2;
}
public java.util.function.Function createFunction(java.lang.Object)
{
io.quarkus.arc.runtime.ArcRecorder v0;
io.quarkus.arc.runtime.ArcRecorder$5 v2;
java.lang.Object v1;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: java.lang.Object;
v2 = new io.quarkus.arc.runtime.ArcRecorder$5;
specialinvoke v2.<io.quarkus.arc.runtime.ArcRecorder$5: void <init>(io.quarkus.arc.runtime.ArcRecorder,java.lang.Object)>(v0, v1);
return v2;
}
public void initTestApplicationClassPredicate(java.util.Set)
{
io.quarkus.arc.InstanceHandle v4;
io.quarkus.arc.ArcContainer v2;
java.util.Set v1;
io.quarkus.arc.runtime.ArcRecorder v0;
java.lang.Object v5;
java.lang.'annotation'.Annotation[] v3;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: java.util.Set;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = newarray (java.lang.'annotation'.Annotation)[0];
v4 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InstanceHandle instance(java.lang.Class,java.lang.'annotation'.Annotation[])>(class "Lio/quarkus/arc/runtime/test/PreloadedTestApplicationClassPredicate;", v3);
v5 = interfaceinvoke v4.<io.quarkus.arc.InstanceHandle: java.lang.Object get()>();
virtualinvoke v5.<io.quarkus.arc.runtime.test.PreloadedTestApplicationClassPredicate: void setApplicationBeanClasses(java.util.Set)>(v1);
return;
}
private void fireLifecycleEvent(io.quarkus.arc.impl.ArcContainerImpl, java.lang.Object, java.util.List)
{
java.util.Iterator v11, v5;
jakarta.enterprise.event.Event v9;
io.quarkus.arc.impl.ArcContainerImpl v1;
java.util.List v3;
io.quarkus.arc.runtime.ArcRecorder v0;
java.lang.Object v13, v2, v7;
boolean v10, v12, v4, v6;
jakarta.enterprise.inject.spi.BeanManager v8;
v0 := @this: io.quarkus.arc.runtime.ArcRecorder;
v1 := @parameter0: io.quarkus.arc.impl.ArcContainerImpl;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.util.List;
v4 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v4 != 0 goto label2;
v5 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v1.<io.quarkus.arc.impl.ArcContainerImpl: void mockObserversFor(java.lang.Class,boolean)>(v7, 1);
goto label1;
label2:
v8 = virtualinvoke v1.<io.quarkus.arc.impl.ArcContainerImpl: jakarta.enterprise.inject.spi.BeanManager beanManager()>();
v9 = interfaceinvoke v8.<jakarta.enterprise.inject.spi.BeanManager: jakarta.enterprise.event.Event getEvent()>();
interfaceinvoke v9.<jakarta.enterprise.event.Event: void fire(java.lang.Object)>(v2);
v10 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v10 != 0 goto label4;
v11 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label3:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label4;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v1.<io.quarkus.arc.impl.ArcContainerImpl: void mockObserversFor(java.lang.Class,boolean)>(v13, 0);
goto label3;
label4:
return;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/arc/runtime/ArcRecorder;");
<io.quarkus.arc.runtime.ArcRecorder: org.jboss.logging.Logger LOG> = v0;
return;
}
}