public class io.quarkus.arc.runtime.context.ArcContextProvider extends java.lang.Object implements org.eclipse.microprofile.context.spi.ThreadContextProvider
{
private static final org.eclipse.microprofile.context.spi.ThreadContextController NOOP_CONTROLLER;
private static final org.eclipse.microprofile.context.spi.ThreadContextSnapshot NULL_CONTEXT_SNAPSHOT;
private static final org.eclipse.microprofile.context.spi.ThreadContextSnapshot CLEAR_CONTEXT_SNAPSHOT;
public void <init>()
{
io.quarkus.arc.runtime.context.ArcContextProvider v0;
v0 := @this: io.quarkus.arc.runtime.context.ArcContextProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.eclipse.microprofile.context.spi.ThreadContextSnapshot currentContext(java.util.Map)
{
io.quarkus.arc.ManagedContext v3;
io.quarkus.arc.runtime.context.ArcContextProvider v0;
org.eclipse.microprofile.context.spi.ThreadContextSnapshot v5;
java.util.Map v1;
io.quarkus.arc.ArcContainer v2;
io.quarkus.arc.runtime.context.ArcContextProvider$ContextSnapshot v6;
io.quarkus.arc.InjectableContext$ContextState v4;
v0 := @this: io.quarkus.arc.runtime.context.ArcContextProvider;
v1 := @parameter0: java.util.Map;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
if v2 != null goto label1;
return null;
label1:
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.ManagedContext requestContext()>();
v4 = interfaceinvoke v3.<io.quarkus.arc.ManagedContext: io.quarkus.arc.InjectableContext$ContextState getStateIfActive()>();
if v4 != null goto label2;
v5 = <io.quarkus.arc.runtime.context.ArcContextProvider: org.eclipse.microprofile.context.spi.ThreadContextSnapshot NULL_CONTEXT_SNAPSHOT>;
return v5;
label2:
v6 = new io.quarkus.arc.runtime.context.ArcContextProvider$ContextSnapshot;
specialinvoke v6.<io.quarkus.arc.runtime.context.ArcContextProvider$ContextSnapshot: void <init>(io.quarkus.arc.InjectableContext$ContextState)>(v4);
return v6;
}
public org.eclipse.microprofile.context.spi.ThreadContextSnapshot clearedContext(java.util.Map)
{
io.quarkus.arc.runtime.context.ArcContextProvider v0;
org.eclipse.microprofile.context.spi.ThreadContextSnapshot v3;
java.util.Map v1;
io.quarkus.arc.ArcContainer v2;
v0 := @this: io.quarkus.arc.runtime.context.ArcContextProvider;
v1 := @parameter0: java.util.Map;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
if v2 != null goto label1;
return null;
label1:
v3 = <io.quarkus.arc.runtime.context.ArcContextProvider: org.eclipse.microprofile.context.spi.ThreadContextSnapshot CLEAR_CONTEXT_SNAPSHOT>;
return v3;
}
public java.lang.String getThreadContextType()
{
io.quarkus.arc.runtime.context.ArcContextProvider v0;
v0 := @this: io.quarkus.arc.runtime.context.ArcContextProvider;
return "CDI";
}
static void <clinit>()
{
io.quarkus.arc.runtime.context.ArcContextProvider$ClearContextSnapshot v2;
io.quarkus.arc.runtime.context.ArcContextProvider$1 v0;
io.quarkus.arc.runtime.context.ArcContextProvider$NullContextSnapshot v1;
v0 = new io.quarkus.arc.runtime.context.ArcContextProvider$1;
specialinvoke v0.<io.quarkus.arc.runtime.context.ArcContextProvider$1: void <init>()>();
<io.quarkus.arc.runtime.context.ArcContextProvider: org.eclipse.microprofile.context.spi.ThreadContextController NOOP_CONTROLLER> = v0;
v1 = new io.quarkus.arc.runtime.context.ArcContextProvider$NullContextSnapshot;
specialinvoke v1.<io.quarkus.arc.runtime.context.ArcContextProvider$NullContextSnapshot: void <init>()>();
<io.quarkus.arc.runtime.context.ArcContextProvider: org.eclipse.microprofile.context.spi.ThreadContextSnapshot NULL_CONTEXT_SNAPSHOT> = v1;
v2 = new io.quarkus.arc.runtime.context.ArcContextProvider$ClearContextSnapshot;
specialinvoke v2.<io.quarkus.arc.runtime.context.ArcContextProvider$ClearContextSnapshot: void <init>()>();
<io.quarkus.arc.runtime.context.ArcContextProvider: org.eclipse.microprofile.context.spi.ThreadContextSnapshot CLEAR_CONTEXT_SNAPSHOT> = v2;
return;
}
}