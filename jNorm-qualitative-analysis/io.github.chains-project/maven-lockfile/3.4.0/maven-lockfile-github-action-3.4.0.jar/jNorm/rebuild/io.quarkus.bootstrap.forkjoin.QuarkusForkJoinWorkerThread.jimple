public class io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread extends java.util.concurrent.ForkJoinWorkerThread
{
private static volatile java.lang.ClassLoader qClassloader;
protected void <init>(java.util.concurrent.ForkJoinPool)
{
java.util.concurrent.ForkJoinPool v1;
io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread v0;
v0 := @this: io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread;
v1 := @parameter0: java.util.concurrent.ForkJoinPool;
specialinvoke v0.<java.util.concurrent.ForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool)>(v1);
return;
}
public static synchronized void setQuarkusAppClassloader(io.quarkus.bootstrap.runner.RunnerClassLoader)
{
io.quarkus.bootstrap.runner.RunnerClassLoader v0;
v0 := @parameter0: io.quarkus.bootstrap.runner.RunnerClassLoader;
<io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread: java.lang.ClassLoader qClassloader> = v0;
return;
}
protected void onStart()
{
java.lang.ClassLoader v1, v2;
io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread v0;
v0 := @this: io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread;
specialinvoke v0.<java.util.concurrent.ForkJoinWorkerThread: void onStart()>();
v1 = <io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread: java.lang.ClassLoader qClassloader>;
if v1 == null goto label1;
v2 = <io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread: java.lang.ClassLoader qClassloader>;
specialinvoke v0.<java.util.concurrent.ForkJoinWorkerThread: void setContextClassLoader(java.lang.ClassLoader)>(v2);
label1:
return;
}
}