public final class io.quarkus.bootstrap.logging.InitialConfigurator extends java.lang.Object implements org.jboss.logmanager.EmbeddedConfigurator
{
public static final io.quarkus.bootstrap.logging.QuarkusDelayedHandler DELAYED_HANDLER;
private static final java.util.logging.Level MIN_LEVEL;
private static final java.lang.String SYS_PROP_NAME;
public void <init>()
{
io.quarkus.bootstrap.logging.InitialConfigurator v0;
v0 := @this: io.quarkus.bootstrap.logging.InitialConfigurator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.logging.Level getMinimumLevelOf(java.lang.String)
{
java.lang.String v1;
io.quarkus.bootstrap.logging.InitialConfigurator v0;
java.util.logging.Level v2;
v0 := @this: io.quarkus.bootstrap.logging.InitialConfigurator;
v1 := @parameter0: java.lang.String;
v2 = <io.quarkus.bootstrap.logging.InitialConfigurator: java.util.logging.Level MIN_LEVEL>;
return v2;
}
public java.util.logging.Level getLevelOf(java.lang.String)
{
java.lang.String v1;
io.quarkus.bootstrap.logging.InitialConfigurator v0;
boolean v2;
java.util.logging.Level v3;
v0 := @this: io.quarkus.bootstrap.logging.InitialConfigurator;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label1;
v3 = <java.util.logging.Level: java.util.logging.Level ALL>;
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public java.util.logging.Handler[] getHandlersOf(java.lang.String)
{
org.jboss.logmanager.handlers.ConsoleHandler v5;
io.quarkus.bootstrap.logging.QuarkusDelayedHandler v7;
java.util.logging.Handler[] v4, v6, v8;
java.lang.String v1;
io.quarkus.bootstrap.logging.InitialConfigurator v0;
boolean v2, v3;
v0 := @this: io.quarkus.bootstrap.logging.InitialConfigurator;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label2;
v3 = staticinvoke <io.quarkus.bootstrap.graal.ImageInfo: boolean inImageBuildtimeCode()>();
if v3 == 0 goto label1;
v4 = newarray (java.util.logging.Handler)[1];
v5 = staticinvoke <io.quarkus.bootstrap.logging.InitialConfigurator: org.jboss.logmanager.handlers.ConsoleHandler createDefaultHandler()>();
v4[0] = v5;
return v4;
label1:
v6 = newarray (java.util.logging.Handler)[1];
v7 = <io.quarkus.bootstrap.logging.InitialConfigurator: io.quarkus.bootstrap.logging.QuarkusDelayedHandler DELAYED_HANDLER>;
v6[0] = v7;
return v6;
label2:
v8 = <org.jboss.logmanager.EmbeddedConfigurator: java.util.logging.Handler[] NO_HANDLERS>;
return v8;
}
public static org.jboss.logmanager.handlers.ConsoleHandler createDefaultHandler()
{
org.jboss.logmanager.handlers.ConsoleHandler v0;
org.jboss.logmanager.formatters.PatternFormatter v1;
java.util.logging.Level v2;
v0 = new org.jboss.logmanager.handlers.ConsoleHandler;
v1 = new org.jboss.logmanager.formatters.PatternFormatter;
specialinvoke v1.<org.jboss.logmanager.formatters.PatternFormatter: void <init>(java.lang.String)>("%d{HH:mm:ss,SSS} %-5p [%c{3.}] %s%e%n");
specialinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void <init>(java.util.logging.Formatter)>(v1);
v2 = <java.util.logging.Level: java.util.logging.Level INFO>;
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setLevel(java.util.logging.Level)>(v2);
return v0;
}
static void <clinit>()
{
io.quarkus.bootstrap.logging.QuarkusDelayedHandler v0;
java.lang.Object[] v5;
java.lang.String v2, v6;
java.lang.IllegalArgumentException v3, v4;
java.util.logging.Level v1;
v0 = new io.quarkus.bootstrap.logging.QuarkusDelayedHandler;
specialinvoke v0.<io.quarkus.bootstrap.logging.QuarkusDelayedHandler: void <init>()>();
<io.quarkus.bootstrap.logging.InitialConfigurator: io.quarkus.bootstrap.logging.QuarkusDelayedHandler DELAYED_HANDLER> = v0;
v1 = <java.util.logging.Level: java.util.logging.Level ALL>;
v2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("logging.initial-configurator.min-level");
if v2 == null goto label4;
label1:
v1 = staticinvoke <java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalArgumentException;
v5 = newarray (java.lang.Object)[2];
v5[0] = v2;
v5[1] = "logging.initial-configurator.min-level";
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to convert %s (obtained from the %s system property) into a known logging level.", v5);
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v4;
label4:
<io.quarkus.bootstrap.logging.InitialConfigurator: java.util.logging.Level MIN_LEVEL> = v1;
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
}