public class io.quarkus.dev.ErrorPageGenerators extends java.lang.Object
{
private static final java.util.Map generators;
public void <init>()
{
io.quarkus.dev.ErrorPageGenerators v0;
v0 := @this: io.quarkus.dev.ErrorPageGenerators;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void register(java.lang.String, java.util.function.Function)
{
java.lang.IllegalStateException v4;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v0, v5;
java.util.function.Function v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.function.Function;
v2 = <io.quarkus.dev.ErrorPageGenerators: java.util.Map generators>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v0, v1);
if v3 == null goto label1;
v4 = new java.lang.IllegalStateException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Template builder already specified for: \u0001");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
return;
}
public static java.util.function.Function get(java.lang.String)
{
java.lang.Object v2;
java.lang.String v0;
java.util.Map v1;
v0 := @parameter0: java.lang.String;
v1 = <io.quarkus.dev.ErrorPageGenerators: java.util.Map generators>;
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
return v2;
}
public static void clear()
{
java.util.Map v0;
v0 = <io.quarkus.dev.ErrorPageGenerators: java.util.Map generators>;
interfaceinvoke v0.<java.util.Map: void clear()>();
return;
}
static void <clinit>()
{
java.util.concurrent.ConcurrentHashMap v0;
v0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
<io.quarkus.dev.ErrorPageGenerators: java.util.Map generators> = v0;
return;
}
}