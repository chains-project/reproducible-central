public class io.quarkus.dev.testing.TracingHandler extends java.lang.Object
{
private static volatile io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler;
public void <init>()
{
io.quarkus.dev.testing.TracingHandler v0;
v0 := @this: io.quarkus.dev.testing.TracingHandler;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void trace(java.lang.String)
{
io.quarkus.dev.testing.TracingHandler$TraceListener v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = <io.quarkus.dev.testing.TracingHandler: io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler>;
if v1 == null goto label1;
interfaceinvoke v1.<io.quarkus.dev.testing.TracingHandler$TraceListener: void touched(java.lang.String)>(v0);
label1:
return;
}
public static void quarkusStarting()
{
io.quarkus.dev.testing.TracingHandler$TraceListener v0;
v0 = <io.quarkus.dev.testing.TracingHandler: io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler>;
if v0 == null goto label1;
interfaceinvoke v0.<io.quarkus.dev.testing.TracingHandler$TraceListener: void quarkusStarting()>();
label1:
return;
}
public static void quarkusStopping()
{
io.quarkus.dev.testing.TracingHandler$TraceListener v0;
v0 = <io.quarkus.dev.testing.TracingHandler: io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler>;
if v0 == null goto label1;
interfaceinvoke v0.<io.quarkus.dev.testing.TracingHandler$TraceListener: void quarkusStopping()>();
label1:
return;
}
public static void quarkusStarted()
{
io.quarkus.dev.testing.TracingHandler$TraceListener v0;
v0 = <io.quarkus.dev.testing.TracingHandler: io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler>;
if v0 == null goto label1;
interfaceinvoke v0.<io.quarkus.dev.testing.TracingHandler$TraceListener: void quarkusStarted()>();
label1:
return;
}
public static void quarkusStopped()
{
io.quarkus.dev.testing.TracingHandler$TraceListener v0;
v0 = <io.quarkus.dev.testing.TracingHandler: io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler>;
if v0 == null goto label1;
interfaceinvoke v0.<io.quarkus.dev.testing.TracingHandler$TraceListener: void quarkusStopped()>();
label1:
return;
}
public static void setTracingHandler(io.quarkus.dev.testing.TracingHandler$TraceListener)
{
io.quarkus.dev.testing.TracingHandler$TraceListener v0;
v0 := @parameter0: io.quarkus.dev.testing.TracingHandler$TraceListener;
<io.quarkus.dev.testing.TracingHandler: io.quarkus.dev.testing.TracingHandler$TraceListener tracingHandler> = v0;
return;
}
}