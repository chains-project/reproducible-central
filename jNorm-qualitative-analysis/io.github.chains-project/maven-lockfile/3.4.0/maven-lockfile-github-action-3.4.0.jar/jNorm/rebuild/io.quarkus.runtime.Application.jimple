public abstract class io.quarkus.runtime.Application extends java.lang.Object implements java.io.Closeable
{
public static final java.lang.String APP_CLASS_NAME;
private static final int ST_INITIAL;
private static final int ST_STARTING;
private static final int ST_STARTED;
private static final int ST_STOPPING;
private static final int ST_STOPPED;
private final java.util.concurrent.locks.Lock stateLock;
private final java.util.concurrent.locks.Condition stateCond;
private int state;
protected static volatile io.quarkus.runtime.Application currentApplication;
private final boolean auxiliaryApplication;
protected void <init>(boolean)
{
java.util.concurrent.locks.Condition v4;
java.util.concurrent.locks.Lock v3;
io.quarkus.runtime.Application v0;
org.wildfly.common.lock.ExtendedLock v2;
boolean v1;
v0 := @this: io.quarkus.runtime.Application;
v1 := @parameter0: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <org.wildfly.common.lock.Locks: org.wildfly.common.lock.ExtendedLock reentrantLock()>();
v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Lock stateLock> = v2;
v3 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Lock stateLock>;
v4 = interfaceinvoke v3.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();
v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond> = v4;
v0.<io.quarkus.runtime.Application: int state> = 0;
v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication> = v1;
return;
}
public final void start(java.lang.String[])
{
java.lang.Throwable v10, v11, v16, v20;
java.lang.IllegalStateException v14, v8, v9;
io.quarkus.runtime.Application v0;
java.lang.String[] v1;
org.eclipse.microprofile.config.spi.ConfigProviderResolver v12;
java.lang.Thread v7;
int v4;
boolean v17, v19, v2;
org.eclipse.microprofile.config.Config v13;
java.util.concurrent.locks.Condition v15, v18, v5;
java.util.concurrent.locks.Lock v3;
java.lang.InterruptedException v6;
v0 := @this: io.quarkus.runtime.Application;
v1 := @parameter0: java.lang.String[];
v2 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v2 != 0 goto label01;
<io.quarkus.runtime.Application: io.quarkus.runtime.Application currentApplication> = v0;
label01:
v3 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Lock stateLock>;
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void lock()>();
label02:
v4 = v0.<io.quarkus.runtime.Application: int state>;
tableswitch(v4)
{
case 0: goto label08;
case 1: goto label03;
case 2: goto label06;
default: goto label07;
};
label03:
v5 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v5.<java.util.concurrent.locks.Condition: void await()>();
label04:
goto label02;
label05:
v6 := @caughtexception;
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v7.<java.lang.Thread: void interrupt()>();
v8 = staticinvoke <io.quarkus.runtime.Application: java.lang.IllegalStateException interruptedOnAwaitStart()>();
throw v8;
label06:
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
return;
label07:
v9 = new java.lang.IllegalStateException;
specialinvoke v9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The application is stopping");
throw v9;
label08:
v0.<io.quarkus.runtime.Application: int state> = 1;
label09:
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
goto label11;
label10:
v10 := @caughtexception;
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
throw v10;
label11:
virtualinvoke v0.<io.quarkus.runtime.Application: void doStart(java.lang.String[])>(v1);
label12:
goto label22;
label13:
v11 := @caughtexception;
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void lock()>();
v12 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
label14:
v13 = virtualinvoke v12.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.Config getConfig()>();
virtualinvoke v12.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: void releaseConfig(org.eclipse.microprofile.config.Config)>(v13);
label15:
goto label17;
label16:
v14 := @caughtexception;
label17:
v0.<io.quarkus.runtime.Application: int state> = 4;
v15 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v15.<java.util.concurrent.locks.Condition: void signalAll()>();
label18:
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
goto label20;
label19:
v16 := @caughtexception;
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
throw v16;
label20:
v17 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v17 != 0 goto label21;
staticinvoke <io.quarkus.dev.appstate.ApplicationStateNotification: void notifyStartupFailed(java.lang.Throwable)>(v11);
label21:
throw v11;
label22:
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void lock()>();
label23:
v0.<io.quarkus.runtime.Application: int state> = 2;
v18 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v18.<java.util.concurrent.locks.Condition: void signalAll()>();
v19 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v19 != 0 goto label24;
staticinvoke <io.quarkus.dev.appstate.ApplicationStateNotification: void notifyStartupComplete()>();
label24:
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
goto label26;
label25:
v20 := @caughtexception;
interfaceinvoke v3.<java.util.concurrent.locks.Lock: void unlock()>();
throw v20;
label26:
return;
catch java.lang.InterruptedException from label03 to label04 with label05;
catch java.lang.Throwable from label02 to label06 with label10;
catch java.lang.Throwable from label07 to label09 with label10;
catch java.lang.Throwable from label11 to label12 with label13;
catch java.lang.IllegalStateException from label14 to label15 with label16;
catch java.lang.Throwable from label17 to label18 with label19;
catch java.lang.Throwable from label23 to label24 with label25;
}
protected abstract void doStart(java.lang.String[]);
public final void close()
{
java.lang.Throwable v13, v6, v7;
io.quarkus.runtime.Application v0;
org.eclipse.microprofile.config.Config v12, v5;
org.eclipse.microprofile.config.spi.ConfigProviderResolver v1, v2, v8, v9;
java.lang.Thread v10, v3;
java.lang.ClassLoader v11, v4;
v0 := @this: io.quarkus.runtime.Application;
label01:
virtualinvoke v0.<io.quarkus.runtime.Application: void stop()>();
label02:
v1 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
v2 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v4 = virtualinvoke v3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v5 = virtualinvoke v2.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.Config getConfig(java.lang.ClassLoader)>(v4);
virtualinvoke v1.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: void releaseConfig(org.eclipse.microprofile.config.Config)>(v5);
label03:
goto label10;
label04:
v6 := @caughtexception;
goto label10;
label05:
v7 := @caughtexception;
label06:
v8 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
v9 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
v10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v11 = virtualinvoke v10.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v12 = virtualinvoke v9.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.Config getConfig(java.lang.ClassLoader)>(v11);
virtualinvoke v8.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: void releaseConfig(org.eclipse.microprofile.config.Config)>(v12);
label07:
goto label09;
label08:
v13 := @caughtexception;
label09:
throw v7;
label10:
return;
catch java.lang.Throwable from label02 to label03 with label04;
catch java.lang.Throwable from label01 to label02 with label05;
catch java.lang.Throwable from label06 to label07 with label08;
}
public final void stop()
{
io.quarkus.runtime.Application v0;
v0 := @this: io.quarkus.runtime.Application;
virtualinvoke v0.<io.quarkus.runtime.Application: void stop(java.lang.Runnable)>(null);
return;
}
public final void stop(java.lang.Runnable)
{
java.lang.IllegalStateException v13, v17, v19, v9;
java.lang.Runnable v1;
java.lang.Thread v12, v16;
boolean v21, v22, v26, v28, v31, v35, v37, v4;
java.lang.Throwable v20, v23, v29, v30, v32, v38;
java.lang.Object[] v3, v6;
io.quarkus.runtime.Application v0;
org.jboss.logging.Logger v2, v24, v33;
int v18, v8;
java.lang.String v25, v34;
java.lang.RuntimeException v5;
java.util.concurrent.locks.Condition v10, v14, v27, v36;
java.util.concurrent.locks.Lock v7;
java.lang.InterruptedException v11, v15;
v0 := @this: io.quarkus.runtime.Application;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/runtime/Application;");
v3 = newarray (java.lang.Object)[0];
virtualinvoke v2.<org.jboss.logging.Logger: void debugf(java.lang.String,java.lang.Object[])>("Stopping application", v3);
v4 = virtualinvoke v2.<org.jboss.logging.Logger: boolean isTraceEnabled()>();
if v4 == 0 goto label01;
v5 = new java.lang.RuntimeException;
specialinvoke v5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Application Stop Stack Trace");
v6 = newarray (java.lang.Object)[0];
virtualinvoke v2.<org.jboss.logging.Logger: void tracef(java.lang.Throwable,java.lang.String,java.lang.Object[])>(v5, "Application shutting down", v6);
label01:
v7 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Lock stateLock>;
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void lock()>();
label02:
v8 = v0.<io.quarkus.runtime.Application: int state>;
tableswitch(v8)
{
case 0: goto label03;
case 1: goto label04;
case 2: goto label12;
case 3: goto label07;
case 4: goto label10;
default: goto label11;
};
label03:
v9 = new java.lang.IllegalStateException;
specialinvoke v9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The application has not been started");
throw v9;
label04:
v10 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v10.<java.util.concurrent.locks.Condition: void await()>();
label05:
goto label02;
label06:
v11 := @caughtexception;
v12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v12.<java.lang.Thread: void interrupt()>();
v13 = staticinvoke <io.quarkus.runtime.Application: java.lang.IllegalStateException interruptedOnAwaitStart()>();
throw v13;
label07:
v14 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v14.<java.util.concurrent.locks.Condition: void await()>();
label08:
goto label02;
label09:
v15 := @caughtexception;
v16 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v16.<java.lang.Thread: void interrupt()>();
v17 = staticinvoke <io.quarkus.runtime.Application: java.lang.IllegalStateException interruptedOnAwaitStop()>();
throw v17;
label10:
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
return;
label11:
v18 = v0.<io.quarkus.runtime.Application: int state>;
v19 = staticinvoke <org.wildfly.common.Assert: java.lang.IllegalStateException impossibleSwitchCase(int)>(v18);
throw v19;
label12:
v0.<io.quarkus.runtime.Application: int state> = 3;
label13:
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
goto label15;
label14:
v20 := @caughtexception;
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
throw v20;
label15:
v21 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
staticinvoke <io.quarkus.bootstrap.runner.Timing: void staticInitStopped(boolean)>(v21);
label16:
staticinvoke <io.quarkus.runtime.shutdown.ShutdownRecorder: void runShutdown()>();
virtualinvoke v0.<io.quarkus.runtime.Application: void doStop()>();
label17:
v22 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v22 != 0 goto label18;
<io.quarkus.runtime.Application: io.quarkus.runtime.Application currentApplication> = null;
label18:
if v1 == null goto label22;
label19:
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label20:
goto label22;
label21:
v23 := @caughtexception;
v24 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/runtime/Application;");
virtualinvoke v24.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Failed to run stop task", v23);
label22:
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void lock()>();
label23:
v0.<io.quarkus.runtime.Application: int state> = 4;
v25 = virtualinvoke v0.<io.quarkus.runtime.Application: java.lang.String getName()>();
v26 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
staticinvoke <io.quarkus.bootstrap.runner.Timing: void printStopTime(java.lang.String,boolean)>(v25, v26);
v27 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v27.<java.util.concurrent.locks.Condition: void signalAll()>();
v28 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v28 != 0 goto label24;
staticinvoke <io.quarkus.dev.appstate.ApplicationStateNotification: void notifyApplicationStopped()>();
label24:
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
goto label36;
label25:
v29 := @caughtexception;
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
throw v29;
label26:
v30 := @caughtexception;
v31 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v31 != 0 goto label27;
<io.quarkus.runtime.Application: io.quarkus.runtime.Application currentApplication> = null;
label27:
if v1 == null goto label31;
label28:
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label29:
goto label31;
label30:
v32 := @caughtexception;
v33 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/runtime/Application;");
virtualinvoke v33.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Failed to run stop task", v32);
label31:
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void lock()>();
label32:
v0.<io.quarkus.runtime.Application: int state> = 4;
v34 = virtualinvoke v0.<io.quarkus.runtime.Application: java.lang.String getName()>();
v35 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
staticinvoke <io.quarkus.bootstrap.runner.Timing: void printStopTime(java.lang.String,boolean)>(v34, v35);
v36 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v36.<java.util.concurrent.locks.Condition: void signalAll()>();
v37 = v0.<io.quarkus.runtime.Application: boolean auxiliaryApplication>;
if v37 != 0 goto label33;
staticinvoke <io.quarkus.dev.appstate.ApplicationStateNotification: void notifyApplicationStopped()>();
label33:
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
goto label35;
label34:
v38 := @caughtexception;
interfaceinvoke v7.<java.util.concurrent.locks.Lock: void unlock()>();
throw v38;
label35:
throw v30;
label36:
return;
catch java.lang.InterruptedException from label04 to label05 with label06;
catch java.lang.InterruptedException from label07 to label08 with label09;
catch java.lang.Throwable from label02 to label10 with label14;
catch java.lang.Throwable from label11 to label13 with label14;
catch java.lang.Throwable from label19 to label20 with label21;
catch java.lang.Throwable from label23 to label24 with label25;
catch java.lang.Throwable from label16 to label17 with label26;
catch java.lang.Throwable from label28 to label29 with label30;
catch java.lang.Throwable from label32 to label33 with label34;
}
public static io.quarkus.runtime.Application currentApplication()
{
io.quarkus.runtime.Application v0;
v0 = <io.quarkus.runtime.Application: io.quarkus.runtime.Application currentApplication>;
return v0;
}
protected abstract void doStop();
public abstract java.lang.String getName();
private static java.lang.IllegalStateException interruptedOnAwaitStart()
{
java.lang.IllegalStateException v0;
v0 = new java.lang.IllegalStateException;
specialinvoke v0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Interrupted while waiting for another thread to start the application");
return v0;
}
private static java.lang.IllegalStateException interruptedOnAwaitStop()
{
java.lang.IllegalStateException v0;
v0 = new java.lang.IllegalStateException;
specialinvoke v0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Interrupted while waiting for another thread to stop the application");
return v0;
}
public void awaitShutdown()
{
java.lang.Throwable v7;
java.lang.IllegalStateException v6;
io.quarkus.runtime.Application v0;
java.util.concurrent.locks.Condition v3;
java.util.concurrent.locks.Lock v1;
java.lang.InterruptedException v4;
java.lang.Thread v5;
int v2;
v0 := @this: io.quarkus.runtime.Application;
v1 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Lock stateLock>;
interfaceinvoke v1.<java.util.concurrent.locks.Lock: void lock()>();
label1:
v2 = v0.<io.quarkus.runtime.Application: int state>;
if v2 != 4 goto label3;
label2:
interfaceinvoke v1.<java.util.concurrent.locks.Lock: void unlock()>();
return;
label3:
v3 = v0.<io.quarkus.runtime.Application: java.util.concurrent.locks.Condition stateCond>;
interfaceinvoke v3.<java.util.concurrent.locks.Condition: void await()>();
label4:
goto label1;
label5:
v4 := @caughtexception;
v5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v5.<java.lang.Thread: void interrupt()>();
v6 = staticinvoke <io.quarkus.runtime.Application: java.lang.IllegalStateException interruptedOnAwaitStop()>();
throw v6;
label6:
v7 := @caughtexception;
interfaceinvoke v1.<java.util.concurrent.locks.Lock: void unlock()>();
throw v7;
catch java.lang.InterruptedException from label3 to label4 with label5;
catch java.lang.Throwable from label1 to label2 with label6;
}
public boolean isStarted()
{
int v1;
io.quarkus.runtime.Application v0;
boolean v2;
v0 := @this: io.quarkus.runtime.Application;
v1 = v0.<io.quarkus.runtime.Application: int state>;
if v1 != 2 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
}