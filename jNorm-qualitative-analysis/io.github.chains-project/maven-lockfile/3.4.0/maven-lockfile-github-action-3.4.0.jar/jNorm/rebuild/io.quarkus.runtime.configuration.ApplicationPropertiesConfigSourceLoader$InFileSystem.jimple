public class io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem extends io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader implements org.eclipse.microprofile.config.spi.ConfigSourceProvider
{
public void <init>()
{
io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem v0;
v0 := @this: io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem;
specialinvoke v0.<io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader: void <init>()>();
return;
}
public java.util.List getConfigSources(java.lang.ClassLoader)
{
java.lang.String[] v3;
java.util.List v7;
io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem v0;
java.lang.ClassLoader v1;
java.lang.String v2, v6;
java.net.URI v5;
java.nio.file.Path v4;
v0 := @this: io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem;
v1 := @parameter0: java.lang.ClassLoader;
v2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");
v3 = newarray (java.lang.String)[2];
v3[0] = "config";
v3[1] = "application.properties";
v4 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v2, v3);
v5 = interfaceinvoke v4.<java.nio.file.Path: java.net.URI toUri()>();
v6 = virtualinvoke v5.<java.net.URI: java.lang.String toString()>();
v7 = virtualinvoke v0.<io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem: java.util.List loadConfigSources(java.lang.String,int,java.lang.ClassLoader)>(v6, 260, v1);
return v7;
}
protected java.util.List tryClassPath(java.net.URI, int, java.lang.ClassLoader)
{
java.util.List v4;
int v2;
io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem v0;
java.lang.ClassLoader v3;
java.net.URI v1;
v0 := @this: io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InFileSystem;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.ClassLoader;
v4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v4;
}
}