public final class io.quarkus.runtime.configuration.ConfigDiagnostic extends java.lang.Object
{
private static final org.jboss.logging.Logger log;
private static final java.util.List errorsMessages;
private static final java.util.Set errorKeys;
private void <init>()
{
io.quarkus.runtime.configuration.ConfigDiagnostic v0;
v0 := @this: io.quarkus.runtime.configuration.ConfigDiagnostic;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void invalidValue(java.lang.String, java.lang.IllegalArgumentException)
{
java.util.List v5;
java.lang.Object[] v4;
java.util.Set v6;
java.lang.String v0, v2, v3;
java.lang.IllegalArgumentException v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.IllegalArgumentException;
v2 = virtualinvoke v1.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();
if v2 == null goto label1;
v3 = v2;
goto label2;
label1:
v4 = newarray (java.lang.Object)[1];
v4[0] = v0;
v3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("An invalid value was given for configuration key \"%s\"", v4);
label2:
v5 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages>;
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v3);
v6 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set errorKeys>;
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v0);
return;
}
public static void missingValue(java.lang.String, java.util.NoSuchElementException)
{
java.util.List v5;
java.lang.Object[] v4;
java.util.Set v6;
java.lang.String v0, v2, v3;
java.util.NoSuchElementException v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.NoSuchElementException;
v2 = virtualinvoke v1.<java.util.NoSuchElementException: java.lang.String getMessage()>();
if v2 == null goto label1;
v3 = v2;
goto label2;
label1:
v4 = newarray (java.lang.Object)[1];
v4[0] = v0;
v3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Configuration key \"%s\" is required, but its value is empty/missing", v4);
label2:
v5 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages>;
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v3);
v6 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set errorKeys>;
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v0);
return;
}
public static void duplicate(java.lang.String)
{
java.util.List v3;
java.lang.Object[] v1;
java.util.Set v4;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Configuration key \"%s\" was specified more than once", v1);
v3 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages>;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v2);
v4 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set errorKeys>;
interfaceinvoke v4.<java.util.Set: boolean add(java.lang.Object)>(v0);
return;
}
public static void deprecated(java.lang.String)
{
java.lang.String v0;
org.jboss.logging.Logger v1;
v0 := @parameter0: java.lang.String;
v1 = <io.quarkus.runtime.configuration.ConfigDiagnostic: org.jboss.logging.Logger log>;
virtualinvoke v1.<org.jboss.logging.Logger: void warnf(java.lang.String,java.lang.Object)>("Configuration key \"%s\" is deprecated", v0);
return;
}
public static void 'unknown'(java.lang.String)
{
java.lang.String v0;
org.jboss.logging.Logger v1;
v0 := @parameter0: java.lang.String;
v1 = <io.quarkus.runtime.configuration.ConfigDiagnostic: org.jboss.logging.Logger log>;
virtualinvoke v1.<org.jboss.logging.Logger: void warnf(java.lang.String,java.lang.Object)>("Unrecognized configuration key \"%s\" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo", v0);
return;
}
public static void 'unknown'(io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.String v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void 'unknown'(java.lang.String)>(v1);
return;
}
public static void unknownProperties(java.util.Set)
{
java.lang.Iterable v3;
java.util.HashSet v1;
java.lang.String v18, v8;
boolean v10, v12, v13, v14, v16, v19, v5, v7;
java.util.Iterator v15, v4, v9;
java.util.Set v0;
org.eclipse.microprofile.config.Config v2;
java.lang.Object v11, v17, v6;
v0 := @parameter0: java.util.Set;
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>()>();
v2 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v3 = interfaceinvoke v2.<org.eclipse.microprofile.config.Config: java.lang.Iterable getPropertyNames()>();
v4 = interfaceinvoke v3.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v6);
if v7 != 0 goto label1;
v8 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String replaceNonAlphanumericByUnderscores(java.lang.String)>(v6);
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v8);
goto label1;
label2:
interfaceinvoke v1.<java.util.Set: boolean removeAll(java.util.Collection)>(v0);
v9 = interfaceinvoke v0.<java.util.Set: java.util.Iterator iterator()>();
label3:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label7;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v11.<java.lang.String: boolean contains(java.lang.CharSequence)>("[");
if v12 == 0 goto label4;
v13 = virtualinvoke v11.<java.lang.String: boolean contains(java.lang.CharSequence)>("]");
if v13 != 0 goto label3;
label4:
v14 = 0;
v15 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label5:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label6;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String replaceNonAlphanumericByUnderscores(java.lang.String)>(v11);
v19 = virtualinvoke v17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v18);
if v19 == 0 goto label5;
v14 = 1;
label6:
if v14 != 0 goto label3;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void 'unknown'(java.lang.String)>(v11);
goto label3;
label7:
return;
}
public static void unknownRunTime(java.lang.String)
{
java.lang.String v0;
io.quarkus.runtime.ImageMode v1, v2;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.quarkus.runtime.ImageMode: io.quarkus.runtime.ImageMode current()>();
v2 = <io.quarkus.runtime.ImageMode: io.quarkus.runtime.ImageMode NATIVE_RUN>;
if v1 != v2 goto label1;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void 'unknown'(java.lang.String)>(v0);
label1:
return;
}
public static void unknownRunTime(io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.String v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void unknownRunTime(java.lang.String)>(v1);
return;
}
public static void unknownPropertiesRuntime(java.util.Set)
{
java.util.Set v0;
io.quarkus.runtime.ImageMode v1, v2;
v0 := @parameter0: java.util.Set;
v1 = staticinvoke <io.quarkus.runtime.ImageMode: io.quarkus.runtime.ImageMode current()>();
v2 = <io.quarkus.runtime.ImageMode: io.quarkus.runtime.ImageMode NATIVE_RUN>;
if v1 != v2 goto label1;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void unknownProperties(java.util.Set)>(v0);
label1:
return;
}
public static boolean isError()
{
java.util.List v0;
boolean v1, v2;
v0 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages>;
v1 = interfaceinvoke v0.<java.util.List: boolean isEmpty()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public static void resetError()
{
java.util.Set v0;
java.util.List v1;
v0 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set errorKeys>;
interfaceinvoke v0.<java.util.Set: void clear()>();
v1 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages>;
interfaceinvoke v1.<java.util.List: void clear()>();
return;
}
public static java.lang.String getNiceErrorMessage()
{
java.util.List v1;
java.util.Iterator v2;
java.lang.Object v4;
java.lang.StringBuilder v0;
java.lang.String v5, v6;
boolean v3;
v0 = new java.lang.StringBuilder;
specialinvoke v0.<java.lang.StringBuilder: void <init>()>();
v1 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  - ");
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
v5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
goto label1;
label2:
v6 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.String toString()>();
return v6;
}
public static java.util.Set getErrorKeys()
{
java.util.HashSet v0;
java.util.Set v1;
v0 = new java.util.HashSet;
v1 = <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set errorKeys>;
specialinvoke v0.<java.util.HashSet: void <init>(java.util.Collection)>(v1);
return v0;
}
static void <clinit>()
{
java.util.concurrent.CopyOnWriteArraySet v2;
java.util.concurrent.CopyOnWriteArrayList v1;
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.String)>("io.quarkus.config");
<io.quarkus.runtime.configuration.ConfigDiagnostic: org.jboss.logging.Logger log> = v0;
v1 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke v1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
<io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.List errorsMessages> = v1;
v2 = new java.util.concurrent.CopyOnWriteArraySet;
specialinvoke v2.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();
<io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set errorKeys> = v2;
return;
}
}