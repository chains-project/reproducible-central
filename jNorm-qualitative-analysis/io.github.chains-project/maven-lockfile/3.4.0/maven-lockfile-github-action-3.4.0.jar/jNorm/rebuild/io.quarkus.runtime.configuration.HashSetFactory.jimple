public final class io.quarkus.runtime.configuration.HashSetFactory extends java.lang.Object implements java.util.function.IntFunction
{
private static final io.quarkus.runtime.configuration.HashSetFactory INSTANCE;
private void <init>()
{
io.quarkus.runtime.configuration.HashSetFactory v0;
v0 := @this: io.quarkus.runtime.configuration.HashSetFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.HashSet apply(int)
{
java.util.HashSet v2;
io.quarkus.runtime.configuration.HashSetFactory v0;
int v1, v3;
v0 := @this: io.quarkus.runtime.configuration.HashSetFactory;
v1 := @parameter0: int;
v2 = new java.util.HashSet;
v3 = specialinvoke v0.<io.quarkus.runtime.configuration.HashSetFactory: int getInitialCapacityFromExpectedSize(int)>(v1);
specialinvoke v2.<java.util.HashSet: void <init>(int)>(v3);
return v2;
}
private int getInitialCapacityFromExpectedSize(int)
{
io.quarkus.runtime.configuration.HashSetFactory v0;
int v1, v2;
float v3, v4;
v0 := @this: io.quarkus.runtime.configuration.HashSetFactory;
v1 := @parameter0: int;
if v1 >= 3 goto label1;
v2 = v1 + 1;
return v2;
label1:
v3 = v1 / 0.75F;
v4 = v3 + 1.0F;
return v4;
}
public static io.quarkus.runtime.configuration.HashSetFactory getInstance()
{
io.quarkus.runtime.configuration.HashSetFactory v0;
v0 = <io.quarkus.runtime.configuration.HashSetFactory: io.quarkus.runtime.configuration.HashSetFactory INSTANCE>;
return v0;
}
static void <clinit>()
{
io.quarkus.runtime.configuration.HashSetFactory v0;
v0 = new io.quarkus.runtime.configuration.HashSetFactory;
specialinvoke v0.<io.quarkus.runtime.configuration.HashSetFactory: void <init>()>();
<io.quarkus.runtime.configuration.HashSetFactory: io.quarkus.runtime.configuration.HashSetFactory INSTANCE> = v0;
return;
}
}