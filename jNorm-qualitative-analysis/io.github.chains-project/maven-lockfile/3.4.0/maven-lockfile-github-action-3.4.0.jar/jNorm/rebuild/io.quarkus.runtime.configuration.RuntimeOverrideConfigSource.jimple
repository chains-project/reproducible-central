public class io.quarkus.runtime.configuration.RuntimeOverrideConfigSource extends java.lang.Object implements org.eclipse.microprofile.config.spi.ConfigSource
{
public static final java.lang.String FIELD_NAME;
public static final java.lang.String GENERATED_CLASS_NAME;
final java.util.Map values;
public void <init>(java.lang.ClassLoader)
{
io.quarkus.runtime.configuration.RuntimeOverrideConfigSource v0;
java.lang.ReflectiveOperationException v7;
java.lang.RuntimeException v8;
java.lang.reflect.Field v4;
java.util.Map v6;
java.lang.Class v3;
java.lang.Object v5;
java.lang.ClassLoader v1;
java.lang.String v2;
v0 := @this: io.quarkus.runtime.configuration.RuntimeOverrideConfigSource;
v1 := @parameter0: java.lang.ClassLoader;
specialinvoke v0.<java.lang.Object: void <init>()>();
label1:
v2 = <io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.lang.String GENERATED_CLASS_NAME>;
v3 = virtualinvoke v1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(v2);
v4 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("CONFIG");
v5 = virtualinvoke v4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
if v5 != null goto label2;
v6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label3;
label2:
v6 = v5;
label3:
v0.<io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.util.Map values> = v6;
label4:
goto label6;
label5:
v7 := @caughtexception;
v8 = new java.lang.RuntimeException;
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v7);
throw v8;
label6:
return;
catch java.lang.ClassNotFoundException from label1 to label4 with label5;
catch java.lang.NoSuchFieldException from label1 to label4 with label5;
catch java.lang.IllegalAccessException from label1 to label4 with label5;
}
public static void setConfig(java.lang.ClassLoader, java.util.Map)
{
java.util.HashMap v5;
java.lang.ReflectiveOperationException v6;
java.lang.RuntimeException v7;
java.lang.reflect.Field v4;
java.util.Map v1;
java.lang.Class v3;
java.lang.ClassLoader v0;
java.lang.String v2;
v0 := @parameter0: java.lang.ClassLoader;
v1 := @parameter1: java.util.Map;
label1:
v2 = <io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.lang.String GENERATED_CLASS_NAME>;
v3 = virtualinvoke v0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(v2);
v4 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("CONFIG");
v5 = new java.util.HashMap;
specialinvoke v5.<java.util.HashMap: void <init>(java.util.Map)>(v1);
virtualinvoke v4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, v5);
label2:
goto label4;
label3:
v6 := @caughtexception;
v7 = new java.lang.RuntimeException;
specialinvoke v7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v6);
throw v7;
label4:
return;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.NoSuchFieldException from label1 to label2 with label3;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
}
public java.util.Map getProperties()
{
java.util.HashMap v1;
io.quarkus.runtime.configuration.RuntimeOverrideConfigSource v0;
java.util.Map v2;
v0 := @this: io.quarkus.runtime.configuration.RuntimeOverrideConfigSource;
v1 = new java.util.HashMap;
v2 = v0.<io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.util.Map values>;
specialinvoke v1.<java.util.HashMap: void <init>(java.util.Map)>(v2);
return v1;
}
public java.util.Set getPropertyNames()
{
java.util.Set v2;
io.quarkus.runtime.configuration.RuntimeOverrideConfigSource v0;
java.util.Map v1;
v0 := @this: io.quarkus.runtime.configuration.RuntimeOverrideConfigSource;
v1 = v0.<io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.util.Map values>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
public int getOrdinal()
{
io.quarkus.runtime.configuration.RuntimeOverrideConfigSource v0;
v0 := @this: io.quarkus.runtime.configuration.RuntimeOverrideConfigSource;
return 399;
}
public java.lang.String getValue(java.lang.String)
{
io.quarkus.runtime.configuration.RuntimeOverrideConfigSource v0;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: io.quarkus.runtime.configuration.RuntimeOverrideConfigSource;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.util.Map values>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.lang.String getName()
{
io.quarkus.runtime.configuration.RuntimeOverrideConfigSource v0;
v0 := @this: io.quarkus.runtime.configuration.RuntimeOverrideConfigSource;
return "Config Override Config Source";
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1, v2;
v0 = class "Lio/quarkus/runtime/configuration/RuntimeOverrideConfigSource;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001$$GeneratedMapHolder");
<io.quarkus.runtime.configuration.RuntimeOverrideConfigSource: java.lang.String GENERATED_CLASS_NAME> = v2;
return;
}
}