public class io.quarkus.runtime.logging.BannerFormatter extends org.jboss.logmanager.formatters.ColorPatternFormatter
{
private final java.util.function.Supplier bannerSupplier;
private java.util.logging.Formatter formatter;
private boolean isColorPattern;
void <init>(java.util.logging.Formatter, boolean, java.util.function.Supplier)
{
java.lang.String v4, v5;
io.quarkus.runtime.logging.BannerFormatter v0;
java.util.function.Supplier v3;
java.util.logging.Formatter v1;
boolean v2;
v0 := @this: io.quarkus.runtime.logging.BannerFormatter;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: boolean;
v3 := @parameter2: java.util.function.Supplier;
specialinvoke v0.<org.jboss.logmanager.formatters.ColorPatternFormatter: void <init>()>();
v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.logging.Formatter formatter> = v1;
v0.<io.quarkus.runtime.logging.BannerFormatter: boolean isColorPattern> = v2;
v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.function.Supplier bannerSupplier> = v3;
if v2 == 0 goto label1;
v4 = virtualinvoke v1.<org.jboss.logmanager.formatters.ColorPatternFormatter: java.lang.String getPattern()>();
virtualinvoke v0.<io.quarkus.runtime.logging.BannerFormatter: void setPattern(java.lang.String)>(v4);
goto label2;
label1:
v5 = virtualinvoke v1.<org.jboss.logmanager.formatters.PatternFormatter: java.lang.String getPattern()>();
virtualinvoke v0.<io.quarkus.runtime.logging.BannerFormatter: void setPattern(java.lang.String)>(v5);
label2:
return;
}
public java.lang.String formatMessage(java.util.logging.LogRecord)
{
java.lang.String v3, v5;
io.quarkus.runtime.logging.BannerFormatter v0;
java.util.logging.LogRecord v1;
java.util.logging.Formatter v4;
boolean v2;
v0 := @this: io.quarkus.runtime.logging.BannerFormatter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = v0.<io.quarkus.runtime.logging.BannerFormatter: boolean isColorPattern>;
if v2 == 0 goto label1;
v3 = specialinvoke v0.<org.jboss.logmanager.formatters.ColorPatternFormatter: java.lang.String formatMessage(java.util.logging.LogRecord)>(v1);
return v3;
label1:
v4 = v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.logging.Formatter formatter>;
v5 = virtualinvoke v4.<java.util.logging.Formatter: java.lang.String format(java.util.logging.LogRecord)>(v1);
return v5;
}
public void setSteps(org.jboss.logmanager.formatters.FormatStep[])
{
org.jboss.logmanager.formatters.FormatStep[] v1;
io.quarkus.runtime.logging.BannerFormatter v0;
java.util.logging.Formatter v3;
boolean v2;
v0 := @this: io.quarkus.runtime.logging.BannerFormatter;
v1 := @parameter0: org.jboss.logmanager.formatters.FormatStep[];
v2 = v0.<io.quarkus.runtime.logging.BannerFormatter: boolean isColorPattern>;
if v2 == 0 goto label1;
specialinvoke v0.<org.jboss.logmanager.formatters.ColorPatternFormatter: void setSteps(org.jboss.logmanager.formatters.FormatStep[])>(v1);
goto label2;
label1:
v3 = v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.logging.Formatter formatter>;
virtualinvoke v3.<org.jboss.logmanager.formatters.PatternFormatter: void setSteps(org.jboss.logmanager.formatters.FormatStep[])>(v1);
label2:
return;
}
public java.lang.String format(org.jboss.logmanager.ExtLogRecord)
{
java.lang.String v4, v6;
io.quarkus.runtime.logging.BannerFormatter v0;
org.jboss.logmanager.ExtLogRecord v1;
java.util.logging.Formatter v3, v5;
boolean v2;
v0 := @this: io.quarkus.runtime.logging.BannerFormatter;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = v0.<io.quarkus.runtime.logging.BannerFormatter: boolean isColorPattern>;
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.logging.Formatter formatter>;
v4 = virtualinvoke v3.<org.jboss.logmanager.formatters.ColorPatternFormatter: java.lang.String format(org.jboss.logmanager.ExtLogRecord)>(v1);
return v4;
label1:
v5 = v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.logging.Formatter formatter>;
v6 = virtualinvoke v5.<org.jboss.logmanager.formatters.PatternFormatter: java.lang.String format(org.jboss.logmanager.ExtLogRecord)>(v1);
return v6;
}
public java.lang.String getHead(java.util.logging.Handler)
{
io.quarkus.runtime.logging.BannerFormatter v0;
java.lang.IllegalArgumentException v9;
java.util.function.Supplier v2;
java.nio.charset.Charset v5;
java.nio.charset.CharsetEncoder v6;
java.lang.Object v3;
java.lang.String v4, v8;
java.util.logging.Handler v1;
boolean v7;
v0 := @this: io.quarkus.runtime.logging.BannerFormatter;
v1 := @parameter0: java.util.logging.Handler;
v2 = v0.<io.quarkus.runtime.logging.BannerFormatter: java.util.function.Supplier bannerSupplier>;
v3 = interfaceinvoke v2.<java.util.function.Supplier: java.lang.Object get()>();
v4 = virtualinvoke v1.<java.util.logging.Handler: java.lang.String getEncoding()>();
label1:
if v4 != null goto label2;
v5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
goto label3;
label2:
v5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(v4);
label3:
v6 = virtualinvoke v5.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
v7 = virtualinvoke v6.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>(v3);
if v7 == 0 goto label4;
v8 = v3;
goto label5;
label4:
v8 = "";
label5:
return v8;
label6:
v9 := @caughtexception;
return "";
catch java.lang.IllegalArgumentException from label1 to label5 with label6;
}
}