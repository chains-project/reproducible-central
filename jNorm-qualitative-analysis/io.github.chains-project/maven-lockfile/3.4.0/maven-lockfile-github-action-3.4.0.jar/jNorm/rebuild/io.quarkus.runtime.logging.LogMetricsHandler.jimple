public class io.quarkus.runtime.logging.LogMetricsHandler extends java.util.logging.Handler
{
final java.util.NavigableMap logCounters;
public void <init>(java.util.NavigableMap)
{
java.util.NavigableMap v1;
io.quarkus.runtime.logging.LogMetricsHandler v0;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandler;
v1 := @parameter0: java.util.NavigableMap;
specialinvoke v0.<java.util.logging.Handler: void <init>()>();
v0.<io.quarkus.runtime.logging.LogMetricsHandler: java.util.NavigableMap logCounters> = v1;
return;
}
public void publish(java.util.logging.LogRecord)
{
java.util.Map$Entry v7;
java.util.NavigableMap v3, v9;
java.util.logging.LogRecord v1;
java.lang.Integer v12, v6;
io.quarkus.runtime.logging.LogMetricsHandler v0;
java.util.logging.Level v4;
org.jboss.logmanager.Level v10;
int v11, v5;
java.lang.Object v13, v8;
boolean v2;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandler;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = virtualinvoke v0.<io.quarkus.runtime.logging.LogMetricsHandler: boolean isLoggable(java.util.logging.LogRecord)>(v1);
if v2 == 0 goto label2;
v3 = v0.<io.quarkus.runtime.logging.LogMetricsHandler: java.util.NavigableMap logCounters>;
v4 = virtualinvoke v1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
v5 = virtualinvoke v4.<java.util.logging.Level: int intValue()>();
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v7 = interfaceinvoke v3.<java.util.NavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>(v6);
if v7 == null goto label1;
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v8.<java.util.concurrent.atomic.LongAdder: void increment()>();
goto label2;
label1:
v9 = v0.<io.quarkus.runtime.logging.LogMetricsHandler: java.util.NavigableMap logCounters>;
v10 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level TRACE>;
v11 = virtualinvoke v10.<org.jboss.logmanager.Level: int intValue()>();
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
v13 = interfaceinvoke v9.<java.util.NavigableMap: java.lang.Object get(java.lang.Object)>(v12);
virtualinvoke v13.<java.util.concurrent.atomic.LongAdder: void increment()>();
label2:
return;
}
public void flush()
{
io.quarkus.runtime.logging.LogMetricsHandler v0;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandler;
return;
}
public void close() throws java.lang.SecurityException
{
io.quarkus.runtime.logging.LogMetricsHandler v0;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandler;
return;
}
}