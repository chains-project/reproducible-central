class io.quarkus.vertx.core.runtime.VertxCoreRecorder$6 extends java.lang.Object implements io.vertx.core.Handler
{
final java.util.concurrent.CompletableFuture val$latch;
void <init>(java.util.concurrent.CompletableFuture)
{
java.util.concurrent.CompletableFuture v1;
io.quarkus.vertx.core.runtime.VertxCoreRecorder$6 v0;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$6;
v1 := @parameter0: java.util.concurrent.CompletableFuture;
v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$6: java.util.concurrent.CompletableFuture val$latch> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void handle(io.vertx.core.AsyncResult)
{
java.lang.Throwable v4;
io.quarkus.vertx.core.runtime.VertxCoreRecorder$6 v0;
java.lang.Object v6;
java.util.concurrent.CompletableFuture v3, v5;
io.vertx.core.AsyncResult v1;
boolean v2;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$6;
v1 := @parameter0: io.vertx.core.AsyncResult;
v2 = interfaceinvoke v1.<io.vertx.core.AsyncResult: boolean failed()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$6: java.util.concurrent.CompletableFuture val$latch>;
v4 = interfaceinvoke v1.<io.vertx.core.AsyncResult: java.lang.Throwable cause()>();
virtualinvoke v3.<java.util.concurrent.CompletableFuture: boolean completeExceptionally(java.lang.Throwable)>(v4);
goto label2;
label1:
v5 = v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$6: java.util.concurrent.CompletableFuture val$latch>;
v6 = interfaceinvoke v1.<io.vertx.core.AsyncResult: java.lang.Object result()>();
virtualinvoke v5.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(v6);
label2:
return;
}
}