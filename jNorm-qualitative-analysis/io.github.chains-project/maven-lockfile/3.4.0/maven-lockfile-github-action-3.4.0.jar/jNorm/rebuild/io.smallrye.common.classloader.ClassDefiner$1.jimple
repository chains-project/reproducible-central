class io.smallrye.common.classloader.ClassDefiner$1 extends java.lang.Object implements java.security.PrivilegedAction
{
final java.lang.Class val$parent;
final java.lang.invoke.MethodHandles$Lookup val$lookup;
final byte[] val$classBytes;
void <init>(java.lang.Class, java.lang.invoke.MethodHandles$Lookup, byte[])
{
byte[] v3;
java.lang.invoke.MethodHandles$Lookup v2;
io.smallrye.common.classloader.ClassDefiner$1 v0;
java.lang.Class v1;
v0 := @this: io.smallrye.common.classloader.ClassDefiner$1;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.invoke.MethodHandles$Lookup;
v3 := @parameter2: byte[];
v0.<io.smallrye.common.classloader.ClassDefiner$1: java.lang.Class val$parent> = v1;
v0.<io.smallrye.common.classloader.ClassDefiner$1: java.lang.invoke.MethodHandles$Lookup val$lookup> = v2;
v0.<io.smallrye.common.classloader.ClassDefiner$1: byte[] val$classBytes> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Class run()
{
byte[] v4;
java.lang.IllegalAccessException v6;
java.lang.invoke.MethodHandles$Lookup v2, v3;
java.lang.IllegalAccessError v7;
io.smallrye.common.classloader.ClassDefiner$1 v0;
java.lang.Class v1, v5;
java.lang.String v8;
v0 := @this: io.smallrye.common.classloader.ClassDefiner$1;
label1:
v1 = v0.<io.smallrye.common.classloader.ClassDefiner$1: java.lang.Class val$parent>;
v2 = v0.<io.smallrye.common.classloader.ClassDefiner$1: java.lang.invoke.MethodHandles$Lookup val$lookup>;
v3 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup privateLookupIn(java.lang.Class,java.lang.invoke.MethodHandles$Lookup)>(v1, v2);
v4 = v0.<io.smallrye.common.classloader.ClassDefiner$1: byte[] val$classBytes>;
v5 = virtualinvoke v3.<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>(v4);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = new java.lang.IllegalAccessError;
v8 = virtualinvoke v6.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
specialinvoke v7.<java.lang.IllegalAccessError: void <init>(java.lang.String)>(v8);
throw v7;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
}
}