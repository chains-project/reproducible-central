public class io.smallrye.common.classloader.ClassPathUtils extends java.lang.Object
{
private static final java.lang.String FILE;
private static final java.lang.String JAR;
public void <init>()
{
io.smallrye.common.classloader.ClassPathUtils v0;
v0 := @this: io.smallrye.common.classloader.ClassPathUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void consumeAsStreams(java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v1;
java.lang.Thread v2;
java.lang.ClassLoader v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: void consumeAsStreams(java.lang.ClassLoader,java.lang.String,java.util.function.Consumer)>(v3, v0, v1);
return;
}
public static void consumeAsStreams(java.lang.ClassLoader, java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v2;
java.util.Enumeration v3;
java.lang.Object v5;
java.lang.ClassLoader v0;
java.lang.String v1;
boolean v4;
v0 := @parameter0: java.lang.ClassLoader;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.function.Consumer;
v3 = virtualinvoke v0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(v1);
label1:
v4 = interfaceinvoke v3.<java.util.Enumeration: boolean hasMoreElements()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Enumeration: java.lang.Object nextElement()>();
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: void consumeStream(java.net.URL,java.util.function.Consumer)>(v5, v2);
goto label1;
label2:
return;
}
public static void consumeAsPaths(java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v1;
java.lang.Thread v2;
java.lang.ClassLoader v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: void consumeAsPaths(java.lang.ClassLoader,java.lang.String,java.util.function.Consumer)>(v3, v0, v1);
return;
}
public static void consumeAsPaths(java.lang.ClassLoader, java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v2;
java.util.Enumeration v3;
java.lang.Object v5;
java.lang.ClassLoader v0;
java.lang.String v1;
boolean v4;
v0 := @parameter0: java.lang.ClassLoader;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.function.Consumer;
v3 = virtualinvoke v0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(v1);
label1:
v4 = interfaceinvoke v3.<java.util.Enumeration: boolean hasMoreElements()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Enumeration: java.lang.Object nextElement()>();
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: void consumeAsPath(java.net.URL,java.util.function.Consumer)>(v5, v2);
goto label1;
label2:
return;
}
public static void consumeAsPath(java.net.URL, java.util.function.Consumer)
{
java.util.function.Consumer v1;
java.util.function.Function v2;
java.net.URL v0;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.common.classloader.ClassPathUtils$lambda_consumeAsPath_0__3213: java.util.function.Function bootstrap$(java.util.function.Consumer)>(v1);
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: java.lang.Object processAsPath(java.net.URL,java.util.function.Function)>(v0, v2);
return;
}
public static java.lang.Object processAsPath(java.net.URL, java.util.function.Function)
{
java.net.URL v0, v14;
java.lang.Thread v11, v5, v7, v9;
java.nio.file.Path v16, v24, v35;
boolean v34, v4;
java.nio.file.FileSystem v22;
java.io.UncheckedIOException v30;
java.lang.ClassLoader v21, v6, v8;
java.lang.Throwable v10, v28;
java.lang.String[] v23;
java.util.function.Function v1;
int v13, v25;
java.lang.String v12, v15, v19, v2, v20, v26, v3, v31, v32, v33, v38, v39;
java.net.MalformedURLException v17;
java.io.IOException v29;
java.lang.RuntimeException v18;
java.lang.IllegalArgumentException v37;
java.lang.Object v27, v36;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Function;
v2 = "jar";
v3 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 == 0 goto label17;
v5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v6 = virtualinvoke v5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label01:
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v8 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
virtualinvoke v7.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v8);
staticinvoke <java.nio.file.spi.FileSystemProvider: java.util.List installedProviders()>();
label02:
v9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v6);
goto label04;
label03:
v10 := @caughtexception;
v11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v11.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v6);
throw v10;
label04:
v12 = virtualinvoke v0.<java.net.URL: java.lang.String getFile()>();
v13 = virtualinvoke v12.<java.lang.String: int lastIndexOf(int)>(33);
label05:
if v13 < 0 goto label06;
v14 = new java.net.URL;
v15 = virtualinvoke v12.<java.lang.String: java.lang.String substring(int,int)>(0, v13);
specialinvoke v14.<java.net.URL: void <init>(java.lang.String)>(v15);
goto label07;
label06:
v14 = v0;
label07:
v16 = staticinvoke <io.smallrye.common.classloader.ClassPathUtils: java.nio.file.Path toLocalPath(java.net.URL)>(v14);
label08:
goto label10;
label09:
v17 := @caughtexception;
v18 = new java.lang.RuntimeException;
v19 = virtualinvoke v12.<java.lang.String: java.lang.String substring(int,int)>(0, v13);
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to create a URL for \'\u0001\'");
specialinvoke v18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v20, v17);
throw v18;
label10:
v21 = null;
v22 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.lang.ClassLoader)>(v16, v21);
label11:
v23 = newarray (java.lang.String)[0];
v24 = virtualinvoke v22.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>("/", v23);
if v13 < 0 goto label12;
v25 = v13 + 1;
v26 = virtualinvoke v12.<java.lang.String: java.lang.String substring(int)>(v25);
v24 = interfaceinvoke v24.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(v26);
label12:
v27 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v24);
label13:
virtualinvoke v22.<java.nio.file.FileSystem: void close()>();
label14:
return v27;
label15:
v28 := @caughtexception;
throw v28;
label16:
v29 := @caughtexception;
v30 = new java.io.UncheckedIOException;
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.nio.file.Path)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to read \u0001");
specialinvoke v30.<java.io.UncheckedIOException: void <init>(java.lang.String,java.io.IOException)>(v31, v29);
throw v30;
label17:
v32 = "file";
v33 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v34 = virtualinvoke v32.<java.lang.String: boolean equals(java.lang.Object)>(v33);
if v34 == 0 goto label18;
v35 = staticinvoke <io.smallrye.common.classloader.ClassPathUtils: java.nio.file.Path toLocalPath(java.net.URL)>(v0);
v36 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v35);
return v36;
label18:
v37 = new java.lang.IllegalArgumentException;
v38 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v39 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.net.URL)>(v38, v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected protocol \u0001 for URL \u0001");
specialinvoke v37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v39);
throw v37;
catch java.lang.Throwable from label01 to label02 with label03;
catch java.net.MalformedURLException from label05 to label08 with label09;
catch java.lang.Throwable from label11 to label13 with label15;
catch java.io.IOException from label10 to label14 with label16;
}
public static void consumeStream(java.net.URL, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v1;
java.util.function.Function v2;
java.net.URL v0;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.common.classloader.ClassPathUtils$lambda_consumeStream_1__3214: java.util.function.Function bootstrap$(java.util.function.Consumer)>(v1);
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: java.lang.Object readStream(java.net.URL,java.util.function.Function)>(v0, v2);
return;
}
public static java.lang.Object readStream(java.net.URL, java.util.function.Function) throws java.io.IOException
{
java.lang.Throwable v16, v19, v8;
java.net.URL v0;
java.util.function.Function v1;
java.net.URLConnection v5;
java.nio.file.OpenOption[] v13;
java.lang.String v10, v2, v3, v9;
java.nio.file.Path v12;
boolean v11, v4;
java.lang.Object v15, v18, v7;
java.io.InputStream v14, v17, v6;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Function;
v2 = "jar";
v3 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 == 0 goto label05;
v5 = virtualinvoke v0.<java.net.URL: java.net.URLConnection openConnection()>();
virtualinvoke v5.<java.net.URLConnection: void setUseCaches(boolean)>(0);
v6 = virtualinvoke v5.<java.net.URLConnection: java.io.InputStream getInputStream()>();
label01:
v7 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v6);
label02:
if v6 == null goto label03;
virtualinvoke v6.<java.io.InputStream: void close()>();
label03:
return v7;
label04:
v8 := @caughtexception;
throw v8;
label05:
v9 = "file";
v10 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label10;
v12 = staticinvoke <io.smallrye.common.classloader.ClassPathUtils: java.nio.file.Path toLocalPath(java.net.URL)>(v0);
v13 = newarray (java.nio.file.OpenOption)[0];
v14 = staticinvoke <java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>(v12, v13);
label06:
v15 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v14);
label07:
if v14 == null goto label08;
virtualinvoke v14.<java.io.InputStream: void close()>();
label08:
return v15;
label09:
v16 := @caughtexception;
throw v16;
label10:
v17 = virtualinvoke v0.<java.net.URL: java.io.InputStream openStream()>();
label11:
v18 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v17);
label12:
if v17 == null goto label13;
virtualinvoke v17.<java.io.InputStream: void close()>();
label13:
return v18;
label14:
v19 := @caughtexception;
throw v19;
catch java.lang.Throwable from label01 to label02 with label04;
catch java.lang.Throwable from label06 to label07 with label09;
catch java.lang.Throwable from label11 to label12 with label14;
}
public static java.nio.file.Path toLocalPath(java.net.URL)
{
java.net.URL v0;
java.net.URISyntaxException v3;
java.lang.String v5;
java.net.URI v1;
java.lang.IllegalArgumentException v4;
java.nio.file.Path v2;
v0 := @parameter0: java.net.URL;
label1:
v1 = virtualinvoke v0.<java.net.URL: java.net.URI toURI()>();
v2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.net.URI)>(v1);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.net.URL)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to translate \u0001 to local path");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v3);
throw v4;
catch java.net.URISyntaxException from label1 to label2 with label3;
}
}