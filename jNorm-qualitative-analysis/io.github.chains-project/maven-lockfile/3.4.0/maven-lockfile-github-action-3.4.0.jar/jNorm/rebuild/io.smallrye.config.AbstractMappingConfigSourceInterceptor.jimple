public abstract class io.smallrye.config.AbstractMappingConfigSourceInterceptor extends java.lang.Object implements io.smallrye.config.ConfigSourceInterceptor
{
private static final long serialVersionUID;
private final java.util.function.Function mapping;
public void <init>(java.util.function.Function)
{
io.smallrye.config.AbstractMappingConfigSourceInterceptor v0;
java.util.function.Function v1, v2;
v0 := @this: io.smallrye.config.AbstractMappingConfigSourceInterceptor;
v1 := @parameter0: java.util.function.Function;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == null goto label1;
v2 = v1;
goto label2;
label1:
v2 = staticinvoke <java.util.function.Function: java.util.function.Function identity()>();
label2:
v0.<io.smallrye.config.AbstractMappingConfigSourceInterceptor: java.util.function.Function mapping> = v2;
return;
}
public void <init>(java.util.Map)
{
io.smallrye.config.AbstractMappingConfigSourceInterceptor$1 v2;
io.smallrye.config.AbstractMappingConfigSourceInterceptor v0;
java.util.Map v1;
v0 := @this: io.smallrye.config.AbstractMappingConfigSourceInterceptor;
v1 := @parameter0: java.util.Map;
v2 = new io.smallrye.config.AbstractMappingConfigSourceInterceptor$1;
specialinvoke v2.<io.smallrye.config.AbstractMappingConfigSourceInterceptor$1: void <init>(java.util.Map)>(v1);
specialinvoke v0.<io.smallrye.config.AbstractMappingConfigSourceInterceptor: void <init>(java.util.function.Function)>(v2);
return;
}
public java.util.Iterator iterateNames(io.smallrye.config.ConfigSourceInterceptorContext)
{
java.util.Iterator v3, v8;
io.smallrye.config.AbstractMappingConfigSourceInterceptor v0;
java.util.function.Function v6;
java.util.HashSet v2;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v5, v7;
boolean v4;
v0 := @this: io.smallrye.config.AbstractMappingConfigSourceInterceptor;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = interfaceinvoke v1.<io.smallrye.config.ConfigSourceInterceptorContext: java.util.Iterator iterateNames()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
v6 = v0.<io.smallrye.config.AbstractMappingConfigSourceInterceptor: java.util.function.Function mapping>;
v7 = interfaceinvoke v6.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v5);
if v7 == null goto label1;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v7);
goto label1;
label2:
v8 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
return v8;
}
public java.util.Iterator iterateValues(io.smallrye.config.ConfigSourceInterceptorContext)
{
java.util.function.Function v6;
io.smallrye.config.ConfigValue$ConfigValueBuilder v10, v12, v14, v16, v18, v20, v22, v24, v9;
java.util.HashSet v2;
int v19, v21, v23;
java.lang.String v11, v13, v15, v17, v7;
boolean v4;
java.util.Iterator v26, v3;
io.smallrye.config.AbstractMappingConfigSourceInterceptor v0;
io.smallrye.config.ConfigValue v25;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v5, v8;
v0 := @this: io.smallrye.config.AbstractMappingConfigSourceInterceptor;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = interfaceinvoke v1.<io.smallrye.config.ConfigSourceInterceptorContext: java.util.Iterator iterateValues()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
v6 = v0.<io.smallrye.config.AbstractMappingConfigSourceInterceptor: java.util.function.Function mapping>;
v7 = virtualinvoke v5.<io.smallrye.config.ConfigValue: java.lang.String getName()>();
v8 = interfaceinvoke v6.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v7);
if v8 == null goto label1;
v9 = staticinvoke <io.smallrye.config.ConfigValue: io.smallrye.config.ConfigValue$ConfigValueBuilder builder()>();
v10 = virtualinvoke v9.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withName(java.lang.String)>(v8);
v11 = virtualinvoke v5.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
v12 = virtualinvoke v10.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withValue(java.lang.String)>(v11);
v13 = virtualinvoke v5.<io.smallrye.config.ConfigValue: java.lang.String getRawValue()>();
v14 = virtualinvoke v12.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withRawValue(java.lang.String)>(v13);
v15 = virtualinvoke v5.<io.smallrye.config.ConfigValue: java.lang.String getProfile()>();
v16 = virtualinvoke v14.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withProfile(java.lang.String)>(v15);
v17 = virtualinvoke v5.<io.smallrye.config.ConfigValue: java.lang.String getConfigSourceName()>();
v18 = virtualinvoke v16.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withConfigSourceName(java.lang.String)>(v17);
v19 = virtualinvoke v5.<io.smallrye.config.ConfigValue: int getConfigSourcePosition()>();
v20 = virtualinvoke v18.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withConfigSourcePosition(int)>(v19);
v21 = virtualinvoke v5.<io.smallrye.config.ConfigValue: int getConfigSourceOrdinal()>();
v22 = virtualinvoke v20.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withConfigSourceOrdinal(int)>(v21);
v23 = virtualinvoke v5.<io.smallrye.config.ConfigValue: int getLineNumber()>();
v24 = virtualinvoke v22.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withLineNumber(int)>(v23);
v25 = virtualinvoke v24.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue build()>();
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v25);
goto label1;
label2:
v26 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
return v26;
}
protected java.util.function.Function getMapping()
{
io.smallrye.config.AbstractMappingConfigSourceInterceptor v0;
java.util.function.Function v1;
v0 := @this: io.smallrye.config.AbstractMappingConfigSourceInterceptor;
v1 = v0.<io.smallrye.config.AbstractMappingConfigSourceInterceptor: java.util.function.Function mapping>;
return v1;
}
}