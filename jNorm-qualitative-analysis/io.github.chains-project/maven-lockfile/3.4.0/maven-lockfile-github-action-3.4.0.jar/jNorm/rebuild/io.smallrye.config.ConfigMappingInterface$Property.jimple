public abstract class io.smallrye.config.ConfigMappingInterface$Property extends java.lang.Object
{
private final java.lang.reflect.Method method;
private final java.lang.String propertyName;
void <init>(java.lang.reflect.Method, java.lang.String)
{
java.lang.String v2;
java.lang.reflect.Method v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 := @parameter0: java.lang.reflect.Method;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.reflect.Method method> = v1;
v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.String propertyName> = v2;
return;
}
public java.lang.reflect.Method getMethod()
{
java.lang.reflect.Method v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.reflect.Method method>;
return v1;
}
public java.lang.String getPropertyName()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
java.lang.String v2, v4, v6;
java.lang.reflect.Method v7;
boolean v1, v3, v5;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = virtualinvoke v0.<io.smallrye.config.ConfigMappingInterface$Property: boolean isParentPropertyName()>();
if v1 == 0 goto label1;
v2 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.String propertyName>;
return v2;
label1:
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMappingInterface$Property: boolean hasPropertyName()>();
if v3 == 0 goto label2;
v4 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.String propertyName>;
v5 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v5 != 0 goto label2;
v6 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.String propertyName>;
goto label3;
label2:
v7 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.reflect.Method method>;
v6 = virtualinvoke v7.<java.lang.reflect.Method: java.lang.String getName()>();
label3:
return v6;
}
public boolean hasPropertyName()
{
java.lang.String v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
boolean v2;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.String propertyName>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasConvertWith()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isParentPropertyName()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
java.lang.String v2;
boolean v1, v3, v4;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = virtualinvoke v0.<io.smallrye.config.ConfigMappingInterface$Property: boolean hasPropertyName()>();
if v1 == 0 goto label1;
v2 = v0.<io.smallrye.config.ConfigMappingInterface$Property: java.lang.String propertyName>;
v3 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isPrimitive()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isOptional()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isGroup()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isLeaf()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isMap()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isMayBeOptional()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isCollection()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isDefaultMethod()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public boolean isToStringMethod()
{
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
return 0;
}
public io.smallrye.config.ConfigMappingInterface$PrimitiveProperty asPrimitive()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$OptionalProperty asOptional()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$GroupProperty asGroup()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$LeafProperty asLeaf()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$MapProperty asMap()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$MayBeOptionalProperty asMayBeOptional()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$CollectionProperty asCollection()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
public io.smallrye.config.ConfigMappingInterface$DefaultMethodProperty asDefaultMethod()
{
java.lang.ClassCastException v1;
io.smallrye.config.ConfigMappingInterface$Property v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$Property;
v1 = new java.lang.ClassCastException;
specialinvoke v1.<java.lang.ClassCastException: void <init>()>();
throw v1;
}
}