public final class io.smallrye.config.ConfigMappings extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private final io.smallrye.config.ConfigValidator configValidator;
private final java.util.concurrent.ConcurrentMap mappings;
void <init>(io.smallrye.config.ConfigValidator)
{
io.smallrye.config.ConfigValidator v1;
java.util.concurrent.ConcurrentHashMap v2;
io.smallrye.config.ConfigMappings v0;
v0 := @this: io.smallrye.config.ConfigMappings;
v1 := @parameter0: io.smallrye.config.ConfigValidator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.ConfigMappings: io.smallrye.config.ConfigValidator configValidator> = v1;
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.smallrye.config.ConfigMappings: java.util.concurrent.ConcurrentMap mappings> = v2;
return;
}
public static void registerConfigMappings(io.smallrye.config.SmallRyeConfig, java.util.Set) throws io.smallrye.config.ConfigValidationException
{
io.smallrye.config.ConfigMappingProvider$Builder v6, v8;
java.util.Set v1;
io.smallrye.config.SmallRyeConfig v0;
java.lang.Boolean v4;
java.util.Optional v3;
java.lang.Object v5;
boolean v2, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.util.Set;
v2 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>("smallrye.config.mapping.validate-unknown", class "Ljava/lang/Boolean;");
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v5 = virtualinvoke v3.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v4);
v6 = staticinvoke <io.smallrye.config.ConfigMappingProvider: io.smallrye.config.ConfigMappingProvider$Builder builder()>();
v7 = virtualinvoke v5.<java.lang.Boolean: boolean booleanValue()>();
v8 = virtualinvoke v6.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder validateUnknown(boolean)>(v7);
staticinvoke <io.smallrye.config.ConfigMappings: void mapConfiguration(io.smallrye.config.SmallRyeConfig,io.smallrye.config.ConfigMappingProvider$Builder,java.util.Set)>(v0, v8, v1);
label1:
return;
}
public static void registerConfigProperties(io.smallrye.config.SmallRyeConfig, java.util.Set) throws io.smallrye.config.ConfigValidationException
{
io.smallrye.config.ConfigMappingProvider$Builder v3, v4;
java.util.Set v1;
io.smallrye.config.SmallRyeConfig v0;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.util.Set;
v2 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = staticinvoke <io.smallrye.config.ConfigMappingProvider: io.smallrye.config.ConfigMappingProvider$Builder builder()>();
v4 = virtualinvoke v3.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder validateUnknown(boolean)>(0);
staticinvoke <io.smallrye.config.ConfigMappings: void mapConfiguration(io.smallrye.config.SmallRyeConfig,io.smallrye.config.ConfigMappingProvider$Builder,java.util.Set)>(v0, v4, v1);
label1:
return;
}
public static java.util.Map getProperties(io.smallrye.config.ConfigMappings$ConfigClassWithPrefix)
{
io.smallrye.config.ConfigMappingProvider$Builder v1, v2, v5;
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v0;
java.util.Map v7;
java.lang.Class v4;
java.lang.String v3;
io.smallrye.config.ConfigMappingProvider v6;
v0 := @parameter0: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix;
v1 = staticinvoke <io.smallrye.config.ConfigMappingProvider: io.smallrye.config.ConfigMappingProvider$Builder builder()>();
v2 = virtualinvoke v1.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder validateUnknown(boolean)>(0);
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.String getPrefix()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.Class getKlass()>();
v5 = virtualinvoke v2.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder addRoot(java.lang.String,java.lang.Class)>(v3, v4);
v6 = virtualinvoke v5.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider build()>();
v7 = virtualinvoke v6.<io.smallrye.config.ConfigMappingProvider: java.util.Map getProperties()>();
return v7;
}
public static java.util.Set mappedProperties(io.smallrye.config.ConfigMappings$ConfigClassWithPrefix, java.util.Set)
{
java.util.Iterator v9;
io.smallrye.config.ConfigMappingProvider$Builder v2, v3, v6;
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v0;
java.util.Set v1;
java.util.HashSet v8;
io.smallrye.config.NameIterator v13;
io.smallrye.config.KeyMap v12;
java.lang.Class v5;
java.lang.Object v11, v14;
java.lang.String v4;
io.smallrye.config.ConfigMappingProvider v7;
boolean v10;
v0 := @parameter0: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix;
v1 := @parameter1: java.util.Set;
v2 = staticinvoke <io.smallrye.config.ConfigMappingProvider: io.smallrye.config.ConfigMappingProvider$Builder builder()>();
v3 = virtualinvoke v2.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder validateUnknown(boolean)>(0);
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.String getPrefix()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.Class getKlass()>();
v6 = virtualinvoke v3.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder addRoot(java.lang.String,java.lang.Class)>(v4, v5);
v7 = virtualinvoke v6.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider build()>();
v8 = new java.util.HashSet;
specialinvoke v8.<java.util.HashSet: void <init>()>();
v9 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v7.<io.smallrye.config.ConfigMappingProvider: io.smallrye.config.KeyMap getMatchActions()>();
v13 = new io.smallrye.config.NameIterator;
specialinvoke v13.<io.smallrye.config.NameIterator: void <init>(java.lang.String)>(v11);
v14 = virtualinvoke v12.<io.smallrye.config.KeyMap: java.lang.Object findRootValue(io.smallrye.config.NameIterator)>(v13);
if v14 == null goto label1;
interfaceinvoke v8.<java.util.Set: boolean add(java.lang.Object)>(v11);
goto label1;
label2:
return v8;
}
static void mapConfiguration(io.smallrye.config.SmallRyeConfig, io.smallrye.config.ConfigMappingProvider$Builder) throws io.smallrye.config.ConfigValidationException
{
java.util.HashSet v2;
io.smallrye.config.SmallRyeConfig v0;
io.smallrye.config.ConfigMappingProvider$Builder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.smallrye.config.ConfigMappingProvider$Builder;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
staticinvoke <io.smallrye.config.ConfigMappings: void mapConfiguration(io.smallrye.config.SmallRyeConfig,io.smallrye.config.ConfigMappingProvider$Builder,java.util.Set)>(v0, v1, v2);
return;
}
static void mapConfiguration(io.smallrye.config.SmallRyeConfig, io.smallrye.config.ConfigMappingProvider$Builder, java.util.Set) throws io.smallrye.config.ConfigValidationException
{
java.util.Iterator v3;
io.smallrye.config.ConfigMappingProvider$Builder v1;
java.util.Set v2;
io.smallrye.config.SmallRyeConfig v0;
java.lang.Class v7;
java.lang.Object v5;
java.lang.String v6;
io.smallrye.config.ConfigMappingProvider v8;
boolean v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.smallrye.config.ConfigMappingProvider$Builder;
v2 := @parameter2: java.util.Set;
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.String getPrefix()>();
v7 = virtualinvoke v5.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.Class getKlass()>();
virtualinvoke v1.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider$Builder addRoot(java.lang.String,java.lang.Class)>(v6, v7);
goto label1;
label2:
v8 = virtualinvoke v1.<io.smallrye.config.ConfigMappingProvider$Builder: io.smallrye.config.ConfigMappingProvider build()>();
staticinvoke <io.smallrye.config.ConfigMappings: void mapConfiguration(io.smallrye.config.SmallRyeConfig,io.smallrye.config.ConfigMappingProvider)>(v0, v8);
return;
}
static void mapConfiguration(io.smallrye.config.SmallRyeConfig, io.smallrye.config.ConfigMappingProvider)
{
java.util.Map v5;
io.smallrye.config.SmallRyeConfig v0;
io.smallrye.config.ConfigMappingProvider v1;
io.smallrye.config.ConfigMappingContext v2;
io.smallrye.config.ConfigMappings v3;
java.util.concurrent.ConcurrentMap v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.smallrye.config.ConfigMappingProvider;
v2 = virtualinvoke v1.<io.smallrye.config.ConfigMappingProvider: io.smallrye.config.ConfigMappingContext mapConfiguration(io.smallrye.config.SmallRyeConfig)>(v0);
v3 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: io.smallrye.config.ConfigMappings getConfigMappings()>();
v4 = v3.<io.smallrye.config.ConfigMappings: java.util.concurrent.ConcurrentMap mappings>;
v5 = virtualinvoke v2.<io.smallrye.config.ConfigMappingContext: java.util.Map getRootsMap()>();
interfaceinvoke v4.<java.util.concurrent.ConcurrentMap: void putAll(java.util.Map)>(v5);
return;
}
java.lang.Object getConfigMapping(java.lang.Class)
{
java.util.function.Function v4;
java.util.function.Supplier v6;
java.lang.'annotation'.Annotation v2;
java.util.Optional v3, v5;
java.lang.Class v1;
java.lang.Object v7, v8;
io.smallrye.config.ConfigMappings v0;
v0 := @this: io.smallrye.config.ConfigMappings;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/config/ConfigMapping;");
v3 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>(v2);
v4 = staticinvoke <io.smallrye.config.ConfigMappings$prefix__3108: java.util.function.Function bootstrap$()>();
v5 = virtualinvoke v3.<java.util.Optional: java.util.Optional map(java.util.function.Function)>(v4);
v6 = staticinvoke <io.smallrye.config.ConfigMappings$lambda_getConfigMapping_0__3109: java.util.function.Supplier bootstrap$(java.lang.Class)>(v1);
v7 = virtualinvoke v5.<java.util.Optional: java.lang.Object orElseGet(java.util.function.Supplier)>(v6);
v8 = virtualinvoke v0.<io.smallrye.config.ConfigMappings: java.lang.Object getConfigMapping(java.lang.Class,java.lang.String)>(v1, v7);
return v8;
}
java.lang.Object getConfigMapping(java.lang.Class, java.lang.String)
{
java.util.concurrent.ConcurrentMap v4;
io.smallrye.config.ConfigMessages v11, v7;
io.smallrye.config.ConfigMappingObject v18;
io.smallrye.config.ConfigValidator v16;
java.lang.String v12, v2, v8;
java.util.NoSuchElementException v13, v9;
io.smallrye.config.ConfigMappings v0;
boolean v15;
java.lang.Class v1, v5;
java.lang.Object v10, v14, v17, v3, v6;
v0 := @this: io.smallrye.config.ConfigMappings;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
if v2 != null goto label1;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMappings: java.lang.Object getConfigMapping(java.lang.Class)>(v1);
return v3;
label1:
v4 = v0.<io.smallrye.config.ConfigMappings: java.util.concurrent.ConcurrentMap mappings>;
v5 = staticinvoke <io.smallrye.config.ConfigMappingLoader: java.lang.Class getConfigMappingClass(java.lang.Class)>(v1);
v6 = interfaceinvoke v4.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v5);
if v6 != null goto label2;
v7 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v8 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v9 = interfaceinvoke v7.<io.smallrye.config.ConfigMessages: java.util.NoSuchElementException mappingNotFound(java.lang.String)>(v8);
throw v9;
label2:
v10 = interfaceinvoke v6.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v10 != null goto label3;
v11 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v12 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v13 = interfaceinvoke v11.<io.smallrye.config.ConfigMessages: java.util.NoSuchElementException mappingPrefixNotFound(java.lang.String,java.lang.String)>(v12, v2);
throw v13;
label3:
v14 = v10;
v15 = v10 instanceof io.smallrye.config.ConfigMappingClassMapper;
if v15 == 0 goto label4;
v14 = interfaceinvoke v18.<io.smallrye.config.ConfigMappingClassMapper: java.lang.Object map()>();
label4:
v16 = v0.<io.smallrye.config.ConfigMappings: io.smallrye.config.ConfigValidator configValidator>;
interfaceinvoke v16.<io.smallrye.config.ConfigValidator: void validateMapping(java.lang.Class,java.lang.String,java.lang.Object)>(v1, v2, v14);
v17 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v14);
return v17;
}
static java.lang.String getPrefix(java.lang.Class)
{
java.lang.'annotation'.Annotation v1;
java.lang.Class v0;
java.lang.String v2;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/config/ConfigMapping;");
if v1 == null goto label1;
v2 = interfaceinvoke v1.<io.smallrye.config.ConfigMapping: java.lang.String prefix()>();
goto label2;
label1:
v2 = "";
label2:
return v2;
}
}