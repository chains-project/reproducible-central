public class io.smallrye.config.ConfigMessages_$bundle extends java.lang.Object implements io.smallrye.config.ConfigMessages, java.io.Serializable
{
private static final long serialVersionUID;
public static final io.smallrye.config.ConfigMessages_$bundle INSTANCE;
private static final java.util.Locale LOCALE;
protected void <init>()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
protected java.lang.Object readResolve()
{
io.smallrye.config.ConfigMessages_$bundle v0, v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = <io.smallrye.config.ConfigMessages_$bundle: io.smallrye.config.ConfigMessages_$bundle INSTANCE>;
return v1;
}
protected java.util.Locale getLoggingLocale()
{
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = <io.smallrye.config.ConfigMessages_$bundle: java.util.Locale LOCALE>;
return v1;
}
protected java.lang.String fileNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "The file %s was not found";
}
public final java.lang.IllegalStateException fileNotFound(java.lang.String)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String fileNotFound$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
private static void _copyStackTraceMinusOne(java.lang.Throwable)
{
java.lang.Throwable v0;
java.lang.Object[] v3;
java.lang.StackTraceElement[] v1;
int v2;
v0 := @parameter0: java.lang.Throwable;
v1 = virtualinvoke v0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();
v2 = lengthof v1;
v3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(v1, 1, v2);
virtualinvoke v0.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(v3);
return;
}
protected java.lang.String failedToLoadConfig$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00001: Failure while loading microprofile-config.properties files";
}
public final java.lang.IllegalStateException failedToLoadConfig(java.lang.Throwable)
{
java.lang.Throwable v1;
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String failedToLoadConfig$str()>();
v5 = newarray (java.lang.Object)[0];
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v6, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String failedCharacterConversion$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00002: %s can not be converted to a Character";
}
public final java.lang.IllegalArgumentException failedCharacterConversion(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String failedCharacterConversion$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String singleTypeConverter$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00003: Converter %s must be parameterized with a single type";
}
public final java.lang.IllegalStateException singleTypeConverter(java.lang.String)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String singleTypeConverter$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String notArrayType$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00004: %s is not an array type";
}
public final java.lang.IllegalArgumentException notArrayType(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String notArrayType$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String valueNotMatchPattern$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00005: Value does not match pattern %s (value was \"%s\")";
}
public final java.lang.IllegalArgumentException valueNotMatchPattern(java.util.regex.Pattern, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v2, v5, v7;
java.util.regex.Pattern v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.util.regex.Pattern;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String valueNotMatchPattern$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String lessThanMinimumValue$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00006: Value must not be less than %s (value was \"%s\")";
}
public final java.lang.IllegalArgumentException lessThanMinimumValue(java.lang.Object, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.Object v1;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String lessThanMinimumValue$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String lessThanEqualToMinimumValue$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00007: Value must not be less than or equal to %s (value was \"%s\")";
}
public final java.lang.IllegalArgumentException lessThanEqualToMinimumValue(java.lang.Object, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.Object v1;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String lessThanEqualToMinimumValue$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String greaterThanMaximumValue$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00008: Value must not be greater than %s (value was \"%s\")";
}
public final java.lang.IllegalArgumentException greaterThanMaximumValue(java.lang.Object, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.Object v1;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String greaterThanMaximumValue$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String greaterThanEqualToMaximumValue$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00009: Value must not be greater than or equal to %s (value was \"%s\")";
}
public final java.lang.IllegalArgumentException greaterThanEqualToMaximumValue(java.lang.Object, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.Object v1;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String greaterThanEqualToMaximumValue$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String unknownConverterId$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00010: Unknown converter ID: %s";
}
public final java.io.InvalidObjectException unknownConverterId(int)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.Integer v6;
java.util.Locale v3;
int v1;
java.io.InvalidObjectException v2;
java.lang.String v4, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: int;
v2 = new java.io.InvalidObjectException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String unknownConverterId$str()>();
v5 = newarray (java.lang.Object)[1];
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5[0] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.io.InvalidObjectException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String expandingElementNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00011: Could not expand value %s in property %s";
}
public final java.util.NoSuchElementException expandingElementNotFound(java.lang.String, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v4;
java.lang.String v1, v2, v5, v7;
java.util.NoSuchElementException v3;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = new java.util.NoSuchElementException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String expandingElementNotFound$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String unableToAddConverter$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00012: Can not add converter %s that is not parameterized with a type";
}
public final java.lang.IllegalStateException unableToAddConverter(org.eclipse.microprofile.config.spi.Converter)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
org.eclipse.microprofile.config.spi.Converter v1;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String unableToAddConverter$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String noRegisteredConverter$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00013: No Converter registered for %s";
}
public final java.lang.IllegalArgumentException noRegisteredConverter(java.lang.Class)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.Class v1;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String noRegisteredConverter$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String propertyNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00014: The config property %s is required but it could not be found in any config source";
}
public final java.lang.String propertyNotFound(java.lang.String)
{
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v1, v3, v5;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String propertyNotFound$str()>();
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
return v5;
}
protected java.lang.String noConfigForClassloader$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00015: No configuration is available for this class loader";
}
public final java.lang.IllegalStateException noConfigForClassloader()
{
java.lang.IllegalStateException v1;
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = new java.lang.IllegalStateException;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String noConfigForClassloader$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String configIsNull$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00016: config cannot be null";
}
public final java.lang.IllegalArgumentException configIsNull()
{
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
java.lang.IllegalArgumentException v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = new java.lang.IllegalArgumentException;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String configIsNull$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String configAlreadyRegistered$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00017: Configuration already registered for the given class loader";
}
public final java.lang.IllegalStateException configAlreadyRegistered()
{
java.lang.IllegalStateException v1;
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = new java.lang.IllegalStateException;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String configAlreadyRegistered$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String malformedEncoding$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00018: Malformed \\uxxxx encoding";
}
public final java.lang.IllegalArgumentException malformedEncoding()
{
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
java.lang.IllegalArgumentException v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = new java.lang.IllegalArgumentException;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String malformedEncoding$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String constructorConverterFailure$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00019: Failed to create new instance from Converter constructor";
}
public final java.lang.IllegalArgumentException constructorConverterFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String constructorConverterFailure$str()>();
v5 = newarray (java.lang.Object)[0];
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v6, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String staticMethodConverterFailure$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00020: Failed to convert value with static method";
}
public final java.lang.IllegalArgumentException staticMethodConverterFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String staticMethodConverterFailure$str()>();
v5 = newarray (java.lang.Object)[0];
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v6, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String classConverterNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00021: Converter class %s not found";
}
public final java.lang.IllegalArgumentException classConverterNotFound(java.lang.Throwable, java.lang.String)
{
java.lang.Throwable v1;
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String classConverterNotFound$str()>();
v6 = newarray (java.lang.Object)[1];
v6[0] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String unknownHost$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00022: Host, %s, not found";
}
public final java.lang.IllegalArgumentException unknownHost(java.lang.Throwable, java.lang.String)
{
java.lang.Throwable v1;
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String unknownHost$str()>();
v6 = newarray (java.lang.Object)[1];
v6[0] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String unknownArrayType$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00023: Array type being converted is unknown";
}
public final java.lang.IllegalArgumentException unknownArrayType()
{
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
java.lang.IllegalArgumentException v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = new java.lang.IllegalArgumentException;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String unknownArrayType$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String notAllowed$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00024: Not allowed to access secret key %s";
}
public final java.lang.SecurityException notAllowed(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.SecurityException v2;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.SecurityException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String notAllowed$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.SecurityException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String expressionExpansionTooDepth$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00025: Recursive expression expansion is too deep for %s";
}
public final java.lang.IllegalArgumentException expressionExpansionTooDepth(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String expressionExpansionTooDepth$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String malformedUUID$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00026: %s cannot be converted into a UUID";
}
public final java.lang.IllegalArgumentException malformedUUID(java.lang.Throwable, java.lang.String)
{
java.lang.Throwable v1;
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String malformedUUID$str()>();
v6 = newarray (java.lang.Object)[1];
v6[0] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String mappingNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00027: Could not find a mapping for %s";
}
public final java.util.NoSuchElementException mappingNotFound(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.util.NoSuchElementException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.util.NoSuchElementException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String mappingNotFound$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String mappingPrefixNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00028: Could not find a mapping for %s with prefix %s";
}
public final java.util.NoSuchElementException mappingPrefixNotFound(java.lang.String, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v4;
java.lang.String v1, v2, v5, v7;
java.util.NoSuchElementException v3;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = new java.util.NoSuchElementException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String mappingPrefixNotFound$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String integerExpected$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00029: Expected an integer value, got \"%s\"";
}
public final java.lang.NumberFormatException integerExpected(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.NumberFormatException v2;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.NumberFormatException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String integerExpected$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String longExpected$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00030: Expected a long value, got \"%s\"";
}
public final java.lang.NumberFormatException longExpected(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.NumberFormatException v2;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.NumberFormatException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String longExpected$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String doubleExpected$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00031: Expected a double value, got \"%s\"";
}
public final java.lang.NumberFormatException doubleExpected(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.NumberFormatException v2;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.NumberFormatException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String doubleExpected$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String floatExpected$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00032: Expected a float value, got \"%s\"";
}
public final java.lang.NumberFormatException floatExpected(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.NumberFormatException v2;
java.lang.String v1, v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.NumberFormatException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String floatExpected$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String schemeNotSupported$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00033: Scheme %s not supported";
}
public final java.lang.IllegalArgumentException schemeNotSupported(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String schemeNotSupported$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String uriSyntaxInvalid$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00034: URI Syntax invalid %s";
}
public final java.lang.IllegalArgumentException uriSyntaxInvalid(java.lang.Throwable, java.lang.String)
{
java.lang.Throwable v1;
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String uriSyntaxInvalid$str()>();
v6 = newarray (java.lang.Object)[1];
v6[0] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String failedToLoadResource$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00035: Failed to load resource %s";
}
public final java.lang.IllegalArgumentException failedToLoadResource(java.lang.Throwable, java.lang.String)
{
java.lang.Throwable v1;
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v2, v5, v7;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String failedToLoadResource$str()>();
v6 = newarray (java.lang.Object)[1];
v6[0] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String getTypeNotSupportedForUnwrapping$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00036: Type %s not supported for unwrapping.";
}
public final java.lang.IllegalArgumentException getTypeNotSupportedForUnwrapping(java.lang.Class)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.Class v1;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String getTypeNotSupportedForUnwrapping$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String converterNullValue$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00037: The Converter API cannot convert a null value";
}
public final java.lang.NullPointerException converterNullValue()
{
java.lang.Object[] v4;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
java.lang.NullPointerException v1;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 = new java.lang.NullPointerException;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String converterNullValue$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String noRawType$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00038: Type has no raw type class: %s";
}
public final java.lang.IllegalArgumentException noRawType(java.lang.reflect.Type)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.reflect.Type v1;
java.util.Locale v3;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.reflect.Type;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String noRawType$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String converterException$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00039: The config property %s with the config value \"%s\" threw an Exception whilst being converted %s";
}
public final java.lang.IllegalArgumentException converterException(java.lang.Throwable, java.lang.String, java.lang.String, java.lang.String)
{
java.lang.Throwable v1;
java.lang.Object[] v8;
io.smallrye.config.ConfigMessages_$bundle v0;
java.lang.IllegalArgumentException v5;
java.util.Locale v6;
java.lang.String v2, v3, v4, v7, v9;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 = new java.lang.IllegalArgumentException;
v6 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v7 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String converterException$str()>();
v8 = newarray (java.lang.Object)[3];
v8[0] = v2;
v8[1] = v3;
v8[2] = v4;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v6, v7, v8);
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v9, v1);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v5);
return v5;
}
protected java.lang.String propertyEmptyString$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00040: The config property %s is defined as the empty String (\"\") which the following Converter considered to be null: %s";
}
public final java.util.NoSuchElementException propertyEmptyString(java.lang.String, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v4;
java.lang.String v1, v2, v5, v7;
java.util.NoSuchElementException v3;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = new java.util.NoSuchElementException;
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String propertyEmptyString$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String converterReturnedNull$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00041: The config property %s with the config value \"%s\" was converted to null from the following Converter: %s";
}
public final java.util.NoSuchElementException converterReturnedNull(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.Object[] v7;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v5;
java.lang.String v1, v2, v3, v6, v8;
java.util.NoSuchElementException v4;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = new java.util.NoSuchElementException;
v5 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v6 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String converterReturnedNull$str()>();
v7 = newarray (java.lang.Object)[3];
v7[0] = v1;
v7[1] = v2;
v7[2] = v3;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v5, v6, v7);
specialinvoke v4.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v8);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v4);
return v4;
}
protected java.lang.String valueNotMatchMapFormat$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00042: Value does not match the expected map format \"<key1>=<value1>;<key2>=<value2>...\" (value was \"%s\")";
}
public final java.util.NoSuchElementException valueNotMatchMapFormat(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.util.NoSuchElementException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.util.NoSuchElementException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String valueNotMatchMapFormat$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String mappingAnnotationNotSupportedInClass$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00043: The @ConfigMapping annotation can only be placed in interfaces, %s is a class";
}
public final java.lang.IllegalStateException mappingAnnotationNotSupportedInClass(java.lang.Class)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.Class v1;
java.lang.String v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String mappingAnnotationNotSupportedInClass$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String propertiesAnnotationNotSupportedInInterface$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00044: The @ConfigProperties annotation can only be placed in classes, %s is an interface";
}
public final java.lang.IllegalStateException propertiesAnnotationNotSupportedInInterface(java.lang.Class)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.Class v1;
java.lang.String v4, v6;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String propertiesAnnotationNotSupportedInInterface$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String classIsNotAMapping$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00045: The %s class is not a ConfigMapping";
}
public final java.lang.IllegalArgumentException classIsNotAMapping(java.lang.Class)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.Class v1;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String classIsNotAMapping$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String secretKeyHandlerNotFound$str()
{
io.smallrye.config.ConfigMessages_$bundle v0;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
return "SRCFG00046: Could not find a secret key handler for %s";
}
public final java.util.NoSuchElementException secretKeyHandlerNotFound(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.util.NoSuchElementException v2;
v0 := @this: io.smallrye.config.ConfigMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.util.NoSuchElementException;
v3 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: java.lang.String secretKeyHandlerNotFound$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.ConfigMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
static void <clinit>()
{
io.smallrye.config.ConfigMessages_$bundle v0;
java.util.Locale v1;
v0 = new io.smallrye.config.ConfigMessages_$bundle;
specialinvoke v0.<io.smallrye.config.ConfigMessages_$bundle: void <init>()>();
<io.smallrye.config.ConfigMessages_$bundle: io.smallrye.config.ConfigMessages_$bundle INSTANCE> = v0;
v1 = <java.util.Locale: java.util.Locale ROOT>;
<io.smallrye.config.ConfigMessages_$bundle: java.util.Locale LOCALE> = v1;
return;
}
}