class io.smallrye.config.ExpressionConfigSourceInterceptor$1 extends java.lang.Object implements java.util.function.BiConsumer
{
final io.smallrye.config.ConfigValue$ConfigValueBuilder val$value;
final io.smallrye.config.ConfigSourceInterceptorContext val$context;
final int val$depth;
final io.smallrye.config.ConfigValue val$configValue;
final io.smallrye.config.ExpressionConfigSourceInterceptor this$0;
void <init>(io.smallrye.config.ExpressionConfigSourceInterceptor, io.smallrye.config.ConfigValue$ConfigValueBuilder, io.smallrye.config.ConfigSourceInterceptorContext, int, io.smallrye.config.ConfigValue)
{
io.smallrye.config.ExpressionConfigSourceInterceptor v1;
int v4;
io.smallrye.config.ExpressionConfigSourceInterceptor$1 v0;
io.smallrye.config.ConfigSourceInterceptorContext v3;
io.smallrye.config.ConfigValue v5;
io.smallrye.config.ConfigValue$ConfigValueBuilder v2;
v0 := @this: io.smallrye.config.ExpressionConfigSourceInterceptor$1;
v1 := @parameter0: io.smallrye.config.ExpressionConfigSourceInterceptor;
v2 := @parameter1: io.smallrye.config.ConfigValue$ConfigValueBuilder;
v3 := @parameter2: io.smallrye.config.ConfigSourceInterceptorContext;
v4 := @parameter3: int;
v5 := @parameter4: io.smallrye.config.ConfigValue;
v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ExpressionConfigSourceInterceptor this$0> = v1;
v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigValue$ConfigValueBuilder val$value> = v2;
v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigSourceInterceptorContext val$context> = v3;
v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: int val$depth> = v4;
v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigValue val$configValue> = v5;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void accept(io.smallrye.common.expression.ResolveContext, java.lang.StringBuilder)
{
io.smallrye.common.expression.ResolveContext v1;
io.smallrye.config.ConfigValue$ConfigValueBuilder v18, v21, v6;
io.smallrye.config.ConfigMessages v23;
int v12, v13, v4, v5, v8, v9;
io.smallrye.config.ExpressionConfigSourceInterceptor$1 v0;
java.lang.String v17, v25, v3, v7;
io.smallrye.config.ConfigValidationException$Problem v22;
java.util.NoSuchElementException v26;
boolean v16, v20;
io.smallrye.config.ExpressionConfigSourceInterceptor v10;
io.smallrye.config.ConfigValue v14, v24;
java.util.List v15, v19;
io.smallrye.config.ConfigSourceInterceptorContext v11;
java.lang.StringBuilder v2;
v0 := @this: io.smallrye.config.ExpressionConfigSourceInterceptor$1;
v1 := @parameter0: io.smallrye.common.expression.ResolveContext;
v2 := @parameter1: java.lang.StringBuilder;
v3 = virtualinvoke v1.<io.smallrye.common.expression.ResolveContext: java.lang.String getKey()>();
v4 = virtualinvoke v3.<java.lang.String: int indexOf(java.lang.String)>("::");
v5 = (int) -1;
if v4 == v5 goto label1;
v6 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigValue$ConfigValueBuilder val$value>;
v7 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int,int)>(0, v4);
virtualinvoke v6.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withExtendedExpressionHandler(java.lang.String)>(v7);
v8 = v4 + 2;
v9 = virtualinvoke v3.<java.lang.String: int length()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v3, v8, v9);
return;
label1:
v10 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ExpressionConfigSourceInterceptor this$0>;
v11 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigSourceInterceptorContext val$context>;
v12 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: int val$depth>;
v13 = v12 + 1;
v14 = specialinvoke v10.<io.smallrye.config.ExpressionConfigSourceInterceptor: io.smallrye.config.ConfigValue getValue(io.smallrye.config.ConfigSourceInterceptorContext,java.lang.String,int)>(v11, v3, v13);
if v14 == null goto label3;
v15 = virtualinvoke v14.<io.smallrye.config.ConfigValue: java.util.List getProblems()>();
v16 = interfaceinvoke v15.<java.util.List: boolean isEmpty()>();
if v16 == 0 goto label2;
v17 = virtualinvoke v14.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v17);
goto label5;
label2:
v18 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigValue$ConfigValueBuilder val$value>;
v19 = virtualinvoke v14.<io.smallrye.config.ConfigValue: java.util.List getProblems()>();
virtualinvoke v18.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withProblems(java.util.List)>(v19);
goto label5;
label3:
v20 = virtualinvoke v1.<io.smallrye.common.expression.ResolveContext: boolean hasDefault()>();
if v20 == 0 goto label4;
virtualinvoke v1.<io.smallrye.common.expression.ResolveContext: void expandDefault()>();
goto label5;
label4:
v21 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigValue$ConfigValueBuilder val$value>;
v22 = new io.smallrye.config.ConfigValidationException$Problem;
v23 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v24 = v0.<io.smallrye.config.ExpressionConfigSourceInterceptor$1: io.smallrye.config.ConfigValue val$configValue>;
v25 = virtualinvoke v24.<io.smallrye.config.ConfigValue: java.lang.String getName()>();
v26 = interfaceinvoke v23.<io.smallrye.config.ConfigMessages: java.util.NoSuchElementException expandingElementNotFound(java.lang.String,java.lang.String)>(v3, v25);
specialinvoke v22.<io.smallrye.config.ConfigValidationException$Problem: void <init>(java.lang.RuntimeException)>(v26);
virtualinvoke v21.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder addProblem(io.smallrye.config.ConfigValidationException$Problem)>(v22);
label5:
return;
}
}