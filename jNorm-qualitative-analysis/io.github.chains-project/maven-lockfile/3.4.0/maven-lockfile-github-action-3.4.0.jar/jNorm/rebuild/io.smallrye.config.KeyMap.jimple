public final class io.smallrye.config.KeyMap extends java.util.HashMap
{
private static final java.lang.Object NO_VALUE;
private static final long serialVersionUID;
private io.smallrye.config.KeyMap any;
private java.lang.Object rootValue;
public void <init>(int, float)
{
int v1;
float v2;
io.smallrye.config.KeyMap v0;
java.lang.Object v3;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: int;
v2 := @parameter1: float;
specialinvoke v0.<java.util.HashMap: void <init>(int,float)>(v1, v2);
v3 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue> = v3;
return;
}
public void <init>(int)
{
int v1;
io.smallrye.config.KeyMap v0;
java.lang.Object v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: int;
specialinvoke v0.<java.util.HashMap: void <init>(int)>(v1);
v2 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue> = v2;
return;
}
public void <init>()
{
io.smallrye.config.KeyMap v0;
java.lang.Object v1;
v0 := @this: io.smallrye.config.KeyMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
v1 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue> = v1;
return;
}
public io.smallrye.config.KeyMap get(java.lang.String, int, int)
{
int v2, v3, v4;
io.smallrye.config.KeyMap v0;
java.lang.Object v6;
java.lang.String v1, v5;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v2 + v3;
v5 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v2, v4);
v6 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object get(java.lang.Object)>(v5);
return v6;
}
public io.smallrye.config.KeyMap getAny()
{
io.smallrye.config.KeyMap v0, v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
return v1;
}
public io.smallrye.config.KeyMap getOrCreateAny()
{
io.smallrye.config.KeyMap v0, v1, v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
if v1 != null goto label1;
v2 = new io.smallrye.config.KeyMap;
specialinvoke v2.<io.smallrye.config.KeyMap: void <init>()>();
v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any> = v2;
v1 = v2;
label1:
return v1;
}
public io.smallrye.config.KeyMap putAny(io.smallrye.config.KeyMap)
{
io.smallrye.config.KeyMap v0, v1, v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.KeyMap;
v2 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any> = v1;
return v2;
}
public io.smallrye.config.KeyMap putAnyIfAbsent(io.smallrye.config.KeyMap)
{
io.smallrye.config.KeyMap v0, v1, v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.KeyMap;
v2 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
if v2 != null goto label1;
v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any> = v1;
return null;
label1:
return v2;
}
public boolean hasRootValue()
{
io.smallrye.config.KeyMap v0;
java.lang.Object v1, v2;
boolean v3;
v0 := @this: io.smallrye.config.KeyMap;
v1 = v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
v2 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
if v1 == v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public java.lang.Object getRootValue()
{
io.smallrye.config.KeyMap v0;
java.lang.Object v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object getRootValueOrDefault(java.lang.Object)>(null);
return v1;
}
public java.lang.Object getRootValueOrDefault(java.lang.Object)
{
io.smallrye.config.KeyMap v0;
java.lang.Object v1, v2, v3, v4;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
v3 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
if v2 != v3 goto label1;
v4 = v1;
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Object getOrComputeRootValue(java.util.function.Supplier)
{
io.smallrye.config.KeyMap v0;
java.lang.Object v2, v3, v4;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.util.function.Supplier;
v2 = v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
v3 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
if v2 != v3 goto label1;
v4 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
v2 = v4;
v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue> = v4;
label1:
return v2;
}
public java.lang.Object removeRootValue()
{
io.smallrye.config.KeyMap v0;
java.lang.Object v1, v2, v3;
v0 := @this: io.smallrye.config.KeyMap;
v1 = v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
v2 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
if v1 == v2 goto label1;
v3 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue> = v3;
label1:
return v1;
}
public java.lang.Object putRootValue(java.lang.Object)
{
io.smallrye.config.KeyMap v0;
java.lang.Object v1, v2, v3, v4;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue> = v1;
v3 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
if v2 != v3 goto label1;
v4 = null;
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public io.smallrye.config.KeyMap find(java.lang.String)
{
io.smallrye.config.NameIterator v2;
io.smallrye.config.KeyMap v0, v3;
java.lang.String v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 = new io.smallrye.config.NameIterator;
specialinvoke v2.<io.smallrye.config.NameIterator: void <init>(java.lang.String)>(v1);
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(io.smallrye.config.NameIterator)>(v2);
return v3;
}
public io.smallrye.config.KeyMap find(io.smallrye.config.NameIterator)
{
io.smallrye.config.NameIterator v1;
io.smallrye.config.KeyMap v0, v4, v5;
java.lang.String v3;
boolean v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.NameIterator;
v2 = virtualinvoke v1.<io.smallrye.config.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return v0;
label1:
v3 = virtualinvoke v1.<io.smallrye.config.NameIterator: java.lang.String getNextSegment()>();
virtualinvoke v1.<io.smallrye.config.NameIterator: void next()>();
v4 = specialinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrDefault(java.lang.String)>(v3);
if v4 != null goto label2;
v5 = null;
goto label3;
label2:
v5 = virtualinvoke v4.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(io.smallrye.config.NameIterator)>(v1);
label3:
return v5;
}
public io.smallrye.config.KeyMap find(java.util.Iterator)
{
java.util.Iterator v1;
io.smallrye.config.KeyMap v0, v5, v7;
java.lang.Object v3, v6;
boolean v2, v4;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.util.Iterator;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 != 0 goto label1;
return v0;
label1:
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>("*");
if v4 != 0 goto label2;
v5 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
v6 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(v3, v5);
label2:
if v6 != null goto label3;
v7 = null;
goto label4;
label3:
v7 = virtualinvoke v6.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(java.util.Iterator)>(v1);
label4:
return v7;
}
public io.smallrye.config.KeyMap find(java.lang.Iterable)
{
java.util.Iterator v2;
io.smallrye.config.KeyMap v0, v3;
java.lang.Iterable v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(java.util.Iterator)>(v2);
return v3;
}
private io.smallrye.config.KeyMap findOrDefault(java.lang.String)
{
int v10, v11, v12, v5, v6;
io.smallrye.config.KeyMap v0, v14, v2, v9;
java.lang.Object v3;
java.lang.String v1, v13, v8;
boolean v4, v7;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>("]");
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<java.lang.String: int lastIndexOf(int)>(91);
v6 = (int) -1;
if v5 == v6 goto label1;
v7 = specialinvoke v0.<io.smallrye.config.KeyMap: boolean isValidIndex(java.lang.String,int)>(v1, v5);
if v7 == 0 goto label1;
v8 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
v9 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(v8, v9);
if v3 == null goto label1;
v3 = virtualinvoke v3.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(java.lang.String)>("[");
if v3 == null goto label1;
v10 = v5 + 1;
v11 = virtualinvoke v1.<java.lang.String: int length()>();
v12 = v11 - 1;
v13 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v10, v12);
v14 = v3.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
virtualinvoke v3.<io.smallrye.config.KeyMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(v13, v14);
v3 = virtualinvoke v3.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(java.lang.String)>("]");
label1:
return v3;
}
private boolean isValidIndex(java.lang.String, int)
{
java.lang.NumberFormatException v8;
int v2, v3, v4, v5;
io.smallrye.config.KeyMap v0;
java.lang.String v1, v6;
boolean v7;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
label1:
v3 = v2 + 1;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
v5 = v4 - 1;
v6 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v3, v5);
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>("*");
if v7 == 0 goto label3;
label2:
return 1;
label3:
staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v6);
label4:
return 1;
label5:
v8 := @caughtexception;
return 0;
catch java.lang.NumberFormatException from label1 to label2 with label5;
catch java.lang.NumberFormatException from label3 to label4 with label5;
}
public io.smallrye.config.KeyMap findOrAdd(java.lang.String)
{
io.smallrye.config.NameIterator v2;
io.smallrye.config.KeyMap v0, v3;
java.lang.String v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 = new io.smallrye.config.NameIterator;
specialinvoke v2.<io.smallrye.config.NameIterator: void <init>(java.lang.String)>(v1);
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(io.smallrye.config.NameIterator)>(v2);
return v3;
}
public io.smallrye.config.KeyMap findOrAdd(io.smallrye.config.NameIterator)
{
java.lang.Throwable v6;
io.smallrye.config.NameIterator v1;
io.smallrye.config.KeyMap v0, v4, v5;
java.lang.String v3;
boolean v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.NameIterator;
v2 = virtualinvoke v1.<io.smallrye.config.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return v0;
label1:
v3 = virtualinvoke v1.<io.smallrye.config.NameIterator: java.lang.String getNextSegment()>();
virtualinvoke v1.<io.smallrye.config.NameIterator: void next()>();
label2:
v4 = specialinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getNext(java.lang.String)>(v3);
v5 = virtualinvoke v4.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(io.smallrye.config.NameIterator)>(v1);
label3:
virtualinvoke v1.<io.smallrye.config.NameIterator: void previous()>();
return v5;
label4:
v6 := @caughtexception;
virtualinvoke v1.<io.smallrye.config.NameIterator: void previous()>();
throw v6;
catch java.lang.Throwable from label2 to label3 with label4;
}
public io.smallrye.config.KeyMap findOrAdd(java.util.Iterator)
{
java.util.Iterator v1;
io.smallrye.config.KeyMap v0, v4, v5;
java.lang.Object v3;
boolean v2;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.util.Iterator;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 != 0 goto label1;
return v0;
label1:
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v4 = specialinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getNext(java.lang.String)>(v3);
v5 = virtualinvoke v4.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.util.Iterator)>(v1);
return v5;
}
public io.smallrye.config.KeyMap findOrAdd(java.lang.Iterable)
{
java.util.Iterator v2;
io.smallrye.config.KeyMap v0, v3;
java.lang.Iterable v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.util.Iterator)>(v2);
return v3;
}
public transient io.smallrye.config.KeyMap findOrAdd(java.lang.String[])
{
int v2;
io.smallrye.config.KeyMap v0, v3;
java.lang.String[] v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String[],int,int)>(v1, 0, v2);
return v3;
}
public io.smallrye.config.KeyMap findOrAdd(java.lang.String[], int, int)
{
java.lang.String[] v1;
int v2, v3, v6, v7, v9;
io.smallrye.config.KeyMap v0, v5, v8;
java.lang.String v4;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v1[v2];
v5 = specialinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getNext(java.lang.String)>(v4);
v6 = v2 + 1;
v7 = v3 - 1;
if v6 <= v7 goto label1;
v8 = v5;
goto label2;
label1:
v9 = v2 + 1;
v8 = virtualinvoke v5.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String[],int,int)>(v1, v9, v3);
label2:
return v8;
}
private io.smallrye.config.KeyMap getNext(java.lang.String)
{
java.util.function.Function v14, v16, v19, v21, v23, v25;
int v10, v5, v6, v8, v9;
io.smallrye.config.KeyMap v0, v3;
java.lang.String v1, v11, v12;
boolean v13, v18, v2, v4, v7;
java.lang.Object v15, v17, v20, v22, v24, v26;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("*");
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getOrCreateAny()>();
return v3;
label1:
v4 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>("]");
if v4 == 0 goto label7;
v5 = virtualinvoke v1.<java.lang.String: int lastIndexOf(int)>(91);
v6 = (int) -1;
if v5 == v6 goto label6;
v7 = specialinvoke v0.<io.smallrye.config.KeyMap: boolean isValidIndex(java.lang.String,int)>(v1, v5);
if v7 == 0 goto label6;
v8 = v5 + 1;
v9 = virtualinvoke v1.<java.lang.String: int length()>();
v10 = v9 - 1;
v11 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v8, v10);
v12 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
v13 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>("*");
if v13 == 0 goto label2;
virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getOrCreateAny()>();
goto label3;
label2:
v14 = staticinvoke <io.smallrye.config.KeyMap$lambda_getNext_0__3089: java.util.function.Function bootstrap$()>();
v15 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v12, v14);
label3:
v16 = staticinvoke <io.smallrye.config.KeyMap$lambda_getNext_1__3090: java.util.function.Function bootstrap$()>();
v17 = virtualinvoke v15.<io.smallrye.config.KeyMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>("[", v16);
v18 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>("*");
if v18 == 0 goto label4;
virtualinvoke v17.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getOrCreateAny()>();
goto label5;
label4:
v19 = staticinvoke <io.smallrye.config.KeyMap$lambda_getNext_2__3091: java.util.function.Function bootstrap$()>();
v20 = virtualinvoke v17.<io.smallrye.config.KeyMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v11, v19);
label5:
v21 = staticinvoke <io.smallrye.config.KeyMap$lambda_getNext_3__3092: java.util.function.Function bootstrap$()>();
v22 = virtualinvoke v20.<io.smallrye.config.KeyMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>("]", v21);
return v22;
label6:
v23 = staticinvoke <io.smallrye.config.KeyMap$lambda_getNext_4__3088: java.util.function.Function bootstrap$()>();
v24 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v1, v23);
return v24;
label7:
v25 = staticinvoke <io.smallrye.config.KeyMap$lambda_getNext_5__3087: java.util.function.Function bootstrap$()>();
v26 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v1, v25);
return v26;
}
public java.lang.Object findRootValue(java.lang.String)
{
io.smallrye.config.NameIterator v2;
io.smallrye.config.KeyMap v0;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 = new io.smallrye.config.NameIterator;
specialinvoke v2.<io.smallrye.config.NameIterator: void <init>(java.lang.String)>(v1);
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object findRootValue(io.smallrye.config.NameIterator)>(v2);
return v3;
}
public java.lang.Object findRootValue(io.smallrye.config.NameIterator)
{
io.smallrye.config.NameIterator v1;
io.smallrye.config.KeyMap v0, v2;
java.lang.Object v3;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.NameIterator;
v2 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(io.smallrye.config.NameIterator)>(v1);
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v2.<io.smallrye.config.KeyMap: java.lang.Object getRootValue()>();
label2:
return v3;
}
public boolean hasRootValue(java.lang.String)
{
io.smallrye.config.NameIterator v2;
io.smallrye.config.KeyMap v0;
java.lang.String v1;
boolean v3;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.String;
v2 = new io.smallrye.config.NameIterator;
specialinvoke v2.<io.smallrye.config.NameIterator: void <init>(java.lang.String)>(v1);
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: boolean hasRootValue(io.smallrye.config.NameIterator)>(v2);
return v3;
}
public boolean hasRootValue(io.smallrye.config.NameIterator)
{
io.smallrye.config.NameIterator v1;
io.smallrye.config.KeyMap v0, v2;
boolean v3, v4;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.NameIterator;
v2 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(io.smallrye.config.NameIterator)>(v1);
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.smallrye.config.KeyMap: boolean hasRootValue()>();
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean hasRootValue(java.lang.Iterable)
{
java.util.Iterator v2;
io.smallrye.config.KeyMap v0, v3;
java.lang.Iterable v1;
boolean v4, v5;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(java.util.Iterator)>(v2);
if v3 == null goto label1;
v4 = virtualinvoke v3.<io.smallrye.config.KeyMap: boolean hasRootValue()>();
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public io.smallrye.config.KeyMap map(java.lang.Object, java.util.function.BiFunction)
{
java.util.IdentityHashMap v3;
java.util.function.BiFunction v2;
io.smallrye.config.KeyMap v0, v4;
java.lang.Object v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.function.BiFunction;
v3 = new java.util.IdentityHashMap;
specialinvoke v3.<java.util.IdentityHashMap: void <init>()>();
v4 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap map(java.lang.Object,java.util.function.BiFunction,java.util.IdentityHashMap)>(v1, v2, v3);
return v4;
}
public io.smallrye.config.KeyMap map(java.util.function.Function)
{
java.util.function.BiFunction v2;
io.smallrye.config.KeyMap v0, v3;
java.util.function.Function v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.common.function.Functions: java.util.function.BiFunction functionBiFunction()>();
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap map(java.lang.Object,java.util.function.BiFunction)>(v1, v2);
return v3;
}
io.smallrye.config.KeyMap map(java.lang.Object, java.util.function.BiFunction, java.util.IdentityHashMap)
{
java.util.function.BiFunction v2;
int v7;
io.smallrye.config.KeyMap v0, v14, v15, v16, v6;
boolean v10, v17, v4;
java.util.IdentityHashMap v3;
java.util.Iterator v9;
java.util.Set v8;
java.lang.Object v1, v11, v12, v13, v18, v19, v5;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.function.BiFunction;
v3 := @parameter2: java.util.IdentityHashMap;
v4 = virtualinvoke v3.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(v0);
if v4 == 0 goto label1;
v5 = virtualinvoke v3.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(v0);
return v5;
label1:
v6 = new io.smallrye.config.KeyMap;
v7 = virtualinvoke v0.<io.smallrye.config.KeyMap: int size()>();
specialinvoke v6.<io.smallrye.config.KeyMap: void <init>(int)>(v7);
virtualinvoke v3.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v6);
v8 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.util.Set entrySet()>();
v9 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
label2:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label3;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getKey()>();
v13 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
v14 = virtualinvoke v13.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap map(java.lang.Object,java.util.function.BiFunction,java.util.IdentityHashMap)>(v1, v2, v3);
virtualinvoke v6.<io.smallrye.config.KeyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v14);
goto label2;
label3:
v15 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getAny()>();
if v15 == null goto label4;
v16 = virtualinvoke v15.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap map(java.lang.Object,java.util.function.BiFunction,java.util.IdentityHashMap)>(v1, v2, v3);
virtualinvoke v6.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap putAny(io.smallrye.config.KeyMap)>(v16);
label4:
v17 = virtualinvoke v0.<io.smallrye.config.KeyMap: boolean hasRootValue()>();
if v17 == 0 goto label5;
v18 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object getRootValue()>();
v19 = interfaceinvoke v2.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v1, v18);
virtualinvoke v6.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v19);
label5:
return v6;
}
public void putAll(io.smallrye.config.KeyMap)
{
io.smallrye.config.KeyMap v0, v1, v10, v11, v12, v14, v15, v9;
boolean v4;
java.util.Iterator v3;
java.util.Set v2;
java.lang.Object v13, v5, v6, v7, v8;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: io.smallrye.config.KeyMap;
v2 = virtualinvoke v1.<io.smallrye.config.KeyMap: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
v8 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v6, v7);
if v8 == null goto label1;
virtualinvoke v8.<io.smallrye.config.KeyMap: void putAll(io.smallrye.config.KeyMap)>(v7);
goto label1;
label2:
v9 = v1.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
if v9 == null goto label4;
v10 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
if v10 != null goto label3;
v11 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getOrCreateAny()>();
v12 = v1.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
v13 = v12.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
virtualinvoke v11.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v13);
label3:
v14 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap getAny()>();
v15 = v1.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
virtualinvoke v14.<io.smallrye.config.KeyMap: void putAll(io.smallrye.config.KeyMap)>(v15);
label4:
return;
}
public void putAll(java.util.Map)
{
io.smallrye.config.KeyMap v0;
boolean v2;
java.util.Map v1;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.util.Map;
v2 = v1 instanceof io.smallrye.config.KeyMap;
if v2 == 0 goto label1;
virtualinvoke v0.<io.smallrye.config.KeyMap: void putAll(io.smallrye.config.KeyMap)>(v1);
goto label2;
label1:
specialinvoke v0.<java.util.HashMap: void putAll(java.util.Map)>(v1);
label2:
return;
}
public java.util.Set keySet()
{
java.util.Iterator v3, v8;
java.util.Set v1, v7;
java.util.HashSet v2;
io.smallrye.config.KeyMap v0, v6;
java.lang.Object v10, v5;
java.lang.String v11;
boolean v12, v4, v9;
v0 := @this: io.smallrye.config.KeyMap;
v1 = specialinvoke v0.<java.util.HashMap: java.util.Set keySet()>();
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label4;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap find(java.lang.String)>(v5);
v7 = virtualinvoke v6.<io.smallrye.config.KeyMap: java.util.Set keySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label2:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label3;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.Object)>(v5, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v11);
goto label2;
label3:
v12 = virtualinvoke v0.<io.smallrye.config.KeyMap: boolean hasRootValue(java.lang.String)>(v5);
if v12 == 0 goto label1;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
goto label1;
label4:
return v2;
}
public java.lang.StringBuilder toString(java.lang.StringBuilder)
{
io.smallrye.config.KeyMap v0, v7;
boolean v13, v8;
java.util.Iterator v6;
java.util.Set v5;
java.lang.Object v10, v12, v14, v16, v18, v2, v3, v9;
java.lang.StringBuilder v1, v11, v15, v17, v19, v4;
v0 := @this: io.smallrye.config.KeyMap;
v1 := @parameter0: java.lang.StringBuilder;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyMap(");
v2 = v0.<io.smallrye.config.KeyMap: java.lang.Object rootValue>;
v3 = <io.smallrye.config.KeyMap: java.lang.Object NO_VALUE>;
if v2 != v3 goto label1;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no value");
goto label2;
label1:
v4 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value=");
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v2);
label2:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") {");
v5 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.util.Set entrySet()>();
v6 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
v7 = v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap any>;
v8 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label5;
v9 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");
v12 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v12.<io.smallrye.config.KeyMap: java.lang.StringBuilder toString(java.lang.StringBuilder)>(v1);
label3:
v13 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label4;
v14 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v15 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
v16 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v17 = virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v16);
virtualinvoke v17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");
v18 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v18.<io.smallrye.config.KeyMap: java.lang.StringBuilder toString(java.lang.StringBuilder)>(v1);
goto label3;
label4:
if v7 == null goto label6;
v19 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(any)=>");
virtualinvoke v7.<io.smallrye.config.KeyMap: java.lang.StringBuilder toString(java.lang.StringBuilder)>(v1);
goto label6;
label5:
if v7 == null goto label6;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(any)=>");
virtualinvoke v7.<io.smallrye.config.KeyMap: java.lang.StringBuilder toString(java.lang.StringBuilder)>(v1);
label6:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
return v1;
}
public java.lang.String toString()
{
io.smallrye.config.KeyMap v0;
java.lang.StringBuilder v1, v2;
java.lang.String v3;
v0 := @this: io.smallrye.config.KeyMap;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<io.smallrye.config.KeyMap: java.lang.StringBuilder toString(java.lang.StringBuilder)>(v1);
v3 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v3;
}
static void <clinit>()
{
io.smallrye.config.KeyMap$1 v0;
v0 = new io.smallrye.config.KeyMap$1;
specialinvoke v0.<io.smallrye.config.KeyMap$1: void <init>()>();
<io.smallrye.config.KeyMap: java.lang.Object NO_VALUE> = v0;
return;
}
}