class io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority extends java.lang.Object implements java.lang.Comparable
{
private final io.smallrye.config.ConfigSourceInterceptorFactory factory;
private final int priority;
void <init>(io.smallrye.config.ConfigSourceInterceptor)
{
io.smallrye.config.ConfigSourceInterceptor v1;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1 v2;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority v0;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptor;
v2 = new io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1;
specialinvoke v2.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1: void <init>(io.smallrye.config.ConfigSourceInterceptor)>(v1);
specialinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: void <init>(io.smallrye.config.ConfigSourceInterceptorFactory)>(v2);
return;
}
void <init>(io.smallrye.config.ConfigSourceInterceptorFactory)
{
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority v0;
int v3;
io.smallrye.config.ConfigSourceInterceptorFactory v1;
java.util.OptionalInt v2;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: io.smallrye.config.ConfigSourceInterceptorFactory factory> = v1;
v2 = interfaceinvoke v1.<io.smallrye.config.ConfigSourceInterceptorFactory: java.util.OptionalInt getPriority()>();
v3 = virtualinvoke v2.<java.util.OptionalInt: int orElse(int)>(5000);
v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: int priority> = v3;
return;
}
io.smallrye.config.ConfigSourceInterceptor getInterceptor(io.smallrye.config.ConfigSourceInterceptorContext)
{
io.smallrye.config.ConfigSourceInterceptor v3;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority v0;
io.smallrye.config.ConfigSourceInterceptorContext v1;
io.smallrye.config.ConfigSourceInterceptorFactory v2;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: io.smallrye.config.ConfigSourceInterceptorFactory factory>;
v3 = interfaceinvoke v2.<io.smallrye.config.ConfigSourceInterceptorFactory: io.smallrye.config.ConfigSourceInterceptor getInterceptor(io.smallrye.config.ConfigSourceInterceptorContext)>(v1);
return v3;
}
int getPriority()
{
int v1;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority v0;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority;
v1 = v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: int priority>;
return v1;
}
public int compareTo(io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority)
{
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority v0, v1;
int v2, v3, v4;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority;
v1 := @parameter0: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority;
v2 = v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: int priority>;
v3 = v1.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: int priority>;
v4 = staticinvoke <java.lang.Integer: int compare(int,int)>(v2, v3);
return v4;
}
private static int getPriority(java.lang.Class)
{
int v2, v6;
java.lang.'annotation'.Annotation v1;
java.lang.Class v0, v3, v4;
boolean v5;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljakarta/annotation/Priority;");
if v1 == null goto label1;
v2 = interfaceinvoke v1.<jakarta.'annotation'.Priority: int value()>();
return v2;
label1:
v3 = virtualinvoke v0.<java.lang.Class: java.lang.Class getSuperclass()>();
v4 = class "Lio/smallrye/config/ConfigSourceInterceptor;";
v5 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v5 == 0 goto label2;
v6 = staticinvoke <io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: int getPriority(java.lang.Class)>(v3);
return v6;
label2:
return 5000;
}
}