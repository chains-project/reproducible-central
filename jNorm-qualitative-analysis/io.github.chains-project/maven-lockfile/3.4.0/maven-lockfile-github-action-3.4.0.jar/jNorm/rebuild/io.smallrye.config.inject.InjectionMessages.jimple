public interface  io.smallrye.config.inject.InjectionMessages extends java.lang.Object
{
public static final io.smallrye.config.inject.InjectionMessages msg;
public abstract io.smallrye.config.inject.ConfigException noConfigValue(java.lang.String, java.lang.String);
public abstract io.smallrye.config.inject.ConfigException retrieveConfigFailure(java.lang.String, java.lang.String, java.lang.String, java.lang.Exception);
public abstract java.lang.IllegalStateException noConfigPropertyDefaultName(jakarta.enterprise.inject.spi.InjectionPoint);
public abstract java.lang.IllegalStateException unhandledConfigProperty();
public abstract java.util.NoSuchElementException propertyNotFound(java.lang.String);
public abstract java.lang.IllegalArgumentException noRawType(java.lang.reflect.Type);
public abstract java.lang.IllegalArgumentException illegalConversion(java.lang.String, java.lang.reflect.Type);
public abstract java.lang.IllegalArgumentException noRegisteredConverter(java.lang.Class);
public static java.lang.String formatInjectionPoint(jakarta.enterprise.inject.spi.InjectionPoint)
{
jakarta.enterprise.inject.spi.InjectionPoint v0;
java.lang.reflect.Member v1;
java.lang.Class v3;
java.lang.StringBuilder v2;
java.lang.String v10, v12, v4, v6, v7, v9;
boolean v11, v5, v8;
v0 := @parameter0: jakarta.enterprise.inject.spi.InjectionPoint;
v1 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.InjectionPoint: java.lang.reflect.Member getMember()>();
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = interfaceinvoke v1.<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
v5 = v1 instanceof java.lang.reflect.Field;
if v5 == 0 goto label1;
v6 = interfaceinvoke v1.<java.lang.reflect.Member: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(".\u0001");
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
goto label3;
label1:
v8 = v1 instanceof java.lang.reflect.Method;
if v8 == 0 goto label2;
v9 = interfaceinvoke v1.<java.lang.reflect.Member: java.lang.String getName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(".\u0001");
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
staticinvoke <io.smallrye.config.inject.InjectionMessages: void appendParameterTypes(java.lang.StringBuilder,java.lang.reflect.Executable)>(v2, v1);
goto label3;
label2:
v11 = v1 instanceof java.lang.reflect.Constructor;
if v11 == 0 goto label3;
staticinvoke <io.smallrye.config.inject.InjectionMessages: void appendParameterTypes(java.lang.StringBuilder,java.lang.reflect.Executable)>(v2, v1);
label3:
v12 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v12;
}
public static void appendParameterTypes(java.lang.StringBuilder, java.lang.reflect.Executable)
{
java.lang.Class[] v2;
java.util.function.Function v4;
java.util.stream.Stream v3, v5;
java.lang.reflect.Executable v1;
java.lang.Object v7;
java.lang.StringBuilder v0;
java.lang.String v8;
java.util.stream.Collector v6;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.reflect.Executable;
v2 = virtualinvoke v1.<java.lang.reflect.Executable: java.lang.Class[] getParameterTypes()>();
v3 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(v2);
v4 = staticinvoke <io.smallrye.config.inject.InjectionMessages$getSimpleName__3069: java.util.function.Function bootstrap$()>();
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v4);
v6 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(", ");
v7 = interfaceinvoke v5.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v6);
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("(\u0001)");
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
return;
}
static void <clinit>()
{
java.lang.Object v0;
v0 = staticinvoke <org.jboss.logging.Messages: java.lang.Object getBundle(java.lang.Class)>(class "Lio/smallrye/config/inject/InjectionMessages;");
<io.smallrye.config.inject.InjectionMessages: io.smallrye.config.inject.InjectionMessages msg> = v0;
return;
}
}