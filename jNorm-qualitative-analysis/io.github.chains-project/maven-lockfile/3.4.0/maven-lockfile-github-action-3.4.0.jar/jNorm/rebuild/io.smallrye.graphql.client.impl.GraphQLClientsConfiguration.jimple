public class io.smallrye.graphql.client.impl.GraphQLClientsConfiguration extends java.lang.Object
{
private static final java.util.Map INSTANCES;
private static volatile boolean singleApplication;
org.eclipse.microprofile.config.Config mpConfig;
private final java.util.Map clients;
public static void setSingleApplication(boolean)
{
boolean v0;
v0 := @parameter0: boolean;
<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: boolean singleApplication> = v0;
return;
}
public static io.smallrye.graphql.client.impl.GraphQLClientsConfiguration getInstance()
{
java.lang.Thread v2;
java.util.Map v3;
java.lang.Object v5;
java.lang.ClassLoader v1;
java.util.function.Function v4;
boolean v0;
v0 = <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: boolean singleApplication>;
if v0 == 0 goto label1;
v1 = null;
goto label2;
label1:
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v1 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label2:
v3 = <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map INSTANCES>;
v4 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$lambda_getInstance_0__687: java.util.function.Function bootstrap$()>();
v5 = interfaceinvoke v3.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v1, v4);
return v5;
}
public static void clear()
{
java.util.Map v0;
v0 = <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map INSTANCES>;
interfaceinvoke v0.<java.util.Map: void clear()>();
return;
}
public void <init>()
{
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v0;
java.util.HashMap v2;
java.lang.Iterable v5;
java.util.HashSet v3;
java.util.Map v12, v17;
int v10;
java.lang.String v11;
boolean v13, v15, v7, v9;
java.util.Iterator v14, v6;
org.eclipse.microprofile.config.Config v1, v4;
java.lang.Object v16, v8;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v18;
v0 := @this: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig> = v1;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map clients> = v2;
v3 = new java.util.HashSet;
specialinvoke v3.<java.util.HashSet: void <init>()>();
v4 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v5 = interfaceinvoke v4.<org.eclipse.microprofile.config.Config: java.lang.Iterable getPropertyNames()>();
v6 = interfaceinvoke v5.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label2;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = virtualinvoke v8.<java.lang.String: boolean matches(java.lang.String)>("^[A-Za-z0-9-_.$]+/mp-graphql/.+$");
if v9 == 0 goto label1;
v10 = virtualinvoke v8.<java.lang.String: int indexOf(java.lang.String)>("/mp-graphql");
v11 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int,int)>(0, v10);
v12 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map clients>;
v13 = interfaceinvoke v12.<java.util.Map: boolean containsKey(java.lang.Object)>(v11);
if v13 != 0 goto label1;
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>(v11);
goto label1;
label2:
v14 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label3:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label4;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map clients>;
v18 = specialinvoke v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientConfiguration readConfigurationByKey(java.lang.String)>(v16);
interfaceinvoke v17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v18);
goto label3;
label4:
return;
}
public io.smallrye.graphql.client.impl.GraphQLClientConfiguration readConfigurationByKey(java.lang.String)
{
java.util.Map v10, v8;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v2;
java.util.ArrayList v14;
java.lang.String v1, v12, v19, v22, v27, v31, v35, v4, v40, v44, v48, v52, v56, v60, v64, v68, v72, v76;
boolean v15, v24, v37;
org.eclipse.microprofile.config.Config v11, v21, v26, v3, v30, v34, v39, v43, v47, v51, v55, v59, v63, v67, v7, v71, v75, v9;
java.util.List v20;
java.util.Optional v13, v23, v28, v32, v36, v41, v45, v49, v5, v53, v57, v61, v65, v69, v73, v77;
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v0;
int v17, v18;
java.util.function.Consumer v50, v54, v58, v6, v62, v66, v70, v74, v78;
java.lang.Object v16, v25, v29, v33, v38, v42, v46;
v0 := @this: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration;
v1 := @parameter0: java.lang.String;
v2 = new io.smallrye.graphql.client.impl.GraphQLClientConfiguration;
specialinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void <init>()>();
v3 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/url");
v5 = interfaceinvoke v3.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v4, class "Ljava/lang/String;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v6 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setUrl__688: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v5.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v6);
v7 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v8 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map getConfiguredHeaders(java.lang.String,org.eclipse.microprofile.config.Config)>(v1, v7);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setHeaders(java.util.Map)>(v8);
v9 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v10 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map getConfiguredInitPayload(java.lang.String,org.eclipse.microprofile.config.Config)>(v1, v9);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setInitPayload(java.util.Map)>(v10);
v11 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/subprotocols");
v13 = interfaceinvoke v11.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v12, class "[Ljava/lang/String;");
v14 = new java.util.ArrayList;
specialinvoke v14.<java.util.ArrayList: void <init>()>();
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setWebsocketSubprotocols(java.util.List)>(v14);
v15 = virtualinvoke v13.<java.util.Optional: boolean isPresent()>();
if v15 == 0 goto label2;
v16 = virtualinvoke v13.<java.util.Optional: java.lang.Object get()>();
v17 = lengthof v16;
v18 = 0;
label1:
if v18 >= v17 goto label2;
v19 = v16[v18];
v20 = virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.List getWebsocketSubprotocols()>();
interfaceinvoke v20.<java.util.List: boolean add(java.lang.Object)>(v19);
v18 = v18 + 1;
goto label1;
label2:
v21 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/truststore");
v23 = interfaceinvoke v21.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v22, class "Ljava/lang/String;");
v24 = virtualinvoke v23.<java.util.Optional: boolean isPresent()>();
if v24 == 0 goto label3;
v25 = virtualinvoke v23.<java.util.Optional: java.lang.Object get()>();
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setTrustStore(java.lang.String)>(v25);
v26 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/truststorePassword");
v28 = interfaceinvoke v26.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v27, class "Ljava/lang/String;");
v29 = virtualinvoke v28.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setTrustStorePassword(java.lang.String)>(v29);
v30 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/truststoreType");
v32 = interfaceinvoke v30.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v31, class "Ljava/lang/String;");
v33 = virtualinvoke v32.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setTrustStoreType(java.lang.String)>(v33);
label3:
v34 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v35 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/keystore");
v36 = interfaceinvoke v34.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v35, class "Ljava/lang/String;");
v37 = virtualinvoke v36.<java.util.Optional: boolean isPresent()>();
if v37 == 0 goto label4;
v38 = virtualinvoke v36.<java.util.Optional: java.lang.Object get()>();
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setKeyStore(java.lang.String)>(v38);
v39 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v40 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/keystorePassword");
v41 = interfaceinvoke v39.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v40, class "Ljava/lang/String;");
v42 = virtualinvoke v41.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setKeyStorePassword(java.lang.String)>(v42);
v43 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v44 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/keystoreType");
v45 = interfaceinvoke v43.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v44, class "Ljava/lang/String;");
v46 = virtualinvoke v45.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setKeyStoreType(java.lang.String)>(v46);
label4:
v47 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v48 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/proxyHost");
v49 = interfaceinvoke v47.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v48, class "Ljava/lang/String;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v50 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setProxyHost__689: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v49.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v50);
v51 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v52 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/proxyPort");
v53 = interfaceinvoke v51.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v52, class "Ljava/lang/Integer;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v54 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setProxyPort__690: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v53.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v54);
v55 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v56 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/proxyUsername");
v57 = interfaceinvoke v55.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v56, class "Ljava/lang/String;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v58 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setProxyUsername__691: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v57.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v58);
v59 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v60 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/proxyPassword");
v61 = interfaceinvoke v59.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v60, class "Ljava/lang/String;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v62 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setProxyPassword__692: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v61.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v62);
v63 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v64 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/maxRedirects");
v65 = interfaceinvoke v63.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v64, class "Ljava/lang/Integer;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v66 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setMaxRedirects__693: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v65.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v66);
v67 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v68 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/websocketInitializationTimeout");
v69 = interfaceinvoke v67.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v68, class "Ljava/lang/Integer;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v70 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setWebsocketInitializationTimeout__694: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v69.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v70);
v71 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v72 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/executeSingleOperationsOverWebsocket");
v73 = interfaceinvoke v71.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v72, class "Ljava/lang/Boolean;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v74 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setExecuteSingleOperationsOverWebsocket__695: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v73.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v74);
v75 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: org.eclipse.microprofile.config.Config mpConfig>;
v76 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/allowUnexpectedResponseFields");
v77 = interfaceinvoke v75.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v76, class "Ljava/lang/Boolean;");
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v78 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$setAllowUnexpectedResponseFields__696: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v77.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v78);
return v2;
}
public void addTypesafeClientApis(java.util.List)
{
java.util.function.Consumer v3;
java.util.List v1;
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v0;
io.smallrye.graphql.client.impl.SmallRyeGraphQLClientLogging v2;
v0 := @this: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration;
v1 := @parameter0: java.util.List;
if v1 != null goto label1;
v2 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientLogging: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientLogging log>;
interfaceinvoke v2.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientLogging: void apisNotSet()>();
return;
label1:
v3 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$initTypesafeClientApi__697: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientsConfiguration)>(v0);
interfaceinvoke v1.<java.util.List: void forEach(java.util.function.Consumer)>(v3);
return;
}
public void initTypesafeClientApi(java.lang.Class)
{
io.smallrye.graphql.client.impl.TypesafeClientConfigurationReader v2;
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v0;
java.util.Map v3;
java.util.function.BiFunction v6;
java.lang.Class v1;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v5;
java.lang.String v4;
v0 := @this: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration;
v1 := @parameter0: java.lang.Class;
v2 = new io.smallrye.graphql.client.impl.TypesafeClientConfigurationReader;
specialinvoke v2.<io.smallrye.graphql.client.impl.TypesafeClientConfigurationReader: void <init>(java.lang.Class)>(v1);
v3 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map clients>;
v4 = virtualinvoke v2.<io.smallrye.graphql.client.impl.TypesafeClientConfigurationReader: java.lang.String getConfigKey()>();
v5 = virtualinvoke v2.<io.smallrye.graphql.client.impl.TypesafeClientConfigurationReader: io.smallrye.graphql.client.impl.GraphQLClientConfiguration getClientConfiguration()>();
v6 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$merge__698: java.util.function.BiFunction bootstrap$()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>(v4, v5, v6);
return;
}
public io.smallrye.graphql.client.impl.GraphQLClientConfiguration getClient(java.lang.String)
{
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v0;
java.util.Map v2;
java.lang.Object v4;
java.lang.String v1;
java.util.function.Function v3;
v0 := @this: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map clients>;
v3 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration$readConfigurationByKey__699: java.util.function.Function bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientsConfiguration)>(v0);
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v1, v3);
return v4;
}
public void addClient(java.lang.String, io.smallrye.graphql.client.impl.GraphQLClientConfiguration)
{
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v0;
java.util.Map v3;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v2;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.smallrye.graphql.client.impl.GraphQLClientConfiguration;
v3 = v0.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map clients>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return;
}
public static java.util.Map getConfiguredHeaders(java.lang.String, org.eclipse.microprofile.config.Config)
{
java.util.Map v3;
java.lang.String v0, v2;
org.eclipse.microprofile.config.Config v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: org.eclipse.microprofile.config.Config;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/header/");
v3 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map extractMapOfString(org.eclipse.microprofile.config.Config,java.lang.String)>(v1, v2);
return v3;
}
public static java.util.Map getConfiguredInitPayload(java.lang.String, org.eclipse.microprofile.config.Config)
{
java.util.Map v4;
java.util.HashMap v2;
java.lang.String v0, v3;
org.eclipse.microprofile.config.Config v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: org.eclipse.microprofile.config.Config;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/initPayload/");
v4 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map extractMapOfString(org.eclipse.microprofile.config.Config,java.lang.String)>(v1, v3);
interfaceinvoke v2.<java.util.Map: void putAll(java.util.Map)>(v4);
return v2;
}
private static java.util.Map extractMapOfString(org.eclipse.microprofile.config.Config, java.lang.String)
{
java.util.Iterator v4;
java.util.HashMap v2;
org.eclipse.microprofile.config.Config v0;
java.lang.Iterable v3;
int v8;
java.lang.Object v10, v6;
java.lang.String v1, v9;
boolean v5, v7;
v0 := @parameter0: org.eclipse.microprofile.config.Config;
v1 := @parameter1: java.lang.String;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v3 = interfaceinvoke v0.<org.eclipse.microprofile.config.Config: java.lang.Iterable getPropertyNames()>();
v4 = interfaceinvoke v3.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v6.<java.lang.String: boolean startsWith(java.lang.String)>(v1);
if v7 == 0 goto label1;
v8 = virtualinvoke v1.<java.lang.String: int length()>();
v9 = virtualinvoke v6.<java.lang.String: java.lang.String substring(int)>(v8);
v10 = interfaceinvoke v0.<org.eclipse.microprofile.config.Config: java.lang.Object getValue(java.lang.String,java.lang.Class)>(v6, class "Ljava/lang/String;");
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v10);
goto label1;
label2:
return v2;
}
static void <clinit>()
{
java.util.WeakHashMap v0;
v0 = new java.util.WeakHashMap;
specialinvoke v0.<java.util.WeakHashMap: void <init>()>();
<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: java.util.Map INSTANCES> = v0;
<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: boolean singleApplication> = 0;
return;
}
}