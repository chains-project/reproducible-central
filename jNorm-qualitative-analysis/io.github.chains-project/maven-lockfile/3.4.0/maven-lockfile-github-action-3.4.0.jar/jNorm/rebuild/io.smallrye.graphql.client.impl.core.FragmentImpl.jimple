public class io.smallrye.graphql.client.impl.core.FragmentImpl extends io.smallrye.graphql.client.impl.core.AbstractFragment
{
public void <init>()
{
io.smallrye.graphql.client.impl.core.FragmentImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.core.FragmentImpl;
specialinvoke v0.<io.smallrye.graphql.client.impl.core.AbstractFragment: void <init>()>();
return;
}
public java.lang.String build() throws io.smallrye.graphql.client.core.exceptions.BuildException
{
java.util.function.Function v9;
io.smallrye.graphql.client.impl.core.FragmentImpl v0;
java.lang.String v16, v3, v6;
java.util.stream.Collector v11;
java.util.function.Consumer v15;
java.util.List v14, v7;
java.util.stream.Stream v10, v8;
java.util.StringJoiner v13;
java.lang.Object v12;
java.lang.StringBuilder v1, v2, v4, v5;
v0 := @this: io.smallrye.graphql.client.impl.core.FragmentImpl;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fragment ");
v3 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FragmentImpl: java.lang.String getName()>();
v4 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");
v6 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FragmentImpl: java.lang.String getTargetType()>();
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
v7 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FragmentImpl: java.util.List getDirectives()>();
v8 = interfaceinvoke v7.<java.util.List: java.util.stream.Stream stream()>();
v9 = staticinvoke <io.smallrye.graphql.client.impl.core.FragmentImpl$build__785: java.util.function.Function bootstrap$()>();
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v9);
v11 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v11);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v12);
v13 = new java.util.StringJoiner;
specialinvoke v13.<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(" ", " {", "}");
v14 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FragmentImpl: java.util.List getFields()>();
v15 = staticinvoke <io.smallrye.graphql.client.impl.core.FragmentImpl$lambda_build_0__786: java.util.function.Consumer bootstrap$(java.util.StringJoiner)>(v13);
interfaceinvoke v14.<java.util.List: void forEach(java.util.function.Consumer)>(v15);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v13);
v16 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v16;
}
}