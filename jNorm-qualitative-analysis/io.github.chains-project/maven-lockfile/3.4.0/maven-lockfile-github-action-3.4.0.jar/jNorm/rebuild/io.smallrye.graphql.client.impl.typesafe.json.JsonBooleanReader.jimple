class io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader extends io.smallrye.graphql.client.impl.typesafe.json.Reader
{
static final boolean $assertionsDisabled;
void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, io.smallrye.graphql.client.impl.typesafe.json.Location, jakarta.json.JsonValue, io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)
{
jakarta.json.JsonValue v3;
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v4;
io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader v0;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
io.smallrye.graphql.client.impl.typesafe.json.Location v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: io.smallrye.graphql.client.impl.typesafe.json.Location;
v3 := @parameter2: jakarta.json.JsonValue;
v4 := @parameter3: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo;
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.Reader: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,io.smallrye.graphql.client.impl.typesafe.json.Location,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v1, v2, v3, v4);
return;
}
java.lang.Object read()
{
jakarta.json.JsonValue v10, v2, v20, v5;
java.lang.AssertionError v8;
jakarta.json.JsonValue$ValueType v21, v22, v3, v4, v6, v7;
java.lang.Boolean v24;
boolean v1, v14, v18, v19, v23;
io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader v0;
java.lang.Class v11, v13, v15, v17;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v12, v16;
io.smallrye.graphql.client.impl.typesafe.json.Location v9;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader;
v1 = <io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: boolean $assertionsDisabled>;
if v1 != 0 goto label1;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: jakarta.json.JsonValue value>;
v3 = interfaceinvoke v2.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v4 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType TRUE>;
if v3 == v4 goto label1;
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: jakarta.json.JsonValue value>;
v6 = interfaceinvoke v5.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v7 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType FALSE>;
if v6 == v7 goto label1;
v8 = new java.lang.AssertionError;
specialinvoke v8.<java.lang.AssertionError: void <init>()>();
throw v8;
label1:
v9 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
v10 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: jakarta.json.JsonValue value>;
v11 = <java.lang.Boolean: java.lang.Class TYPE>;
v12 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v13 = virtualinvoke v12.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.Class getRawType()>();
v14 = virtualinvoke v11.<java.lang.Object: boolean equals(java.lang.Object)>(v13);
if v14 != 0 goto label2;
v15 = class "Ljava/lang/Boolean;";
v16 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v17 = virtualinvoke v16.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.Class getRawType()>();
v18 = virtualinvoke v15.<java.lang.Object: boolean equals(java.lang.Object)>(v17);
if v18 == 0 goto label3;
label2:
v19 = 1;
goto label4;
label3:
v19 = 0;
label4:
staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.GraphQLClientValueHelper: void check(io.smallrye.graphql.client.impl.typesafe.json.Location,java.lang.Object,boolean)>(v9, v10, v19);
v20 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: jakarta.json.JsonValue value>;
v21 = interfaceinvoke v20.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v22 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType TRUE>;
if v21 != v22 goto label5;
v23 = 1;
goto label6;
label5:
v23 = 0;
label6:
v24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v23);
return v24;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/smallrye/graphql/client/impl/typesafe/json/JsonBooleanReader;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.smallrye.graphql.client.impl.typesafe.json.JsonBooleanReader: boolean $assertionsDisabled> = v2;
return;
}
}