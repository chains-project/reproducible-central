public class io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation extends java.lang.Object implements io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement
{
private final io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type;
private final java.lang.reflect.Method method;
private final java.lang.Object[] parameterValues;
private java.util.List parameters;
public static transient io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation of(java.lang.reflect.Method, java.lang.Object[])
{
java.lang.Object[] v1;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v2;
java.lang.Class v4;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v3;
java.lang.reflect.Method v0;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: java.lang.Object[];
v2 = new io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v3 = new io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v4 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
specialinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.reflect.Type)>(null, v4);
specialinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.reflect.Method,java.lang.Object[])>(v3, v0, v1);
return v2;
}
private void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, java.lang.reflect.Method, java.lang.Object[])
{
java.lang.Object[] v3;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
java.lang.reflect.Method v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: java.lang.reflect.Method;
v3 := @parameter2: java.lang.Object[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type> = v1;
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method> = v2;
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.Object[] parameterValues> = v3;
return;
}
public java.lang.String toString()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.String v3, v4;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
java.lang.reflect.Method v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.String)>(v1, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001#\u0001");
return v4;
}
public java.lang.String getKey()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.String v2;
java.lang.reflect.Method v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.String toGenericString()>();
return v2;
}
public io.smallrye.graphql.client.core.OperationType getOperationType()
{
io.smallrye.graphql.client.core.OperationType v3, v6, v7;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.reflect.Method v1, v4;
boolean v2, v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/eclipse/microprofile/graphql/Mutation;");
if v2 == 0 goto label1;
v3 = <io.smallrye.graphql.client.core.OperationType: io.smallrye.graphql.client.core.OperationType MUTATION>;
return v3;
label1:
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v5 = virtualinvoke v4.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Lio/smallrye/graphql/api/Subscription;");
if v5 == 0 goto label2;
v6 = <io.smallrye.graphql.client.core.OperationType: io.smallrye.graphql.client.core.OperationType SUBSCRIPTION>;
return v6;
label2:
v7 = <io.smallrye.graphql.client.core.OperationType: io.smallrye.graphql.client.core.OperationType QUERY>;
return v7;
}
public java.lang.String getName()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.Optional v1;
java.lang.Object v3;
java.util.function.Supplier v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.Optional queryName()>();
v2 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$lambda_getName_1__739: java.util.function.Supplier bootstrap$(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v0);
v3 = virtualinvoke v1.<java.util.Optional: java.lang.Object orElseGet(java.util.function.Supplier)>(v2);
return v3;
}
private java.util.Optional queryName()
{
java.lang.'annotation'.Annotation v2, v8;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.Optional v10, v11, v6;
java.lang.String v3, v5, v9;
java.lang.reflect.Method v1, v7;
boolean v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/eclipse/microprofile/graphql/Query;");
if v2 == null goto label1;
v3 = interfaceinvoke v2.<org.eclipse.microprofile.graphql.Query: java.lang.String value()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = interfaceinvoke v2.<org.eclipse.microprofile.graphql.Query: java.lang.String value()>();
v6 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v5);
return v6;
label1:
v7 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v8 = virtualinvoke v7.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/eclipse/microprofile/graphql/Name;");
if v8 == null goto label2;
v9 = interfaceinvoke v8.<org.eclipse.microprofile.graphql.Name: java.lang.String value()>();
v10 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v9);
return v10;
label2:
v11 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v11;
}
private java.util.Optional mutationName()
{
java.lang.'annotation'.Annotation v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.Optional v6, v7;
java.lang.String v3, v5;
java.lang.reflect.Method v1;
boolean v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/eclipse/microprofile/graphql/Mutation;");
if v2 == null goto label1;
v3 = interfaceinvoke v2.<org.eclipse.microprofile.graphql.Mutation: java.lang.String value()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = interfaceinvoke v2.<org.eclipse.microprofile.graphql.Mutation: java.lang.String value()>();
v6 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v5);
return v6;
label1:
v7 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v7;
}
private java.util.Optional subscriptionName()
{
java.lang.'annotation'.Annotation v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.Optional v6, v7;
java.lang.String v3, v5;
java.lang.reflect.Method v1;
boolean v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/graphql/api/Subscription;");
if v2 == null goto label1;
v3 = interfaceinvoke v2.<io.smallrye.graphql.api.Subscription: java.lang.String value()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = interfaceinvoke v2.<io.smallrye.graphql.api.Subscription: java.lang.String value()>();
v6 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v5);
return v6;
label1:
v7 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v7;
}
public java.lang.String getRawName()
{
char v5, v7, v8;
int v4;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.String v10, v2, v9;
java.lang.reflect.Method v1;
boolean v3, v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.String getName()>();
v3 = virtualinvoke v2.<java.lang.String: boolean startsWith(java.lang.String)>("get");
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<java.lang.String: int length()>();
if v4 <= 3 goto label1;
v5 = virtualinvoke v2.<java.lang.String: char charAt(int)>(3);
v6 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(v5);
if v6 == 0 goto label1;
v7 = virtualinvoke v2.<java.lang.String: char charAt(int)>(3);
v8 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v7);
v9 = virtualinvoke v2.<java.lang.String: java.lang.String substring(int)>(4);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (char,java.lang.String)>(v8, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
return v10;
label1:
return v2;
}
public io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getReturnType()
{
java.lang.reflect.Type v4;
java.lang.reflect.AnnotatedType v6;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1, v2;
java.lang.reflect.Method v3, v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = new io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v4 = virtualinvoke v3.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v6 = virtualinvoke v5.<java.lang.reflect.Method: java.lang.reflect.AnnotatedType getAnnotatedReturnType()>();
specialinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.reflect.Type,java.lang.reflect.AnnotatedType)>(v2, v4, v6);
return v1;
}
public boolean hasValueParameters()
{
java.util.stream.Stream v1;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.Optional v2;
boolean v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream valueParameters()>();
v2 = interfaceinvoke v1.<java.util.stream.Stream: java.util.Optional findAny()>();
v3 = virtualinvoke v2.<java.util.Optional: boolean isPresent()>();
return v3;
}
public boolean hasRootParameters()
{
java.util.stream.Stream v1;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.Optional v2;
boolean v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream rootParameters()>();
v2 = interfaceinvoke v1.<java.util.stream.Stream: java.util.Optional findAny()>();
v3 = virtualinvoke v2.<java.util.Optional: boolean isPresent()>();
return v3;
}
public java.util.stream.Stream headerParameters()
{
java.util.stream.Stream v1, v3;
java.util.function.Predicate v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream parameters()>();
v2 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isHeaderParameter__740: java.util.function.Predicate bootstrap$()>();
v3 = interfaceinvoke v1.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v2);
return v3;
}
public java.util.stream.Stream valueParameters()
{
java.util.stream.Stream v1, v3;
java.util.function.Predicate v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream parameters()>();
v2 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isValueParameter__741: java.util.function.Predicate bootstrap$()>();
v3 = interfaceinvoke v1.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v2);
return v3;
}
public java.util.stream.Stream rootParameters()
{
java.util.stream.Stream v1, v3;
java.util.function.Predicate v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream parameters()>();
v2 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isRootParameter__742: java.util.function.Predicate bootstrap$()>();
v3 = interfaceinvoke v1.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v2);
return v3;
}
public java.util.List nestedParameters(java.lang.String)
{
java.util.function.Predicate v3, v5;
java.util.stream.Stream v2, v4, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Object v8;
java.lang.String v1;
java.util.stream.Collector v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream parameters()>();
v3 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isNestedParameter__743: java.util.function.Predicate bootstrap$()>();
v4 = interfaceinvoke v2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v3);
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$lambda_nestedParameters_2__744: java.util.function.Predicate bootstrap$(java.lang.String)>(v1);
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v5);
v7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v7);
return v8;
}
private java.util.stream.Stream parameters()
{
java.util.stream.IntStream v4;
java.util.List v1, v9;
java.util.stream.Stream v10, v6;
int v3;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Object v8;
java.util.stream.Collector v7;
java.lang.reflect.Method v2;
java.util.function.IntFunction v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.List parameters>;
if v1 != null goto label1;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: int getParameterCount()>();
v4 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, v3);
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$lambda_parameters_3__745: java.util.function.IntFunction bootstrap$(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v0);
v6 = interfaceinvoke v4.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>(v5);
v7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v7);
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.List parameters> = v8;
label1:
v9 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.List parameters>;
v10 = interfaceinvoke v9.<java.util.List: java.util.stream.Stream stream()>();
return v10;
}
public io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getDeclaringType()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
return v1;
}
public java.util.stream.Stream getResolvedAnnotations(java.lang.Class, java.lang.Class)
{
java.util.function.Predicate v7;
java.util.stream.Stream v3, v5, v6, v8;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Class v1, v2;
java.lang.reflect.Method v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream resolveInheritedAnnotations(java.lang.Class,java.lang.Class)>(v1, v2);
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream resolveAnnotations(java.lang.reflect.AnnotatedElement,java.lang.Class)>(v4, v2);
v6 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(v3, v5);
v7 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$nonNull__746: java.util.function.Predicate bootstrap$()>();
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v7);
return v8;
}
private java.util.stream.Stream resolveInheritedAnnotations(java.lang.Class, java.lang.Class)
{
java.lang.Class[] v4;
java.util.stream.Stream v10, v3, v8, v9;
int v5, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Class v1, v2, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream empty()>();
v4 = virtualinvoke v1.<java.lang.Class: java.lang.Class[] getInterfaces()>();
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
v8 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream resolveInheritedAnnotations(java.lang.Class,java.lang.Class)>(v7, v2);
v3 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(v3, v8);
v6 = v6 + 1;
goto label1;
label2:
v9 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream resolveAnnotations(java.lang.reflect.AnnotatedElement,java.lang.Class)>(v1, v2);
v10 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(v3, v9);
return v10;
}
private static java.util.stream.Stream resolveAnnotations(java.lang.reflect.AnnotatedElement, java.lang.Class)
{
java.util.stream.Stream v3, v5, v6;
java.lang.Class v1;
java.lang.'annotation'.Annotation[] v2, v4;
java.lang.reflect.AnnotatedElement v0;
v0 := @parameter0: java.lang.reflect.AnnotatedElement;
v1 := @parameter1: java.lang.Class;
v2 = interfaceinvoke v0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>(v1);
v3 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>(v2);
v4 = interfaceinvoke v0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotations()>();
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream resolveStereotypes(java.lang.'annotation'.Annotation[],java.lang.Class)>(v4, v1);
v6 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(v3, v5);
return v6;
}
private static java.util.stream.Stream resolveStereotypes(java.lang.'annotation'.Annotation[], java.lang.Class)
{
java.util.function.Predicate v5;
java.lang.'annotation'.Annotation[] v0;
java.util.function.Function v3, v7;
java.util.stream.Stream v2, v4, v6, v8;
java.lang.Class v1;
v0 := @parameter0: java.lang.'annotation'.Annotation[];
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>(v0);
v3 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$annotationType__747: java.util.function.Function bootstrap$()>();
v4 = interfaceinvoke v2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v3);
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$lambda_resolveStereotypes_4__748: java.util.function.Predicate bootstrap$()>();
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v5);
v7 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$lambda_resolveStereotypes_5__749: java.util.function.Function bootstrap$(java.lang.Class)>(v1);
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(v7);
return v8;
}
public java.lang.Object invoke(java.lang.Object)
{
java.lang.Throwable v11, v12, v14, v9;
java.lang.Object[] v6;
java.lang.AssertionError v18;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.String v16;
java.lang.reflect.Method v3, v5;
boolean v10, v13;
java.lang.IllegalAccessException v17;
java.lang.RuntimeException v15;
java.security.PrivilegedAction v4;
java.lang.SecurityManager v2;
java.lang.reflect.InvocationTargetException v8;
java.lang.Object v1, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: java.lang.Object;
label1:
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 != null goto label2;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
virtualinvoke v3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
goto label3;
label2:
v4 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$lambda_invoke_6__750: java.security.PrivilegedAction bootstrap$(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v0);
staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v4);
label3:
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v6 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.Object[] parameterValues>;
v7 = virtualinvoke v5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v6);
label4:
return v7;
label5:
v8 := @caughtexception;
v9 = virtualinvoke v8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
v10 = v9 instanceof java.lang.RuntimeException;
if v10 == 0 goto label6;
v11 = virtualinvoke v8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
throw v11;
label6:
v12 = virtualinvoke v8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
v13 = v12 instanceof java.lang.Error;
if v13 == 0 goto label7;
v14 = virtualinvoke v8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
throw v14;
label7:
v15 = new java.lang.RuntimeException;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("can\'t invoke \u0001");
specialinvoke v15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v16, v8);
throw v15;
label8:
v17 := @caughtexception;
v18 = new java.lang.AssertionError;
specialinvoke v18.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("expected to be unreachable", v17);
throw v18;
catch java.lang.reflect.InvocationTargetException from label1 to label4 with label5;
catch java.lang.IllegalAccessException from label1 to label4 with label8;
}
public boolean isStatic()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.function.Function v1;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isStatic__751: java.util.function.Function bootstrap$()>();
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean is(java.util.function.Function)>(v1);
return v2;
}
public boolean isPublic()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.function.Function v1;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isPublic__752: java.util.function.Function bootstrap$()>();
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean is(java.util.function.Function)>(v1);
return v2;
}
public boolean isPackagePrivate()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
boolean v1, v2, v3, v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isPrivate()>();
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isProtected()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isPublic()>();
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isProtected()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.function.Function v1;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isProtected__753: java.util.function.Function bootstrap$()>();
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean is(java.util.function.Function)>(v1);
return v2;
}
public boolean isPrivate()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.util.function.Function v1;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation$isPrivate__754: java.util.function.Function bootstrap$()>();
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean is(java.util.function.Function)>(v1);
return v2;
}
private boolean is(java.util.function.Function)
{
int v3;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Object v5;
java.lang.Integer v4;
java.lang.reflect.Method v2;
java.util.function.Function v1;
boolean v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: int getModifiers()>();
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v5 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v4);
v6 = virtualinvoke v5.<java.lang.Boolean: boolean booleanValue()>();
return v6;
}
public boolean isAccessibleFrom(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.String v5, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1, v10, v4;
boolean v11, v12, v2, v3, v7, v8, v9;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isPublic()>();
if v2 != 0 goto label3;
v3 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isPackagePrivate()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v5 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.String getPackage()>();
v6 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.String getPackage()>();
v7 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v6);
if v7 != 0 goto label3;
label1:
v8 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isPrivate()>();
if v8 != 0 goto label2;
v9 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isProtected()>();
if v9 == 0 goto label4;
label2:
v10 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getDeclaringType()>();
v11 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isNestedIn(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo)>(v10);
if v11 == 0 goto label4;
label3:
v12 = 1;
goto label5;
label4:
v12 = 0;
label5:
return v12;
}
public boolean isSingle()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Class v2;
java.lang.reflect.Method v1;
boolean v3, v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();
v3 = virtualinvoke v2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lio/smallrye/graphql/client/typesafe/api/Multiple;");
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isDeclaredInObject()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Class v2;
java.lang.reflect.Method v1;
boolean v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v3 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Object;");
return v3;
}
public boolean isDeclaredInCloseable()
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v0;
java.lang.Class v2, v5;
java.lang.reflect.Method v1, v4;
boolean v3, v6, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v3 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/io/Closeable;");
if v3 != 0 goto label1;
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.reflect.Method method>;
v5 = virtualinvoke v4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v6 = virtualinvoke v5.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/AutoCloseable;");
if v6 == 0 goto label2;
label1:
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
return v7;
}
}