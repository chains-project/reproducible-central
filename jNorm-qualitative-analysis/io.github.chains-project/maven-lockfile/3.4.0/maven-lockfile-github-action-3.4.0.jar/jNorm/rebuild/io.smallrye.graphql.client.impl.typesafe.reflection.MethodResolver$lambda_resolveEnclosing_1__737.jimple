public final class io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737 extends java.lang.Object implements java.util.function.Function
{
java.lang.String cap0;
public static java.util.function.Function bootstrap$(java.lang.String)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737 v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737;
specialinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737: void <init>(java.lang.String)>(v0);
return v1;
}
public void <init>(java.lang.String)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737 v0;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737: java.lang.String cap0> = v1;
return;
}
public java.lang.Object apply(java.lang.Object)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v3;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737 v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737: java.lang.String cap0>;
v3 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation lambda$resolveEnclosing$1(java.lang.String,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo)>(v2, v1);
return v3;
}
}