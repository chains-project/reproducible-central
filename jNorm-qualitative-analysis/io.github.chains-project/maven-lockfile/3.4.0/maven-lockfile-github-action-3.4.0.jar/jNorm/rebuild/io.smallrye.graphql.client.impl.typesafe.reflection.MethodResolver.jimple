public class io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver extends java.lang.Object
{
private final io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo callerType;
private java.lang.String expression;
public void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, java.lang.String)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver v0;
java.lang.String v2;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo callerType> = v1;
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression> = v2;
return;
}
public io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation resolve()
{
java.util.function.Supplier v11;
int v2, v7;
java.lang.String v1, v17, v18, v3, v4, v6, v8, v9;
boolean v14;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver v0;
java.lang.RuntimeException v15;
java.util.Optional v10;
java.lang.Object v12;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v13, v16, v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression>;
v2 = virtualinvoke v1.<java.lang.String: int lastIndexOf(int)>(46);
if v2 < 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression>;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int,int)>(0, v2);
v5 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo toClass(java.lang.String)>(v4);
v6 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression>;
v7 = v2 + 1;
v8 = virtualinvoke v6.<java.lang.String: java.lang.String substring(int)>(v7);
v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression> = v8;
goto label2;
label1:
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo callerType>;
label2:
v9 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression>;
v10 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.util.Optional resolveEnclosing(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.String)>(v5, v9);
v11 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolve_0__736: java.util.function.Supplier bootstrap$(io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo)>(v0, v5);
v12 = virtualinvoke v10.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>(v11);
v13 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo callerType>;
v14 = virtualinvoke v12.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isAccessibleFrom(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo)>(v13);
if v14 != 0 goto label3;
v15 = new java.lang.RuntimeException;
v16 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo callerType>;
v17 = virtualinvoke v16.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.String getTypeName()>();
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v17, v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 can\'t access \u0001");
specialinvoke v15.<java.lang.RuntimeException: void <init>(java.lang.String)>(v18);
throw v15;
label3:
return v12;
}
private java.util.Optional resolveEnclosing(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, java.lang.String)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver v0;
java.util.function.Predicate v6;
java.util.function.Function v4;
java.util.stream.Stream v3, v5, v7;
java.util.Optional v8;
java.lang.String v2;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.util.stream.Stream enclosingTypes()>();
v4 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$lambda_resolveEnclosing_1__737: java.util.function.Function bootstrap$(java.lang.String)>(v2);
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v4);
v6 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver$nonNull__738: java.util.function.Predicate bootstrap$()>();
v7 = interfaceinvoke v5.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v6);
v8 = interfaceinvoke v7.<java.util.stream.Stream: java.util.Optional findFirst()>();
return v8;
}
private io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo toClass(java.lang.String)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver v0;
java.lang.RuntimeException v7;
java.lang.Thread v2;
java.lang.Class v4;
java.lang.ClassNotFoundException v6;
java.lang.ClassLoader v3;
java.lang.String v1, v8, v9;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label1:
v4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v1, 1, v3);
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo of(java.lang.reflect.Type)>(v4);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = new java.lang.RuntimeException;
v8 = v0.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: java.lang.String expression>;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("class not found for expression \'\u0001\'");
specialinvoke v7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v9, v6);
throw v7;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
}