class io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy extends java.lang.Object
{
private static final org.jboss.logging.Logger log;
private static final jakarta.json.JsonBuilderFactory jsonObjectFactory;
private final java.util.concurrent.ConcurrentMap queryCache;
private final java.util.Map additionalHeaders;
private final java.util.Map initPayload;
private final io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier endpoint;
private final io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier websocketUrl;
private final io.vertx.core.http.HttpClient httpClient;
private final io.vertx.ext.web.client.WebClient webClient;
private final java.util.List subprotocols;
private final java.lang.Integer subscriptionInitializationTimeout;
private final java.lang.Class api;
private final boolean executeSingleOperationsOverWebsocket;
private final boolean allowUnexpectedResponseFields;
private final java.util.concurrent.atomic.AtomicReference webSocketHandler;
void <init>(java.lang.Class, java.util.Map, java.util.Map, java.net.URI, java.lang.String, boolean, io.vertx.core.http.HttpClient, io.vertx.ext.web.client.WebClient, java.util.List, java.lang.Integer, boolean)
{
io.vertx.ext.web.client.WebClient v8;
java.lang.Integer v10;
java.util.concurrent.atomic.AtomicReference v13;
io.smallrye.graphql.client.impl.discovery.StaticURLSupplier v17, v22;
io.smallrye.graphql.client.impl.discovery.StorkServiceURLSupplier v16, v20;
java.util.Map v2, v3;
java.lang.String v14, v18, v5;
java.net.URI v21, v4;
boolean v11, v15, v19, v6;
java.util.concurrent.ConcurrentHashMap v12;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.util.List v9;
java.lang.Class v1;
io.vertx.core.http.HttpClient v7;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.net.URI;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: boolean;
v7 := @parameter6: io.vertx.core.http.HttpClient;
v8 := @parameter7: io.vertx.ext.web.client.WebClient;
v9 := @parameter8: java.util.List;
v10 := @parameter9: java.lang.Integer;
v11 := @parameter10: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v12 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v12.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.concurrent.ConcurrentMap queryCache> = v12;
v13 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v13.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.concurrent.atomic.AtomicReference webSocketHandler> = v13;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.lang.Class api> = v1;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.Map additionalHeaders> = v2;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.Map initPayload> = v3;
if v4 == null goto label2;
v14 = virtualinvoke v4.<java.net.URI: java.lang.String getScheme()>();
v15 = virtualinvoke v14.<java.lang.String: boolean startsWith(java.lang.String)>("stork");
if v15 == 0 goto label1;
v16 = new io.smallrye.graphql.client.impl.discovery.StorkServiceURLSupplier;
specialinvoke v16.<io.smallrye.graphql.client.impl.discovery.StorkServiceURLSupplier: void <init>(java.net.URI,boolean)>(v4, 0);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier endpoint> = v16;
goto label3;
label1:
v17 = new io.smallrye.graphql.client.impl.discovery.StaticURLSupplier;
v18 = virtualinvoke v4.<java.net.URI: java.lang.String toString()>();
specialinvoke v17.<io.smallrye.graphql.client.impl.discovery.StaticURLSupplier: void <init>(java.lang.String)>(v18);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier endpoint> = v17;
goto label3;
label2:
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier endpoint> = null;
label3:
if v5 == null goto label5;
v19 = virtualinvoke v5.<java.lang.String: boolean startsWith(java.lang.String)>("stork");
if v19 == 0 goto label4;
v20 = new io.smallrye.graphql.client.impl.discovery.StorkServiceURLSupplier;
v21 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v5);
specialinvoke v20.<io.smallrye.graphql.client.impl.discovery.StorkServiceURLSupplier: void <init>(java.net.URI,boolean)>(v21, 1);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier websocketUrl> = v20;
goto label6;
label4:
v22 = new io.smallrye.graphql.client.impl.discovery.StaticURLSupplier;
specialinvoke v22.<io.smallrye.graphql.client.impl.discovery.StaticURLSupplier: void <init>(java.lang.String)>(v5);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier websocketUrl> = v22;
goto label6;
label5:
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier websocketUrl> = null;
label6:
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: boolean executeSingleOperationsOverWebsocket> = v6;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.vertx.core.http.HttpClient httpClient> = v7;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.vertx.ext.web.client.WebClient webClient> = v8;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.List subprotocols> = v9;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.lang.Integer subscriptionInitializationTimeout> = v10;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: boolean allowUnexpectedResponseFields> = v11;
return;
}
java.lang.Object invoke(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)
{
io.smallrye.mutiny.groups.UniAwait v21;
io.vertx.core.MultiMap v9;
io.smallrye.mutiny.Multi v18;
io.smallrye.mutiny.Uni v14, v15, v20;
io.vertx.core.http.impl.headers.HeadersMultiMap v4;
java.util.Map v7, v8;
jakarta.json.JsonObject v10;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v5;
boolean v12, v13, v17, v19, v2;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.lang.Class v6;
java.lang.Object v22, v23, v3;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v11, v16;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isDeclaredInObject()>();
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.Object invoke(java.lang.Object)>(v0);
return v3;
label1:
v4 = staticinvoke <io.vertx.core.http.impl.headers.HeadersMultiMap: io.vertx.core.http.impl.headers.HeadersMultiMap headers()>();
v5 = new io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v6 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.lang.Class api>;
v7 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.Map additionalHeaders>;
specialinvoke v5.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: void <init>(java.lang.Class,io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,java.util.Map)>(v6, v1, v7);
v8 = virtualinvoke v5.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.util.Map build()>();
v9 = virtualinvoke v4.<io.vertx.core.http.impl.headers.HeadersMultiMap: io.vertx.core.MultiMap addAll(java.util.Map)>(v8);
v10 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonObject request(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v1);
v11 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getReturnType()>();
v12 = virtualinvoke v11.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isUni()>();
if v12 == 0 goto label3;
v13 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: boolean executeSingleOperationsOverWebsocket>;
if v13 == 0 goto label2;
v14 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.mutiny.Uni executeSingleResultOperationOverWebsocket(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,jakarta.json.JsonObject)>(v1, v10);
return v14;
label2:
v15 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.mutiny.Uni executeSingleResultOperationOverHttpAsync(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,jakarta.json.JsonObject,io.vertx.core.MultiMap)>(v1, v10, v9);
return v15;
label3:
v16 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getReturnType()>();
v17 = virtualinvoke v16.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isMulti()>();
if v17 == 0 goto label4;
v18 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.mutiny.Multi executeSubscriptionOverWebsocket(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,jakarta.json.JsonObject)>(v1, v10);
return v18;
label4:
v19 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: boolean executeSingleOperationsOverWebsocket>;
if v19 == 0 goto label5;
v20 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.mutiny.Uni executeSingleResultOperationOverWebsocket(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,jakarta.json.JsonObject)>(v1, v10);
v21 = interfaceinvoke v20.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v22 = virtualinvoke v21.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v22;
label5:
v23 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.lang.Object executeSingleResultOperationOverHttpSync(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,jakarta.json.JsonObject,io.vertx.core.MultiMap)>(v1, v10, v9);
return v23;
}
private java.lang.Object executeSingleResultOperationOverHttpSync(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, jakarta.json.JsonObject, io.vertx.core.MultiMap)
{
io.vertx.ext.web.client.HttpResponse v5;
org.jboss.logging.Logger v6, v8;
io.vertx.core.MultiMap v3;
java.lang.Integer v13;
java.util.Map v15;
int v12;
jakarta.json.JsonObject v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
java.lang.String v11, v14, v4, v9;
boolean v16, v7;
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v10;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.lang.Object v17;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 := @parameter1: jakarta.json.JsonObject;
v3 := @parameter2: io.vertx.core.MultiMap;
v4 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
v5 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.vertx.ext.web.client.HttpResponse postSync(java.lang.String,io.vertx.core.MultiMap)>(v4, v3);
v6 = <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: org.jboss.logging.Logger log>;
v7 = virtualinvoke v6.<org.jboss.logging.Logger: boolean isTraceEnabled()>();
if v7 == 0 goto label1;
if v5 == null goto label1;
v8 = <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: org.jboss.logging.Logger log>;
v9 = interfaceinvoke v5.<io.vertx.ext.web.client.HttpResponse: java.lang.String bodyAsString()>();
virtualinvoke v8.<org.jboss.logging.Logger: void tracef(java.lang.String,java.lang.Object)>("response graphql: %s", v9);
label1:
v10 = new io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v11 = interfaceinvoke v5.<io.vertx.ext.web.client.HttpResponse: java.lang.String bodyAsString()>();
v12 = interfaceinvoke v5.<io.vertx.ext.web.client.HttpResponse: int statusCode()>();
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v12);
v14 = interfaceinvoke v5.<io.vertx.ext.web.client.HttpResponse: java.lang.String statusMessage()>();
v15 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.Map convertHeaders(io.vertx.core.MultiMap)>(v3);
v16 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: boolean allowUnexpectedResponseFields>;
specialinvoke v10.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map,boolean)>(v1, v11, v13, v14, v15, v16);
v17 = virtualinvoke v10.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.Object read()>();
return v17;
}
private io.smallrye.mutiny.Uni executeSingleResultOperationOverHttpAsync(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, jakarta.json.JsonObject, io.vertx.core.MultiMap)
{
io.vertx.core.MultiMap v3;
java.util.function.Function v8;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
io.smallrye.mutiny.Uni v7, v9;
io.smallrye.mutiny.groups.UniCreate v4;
java.util.concurrent.CompletionStage v6;
jakarta.json.JsonObject v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
java.lang.String v5;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 := @parameter1: jakarta.json.JsonObject;
v3 := @parameter2: io.vertx.core.MultiMap;
v4 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v5 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
v6 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.concurrent.CompletionStage postAsync(java.lang.String,io.vertx.core.MultiMap)>(v5, v3);
v7 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni completionStage(java.util.concurrent.CompletionStage)>(v6);
v8 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSingleResultOperationOverHttpAsync_0__640: java.util.function.Function bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,io.vertx.core.MultiMap)>(v0, v1, v3);
v9 = interfaceinvoke v7.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.Uni map(java.util.function.Function)>(v8);
return v9;
}
private java.util.Map convertHeaders(io.vertx.core.MultiMap)
{
io.vertx.core.MultiMap v1;
java.util.function.Function v4, v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.util.List v2;
java.util.stream.Stream v3;
java.lang.Object v9;
java.util.stream.Collector v6, v7, v8;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.vertx.core.MultiMap;
v2 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.util.List entries()>();
v3 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v4 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$getKey__641: java.util.function.Function bootstrap$()>();
v5 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$getValue__642: java.util.function.Function bootstrap$()>();
v6 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector mapping(java.util.function.Function,java.util.stream.Collector)>(v5, v6);
v8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function,java.util.stream.Collector)>(v4, v7);
v9 = interfaceinvoke v3.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v8);
return v9;
}
private io.smallrye.mutiny.Uni executeSingleResultOperationOverWebsocket(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, jakarta.json.JsonObject)
{
io.smallrye.mutiny.groups.UniOnCancel v8;
java.lang.Runnable v9;
java.util.concurrent.atomic.AtomicReference v3, v4;
java.util.function.Function v12;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
io.smallrye.mutiny.Uni v10, v13, v7;
io.smallrye.mutiny.groups.UniOnItem v11;
java.util.function.Consumer v6;
io.smallrye.mutiny.groups.UniCreate v5;
jakarta.json.JsonObject v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 := @parameter1: jakarta.json.JsonObject;
v3 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v3.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v4 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v5 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v6 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSingleResultOperationOverWebsocket_2__643: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,jakarta.json.JsonObject)>(v0, v4, v3, v2);
v7 = virtualinvoke v5.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni emitter(java.util.function.Consumer)>(v6);
v8 = interfaceinvoke v7.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnCancel onCancellation()>();
v9 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSingleResultOperationOverWebsocket_3__644: java.lang.Runnable bootstrap$(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference)>(v3, v4);
v10 = virtualinvoke v8.<io.smallrye.mutiny.groups.UniOnCancel: io.smallrye.mutiny.Uni invoke(java.lang.Runnable)>(v9);
v11 = interfaceinvoke v10.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v12 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSingleResultOperationOverWebsocket_4__645: java.util.function.Function bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v0, v1);
v13 = virtualinvoke v11.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transform(java.util.function.Function)>(v12);
return v13;
}
private io.smallrye.mutiny.Multi executeSubscriptionOverWebsocket(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, jakarta.json.JsonObject)
{
io.smallrye.mutiny.groups.MultiOnCancel v8;
java.lang.Runnable v9;
java.util.concurrent.atomic.AtomicReference v3, v4;
java.util.function.Function v12;
io.smallrye.mutiny.Multi v10, v13, v7;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.util.function.Consumer v6;
io.smallrye.mutiny.groups.MultiOnItem v11;
io.smallrye.mutiny.groups.MultiCreate v5;
jakarta.json.JsonObject v2;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 := @parameter1: jakarta.json.JsonObject;
v3 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v3.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v4 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v5 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v6 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSubscriptionOverWebsocket_6__646: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,jakarta.json.JsonObject)>(v0, v4, v3, v2);
v7 = virtualinvoke v5.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi emitter(java.util.function.Consumer)>(v6);
v8 = interfaceinvoke v7.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnCancel onCancellation()>();
v9 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSubscriptionOverWebsocket_7__647: java.lang.Runnable bootstrap$(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference)>(v4, v3);
v10 = virtualinvoke v8.<io.smallrye.mutiny.groups.MultiOnCancel: io.smallrye.mutiny.Multi invoke(java.lang.Runnable)>(v9);
v11 = interfaceinvoke v10.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnItem onItem()>();
v12 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_executeSubscriptionOverWebsocket_8__648: java.util.function.Function bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v0, v1);
v13 = virtualinvoke v11.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi transform(java.util.function.Function)>(v12);
return v13;
}
private io.smallrye.mutiny.Uni webSocketHandler()
{
java.lang.Object v3;
java.util.function.UnaryOperator v2;
java.util.concurrent.atomic.AtomicReference v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.concurrent.atomic.AtomicReference webSocketHandler>;
v2 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_webSocketHandler_14__649: java.util.function.UnaryOperator bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy)>(v0);
v3 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object updateAndGet(java.util.function.UnaryOperator)>(v2);
return v3;
}
private jakarta.json.JsonObject request(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)
{
org.jboss.logging.Logger v11;
jakarta.json.JsonBuilderFactory v2;
java.util.function.Function v6;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.util.concurrent.ConcurrentMap v4;
jakarta.json.JsonObjectBuilder v3, v8;
jakarta.json.JsonObject v10;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
java.lang.Object v7;
java.lang.String v12, v5, v9;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 = <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonBuilderFactory jsonObjectFactory>;
v3 = interfaceinvoke v2.<jakarta.json.JsonBuilderFactory: jakarta.json.JsonObjectBuilder createObjectBuilder()>();
v4 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.concurrent.ConcurrentMap queryCache>;
v5 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String getKey()>();
v6 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_request_15__650: java.util.function.Function bootstrap$(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v1);
v7 = interfaceinvoke v4.<java.util.concurrent.ConcurrentMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v5, v6);
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("query", v7);
v8 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonObjectBuilder variables(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v1);
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonObjectBuilder)>("variables", v8);
v9 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String getName()>();
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("operationName", v9);
v10 = interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
v11 = <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: org.jboss.logging.Logger log>;
v12 = virtualinvoke v10.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v11.<org.jboss.logging.Logger: void tracef(java.lang.String,java.lang.Object)>("full graphql request: %s", v12);
return v10;
}
private jakarta.json.JsonObjectBuilder variables(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)
{
java.util.function.Consumer v4;
jakarta.json.JsonObjectBuilder v2;
java.util.stream.Stream v3;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 = staticinvoke <jakarta.json.Json: jakarta.json.JsonObjectBuilder createObjectBuilder()>();
v3 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream valueParameters()>();
v4 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_variables_16__651: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,jakarta.json.JsonObjectBuilder)>(v0, v2);
interfaceinvoke v3.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v4);
return v2;
}
private jakarta.json.JsonValue value(java.lang.Object)
{
jakarta.json.JsonValue v2, v6;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.util.stream.Stream v11;
jakarta.json.JsonObject v12;
java.lang.Class v3;
java.lang.Object v1;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v4;
jakarta.json.JsonArray v10, v8;
boolean v5, v7, v9;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
return v2;
label1:
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo of(java.lang.reflect.Type)>(v3);
v5 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isScalar()>();
if v5 == 0 goto label2;
v6 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonValue scalarValue(java.lang.Object)>(v1);
return v6;
label2:
v7 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isCollection()>();
if v7 == 0 goto label3;
v8 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonArray arrayValue(java.lang.Object)>(v1);
return v8;
label3:
v9 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isMap()>();
if v9 == 0 goto label4;
v10 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonArray mapValue(java.lang.Object)>(v1);
return v10;
label4:
v11 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.util.stream.Stream fields()>();
v12 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonObject objectValue(java.lang.Object,java.util.stream.Stream)>(v1, v11);
return v12;
}
private jakarta.json.JsonValue scalarValue(java.lang.Object)
{
jakarta.json.JsonValue v13, v33, v37, v41;
boolean v11, v12, v14, v16, v18, v2, v20, v22, v24, v26, v28, v30, v31, v34, v35, v38, v39, v4, v8;
java.time.Instant v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
jakarta.json.JsonNumber v15, v17, v19, v21, v23, v25, v27, v29;
long v36;
int v32;
java.lang.String v42, v6, v9;
double v40;
java.lang.Object v1;
jakarta.json.JsonString v10, v3, v43, v7;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.lang.String;
if v2 == 0 goto label01;
v3 = staticinvoke <jakarta.json.Json: jakarta.json.JsonString createValue(java.lang.String)>(v1);
return v3;
label01:
v4 = v1 instanceof java.util.Date;
if v4 == 0 goto label02;
v5 = virtualinvoke v1.<java.util.Date: java.time.Instant toInstant()>();
v6 = virtualinvoke v5.<java.time.Instant: java.lang.String toString()>();
v7 = staticinvoke <jakarta.json.Json: jakarta.json.JsonString createValue(java.lang.String)>(v6);
return v7;
label02:
v8 = v1 instanceof java.lang.Enum;
if v8 == 0 goto label03;
v9 = virtualinvoke v1.<java.lang.Enum: java.lang.String name()>();
v10 = staticinvoke <jakarta.json.Json: jakarta.json.JsonString createValue(java.lang.String)>(v9);
return v10;
label03:
v11 = v1 instanceof java.lang.Boolean;
if v11 == 0 goto label06;
v12 = virtualinvoke v1.<java.lang.Boolean: boolean booleanValue()>();
if v12 == 0 goto label04;
v13 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
goto label05;
label04:
v13 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
label05:
return v13;
label06:
v14 = v1 instanceof java.lang.Byte;
if v14 == 0 goto label07;
v15 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.lang.Number)>(v1);
return v15;
label07:
v16 = v1 instanceof java.lang.Short;
if v16 == 0 goto label08;
v17 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.lang.Number)>(v1);
return v17;
label08:
v18 = v1 instanceof java.lang.Integer;
if v18 == 0 goto label09;
v19 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.lang.Number)>(v1);
return v19;
label09:
v20 = v1 instanceof java.lang.Long;
if v20 == 0 goto label10;
v21 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.lang.Number)>(v1);
return v21;
label10:
v22 = v1 instanceof java.lang.Double;
if v22 == 0 goto label11;
v23 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.lang.Number)>(v1);
return v23;
label11:
v24 = v1 instanceof java.lang.Float;
if v24 == 0 goto label12;
v25 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.lang.Number)>(v1);
return v25;
label12:
v26 = v1 instanceof java.math.BigInteger;
if v26 == 0 goto label13;
v27 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.math.BigInteger)>(v1);
return v27;
label13:
v28 = v1 instanceof java.math.BigDecimal;
if v28 == 0 goto label14;
v29 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(java.math.BigDecimal)>(v1);
return v29;
label14:
v30 = v1 instanceof java.util.OptionalInt;
if v30 == 0 goto label17;
v31 = virtualinvoke v1.<java.util.OptionalInt: boolean isPresent()>();
if v31 == 0 goto label15;
v32 = virtualinvoke v1.<java.util.OptionalInt: int getAsInt()>();
v33 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(int)>(v32);
goto label16;
label15:
v33 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
label16:
return v33;
label17:
v34 = v1 instanceof java.util.OptionalLong;
if v34 == 0 goto label20;
v35 = virtualinvoke v1.<java.util.OptionalLong: boolean isPresent()>();
if v35 == 0 goto label18;
v36 = virtualinvoke v1.<java.util.OptionalLong: long getAsLong()>();
v37 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(long)>(v36);
goto label19;
label18:
v37 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
label19:
return v37;
label20:
v38 = v1 instanceof java.util.OptionalDouble;
if v38 == 0 goto label23;
v39 = virtualinvoke v1.<java.util.OptionalDouble: boolean isPresent()>();
if v39 == 0 goto label21;
v40 = virtualinvoke v1.<java.util.OptionalDouble: double getAsDouble()>();
v41 = staticinvoke <jakarta.json.Json: jakarta.json.JsonNumber createValue(double)>(v40);
goto label22;
label21:
v41 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
label22:
return v41;
label23:
v42 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v43 = staticinvoke <jakarta.json.Json: jakarta.json.JsonString createValue(java.lang.String)>(v42);
return v43;
}
private jakarta.json.JsonArray arrayValue(java.lang.Object)
{
java.util.function.Consumer v4;
java.util.Collection v3;
jakarta.json.JsonArrayBuilder v2;
java.lang.Object v1;
jakarta.json.JsonArray v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <jakarta.json.Json: jakarta.json.JsonArrayBuilder createArrayBuilder()>();
v3 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.Collection values(java.lang.Object)>(v1);
v4 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_arrayValue_17__652: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,jakarta.json.JsonArrayBuilder)>(v0, v2);
interfaceinvoke v3.<java.util.Collection: void forEach(java.util.function.Consumer)>(v4);
v5 = interfaceinvoke v2.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
return v5;
}
private jakarta.json.JsonArray mapValue(java.lang.Object)
{
jakarta.json.JsonArrayBuilder v2;
java.util.function.BiConsumer v3;
java.lang.Object v1;
jakarta.json.JsonArray v4;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <jakarta.json.Json: jakarta.json.JsonArrayBuilder createArrayBuilder()>();
v3 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_mapValue_18__653: java.util.function.BiConsumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,jakarta.json.JsonArrayBuilder)>(v0, v2);
interfaceinvoke v1.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v3);
v4 = interfaceinvoke v2.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
return v4;
}
private java.util.Collection values(java.lang.Object)
{
java.lang.Class v2;
java.lang.Object v1;
boolean v3;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: boolean isArray()>();
if v3 == 0 goto label1;
specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.List array(java.lang.Object)>(v1);
label1:
return v1;
}
private java.util.List array(java.lang.Object)
{
java.util.List v5, v6;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v4;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.Class getComponentType()>();
v4 = virtualinvoke v3.<java.lang.Class: boolean isPrimitive()>();
if v4 == 0 goto label1;
v5 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.util.List primitiveArray(java.lang.Object)>(v1);
return v5;
label1:
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v6;
}
private java.util.List primitiveArray(java.lang.Object)
{
int v2, v4;
java.lang.Object v1, v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
java.util.ArrayList v3;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(v1);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>(int)>(v2);
v4 = 0;
label1:
if v4 >= v2 goto label2;
v5 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(v1, v4);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v5);
v4 = v4 + 1;
goto label1;
label2:
return v3;
}
private jakarta.json.JsonObject objectValue(java.lang.Object, java.util.stream.Stream)
{
java.util.function.Consumer v4;
jakarta.json.JsonObjectBuilder v3;
java.util.stream.Stream v2;
jakarta.json.JsonObject v5;
java.lang.Object v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.stream.Stream;
v3 = staticinvoke <jakarta.json.Json: jakarta.json.JsonObjectBuilder createObjectBuilder()>();
v4 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_objectValue_19__654: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,java.lang.Object,jakarta.json.JsonObjectBuilder)>(v0, v1, v3);
interfaceinvoke v2.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v4);
v5 = interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
return v5;
}
private java.util.concurrent.CompletionStage postAsync(java.lang.String, io.vertx.core.MultiMap)
{
io.vertx.core.MultiMap v2;
java.util.concurrent.CompletableFuture v5, v7;
java.util.function.Function v6;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
io.smallrye.mutiny.Uni v4;
io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier v3;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.MultiMap;
v3 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier endpoint>;
v4 = interfaceinvoke v3.<io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier: io.smallrye.mutiny.Uni get()>();
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Uni: java.util.concurrent.CompletableFuture subscribeAsCompletionStage()>();
v6 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy$lambda_postAsync_20__655: java.util.function.Function bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy,io.vertx.core.MultiMap,java.lang.String)>(v0, v2, v1);
v7 = virtualinvoke v5.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenCompose(java.util.function.Function)>(v6);
return v7;
}
private io.vertx.ext.web.client.HttpResponse postSync(java.lang.String, io.vertx.core.MultiMap)
{
io.smallrye.mutiny.groups.UniAwait v6;
io.vertx.ext.web.client.WebClient v3;
io.vertx.core.MultiMap v2;
java.util.concurrent.CompletableFuture v13;
io.smallrye.mutiny.Uni v5;
io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier v4;
java.lang.String v1;
java.lang.RuntimeException v16;
io.vertx.core.Future v11;
java.lang.Exception v15;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
io.vertx.ext.web.client.HttpRequest v8, v9;
java.util.concurrent.CompletionStage v12;
io.vertx.core.buffer.Buffer v10;
java.lang.Object v14, v7;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.MultiMap;
v3 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.vertx.ext.web.client.WebClient webClient>;
v4 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier endpoint>;
v5 = interfaceinvoke v4.<io.smallrye.graphql.client.impl.discovery.ServiceURLSupplier: io.smallrye.mutiny.Uni get()>();
v6 = interfaceinvoke v5.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v7 = virtualinvoke v6.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
v8 = interfaceinvoke v3.<io.vertx.ext.web.client.WebClient: io.vertx.ext.web.client.HttpRequest postAbs(java.lang.String)>(v7);
v9 = interfaceinvoke v8.<io.vertx.ext.web.client.HttpRequest: io.vertx.ext.web.client.HttpRequest putHeaders(io.vertx.core.MultiMap)>(v2);
v10 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(java.lang.String)>(v1);
v11 = interfaceinvoke v9.<io.vertx.ext.web.client.HttpRequest: io.vertx.core.Future sendBuffer(io.vertx.core.buffer.Buffer)>(v10);
label1:
v12 = interfaceinvoke v11.<io.vertx.core.Future: java.util.concurrent.CompletionStage toCompletionStage()>();
v13 = interfaceinvoke v12.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletableFuture toCompletableFuture()>();
v14 = virtualinvoke v13.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();
label2:
return v14;
label3:
v15 := @caughtexception;
v16 = new java.lang.RuntimeException;
specialinvoke v16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Request failed", v15);
throw v16;
catch java.lang.InterruptedException from label1 to label2 with label3;
catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
}
void close()
{
java.lang.Throwable v2, v5;
io.vertx.ext.web.client.WebClient v4;
org.jboss.logging.Logger v3, v6;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v0;
io.vertx.core.http.HttpClient v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
label1:
v1 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.vertx.core.http.HttpClient httpClient>;
interfaceinvoke v1.<io.vertx.core.http.HttpClient: io.vertx.core.Future close()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
v3 = <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: org.jboss.logging.Logger log>;
virtualinvoke v3.<org.jboss.logging.Logger: void warn(java.lang.Object)>(v2);
label4:
v4 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: io.vertx.ext.web.client.WebClient webClient>;
interfaceinvoke v4.<io.vertx.ext.web.client.WebClient: void close()>();
label5:
goto label7;
label6:
v5 := @caughtexception;
v6 = <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: org.jboss.logging.Logger log>;
virtualinvoke v6.<org.jboss.logging.Logger: void warn(java.lang.Object)>(v5);
label7:
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch java.lang.Throwable from label4 to label5 with label6;
}
static void <clinit>()
{
jakarta.json.JsonBuilderFactory v1;
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/smallrye/graphql/client/vertx/typesafe/VertxTypesafeGraphQLClientProxy;");
<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: org.jboss.logging.Logger log> = v0;
v1 = staticinvoke <jakarta.json.Json: jakarta.json.JsonBuilderFactory createBuilderFactory(java.util.Map)>(null);
<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: jakarta.json.JsonBuilderFactory jsonObjectFactory> = v1;
return;
}
}