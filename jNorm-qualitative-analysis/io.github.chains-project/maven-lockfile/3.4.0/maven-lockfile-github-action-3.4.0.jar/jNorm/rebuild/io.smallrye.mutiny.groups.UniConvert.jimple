public class io.smallrye.mutiny.groups.UniConvert extends java.lang.Object
{
private final io.smallrye.mutiny.Uni upstream;
public void <init>(io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniConvert v0;
java.lang.Object v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniConvert;
v1 := @parameter0: io.smallrye.mutiny.Uni;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.UniConvert: io.smallrye.mutiny.Uni upstream> = v2;
return;
}
public java.lang.Object 'with'(java.util.function.Function)
{
io.smallrye.mutiny.groups.UniConvert v0;
java.lang.Object v2, v4;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniConvert;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "converter");
v3 = v0.<io.smallrye.mutiny.groups.UniConvert: io.smallrye.mutiny.Uni upstream>;
v4 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
return v4;
}
public java.util.concurrent.CompletionStage toCompletionStage()
{
io.smallrye.mutiny.groups.UniConvert v0;
java.lang.Object v2;
io.smallrye.mutiny.converters.uni.ToCompletionStage v1;
v0 := @this: io.smallrye.mutiny.groups.UniConvert;
v1 = staticinvoke <io.smallrye.mutiny.converters.uni.BuiltinConverters: io.smallrye.mutiny.converters.uni.ToCompletionStage toCompletionStage()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniConvert: java.lang.Object 'with'(java.util.function.Function)>(v1);
return v2;
}
public java.util.concurrent.CompletableFuture toCompletableFuture()
{
io.smallrye.mutiny.converters.uni.ToCompletableFuture v1;
io.smallrye.mutiny.groups.UniConvert v0;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniConvert;
v1 = staticinvoke <io.smallrye.mutiny.converters.uni.BuiltinConverters: io.smallrye.mutiny.converters.uni.ToCompletableFuture toCompletableFuture()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniConvert: java.lang.Object 'with'(java.util.function.Function)>(v1);
return v2;
}
public java.util.concurrent.Flow$Publisher toPublisher()
{
io.smallrye.mutiny.groups.UniConvert v0;
java.lang.Object v2;
io.smallrye.mutiny.converters.uni.ToPublisher v1;
v0 := @this: io.smallrye.mutiny.groups.UniConvert;
v1 = staticinvoke <io.smallrye.mutiny.converters.uni.BuiltinConverters: io.smallrye.mutiny.converters.uni.ToPublisher toPublisher()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniConvert: java.lang.Object 'with'(java.util.function.Function)>(v1);
return v2;
}
}