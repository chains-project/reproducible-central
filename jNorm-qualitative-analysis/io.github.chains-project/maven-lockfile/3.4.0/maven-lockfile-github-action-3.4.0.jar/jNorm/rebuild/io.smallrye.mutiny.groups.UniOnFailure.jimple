public class io.smallrye.mutiny.groups.UniOnFailure extends java.lang.Object
{
private final io.smallrye.mutiny.Uni upstream;
private final java.util.function.Predicate predicate;
public void <init>(io.smallrye.mutiny.Uni, java.util.function.Predicate)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Predicate v2, v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: java.util.function.Predicate;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni upstream> = v1;
if v2 != null goto label1;
v3 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_new_0__2955: java.util.function.Predicate bootstrap$()>();
goto label2;
label1:
v3 = v2;
label2:
v0.<io.smallrye.mutiny.groups.UniOnFailure: java.util.function.Predicate predicate> = v3;
return;
}
public io.smallrye.mutiny.Uni invoke(java.util.function.Consumer)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Predicate v6;
io.smallrye.mutiny.operators.uni.UniOnItemConsume v4;
io.smallrye.mutiny.Uni v5, v7;
java.util.function.Consumer v1, v3;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.UniOnItemConsume;
v5 = v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni upstream>;
v6 = v0.<io.smallrye.mutiny.groups.UniOnFailure: java.util.function.Predicate predicate>;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniOnItemConsume: void <init>(io.smallrye.mutiny.Uni,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Predicate)>(v5, null, v3, v6);
v7 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v7;
}
public io.smallrye.mutiny.Uni invoke(java.lang.Runnable)
{
java.util.function.Consumer v3;
io.smallrye.mutiny.groups.UniOnFailure v0;
java.lang.Object v2;
java.lang.Runnable v1;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_invoke_1__2956: java.util.function.Consumer bootstrap$(java.lang.Runnable)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni invoke(java.util.function.Consumer)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni call(java.util.function.Function)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.lang.Object v2;
java.util.function.Function v1, v3, v4;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "action");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_call_4__2957: java.util.function.Function bootstrap$(java.util.function.Function)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni call(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_call_5__2958: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni call(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni transform(java.util.function.Function)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Predicate v6;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Uni v5, v7;
java.lang.Object v2;
io.smallrye.mutiny.operators.uni.UniOnFailureTransform v4;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.UniOnFailureTransform;
v5 = v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni upstream>;
v6 = v0.<io.smallrye.mutiny.groups.UniOnFailure: java.util.function.Predicate predicate>;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniOnFailureTransform: void <init>(io.smallrye.mutiny.Uni,java.util.function.Predicate,java.util.function.Function)>(v5, v6, v3);
v7 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v7;
}
public io.smallrye.mutiny.Uni recoverWithItem(java.lang.Object)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.lang.Object v1;
java.util.function.Supplier v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_recoverWithItem_6__2959: java.util.function.Supplier bootstrap$(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_recoverWithItem_7__2960: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Function)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Predicate v6;
io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap v4;
java.util.function.Function v1, v3, v7;
io.smallrye.mutiny.Uni v5, v8;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "function");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap;
v5 = v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni upstream>;
v6 = v0.<io.smallrye.mutiny.groups.UniOnFailure: java.util.function.Predicate predicate>;
v7 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_recoverWithItem_8__2961: java.util.function.Function bootstrap$(java.util.function.Function)>(v3);
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap: void <init>(io.smallrye.mutiny.Uni,java.util.function.Predicate,java.util.function.Function)>(v5, v6, v7);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v8;
}
public io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Function)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Predicate v6;
io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap v4;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Uni v5, v7;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "function");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap;
v5 = v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni upstream>;
v6 = v0.<io.smallrye.mutiny.groups.UniOnFailure: java.util.function.Predicate predicate>;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap: void <init>(io.smallrye.mutiny.Uni,java.util.function.Predicate,java.util.function.Function)>(v5, v6, v3);
v7 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v7;
}
public io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_recoverWithUni_9__2962: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni recoverWithUni(io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Uni v1, v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_recoverWithUni_10__2963: java.util.function.Supplier bootstrap$(io.smallrye.mutiny.Uni)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.groups.UniRetry retry()
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Predicate v3;
io.smallrye.mutiny.groups.UniRetry v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 = new io.smallrye.mutiny.groups.UniRetry;
v2 = v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni upstream>;
v3 = v0.<io.smallrye.mutiny.groups.UniOnFailure: java.util.function.Predicate predicate>;
specialinvoke v1.<io.smallrye.mutiny.groups.UniRetry: void <init>(io.smallrye.mutiny.Uni,java.util.function.Predicate)>(v2, v3);
return v1;
}
public io.smallrye.mutiny.Uni recoverWithNull()
{
io.smallrye.mutiny.groups.UniOnFailure v0;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.groups.UniOnFailure;
v1 = staticinvoke <io.smallrye.mutiny.groups.UniOnFailure$lambda_recoverWithNull_11__2964: java.util.function.Function bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Function)>(v1);
return v2;
}
}