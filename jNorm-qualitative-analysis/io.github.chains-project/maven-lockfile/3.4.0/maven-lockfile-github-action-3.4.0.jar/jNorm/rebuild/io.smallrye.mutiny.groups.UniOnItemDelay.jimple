public class io.smallrye.mutiny.groups.UniOnItemDelay extends java.lang.Object
{
private final io.smallrye.mutiny.Uni upstream;
private java.util.concurrent.ScheduledExecutorService executor;
public void <init>(io.smallrye.mutiny.Uni, java.util.concurrent.ScheduledExecutorService)
{
java.util.concurrent.ScheduledExecutorService v2, v3;
io.smallrye.mutiny.groups.UniOnItemDelay v0;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniOnItemDelay;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: java.util.concurrent.ScheduledExecutorService;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.groups.UniOnItemDelay: io.smallrye.mutiny.Uni upstream> = v1;
if v2 != null goto label1;
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.ScheduledExecutorService getDefaultWorkerPool()>();
goto label2;
label1:
v3 = v2;
label2:
v0.<io.smallrye.mutiny.groups.UniOnItemDelay: java.util.concurrent.ScheduledExecutorService executor> = v3;
return;
}
public io.smallrye.mutiny.groups.UniOnItemDelay onExecutor(java.util.concurrent.ScheduledExecutorService)
{
java.util.concurrent.ScheduledExecutorService v1;
java.lang.Object v2;
io.smallrye.mutiny.groups.UniOnItemDelay v0;
v0 := @this: io.smallrye.mutiny.groups.UniOnItemDelay;
v1 := @parameter0: java.util.concurrent.ScheduledExecutorService;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "executor");
v0.<io.smallrye.mutiny.groups.UniOnItemDelay: java.util.concurrent.ScheduledExecutorService executor> = v2;
return v0;
}
public io.smallrye.mutiny.Uni by(java.time.Duration)
{
io.smallrye.mutiny.operators.uni.UniDelayOnItem v2;
java.time.Duration v1;
java.util.concurrent.ScheduledExecutorService v4;
io.smallrye.mutiny.groups.UniOnItemDelay v0;
io.smallrye.mutiny.Uni v3, v5;
v0 := @this: io.smallrye.mutiny.groups.UniOnItemDelay;
v1 := @parameter0: java.time.Duration;
v2 = new io.smallrye.mutiny.operators.uni.UniDelayOnItem;
v3 = v0.<io.smallrye.mutiny.groups.UniOnItemDelay: io.smallrye.mutiny.Uni upstream>;
v4 = v0.<io.smallrye.mutiny.groups.UniOnItemDelay: java.util.concurrent.ScheduledExecutorService executor>;
specialinvoke v2.<io.smallrye.mutiny.operators.uni.UniDelayOnItem: void <init>(io.smallrye.mutiny.Uni,java.time.Duration,java.util.concurrent.ScheduledExecutorService)>(v3, v1, v4);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v2);
return v5;
}
public io.smallrye.mutiny.Uni until(java.util.function.Function)
{
io.smallrye.mutiny.operators.uni.UniDelayUntil v4;
io.smallrye.mutiny.groups.UniOnItemDelay v0;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Uni v5, v7;
java.util.concurrent.ScheduledExecutorService v6;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniOnItemDelay;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "function");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.UniDelayUntil;
v5 = v0.<io.smallrye.mutiny.groups.UniOnItemDelay: io.smallrye.mutiny.Uni upstream>;
v6 = v0.<io.smallrye.mutiny.groups.UniOnItemDelay: java.util.concurrent.ScheduledExecutorService executor>;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniDelayUntil: void <init>(io.smallrye.mutiny.Uni,java.util.function.Function,java.util.concurrent.ScheduledExecutorService)>(v5, v3, v6);
v7 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v7;
}
}