public class io.smallrye.mutiny.helpers.ParameterValidation extends java.lang.Object
{
public static final java.lang.String SUPPLIER_PRODUCED_NULL;
public static final java.lang.String MAPPER_RETURNED_NULL;
private void <init>()
{
io.smallrye.mutiny.helpers.ParameterValidation v0;
v0 := @this: io.smallrye.mutiny.helpers.ParameterValidation;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.time.Duration validate(java.time.Duration, java.lang.String)
{
java.lang.Object[] v3, v8;
java.lang.IllegalArgumentException v2, v7;
java.time.Duration v0;
java.lang.String v1, v4, v9;
boolean v5, v6;
v0 := @parameter0: java.time.Duration;
v1 := @parameter1: java.lang.String;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "name");
if v0 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must not be `null`", v3);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
v5 = virtualinvoke v0.<java.time.Duration: boolean isZero()>();
if v5 != 0 goto label2;
v6 = virtualinvoke v0.<java.time.Duration: boolean isNegative()>();
if v6 == 0 goto label3;
label2:
v7 = new java.lang.IllegalArgumentException;
v8 = newarray (java.lang.Object)[1];
v8[0] = v1;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must be greater than zero`", v8);
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v7;
label3:
return v0;
}
public static java.lang.Object nonNull(java.lang.Object, java.lang.String)
{
java.lang.Object[] v3;
java.lang.Object v0;
java.lang.String v1, v4;
java.lang.IllegalArgumentException v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String;
if v0 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must not be `null`", v3);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
return v0;
}
public static java.lang.Object nonNullNpe(java.lang.Object, java.lang.String)
{
java.lang.Object[] v3;
java.lang.Object v0;
java.lang.String v1, v4;
java.lang.NullPointerException v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String;
if v0 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must not be `null`", v3);
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
return v0;
}
public static long positive(long, java.lang.String)
{
java.lang.Object[] v4;
byte v2;
long v0;
java.lang.String v1, v5;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: long;
v1 := @parameter1: java.lang.String;
v2 = v0 cmp 0L;
if v2 > 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must be greater than zero`", v4);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
return v0;
}
public static int positive(int, java.lang.String)
{
java.lang.Object[] v3;
int v0;
java.lang.String v1, v4;
java.lang.IllegalArgumentException v2;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
if v0 > 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must be greater than zero", v3);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
return v0;
}
public static int positiveOrZero(int, java.lang.String)
{
java.lang.Object[] v3;
int v0;
java.lang.String v1, v4;
java.lang.IllegalArgumentException v2;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
if v0 >= 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must be positive", v3);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
return v0;
}
public static long positiveOrZero(long, java.lang.String)
{
java.lang.Object[] v4;
byte v2;
long v0;
java.lang.String v1, v5;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: long;
v1 := @parameter1: java.lang.String;
v2 = v0 cmp 0L;
if v2 >= 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must be positive", v4);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
return v0;
}
public static java.lang.Iterable doesNotContainNull(java.lang.Iterable, java.lang.String)
{
java.util.function.Consumer v2;
java.lang.String v1;
java.lang.Iterable v0;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: java.lang.String;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, v1);
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation$lambda_doesNotContainNull_0__2745: java.util.function.Consumer bootstrap$(java.lang.String)>(v1);
interfaceinvoke v0.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v2);
return v0;
}
public static java.lang.Object[] doesNotContainNull(java.lang.Object[], java.lang.String)
{
java.lang.Object[] v0, v6;
java.lang.IllegalArgumentException v5;
int v2, v3;
java.lang.Object v4;
java.lang.String v1, v7;
v0 := @parameter0: java.lang.Object[];
v1 := @parameter1: java.lang.String;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, v1);
v2 = 0;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 != null goto label2;
v5 = new java.lang.IllegalArgumentException;
v6 = newarray (java.lang.Object)[1];
v6[0] = v1;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` contains a `null` value", v6);
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v5;
label2:
v2 = v2 + 1;
goto label1;
label3:
return v0;
}
public static java.util.Collection isNotEmpty(java.util.Collection, java.lang.String)
{
java.lang.Object[] v4;
java.util.Collection v0;
int v2;
java.lang.String v1, v5;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: java.util.Collection;
v1 := @parameter1: java.lang.String;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, v1);
v2 = interfaceinvoke v0.<java.util.Collection: int size()>();
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must not be empty", v4);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
return v0;
}
public static java.util.Collection size(java.util.Collection, int, java.lang.String)
{
java.lang.Object[] v5;
java.util.Collection v0;
java.lang.IllegalArgumentException v4;
java.lang.Integer v6, v8;
int v1, v3, v7;
java.lang.String v2, v9;
v0 := @parameter0: java.util.Collection;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.String;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, v2);
v3 = interfaceinvoke v0.<java.util.Collection: int size()>();
if v3 == v1 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = newarray (java.lang.Object)[3];
v5[0] = v2;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5[1] = v6;
v7 = interfaceinvoke v0.<java.util.Collection: int size()>();
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
v5[2] = v8;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("`%s` must has size %d, but was %d", v5);
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v4;
label1:
return v0;
}
}