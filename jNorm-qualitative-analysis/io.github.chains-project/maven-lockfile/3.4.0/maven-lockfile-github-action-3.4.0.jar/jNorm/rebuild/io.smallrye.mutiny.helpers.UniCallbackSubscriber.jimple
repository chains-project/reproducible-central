public class io.smallrye.mutiny.helpers.UniCallbackSubscriber extends java.lang.Object implements io.smallrye.mutiny.subscription.UniSubscriber, io.smallrye.mutiny.subscription.UniSubscription
{
private volatile io.smallrye.mutiny.subscription.UniSubscription subscription;
private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater SUBSCRIPTION_UPDATER;
private final java.util.function.Consumer onResultCallback;
private final java.util.function.Consumer onFailureCallback;
private final io.smallrye.mutiny.Context context;
public void <init>(java.util.function.Consumer, java.util.function.Consumer, io.smallrye.mutiny.Context)
{
java.util.function.Consumer v1, v2;
io.smallrye.mutiny.helpers.UniCallbackSubscriber v0;
java.lang.Object v4, v5, v6;
io.smallrye.mutiny.Context v3;
v0 := @this: io.smallrye.mutiny.helpers.UniCallbackSubscriber;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: io.smallrye.mutiny.Context;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "onResultCallback");
v0.<io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.function.Consumer onResultCallback> = v4;
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onFailureCallback");
v0.<io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.function.Consumer onFailureCallback> = v5;
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "context");
v0.<io.smallrye.mutiny.helpers.UniCallbackSubscriber: io.smallrye.mutiny.Context context> = v6;
return;
}
public final void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)
{
io.smallrye.mutiny.subscription.UniSubscription v1;
io.smallrye.mutiny.helpers.UniCallbackSubscriber v0;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
boolean v3;
v0 := @this: io.smallrye.mutiny.helpers.UniCallbackSubscriber;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscription;
v2 = <io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.concurrent.atomic.AtomicReferenceFieldUpdater SUBSCRIPTION_UPDATER>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, null, v1);
if v3 != 0 goto label1;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label1:
return;
}
public final void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
java.util.function.Consumer v6;
io.smallrye.mutiny.subscription.UniSubscription v3, v5;
io.smallrye.mutiny.helpers.UniCallbackSubscriber v0;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
java.lang.Object v4;
v0 := @this: io.smallrye.mutiny.helpers.UniCallbackSubscriber;
v1 := @parameter0: java.lang.Throwable;
v2 = <io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.concurrent.atomic.AtomicReferenceFieldUpdater SUBSCRIPTION_UPDATER>;
v3 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
v4 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>(v0, v3);
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
if v4 != v5 goto label1;
return;
label1:
v6 = v0.<io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.function.Consumer onFailureCallback>;
interfaceinvoke v6.<java.util.function.Consumer: void accept(java.lang.Object)>(v1);
return;
}
public final void onItem(java.lang.Object)
{
java.lang.Throwable v7;
io.smallrye.mutiny.subscription.UniSubscription v3, v5;
io.smallrye.mutiny.helpers.UniCallbackSubscriber v0;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
java.util.function.Consumer v6;
java.lang.Object v1, v4;
v0 := @this: io.smallrye.mutiny.helpers.UniCallbackSubscriber;
v1 := @parameter0: java.lang.Object;
v2 = <io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.concurrent.atomic.AtomicReferenceFieldUpdater SUBSCRIPTION_UPDATER>;
v3 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
v4 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>(v0, v3);
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
if v4 != v5 goto label1;
return;
label1:
v6 = v0.<io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.function.Consumer onResultCallback>;
interfaceinvoke v6.<java.util.function.Consumer: void accept(java.lang.Object)>(v1);
label2:
goto label4;
label3:
v7 := @caughtexception;
staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: void handleDroppedException(java.lang.Throwable)>(v7);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void cancel()
{
io.smallrye.mutiny.subscription.UniSubscription v2, v4;
io.smallrye.mutiny.helpers.UniCallbackSubscriber v0;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v1;
java.lang.Object v3;
v0 := @this: io.smallrye.mutiny.helpers.UniCallbackSubscriber;
v1 = <io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.concurrent.atomic.AtomicReferenceFieldUpdater SUBSCRIPTION_UPDATER>;
v2 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
v3 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>(v0, v2);
v4 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
if v3 == v4 goto label1;
interfaceinvoke v3.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label1:
return;
}
public io.smallrye.mutiny.Context context()
{
io.smallrye.mutiny.helpers.UniCallbackSubscriber v0;
io.smallrye.mutiny.Context v1;
v0 := @this: io.smallrye.mutiny.helpers.UniCallbackSubscriber;
v1 = v0.<io.smallrye.mutiny.helpers.UniCallbackSubscriber: io.smallrye.mutiny.Context context>;
return v1;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v0;
v0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lio/smallrye/mutiny/helpers/UniCallbackSubscriber;", class "Lio/smallrye/mutiny/subscription/UniSubscription;", "subscription");
<io.smallrye.mutiny.helpers.UniCallbackSubscriber: java.util.concurrent.atomic.AtomicReferenceFieldUpdater SUBSCRIPTION_UPDATER> = v0;
return;
}
}