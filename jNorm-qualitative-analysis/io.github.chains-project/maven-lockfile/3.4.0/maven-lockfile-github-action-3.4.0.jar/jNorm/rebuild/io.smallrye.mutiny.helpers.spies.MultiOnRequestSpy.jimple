public class io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy extends io.smallrye.mutiny.helpers.spies.MultiSpyBase
{
private final java.util.concurrent.atomic.AtomicLong requestedCount;
public long requestedCount()
{
java.util.concurrent.atomic.AtomicLong v1;
long v2;
io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy;
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy: java.util.concurrent.atomic.AtomicLong requestedCount>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicLong: long get()>();
return v2;
}
public void <init>(io.smallrye.mutiny.Multi)
{
java.util.concurrent.atomic.AtomicLong v2;
io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void <init>(io.smallrye.mutiny.Multi)>(v1);
v2 = new java.util.concurrent.atomic.AtomicLong;
specialinvoke v2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();
v0.<io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy: java.util.concurrent.atomic.AtomicLong requestedCount> = v2;
return;
}
public void reset()
{
java.util.concurrent.atomic.AtomicLong v1;
io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void reset()>();
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy: java.util.concurrent.atomic.AtomicLong requestedCount>;
virtualinvoke v1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiOnRequest v3;
io.smallrye.mutiny.groups.MultiSubscribe v6;
io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy v0;
io.smallrye.mutiny.Multi v2, v5;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
java.util.function.LongConsumer v4;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy: io.smallrye.mutiny.Multi upstream>;
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnRequest onRequest()>();
v4 = staticinvoke <io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy$lambda_subscribe_0__2779: java.util.function.LongConsumer bootstrap$(io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy)>(v0);
v5 = virtualinvoke v3.<io.smallrye.mutiny.groups.MultiOnRequest: io.smallrye.mutiny.Multi invoke(java.util.function.LongConsumer)>(v4);
v6 = interfaceinvoke v5.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
virtualinvoke v6.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
return;
}
public java.lang.String toString()
{
java.util.concurrent.atomic.AtomicLong v1;
java.lang.String v2, v3;
io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy;
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnRequestSpy: java.util.concurrent.atomic.AtomicLong requestedCount>;
v2 = specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: java.lang.String toString()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.concurrent.atomic.AtomicLong,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("MultiOnRequestSpy{requestedCount=\u0001} \u0001");
return v3;
}
}