class io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask extends java.lang.Object
{
private final int expected;
private final io.smallrye.mutiny.helpers.test.AssertSubscriber subscriber;
public void <init>(int, io.smallrye.mutiny.helpers.test.AssertSubscriber)
{
int v1;
io.smallrye.mutiny.helpers.test.AssertSubscriber v2;
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask v0;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask;
v1 := @parameter0: int;
v2 := @parameter1: io.smallrye.mutiny.helpers.test.AssertSubscriber;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask: int expected> = v1;
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask: io.smallrye.mutiny.helpers.test.AssertSubscriber subscriber> = v2;
return;
}
public java.util.concurrent.CompletableFuture future()
{
io.smallrye.mutiny.helpers.test.AssertSubscriber v5;
java.util.concurrent.CompletableFuture v1, v7;
io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener v4;
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask v0;
java.util.concurrent.atomic.AtomicInteger v2;
int v3;
java.util.function.BiConsumer v6;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask;
v1 = new java.util.concurrent.CompletableFuture;
specialinvoke v1.<java.util.concurrent.CompletableFuture: void <init>()>();
v2 = new java.util.concurrent.atomic.AtomicInteger;
v3 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask: int expected>;
specialinvoke v2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(v3);
v4 = staticinvoke <io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_0__2803: io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener bootstrap$(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.CompletableFuture)>(v2, v1);
v5 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask: io.smallrye.mutiny.helpers.test.AssertSubscriber subscriber>;
specialinvoke v5.<io.smallrye.mutiny.helpers.test.AssertSubscriber: void registerListener(io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener)>(v4);
v6 = staticinvoke <io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804: java.util.function.BiConsumer bootstrap$(io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask,io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener)>(v0, v4);
v7 = virtualinvoke v1.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture whenComplete(java.util.function.BiConsumer)>(v6);
return v7;
}
}