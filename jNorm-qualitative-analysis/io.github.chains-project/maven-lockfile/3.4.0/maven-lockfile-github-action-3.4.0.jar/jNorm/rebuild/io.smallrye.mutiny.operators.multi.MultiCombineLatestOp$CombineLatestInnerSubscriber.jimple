final class io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber extends java.lang.Object implements io.smallrye.mutiny.subscription.MultiSubscriber, io.smallrye.mutiny.subscription.ContextSupport
{
private final java.util.concurrent.atomic.AtomicReference upstream;
private final io.smallrye.mutiny.Context context;
private final io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator parent;
private final int index;
private final int prefetch;
private final int limit;
int produced;
void <init>(io.smallrye.mutiny.Context, io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator, int, int)
{
io.smallrye.mutiny.Context v1;
java.util.concurrent.atomic.AtomicReference v5;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
int v3, v4, v6, v7;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 := @parameter1: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v5.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: java.util.concurrent.atomic.AtomicReference upstream> = v5;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: io.smallrye.mutiny.Context context> = v1;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator parent> = v2;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int index> = v3;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int prefetch> = v4;
v6 = v4 >> 2;
v7 = v4 - v6;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int limit> = v7;
return;
}
public void onSubscribe(java.util.concurrent.Flow$Subscription)
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
int v4;
java.util.concurrent.atomic.AtomicReference v2;
boolean v3;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 := @parameter0: java.util.concurrent.Flow$Subscription;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, v1);
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int prefetch>;
interfaceinvoke v1.<java.util.concurrent.Flow$Subscription: void request(long)>(v4);
label1:
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
int v3;
java.lang.Object v1;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator parent>;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int index>;
virtualinvoke v2.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void innerValue(int,java.lang.Object)>(v3, v1);
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
int v3;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator parent>;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int index>;
virtualinvoke v2.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void innerError(int,java.lang.Throwable)>(v3, v1);
return;
}
public void onCompletion()
{
int v2;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator parent>;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int index>;
virtualinvoke v1.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void innerComplete(int)>(v2);
return;
}
public void cancel()
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
java.lang.Object v3;
io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription v2, v4;
java.util.concurrent.atomic.AtomicReference v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
v2 = <io.smallrye.mutiny.helpers.Subscriptions: io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription CANCELLED>;
v3 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(v2);
v4 = <io.smallrye.mutiny.helpers.Subscriptions: io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription CANCELLED>;
if v3 == v4 goto label1;
if v3 == null goto label1;
interfaceinvoke v3.<java.util.concurrent.Flow$Subscription: void cancel()>();
label1:
return;
}
void requestOneItem()
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
int v1, v2, v3;
java.lang.Object v5;
java.util.concurrent.atomic.AtomicReference v4;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int produced>;
v2 = v1 + 1;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int limit>;
if v2 != v3 goto label1;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int produced> = 0;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
interfaceinvoke v5.<java.util.concurrent.Flow$Subscription: void request(long)>(v2);
goto label2;
label1:
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: int produced> = v2;
label2:
return;
}
public io.smallrye.mutiny.Context context()
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v0;
io.smallrye.mutiny.Context v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: io.smallrye.mutiny.Context context>;
return v1;
}
}