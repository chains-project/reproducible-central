public class io.smallrye.mutiny.operators.multi.MultiCombineLatestOp extends io.smallrye.mutiny.operators.MultiOperator
{
private final java.lang.Iterable upstreams;
private final java.util.function.Function combinator;
private final int bufferSize;
private final boolean delayErrors;
public void <init>(java.lang.Iterable, java.util.function.Function, int, boolean)
{
int v3;
java.lang.Object v6;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp v0;
java.util.function.Function v2;
java.lang.Iterable v1, v5;
boolean v4;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp;
v1 := @parameter0: java.lang.Iterable;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
specialinvoke v0.<io.smallrye.mutiny.operators.MultiOperator: void <init>(io.smallrye.mutiny.Multi)>(null);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Iterable doesNotContainNull(java.lang.Iterable,java.lang.String)>(v1, "upstreams");
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: java.lang.Iterable upstreams> = v5;
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "combinator");
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: java.util.function.Function combinator> = v6;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: int bufferSize> = v3;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: boolean delayErrors> = v4;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp v0;
java.util.function.Function v10, v13;
java.lang.Iterable v3;
java.util.ArrayList v2;
int v14, v15, v6;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
boolean v16, v5;
io.smallrye.mutiny.operators.multi.MultiMapOp$MapProcessor v9;
java.util.function.Consumer v4;
java.util.concurrent.Flow$Subscriber v11;
java.lang.Object v7, v8;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v12;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "The subscriber must not be `null`");
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: java.lang.Iterable upstreams>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$add__2674: java.util.function.Consumer bootstrap$(java.util.List)>(v2);
interfaceinvoke v3.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v4);
v5 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v5 == 0 goto label1;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void complete(java.util.concurrent.Flow$Subscriber)>(v1);
return;
label1:
v6 = interfaceinvoke v2.<java.util.List: int size()>();
if v6 != 1 goto label2;
v7 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(0);
v9 = new io.smallrye.mutiny.operators.multi.MultiMapOp$MapProcessor;
v10 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$lambda_subscribe_0__2675: java.util.function.Function bootstrap$(io.smallrye.mutiny.operators.multi.MultiCombineLatestOp)>(v0);
specialinvoke v9.<io.smallrye.mutiny.operators.multi.MultiMapOp$MapProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.function.Function)>(v1, v10);
v11 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.Flow$Subscriber onMultiSubscription(java.util.concurrent.Flow$Publisher,java.util.concurrent.Flow$Subscriber)>(v8, v9);
interfaceinvoke v7.<java.util.concurrent.Flow$Publisher: void subscribe(java.util.concurrent.Flow$Subscriber)>(v11);
return;
label2:
v12 = new io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v13 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: java.util.function.Function combinator>;
v14 = interfaceinvoke v2.<java.util.List: int size()>();
v15 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: int bufferSize>;
v16 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp: boolean delayErrors>;
specialinvoke v12.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.function.Function,int,int,boolean)>(v1, v13, v14, v15, v16);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v12);
specialinvoke v12.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void subscribe(java.util.List)>(v2);
return;
}
}