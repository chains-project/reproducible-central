final class io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
java.lang.Object last;
void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
return;
}
public void onSubscribe(java.util.concurrent.Flow$Subscription)
{
io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v3;
boolean v2;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor;
v1 := @parameter0: java.util.concurrent.Flow$Subscription;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: boolean compareAndSetUpstreamSubscription(java.util.concurrent.Flow$Subscription,java.util.concurrent.Flow$Subscription)>(null, v1);
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v3.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v0);
interfaceinvoke v1.<java.util.concurrent.Flow$Subscription: void request(long)>(9223372036854775807L);
goto label2;
label1:
interfaceinvoke v1.<java.util.concurrent.Flow$Subscription: void cancel()>();
label2:
return;
}
public void request(long)
{
io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor v0;
long v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor;
v1 := @parameter0: long;
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor v0;
java.lang.Object v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor;
v1 := @parameter0: java.lang.Object;
v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: java.lang.Object last> = v1;
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: java.lang.Object last> = null;
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor v0;
java.lang.Object v4;
io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription v1, v3;
io.smallrye.mutiny.subscription.MultiSubscriber v5;
java.util.concurrent.Flow$Subscription v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor;
v1 = <io.smallrye.mutiny.helpers.Subscriptions: io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription CANCELLED>;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: java.util.concurrent.Flow$Subscription getAndSetUpstreamSubscription(java.util.concurrent.Flow$Subscription)>(v1);
v3 = <io.smallrye.mutiny.helpers.Subscriptions: io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription CANCELLED>;
if v2 == v3 goto label2;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: java.lang.Object last>;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
if v4 == null goto label1;
v0.<io.smallrye.mutiny.operators.multi.MultiLastItemOp$MultiLastItemProcessor: java.lang.Object last> = null;
interfaceinvoke v5.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v4);
label1:
interfaceinvoke v5.<io.smallrye.mutiny.subscription.MultiSubscriber: void onCompletion()>();
label2:
return;
}
}