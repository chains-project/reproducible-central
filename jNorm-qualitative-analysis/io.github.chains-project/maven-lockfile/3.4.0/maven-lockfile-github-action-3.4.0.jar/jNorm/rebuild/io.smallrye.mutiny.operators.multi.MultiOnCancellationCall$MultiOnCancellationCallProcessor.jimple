class io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.concurrent.atomic.AtomicBoolean supplierInvoked;
final io.smallrye.mutiny.operators.multi.MultiOnCancellationCall this$0;
public void <init>(io.smallrye.mutiny.operators.multi.MultiOnCancellationCall, io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiOnCancellationCall v1;
io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor v0;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v0.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicBoolean supplierInvoked> = v3;
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor v0;
java.util.concurrent.atomic.AtomicBoolean v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicBoolean supplierInvoked>;
virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
return;
}
public void cancel()
{
java.util.function.Consumer v3, v4;
io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor;
v1 = specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor: io.smallrye.mutiny.Uni execute()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor$lambda_cancel_0__2663: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor)>(v0);
v4 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor$lambda_cancel_1__2664: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor)>(v0);
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v3, v4);
return;
}
private io.smallrye.mutiny.Uni execute()
{
java.lang.Throwable v7;
io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor v0;
java.util.concurrent.atomic.AtomicBoolean v1;
java.util.function.Supplier v4;
io.smallrye.mutiny.Uni v11, v9;
io.smallrye.mutiny.groups.UniCreate v10, v8;
io.smallrye.mutiny.operators.multi.MultiOnCancellationCall v3;
java.lang.Object v5, v6;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicBoolean supplierInvoked>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v2 == 0 goto label4;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall$MultiOnCancellationCallProcessor: io.smallrye.mutiny.operators.multi.MultiOnCancellationCall this$0>;
v4 = v3.<io.smallrye.mutiny.operators.multi.MultiOnCancellationCall: java.util.function.Supplier supplier>;
v5 = interfaceinvoke v4.<java.util.function.Supplier: java.lang.Object get()>();
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "uni");
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v9 = virtualinvoke v8.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni failure(java.lang.Throwable)>(v7);
return v9;
label4:
v10 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v11 = virtualinvoke v10.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni nullItem()>();
return v11;
catch java.lang.Throwable from label1 to label2 with label3;
}
}