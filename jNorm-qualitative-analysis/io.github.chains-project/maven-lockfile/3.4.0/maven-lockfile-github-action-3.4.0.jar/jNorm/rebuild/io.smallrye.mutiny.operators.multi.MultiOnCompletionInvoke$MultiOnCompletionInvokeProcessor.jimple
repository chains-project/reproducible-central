class io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.concurrent.atomic.AtomicBoolean actionInvoked;
final io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke this$0;
public void <init>(io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke, io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor v0;
io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke v1;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v0.<io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor: io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor: java.util.concurrent.atomic.AtomicBoolean actionInvoked> = v3;
return;
}
public void onCompletion()
{
java.lang.Throwable v5;
io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor v0;
io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke v3;
java.util.concurrent.atomic.AtomicBoolean v1;
java.lang.Runnable v4;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor: java.util.concurrent.atomic.AtomicBoolean actionInvoked>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v2 == 0 goto label4;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke$MultiOnCompletionInvokeProcessor: io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke this$0>;
v4 = v3.<io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke: java.lang.Runnable action>;
interfaceinvoke v4.<java.lang.Runnable: void run()>();
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
label2:
goto label4;
label3:
v5 := @caughtexception;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v5);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}