final class io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.function.BiFunction accumulator;
java.lang.Object current;
void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, java.util.function.BiFunction, java.lang.Object)
{
java.util.function.BiFunction v2;
java.lang.Object v3;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: java.util.function.BiFunction;
v3 := @parameter2: java.lang.Object;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.util.function.BiFunction accumulator> = v2;
v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.lang.Object current> = v3;
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.lang.Object current> = null;
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.lang.Object current> = null;
return;
}
public void onItem(java.lang.Object)
{
java.lang.Throwable v6;
java.util.function.BiFunction v4;
java.lang.NullPointerException v7;
java.lang.Object v1, v3, v5;
io.smallrye.mutiny.subscription.MultiSubscriber v8;
boolean v2;
io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: boolean isDone()>();
if v2 == 0 goto label1;
return;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.lang.Object current>;
label2:
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.util.function.BiFunction accumulator>;
v5 = interfaceinvoke v4.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v3, v1);
label3:
goto label5;
label4:
v6 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: void onFailure(java.lang.Throwable)>(v6);
return;
label5:
if v5 != null goto label6;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("The accumulator returned a null value");
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: void onFailure(java.lang.Throwable)>(v7);
return;
label6:
v8 = v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v8.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v5);
v0.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp$ScanSeedProcessor: java.lang.Object current> = v5;
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
}