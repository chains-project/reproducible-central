public class io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti extends io.smallrye.mutiny.operators.AbstractMulti
{
private final java.util.function.Supplier initialStateSupplier;
private final java.util.function.BiFunction generator;
public void <init>(java.util.function.Supplier, java.util.function.BiFunction)
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti v0;
java.util.function.Supplier v1;
java.util.function.BiFunction v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.BiFunction;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti: java.util.function.Supplier initialStateSupplier> = v1;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti: java.util.function.BiFunction generator> = v2;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
java.lang.Throwable v5;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti v0;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v6;
java.lang.Object v2, v4;
java.util.function.Supplier v3;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "subscriber");
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti: java.util.function.Supplier initialStateSupplier>;
v4 = interfaceinvoke v3.<java.util.function.Supplier: java.lang.Object get()>();
label2:
goto label4;
label3:
v5 := @caughtexception;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v5);
return;
label4:
v6 = new io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
specialinvoke v6.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: void <init>(io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti,io.smallrye.mutiny.subscription.MultiSubscriber,java.lang.Object)>(v0, v2, v4);
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v6);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}