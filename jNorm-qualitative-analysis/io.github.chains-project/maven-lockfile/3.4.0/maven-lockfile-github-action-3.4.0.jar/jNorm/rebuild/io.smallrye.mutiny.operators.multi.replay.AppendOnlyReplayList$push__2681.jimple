public final class io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681 extends java.lang.Object implements java.util.function.Consumer
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList cap0;
public static java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList)
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList v0;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681 v1;
v0 := @parameter0: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList;
v1 = new io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681;
specialinvoke v1.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681: void <init>(io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList)>(v0);
return v1;
}
public void <init>(io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList)
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList v1;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681 v0;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList cap0> = v1;
return;
}
public void accept(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList v2;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681 v0;
java.lang.Object v1;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$push__2681: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList cap0>;
virtualinvoke v2.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: void push(java.lang.Object)>(v1);
return;
}
}