public class io.smallrye.mutiny.operators.uni.UniDelayUntil extends io.smallrye.mutiny.operators.UniOperator
{
private final java.util.function.Function function;
private final java.util.concurrent.ScheduledExecutorService executor;
public void <init>(io.smallrye.mutiny.Uni, java.util.function.Function, java.util.concurrent.ScheduledExecutorService)
{
io.smallrye.mutiny.operators.uni.UniDelayUntil v0;
java.util.concurrent.ScheduledExecutorService v3;
java.util.function.Function v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.operators.uni.UniDelayUntil;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: java.util.concurrent.ScheduledExecutorService;
specialinvoke v0.<io.smallrye.mutiny.operators.UniOperator: void <init>(io.smallrye.mutiny.Uni)>(v1);
v0.<io.smallrye.mutiny.operators.uni.UniDelayUntil: java.util.function.Function function> = v2;
v0.<io.smallrye.mutiny.operators.uni.UniDelayUntil: java.util.concurrent.ScheduledExecutorService executor> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.operators.uni.UniDelayUntil$UniDelayUntilProcessor v3;
io.smallrye.mutiny.operators.uni.UniDelayUntil v0;
io.smallrye.mutiny.subscription.UniSubscriber v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.operators.uni.UniDelayUntil;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniDelayUntil: io.smallrye.mutiny.Uni upstream()>();
v3 = new io.smallrye.mutiny.operators.uni.UniDelayUntil$UniDelayUntilProcessor;
specialinvoke v3.<io.smallrye.mutiny.operators.uni.UniDelayUntil$UniDelayUntilProcessor: void <init>(io.smallrye.mutiny.operators.uni.UniDelayUntil,io.smallrye.mutiny.subscription.UniSubscriber)>(v0, v1);
staticinvoke <io.smallrye.mutiny.operators.AbstractUni: void subscribe(io.smallrye.mutiny.Uni,io.smallrye.mutiny.subscription.UniSubscriber)>(v2, v3);
return;
}
}