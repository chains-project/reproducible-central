class io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor extends io.smallrye.mutiny.operators.uni.UniOperatorProcessor
{
private final java.lang.Runnable callback;
private volatile io.smallrye.mutiny.operators.uni.UniOnCancellation$State state;
private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater;
public void <init>(java.lang.Runnable, io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor v0;
io.smallrye.mutiny.operators.uni.UniOnCancellation$State v3;
io.smallrye.mutiny.subscription.UniSubscriber v2;
java.lang.Runnable v1;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor;
v1 := @parameter0: java.lang.Runnable;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v2);
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State INIT>;
v0.<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: io.smallrye.mutiny.operators.uni.UniOnCancellation$State state> = v3;
v0.<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: java.lang.Runnable callback> = v1;
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor v0;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
java.lang.Object v1;
io.smallrye.mutiny.operators.uni.UniOnCancellation$State v3, v4;
io.smallrye.mutiny.subscription.UniSubscriber v6;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor;
v1 := @parameter0: java.lang.Object;
v2 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater>;
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State INIT>;
v4 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State DONE>;
v5 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v3, v4);
if v5 == 0 goto label1;
v6 = v0.<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v1);
label1:
return;
}
public void onFailure(java.lang.Throwable)
{
io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor v0;
java.lang.Throwable v1;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
io.smallrye.mutiny.operators.uni.UniOnCancellation$State v3, v4;
io.smallrye.mutiny.subscription.UniSubscriber v6;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater>;
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State INIT>;
v4 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State DONE>;
v5 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v3, v4);
if v5 == 0 goto label1;
v6 = v0.<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
label1:
return;
}
public void cancel()
{
io.smallrye.mutiny.subscription.UniSubscription v5, v6;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v1;
io.smallrye.mutiny.operators.uni.UniOnCancellation$State v2, v3;
java.lang.Runnable v7;
io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor v0;
boolean v4;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor;
v1 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater>;
v2 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State INIT>;
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellation$State: io.smallrye.mutiny.operators.uni.UniOnCancellation$State CANCELLED>;
v4 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v2, v3);
if v4 == 0 goto label1;
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
v6 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: io.smallrye.mutiny.subscription.UniSubscription getAndSetUpstreamSubscription(io.smallrye.mutiny.subscription.UniSubscription)>(v5);
v7 = v0.<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: java.lang.Runnable callback>;
interfaceinvoke v7.<java.lang.Runnable: void run()>();
if v6 == null goto label1;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label1:
return;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v0;
v0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lio/smallrye/mutiny/operators/uni/UniOnCancellation$UniOnCancellationProcessor;", class "Lio/smallrye/mutiny/operators/uni/UniOnCancellation$State;", "state");
<io.smallrye.mutiny.operators.uni.UniOnCancellation$UniOnCancellationProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater> = v0;
return;
}
}