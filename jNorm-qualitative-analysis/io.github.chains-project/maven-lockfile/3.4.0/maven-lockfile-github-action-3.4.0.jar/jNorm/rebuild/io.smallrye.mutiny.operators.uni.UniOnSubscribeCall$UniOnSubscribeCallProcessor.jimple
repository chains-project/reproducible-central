class io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor extends io.smallrye.mutiny.operators.uni.UniOperatorProcessor
{
private volatile java.lang.Object item;
private volatile java.lang.Throwable failure;
private final java.util.concurrent.atomic.AtomicBoolean done;
final io.smallrye.mutiny.operators.uni.UniOnSubscribeCall this$0;
public void <init>(io.smallrye.mutiny.operators.uni.UniOnSubscribeCall, io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall v1;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.UniSubscriber v2;
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v2);
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.util.concurrent.atomic.AtomicBoolean done> = v3;
return;
}
public void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)
{
java.lang.Throwable v6;
io.smallrye.mutiny.subscription.UniSubscription v1, v8;
io.smallrye.mutiny.subscription.UniSubscriber v7, v9;
java.util.function.Function v3;
java.util.function.Consumer v11, v12;
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall v2;
io.smallrye.mutiny.groups.UniSubscribe v10;
java.lang.Object v4, v5;
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscription;
label1:
v2 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall this$0>;
v3 = v2.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall: java.util.function.Function callback>;
v4 = interfaceinvoke v3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
v5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v4, "The produced Uni must not be `null`");
label2:
goto label4;
label3:
v6 := @caughtexception;
v7 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v8 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v7.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v8);
v9 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v9.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v6);
return;
label4:
v10 = interfaceinvoke v5.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v11 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor$lambda_onSubscribe_0__2703: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor,io.smallrye.mutiny.subscription.UniSubscription)>(v0, v1);
v12 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor$lambda_onSubscribe_1__2704: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor,io.smallrye.mutiny.subscription.UniSubscription)>(v0, v1);
virtualinvoke v10.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v11, v12);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void forwardPendingEvent()
{
java.lang.Throwable v4, v6;
java.lang.Object v1, v3;
io.smallrye.mutiny.subscription.UniSubscriber v2, v5;
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor;
v1 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.lang.Object item>;
if v1 == null goto label1;
v2 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v3 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.lang.Object item>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v3);
goto label2;
label1:
v4 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.lang.Throwable failure>;
if v4 == null goto label2;
v5 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v6 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.lang.Throwable failure>;
interfaceinvoke v5.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v6);
label2:
return;
}
public void onItem(java.lang.Object)
{
java.util.concurrent.atomic.AtomicBoolean v2;
java.lang.Object v1;
io.smallrye.mutiny.subscription.UniSubscriber v4;
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.util.concurrent.atomic.AtomicBoolean done>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v4.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v1);
goto label2;
label1:
v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.lang.Object item> = v1;
label2:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
java.util.concurrent.atomic.AtomicBoolean v2;
io.smallrye.mutiny.subscription.UniSubscriber v4;
io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.util.concurrent.atomic.AtomicBoolean done>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v4.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label2;
label1:
v0.<io.smallrye.mutiny.operators.uni.UniOnSubscribeCall$UniOnSubscribeCallProcessor: java.lang.Throwable failure> = v1;
label2:
return;
}
}