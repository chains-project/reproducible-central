public class io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState extends io.smallrye.mutiny.operators.AbstractUni
{
private final java.util.function.Function mapper;
private final io.smallrye.mutiny.operators.uni.builders.StateHolder holder;
public void <init>(java.util.function.Supplier, java.util.function.Function)
{
io.smallrye.mutiny.operators.uni.builders.StateHolder v3;
java.util.function.Function v2;
java.util.function.Supplier v1;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState v0;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractUni: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState: java.util.function.Function mapper> = v2;
v3 = new io.smallrye.mutiny.operators.uni.builders.StateHolder;
specialinvoke v3.<io.smallrye.mutiny.operators.uni.builders.StateHolder: void <init>(java.util.function.Supplier)>(v1);
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState: io.smallrye.mutiny.operators.uni.builders.StateHolder holder> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
java.lang.Throwable v4, v8;
io.smallrye.mutiny.subscription.UniSubscription v5, v9;
io.smallrye.mutiny.operators.uni.builders.StateHolder v2;
io.smallrye.mutiny.subscription.UniSubscriber v1;
java.util.function.Function v6;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription v10;
java.lang.Object v3, v7;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState v0;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
label1:
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState: io.smallrye.mutiny.operators.uni.builders.StateHolder holder>;
v3 = virtualinvoke v2.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object get()>();
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v5);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v4);
return;
label4:
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState: java.util.function.Function mapper>;
v7 = interfaceinvoke v6.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v7, "The produced CompletionStage is `null`");
label5:
goto label7;
label6:
v8 := @caughtexception;
v9 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v9);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v8);
return;
label7:
v10 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription;
specialinvoke v10.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription: void <init>(io.smallrye.mutiny.subscription.UniSubscriber,java.util.concurrent.CompletionStage)>(v1, v7);
virtualinvoke v10.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription: void forward()>();
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch java.lang.Throwable from label4 to label5 with label6;
}
}