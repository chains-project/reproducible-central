public class io.smallrye.mutiny.subscription.DemandPacer$Request extends java.lang.Object
{
private final long demand;
private final java.time.Duration delay;
public void <init>(long, java.time.Duration)
{
long v1, v3;
java.lang.IllegalArgumentException v7;
java.time.temporal.ChronoUnit v5;
java.time.Duration v2, v4, v6;
io.smallrye.mutiny.subscription.DemandPacer$Request v0;
v0 := @this: io.smallrye.mutiny.subscription.DemandPacer$Request;
v1 := @parameter0: long;
v2 := @parameter1: java.time.Duration;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: long positive(long,java.lang.String)>(v1, "demand");
v0.<io.smallrye.mutiny.subscription.DemandPacer$Request: long demand> = v3;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v2, "delay");
v0.<io.smallrye.mutiny.subscription.DemandPacer$Request: java.time.Duration delay> = v4;
v5 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit FOREVER>;
v6 = virtualinvoke v5.<java.time.temporal.ChronoUnit: java.time.Duration getDuration()>();
if v2 != v6 goto label1;
v7 = new java.lang.IllegalArgumentException;
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ChronoUnit.FOREVER is not a correct delay value");
throw v7;
label1:
return;
}
public long demand()
{
long v1;
io.smallrye.mutiny.subscription.DemandPacer$Request v0;
v0 := @this: io.smallrye.mutiny.subscription.DemandPacer$Request;
v1 = v0.<io.smallrye.mutiny.subscription.DemandPacer$Request: long demand>;
return v1;
}
public java.time.Duration delay()
{
io.smallrye.mutiny.subscription.DemandPacer$Request v0;
java.time.Duration v1;
v0 := @this: io.smallrye.mutiny.subscription.DemandPacer$Request;
v1 = v0.<io.smallrye.mutiny.subscription.DemandPacer$Request: java.time.Duration delay>;
return v1;
}
public java.lang.String toString()
{
java.time.Duration v2;
long v1;
java.lang.String v3;
io.smallrye.mutiny.subscription.DemandPacer$Request v0;
v0 := @this: io.smallrye.mutiny.subscription.DemandPacer$Request;
v1 = v0.<io.smallrye.mutiny.subscription.DemandPacer$Request: long demand>;
v2 = v0.<io.smallrye.mutiny.subscription.DemandPacer$Request: java.time.Duration delay>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long,java.time.Duration)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Request{demand=\u0001, delay=\u0001}");
return v3;
}
}