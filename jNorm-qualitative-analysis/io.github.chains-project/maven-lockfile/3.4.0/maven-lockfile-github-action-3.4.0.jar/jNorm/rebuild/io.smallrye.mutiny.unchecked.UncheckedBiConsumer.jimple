public interface  io.smallrye.mutiny.unchecked.UncheckedBiConsumer extends java.lang.Object
{
public static io.smallrye.mutiny.unchecked.UncheckedBiConsumer 'from'(java.util.function.BiConsumer)
{
java.util.function.BiConsumer v0;
io.smallrye.mutiny.unchecked.UncheckedBiConsumer v1;
v0 := @parameter0: java.util.function.BiConsumer;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = staticinvoke <io.smallrye.mutiny.unchecked.UncheckedBiConsumer$accept__3006: io.smallrye.mutiny.unchecked.UncheckedBiConsumer bootstrap$(java.util.function.BiConsumer)>(v0);
return v1;
}
public abstract void accept(java.lang.Object, java.lang.Object) throws java.lang.Exception;
public io.smallrye.mutiny.unchecked.UncheckedBiConsumer andThen(io.smallrye.mutiny.unchecked.UncheckedBiConsumer)
{
io.smallrye.mutiny.unchecked.UncheckedBiConsumer v0, v1, v2;
v0 := @this: io.smallrye.mutiny.unchecked.UncheckedBiConsumer;
v1 := @parameter0: io.smallrye.mutiny.unchecked.UncheckedBiConsumer;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <io.smallrye.mutiny.unchecked.UncheckedBiConsumer$lambda_andThen_0__3007: io.smallrye.mutiny.unchecked.UncheckedBiConsumer bootstrap$(io.smallrye.mutiny.unchecked.UncheckedBiConsumer,io.smallrye.mutiny.unchecked.UncheckedBiConsumer)>(v0, v1);
return v2;
}
public java.util.function.BiConsumer toBiConsumer()
{
java.util.function.BiConsumer v1;
io.smallrye.mutiny.unchecked.UncheckedBiConsumer v0;
v0 := @this: io.smallrye.mutiny.unchecked.UncheckedBiConsumer;
v1 = staticinvoke <io.smallrye.mutiny.unchecked.UncheckedBiConsumer$lambda_toBiConsumer_1__3008: java.util.function.BiConsumer bootstrap$(io.smallrye.mutiny.unchecked.UncheckedBiConsumer)>(v0);
return v1;
}
}