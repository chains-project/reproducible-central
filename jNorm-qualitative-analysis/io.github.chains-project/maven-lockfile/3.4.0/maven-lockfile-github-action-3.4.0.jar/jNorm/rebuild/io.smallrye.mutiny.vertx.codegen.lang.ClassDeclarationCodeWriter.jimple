public class io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter extends java.lang.Object implements io.smallrye.mutiny.vertx.codegen.lang.CodeWriter
{
public void <init>()
{
io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void generate(io.vertx.codegen.ClassModel, java.io.PrintWriter)
{
java.util.stream.Collector v19, v47;
boolean v14, v21, v28, v32, v36, v4, v43, v45, v7, v8;
java.io.PrintWriter v2;
io.vertx.codegen.type.TypeInfo v22, v25, v29, v33, v38, v40, v9;
io.vertx.codegen.ClassModel v1;
java.util.List v15;
java.util.stream.Stream v16, v18, v44;
java.util.function.Function v17;
java.util.ArrayList v11;
io.vertx.codegen.type.TypeInfo[] v37;
java.lang.String v10, v12, v13, v23, v24, v26, v27, v30, v31, v34, v35, v39, v41, v42, v46, v5, v6;
io.vertx.codegen.type.ClassTypeInfo v3;
io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter v0;
java.lang.Object v20, v48;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: java.io.PrintWriter;
v3 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("public ");
v4 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isConcrete()>();
if v4 == 0 goto label01;
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("class");
goto label02;
label01:
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("interface");
label02:
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(" ");
v5 = virtualinvoke v1.<io.vertx.codegen.ClassModel: java.lang.String getIfaceFQCN()>();
v6 = staticinvoke <io.vertx.codegen.Helper: java.lang.String getSimpleName(java.lang.String)>(v5);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v6);
v7 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isConcrete()>();
if v7 == 0 goto label03;
v8 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: boolean hasParentClass(io.vertx.codegen.ClassModel)>(v1);
if v8 == 0 goto label03;
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(" extends ");
v9 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.TypeInfo getConcreteSuperType()>();
v10 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v9);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v10);
label03:
v11 = new java.util.ArrayList;
specialinvoke v11.<java.util.ArrayList: void <init>()>();
v12 = "io.vertx.core.buffer.Buffer";
v13 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
v14 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>(v13);
if v14 == 0 goto label04;
interfaceinvoke v11.<java.util.List: boolean add(java.lang.Object)>("io.vertx.core.shareddata.impl.ClusterSerializable");
label04:
v15 = virtualinvoke v1.<io.vertx.codegen.ClassModel: java.util.List getAbstractSuperTypes()>();
v16 = interfaceinvoke v15.<java.util.List: java.util.stream.Stream stream()>();
v17 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter$genTypeName__2368: java.util.function.Function bootstrap$(io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter)>(v0);
v18 = interfaceinvoke v16.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v17);
v19 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v20 = interfaceinvoke v18.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v19);
interfaceinvoke v11.<java.util.List: boolean addAll(java.util.Collection)>(v20);
v21 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isHandler()>();
if v21 == 0 goto label05;
v22 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.TypeInfo getHandlerArg()>();
v23 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v22);
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v23) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("io.vertx.core.Handler<\u0001>");
interfaceinvoke v11.<java.util.List: boolean add(java.lang.Object)>(v24);
v25 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.TypeInfo getHandlerArg()>();
v26 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v25);
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("java.util.function.Consumer<\u0001>");
interfaceinvoke v11.<java.util.List: boolean add(java.lang.Object)>(v27);
label05:
v28 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isIterable()>();
if v28 == 0 goto label06;
v29 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.TypeInfo getIterableArg()>();
v30 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v29);
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v30) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("java.lang.Iterable<\u0001>");
interfaceinvoke v11.<java.util.List: boolean add(java.lang.Object)>(v31);
label06:
v32 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isIterator()>();
if v32 == 0 goto label07;
v33 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.TypeInfo getIteratorArg()>();
v34 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v33);
v35 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v34) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("java.util.Iterator<\u0001>");
interfaceinvoke v11.<java.util.List: boolean add(java.lang.Object)>(v35);
label07:
v36 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isFunction()>();
if v36 == 0 goto label08;
v37 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.TypeInfo[] getFunctionArgs()>();
v38 = v37[0];
v39 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v38);
v40 = v37[1];
v41 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.lang.ClassDeclarationCodeWriter: java.lang.String genTypeName(io.vertx.codegen.type.TypeInfo)>(v40);
v42 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v39, v41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("java.util.function.Function<\u0001, \u0001>");
interfaceinvoke v11.<java.util.List: boolean add(java.lang.Object)>(v42);
label08:
v43 = interfaceinvoke v11.<java.util.List: boolean isEmpty()>();
if v43 != 0 goto label11;
v44 = interfaceinvoke v11.<java.util.List: java.util.stream.Stream stream()>();
v45 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isConcrete()>();
if v45 == 0 goto label09;
v46 = " implements ";
goto label10;
label09:
v46 = " extends ";
label10:
v47 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(", ", v46, "");
v48 = interfaceinvoke v44.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v47);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v48);
label11:
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(" {");
virtualinvoke v2.<java.io.PrintWriter: void println()>();
return;
}
}