public class io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator extends io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator
{
public static final java.lang.String SUFFIX_AND_AWAIT;
public void <init>(java.io.PrintWriter)
{
java.io.PrintWriter v1;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: java.io.PrintWriter;
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: void <init>(java.io.PrintWriter)>(v1);
return;
}
public void generate(io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v3;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
io.vertx.codegen.MethodInfo v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.MethodInfo)>(v1);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateBody(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v3.<java.io.PrintWriter: void println()>();
return;
}
public void generateDeclaration(io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v3, v4;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
io.vertx.codegen.MethodInfo v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.MethodInfo)>(v1);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v3.<java.io.PrintWriter: void println(java.lang.String)>(";");
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println()>();
return;
}
public void generateOther(io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v3;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
io.vertx.codegen.MethodInfo v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.MethodInfo)>(v1);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: void generateBodyOther(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v3.<java.io.PrintWriter: void println()>();
return;
}
private void generateBody(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.util.function.Function v18;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
java.lang.String v10, v11, v13;
java.util.stream.Collector v20;
boolean v7;
java.io.PrintWriter v12, v14, v16, v22, v23, v4, v8;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v1;
io.vertx.codegen.type.TypeInfo v6, v9;
java.util.List v15;
java.util.stream.Stream v17, v19;
java.lang.Object v21;
io.vertx.codegen.MethodInfo v2, v3, v5;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v2 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getOriginalMethod()>();
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println(java.lang.String)>(" { ");
v5 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v6 = virtualinvoke v5.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v7 = virtualinvoke v6.<io.vertx.codegen.type.TypeInfo: boolean isVoid()>();
if v7 != 0 goto label1;
v8 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
v9 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v10 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genTranslatedTypeName(io.vertx.codegen.type.TypeInfo)>(v9);
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("    return (\u0001) ");
virtualinvoke v8.<java.io.PrintWriter: void print(java.lang.String)>(v11);
label1:
v12 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
v13 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
virtualinvoke v12.<java.io.PrintWriter: void print(java.lang.String)>(v13);
v14 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v14.<java.io.PrintWriter: void print(java.lang.String)>("(");
v15 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v16 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
v17 = interfaceinvoke v15.<java.util.List: java.util.stream.Stream stream()>();
v18 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator$getName__2357: java.util.function.Function bootstrap$()>();
v19 = interfaceinvoke v17.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v18);
v20 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(", ");
v21 = interfaceinvoke v19.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v20);
virtualinvoke v16.<java.io.PrintWriter: void print(java.lang.String)>(v21);
v22 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v22.<java.io.PrintWriter: void println(java.lang.String)>(").await().indefinitely();");
v23 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v23.<java.io.PrintWriter: void println(java.lang.String)>("  }");
return;
}
private void generateBodyOther(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.util.function.Function v15;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
java.lang.String v10, v11, v20, v7, v8;
java.util.stream.Collector v17;
boolean v5;
java.io.PrintWriter v19, v2, v21, v22, v23, v6, v9;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v1;
io.vertx.codegen.type.TypeInfo v4;
java.util.List v13;
java.util.stream.Stream v14, v16;
java.lang.Object v18;
io.vertx.codegen.MethodInfo v12, v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v2 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(" { ");
v3 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v4 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v5 = virtualinvoke v4.<io.vertx.codegen.type.TypeInfo: boolean isVoid()>();
if v5 != 0 goto label1;
v6 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
v7 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: java.lang.String getOriginalMethodName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("    return \u0001(");
virtualinvoke v6.<java.io.PrintWriter: void print(java.lang.String)>(v8);
goto label2;
label1:
v9 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
v10 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: java.lang.String getMethodName()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(");
virtualinvoke v9.<java.io.PrintWriter: void print(java.lang.String)>(v11);
label2:
v12 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v13 = virtualinvoke v12.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v14 = interfaceinvoke v13.<java.util.List: java.util.stream.Stream stream()>();
v15 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator$getName__2358: java.util.function.Function bootstrap$()>();
v16 = interfaceinvoke v14.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v15);
v17 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v18 = interfaceinvoke v16.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v17);
v19 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
v20 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", v18);
virtualinvoke v19.<java.io.PrintWriter: void print(java.lang.String)>(v20);
v21 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v21.<java.io.PrintWriter: void print(java.lang.String)>(").await().indefinitely();\n");
v22 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v22.<java.io.PrintWriter: void println(java.lang.String)>("  }");
v23 = v0.<io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v23.<java.io.PrintWriter: void println(java.lang.String)>("");
return;
}
private io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.MethodInfo)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v10;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v9;
io.vertx.codegen.type.TypeInfo v2, v3;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
java.lang.String v6, v7;
io.vertx.codegen.MethodInfo v1, v4, v5, v8;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v3 = virtualinvoke v2.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.TypeInfo getArg(int)>(0);
v4 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo copy()>();
v5 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setReturnType(io.vertx.codegen.type.TypeInfo)>(v3);
v6 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001AndAwait");
v8 = virtualinvoke v5.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setName(java.lang.String)>(v7);
v9 = new io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v10 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind AWAIT>;
specialinvoke v9.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind)>(v8, v1, v10);
return v9;
}
private io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.MethodInfo)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v19;
java.util.ArrayList v2;
int v5, v6;
io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator v0;
java.lang.String v14, v15;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v12;
io.vertx.codegen.type.TypeInfo v10, v8, v9;
java.util.List v11, v3, v4;
java.lang.Object v7;
io.vertx.codegen.MethodInfo v1, v13, v16, v17, v18;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.AwaitMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = new java.util.ArrayList;
v3 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
specialinvoke v2.<java.util.ArrayList: void <init>(java.util.Collection)>(v3);
v4 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = v5 - 1;
v7 = interfaceinvoke v2.<java.util.List: java.lang.Object remove(int)>(v6);
v8 = virtualinvoke v7.<io.vertx.codegen.ParamInfo: io.vertx.codegen.type.TypeInfo getType()>();
v9 = virtualinvoke v8.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.TypeInfo getArg(int)>(0);
v10 = virtualinvoke v9.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.TypeInfo getArg(int)>(0);
v11 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.UniMethodGenerator: java.util.List updateParamInfoIfNeeded(java.util.List)>(v2);
v12 = new io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v13 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo copy()>();
v14 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001AndAwait");
v16 = virtualinvoke v13.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setName(java.lang.String)>(v15);
v17 = virtualinvoke v16.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setReturnType(io.vertx.codegen.type.TypeInfo)>(v10);
v18 = virtualinvoke v17.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setParams(java.util.List)>(v11);
v19 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind AWAIT>;
specialinvoke v12.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind)>(v18, v1, v19);
return v12;
}
}