public class io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator extends io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator
{
public static final java.lang.String SUFFIX_AND_FORGET;
public void <init>(java.io.PrintWriter)
{
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
java.io.PrintWriter v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: java.io.PrintWriter;
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: void <init>(java.io.PrintWriter)>(v1);
return;
}
public void generate(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v4;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v3;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
io.vertx.codegen.MethodInfo v2;
io.vertx.codegen.ClassModel v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.ClassModel,io.vertx.codegen.MethodInfo)>(v1, v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateBody(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println()>();
return;
}
public void generateDeclaration(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v4, v5;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v3;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
io.vertx.codegen.MethodInfo v2;
io.vertx.codegen.ClassModel v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.ClassModel,io.vertx.codegen.MethodInfo)>(v1, v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println(java.lang.String)>(";");
v5 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v5.<java.io.PrintWriter: void println()>();
return;
}
public void generateOther(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v4;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v3;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
io.vertx.codegen.MethodInfo v2;
io.vertx.codegen.ClassModel v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.ClassModel,io.vertx.codegen.MethodInfo)>(v1, v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: void generateBodyOther(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println()>();
return;
}
private void generateBody(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.util.function.Function v11;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
java.lang.String v4, v5;
java.util.stream.Collector v13;
boolean v16;
java.io.PrintWriter v15, v17, v18, v2, v3, v6, v9;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v1;
java.util.List v8;
java.util.stream.Stream v10, v12;
java.lang.Object v14;
io.vertx.codegen.MethodInfo v7;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v2 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(" { ");
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
v4 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: java.lang.String getOriginalMethodName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("    \u0001");
virtualinvoke v3.<java.io.PrintWriter: void print(java.lang.String)>(v5);
v6 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v6.<java.io.PrintWriter: void print(java.lang.String)>("(");
v7 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v8 = virtualinvoke v7.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v9 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
v10 = interfaceinvoke v8.<java.util.List: java.util.stream.Stream stream()>();
v11 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator$getName__2353: java.util.function.Function bootstrap$()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v11);
v13 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(", ");
v14 = interfaceinvoke v12.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v13);
virtualinvoke v9.<java.io.PrintWriter: void print(java.lang.String)>(v14);
v15 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v15.<java.io.PrintWriter: void println(java.lang.String)>(").subscribe().with(io.smallrye.mutiny.vertx.UniHelper.NOOP);");
v16 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isFluent()>();
if v16 == 0 goto label1;
v17 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v17.<java.io.PrintWriter: void println(java.lang.String)>("    return this;");
label1:
v18 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v18.<java.io.PrintWriter: void println(java.lang.String)>("  }");
return;
}
private void generateBodyOther(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.util.function.Function v9;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
java.lang.String v14, v4, v5;
java.util.stream.Collector v11;
boolean v16;
java.io.PrintWriter v13, v15, v17, v18, v19, v2, v3;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v1;
java.util.List v7;
java.util.stream.Stream v10, v8;
java.lang.Object v12;
io.vertx.codegen.MethodInfo v6;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v2 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(" { ");
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
v4 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: java.lang.String getOriginalMethodName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("    \u0001(");
virtualinvoke v3.<java.io.PrintWriter: void print(java.lang.String)>(v5);
v6 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v7 = virtualinvoke v6.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v8 = interfaceinvoke v7.<java.util.List: java.util.stream.Stream stream()>();
v9 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator$getName__2354: java.util.function.Function bootstrap$()>();
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v9);
v11 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v11);
v13 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
v14 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", v12);
virtualinvoke v13.<java.io.PrintWriter: void print(java.lang.String)>(v14);
v15 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v15.<java.io.PrintWriter: void print(java.lang.String)>(").subscribe().with(io.smallrye.mutiny.vertx.UniHelper.NOOP);\n");
v16 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isFluent()>();
if v16 == 0 goto label1;
v17 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v17.<java.io.PrintWriter: void print(java.lang.String)>("    return this;\n");
label1:
v18 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v18.<java.io.PrintWriter: void println(java.lang.String)>("  }");
v19 = v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v19.<java.io.PrintWriter: void println(java.lang.String)>("");
return;
}
private io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v14;
io.vertx.codegen.type.TypeInfo v4;
io.vertx.codegen.ClassModel v1;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
java.util.Optional v10;
java.lang.Object v13;
java.lang.String v6, v7, v9;
io.vertx.codegen.MethodInfo v2, v3, v5, v8;
boolean v11, v12;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo copy()>();
v4 = <io.vertx.codegen.type.VoidTypeInfo: io.vertx.codegen.type.TypeInfo INSTANCE>;
v5 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setReturnType(io.vertx.codegen.type.TypeInfo)>(v4);
v6 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001AndForget");
v8 = virtualinvoke v5.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setName(java.lang.String)>(v7);
v9 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v10 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.util.Optional getFluentType(io.vertx.codegen.ClassModel,java.lang.String)>(v1, v9);
v11 = 0;
v12 = virtualinvoke v10.<java.util.Optional: boolean isPresent()>();
if v12 == 0 goto label1;
v11 = 1;
v13 = virtualinvoke v10.<java.util.Optional: java.lang.Object get()>();
virtualinvoke v8.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setReturnType(io.vertx.codegen.type.TypeInfo)>(v13);
label1:
v14 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor createAndForgetMethod(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,boolean)>(v8, v2, v11);
return v14;
}
private io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.util.ArrayList v3;
int v12, v13;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
java.lang.String v16, v17, v6;
boolean v8, v9;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v21;
io.vertx.codegen.type.TypeInfo v5;
io.vertx.codegen.ClassModel v1;
java.util.List v11, v14, v4;
java.util.Optional v7;
java.lang.Object v10;
io.vertx.codegen.MethodInfo v15, v18, v19, v2, v20;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = new java.util.ArrayList;
v4 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
specialinvoke v3.<java.util.ArrayList: void <init>(java.util.Collection)>(v4);
v5 = <io.vertx.codegen.type.VoidTypeInfo: io.vertx.codegen.type.TypeInfo INSTANCE>;
v6 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v7 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator: java.util.Optional getFluentType(io.vertx.codegen.ClassModel,java.lang.String)>(v1, v6);
v8 = 0;
v9 = virtualinvoke v7.<java.util.Optional: boolean isPresent()>();
if v9 == 0 goto label1;
v8 = 1;
v10 = virtualinvoke v7.<java.util.Optional: java.lang.Object get()>();
label1:
v11 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v12 = interfaceinvoke v11.<java.util.List: int size()>();
v13 = v12 - 1;
interfaceinvoke v3.<java.util.List: java.lang.Object remove(int)>(v13);
v14 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.UniMethodGenerator: java.util.List updateParamInfoIfNeeded(java.util.List)>(v3);
v15 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo copy()>();
v16 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001AndForget");
v18 = virtualinvoke v15.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setName(java.lang.String)>(v17);
v19 = virtualinvoke v18.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setReturnType(io.vertx.codegen.type.TypeInfo)>(v10);
v20 = virtualinvoke v19.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setParams(java.util.List)>(v14);
v21 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor createAndForgetMethod(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,boolean)>(v20, v2, v8);
return v21;
}
private java.util.Optional getFluentType(io.vertx.codegen.ClassModel, java.lang.String)
{
java.util.function.Predicate v5;
java.util.function.Function v7;
io.vertx.codegen.ClassModel v1;
java.util.List v3;
java.util.stream.Stream v4, v6, v8;
io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator v0;
java.util.Optional v9;
java.lang.String v2;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v1.<io.vertx.codegen.ClassModel: java.util.List getMethods()>();
v4 = interfaceinvoke v3.<java.util.List: java.util.stream.Stream stream()>();
v5 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator$lambda_getFluentType_0__2355: java.util.function.Predicate bootstrap$(java.lang.String)>(v2);
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v5);
v7 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.ForgetMethodGenerator$getReturnType__2356: java.util.function.Function bootstrap$()>();
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v7);
v9 = interfaceinvoke v8.<java.util.stream.Stream: java.util.Optional findFirst()>();
return v9;
}
}