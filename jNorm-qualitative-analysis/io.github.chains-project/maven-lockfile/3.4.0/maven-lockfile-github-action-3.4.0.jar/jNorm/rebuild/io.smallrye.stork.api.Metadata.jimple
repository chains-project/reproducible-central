public class io.smallrye.stork.api.Metadata extends java.lang.Object
{
private final java.util.EnumMap metadata;
private final java.lang.Class clazz;
private static final io.smallrye.stork.api.Metadata EMPTY;
private void <init>(java.lang.Class, java.util.Map)
{
java.util.EnumMap v4, v5;
java.util.Map v2;
io.smallrye.stork.api.Metadata v0;
java.lang.Class v1;
boolean v3;
v0 := @this: io.smallrye.stork.api.Metadata;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = interfaceinvoke v2.<java.util.Map: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = new java.util.EnumMap;
specialinvoke v4.<java.util.EnumMap: void <init>(java.lang.Class)>(v1);
v0.<io.smallrye.stork.api.Metadata: java.util.EnumMap metadata> = v4;
goto label2;
label1:
v5 = new java.util.EnumMap;
specialinvoke v5.<java.util.EnumMap: void <init>(java.util.Map)>(v2);
v0.<io.smallrye.stork.api.Metadata: java.util.EnumMap metadata> = v5;
label2:
v0.<io.smallrye.stork.api.Metadata: java.lang.Class clazz> = v1;
return;
}
public static io.smallrye.stork.api.Metadata empty()
{
io.smallrye.stork.api.Metadata v0;
v0 = <io.smallrye.stork.api.Metadata: io.smallrye.stork.api.Metadata EMPTY>;
return v0;
}
public static io.smallrye.stork.api.Metadata of(java.lang.Class, java.util.Map)
{
java.util.Map v1;
io.smallrye.stork.api.Metadata v3;
java.lang.Class v0;
java.lang.IllegalArgumentException v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.util.Map;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`metadata` must not be `null`");
throw v2;
label1:
v3 = new io.smallrye.stork.api.Metadata;
specialinvoke v3.<io.smallrye.stork.api.Metadata: void <init>(java.lang.Class,java.util.Map)>(v0, v1);
return v3;
}
public static io.smallrye.stork.api.Metadata of(java.lang.Class)
{
java.util.Map v3;
io.smallrye.stork.api.Metadata v2;
java.lang.Class v0;
java.lang.IllegalArgumentException v1;
v0 := @parameter0: java.lang.Class;
if v0 != null goto label1;
v1 = new java.lang.IllegalArgumentException;
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`key` must not be `null`");
throw v1;
label1:
v2 = new io.smallrye.stork.api.Metadata;
v3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v2.<io.smallrye.stork.api.Metadata: void <init>(java.lang.Class,java.util.Map)>(v0, v3);
return v2;
}
public io.smallrye.stork.api.Metadata 'with'(java.lang.Enum, java.lang.Object)
{
java.util.EnumMap v7, v8;
io.smallrye.stork.api.Metadata v0, v9;
java.lang.IllegalArgumentException v3, v4;
java.lang.Enum v1;
java.lang.Class v10;
java.lang.Object v2;
java.lang.String v5, v6;
v0 := @this: io.smallrye.stork.api.Metadata;
v1 := @parameter0: java.lang.Enum;
v2 := @parameter1: java.lang.Object;
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`key` must not be `null`");
throw v3;
label1:
if v2 != null goto label2;
v4 = new java.lang.IllegalArgumentException;
v5 = virtualinvoke v1.<java.lang.Enum: java.lang.String name()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 should not be `null`");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v4;
label2:
v7 = new java.util.EnumMap;
v8 = v0.<io.smallrye.stork.api.Metadata: java.util.EnumMap metadata>;
specialinvoke v7.<java.util.EnumMap: void <init>(java.util.EnumMap)>(v8);
virtualinvoke v7.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>(v1, v2);
v9 = new io.smallrye.stork.api.Metadata;
v10 = v0.<io.smallrye.stork.api.Metadata: java.lang.Class clazz>;
specialinvoke v9.<io.smallrye.stork.api.Metadata: void <init>(java.lang.Class,java.util.Map)>(v10, v7);
return v9;
}
public java.util.EnumMap getMetadata()
{
io.smallrye.stork.api.Metadata v0;
java.util.EnumMap v1;
v0 := @this: io.smallrye.stork.api.Metadata;
v1 = v0.<io.smallrye.stork.api.Metadata: java.util.EnumMap metadata>;
return v1;
}
static void <clinit>()
{
io.smallrye.stork.api.Metadata v0;
java.util.Map v1;
v0 = new io.smallrye.stork.api.Metadata;
v1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v0.<io.smallrye.stork.api.Metadata: void <init>(java.lang.Class,java.util.Map)>(class "Lio/smallrye/stork/api/Metadata$NoMetadataKey;", v1);
<io.smallrye.stork.api.Metadata: io.smallrye.stork.api.Metadata EMPTY> = v0;
return;
}
}