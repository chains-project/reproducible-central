public class io.smallrye.stork.impl.ServiceInstanceWithStatGathering extends java.lang.Object implements io.smallrye.stork.api.ServiceInstance
{
private final io.smallrye.stork.api.ServiceInstance delegate;
private final io.smallrye.stork.spi.CallStatisticsCollector statistics;
volatile long start;
public void <init>(io.smallrye.stork.api.ServiceInstance, io.smallrye.stork.spi.CallStatisticsCollector)
{
io.smallrye.stork.api.ServiceInstance v1;
io.smallrye.stork.spi.CallStatisticsCollector v2;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 := @parameter0: io.smallrye.stork.api.ServiceInstance;
v2 := @parameter1: io.smallrye.stork.spi.CallStatisticsCollector;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.api.ServiceInstance delegate> = v1;
v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.spi.CallStatisticsCollector statistics> = v2;
return;
}
public boolean gatherStatistics()
{
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
return 1;
}
public long getId()
{
io.smallrye.stork.api.ServiceInstance v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
long v2;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.api.ServiceInstance delegate>;
v2 = interfaceinvoke v1.<io.smallrye.stork.api.ServiceInstance: long getId()>();
return v2;
}
public java.lang.String getHost()
{
io.smallrye.stork.api.ServiceInstance v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
java.lang.String v2;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.api.ServiceInstance delegate>;
v2 = interfaceinvoke v1.<io.smallrye.stork.api.ServiceInstance: java.lang.String getHost()>();
return v2;
}
public int getPort()
{
int v2;
io.smallrye.stork.api.ServiceInstance v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.api.ServiceInstance delegate>;
v2 = interfaceinvoke v1.<io.smallrye.stork.api.ServiceInstance: int getPort()>();
return v2;
}
public java.util.Optional getPath()
{
io.smallrye.stork.api.ServiceInstance v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
java.util.Optional v2;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.api.ServiceInstance delegate>;
v2 = interfaceinvoke v1.<io.smallrye.stork.api.ServiceInstance: java.util.Optional getPath()>();
return v2;
}
public boolean isSecure()
{
io.smallrye.stork.api.ServiceInstance v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
boolean v2;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.api.ServiceInstance delegate>;
v2 = interfaceinvoke v1.<io.smallrye.stork.api.ServiceInstance: boolean isSecure()>();
return v2;
}
public void recordStart(boolean)
{
io.smallrye.stork.spi.CallStatisticsCollector v3;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
long v2, v4;
boolean v1;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <java.lang.System: long nanoTime()>();
v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: long start> = v2;
label1:
v3 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.spi.CallStatisticsCollector statistics>;
v4 = virtualinvoke v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: long getId()>();
interfaceinvoke v3.<io.smallrye.stork.spi.CallStatisticsCollector: void recordStart(long,boolean)>(v4, v1);
return;
}
public void recordReply()
{
io.smallrye.stork.spi.CallStatisticsCollector v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
long v2, v3, v4, v5;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.spi.CallStatisticsCollector statistics>;
v2 = virtualinvoke v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: long getId()>();
v3 = staticinvoke <java.lang.System: long nanoTime()>();
v4 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: long start>;
v5 = v3 - v4;
interfaceinvoke v1.<io.smallrye.stork.spi.CallStatisticsCollector: void recordReply(long,long)>(v2, v5);
return;
}
public void recordEnd(java.lang.Throwable)
{
io.smallrye.stork.spi.CallStatisticsCollector v2;
java.lang.Throwable v1;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
long v3;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.spi.CallStatisticsCollector statistics>;
v3 = virtualinvoke v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: long getId()>();
interfaceinvoke v2.<io.smallrye.stork.spi.CallStatisticsCollector: void recordEnd(long,java.lang.Throwable)>(v3, v1);
return;
}
public void mockRecordingTime(long)
{
io.smallrye.stork.spi.CallStatisticsCollector v2;
io.smallrye.stork.impl.ServiceInstanceWithStatGathering v0;
long v1, v3;
v0 := @this: io.smallrye.stork.impl.ServiceInstanceWithStatGathering;
v1 := @parameter0: long;
v2 = v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: io.smallrye.stork.spi.CallStatisticsCollector statistics>;
v3 = virtualinvoke v0.<io.smallrye.stork.impl.ServiceInstanceWithStatGathering: long getId()>();
interfaceinvoke v2.<io.smallrye.stork.spi.CallStatisticsCollector: void recordReply(long,long)>(v3, v1);
return;
}
}