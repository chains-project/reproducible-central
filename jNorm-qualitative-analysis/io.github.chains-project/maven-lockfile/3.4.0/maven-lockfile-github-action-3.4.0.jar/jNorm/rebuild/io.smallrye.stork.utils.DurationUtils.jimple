public class io.smallrye.stork.utils.DurationUtils extends java.lang.Object
{
private static final java.util.regex.Pattern DIGITS;
private void <init>()
{
io.smallrye.stork.utils.DurationUtils v0;
v0 := @this: io.smallrye.stork.utils.DurationUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.time.Duration parseDuration(java.lang.String, java.lang.String)
{
java.util.function.Predicate v6;
long v8;
java.lang.IllegalArgumentException v3;
java.time.Duration v11, v9;
java.lang.String v0, v1, v10, v4;
java.util.regex.Pattern v5;
boolean v2, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>("-");
if v2 == 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Negative \u0001 specified for service discovery: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = <io.smallrye.stork.utils.DurationUtils: java.util.regex.Pattern DIGITS>;
v6 = virtualinvoke v5.<java.util.regex.Pattern: java.util.function.Predicate asPredicate()>();
v7 = interfaceinvoke v6.<java.util.function.Predicate: boolean test(java.lang.Object)>(v0);
if v7 == 0 goto label2;
v8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v0);
v9 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(v8);
return v9;
label2:
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("PT\u0001");
v11 = staticinvoke <java.time.Duration: java.time.Duration parse(java.lang.CharSequence)>(v10);
return v11;
}
static void <clinit>()
{
java.util.regex.Pattern v0;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[-+]?\\d+$");
<io.smallrye.stork.utils.DurationUtils: java.util.regex.Pattern DIGITS> = v0;
return;
}
}