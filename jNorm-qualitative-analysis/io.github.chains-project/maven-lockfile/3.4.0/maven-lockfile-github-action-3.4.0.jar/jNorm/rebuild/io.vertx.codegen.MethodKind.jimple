public final enum class io.vertx.codegen.MethodKind extends java.lang.Enum
{
public static final enum io.vertx.codegen.MethodKind HANDLER;
public static final enum io.vertx.codegen.MethodKind CALLBACK;
public static final enum io.vertx.codegen.MethodKind FUTURE;
public static final enum io.vertx.codegen.MethodKind OTHER;
private static final io.vertx.codegen.MethodKind[] $VALUES;
public static io.vertx.codegen.MethodKind[] values()
{
java.lang.Object v1;
io.vertx.codegen.MethodKind[] v0;
v0 = <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.vertx.codegen.MethodKind valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/vertx/codegen/MethodKind;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
io.vertx.codegen.MethodKind v0;
java.lang.String v1;
v0 := @this: io.vertx.codegen.MethodKind;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public static java.util.Map vars()
{
io.vertx.codegen.MethodKind[] v1;
int v2, v3;
io.vertx.codegen.MethodKind v4;
java.util.HashMap v0;
java.lang.String v5, v6;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
v1 = staticinvoke <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<io.vertx.codegen.MethodKind: java.lang.String name()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("METHOD_\u0001");
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
private static io.vertx.codegen.MethodKind[] $values()
{
io.vertx.codegen.MethodKind[] v0;
io.vertx.codegen.MethodKind v1, v2, v3, v4;
v0 = newarray (io.vertx.codegen.MethodKind)[4];
v1 = <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind HANDLER>;
v0[0] = v1;
v2 = <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind CALLBACK>;
v0[1] = v2;
v3 = <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind FUTURE>;
v0[2] = v3;
v4 = <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind OTHER>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
io.vertx.codegen.MethodKind[] v4;
io.vertx.codegen.MethodKind v0, v1, v2, v3;
v0 = new io.vertx.codegen.MethodKind;
specialinvoke v0.<io.vertx.codegen.MethodKind: void <init>(java.lang.String,int)>("HANDLER", 0);
<io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind HANDLER> = v0;
v1 = new io.vertx.codegen.MethodKind;
specialinvoke v1.<io.vertx.codegen.MethodKind: void <init>(java.lang.String,int)>("CALLBACK", 1);
<io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind CALLBACK> = v1;
v2 = new io.vertx.codegen.MethodKind;
specialinvoke v2.<io.vertx.codegen.MethodKind: void <init>(java.lang.String,int)>("FUTURE", 2);
<io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind FUTURE> = v2;
v3 = new io.vertx.codegen.MethodKind;
specialinvoke v3.<io.vertx.codegen.MethodKind: void <init>(java.lang.String,int)>("OTHER", 3);
<io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind OTHER> = v3;
v4 = staticinvoke <io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind[] $values()>();
<io.vertx.codegen.MethodKind: io.vertx.codegen.MethodKind[] $VALUES> = v4;
return;
}
}