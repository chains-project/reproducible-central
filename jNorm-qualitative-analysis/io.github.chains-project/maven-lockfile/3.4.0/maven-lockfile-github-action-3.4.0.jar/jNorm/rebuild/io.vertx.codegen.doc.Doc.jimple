public class io.vertx.codegen.doc.Doc extends java.lang.Object
{
private static final java.util.regex.Pattern TAG_START;
private static final java.util.regex.Pattern BODY_START;
final io.vertx.codegen.doc.Text firstSentence;
final io.vertx.codegen.doc.Text body;
final java.util.List blockTags;
public static io.vertx.codegen.doc.Doc create(java.lang.String)
{
java.util.ArrayList v3;
java.util.regex.Matcher v18, v2;
io.vertx.codegen.doc.Tag v12, v13, v15;
int v11, v21, v22, v5, v8, v9;
java.lang.String v0, v14, v16, v19, v6, v7;
boolean v10, v20, v4;
io.vertx.codegen.doc.Doc v23;
java.util.regex.Pattern v1, v17;
v0 := @parameter0: java.lang.String;
v1 = <io.vertx.codegen.doc.Doc: java.util.regex.Pattern TAG_START>;
v2 = virtualinvoke v1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = virtualinvoke v2.<java.util.regex.Matcher: boolean find()>();
if v4 == 0 goto label4;
v5 = virtualinvoke v2.<java.util.regex.Matcher: int start()>();
v6 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
label1:
v7 = virtualinvoke v2.<java.util.regex.Matcher: java.lang.String group(int)>(2);
v8 = virtualinvoke v2.<java.util.regex.Matcher: int end()>();
v9 = v8 + 1;
v10 = virtualinvoke v2.<java.util.regex.Matcher: boolean find()>();
if v10 == 0 goto label3;
v11 = virtualinvoke v2.<java.util.regex.Matcher: int start()>();
if v11 > v9 goto label2;
v12 = new io.vertx.codegen.doc.Tag;
specialinvoke v12.<io.vertx.codegen.doc.Tag: void <init>(java.lang.String,java.lang.String)>(v7, "");
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v12);
goto label1;
label2:
v13 = new io.vertx.codegen.doc.Tag;
v14 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(v9, v11);
specialinvoke v13.<io.vertx.codegen.doc.Tag: void <init>(java.lang.String,java.lang.String)>(v7, v14);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v13);
goto label1;
label3:
v15 = new io.vertx.codegen.doc.Tag;
v16 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v9);
specialinvoke v15.<io.vertx.codegen.doc.Tag: void <init>(java.lang.String,java.lang.String)>(v7, v16);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v15);
goto label5;
label4:
v6 = v0;
label5:
v17 = <io.vertx.codegen.doc.Doc: java.util.regex.Pattern BODY_START>;
v18 = virtualinvoke v17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v6);
v19 = null;
v20 = virtualinvoke v18.<java.util.regex.Matcher: boolean find()>();
if v20 == 0 goto label6;
v21 = virtualinvoke v18.<java.util.regex.Matcher: int end()>();
v19 = virtualinvoke v6.<java.lang.String: java.lang.String substring(int)>(v21);
v22 = virtualinvoke v18.<java.util.regex.Matcher: int start()>();
v6 = virtualinvoke v6.<java.lang.String: java.lang.String substring(int,int)>(0, v22);
label6:
v23 = new io.vertx.codegen.doc.Doc;
specialinvoke v23.<io.vertx.codegen.doc.Doc: void <init>(java.lang.String,java.lang.String,java.util.List)>(v6, v19, v3);
return v23;
}
public void <init>(io.vertx.codegen.doc.Text)
{
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v1;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 := @parameter0: io.vertx.codegen.doc.Text;
specialinvoke v0.<io.vertx.codegen.doc.Doc: void <init>(io.vertx.codegen.doc.Text,io.vertx.codegen.doc.Text)>(v1, null);
return;
}
public void <init>(io.vertx.codegen.doc.Text, io.vertx.codegen.doc.Text)
{
java.util.List v3;
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v1, v2;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 := @parameter0: io.vertx.codegen.doc.Text;
v2 := @parameter1: io.vertx.codegen.doc.Text;
v3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
specialinvoke v0.<io.vertx.codegen.doc.Doc: void <init>(io.vertx.codegen.doc.Text,io.vertx.codegen.doc.Text,java.util.List)>(v1, v2, v3);
return;
}
public void <init>(io.vertx.codegen.doc.Text, io.vertx.codegen.doc.Text, java.util.List)
{
java.util.List v3;
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v1, v2;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 := @parameter0: io.vertx.codegen.doc.Text;
v2 := @parameter1: io.vertx.codegen.doc.Text;
v3 := @parameter2: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence> = v1;
v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body> = v2;
v0.<io.vertx.codegen.doc.Doc: java.util.List blockTags> = v3;
return;
}
public void <init>(java.lang.String)
{
java.lang.String v1;
io.vertx.codegen.doc.Doc v0;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.vertx.codegen.doc.Doc: void <init>(java.lang.String,java.lang.String)>(v1, null);
return;
}
public void <init>(java.lang.String, java.lang.String)
{
java.util.List v3;
io.vertx.codegen.doc.Doc v0;
java.lang.String v1, v2;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
specialinvoke v0.<io.vertx.codegen.doc.Doc: void <init>(java.lang.String,java.lang.String,java.util.List)>(v1, v2, v3);
return;
}
public void <init>(java.lang.String, java.lang.String, java.util.List)
{
java.util.List v3;
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v4, v5;
java.lang.String v1, v2;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = new io.vertx.codegen.doc.Text;
specialinvoke v4.<io.vertx.codegen.doc.Text: void <init>(java.lang.String)>(v1);
v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence> = v4;
if v2 == null goto label1;
v5 = new io.vertx.codegen.doc.Text;
specialinvoke v5.<io.vertx.codegen.doc.Text: void <init>(java.lang.String)>(v2);
goto label2;
label1:
v5 = null;
label2:
v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body> = v5;
v0.<io.vertx.codegen.doc.Doc: java.util.List blockTags> = v3;
return;
}
public java.util.List getTokens()
{
java.util.ArrayList v2;
io.vertx.codegen.doc.Text v1, v11, v15, v17, v3, v7;
int v10, v5, v6, v9;
io.vertx.codegen.doc.Token$LineBreak v13, v14;
java.util.List v12, v16, v18, v4, v8;
io.vertx.codegen.doc.Doc v0;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body>;
if v1 == null goto label1;
v2 = new java.util.ArrayList;
v3 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence>;
v4 = v3.<io.vertx.codegen.doc.Text: java.util.List tokens>;
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = v5 + 2;
v7 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body>;
v8 = v7.<io.vertx.codegen.doc.Text: java.util.List tokens>;
v9 = interfaceinvoke v8.<java.util.List: int size()>();
v10 = v6 + v9;
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(v10);
v11 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence>;
v12 = v11.<io.vertx.codegen.doc.Text: java.util.List tokens>;
virtualinvoke v2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(v12);
v13 = new io.vertx.codegen.doc.Token$LineBreak;
specialinvoke v13.<io.vertx.codegen.doc.Token$LineBreak: void <init>(java.lang.String)>("\n");
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v13);
v14 = new io.vertx.codegen.doc.Token$LineBreak;
specialinvoke v14.<io.vertx.codegen.doc.Token$LineBreak: void <init>(java.lang.String)>("\n");
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v14);
v15 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body>;
v16 = v15.<io.vertx.codegen.doc.Text: java.util.List tokens>;
virtualinvoke v2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(v16);
return v2;
label1:
v17 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence>;
v18 = virtualinvoke v17.<io.vertx.codegen.doc.Text: java.util.List getTokens()>();
return v18;
}
public io.vertx.codegen.doc.Text getFirstSentence()
{
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v1;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence>;
return v1;
}
public io.vertx.codegen.doc.Text getBody()
{
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v1;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body>;
return v1;
}
public java.util.List getBlockTags()
{
java.util.List v1;
io.vertx.codegen.doc.Doc v0;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 = v0.<io.vertx.codegen.doc.Doc: java.util.List blockTags>;
return v1;
}
public java.lang.String toString()
{
java.util.Iterator v7;
java.util.List v6;
io.vertx.codegen.doc.Doc v0;
io.vertx.codegen.doc.Text v2, v3, v5;
java.lang.Object v9;
java.lang.StringBuilder v1, v10, v4;
java.lang.String v11;
boolean v8;
v0 := @this: io.vertx.codegen.doc.Doc;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text firstSentence>;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v2);
v3 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body>;
if v3 == null goto label1;
v4 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");
v5 = v0.<io.vertx.codegen.doc.Doc: io.vertx.codegen.doc.Text body>;
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v5);
label1:
v6 = v0.<io.vertx.codegen.doc.Doc: java.util.List blockTags>;
v7 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v9);
goto label2;
label3:
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
static void <clinit>()
{
java.util.regex.Pattern v0, v1;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(^|\n)\\p{javaWhitespace}*@([^\\p{javaWhitespace}]+)", 8);
<io.vertx.codegen.doc.Doc: java.util.regex.Pattern TAG_START> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\n{2,}");
<io.vertx.codegen.doc.Doc: java.util.regex.Pattern BODY_START> = v1;
return;
}
}