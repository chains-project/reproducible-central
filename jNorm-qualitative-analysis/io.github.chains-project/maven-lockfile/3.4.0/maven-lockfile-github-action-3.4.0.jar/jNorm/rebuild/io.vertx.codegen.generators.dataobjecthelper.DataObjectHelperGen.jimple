public class io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen extends io.vertx.codegen.Generator
{
private io.vertx.codegen.format.Case formatter;
public void <init>()
{
java.util.Set v1;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
specialinvoke v0.<io.vertx.codegen.Generator: void <init>()>();
v1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("dataObject");
v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: java.util.Set kinds> = v1;
v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: java.lang.String name> = "data_object_converters";
return;
}
public java.util.Collection annotations()
{
java.util.List v1;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(class "Lio/vertx/codegen/annotations/DataObject;");
return v1;
}
public java.lang.String filename(io.vertx.codegen.DataObjectModel)
{
io.vertx.codegen.DataObjectModel v1;
java.lang.String v4, v5;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
boolean v2, v3;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: io.vertx.codegen.DataObjectModel;
v2 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: boolean isClass()>();
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: boolean getGenerateConverter()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: java.lang.String getFqn()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001Converter.java");
return v5;
label1:
return null;
}
public java.lang.String render(io.vertx.codegen.DataObjectModel, int, int, java.util.Map)
{
byte v26;
io.vertx.codegen.format.Case v5;
java.util.Map v4;
int v2, v27, v3;
java.lang.String v10, v11, v14, v15, v17, v19, v21, v22, v25, v30;
boolean v12, v24, v28, v29, v9;
java.io.PrintWriter v7;
io.vertx.codegen.type.ClassTypeInfo v13, v16, v18, v20;
io.vertx.codegen.DataObjectModel v1;
java.io.StringWriter v6;
io.vertx.codegen.writer.CodeWriter v23, v8;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: io.vertx.codegen.DataObjectModel;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: java.util.Map;
v5 = specialinvoke v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: io.vertx.codegen.format.Case getCase(io.vertx.codegen.DataObjectModel)>(v1);
v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: io.vertx.codegen.format.Case formatter> = v5;
v6 = new java.io.StringWriter;
specialinvoke v6.<java.io.StringWriter: void <init>()>();
v7 = new java.io.PrintWriter;
specialinvoke v7.<java.io.PrintWriter: void <init>(java.io.Writer)>(v6);
v8 = new io.vertx.codegen.writer.CodeWriter;
specialinvoke v8.<io.vertx.codegen.writer.CodeWriter: void <init>(java.io.Writer)>(v7);
v9 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: boolean isPublicConverter()>();
if v9 == 0 goto label01;
v10 = "public";
goto label02;
label01:
v10 = "";
label02:
v11 = v10;
v12 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: boolean getInheritConverter()>();
v13 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v14 = virtualinvoke v13.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getPackageName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("package \u0001;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>(v15);
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("import io.vertx.core.json.JsonObject;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("import io.vertx.core.json.JsonArray;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("import io.vertx.core.json.impl.JsonUtil;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("import java.time.Instant;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("import java.time.format.DateTimeFormatter;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("import java.util.Base64;\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("/**\n");
v16 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.vertx.codegen.type.ClassTypeInfo)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" * Converter and mapper for {@link \u0001}.\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>(v17);
v18 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.vertx.codegen.type.ClassTypeInfo)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" * NOTE: This class has been automatically generated from the {@link \u0001} original class using Vert.x codegen.\n");
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>(v19);
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>(" */\n");
v20 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v21 = virtualinvoke v20.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getSimpleName()>();
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v21) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("public class \u0001Converter {");
v23 = virtualinvoke v8.<io.vertx.codegen.writer.CodeWriter: io.vertx.codegen.writer.CodeWriter codeln(java.lang.String)>(v22);
virtualinvoke v23.<io.vertx.codegen.writer.CodeWriter: io.vertx.codegen.writer.CodeWriter newLine()>();
v24 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: boolean getGenerateConverter()>();
if v24 == 0 goto label10;
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("\n");
v25 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: java.lang.String getBase64Type()>();
v26 = -1;
v27 = virtualinvoke v25.<java.lang.String: int hashCode()>();
lookupswitch(v27)
{
case -1856179776: goto label04;
case 93508654: goto label03;
default: goto label05;
};
label03:
v28 = virtualinvoke v25.<java.lang.String: boolean equals(java.lang.Object)>("basic");
if v28 == 0 goto label05;
v26 = 0;
goto label05;
label04:
v29 = virtualinvoke v25.<java.lang.String: boolean equals(java.lang.Object)>("base64url");
if v29 == 0 goto label05;
v26 = 1;
label05:
lookupswitch(v26)
{
case 0: goto label06;
case 1: goto label07;
default: goto label08;
};
label06:
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("  private static final Base64.Decoder BASE64_DECODER = Base64.getDecoder();\n  private static final Base64.Encoder BASE64_ENCODER = Base64.getEncoder();\n");
goto label09;
label07:
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("  private static final Base64.Decoder BASE64_DECODER = Base64.getUrlDecoder();\n  private static final Base64.Encoder BASE64_ENCODER = Base64.getUrlEncoder().withoutPadding();\n");
goto label09;
label08:
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("  private static final Base64.Decoder BASE64_DECODER = JsonUtil.BASE64_DECODER;\n  private static final Base64.Encoder BASE64_ENCODER = JsonUtil.BASE64_ENCODER;\n");
label09:
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("\n");
specialinvoke v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: void genFromJson(java.lang.String,boolean,io.vertx.codegen.DataObjectModel,java.io.PrintWriter)>(v11, v12, v1, v7);
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("\n");
specialinvoke v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: void genToJson(java.lang.String,boolean,io.vertx.codegen.DataObjectModel,java.io.PrintWriter)>(v11, v12, v1, v7);
label10:
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>("}\n");
v30 = virtualinvoke v6.<java.io.StringWriter: java.lang.String toString()>();
return v30;
}
private void genToJson(java.lang.String, boolean, io.vertx.codegen.DataObjectModel, java.io.PrintWriter)
{
java.io.PrintWriter v4;
io.vertx.codegen.type.ClassTypeInfo v5;
io.vertx.codegen.DataObjectModel v3;
java.util.Collection v10;
java.util.function.Consumer v11;
java.util.Map v9;
java.lang.String v1, v6, v7, v8;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
boolean v2;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: io.vertx.codegen.DataObjectModel;
v4 := @parameter3: java.io.PrintWriter;
v5 = virtualinvoke v3.<io.vertx.codegen.DataObjectModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v6 = virtualinvoke v5.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getSimpleName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  \u0001 static void toJson(\u0001 obj, JsonObject json) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v7);
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("    toJson(obj, json.getMap());\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("  }\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("\n");
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  \u0001 static void toJson(\u0001 obj, java.util.Map<String, Object> json) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v8);
v9 = virtualinvoke v3.<io.vertx.codegen.DataObjectModel: java.util.Map getPropertyMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.util.Collection values()>();
v11 = staticinvoke <io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen$lambda_genToJson_0__2535: java.util.function.Consumer bootstrap$(io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen,boolean,java.io.PrintWriter)>(v0, v2, v4);
interfaceinvoke v10.<java.util.Collection: void forEach(java.util.function.Consumer)>(v11);
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("  }\n");
return;
}
private void genPropToJson(java.lang.String, java.lang.String, io.vertx.codegen.PropertyInfo, java.io.PrintWriter)
{
io.vertx.codegen.format.Case v5, v6;
io.vertx.codegen.type.ClassKind v28, v29, v35, v36;
boolean v10, v18, v9;
java.io.PrintWriter v4;
io.vertx.codegen.PropertyInfo v3;
io.vertx.codegen.type.TypeInfo v27, v34;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
java.lang.String v1, v11, v12, v13, v14, v15, v16, v17, v19, v2, v20, v21, v22, v23, v24, v25, v26, v30, v31, v32, v33, v37, v7, v8;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.codegen.PropertyInfo;
v4 := @parameter3: java.io.PrintWriter;
v5 = <io.vertx.codegen.format.LowerCamelCase: io.vertx.codegen.format.Case INSTANCE>;
v6 = v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: io.vertx.codegen.format.Case formatter>;
v7 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getName()>();
v8 = virtualinvoke v5.<io.vertx.codegen.format.Case: java.lang.String 'to'(io.vertx.codegen.format.Case,java.lang.String)>(v6, v7);
v9 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: boolean isList()>();
if v9 != 0 goto label1;
v10 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: boolean isSet()>();
if v10 == 0 goto label2;
label1:
v11 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getGetterMethod()>();
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("    ", v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001if (obj.\u0001() != null) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v12);
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("    ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  JsonArray array = new JsonArray();\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v13);
v14 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getGetterMethod()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("    ", v14, v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  obj.\u0001().forEach(item -> array.add(\u0001item\u0001));\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v15);
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("    ", v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  json.put(\"\u0001\", array);\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v16);
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("    ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001}\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v17);
goto label5;
label2:
v18 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: boolean isMap()>();
if v18 == 0 goto label3;
v19 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getGetterMethod()>();
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("    ", v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001if (obj.\u0001() != null) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v20);
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("    ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  JsonObject map = new JsonObject();\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v21);
v22 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getGetterMethod()>();
v23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("    ", v22, v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  obj.\u0001().forEach((key, value) -> map.put(key, \u0001value\u0001));\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v23);
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("    ", v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  json.put(\"\u0001\", map);\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v24);
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("    ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001}\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v25);
goto label5;
label3:
v26 = "";
v27 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: io.vertx.codegen.type.TypeInfo getType()>();
v28 = virtualinvoke v27.<io.vertx.codegen.type.TypeInfo: io.vertx.codegen.type.ClassKind getKind()>();
v29 = <io.vertx.codegen.type.ClassKind: io.vertx.codegen.type.ClassKind PRIMITIVE>;
if v28 == v29 goto label4;
v26 = "  ";
v30 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getGetterMethod()>();
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("    ", v30) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001if (obj.\u0001() != null) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v31);
label4:
v32 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: java.lang.String getGetterMethod()>();
v33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("    ", v26, v8, v1, v32, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001json.put(\"\u0001\", \u0001obj.\u0001()\u0001);\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v33);
v34 = virtualinvoke v3.<io.vertx.codegen.PropertyInfo: io.vertx.codegen.type.TypeInfo getType()>();
v35 = virtualinvoke v34.<io.vertx.codegen.type.TypeInfo: io.vertx.codegen.type.ClassKind getKind()>();
v36 = <io.vertx.codegen.type.ClassKind: io.vertx.codegen.type.ClassKind PRIMITIVE>;
if v35 == v36 goto label5;
v37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("    ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001}\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v37);
label5:
return;
}
private void genFromJson(java.lang.String, boolean, io.vertx.codegen.DataObjectModel, java.io.PrintWriter)
{
java.io.PrintWriter v4;
io.vertx.codegen.type.ClassTypeInfo v5;
io.vertx.codegen.DataObjectModel v3;
java.util.Collection v9;
java.util.function.Consumer v10;
java.util.Map v8;
java.lang.String v1, v6, v7;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
boolean v2;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: io.vertx.codegen.DataObjectModel;
v4 := @parameter3: java.io.PrintWriter;
v5 = virtualinvoke v3.<io.vertx.codegen.DataObjectModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v6 = virtualinvoke v5.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getSimpleName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  \u0001 static void fromJson(Iterable<java.util.Map.Entry<String, Object>> json, \u0001 obj) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>(v7);
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("    for (java.util.Map.Entry<String, Object> member : json) {\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("      switch (member.getKey()) {\n");
v8 = virtualinvoke v3.<io.vertx.codegen.DataObjectModel: java.util.Map getPropertyMap()>();
v9 = interfaceinvoke v8.<java.util.Map: java.util.Collection values()>();
v10 = staticinvoke <io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen$lambda_genFromJson_1__2536: java.util.function.Consumer bootstrap$(io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen,boolean,java.io.PrintWriter)>(v0, v2, v4);
interfaceinvoke v9.<java.util.Collection: void forEach(java.util.function.Consumer)>(v10);
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("      }\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("    }\n");
virtualinvoke v4.<java.io.PrintWriter: void print(java.lang.String)>("  }\n");
return;
}
private void genPropFromJson(java.lang.String, java.lang.String, java.lang.String, io.vertx.codegen.PropertyInfo, java.io.PrintWriter)
{
io.vertx.codegen.format.Case v6, v7;
boolean v11, v12, v14, v15, v26, v33, v35, v41, v52;
java.io.PrintWriter v5;
io.vertx.codegen.PropertyInfo v4;
io.vertx.codegen.type.TypeInfo v17, v42;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
java.lang.String v1, v10, v13, v16, v18, v19, v2, v20, v21, v22, v23, v24, v25, v27, v28, v29, v3, v30, v31, v32, v34, v36, v37, v38, v39, v40, v43, v44, v45, v46, v47, v48, v49, v50, v51, v53, v54, v55, v56, v57, v8, v9;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.vertx.codegen.PropertyInfo;
v5 := @parameter4: java.io.PrintWriter;
v6 = <io.vertx.codegen.format.LowerCamelCase: io.vertx.codegen.format.Case INSTANCE>;
v7 = v0.<io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen: io.vertx.codegen.format.Case formatter>;
v8 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: java.lang.String getName()>();
v9 = virtualinvoke v6.<io.vertx.codegen.format.Case: java.lang.String 'to'(io.vertx.codegen.format.Case,java.lang.String)>(v7, v8);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001case \"\u0001\":\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v10);
v11 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isList()>();
if v11 != 0 goto label01;
v12 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isSet()>();
if v12 == 0 goto label06;
label01:
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  if (member.getValue() instanceof JsonArray) {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v13);
v14 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isSetter()>();
if v14 == 0 goto label04;
v15 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isList()>();
if v15 == 0 goto label02;
v16 = "java.util.ArrayList";
goto label03;
label02:
v16 = "java.util.LinkedHashSet";
label03:
v17 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: io.vertx.codegen.type.TypeInfo getType()>();
v18 = virtualinvoke v17.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("        ", v16, v18, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    \u0001<\u0001> list =  new \u0001<>();\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v19);
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    ((Iterable<Object>)member.getValue()).forEach( item -> {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v20);
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001      if (item instanceof \u0001)\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v21);
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>("        ", v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001        list.add(\u0001item\u0001);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v22);
v23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    });\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v23);
v24 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: java.lang.String getSetterMethod()>();
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    obj.\u0001(list);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v25);
goto label05;
label04:
v26 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isAdder()>();
if v26 == 0 goto label05;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    ((Iterable<Object>)member.getValue()).forEach( item -> {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v27);
v28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001      if (item instanceof \u0001)\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v28);
v29 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: java.lang.String getAdderMethod()>();
v30 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("        ", v29, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001        obj.\u0001(\u0001item\u0001);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v30);
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    });\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v31);
label05:
v32 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  }\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v32);
goto label10;
label06:
v33 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isMap()>();
if v33 == 0 goto label09;
v34 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  if (member.getValue() instanceof JsonObject) {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v34);
v35 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isAdder()>();
if v35 == 0 goto label07;
v36 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    ((Iterable<java.util.Map.Entry<String, Object>>)member.getValue()).forEach(entry -> {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v36);
v37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001      if (entry.getValue() instanceof \u0001)\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v37);
v38 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: java.lang.String getAdderMethod()>();
v39 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("        ", v38, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001        obj.\u0001(entry.getKey(), \u0001entry.getValue()\u0001);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v39);
v40 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    });\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v40);
goto label08;
label07:
v41 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isSetter()>();
if v41 == 0 goto label08;
v42 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: io.vertx.codegen.type.TypeInfo getType()>();
v43 = virtualinvoke v42.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
v44 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v43) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    java.util.Map<String, \u0001> map = new java.util.LinkedHashMap<>();\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v44);
v45 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    ((Iterable<java.util.Map.Entry<String, Object>>)member.getValue()).forEach(entry -> {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v45);
v46 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001      if (entry.getValue() instanceof \u0001)\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v46);
v47 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>("        ", v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001        map.put(entry.getKey(), \u0001entry.getValue()\u0001);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v47);
v48 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    });\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v48);
v49 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: java.lang.String getSetterMethod()>();
v50 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v49) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    obj.\u0001(map);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v50);
label08:
v51 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  }\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v51);
goto label10;
label09:
v52 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: boolean isSetter()>();
if v52 == 0 goto label10;
v53 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>("        ", v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  if (member.getValue() instanceof \u0001) {\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v53);
v54 = virtualinvoke v4.<io.vertx.codegen.PropertyInfo: java.lang.String getSetterMethod()>();
v55 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("        ", v54, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001    obj.\u0001(\u0001member.getValue()\u0001);\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v55);
v56 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  }\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v56);
label10:
v57 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>("        ") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  break;\n");
virtualinvoke v5.<java.io.PrintWriter: void print(java.lang.String)>(v57);
return;
}
private io.vertx.codegen.format.Case getCase(io.vertx.codegen.DataObjectModel)
{
byte v10;
io.vertx.codegen.format.Case v17, v18, v19, v20, v21;
int v11;
java.lang.String v9;
boolean v12, v13, v14, v15, v16;
java.lang.UnsupportedOperationException v22;
io.vertx.codegen.DataObjectModel v1;
java.util.function.Predicate v4;
java.util.List v2;
java.util.stream.Stream v3, v5;
java.util.Optional v6;
java.lang.Object v7, v8;
io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen v0;
v0 := @this: io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen;
v1 := @parameter0: io.vertx.codegen.DataObjectModel;
v2 = virtualinvoke v1.<io.vertx.codegen.DataObjectModel: java.util.List getAnnotations()>();
v3 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v4 = staticinvoke <io.vertx.codegen.generators.dataobjecthelper.DataObjectHelperGen$lambda_getCase_2__2537: java.util.function.Predicate bootstrap$()>();
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v4);
v6 = interfaceinvoke v5.<java.util.stream.Stream: java.util.Optional findFirst()>();
v7 = virtualinvoke v6.<java.util.Optional: java.lang.Object get()>();
v8 = virtualinvoke v7.<io.vertx.codegen.type.AnnotationValueInfo: java.lang.Object getMember(java.lang.String)>("jsonPropertyNameFormatter");
v9 = virtualinvoke v8.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
v10 = -1;
v11 = virtualinvoke v9.<java.lang.String: int hashCode()>();
lookupswitch(v11)
{
case -470484324: goto label04;
case -275666839: goto label01;
case 156731379: goto label02;
case 1336948098: goto label03;
case 1660286927: goto label05;
default: goto label06;
};
label01:
v12 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>("io.vertx.codegen.format.CamelCase");
if v12 == 0 goto label06;
v10 = 0;
goto label06;
label02:
v13 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>("io.vertx.codegen.format.SnakeCase");
if v13 == 0 goto label06;
v10 = 1;
goto label06;
label03:
v14 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>("io.vertx.codegen.format.LowerCamelCase");
if v14 == 0 goto label06;
v10 = 2;
goto label06;
label04:
v15 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>("io.vertx.codegen.format.KebabCase");
if v15 == 0 goto label06;
v10 = 3;
goto label06;
label05:
v16 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>("io.vertx.codegen.format.QualifiedCase");
if v16 == 0 goto label06;
v10 = 4;
label06:
tableswitch(v10)
{
case 0: goto label07;
case 1: goto label08;
case 2: goto label09;
case 3: goto label10;
case 4: goto label11;
default: goto label12;
};
label07:
v17 = <io.vertx.codegen.format.CamelCase: io.vertx.codegen.format.Case INSTANCE>;
return v17;
label08:
v18 = <io.vertx.codegen.format.SnakeCase: io.vertx.codegen.format.Case INSTANCE>;
return v18;
label09:
v19 = <io.vertx.codegen.format.LowerCamelCase: io.vertx.codegen.format.Case INSTANCE>;
return v19;
label10:
v20 = <io.vertx.codegen.format.KebabCase: io.vertx.codegen.format.Case INSTANCE>;
return v20;
label11:
v21 = <io.vertx.codegen.format.QualifiedCase: io.vertx.codegen.format.Case INSTANCE>;
return v21;
label12:
v22 = new java.lang.UnsupportedOperationException;
specialinvoke v22.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Todo");
throw v22;
}
}