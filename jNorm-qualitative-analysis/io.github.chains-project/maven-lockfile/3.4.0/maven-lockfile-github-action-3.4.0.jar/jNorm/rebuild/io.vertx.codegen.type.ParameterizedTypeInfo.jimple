public class io.vertx.codegen.type.ParameterizedTypeInfo extends io.vertx.codegen.type.TypeInfo
{
final io.vertx.codegen.type.ClassTypeInfo raw;
final boolean nullable;
final java.util.List args;
public void <init>(io.vertx.codegen.type.ClassTypeInfo, boolean, java.util.List)
{
io.vertx.codegen.type.ClassTypeInfo v1;
java.util.List v3;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
boolean v2;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.ClassTypeInfo;
v2 := @parameter1: boolean;
v3 := @parameter2: java.util.List;
specialinvoke v0.<io.vertx.codegen.type.TypeInfo: void <init>()>();
v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw> = v1;
v0.<io.vertx.codegen.type.ParameterizedTypeInfo: boolean nullable> = v2;
v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args> = v3;
return;
}
public io.vertx.codegen.type.TypeInfo getErased()
{
io.vertx.codegen.type.ClassTypeInfo v2;
java.util.function.Function v6;
java.util.List v4;
java.util.stream.Stream v5, v7;
io.vertx.codegen.type.ParameterizedTypeInfo v0, v1;
java.lang.Object v9;
java.util.stream.Collector v8;
boolean v3;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 = new io.vertx.codegen.type.ParameterizedTypeInfo;
v2 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
v3 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: boolean nullable>;
v4 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v5 = interfaceinvoke v4.<java.util.List: java.util.stream.Stream stream()>();
v6 = staticinvoke <io.vertx.codegen.type.ParameterizedTypeInfo$getErased__2548: java.util.function.Function bootstrap$()>();
v7 = interfaceinvoke v5.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v6);
v8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v8);
specialinvoke v1.<io.vertx.codegen.type.ParameterizedTypeInfo: void <init>(io.vertx.codegen.type.ClassTypeInfo,boolean,java.util.List)>(v2, v3, v9);
return v1;
}
public boolean isNullable()
{
io.vertx.codegen.type.ParameterizedTypeInfo v0;
boolean v1;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: boolean nullable>;
return v1;
}
public io.vertx.codegen.type.ClassTypeInfo getRaw()
{
io.vertx.codegen.type.ClassTypeInfo v1;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
return v1;
}
public java.util.List getArgs()
{
java.util.List v1;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
return v1;
}
public io.vertx.codegen.type.TypeInfo getArg(int)
{
java.util.List v2;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
int v1;
java.lang.Object v3;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 := @parameter0: int;
v2 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public io.vertx.codegen.type.ClassKind getKind()
{
io.vertx.codegen.type.ClassTypeInfo v1;
io.vertx.codegen.type.ClassKind v2;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
v2 = virtualinvoke v1.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.type.ClassKind getKind()>();
return v2;
}
public void collectImports(java.util.Collection)
{
java.util.function.Consumer v5;
io.vertx.codegen.type.ClassTypeInfo v2;
java.util.List v3;
java.util.stream.Stream v4;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
java.util.Collection v1;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 := @parameter0: java.util.Collection;
v2 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
virtualinvoke v2.<io.vertx.codegen.type.ClassTypeInfo: void collectImports(java.util.Collection)>(v1);
v3 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v4 = interfaceinvoke v3.<java.util.List: java.util.stream.Stream stream()>();
v5 = staticinvoke <io.vertx.codegen.type.ParameterizedTypeInfo$lambda_collectImports_0__2549: java.util.function.Consumer bootstrap$(java.util.Collection)>(v1);
interfaceinvoke v4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v5);
return;
}
public boolean equals(java.lang.Object)
{
io.vertx.codegen.type.ClassTypeInfo v3, v4;
java.util.List v6, v7;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
java.lang.Object v1;
boolean v2, v5, v8, v9;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.vertx.codegen.type.ParameterizedTypeInfo;
if v2 == 0 goto label3;
v3 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
v4 = v1.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
v5 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v7 = v1.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v8 = interfaceinvoke v6.<java.util.List: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label1;
v9 = 1;
goto label2;
label1:
v9 = 0;
label2:
return v9;
label3:
return 0;
}
public java.lang.String format(boolean)
{
io.vertx.codegen.type.ClassTypeInfo v2;
java.util.List v5, v7;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
int v4, v6;
java.lang.Object v8;
java.lang.StringBuilder v11, v12;
java.lang.String v10, v3, v9;
boolean v1;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 := @parameter0: boolean;
v2 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
v3 = virtualinvoke v2.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String format(boolean)>(v1);
specialinvoke v11.<java.lang.StringBuilder: void <init>(java.lang.String)>(v3);
v4 = 0;
label1:
v5 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
if v4 >= v6 goto label3;
v7 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v8 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(v4);
if v4 <= 0 goto label2;
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
label2:
v9 = virtualinvoke v8.<io.vertx.codegen.type.TypeInfo: java.lang.String format(boolean)>(v1);
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v9);
v4 = v4 + 1;
goto label1;
label3:
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String ()>() <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("<");
return v10;
}
public java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)
{
io.vertx.codegen.type.ClassTypeInfo v2;
java.util.List v5, v7;
io.vertx.codegen.type.ParameterizedTypeInfo v0;
int v4, v6;
java.lang.Object v8;
java.lang.StringBuilder v11, v12;
java.lang.String v10, v3, v9;
io.vertx.codegen.type.TypeNameTranslator v1;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.TypeNameTranslator;
v2 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.ClassTypeInfo raw>;
v3 = virtualinvoke v2.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)>(v1);
specialinvoke v11.<java.lang.StringBuilder: void <init>(java.lang.String)>(v3);
v4 = 0;
label1:
v5 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
if v4 >= v6 goto label3;
v7 = v0.<io.vertx.codegen.type.ParameterizedTypeInfo: java.util.List args>;
v8 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(v4);
if v4 <= 0 goto label2;
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
label2:
v9 = virtualinvoke v8.<io.vertx.codegen.type.TypeInfo: java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)>(v1);
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v9);
v4 = v4 + 1;
goto label1;
label3:
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String ()>() <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("<");
return v10;
}
public boolean isParameterized()
{
io.vertx.codegen.type.ParameterizedTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ParameterizedTypeInfo;
return 1;
}
}