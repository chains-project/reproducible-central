class io.vertx.codegen.type.TreeTypeInternal extends java.lang.Object implements io.vertx.codegen.type.TypeUse$TypeInternal
{
public static final io.vertx.codegen.type.TypeUse$TypeInternalProvider PROVIDER;
private final com.sun.source.tree.Tree type;
private final boolean nullable;
private void <init>(com.sun.source.tree.Tree, boolean)
{
com.sun.source.tree.Tree v1;
io.vertx.codegen.type.TreeTypeInternal v0;
boolean v2;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal;
v1 := @parameter0: com.sun.source.tree.Tree;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.type.TreeTypeInternal: com.sun.source.tree.Tree type> = v1;
v0.<io.vertx.codegen.type.TreeTypeInternal: boolean nullable> = v2;
return;
}
public boolean isNullable()
{
io.vertx.codegen.type.TreeTypeInternal v0;
boolean v1;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal;
v1 = v0.<io.vertx.codegen.type.TreeTypeInternal: boolean nullable>;
return v1;
}
public java.lang.String rawName()
{
com.sun.tools.javac.code.Symbol$TypeSymbol v4;
io.vertx.codegen.type.TreeTypeInternal v0;
com.sun.source.tree.ParameterizedTypeTree v7;
java.lang.String v6;
com.sun.source.tree.Tree v1;
com.sun.tools.javac.code.Type v3;
boolean v2;
javax.lang.model.element.Name v5;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal;
v1 = v0.<io.vertx.codegen.type.TreeTypeInternal: com.sun.source.tree.Tree type>;
v2 = v1 instanceof com.sun.source.tree.ParameterizedTypeTree;
if v2 == 0 goto label1;
v3 = v7.<com.sun.tools.javac.tree.JCTree$JCTypeApply: com.sun.tools.javac.code.Type type>;
v4 = virtualinvoke v3.<com.sun.tools.javac.code.Type: com.sun.tools.javac.code.Symbol$TypeSymbol asElement()>();
v5 = interfaceinvoke v4.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();
v6 = virtualinvoke v5.<java.lang.Object: java.lang.String toString()>();
return v6;
label1:
return null;
}
public io.vertx.codegen.type.TypeUse$TypeInternal getArgAt(int)
{
java.util.List v3;
io.vertx.codegen.type.TreeTypeInternal v0, v5;
int v1;
java.lang.Object v4;
com.sun.source.tree.Tree v2;
boolean v6;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal;
v1 := @parameter0: int;
v2 = v0.<io.vertx.codegen.type.TreeTypeInternal: com.sun.source.tree.Tree type>;
v3 = interfaceinvoke v2.<com.sun.source.tree.ParameterizedTypeTree: java.util.List getTypeArguments()>();
v4 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v1);
v5 = new io.vertx.codegen.type.TreeTypeInternal;
v6 = staticinvoke <io.vertx.codegen.type.TreeTypeInternal: boolean isNullable(com.sun.source.tree.Tree)>(v4);
specialinvoke v5.<io.vertx.codegen.type.TreeTypeInternal: void <init>(com.sun.source.tree.Tree,boolean)>(v4, v6);
return v5;
}
private static boolean isNullable(com.sun.source.tree.Tree)
{
com.sun.source.tree.AnnotationTree v23;
com.sun.tools.javac.tree.JCTree$JCExpression v12;
javax.lang.model.type.DeclaredType v7;
java.lang.String v20, v21, v8, v9;
com.sun.source.tree.Tree v0;
boolean v10, v11, v13, v16, v18, v2, v22, v5;
java.util.Iterator v15, v4;
com.sun.tools.javac.util.List v3;
java.util.List v14;
java.lang.Object v17, v6;
com.sun.tools.javac.code.Type v1, v19;
v0 := @parameter0: com.sun.source.tree.Tree;
v1 = v0.<com.sun.tools.javac.tree.JCTree: com.sun.tools.javac.code.Type type>;
v2 = v1 instanceof com.sun.tools.javac.code.Type$AnnotatedType;
if v2 == 0 goto label2;
v3 = virtualinvoke v1.<com.sun.tools.javac.code.Type$AnnotatedType: com.sun.tools.javac.util.List getAnnotationMirrors()>();
v4 = virtualinvoke v3.<com.sun.tools.javac.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>();
v8 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
v9 = <io.vertx.codegen.type.TypeUse: java.lang.String NULLABLE>;
v10 = virtualinvoke v8.<java.lang.String: boolean equals(java.lang.Object)>(v9);
if v10 == 0 goto label1;
return 1;
label2:
v11 = v0 instanceof com.sun.tools.javac.tree.JCTree$JCTypeApply;
if v11 == 0 goto label4;
v12 = v0.<com.sun.tools.javac.tree.JCTree$JCTypeApply: com.sun.tools.javac.tree.JCTree$JCExpression clazz>;
v13 = v12 instanceof com.sun.source.tree.AnnotatedTypeTree;
if v13 == 0 goto label4;
v14 = interfaceinvoke v12.<com.sun.source.tree.AnnotatedTypeTree: java.util.List getAnnotations()>();
v15 = interfaceinvoke v14.<java.util.List: java.util.Iterator iterator()>();
label3:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label4;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = v17 instanceof com.sun.tools.javac.tree.JCTree$JCAnnotation;
if v18 == 0 goto label3;
v19 = v23.<com.sun.tools.javac.tree.JCTree$JCAnnotation: com.sun.tools.javac.code.Type type>;
v20 = virtualinvoke v19.<com.sun.tools.javac.code.Type: java.lang.String toString()>();
v21 = <io.vertx.codegen.type.TypeUse: java.lang.String NULLABLE>;
v22 = virtualinvoke v20.<java.lang.String: boolean equals(java.lang.Object)>(v21);
if v22 == 0 goto label3;
return 1;
label4:
return 0;
}
static void <clinit>()
{
io.vertx.codegen.type.TreeTypeInternal$1 v0;
v0 = new io.vertx.codegen.type.TreeTypeInternal$1;
specialinvoke v0.<io.vertx.codegen.type.TreeTypeInternal$1: void <init>()>();
<io.vertx.codegen.type.TreeTypeInternal: io.vertx.codegen.type.TypeUse$TypeInternalProvider PROVIDER> = v0;
return;
}
}