public class io.vertx.core.VertxOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.VertxOptionsConverter v0;
v0 := @this: io.vertx.core.VertxOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.VertxOptions)
{
byte v6;
long v107, v37, v72, v80;
io.vertx.core.eventbus.EventBusOptions v48;
io.vertx.core.file.FileSystemOptions v56;
io.vertx.core.dns.AddressResolverOptions v32;
io.vertx.core.tracing.TracingOptions v99;
boolean v10, v102, v105, v109, v11, v113, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v31, v35, v39, v43, v45, v47, v51, v55, v59, v61, v63, v66, v70, v74, v78, v8, v82, v86, v9, v90, v92, v94, v98;
io.vertx.core.VertxOptions v1;
io.vertx.core.metrics.MetricsOptions v87;
java.lang.Iterable v0;
int v115, v53, v68, v7, v96;
java.util.Iterator v2;
java.util.concurrent.TimeUnit v111, v41, v76, v84;
java.lang.Object v100, v101, v103, v104, v106, v108, v110, v112, v114, v30, v33, v34, v36, v38, v4, v40, v42, v44, v46, v49, v5, v50, v52, v54, v57, v58, v60, v62, v64, v65, v67, v69, v71, v73, v75, v77, v79, v81, v83, v85, v88, v89, v91, v93, v95, v97;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.VertxOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label47;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -2131215761: goto label11;
case -2042837556: goto label13;
case -2037232009: goto label03;
case -1687733240: goto label09;
case -1564289061: goto label23;
case -1209260764: goto label02;
case -869872600: goto label12;
case -646426756: goto label19;
case -259021256: goto label06;
case -194698027: goto label20;
case -22488960: goto label18;
case 195603795: goto label08;
case 220042624: goto label21;
case 605054080: goto label14;
case 611480100: goto label15;
case 657206534: goto label10;
case 736195771: goto label07;
case 1064339611: goto label04;
case 1325896866: goto label17;
case 1353294336: goto label05;
case 1525910619: goto label16;
case 1904157476: goto label22;
default: goto label24;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("addressResolverOptions");
if v8 == 0 goto label24;
v6 = 0;
goto label24;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("blockedThreadCheckInterval");
if v9 == 0 goto label24;
v6 = 1;
goto label24;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("blockedThreadCheckIntervalUnit");
if v10 == 0 goto label24;
v6 = 2;
goto label24;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("disableTCCL");
if v11 == 0 goto label24;
v6 = 3;
goto label24;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("eventBusOptions");
if v12 == 0 goto label24;
v6 = 4;
goto label24;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("eventLoopPoolSize");
if v13 == 0 goto label24;
v6 = 5;
goto label24;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("fileSystemOptions");
if v14 == 0 goto label24;
v6 = 6;
goto label24;
label09:
v15 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("haEnabled");
if v15 == 0 goto label24;
v6 = 7;
goto label24;
label10:
v16 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("haGroup");
if v16 == 0 goto label24;
v6 = 8;
goto label24;
label11:
v17 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("internalBlockingPoolSize");
if v17 == 0 goto label24;
v6 = 9;
goto label24;
label12:
v18 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("maxEventLoopExecuteTime");
if v18 == 0 goto label24;
v6 = 10;
goto label24;
label13:
v19 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("maxEventLoopExecuteTimeUnit");
if v19 == 0 goto label24;
v6 = 11;
goto label24;
label14:
v20 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("maxWorkerExecuteTime");
if v20 == 0 goto label24;
v6 = 12;
goto label24;
label15:
v21 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("maxWorkerExecuteTimeUnit");
if v21 == 0 goto label24;
v6 = 13;
goto label24;
label16:
v22 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("metricsOptions");
if v22 == 0 goto label24;
v6 = 14;
goto label24;
label17:
v23 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("preferNativeTransport");
if v23 == 0 goto label24;
v6 = 15;
goto label24;
label18:
v24 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("quorumSize");
if v24 == 0 goto label24;
v6 = 16;
goto label24;
label19:
v25 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tracingOptions");
if v25 == 0 goto label24;
v6 = 17;
goto label24;
label20:
v26 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("useDaemonThread");
if v26 == 0 goto label24;
v6 = 18;
goto label24;
label21:
v27 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("warningExceptionTime");
if v27 == 0 goto label24;
v6 = 19;
goto label24;
label22:
v28 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("warningExceptionTimeUnit");
if v28 == 0 goto label24;
v6 = 20;
goto label24;
label23:
v29 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("workerPoolSize");
if v29 == 0 goto label24;
v6 = 21;
label24:
tableswitch(v6)
{
case 0: goto label25;
case 1: goto label26;
case 2: goto label27;
case 3: goto label28;
case 4: goto label29;
case 5: goto label30;
case 6: goto label31;
case 7: goto label32;
case 8: goto label33;
case 9: goto label34;
case 10: goto label35;
case 11: goto label36;
case 12: goto label37;
case 13: goto label38;
case 14: goto label39;
case 15: goto label40;
case 16: goto label41;
case 17: goto label42;
case 18: goto label43;
case 19: goto label44;
case 20: goto label45;
case 21: goto label46;
default: goto label01;
};
label25:
v30 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v31 = v30 instanceof io.vertx.core.json.JsonObject;
if v31 == 0 goto label01;
v32 = new io.vertx.core.dns.AddressResolverOptions;
v33 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v32.<io.vertx.core.dns.AddressResolverOptions: void <init>(io.vertx.core.json.JsonObject)>(v33);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setAddressResolverOptions(io.vertx.core.dns.AddressResolverOptions)>(v32);
goto label01;
label26:
v34 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v35 = v34 instanceof java.lang.Number;
if v35 == 0 goto label01;
v36 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v37 = virtualinvoke v36.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setBlockedThreadCheckInterval(long)>(v37);
goto label01;
label27:
v38 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v39 = v38 instanceof java.lang.String;
if v39 == 0 goto label01;
v40 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v41 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v40);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setBlockedThreadCheckIntervalUnit(java.util.concurrent.TimeUnit)>(v41);
goto label01;
label28:
v42 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v43 = v42 instanceof java.lang.Boolean;
if v43 == 0 goto label01;
v44 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v45 = virtualinvoke v44.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setDisableTCCL(boolean)>(v45);
goto label01;
label29:
v46 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v47 = v46 instanceof io.vertx.core.json.JsonObject;
if v47 == 0 goto label01;
v48 = new io.vertx.core.eventbus.EventBusOptions;
v49 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v48.<io.vertx.core.eventbus.EventBusOptions: void <init>(io.vertx.core.json.JsonObject)>(v49);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setEventBusOptions(io.vertx.core.eventbus.EventBusOptions)>(v48);
goto label01;
label30:
v50 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v51 = v50 instanceof java.lang.Number;
if v51 == 0 goto label01;
v52 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v53 = virtualinvoke v52.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setEventLoopPoolSize(int)>(v53);
goto label01;
label31:
v54 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v55 = v54 instanceof io.vertx.core.json.JsonObject;
if v55 == 0 goto label01;
v56 = new io.vertx.core.file.FileSystemOptions;
v57 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v56.<io.vertx.core.file.FileSystemOptions: void <init>(io.vertx.core.json.JsonObject)>(v57);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setFileSystemOptions(io.vertx.core.file.FileSystemOptions)>(v56);
goto label01;
label32:
v58 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v59 = v58 instanceof java.lang.Boolean;
if v59 == 0 goto label01;
v60 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v61 = virtualinvoke v60.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setHAEnabled(boolean)>(v61);
goto label01;
label33:
v62 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v63 = v62 instanceof java.lang.String;
if v63 == 0 goto label01;
v64 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setHAGroup(java.lang.String)>(v64);
goto label01;
label34:
v65 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v66 = v65 instanceof java.lang.Number;
if v66 == 0 goto label01;
v67 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v68 = virtualinvoke v67.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setInternalBlockingPoolSize(int)>(v68);
goto label01;
label35:
v69 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v70 = v69 instanceof java.lang.Number;
if v70 == 0 goto label01;
v71 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v72 = virtualinvoke v71.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setMaxEventLoopExecuteTime(long)>(v72);
goto label01;
label36:
v73 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v74 = v73 instanceof java.lang.String;
if v74 == 0 goto label01;
v75 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v76 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v75);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setMaxEventLoopExecuteTimeUnit(java.util.concurrent.TimeUnit)>(v76);
goto label01;
label37:
v77 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v78 = v77 instanceof java.lang.Number;
if v78 == 0 goto label01;
v79 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v80 = virtualinvoke v79.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setMaxWorkerExecuteTime(long)>(v80);
goto label01;
label38:
v81 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v82 = v81 instanceof java.lang.String;
if v82 == 0 goto label01;
v83 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v84 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v83);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setMaxWorkerExecuteTimeUnit(java.util.concurrent.TimeUnit)>(v84);
goto label01;
label39:
v85 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v86 = v85 instanceof io.vertx.core.json.JsonObject;
if v86 == 0 goto label01;
v87 = new io.vertx.core.metrics.MetricsOptions;
v88 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v87.<io.vertx.core.metrics.MetricsOptions: void <init>(io.vertx.core.json.JsonObject)>(v88);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setMetricsOptions(io.vertx.core.metrics.MetricsOptions)>(v87);
goto label01;
label40:
v89 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v90 = v89 instanceof java.lang.Boolean;
if v90 == 0 goto label01;
v91 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v92 = virtualinvoke v91.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setPreferNativeTransport(boolean)>(v92);
goto label01;
label41:
v93 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v94 = v93 instanceof java.lang.Number;
if v94 == 0 goto label01;
v95 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v96 = virtualinvoke v95.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setQuorumSize(int)>(v96);
goto label01;
label42:
v97 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v98 = v97 instanceof io.vertx.core.json.JsonObject;
if v98 == 0 goto label01;
v99 = new io.vertx.core.tracing.TracingOptions;
v100 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v99.<io.vertx.core.tracing.TracingOptions: void <init>(io.vertx.core.json.JsonObject)>(v100);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setTracingOptions(io.vertx.core.tracing.TracingOptions)>(v99);
goto label01;
label43:
v101 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v102 = v101 instanceof java.lang.Boolean;
if v102 == 0 goto label01;
v103 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setUseDaemonThread(java.lang.Boolean)>(v103);
goto label01;
label44:
v104 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v105 = v104 instanceof java.lang.Number;
if v105 == 0 goto label01;
v106 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v107 = virtualinvoke v106.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setWarningExceptionTime(long)>(v107);
goto label01;
label45:
v108 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v109 = v108 instanceof java.lang.String;
if v109 == 0 goto label01;
v110 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v111 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v110);
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setWarningExceptionTimeUnit(java.util.concurrent.TimeUnit)>(v111);
goto label01;
label46:
v112 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v113 = v112 instanceof java.lang.Number;
if v113 == 0 goto label01;
v114 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v115 = virtualinvoke v114.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setWorkerPoolSize(int)>(v115);
goto label01;
label47:
return;
}
static void toJson(io.vertx.core.VertxOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.VertxOptions v0;
io.vertx.core.json.JsonObject v1;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.VertxOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.VertxOptionsConverter: void toJson(io.vertx.core.VertxOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.VertxOptions, java.util.Map)
{
io.vertx.core.dns.AddressResolverOptions v2, v3;
java.lang.Integer v16, v25, v42, v54;
io.vertx.core.tracing.TracingOptions v43, v44;
java.lang.Long v27, v32, v49, v6;
java.util.Map v1;
io.vertx.core.json.JsonObject v14, v19, v38, v4, v45;
boolean v10, v20, v39;
io.vertx.core.VertxOptions v0;
io.vertx.core.metrics.MetricsOptions v36, v37;
long v26, v31, v48, v5;
int v15, v24, v41, v53;
java.lang.Boolean v11, v21, v40, v46, v47;
io.vertx.core.eventbus.EventBusOptions v12, v13;
java.lang.String v22, v23, v30, v35, v52, v9;
io.vertx.core.file.FileSystemOptions v17, v18;
java.util.concurrent.TimeUnit v28, v29, v33, v34, v50, v51, v7, v8;
v0 := @parameter0: io.vertx.core.VertxOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.dns.AddressResolverOptions getAddressResolverOptions()>();
if v2 == null goto label01;
v3 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.dns.AddressResolverOptions getAddressResolverOptions()>();
v4 = virtualinvoke v3.<io.vertx.core.dns.AddressResolverOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("addressResolverOptions", v4);
label01:
v5 = virtualinvoke v0.<io.vertx.core.VertxOptions: long getBlockedThreadCheckInterval()>();
v6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("blockedThreadCheckInterval", v6);
v7 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getBlockedThreadCheckIntervalUnit()>();
if v7 == null goto label02;
v8 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getBlockedThreadCheckIntervalUnit()>();
v9 = virtualinvoke v8.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("blockedThreadCheckIntervalUnit", v9);
label02:
v10 = virtualinvoke v0.<io.vertx.core.VertxOptions: boolean getDisableTCCL()>();
v11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v10);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("disableTCCL", v11);
v12 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.eventbus.EventBusOptions getEventBusOptions()>();
if v12 == null goto label03;
v13 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.eventbus.EventBusOptions getEventBusOptions()>();
v14 = virtualinvoke v13.<io.vertx.core.eventbus.EventBusOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("eventBusOptions", v14);
label03:
v15 = virtualinvoke v0.<io.vertx.core.VertxOptions: int getEventLoopPoolSize()>();
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v15);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("eventLoopPoolSize", v16);
v17 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.file.FileSystemOptions getFileSystemOptions()>();
if v17 == null goto label04;
v18 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.file.FileSystemOptions getFileSystemOptions()>();
v19 = virtualinvoke v18.<io.vertx.core.file.FileSystemOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fileSystemOptions", v19);
label04:
v20 = virtualinvoke v0.<io.vertx.core.VertxOptions: boolean isHAEnabled()>();
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v20);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("haEnabled", v21);
v22 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.lang.String getHAGroup()>();
if v22 == null goto label05;
v23 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.lang.String getHAGroup()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("haGroup", v23);
label05:
v24 = virtualinvoke v0.<io.vertx.core.VertxOptions: int getInternalBlockingPoolSize()>();
v25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v24);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("internalBlockingPoolSize", v25);
v26 = virtualinvoke v0.<io.vertx.core.VertxOptions: long getMaxEventLoopExecuteTime()>();
v27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v26);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("maxEventLoopExecuteTime", v27);
v28 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getMaxEventLoopExecuteTimeUnit()>();
if v28 == null goto label06;
v29 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getMaxEventLoopExecuteTimeUnit()>();
v30 = virtualinvoke v29.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("maxEventLoopExecuteTimeUnit", v30);
label06:
v31 = virtualinvoke v0.<io.vertx.core.VertxOptions: long getMaxWorkerExecuteTime()>();
v32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v31);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("maxWorkerExecuteTime", v32);
v33 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getMaxWorkerExecuteTimeUnit()>();
if v33 == null goto label07;
v34 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getMaxWorkerExecuteTimeUnit()>();
v35 = virtualinvoke v34.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("maxWorkerExecuteTimeUnit", v35);
label07:
v36 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.metrics.MetricsOptions getMetricsOptions()>();
if v36 == null goto label08;
v37 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.metrics.MetricsOptions getMetricsOptions()>();
v38 = virtualinvoke v37.<io.vertx.core.metrics.MetricsOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("metricsOptions", v38);
label08:
v39 = virtualinvoke v0.<io.vertx.core.VertxOptions: boolean getPreferNativeTransport()>();
v40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v39);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("preferNativeTransport", v40);
v41 = virtualinvoke v0.<io.vertx.core.VertxOptions: int getQuorumSize()>();
v42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v41);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("quorumSize", v42);
v43 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.tracing.TracingOptions getTracingOptions()>();
if v43 == null goto label09;
v44 = virtualinvoke v0.<io.vertx.core.VertxOptions: io.vertx.core.tracing.TracingOptions getTracingOptions()>();
v45 = virtualinvoke v44.<io.vertx.core.tracing.TracingOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tracingOptions", v45);
label09:
v46 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.lang.Boolean getUseDaemonThread()>();
if v46 == null goto label10;
v47 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.lang.Boolean getUseDaemonThread()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("useDaemonThread", v47);
label10:
v48 = virtualinvoke v0.<io.vertx.core.VertxOptions: long getWarningExceptionTime()>();
v49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v48);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("warningExceptionTime", v49);
v50 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getWarningExceptionTimeUnit()>();
if v50 == null goto label11;
v51 = virtualinvoke v0.<io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit getWarningExceptionTimeUnit()>();
v52 = virtualinvoke v51.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("warningExceptionTimeUnit", v52);
label11:
v53 = virtualinvoke v0.<io.vertx.core.VertxOptions: int getWorkerPoolSize()>();
v54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v53);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("workerPoolSize", v54);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.VertxOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.VertxOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}