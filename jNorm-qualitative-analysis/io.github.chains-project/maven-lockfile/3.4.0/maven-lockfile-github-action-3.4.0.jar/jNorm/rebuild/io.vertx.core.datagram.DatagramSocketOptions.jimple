public class io.vertx.core.datagram.DatagramSocketOptions extends io.vertx.core.net.NetworkOptions
{
public static final boolean DEFAULT_BROADCAST;
public static final boolean DEFAULT_LOOPBACK_MODE_DISABLED;
public static final int DEFAULT_MULTICAST_TIME_TO_LIVE;
public static final java.lang.String DEFAULT_MULTICAST_NETWORK_INTERFACE;
public static final boolean DEFAULT_REUSE_ADDRESS;
public static final boolean DEFAULT_IPV6;
private boolean broadcast;
private boolean loopbackModeDisabled;
private int multicastTimeToLive;
private java.lang.String multicastNetworkInterface;
private boolean ipV6;
public void <init>()
{
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: void <init>()>();
specialinvoke v0.<io.vertx.core.datagram.DatagramSocketOptions: void init()>();
virtualinvoke v0.<io.vertx.core.datagram.DatagramSocketOptions: io.vertx.core.datagram.DatagramSocketOptions setReuseAddress(boolean)>(0);
return;
}
public void <init>(io.vertx.core.datagram.DatagramSocketOptions)
{
int v4;
io.vertx.core.datagram.DatagramSocketOptions v0, v1;
java.lang.String v5;
boolean v2, v3, v6;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: io.vertx.core.datagram.DatagramSocketOptions;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: void <init>(io.vertx.core.net.NetworkOptions)>(v1);
v2 = virtualinvoke v1.<io.vertx.core.datagram.DatagramSocketOptions: boolean isBroadcast()>();
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean broadcast> = v2;
v3 = virtualinvoke v1.<io.vertx.core.datagram.DatagramSocketOptions: boolean isLoopbackModeDisabled()>();
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean loopbackModeDisabled> = v3;
v4 = virtualinvoke v1.<io.vertx.core.datagram.DatagramSocketOptions: int getMulticastTimeToLive()>();
v0.<io.vertx.core.datagram.DatagramSocketOptions: int multicastTimeToLive> = v4;
v5 = virtualinvoke v1.<io.vertx.core.datagram.DatagramSocketOptions: java.lang.String getMulticastNetworkInterface()>();
v0.<io.vertx.core.datagram.DatagramSocketOptions: java.lang.String multicastNetworkInterface> = v5;
v6 = virtualinvoke v1.<io.vertx.core.datagram.DatagramSocketOptions: boolean isIpV6()>();
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean ipV6> = v6;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: void <init>(io.vertx.core.json.JsonObject)>(v1);
specialinvoke v0.<io.vertx.core.datagram.DatagramSocketOptions: void init()>();
staticinvoke <io.vertx.core.datagram.DatagramSocketOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.core.datagram.DatagramSocketOptions)>(v1, v0);
return;
}
private void init()
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
java.lang.String v2;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean broadcast> = 0;
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean loopbackModeDisabled> = 1;
v1 = (int) -1;
v0.<io.vertx.core.datagram.DatagramSocketOptions: int multicastTimeToLive> = v1;
v2 = <io.vertx.core.datagram.DatagramSocketOptions: java.lang.String DEFAULT_MULTICAST_NETWORK_INTERFACE>;
v0.<io.vertx.core.datagram.DatagramSocketOptions: java.lang.String multicastNetworkInterface> = v2;
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean ipV6> = 0;
return;
}
public int getSendBufferSize()
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = specialinvoke v0.<io.vertx.core.net.NetworkOptions: int getSendBufferSize()>();
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setSendBufferSize(int)
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: int;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setSendBufferSize(int)>(v1);
return v0;
}
public int getReceiveBufferSize()
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = specialinvoke v0.<io.vertx.core.net.NetworkOptions: int getReceiveBufferSize()>();
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setReceiveBufferSize(int)
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: int;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setReceiveBufferSize(int)>(v1);
return v0;
}
public io.vertx.core.datagram.DatagramSocketOptions setReuseAddress(boolean)
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: boolean;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setReuseAddress(boolean)>(v1);
return v0;
}
public io.vertx.core.datagram.DatagramSocketOptions setReusePort(boolean)
{
io.vertx.core.net.NetworkOptions v2;
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setReusePort(boolean)>(v1);
return v2;
}
public int getTrafficClass()
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = specialinvoke v0.<io.vertx.core.net.NetworkOptions: int getTrafficClass()>();
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setTrafficClass(int)
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: int;
specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setTrafficClass(int)>(v1);
return v0;
}
public boolean isBroadcast()
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean broadcast>;
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setBroadcast(boolean)
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean broadcast> = v1;
return v0;
}
public boolean isLoopbackModeDisabled()
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean loopbackModeDisabled>;
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setLoopbackModeDisabled(boolean)
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean loopbackModeDisabled> = v1;
return v0;
}
public int getMulticastTimeToLive()
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = v0.<io.vertx.core.datagram.DatagramSocketOptions: int multicastTimeToLive>;
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setMulticastTimeToLive(int)
{
int v1;
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v2;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: int;
if v1 < 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
staticinvoke <io.vertx.core.impl.Arguments: void require(boolean,java.lang.String)>(v2, "multicastTimeToLive must be >= 0");
v0.<io.vertx.core.datagram.DatagramSocketOptions: int multicastTimeToLive> = v1;
return v0;
}
public java.lang.String getMulticastNetworkInterface()
{
io.vertx.core.datagram.DatagramSocketOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = v0.<io.vertx.core.datagram.DatagramSocketOptions: java.lang.String multicastNetworkInterface>;
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setMulticastNetworkInterface(java.lang.String)
{
io.vertx.core.datagram.DatagramSocketOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.datagram.DatagramSocketOptions: java.lang.String multicastNetworkInterface> = v1;
return v0;
}
public boolean isIpV6()
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 = v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean ipV6>;
return v1;
}
public io.vertx.core.datagram.DatagramSocketOptions setIpV6(boolean)
{
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.datagram.DatagramSocketOptions: boolean ipV6> = v1;
return v0;
}
public io.vertx.core.datagram.DatagramSocketOptions setLogActivity(boolean)
{
io.vertx.core.net.NetworkOptions v2;
io.vertx.core.datagram.DatagramSocketOptions v0;
boolean v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setLogActivity(boolean)>(v1);
return v2;
}
public io.vertx.core.datagram.DatagramSocketOptions setActivityLogDataFormat(io.netty.handler.logging.ByteBufFormat)
{
io.vertx.core.net.NetworkOptions v2;
io.vertx.core.datagram.DatagramSocketOptions v0;
io.netty.handler.logging.ByteBufFormat v1;
v0 := @this: io.vertx.core.datagram.DatagramSocketOptions;
v1 := @parameter0: io.netty.handler.logging.ByteBufFormat;
v2 = specialinvoke v0.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setActivityLogDataFormat(io.netty.handler.logging.ByteBufFormat)>(v1);
return v2;
}
static void <clinit>()
{
<io.vertx.core.datagram.DatagramSocketOptions: java.lang.String DEFAULT_MULTICAST_NETWORK_INTERFACE> = null;
return;
}
}