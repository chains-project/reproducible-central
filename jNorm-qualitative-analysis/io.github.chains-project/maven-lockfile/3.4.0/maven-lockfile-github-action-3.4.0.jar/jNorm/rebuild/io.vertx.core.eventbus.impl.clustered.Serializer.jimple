public class io.vertx.core.eventbus.impl.clustered.Serializer extends java.lang.Object implements io.vertx.core.Closeable
{
private final io.vertx.core.impl.ContextInternal ctx;
private final java.util.Map queues;
private void <init>(io.vertx.core.impl.ContextInternal)
{
io.vertx.core.impl.VertxInternal v4;
io.vertx.core.impl.ContextInternal v1, v2;
java.util.HashMap v9;
io.vertx.core.impl.WorkerPool v6;
io.netty.channel.EventLoop v5;
io.vertx.core.eventbus.impl.clustered.Serializer v0;
io.vertx.core.impl.EventLoopContext v8;
java.lang.ClassLoader v7;
boolean v10, v3;
v0 := @this: io.vertx.core.eventbus.impl.clustered.Serializer;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = interfaceinvoke v1.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.ContextInternal unwrap()>();
v3 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: boolean isEventLoopContext()>();
if v3 == 0 goto label1;
v0.<io.vertx.core.eventbus.impl.clustered.Serializer: io.vertx.core.impl.ContextInternal ctx> = v2;
goto label2;
label1:
v4 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.VertxInternal owner()>();
v5 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.netty.channel.EventLoop nettyEventLoop()>();
v6 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.WorkerPool workerPool()>();
v7 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: java.lang.ClassLoader classLoader()>();
v8 = interfaceinvoke v4.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.EventLoopContext createEventLoopContext(io.netty.channel.EventLoop,io.vertx.core.impl.WorkerPool,java.lang.ClassLoader)>(v5, v6, v7);
v0.<io.vertx.core.eventbus.impl.clustered.Serializer: io.vertx.core.impl.ContextInternal ctx> = v8;
label2:
v9 = new java.util.HashMap;
specialinvoke v9.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.eventbus.impl.clustered.Serializer: java.util.Map queues> = v9;
v10 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: boolean isDeployment()>();
if v10 == 0 goto label3;
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: void addCloseHook(io.vertx.core.Closeable)>(v0);
label3:
return;
}
public static io.vertx.core.eventbus.impl.clustered.Serializer get(io.vertx.core.impl.ContextInternal)
{
io.vertx.core.eventbus.impl.clustered.Serializer v3;
io.vertx.core.impl.ContextInternal v0;
java.lang.Object v2, v4;
java.util.concurrent.ConcurrentMap v1;
v0 := @parameter0: io.vertx.core.impl.ContextInternal;
v1 = interfaceinvoke v0.<io.vertx.core.impl.ContextInternal: java.util.concurrent.ConcurrentMap contextData()>();
v2 = interfaceinvoke v1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(class "Lio/vertx/core/eventbus/impl/clustered/Serializer;");
if v2 != null goto label2;
v3 = new io.vertx.core.eventbus.impl.clustered.Serializer;
specialinvoke v3.<io.vertx.core.eventbus.impl.clustered.Serializer: void <init>(io.vertx.core.impl.ContextInternal)>(v0);
v4 = interfaceinvoke v1.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(class "Lio/vertx/core/eventbus/impl/clustered/Serializer;", v3);
if v4 != null goto label1;
v2 = v3;
goto label2;
label1:
v2 = v4;
label2:
return v2;
}
public void queue(io.vertx.core.eventbus.Message, java.util.function.BiConsumer, io.vertx.core.Promise)
{
io.vertx.core.eventbus.impl.clustered.Serializer v0;
io.vertx.core.Promise v3;
java.util.function.BiConsumer v2;
io.vertx.core.eventbus.Message v1;
io.vertx.core.impl.ContextInternal v4;
io.vertx.core.Handler v5;
v0 := @this: io.vertx.core.eventbus.impl.clustered.Serializer;
v1 := @parameter0: io.vertx.core.eventbus.Message;
v2 := @parameter1: java.util.function.BiConsumer;
v3 := @parameter2: io.vertx.core.Promise;
v4 = v0.<io.vertx.core.eventbus.impl.clustered.Serializer: io.vertx.core.impl.ContextInternal ctx>;
v5 = staticinvoke <io.vertx.core.eventbus.impl.clustered.Serializer$lambda_queue_1__1443: io.vertx.core.Handler bootstrap$(io.vertx.core.eventbus.impl.clustered.Serializer,io.vertx.core.eventbus.Message,java.util.function.BiConsumer,io.vertx.core.Promise)>(v0, v1, v2, v3);
interfaceinvoke v4.<io.vertx.core.impl.ContextInternal: void emit(io.vertx.core.Handler)>(v5);
return;
}
public void close(io.vertx.core.Promise)
{
io.vertx.core.eventbus.impl.clustered.Serializer v0;
io.vertx.core.Promise v1;
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.core.eventbus.impl.clustered.Serializer;
v1 := @parameter0: io.vertx.core.Promise;
v2 = v0.<io.vertx.core.eventbus.impl.clustered.Serializer: io.vertx.core.impl.ContextInternal ctx>;
v3 = staticinvoke <io.vertx.core.eventbus.impl.clustered.Serializer$lambda_close_2__1444: io.vertx.core.Handler bootstrap$(io.vertx.core.eventbus.impl.clustered.Serializer,io.vertx.core.Promise)>(v0, v1);
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: void emit(io.vertx.core.Handler)>(v3);
return;
}
}