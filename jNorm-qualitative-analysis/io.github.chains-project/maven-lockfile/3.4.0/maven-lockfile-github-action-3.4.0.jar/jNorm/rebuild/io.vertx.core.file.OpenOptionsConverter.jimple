public class io.vertx.core.file.OpenOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.file.OpenOptionsConverter v0;
v0 := @this: io.vertx.core.file.OpenOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.file.OpenOptions)
{
byte v6;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v20, v22, v24, v26, v28, v3, v30, v32, v34, v36, v38, v40, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61, v8, v9;
io.vertx.core.file.OpenOptions v1;
java.lang.Iterable v0;
int v7;
java.util.Iterator v2;
java.lang.Object v19, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v4, v41, v42, v44, v46, v48, v5, v50, v52, v54, v56, v58, v60;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.file.OpenOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label25;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -1556668626: goto label05;
case -1411068134: goto label02;
case -1352294148: goto label03;
case -896177632: goto label09;
case 3496342: goto label08;
case 3545755: goto label10;
case 95897855: goto label06;
case 106556291: goto label07;
case 113399775: goto label12;
case 174989585: goto label11;
case 598351620: goto label04;
default: goto label13;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("append");
if v8 == 0 goto label13;
v6 = 0;
goto label13;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("create");
if v9 == 0 goto label13;
v6 = 1;
goto label13;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("createNew");
if v10 == 0 goto label13;
v6 = 2;
goto label13;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("deleteOnClose");
if v11 == 0 goto label13;
v6 = 3;
goto label13;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("dsync");
if v12 == 0 goto label13;
v6 = 4;
goto label13;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("perms");
if v13 == 0 goto label13;
v6 = 5;
goto label13;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("read");
if v14 == 0 goto label13;
v6 = 6;
goto label13;
label09:
v15 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sparse");
if v15 == 0 goto label13;
v6 = 7;
goto label13;
label10:
v16 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sync");
if v16 == 0 goto label13;
v6 = 8;
goto label13;
label11:
v17 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("truncateExisting");
if v17 == 0 goto label13;
v6 = 9;
goto label13;
label12:
v18 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("write");
if v18 == 0 goto label13;
v6 = 10;
label13:
tableswitch(v6)
{
case 0: goto label14;
case 1: goto label15;
case 2: goto label16;
case 3: goto label17;
case 4: goto label18;
case 5: goto label19;
case 6: goto label20;
case 7: goto label21;
case 8: goto label22;
case 9: goto label23;
case 10: goto label24;
default: goto label01;
};
label14:
v19 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v20 = v19 instanceof java.lang.Boolean;
if v20 == 0 goto label01;
v21 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v22 = virtualinvoke v21.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setAppend(boolean)>(v22);
goto label01;
label15:
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v24 = v23 instanceof java.lang.Boolean;
if v24 == 0 goto label01;
v25 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v26 = virtualinvoke v25.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setCreate(boolean)>(v26);
goto label01;
label16:
v27 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v28 = v27 instanceof java.lang.Boolean;
if v28 == 0 goto label01;
v29 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v30 = virtualinvoke v29.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setCreateNew(boolean)>(v30);
goto label01;
label17:
v31 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v32 = v31 instanceof java.lang.Boolean;
if v32 == 0 goto label01;
v33 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v34 = virtualinvoke v33.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setDeleteOnClose(boolean)>(v34);
goto label01;
label18:
v35 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v36 = v35 instanceof java.lang.Boolean;
if v36 == 0 goto label01;
v37 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v38 = virtualinvoke v37.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setDsync(boolean)>(v38);
goto label01;
label19:
v39 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v40 = v39 instanceof java.lang.String;
if v40 == 0 goto label01;
v41 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setPerms(java.lang.String)>(v41);
goto label01;
label20:
v42 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v43 = v42 instanceof java.lang.Boolean;
if v43 == 0 goto label01;
v44 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v45 = virtualinvoke v44.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setRead(boolean)>(v45);
goto label01;
label21:
v46 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v47 = v46 instanceof java.lang.Boolean;
if v47 == 0 goto label01;
v48 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v49 = virtualinvoke v48.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setSparse(boolean)>(v49);
goto label01;
label22:
v50 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v51 = v50 instanceof java.lang.Boolean;
if v51 == 0 goto label01;
v52 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v53 = virtualinvoke v52.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setSync(boolean)>(v53);
goto label01;
label23:
v54 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v55 = v54 instanceof java.lang.Boolean;
if v55 == 0 goto label01;
v56 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v57 = virtualinvoke v56.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setTruncateExisting(boolean)>(v57);
goto label01;
label24:
v58 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v59 = v58 instanceof java.lang.Boolean;
if v59 == 0 goto label01;
v60 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v61 = virtualinvoke v60.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.OpenOptions: io.vertx.core.file.OpenOptions setWrite(boolean)>(v61);
goto label01;
label25:
return;
}
static void toJson(io.vertx.core.file.OpenOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.file.OpenOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.file.OpenOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.file.OpenOptionsConverter: void toJson(io.vertx.core.file.OpenOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.file.OpenOptions, java.util.Map)
{
java.util.Map v1;
java.lang.Boolean v11, v15, v17, v19, v21, v23, v3, v5, v7, v9;
java.lang.String v12, v13;
boolean v10, v14, v16, v18, v2, v20, v22, v4, v6, v8;
io.vertx.core.file.OpenOptions v0;
v0 := @parameter0: io.vertx.core.file.OpenOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isAppend()>();
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v2);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("append", v3);
v4 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isCreate()>();
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("create", v5);
v6 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isCreateNew()>();
v7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("createNew", v7);
v8 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isDeleteOnClose()>();
v9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v8);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deleteOnClose", v9);
v10 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isDsync()>();
v11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v10);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dsync", v11);
v12 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: java.lang.String getPerms()>();
if v12 == null goto label1;
v13 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: java.lang.String getPerms()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("perms", v13);
label1:
v14 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isRead()>();
v15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v14);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("read", v15);
v16 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isSparse()>();
v17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v16);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sparse", v17);
v18 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isSync()>();
v19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v18);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sync", v19);
v20 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isTruncateExisting()>();
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v20);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("truncateExisting", v21);
v22 = virtualinvoke v0.<io.vertx.core.file.OpenOptions: boolean isWrite()>();
v23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v22);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("write", v23);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.file.OpenOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.file.OpenOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}