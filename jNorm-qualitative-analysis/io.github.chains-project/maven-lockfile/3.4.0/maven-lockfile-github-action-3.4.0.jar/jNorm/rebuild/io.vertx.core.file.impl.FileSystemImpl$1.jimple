class io.vertx.core.file.impl.FileSystemImpl$1 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$from;
final java.lang.String val$to;
final java.nio.file.CopyOption[] val$copyOptions;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, java.lang.String, java.nio.file.CopyOption[])
{
io.vertx.core.file.impl.FileSystemImpl v1;
java.nio.file.CopyOption[] v4;
io.vertx.core.file.impl.FileSystemImpl$1 v0;
java.lang.String v2, v3;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$1;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.nio.file.CopyOption[];
v0.<io.vertx.core.file.impl.FileSystemImpl$1: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.lang.String val$from> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.lang.String val$to> = v3;
v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.nio.file.CopyOption[] val$copyOptions> = v4;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public java.lang.Void perform()
{
java.nio.file.CopyOption[] v11;
io.vertx.core.file.impl.FileSystemImpl$1 v0;
io.vertx.core.file.FileSystemException v13;
java.lang.String v14, v15, v16, v3, v8;
java.nio.file.Path v10, v5;
io.vertx.core.impl.VertxInternal v2, v7;
java.io.IOException v12;
java.io.File v4, v9;
io.vertx.core.file.impl.FileSystemImpl v1, v6;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$1;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.lang.String val$from>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: io.vertx.core.file.impl.FileSystemImpl this$0>;
v7 = v6.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v8 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.lang.String val$to>;
v9 = interfaceinvoke v7.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v8);
v10 = virtualinvoke v9.<java.io.File: java.nio.file.Path toPath()>();
v11 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.nio.file.CopyOption[] val$copyOptions>;
staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(v5, v10, v11);
label2:
goto label4;
label3:
v12 := @caughtexception;
v13 = new io.vertx.core.file.FileSystemException;
v14 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.lang.String val$from>;
v15 = v0.<io.vertx.core.file.impl.FileSystemImpl$1: java.lang.String val$to>;
v16 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileCopyErrorMessage(java.lang.String,java.lang.String)>(v14, v15);
specialinvoke v13.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v16, v12);
throw v13;
label4:
return null;
catch java.io.IOException from label1 to label2 with label3;
}
}