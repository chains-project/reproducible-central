class io.vertx.core.file.impl.FileSystemImpl$16 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$path;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String)
{
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemImpl$16 v0;
java.lang.String v2;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$16;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v0.<io.vertx.core.file.impl.FileSystemImpl$16: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$16: java.lang.String val$path> = v2;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public io.vertx.core.buffer.Buffer perform()
{
io.vertx.core.file.impl.FileSystemImpl$16 v0;
byte[] v6;
io.vertx.core.impl.VertxInternal v2;
java.io.IOException v8;
io.vertx.core.file.FileSystemException v9;
java.io.File v4;
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.buffer.Buffer v7;
java.lang.String v10, v11, v3;
java.nio.file.Path v5;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$16;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$16: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$16: java.lang.String val$path>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = staticinvoke <java.nio.file.Files: byte[] readAllBytes(java.nio.file.Path)>(v5);
v7 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v6);
label2:
return v7;
label3:
v8 := @caughtexception;
v9 = new io.vertx.core.file.FileSystemException;
v10 = v0.<io.vertx.core.file.impl.FileSystemImpl$16: java.lang.String val$path>;
v11 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileAccessErrorMessage(java.lang.String,java.lang.String)>("read", v10);
specialinvoke v9.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v11, v8);
throw v9;
catch java.io.IOException from label1 to label2 with label3;
}
}