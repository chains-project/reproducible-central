class io.vertx.core.file.impl.FileSystemImpl$2 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$from;
final java.lang.String val$to;
final boolean val$recursive;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, java.lang.String, boolean)
{
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemImpl$2 v0;
java.lang.String v2, v3;
boolean v4;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$2;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v0.<io.vertx.core.file.impl.FileSystemImpl$2: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$2: java.lang.String val$from> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$2: java.lang.String val$to> = v3;
v0.<io.vertx.core.file.impl.FileSystemImpl$2: boolean val$recursive> = v4;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public java.lang.Void perform()
{
java.nio.file.CopyOption[] v15;
io.vertx.core.file.impl.FileSystemImpl$2 v0;
io.vertx.core.file.FileSystemException v17;
java.lang.String v18, v19, v20, v3, v8;
io.vertx.core.file.impl.FileSystemImpl$2$1 v14;
java.nio.file.Path v10, v5;
java.util.EnumSet v13;
boolean v11;
io.vertx.core.impl.VertxInternal v2, v7;
java.io.IOException v16;
java.io.File v4, v9;
io.vertx.core.file.impl.FileSystemImpl v1, v6;
java.nio.file.FileVisitOption v12;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$2;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: java.lang.String val$from>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: io.vertx.core.file.impl.FileSystemImpl this$0>;
v7 = v6.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v8 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: java.lang.String val$to>;
v9 = interfaceinvoke v7.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v8);
v10 = virtualinvoke v9.<java.io.File: java.nio.file.Path toPath()>();
v11 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: boolean val$recursive>;
if v11 == 0 goto label2;
v12 = <java.nio.file.FileVisitOption: java.nio.file.FileVisitOption FOLLOW_LINKS>;
v13 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>(v12);
v14 = new io.vertx.core.file.impl.FileSystemImpl$2$1;
specialinvoke v14.<io.vertx.core.file.impl.FileSystemImpl$2$1: void <init>(io.vertx.core.file.impl.FileSystemImpl$2,java.nio.file.Path,java.nio.file.Path)>(v0, v10, v5);
staticinvoke <java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)>(v5, v13, 2147483647, v14);
goto label5;
label2:
v15 = newarray (java.nio.file.CopyOption)[0];
staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(v5, v10, v15);
label3:
goto label5;
label4:
v16 := @caughtexception;
v17 = new io.vertx.core.file.FileSystemException;
v18 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: java.lang.String val$from>;
v19 = v0.<io.vertx.core.file.impl.FileSystemImpl$2: java.lang.String val$to>;
v20 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileCopyErrorMessage(java.lang.String,java.lang.String)>(v18, v19);
specialinvoke v17.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v20, v16);
throw v17;
label5:
return null;
catch java.io.IOException from label1 to label3 with label4;
}
}