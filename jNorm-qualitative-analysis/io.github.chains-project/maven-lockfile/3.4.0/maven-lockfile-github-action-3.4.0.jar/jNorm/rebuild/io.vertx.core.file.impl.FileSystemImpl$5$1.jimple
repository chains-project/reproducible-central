class io.vertx.core.file.impl.FileSystemImpl$5$1 extends java.nio.file.SimpleFileVisitor
{
final io.vertx.core.file.impl.FileSystemImpl$5 this$1;
void <init>(io.vertx.core.file.impl.FileSystemImpl$5)
{
io.vertx.core.file.impl.FileSystemImpl$5 v1;
io.vertx.core.file.impl.FileSystemImpl$5$1 v0;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$5$1;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl$5;
v0.<io.vertx.core.file.impl.FileSystemImpl$5$1: io.vertx.core.file.impl.FileSystemImpl$5 this$1> = v1;
specialinvoke v0.<java.nio.file.SimpleFileVisitor: void <init>()>();
return;
}
public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException
{
java.nio.file.FileVisitResult v5;
io.vertx.core.file.impl.FileSystemImpl$5 v3;
java.util.Set v4;
io.vertx.core.file.impl.FileSystemImpl$5$1 v0;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.Path v1;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$5$1;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$5$1: io.vertx.core.file.impl.FileSystemImpl$5 this$1>;
v4 = v3.<io.vertx.core.file.impl.FileSystemImpl$5: java.util.Set val$dirPermissions>;
staticinvoke <java.nio.file.Files: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)>(v1, v4);
v5 = <java.nio.file.FileVisitResult: java.nio.file.FileVisitResult CONTINUE>;
return v5;
}
public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException
{
java.nio.file.FileVisitResult v5;
io.vertx.core.file.impl.FileSystemImpl$5 v3;
java.util.Set v4;
io.vertx.core.file.impl.FileSystemImpl$5$1 v0;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.Path v1;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$5$1;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$5$1: io.vertx.core.file.impl.FileSystemImpl$5 this$1>;
v4 = v3.<io.vertx.core.file.impl.FileSystemImpl$5: java.util.Set val$permissions>;
staticinvoke <java.nio.file.Files: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)>(v1, v4);
v5 = <java.nio.file.FileVisitResult: java.nio.file.FileVisitResult CONTINUE>;
return v5;
}
}