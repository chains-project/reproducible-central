public interface  io.vertx.core.http.WebSocketBase extends java.lang.Object implements io.vertx.core.streams.ReadStream, io.vertx.core.streams.WriteStream
{
public abstract io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase pause();
public abstract io.vertx.core.http.WebSocketBase resume();
public abstract io.vertx.core.http.WebSocketBase fetch(long);
public abstract io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase setWriteQueueMaxSize(int);
public abstract io.vertx.core.http.WebSocketBase drainHandler(io.vertx.core.Handler);
public abstract java.lang.String binaryHandlerID();
public abstract java.lang.String textHandlerID();
public abstract java.lang.String subProtocol();
public abstract java.lang.Short closeStatusCode();
public abstract java.lang.String closeReason();
public abstract io.vertx.core.MultiMap headers();
public abstract io.vertx.core.Future writeFrame(io.vertx.core.http.WebSocketFrame);
public abstract io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame, io.vertx.core.Handler);
public abstract io.vertx.core.Future writeFinalTextFrame(java.lang.String);
public abstract io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future writeFinalBinaryFrame(io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.Future writeBinaryMessage(io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.Future writeTextMessage(java.lang.String);
public abstract io.vertx.core.http.WebSocketBase writeTextMessage(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase writePing(io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.Future writePing(io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.http.WebSocketBase writePong(io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.Future writePong(io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.http.WebSocketBase closeHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase frameHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase textMessageHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase binaryMessageHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.WebSocketBase pongHandler(io.vertx.core.Handler);
public abstract io.vertx.core.Future end();
public abstract void end(io.vertx.core.Handler);
public abstract io.vertx.core.Future close();
public abstract void close(io.vertx.core.Handler);
public abstract io.vertx.core.Future close(short);
public abstract void close(short, io.vertx.core.Handler);
public abstract io.vertx.core.Future close(short, java.lang.String);
public abstract void close(short, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.net.SocketAddress remoteAddress();
public abstract io.vertx.core.net.SocketAddress localAddress();
public abstract boolean isSsl();
public abstract boolean isClosed();
public abstract javax.net.ssl.SSLSession sslSession();
public abstract javax.security.cert.X509Certificate[] peerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract java.util.List peerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException;
}