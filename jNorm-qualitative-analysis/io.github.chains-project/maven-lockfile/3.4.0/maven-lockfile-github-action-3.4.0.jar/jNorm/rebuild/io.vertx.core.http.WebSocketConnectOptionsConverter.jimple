public class io.vertx.core.http.WebSocketConnectOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.http.WebSocketConnectOptionsConverter v0;
v0 := @this: io.vertx.core.http.WebSocketConnectOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void fromJson(java.lang.Iterable, io.vertx.core.http.WebSocketConnectOptions)
{
io.vertx.core.http.WebsocketVersion v28;
java.lang.Iterable v0;
java.util.ArrayList v22;
byte v6;
int v7;
io.vertx.core.http.WebSocketConnectOptions v1;
boolean v10, v11, v13, v15, v17, v19, v21, v26, v3, v8, v9;
java.util.Iterator v2;
java.util.function.Consumer v24;
java.lang.Object v12, v14, v16, v18, v20, v23, v25, v27, v4, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.http.WebSocketConnectOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label11;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -1698225787: goto label03;
case -826385604: goto label02;
case 351608024: goto label05;
case 1495903867: goto label04;
default: goto label06;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("allowOriginHeader");
if v8 == 0 goto label06;
v6 = 0;
goto label06;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("registerWriteHandlers");
if v9 == 0 goto label06;
v6 = 1;
goto label06;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("subProtocols");
if v10 == 0 goto label06;
v6 = 2;
goto label06;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("version");
if v11 == 0 goto label06;
v6 = 3;
label06:
tableswitch(v6)
{
case 0: goto label07;
case 1: goto label08;
case 2: goto label09;
case 3: goto label10;
default: goto label01;
};
label07:
v12 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v13 = v12 instanceof java.lang.Boolean;
if v13 == 0 goto label01;
v14 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v15 = virtualinvoke v14.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.http.WebSocketConnectOptions: io.vertx.core.http.WebSocketConnectOptions setAllowOriginHeader(boolean)>(v15);
goto label01;
label08:
v16 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v17 = v16 instanceof java.lang.Boolean;
if v17 == 0 goto label01;
v18 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v19 = virtualinvoke v18.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.http.WebSocketConnectOptions: io.vertx.core.http.WebSocketConnectOptions setRegisterWriteHandlers(boolean)>(v19);
goto label01;
label09:
v20 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v21 = v20 instanceof io.vertx.core.json.JsonArray;
if v21 == 0 goto label01;
v22 = new java.util.ArrayList;
specialinvoke v22.<java.util.ArrayList: void <init>()>();
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v24 = staticinvoke <io.vertx.core.http.WebSocketConnectOptionsConverter$lambda_fromJson_0__958: java.util.function.Consumer bootstrap$(java.util.ArrayList)>(v22);
interfaceinvoke v23.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v24);
virtualinvoke v1.<io.vertx.core.http.WebSocketConnectOptions: io.vertx.core.http.WebSocketConnectOptions setSubProtocols(java.util.List)>(v22);
goto label01;
label10:
v25 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v26 = v25 instanceof java.lang.String;
if v26 == 0 goto label01;
v27 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v28 = staticinvoke <io.vertx.core.http.WebsocketVersion: io.vertx.core.http.WebsocketVersion valueOf(java.lang.String)>(v27);
virtualinvoke v1.<io.vertx.core.http.WebSocketConnectOptions: io.vertx.core.http.WebSocketConnectOptions setVersion(io.vertx.core.http.WebsocketVersion)>(v28);
goto label01;
label11:
return;
}
public static void toJson(io.vertx.core.http.WebSocketConnectOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.http.WebSocketConnectOptions v0;
io.vertx.core.json.JsonObject v1;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.http.WebSocketConnectOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.http.WebSocketConnectOptionsConverter: void toJson(io.vertx.core.http.WebSocketConnectOptions,java.util.Map)>(v0, v2);
return;
}
public static void toJson(io.vertx.core.http.WebSocketConnectOptions, java.util.Map)
{
io.vertx.core.http.WebsocketVersion v10, v11;
java.util.function.Consumer v9;
io.vertx.core.json.JsonArray v7;
java.util.List v6, v8;
java.util.Map v1;
io.vertx.core.http.WebSocketConnectOptions v0;
java.lang.Boolean v3, v5;
java.lang.String v12;
boolean v2, v4;
v0 := @parameter0: io.vertx.core.http.WebSocketConnectOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.http.WebSocketConnectOptions: boolean getAllowOriginHeader()>();
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v2);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("allowOriginHeader", v3);
v4 = virtualinvoke v0.<io.vertx.core.http.WebSocketConnectOptions: boolean isRegisterWriteHandlers()>();
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("registerWriteHandlers", v5);
v6 = virtualinvoke v0.<io.vertx.core.http.WebSocketConnectOptions: java.util.List getSubProtocols()>();
if v6 == null goto label1;
v7 = new io.vertx.core.json.JsonArray;
specialinvoke v7.<io.vertx.core.json.JsonArray: void <init>()>();
v8 = virtualinvoke v0.<io.vertx.core.http.WebSocketConnectOptions: java.util.List getSubProtocols()>();
v9 = staticinvoke <io.vertx.core.http.WebSocketConnectOptionsConverter$lambda_toJson_1__959: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v7);
interfaceinvoke v8.<java.util.List: void forEach(java.util.function.Consumer)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("subProtocols", v7);
label1:
v10 = virtualinvoke v0.<io.vertx.core.http.WebSocketConnectOptions: io.vertx.core.http.WebsocketVersion getVersion()>();
if v10 == null goto label2;
v11 = virtualinvoke v0.<io.vertx.core.http.WebSocketConnectOptions: io.vertx.core.http.WebsocketVersion getVersion()>();
v12 = virtualinvoke v11.<io.vertx.core.http.WebsocketVersion: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", v12);
label2:
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.http.WebSocketConnectOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.http.WebSocketConnectOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}