interface  io.vertx.core.http.impl.Http2ServerStreamHandler extends java.lang.Object
{
public abstract io.vertx.core.http.impl.Http2ServerResponse response();
public abstract void dispatch(io.vertx.core.Handler);
public abstract void handleReset(long);
public abstract void handleException(java.lang.Throwable);
public abstract void handleClose();
public void handleData(io.vertx.core.buffer.Buffer)
{
io.vertx.core.buffer.Buffer v1;
io.vertx.core.http.impl.Http2ServerStreamHandler v0;
v0 := @this: io.vertx.core.http.impl.Http2ServerStreamHandler;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
return;
}
public void handleEnd(io.vertx.core.MultiMap)
{
io.vertx.core.MultiMap v1;
io.vertx.core.http.impl.Http2ServerStreamHandler v0;
v0 := @this: io.vertx.core.http.impl.Http2ServerStreamHandler;
v1 := @parameter0: io.vertx.core.MultiMap;
return;
}
public void handleCustomFrame(io.vertx.core.http.HttpFrame)
{
io.vertx.core.http.HttpFrame v1;
io.vertx.core.http.impl.Http2ServerStreamHandler v0;
v0 := @this: io.vertx.core.http.impl.Http2ServerStreamHandler;
v1 := @parameter0: io.vertx.core.http.HttpFrame;
return;
}
public void handlePriorityChange(io.vertx.core.http.StreamPriority)
{
io.vertx.core.http.impl.Http2ServerStreamHandler v0;
io.vertx.core.http.StreamPriority v1;
v0 := @this: io.vertx.core.http.impl.Http2ServerStreamHandler;
v1 := @parameter0: io.vertx.core.http.StreamPriority;
return;
}
public void onException(java.lang.Throwable)
{
java.lang.Throwable v1;
io.vertx.core.http.impl.Http2ServerStreamHandler v0;
v0 := @this: io.vertx.core.http.impl.Http2ServerStreamHandler;
v1 := @parameter0: java.lang.Throwable;
return;
}
public void onClose()
{
io.vertx.core.http.impl.Http2ServerStreamHandler v0;
v0 := @this: io.vertx.core.http.impl.Http2ServerStreamHandler;
return;
}
}