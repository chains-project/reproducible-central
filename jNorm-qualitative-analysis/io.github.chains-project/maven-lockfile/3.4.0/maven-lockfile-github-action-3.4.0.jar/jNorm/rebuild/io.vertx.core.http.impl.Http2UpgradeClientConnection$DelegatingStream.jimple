class io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream extends java.lang.Object implements io.vertx.core.http.impl.HttpClientStream
{
private final io.vertx.core.http.impl.Http2UpgradeClientConnection connection;
private final io.vertx.core.http.impl.HttpClientStream delegate;
void <init>(io.vertx.core.http.impl.Http2UpgradeClientConnection, io.vertx.core.http.impl.HttpClientStream)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v2 := @parameter1: io.vertx.core.http.impl.HttpClientStream;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.Http2UpgradeClientConnection connection> = v1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate> = v2;
return;
}
public int id()
{
int v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: int id()>();
return v2;
}
public java.lang.Object metric()
{
java.lang.Object v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: java.lang.Object metric()>();
return v2;
}
public java.lang.Object trace()
{
java.lang.Object v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: java.lang.Object trace()>();
return v2;
}
public io.vertx.core.http.HttpVersion version()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.HttpVersion v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.http.HttpVersion version()>();
return v2;
}
public io.vertx.core.http.impl.HttpClientConnection connection()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.Http2UpgradeClientConnection connection>;
return v1;
}
public io.vertx.core.impl.ContextInternal getContext()
{
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.impl.ContextInternal getContext()>();
return v2;
}
public void writeHead(io.vertx.core.http.impl.HttpRequestHead, boolean, io.netty.buffer.ByteBuf, boolean, io.vertx.core.http.StreamPriority, boolean, io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.StreamPriority v5;
io.vertx.core.http.impl.HttpClientStream v8;
io.vertx.core.http.impl.HttpRequestHead v1;
io.netty.buffer.ByteBuf v3;
io.vertx.core.Handler v7;
boolean v2, v4, v6;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.http.impl.HttpRequestHead;
v2 := @parameter1: boolean;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: boolean;
v5 := @parameter4: io.vertx.core.http.StreamPriority;
v6 := @parameter5: boolean;
v7 := @parameter6: io.vertx.core.Handler;
v8 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v8.<io.vertx.core.http.impl.HttpClientStream: void writeHead(io.vertx.core.http.impl.HttpRequestHead,boolean,io.netty.buffer.ByteBuf,boolean,io.vertx.core.http.StreamPriority,boolean,io.vertx.core.Handler)>(v1, v2, v3, v4, v5, v6, v7);
return;
}
public void writeBuffer(io.netty.buffer.ByteBuf, boolean, io.vertx.core.Handler)
{
io.netty.buffer.ByteBuf v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.Handler v3;
io.vertx.core.http.impl.HttpClientStream v4;
boolean v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void writeBuffer(io.netty.buffer.ByteBuf,boolean,io.vertx.core.Handler)>(v1, v2, v3);
return;
}
public void writeFrame(int, int, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v3;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
int v1, v2;
io.vertx.core.http.impl.HttpClientStream v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void writeFrame(int,int,io.netty.buffer.ByteBuf)>(v1, v2, v3);
return;
}
public void continueHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void continueHandler(io.vertx.core.Handler)>(v1);
return;
}
public void earlyHintsHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void earlyHintsHandler(io.vertx.core.Handler)>(v1);
return;
}
public void pushHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void pushHandler(io.vertx.core.Handler)>(v1);
return;
}
public void unknownFrameHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void unknownFrameHandler(io.vertx.core.Handler)>(v1);
return;
}
public void headHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void headHandler(io.vertx.core.Handler)>(v1);
return;
}
public void chunkHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void chunkHandler(io.vertx.core.Handler)>(v1);
return;
}
public void endHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void endHandler(io.vertx.core.Handler)>(v1);
return;
}
public void priorityHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void priorityHandler(io.vertx.core.Handler)>(v1);
return;
}
public void closeHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void closeHandler(io.vertx.core.Handler)>(v1);
return;
}
public void doSetWriteQueueMaxSize(int)
{
int v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void doSetWriteQueueMaxSize(int)>(v1);
return;
}
public boolean isNotWritable()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
boolean v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: boolean isNotWritable()>();
return v2;
}
public void doPause()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: void doPause()>();
return;
}
public void doFetch(long)
{
long v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: long;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void doFetch(long)>(v1);
return;
}
public void reset(java.lang.Throwable)
{
java.lang.Throwable v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void reset(java.lang.Throwable)>(v1);
return;
}
public io.vertx.core.http.StreamPriority priority()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.StreamPriority v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.http.StreamPriority priority()>();
return v2;
}
public void updatePriority(io.vertx.core.http.StreamPriority)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
io.vertx.core.http.StreamPriority v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.http.StreamPriority;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void updatePriority(io.vertx.core.http.StreamPriority)>(v1);
return;
}
public io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int)
{
int v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int)>(v1);
return v0;
}
public boolean writeQueueFull()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v1;
boolean v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: boolean writeQueueFull()>();
return v2;
}
public io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream v0;
io.vertx.core.http.impl.HttpClientStream v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$DelegatingStream: io.vertx.core.http.impl.HttpClientStream delegate>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)>(v1);
return v0;
}
}