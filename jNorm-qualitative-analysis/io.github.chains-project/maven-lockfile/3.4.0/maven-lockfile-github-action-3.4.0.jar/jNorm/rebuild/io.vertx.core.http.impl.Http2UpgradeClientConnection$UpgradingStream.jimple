class io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream extends java.lang.Object implements io.vertx.core.http.impl.HttpClientStream
{
private final io.vertx.core.http.impl.Http1xClientConnection upgradingConnection;
private final io.vertx.core.http.impl.HttpClientStream upgradingStream;
private final io.vertx.core.http.impl.Http2UpgradeClientConnection upgradedConnection;
private io.vertx.core.http.impl.HttpClientStream upgradedStream;
private io.vertx.core.Handler headHandler;
private io.vertx.core.Handler chunkHandler;
private io.vertx.core.Handler endHandler;
private io.vertx.core.Handler priorityHandler;
private io.vertx.core.Handler exceptionHandler;
private io.vertx.core.Handler drainHandler;
private io.vertx.core.Handler continueHandler;
private io.vertx.core.Handler earlyHintsHandler;
private io.vertx.core.Handler pushHandler;
private io.vertx.core.Handler unknownFrameHandler;
private io.vertx.core.Handler closeHandler;
void <init>(io.vertx.core.http.impl.HttpClientStream, io.vertx.core.http.impl.Http2UpgradeClientConnection, io.vertx.core.http.impl.Http1xClientConnection)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.Http2UpgradeClientConnection v2;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.impl.Http1xClientConnection v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.http.impl.HttpClientStream;
v2 := @parameter1: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v3 := @parameter2: io.vertx.core.http.impl.Http1xClientConnection;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http2UpgradeClientConnection upgradedConnection> = v2;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection> = v3;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream> = v1;
return;
}
public io.vertx.core.http.impl.HttpClientConnection connection()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http2UpgradeClientConnection upgradedConnection>;
return v1;
}
public void writeHead(io.vertx.core.http.impl.HttpRequestHead, boolean, io.netty.buffer.ByteBuf, boolean, io.vertx.core.http.StreamPriority, boolean, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientImpl v14;
io.vertx.core.http.Http2Settings v16;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$2 v17;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1 v12;
io.netty.buffer.ByteBuf v3;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.HttpClientOptions v15;
boolean v2, v4, v6;
io.vertx.core.http.StreamPriority v5;
io.netty.channel.ChannelPipeline v10;
io.vertx.core.http.impl.Http2UpgradeClientConnection v13;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler v18;
io.netty.channel.Channel v9;
io.vertx.core.http.impl.HttpRequestHead v1;
io.netty.channel.ChannelHandler v11;
io.vertx.core.Handler v7;
io.vertx.core.http.impl.Http1xClientConnection v8;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.http.impl.HttpRequestHead;
v2 := @parameter1: boolean;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: boolean;
v5 := @parameter4: io.vertx.core.http.StreamPriority;
v6 := @parameter5: boolean;
v7 := @parameter6: io.vertx.core.Handler;
v8 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection>;
v9 = virtualinvoke v8.<io.vertx.core.http.impl.Http1xClientConnection: io.netty.channel.Channel channel()>();
v10 = interfaceinvoke v9.<io.netty.channel.Channel: io.netty.channel.ChannelPipeline pipeline()>();
v11 = interfaceinvoke v10.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler get(java.lang.Class)>(class "Lio/netty/handler/codec/http/HttpClientCodec;");
v12 = new io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1;
v13 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http2UpgradeClientConnection upgradedConnection>;
v14 = v13.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientImpl client>;
v15 = virtualinvoke v14.<io.vertx.core.http.impl.HttpClientImpl: io.vertx.core.http.HttpClientOptions options()>();
v16 = virtualinvoke v15.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.Http2Settings getInitialSettings()>();
specialinvoke v12.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1: void <init>(io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream,io.vertx.core.http.Http2Settings)>(v0, v16);
v17 = new io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$2;
specialinvoke v17.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$2: void <init>(io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream,io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec,io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec,int)>(v0, v11, v12, 65536);
v18 = new io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler;
specialinvoke v18.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler: void <init>(io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream,io.netty.channel.ChannelPipeline)>(v0, v10);
interfaceinvoke v10.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>("codec", null, v18);
interfaceinvoke v10.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>("codec", null, v17);
specialinvoke v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: void doWriteHead(io.vertx.core.http.impl.HttpRequestHead,boolean,io.netty.buffer.ByteBuf,boolean,io.vertx.core.http.StreamPriority,boolean,io.vertx.core.Handler)>(v1, v2, v3, v4, v5, v6, v7);
return;
}
private void doWriteHead(io.vertx.core.http.impl.HttpRequestHead, boolean, io.netty.buffer.ByteBuf, boolean, io.vertx.core.http.StreamPriority, boolean, io.vertx.core.Handler)
{
io.netty.util.concurrent.EventExecutor v10;
java.lang.Runnable v17;
io.netty.channel.ChannelHandlerContext v14, v9;
io.netty.buffer.ByteBuf v3;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
boolean v11, v2, v4, v6;
io.vertx.core.http.StreamPriority v5;
io.netty.channel.ChannelPipeline v15;
io.vertx.core.http.impl.HttpClientStream v12;
io.vertx.core.http.impl.HttpRequestHead v1;
java.lang.Object v16;
io.vertx.core.Handler v7;
io.vertx.core.http.impl.Http1xClientConnection v13, v8;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.http.impl.HttpRequestHead;
v2 := @parameter1: boolean;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: boolean;
v5 := @parameter4: io.vertx.core.http.StreamPriority;
v6 := @parameter5: boolean;
v7 := @parameter6: io.vertx.core.Handler;
v8 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection>;
v9 = virtualinvoke v8.<io.vertx.core.http.impl.Http1xClientConnection: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
v10 = interfaceinvoke v9.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v11 = interfaceinvoke v10.<io.netty.util.concurrent.EventExecutor: boolean inEventLoop()>();
if v11 == 0 goto label1;
v12 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v12.<io.vertx.core.http.impl.HttpClientStream: void writeHead(io.vertx.core.http.impl.HttpRequestHead,boolean,io.netty.buffer.ByteBuf,boolean,io.vertx.core.http.StreamPriority,boolean,io.vertx.core.Handler)>(v1, v2, v3, v4, v5, v6, v7);
if v4 == 0 goto label2;
v13 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection>;
v14 = virtualinvoke v13.<io.vertx.core.http.impl.Http1xClientConnection: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
v15 = interfaceinvoke v14.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v16 = <io.vertx.core.http.impl.Http2UpgradeClientConnection: java.lang.Object SEND_BUFFERED_MESSAGES>;
interfaceinvoke v15.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object)>(v16);
goto label2;
label1:
v17 = staticinvoke <io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$lambda_doWriteHead_0__1082: java.lang.Runnable bootstrap$(io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream,io.vertx.core.http.impl.HttpRequestHead,boolean,io.netty.buffer.ByteBuf,boolean,io.vertx.core.http.StreamPriority,boolean,io.vertx.core.Handler)>(v0, v1, v2, v3, v4, v5, v6, v7);
interfaceinvoke v10.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v17);
label2:
return;
}
public int id()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
return 1;
}
public java.lang.Object metric()
{
java.lang.Object v2;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: java.lang.Object metric()>();
return v2;
}
public java.lang.Object trace()
{
java.lang.Object v2;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: java.lang.Object trace()>();
return v2;
}
public io.vertx.core.http.HttpVersion version()
{
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.HttpVersion v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v1 != null goto label1;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
label1:
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.http.HttpVersion version()>();
return v2;
}
public io.vertx.core.impl.ContextInternal getContext()
{
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.impl.ContextInternal getContext()>();
return v2;
}
public void continueHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void continueHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void continueHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler continueHandler> = v1;
label2:
return;
}
public void earlyHintsHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void earlyHintsHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void earlyHintsHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler earlyHintsHandler> = v1;
label2:
return;
}
public void pushHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void pushHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void pushHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler pushHandler> = v1;
label2:
return;
}
public void closeHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void closeHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void closeHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler closeHandler> = v1;
label2:
return;
}
public io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream drainHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler drainHandler> = v1;
label2:
return v0;
}
public io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler exceptionHandler> = v1;
label2:
return v0;
}
public void headHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void headHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void headHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler headHandler> = v1;
label2:
return;
}
public void chunkHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void chunkHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void chunkHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler chunkHandler> = v1;
label2:
return;
}
public void endHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void endHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void endHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler endHandler> = v1;
label2:
return;
}
public void unknownFrameHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void unknownFrameHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void unknownFrameHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler unknownFrameHandler> = v1;
label2:
return;
}
public void priorityHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.Handler v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void priorityHandler(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void priorityHandler(io.vertx.core.Handler)>(v1);
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.Handler priorityHandler> = v1;
label2:
return;
}
public io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
int v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int)>(v1);
label2:
return v0;
}
public boolean writeQueueFull()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.HttpClientStream v1, v2, v4;
boolean v3, v5;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: boolean writeQueueFull()>();
return v3;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
v5 = interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: boolean writeQueueFull()>();
return v5;
}
public void writeBuffer(io.netty.buffer.ByteBuf, boolean, io.vertx.core.Handler)
{
io.netty.util.concurrent.EventExecutor v6;
io.netty.channel.ChannelPipeline v11;
io.vertx.core.http.impl.HttpClientStream v8;
java.lang.Runnable v13;
io.netty.channel.ChannelHandlerContext v10, v5;
io.netty.buffer.ByteBuf v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
java.lang.Object v12;
io.vertx.core.Handler v3;
io.vertx.core.http.impl.Http1xClientConnection v4, v9;
boolean v2, v7;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection>;
v5 = virtualinvoke v4.<io.vertx.core.http.impl.Http1xClientConnection: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
v6 = interfaceinvoke v5.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v7 = interfaceinvoke v6.<io.netty.util.concurrent.EventExecutor: boolean inEventLoop()>();
if v7 == 0 goto label1;
v8 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v8.<io.vertx.core.http.impl.HttpClientStream: void writeBuffer(io.netty.buffer.ByteBuf,boolean,io.vertx.core.Handler)>(v1, v2, v3);
if v2 == 0 goto label2;
v9 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection>;
v10 = virtualinvoke v9.<io.vertx.core.http.impl.Http1xClientConnection: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
v11 = interfaceinvoke v10.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v12 = <io.vertx.core.http.impl.Http2UpgradeClientConnection: java.lang.Object SEND_BUFFERED_MESSAGES>;
interfaceinvoke v11.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object)>(v12);
goto label2;
label1:
v13 = staticinvoke <io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$lambda_writeBuffer_1__1083: java.lang.Runnable bootstrap$(io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream,io.netty.buffer.ByteBuf,boolean,io.vertx.core.Handler)>(v0, v1, v2, v3);
interfaceinvoke v6.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v13);
label2:
return;
}
public void writeFrame(int, int, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v3;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
int v1, v2;
io.vertx.core.http.impl.HttpClientStream v4, v5, v6;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v4 == null goto label1;
v5 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v5.<io.vertx.core.http.impl.HttpClientStream: void writeFrame(int,int,io.netty.buffer.ByteBuf)>(v1, v2, v3);
goto label2;
label1:
v6 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v6.<io.vertx.core.http.impl.HttpClientStream: void writeFrame(int,int,io.netty.buffer.ByteBuf)>(v1, v2, v3);
label2:
return;
}
public void doSetWriteQueueMaxSize(int)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
int v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void doSetWriteQueueMaxSize(int)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void doSetWriteQueueMaxSize(int)>(v1);
label2:
return;
}
public boolean isNotWritable()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.HttpClientStream v1, v2, v4;
boolean v3, v5;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: boolean isNotWritable()>();
return v3;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
v5 = interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: boolean isNotWritable()>();
return v5;
}
public void doPause()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.HttpClientStream v1, v2, v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: void doPause()>();
goto label2;
label1:
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void doPause()>();
label2:
return;
}
public void doFetch(long)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
long v1;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: long;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void doFetch(long)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void doFetch(long)>(v1);
label2:
return;
}
public void reset(java.lang.Throwable)
{
java.lang.Throwable v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void reset(java.lang.Throwable)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void reset(java.lang.Throwable)>(v1);
label2:
return;
}
public io.vertx.core.http.StreamPriority priority()
{
io.vertx.core.http.StreamPriority v3, v5;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.HttpClientStream v1, v2, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.http.StreamPriority priority()>();
return v3;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
v5 = interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.http.StreamPriority priority()>();
return v5;
}
public void updatePriority(io.vertx.core.http.StreamPriority)
{
io.vertx.core.http.StreamPriority v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v0;
io.vertx.core.http.impl.HttpClientStream v2, v3, v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v1 := @parameter0: io.vertx.core.http.StreamPriority;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradedStream>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientStream: void updatePriority(io.vertx.core.http.StreamPriority)>(v1);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.HttpClientStream upgradingStream>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientStream: void updatePriority(io.vertx.core.http.StreamPriority)>(v1);
label2:
return;
}
}