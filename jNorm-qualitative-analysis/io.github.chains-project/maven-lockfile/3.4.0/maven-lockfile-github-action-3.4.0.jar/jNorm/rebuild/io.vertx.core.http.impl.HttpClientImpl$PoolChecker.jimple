class io.vertx.core.http.impl.HttpClientImpl$PoolChecker extends java.lang.Object implements io.vertx.core.Handler
{
final java.lang.ref.WeakReference ref;
private void <init>(io.vertx.core.http.impl.HttpClientImpl)
{
io.vertx.core.http.impl.HttpClientImpl$PoolChecker v0;
java.lang.ref.WeakReference v2;
io.vertx.core.http.impl.HttpClientImpl v1;
v0 := @this: io.vertx.core.http.impl.HttpClientImpl$PoolChecker;
v1 := @parameter0: io.vertx.core.http.impl.HttpClientImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.lang.ref.WeakReference;
specialinvoke v2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(v1);
v0.<io.vertx.core.http.impl.HttpClientImpl$PoolChecker: java.lang.ref.WeakReference ref> = v2;
return;
}
public void handle(java.lang.Long)
{
java.lang.Long v1;
java.lang.Object v3;
io.vertx.core.http.impl.HttpClientImpl$PoolChecker v0;
java.lang.ref.WeakReference v2;
v0 := @this: io.vertx.core.http.impl.HttpClientImpl$PoolChecker;
v1 := @parameter0: java.lang.Long;
v2 = v0.<io.vertx.core.http.impl.HttpClientImpl$PoolChecker: java.lang.ref.WeakReference ref>;
v3 = virtualinvoke v2.<java.lang.ref.WeakReference: java.lang.Object get()>();
if v3 == null goto label1;
specialinvoke v3.<io.vertx.core.http.impl.HttpClientImpl: void checkExpired(io.vertx.core.Handler)>(v0);
label1:
return;
}
}