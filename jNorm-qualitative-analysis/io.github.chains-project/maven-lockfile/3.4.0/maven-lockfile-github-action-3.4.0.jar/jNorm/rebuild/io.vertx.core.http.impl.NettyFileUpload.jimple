final class io.vertx.core.http.impl.NettyFileUpload extends java.lang.Object implements io.netty.handler.codec.http.multipart.FileUpload, io.vertx.core.streams.ReadStream
{
private final java.lang.String name;
private java.lang.String contentType;
private java.lang.String filename;
private java.lang.String contentTransferEncoding;
private java.nio.charset.Charset charset;
private boolean completed;
private long maxSize;
private final io.vertx.core.http.HttpServerRequest request;
private final io.vertx.core.streams.impl.InboundBuffer pending;
private io.vertx.core.Handler endHandler;
private io.vertx.core.Handler exceptionHandler;
private io.vertx.core.Handler dataHandler;
private final long size;
void <init>(io.vertx.core.Context, io.vertx.core.http.HttpServerRequest, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.nio.charset.Charset, long)
{
io.vertx.core.http.HttpServerRequest v2;
io.vertx.core.streams.impl.InboundBuffer v11, v13, v9;
long v8;
io.vertx.core.Context v1;
io.vertx.core.http.impl.NettyFileUpload v0;
java.nio.charset.Charset v7;
java.lang.String v3, v4, v5, v6;
io.vertx.core.Handler v10, v12;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.vertx.core.Context;
v2 := @parameter1: io.vertx.core.http.HttpServerRequest;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: java.lang.String;
v7 := @parameter6: java.nio.charset.Charset;
v8 := @parameter7: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.NettyFileUpload: long maxSize> = -1L;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String name> = v3;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String filename> = v4;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String contentType> = v5;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String contentTransferEncoding> = v6;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.nio.charset.Charset charset> = v7;
v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.http.HttpServerRequest request> = v2;
v0.<io.vertx.core.http.impl.NettyFileUpload: long size> = v8;
v9 = new io.vertx.core.streams.impl.InboundBuffer;
specialinvoke v9.<io.vertx.core.streams.impl.InboundBuffer: void <init>(io.vertx.core.Context)>(v1);
v10 = staticinvoke <io.vertx.core.http.impl.NettyFileUpload$lambda_new_0__966: io.vertx.core.Handler bootstrap$(io.vertx.core.http.HttpServerRequest)>(v2);
v11 = virtualinvoke v9.<io.vertx.core.streams.impl.InboundBuffer: io.vertx.core.streams.impl.InboundBuffer drainHandler(io.vertx.core.Handler)>(v10);
v12 = staticinvoke <io.vertx.core.http.impl.NettyFileUpload$lambda_new_1__967: io.vertx.core.Handler bootstrap$(io.vertx.core.http.impl.NettyFileUpload)>(v0);
v13 = virtualinvoke v11.<io.vertx.core.streams.impl.InboundBuffer: io.vertx.core.streams.impl.InboundBuffer handler(io.vertx.core.Handler)>(v12);
v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.streams.impl.InboundBuffer pending> = v13;
return;
}
public synchronized io.vertx.core.http.impl.NettyFileUpload exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.vertx.core.Handler;
v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.Handler exceptionHandler> = v1;
return v0;
}
private io.vertx.core.Handler handler()
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.Handler dataHandler>;
return v1;
}
public synchronized io.vertx.core.http.impl.NettyFileUpload handler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.vertx.core.Handler;
v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.Handler dataHandler> = v1;
return v0;
}
public io.vertx.core.http.impl.NettyFileUpload pause()
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.streams.impl.InboundBuffer v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.streams.impl.InboundBuffer pending>;
virtualinvoke v1.<io.vertx.core.streams.impl.InboundBuffer: io.vertx.core.streams.impl.InboundBuffer pause()>();
return v0;
}
public io.vertx.core.http.impl.NettyFileUpload resume()
{
io.vertx.core.http.impl.NettyFileUpload v0, v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = virtualinvoke v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.http.impl.NettyFileUpload fetch(long)>(9223372036854775807L);
return v1;
}
public io.vertx.core.http.impl.NettyFileUpload fetch(long)
{
io.vertx.core.http.impl.NettyFileUpload v0;
long v1;
io.vertx.core.streams.impl.InboundBuffer v2;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: long;
v2 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.streams.impl.InboundBuffer pending>;
virtualinvoke v2.<io.vertx.core.streams.impl.InboundBuffer: boolean fetch(long)>(v1);
return v0;
}
private synchronized io.vertx.core.Handler endHandler()
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.Handler endHandler>;
return v1;
}
public synchronized io.vertx.core.http.impl.NettyFileUpload endHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.vertx.core.Handler;
v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.Handler endHandler> = v1;
return v0;
}
private void receiveData(io.vertx.core.buffer.Buffer)
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.http.HttpServerRequest v5;
io.vertx.core.streams.impl.InboundBuffer v3;
io.vertx.core.buffer.Buffer v1;
int v2;
boolean v4;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = interfaceinvoke v1.<io.vertx.core.buffer.Buffer: int length()>();
if v2 == 0 goto label1;
v3 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.streams.impl.InboundBuffer pending>;
v4 = virtualinvoke v3.<io.vertx.core.streams.impl.InboundBuffer: boolean write(java.lang.Object)>(v1);
if v4 != 0 goto label1;
v5 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.http.HttpServerRequest request>;
interfaceinvoke v5.<io.vertx.core.http.HttpServerRequest: io.vertx.core.http.HttpServerRequest pause()>();
label1:
return;
}
private void end()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.Object v2;
io.vertx.core.streams.impl.InboundBuffer v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.streams.impl.InboundBuffer pending>;
v2 = <io.vertx.core.streams.impl.InboundBuffer: java.lang.Object END_SENTINEL>;
virtualinvoke v1.<io.vertx.core.streams.impl.InboundBuffer: boolean write(java.lang.Object)>(v2);
return;
}
public void handleException(java.lang.Throwable)
{
java.lang.Throwable v1, v3;
io.vertx.core.http.impl.NettyFileUpload v0;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.lang.Throwable;
entermonitor v0;
label1:
v2 = v0.<io.vertx.core.http.impl.NettyFileUpload: io.vertx.core.Handler exceptionHandler>;
exitmonitor v0;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v0;
throw v3;
label4:
if v2 == null goto label5;
interfaceinvoke v2.<io.vertx.core.Handler: void handle(java.lang.Object)>(v1);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setContent(io.netty.buffer.ByteBuf) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.netty.buffer.ByteBuf v1;
io.vertx.core.buffer.Buffer v2;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v0.<io.vertx.core.http.impl.NettyFileUpload: boolean completed> = 1;
v2 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v1);
specialinvoke v0.<io.vertx.core.http.impl.NettyFileUpload: void receiveData(io.vertx.core.buffer.Buffer)>(v2);
specialinvoke v0.<io.vertx.core.http.impl.NettyFileUpload: void end()>();
return;
}
public void addContent(io.netty.buffer.ByteBuf, boolean) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.netty.buffer.ByteBuf v1;
io.vertx.core.buffer.Buffer v3;
boolean v2;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
v3 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v1);
specialinvoke v0.<io.vertx.core.http.impl.NettyFileUpload: void receiveData(io.vertx.core.buffer.Buffer)>(v3);
if v2 == 0 goto label1;
v0.<io.vertx.core.http.impl.NettyFileUpload: boolean completed> = 1;
specialinvoke v0.<io.vertx.core.http.impl.NettyFileUpload: void end()>();
label1:
return;
}
public void setContent(java.io.File) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v2;
java.io.File v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.io.File;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public void setContent(java.io.InputStream) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v2;
java.io.InputStream v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.io.InputStream;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean isCompleted()
{
io.vertx.core.http.impl.NettyFileUpload v0;
boolean v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: boolean completed>;
return v1;
}
public long length()
{
io.vertx.core.http.impl.NettyFileUpload v0;
long v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: long size>;
return v1;
}
public void delete()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public long definedLength()
{
io.vertx.core.http.impl.NettyFileUpload v0;
long v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: long size>;
return v1;
}
public void checkSize(long) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
byte v3, v5;
java.io.IOException v6;
long v1, v2, v4;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: long;
v2 = v0.<io.vertx.core.http.impl.NettyFileUpload: long maxSize>;
v3 = v2 cmp 0L;
if v3 < 0 goto label1;
v4 = v0.<io.vertx.core.http.impl.NettyFileUpload: long maxSize>;
v5 = v1 cmp v4;
if v5 <= 0 goto label1;
v6 = new java.io.IOException;
specialinvoke v6.<java.io.IOException: void <init>(java.lang.String)>("Size exceed allowed maximum capacity");
throw v6;
label1:
return;
}
public long getMaxSize()
{
io.vertx.core.http.impl.NettyFileUpload v0;
long v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: long maxSize>;
return v1;
}
public void setMaxSize(long)
{
io.vertx.core.http.impl.NettyFileUpload v0;
long v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: long;
v0.<io.vertx.core.http.impl.NettyFileUpload: long maxSize> = v1;
return;
}
public byte[] get() throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public io.netty.buffer.ByteBuf getChunk(int) throws java.io.IOException
{
int v1;
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v2;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public java.lang.String getString() throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String getString(java.nio.charset.Charset) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v2;
java.nio.charset.Charset v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.nio.charset.Charset;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public void setCharset(java.nio.charset.Charset)
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.nio.charset.Charset v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.nio.charset.Charset;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.nio.charset.Charset charset> = v1;
return;
}
public java.nio.charset.Charset getCharset()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.nio.charset.Charset v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: java.nio.charset.Charset charset>;
return v1;
}
public boolean renameTo(java.io.File) throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v2;
java.io.File v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.io.File;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean isInMemory()
{
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
return 0;
}
public java.io.File getFile() throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String getName()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String name>;
return v1;
}
public io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData)
{
io.vertx.core.http.impl.NettyFileUpload v0;
io.netty.handler.codec.http.multipart.InterfaceHttpData v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.netty.handler.codec.http.multipart.InterfaceHttpData;
return 0;
}
public java.lang.String getFilename()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String filename>;
return v1;
}
public void setFilename(java.lang.String)
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String filename> = v1;
return;
}
public void setContentType(java.lang.String)
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String contentType> = v1;
return;
}
public java.lang.String getContentType()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String contentType>;
return v1;
}
public void setContentTransferEncoding(java.lang.String)
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String contentTransferEncoding> = v1;
return;
}
public java.lang.String getContentTransferEncoding()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = v0.<io.vertx.core.http.impl.NettyFileUpload: java.lang.String contentTransferEncoding>;
return v1;
}
public io.netty.buffer.ByteBuf getByteBuf() throws java.io.IOException
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public io.netty.handler.codec.http.multipart.FileUpload copy()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public io.netty.handler.codec.http.multipart.FileUpload duplicate()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v2;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public io.netty.handler.codec.http.multipart.FileUpload retain()
{
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
return v0;
}
public io.netty.handler.codec.http.multipart.FileUpload retain(int)
{
int v1;
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: int;
return v0;
}
public io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object)
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: java.lang.Object;
return v0;
}
public io.netty.handler.codec.http.multipart.FileUpload touch()
{
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
return v0;
}
public io.netty.buffer.ByteBuf content()
{
io.vertx.core.http.impl.NettyFileUpload v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public int refCnt()
{
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
return 1;
}
public boolean release()
{
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
return 0;
}
public boolean release(int)
{
int v1;
io.vertx.core.http.impl.NettyFileUpload v0;
v0 := @this: io.vertx.core.http.impl.NettyFileUpload;
v1 := @parameter0: int;
return 0;
}
}