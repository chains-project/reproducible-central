public class io.vertx.core.impl.Args extends java.lang.Object
{
public final java.util.Map map;
public void <init>(java.lang.String[])
{
java.lang.String[] v1;
java.util.HashMap v2;
io.vertx.core.impl.Args v0;
java.util.Map v10, v8, v9;
int v4, v5;
java.lang.String v3, v6;
boolean v7;
v0 := @this: io.vertx.core.impl.Args;
v1 := @parameter0: java.lang.String[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.impl.Args: java.util.Map map> = v2;
v3 = null;
v4 = lengthof v1;
v5 = 0;
label1:
if v5 >= v4 goto label5;
v6 = v1[v5];
v7 = virtualinvoke v6.<java.lang.String: boolean startsWith(java.lang.String)>("-");
if v7 == 0 goto label3;
if v3 == null goto label2;
v8 = v0.<io.vertx.core.impl.Args: java.util.Map map>;
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, "");
label2:
v3 = v6;
goto label4;
label3:
if v3 == null goto label4;
v9 = v0.<io.vertx.core.impl.Args: java.util.Map map>;
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v6);
v3 = null;
label4:
v5 = v5 + 1;
goto label1;
label5:
if v3 == null goto label6;
v10 = v0.<io.vertx.core.impl.Args: java.util.Map map>;
interfaceinvoke v10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, "");
label6:
return;
}
public int getInt(java.lang.String)
{
java.lang.NumberFormatException v6;
java.lang.IllegalArgumentException v7;
io.vertx.core.impl.Args v0;
java.util.Map v2;
int v5, v9;
java.lang.Object v3;
java.lang.String v1, v4, v8;
v0 := @this: io.vertx.core.impl.Args;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.impl.Args: java.util.Map map>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label4;
label1:
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v4);
label2:
goto label5;
label3:
v6 := @caughtexception;
v7 = new java.lang.IllegalArgumentException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid \u0001: \u0001");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v7;
label4:
v9 = (int) -1;
v5 = v9;
label5:
return v5;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
}