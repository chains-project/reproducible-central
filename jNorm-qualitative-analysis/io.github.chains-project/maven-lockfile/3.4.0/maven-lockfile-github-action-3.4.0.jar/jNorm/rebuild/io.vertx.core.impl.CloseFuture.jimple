public class io.vertx.core.impl.CloseFuture extends java.lang.Object implements io.vertx.core.Closeable
{
private final io.vertx.core.impl.logging.Logger log;
private final io.vertx.core.Promise promise;
private boolean closed;
private java.util.Map weakHooks;
private java.util.Map hooks;
public void <init>()
{
io.vertx.core.impl.CloseFuture v0;
v0 := @this: io.vertx.core.impl.CloseFuture;
specialinvoke v0.<io.vertx.core.impl.CloseFuture: void <init>(io.vertx.core.impl.logging.Logger)>(null);
return;
}
public void <init>(io.vertx.core.impl.logging.Logger)
{
io.vertx.core.impl.logging.Logger v1;
io.vertx.core.Promise v2;
io.vertx.core.impl.CloseFuture v0;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 := @parameter0: io.vertx.core.impl.logging.Logger;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.Promise promise> = v2;
v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.impl.logging.Logger log> = v1;
return;
}
public synchronized void add(io.vertx.core.Closeable)
{
java.lang.IllegalStateException v3;
io.vertx.core.Closeable v1;
java.util.HashMap v11;
io.vertx.core.Future v5;
io.vertx.core.impl.CloseFuture v0;
java.util.Map v10, v12, v7, v9;
io.vertx.core.Handler v6;
java.util.WeakHashMap v8;
boolean v2, v4;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 := @parameter0: io.vertx.core.Closeable;
v2 = v0.<io.vertx.core.impl.CloseFuture: boolean closed>;
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
label1:
v4 = v1 instanceof io.vertx.core.impl.CloseFuture;
if v4 == 0 goto label3;
v5 = virtualinvoke v1.<io.vertx.core.impl.CloseFuture: io.vertx.core.Future future()>();
v6 = staticinvoke <io.vertx.core.impl.CloseFuture$lambda_add_0__1521: io.vertx.core.Handler bootstrap$(io.vertx.core.impl.CloseFuture,io.vertx.core.impl.CloseFuture)>(v0, v1);
interfaceinvoke v5.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v6);
v7 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks>;
if v7 != null goto label2;
v8 = new java.util.WeakHashMap;
specialinvoke v8.<java.util.WeakHashMap: void <init>()>();
v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks> = v8;
label2:
v9 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks>;
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v0);
goto label5;
label3:
v10 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks>;
if v10 != null goto label4;
v11 = new java.util.HashMap;
specialinvoke v11.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks> = v11;
label4:
v12 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v0);
label5:
return;
}
public synchronized boolean remove(io.vertx.core.Closeable)
{
io.vertx.core.Closeable v1;
io.vertx.core.impl.CloseFuture v0;
java.util.Map v3, v4, v7, v8;
java.lang.Object v5, v9;
boolean v10, v2, v6;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 := @parameter0: io.vertx.core.Closeable;
v2 = v1 instanceof io.vertx.core.impl.CloseFuture;
if v2 == 0 goto label3;
v3 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks>;
if v3 == null goto label6;
v4 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks>;
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
if v5 == null goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
label3:
v7 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks>;
if v7 == null goto label6;
v8 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks>;
v9 = interfaceinvoke v8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
if v9 == null goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
label6:
return 0;
}
public synchronized boolean isClosed()
{
boolean v1;
io.vertx.core.impl.CloseFuture v0;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 = v0.<io.vertx.core.impl.CloseFuture: boolean closed>;
return v1;
}
public io.vertx.core.Future future()
{
io.vertx.core.Future v2;
io.vertx.core.Promise v1;
io.vertx.core.impl.CloseFuture v0;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 = v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.Promise promise>;
v2 = interfaceinvoke v1.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v2;
}
public io.vertx.core.Future close()
{
java.lang.Throwable v13;
java.util.stream.IntStream v16;
java.util.ArrayList v1, v10, v6;
java.util.concurrent.atomic.AtomicInteger v18;
java.util.Map v11, v5, v7, v9;
int v17;
boolean v2, v20, v23, v3, v4;
java.util.Iterator v19, v22;
io.vertx.core.Promise v24, v27, v28;
java.util.function.ToIntFunction v15;
java.util.Set v12, v8;
io.vertx.core.Future v25, v29;
java.util.stream.Stream v14;
io.vertx.core.impl.CloseFuture v0;
java.lang.Object v21;
io.vertx.core.Handler v26;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
entermonitor v0;
label01:
v2 = v0.<io.vertx.core.impl.CloseFuture: boolean closed>;
if v2 != 0 goto label02;
v3 = 1;
goto label03;
label02:
v3 = 0;
label03:
v4 = v3;
v5 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks>;
if v5 == null goto label04;
v6 = new java.util.ArrayList;
v7 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks>;
v8 = interfaceinvoke v7.<java.util.Map: java.util.Set keySet()>();
specialinvoke v6.<java.util.ArrayList: void <init>(java.util.Collection)>(v8);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v6);
label04:
v9 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks>;
if v9 == null goto label05;
v10 = new java.util.ArrayList;
v11 = v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks>;
v12 = interfaceinvoke v11.<java.util.Map: java.util.Set keySet()>();
specialinvoke v10.<java.util.ArrayList: void <init>(java.util.Collection)>(v12);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v10);
label05:
v0.<io.vertx.core.impl.CloseFuture: boolean closed> = 1;
v0.<io.vertx.core.impl.CloseFuture: java.util.Map weakHooks> = null;
v0.<io.vertx.core.impl.CloseFuture: java.util.Map hooks> = null;
exitmonitor v0;
label06:
goto label08;
label07:
v13 := @caughtexception;
exitmonitor v0;
throw v13;
label08:
if v4 == 0 goto label12;
v14 = interfaceinvoke v1.<java.util.List: java.util.stream.Stream stream()>();
v15 = staticinvoke <io.vertx.core.impl.CloseFuture$size__1522: java.util.function.ToIntFunction bootstrap$()>();
v16 = interfaceinvoke v14.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(v15);
v17 = interfaceinvoke v16.<java.util.stream.IntStream: int sum()>();
if v17 <= 0 goto label11;
v18 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v18.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v19 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label09:
v20 = interfaceinvoke v19.<java.util.Iterator: boolean hasNext()>();
if v20 == 0 goto label12;
v21 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
v22 = interfaceinvoke v21.<java.util.List: java.util.Iterator iterator()>();
label10:
v23 = interfaceinvoke v22.<java.util.Iterator: boolean hasNext()>();
if v23 == 0 goto label09;
interfaceinvoke v22.<java.util.Iterator: java.lang.Object next()>();
v24 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v25 = interfaceinvoke v24.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v26 = staticinvoke <io.vertx.core.impl.CloseFuture$lambda_close_1__1523: io.vertx.core.Handler bootstrap$(io.vertx.core.impl.CloseFuture,java.util.concurrent.atomic.AtomicInteger,int)>(v0, v18, v17);
interfaceinvoke v25.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v26);
goto label10;
label11:
v27 = v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.Promise promise>;
interfaceinvoke v27.<io.vertx.core.Promise: void complete()>();
label12:
v28 = v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.Promise promise>;
v29 = interfaceinvoke v28.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v29;
catch java.lang.Throwable from label01 to label06 with label07;
}
public void close(io.vertx.core.Promise)
{
io.vertx.core.Future v2;
io.vertx.core.Promise v1;
io.vertx.core.impl.CloseFuture v0;
v0 := @this: io.vertx.core.impl.CloseFuture;
v1 := @parameter0: io.vertx.core.Promise;
v2 = virtualinvoke v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.Future close()>();
interfaceinvoke v2.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v1);
return;
}
protected void finalize()
{
io.vertx.core.impl.CloseFuture v0;
v0 := @this: io.vertx.core.impl.CloseFuture;
virtualinvoke v0.<io.vertx.core.impl.CloseFuture: io.vertx.core.Future close()>();
return;
}
}