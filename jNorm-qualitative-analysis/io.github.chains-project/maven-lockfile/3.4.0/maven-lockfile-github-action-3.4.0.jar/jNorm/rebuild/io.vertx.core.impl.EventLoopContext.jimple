public class io.vertx.core.impl.EventLoopContext extends io.vertx.core.impl.ContextBase
{
void <init>(io.vertx.core.impl.VertxInternal, io.netty.channel.EventLoop, io.vertx.core.impl.WorkerPool, io.vertx.core.impl.WorkerPool, io.vertx.core.impl.Deployment, io.vertx.core.impl.CloseFuture, java.lang.ClassLoader)
{
io.vertx.core.impl.VertxInternal v1;
io.vertx.core.impl.WorkerPool v3, v4;
io.netty.channel.EventLoop v2;
io.vertx.core.impl.EventLoopContext v0;
io.vertx.core.impl.Deployment v5;
io.vertx.core.impl.CloseFuture v6;
java.lang.ClassLoader v7;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 := @parameter0: io.vertx.core.impl.VertxInternal;
v2 := @parameter1: io.netty.channel.EventLoop;
v3 := @parameter2: io.vertx.core.impl.WorkerPool;
v4 := @parameter3: io.vertx.core.impl.WorkerPool;
v5 := @parameter4: io.vertx.core.impl.Deployment;
v6 := @parameter5: io.vertx.core.impl.CloseFuture;
v7 := @parameter6: java.lang.ClassLoader;
specialinvoke v0.<io.vertx.core.impl.ContextBase: void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.EventLoop,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.Deployment,io.vertx.core.impl.CloseFuture,java.lang.ClassLoader)>(v1, v2, v3, v4, v5, v6, v7);
return;
}
public java.util.concurrent.Executor executor()
{
io.vertx.core.impl.EventLoopContext v0;
io.netty.channel.EventLoop v1;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 = virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: io.netty.channel.EventLoop nettyEventLoop()>();
return v1;
}
protected void runOnContext(io.vertx.core.impl.ContextInternal, io.vertx.core.Handler)
{
io.vertx.core.impl.EventLoopContext v0;
java.util.concurrent.RejectedExecutionException v5;
io.vertx.core.impl.ContextInternal v1;
io.netty.channel.EventLoop v3;
io.vertx.core.Handler v2;
java.lang.Runnable v4;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: io.vertx.core.Handler;
label1:
v3 = virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: io.netty.channel.EventLoop nettyEventLoop()>();
v4 = staticinvoke <io.vertx.core.impl.EventLoopContext$lambda_runOnContext_0__1526: java.lang.Runnable bootstrap$(io.vertx.core.impl.ContextInternal,io.vertx.core.Handler)>(v1, v2);
interfaceinvoke v3.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v4);
label2:
goto label4;
label3:
v5 := @caughtexception;
label4:
return;
catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
}
protected void emit(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.Handler)
{
java.lang.Throwable v7, v8;
io.vertx.core.impl.ContextInternal v1, v6;
io.netty.channel.EventLoop v4;
java.lang.Runnable v9;
io.vertx.core.impl.EventLoopContext v0;
java.lang.Object v2;
io.vertx.core.Handler v3;
boolean v5;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
v4 = virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: io.netty.channel.EventLoop nettyEventLoop()>();
v5 = interfaceinvoke v4.<io.netty.channel.EventLoop: boolean inEventLoop()>();
if v5 == 0 goto label6;
v6 = interfaceinvoke v1.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.ContextInternal beginDispatch()>();
label1:
interfaceinvoke v3.<io.vertx.core.Handler: void handle(java.lang.Object)>(v2);
label2:
interfaceinvoke v1.<io.vertx.core.impl.ContextInternal: void endDispatch(io.vertx.core.impl.ContextInternal)>(v6);
goto label7;
label3:
v7 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: void reportException(java.lang.Throwable)>(v7);
label4:
interfaceinvoke v1.<io.vertx.core.impl.ContextInternal: void endDispatch(io.vertx.core.impl.ContextInternal)>(v6);
goto label7;
label5:
v8 := @caughtexception;
interfaceinvoke v1.<io.vertx.core.impl.ContextInternal: void endDispatch(io.vertx.core.impl.ContextInternal)>(v6);
throw v8;
label6:
v9 = staticinvoke <io.vertx.core.impl.EventLoopContext$lambda_emit_1__1527: java.lang.Runnable bootstrap$(io.vertx.core.impl.EventLoopContext,io.vertx.core.impl.ContextInternal,java.lang.Object,io.vertx.core.Handler)>(v0, v1, v2, v3);
interfaceinvoke v4.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v9);
label7:
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch java.lang.Throwable from label3 to label4 with label5;
}
protected void execute(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.Handler)
{
io.vertx.core.impl.EventLoopContext v0;
io.vertx.core.impl.ContextInternal v1;
java.lang.Object v2;
io.netty.channel.EventLoop v4;
io.vertx.core.Handler v3;
java.lang.Runnable v6;
boolean v5;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
v4 = virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: io.netty.channel.EventLoop nettyEventLoop()>();
v5 = interfaceinvoke v4.<io.netty.channel.EventLoop: boolean inEventLoop()>();
if v5 == 0 goto label1;
interfaceinvoke v3.<io.vertx.core.Handler: void handle(java.lang.Object)>(v2);
goto label2;
label1:
v6 = staticinvoke <io.vertx.core.impl.EventLoopContext$lambda_execute_2__1528: java.lang.Runnable bootstrap$(io.vertx.core.Handler,java.lang.Object)>(v3, v2);
interfaceinvoke v4.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v6);
label2:
return;
}
protected void execute(io.vertx.core.impl.ContextInternal, java.lang.Runnable)
{
io.vertx.core.impl.EventLoopContext v0;
io.vertx.core.impl.ContextInternal v1;
io.netty.channel.EventLoop v3;
java.lang.Runnable v2;
boolean v4;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Runnable;
v3 = virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: io.netty.channel.EventLoop nettyEventLoop()>();
v4 = interfaceinvoke v3.<io.netty.channel.EventLoop: boolean inEventLoop()>();
if v4 == 0 goto label1;
interfaceinvoke v2.<java.lang.Runnable: void run()>();
goto label2;
label1:
interfaceinvoke v3.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v2);
label2:
return;
}
public boolean isEventLoopContext()
{
io.vertx.core.impl.EventLoopContext v0;
v0 := @this: io.vertx.core.impl.EventLoopContext;
return 1;
}
public boolean isWorkerContext()
{
io.vertx.core.impl.EventLoopContext v0;
v0 := @this: io.vertx.core.impl.EventLoopContext;
return 0;
}
public boolean inThread()
{
io.vertx.core.impl.EventLoopContext v0;
io.netty.channel.EventLoop v1;
boolean v2;
v0 := @this: io.vertx.core.impl.EventLoopContext;
v1 = virtualinvoke v0.<io.vertx.core.impl.EventLoopContext: io.netty.channel.EventLoop nettyEventLoop()>();
v2 = interfaceinvoke v1.<io.netty.channel.EventLoop: boolean inEventLoop()>();
return v2;
}
}