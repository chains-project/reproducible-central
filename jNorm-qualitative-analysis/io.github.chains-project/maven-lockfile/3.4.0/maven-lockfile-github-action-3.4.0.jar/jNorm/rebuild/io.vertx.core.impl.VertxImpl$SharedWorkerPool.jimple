class io.vertx.core.impl.VertxImpl$SharedWorkerPool extends io.vertx.core.impl.WorkerPool
{
private final java.lang.String name;
private int refCount;
final io.vertx.core.impl.VertxImpl this$0;
void <init>(io.vertx.core.impl.VertxImpl, java.lang.String, java.util.concurrent.ExecutorService, io.vertx.core.spi.metrics.PoolMetrics)
{
io.vertx.core.impl.VertxImpl v1;
io.vertx.core.spi.metrics.PoolMetrics v4;
io.vertx.core.impl.VertxImpl$SharedWorkerPool v0;
java.lang.String v2;
java.util.concurrent.ExecutorService v3;
v0 := @this: io.vertx.core.impl.VertxImpl$SharedWorkerPool;
v1 := @parameter0: io.vertx.core.impl.VertxImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.concurrent.ExecutorService;
v4 := @parameter3: io.vertx.core.spi.metrics.PoolMetrics;
v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: io.vertx.core.impl.VertxImpl this$0> = v1;
specialinvoke v0.<io.vertx.core.impl.WorkerPool: void <init>(java.util.concurrent.ExecutorService,io.vertx.core.spi.metrics.PoolMetrics)>(v3, v4);
v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: int refCount> = 1;
v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: java.lang.String name> = v2;
return;
}
void close()
{
java.lang.Throwable v7;
io.vertx.core.impl.VertxImpl v1, v4;
java.util.Map v5;
int v2, v3;
io.vertx.core.impl.VertxImpl$SharedWorkerPool v0;
java.lang.String v6;
v0 := @this: io.vertx.core.impl.VertxImpl$SharedWorkerPool;
v1 = v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: io.vertx.core.impl.VertxImpl this$0>;
entermonitor v1;
label1:
v2 = v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: int refCount>;
v3 = v2 - 1;
v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: int refCount> = v3;
if v3 <= 0 goto label3;
exitmonitor v1;
label2:
return;
label3:
v4 = v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: io.vertx.core.impl.VertxImpl this$0>;
v5 = v4.<io.vertx.core.impl.VertxImpl: java.util.Map namedWorkerPools>;
v6 = v0.<io.vertx.core.impl.VertxImpl$SharedWorkerPool: java.lang.String name>;
interfaceinvoke v5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v6);
exitmonitor v1;
label4:
goto label6;
label5:
v7 := @caughtexception;
exitmonitor v1;
throw v7;
label6:
specialinvoke v0.<io.vertx.core.impl.WorkerPool: void close()>();
return;
catch java.lang.Throwable from label1 to label2 with label5;
catch java.lang.Throwable from label3 to label4 with label5;
}
}