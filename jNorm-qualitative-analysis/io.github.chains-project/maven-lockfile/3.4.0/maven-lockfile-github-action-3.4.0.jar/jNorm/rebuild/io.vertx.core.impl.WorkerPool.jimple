public class io.vertx.core.impl.WorkerPool extends java.lang.Object
{
private final java.util.concurrent.ExecutorService pool;
private final io.vertx.core.spi.metrics.PoolMetrics metrics;
public void <init>(java.util.concurrent.ExecutorService, io.vertx.core.spi.metrics.PoolMetrics)
{
io.vertx.core.spi.metrics.PoolMetrics v2;
io.vertx.core.impl.WorkerPool v0;
java.util.concurrent.ExecutorService v1;
v0 := @this: io.vertx.core.impl.WorkerPool;
v1 := @parameter0: java.util.concurrent.ExecutorService;
v2 := @parameter1: io.vertx.core.spi.metrics.PoolMetrics;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.impl.WorkerPool: java.util.concurrent.ExecutorService pool> = v1;
v0.<io.vertx.core.impl.WorkerPool: io.vertx.core.spi.metrics.PoolMetrics metrics> = v2;
return;
}
public java.util.concurrent.ExecutorService executor()
{
io.vertx.core.impl.WorkerPool v0;
java.util.concurrent.ExecutorService v1;
v0 := @this: io.vertx.core.impl.WorkerPool;
v1 = v0.<io.vertx.core.impl.WorkerPool: java.util.concurrent.ExecutorService pool>;
return v1;
}
public io.vertx.core.spi.metrics.PoolMetrics metrics()
{
io.vertx.core.spi.metrics.PoolMetrics v1;
io.vertx.core.impl.WorkerPool v0;
v0 := @this: io.vertx.core.impl.WorkerPool;
v1 = v0.<io.vertx.core.impl.WorkerPool: io.vertx.core.spi.metrics.PoolMetrics metrics>;
return v1;
}
void close()
{
io.vertx.core.spi.metrics.PoolMetrics v1, v2;
io.vertx.core.impl.WorkerPool v0;
java.util.concurrent.ExecutorService v3;
v0 := @this: io.vertx.core.impl.WorkerPool;
v1 = v0.<io.vertx.core.impl.WorkerPool: io.vertx.core.spi.metrics.PoolMetrics metrics>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.impl.WorkerPool: io.vertx.core.spi.metrics.PoolMetrics metrics>;
interfaceinvoke v2.<io.vertx.core.spi.metrics.PoolMetrics: void close()>();
label1:
v3 = v0.<io.vertx.core.impl.WorkerPool: java.util.concurrent.ExecutorService pool>;
interfaceinvoke v3.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();
return;
}
}