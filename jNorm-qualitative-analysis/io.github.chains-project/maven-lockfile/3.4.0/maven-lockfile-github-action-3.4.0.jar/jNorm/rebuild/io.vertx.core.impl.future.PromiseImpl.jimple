public final class io.vertx.core.impl.future.PromiseImpl extends io.vertx.core.impl.future.FutureImpl implements io.vertx.core.impl.future.PromiseInternal, io.vertx.core.impl.future.Listener
{
public void <init>()
{
io.vertx.core.impl.future.PromiseImpl v0;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
specialinvoke v0.<io.vertx.core.impl.future.FutureImpl: void <init>()>();
return;
}
public void <init>(io.vertx.core.impl.ContextInternal)
{
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.impl.future.PromiseImpl v0;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
specialinvoke v0.<io.vertx.core.impl.future.FutureImpl: void <init>(io.vertx.core.impl.ContextInternal)>(v1);
return;
}
public void handle(io.vertx.core.AsyncResult)
{
java.lang.Throwable v4;
java.lang.Object v3;
io.vertx.core.AsyncResult v1;
io.vertx.core.impl.future.PromiseImpl v0;
boolean v2;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
v1 := @parameter0: io.vertx.core.AsyncResult;
v2 = interfaceinvoke v1.<io.vertx.core.AsyncResult: boolean succeeded()>();
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<io.vertx.core.AsyncResult: java.lang.Object result()>();
virtualinvoke v0.<io.vertx.core.impl.future.PromiseImpl: void onSuccess(java.lang.Object)>(v3);
goto label2;
label1:
v4 = interfaceinvoke v1.<io.vertx.core.AsyncResult: java.lang.Throwable cause()>();
virtualinvoke v0.<io.vertx.core.impl.future.PromiseImpl: void onFailure(java.lang.Throwable)>(v4);
label2:
return;
}
public void onSuccess(java.lang.Object)
{
java.lang.Object v1;
io.vertx.core.impl.future.PromiseImpl v0;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<io.vertx.core.impl.future.PromiseImpl: boolean tryComplete(java.lang.Object)>(v1);
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.vertx.core.impl.future.PromiseImpl v0;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
v1 := @parameter0: java.lang.Throwable;
virtualinvoke v0.<io.vertx.core.impl.future.PromiseImpl: boolean tryFail(java.lang.Throwable)>(v1);
return;
}
public io.vertx.core.Future future()
{
io.vertx.core.impl.future.PromiseImpl v0;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
return v0;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
java.lang.Throwable v4;
java.lang.Object v3;
io.netty.util.concurrent.Future v1;
io.vertx.core.impl.future.PromiseImpl v0;
boolean v2;
v0 := @this: io.vertx.core.impl.future.PromiseImpl;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
virtualinvoke v0.<io.vertx.core.impl.future.PromiseImpl: void complete(java.lang.Object)>(v3);
goto label2;
label1:
v4 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
virtualinvoke v0.<io.vertx.core.impl.future.PromiseImpl: void fail(java.lang.Throwable)>(v4);
label2:
return;
}
}