public final class io.vertx.core.impl.future.SucceededFuture extends io.vertx.core.impl.future.FutureBase
{
public static final io.vertx.core.impl.future.SucceededFuture EMPTY;
private final java.lang.Object result;
public void <init>(java.lang.Object)
{
java.lang.Object v1;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<io.vertx.core.impl.future.SucceededFuture: void <init>(io.vertx.core.impl.ContextInternal,java.lang.Object)>(null, v1);
return;
}
public void <init>(io.vertx.core.impl.ContextInternal, java.lang.Object)
{
io.vertx.core.impl.ContextInternal v1;
java.lang.Object v2;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<io.vertx.core.impl.future.FutureBase: void <init>(io.vertx.core.impl.ContextInternal)>(v1);
v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result> = v2;
return;
}
public boolean isComplete()
{
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
return 1;
}
public io.vertx.core.Future onSuccess(io.vertx.core.Handler)
{
io.vertx.core.impl.ContextInternal v2, v3;
java.lang.Object v4, v5;
io.vertx.core.Handler v1;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.impl.future.SucceededFuture: io.vertx.core.impl.ContextInternal context>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.impl.future.SucceededFuture: io.vertx.core.impl.ContextInternal context>;
v4 = v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result>;
interfaceinvoke v3.<io.vertx.core.impl.ContextInternal: void emit(java.lang.Object,io.vertx.core.Handler)>(v4, v1);
goto label2;
label1:
v5 = v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result>;
interfaceinvoke v1.<io.vertx.core.Handler: void handle(java.lang.Object)>(v5);
label2:
return v0;
}
public io.vertx.core.Future onFailure(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: io.vertx.core.Handler;
return v0;
}
public io.vertx.core.Future onComplete(io.vertx.core.Handler)
{
io.vertx.core.impl.ContextInternal v4, v5;
java.lang.Object v3;
io.vertx.core.Handler v1;
io.vertx.core.impl.future.SucceededFuture v0;
boolean v2;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v1 instanceof io.vertx.core.impl.future.Listener;
if v2 == 0 goto label1;
v3 = v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result>;
virtualinvoke v0.<io.vertx.core.impl.future.SucceededFuture: void emitSuccess(java.lang.Object,io.vertx.core.impl.future.Listener)>(v3, v1);
goto label3;
label1:
v4 = v0.<io.vertx.core.impl.future.SucceededFuture: io.vertx.core.impl.ContextInternal context>;
if v4 == null goto label2;
v5 = v0.<io.vertx.core.impl.future.SucceededFuture: io.vertx.core.impl.ContextInternal context>;
interfaceinvoke v5.<io.vertx.core.impl.ContextInternal: void emit(java.lang.Object,io.vertx.core.Handler)>(v0, v1);
goto label3;
label2:
interfaceinvoke v1.<io.vertx.core.Handler: void handle(java.lang.Object)>(v0);
label3:
return v0;
}
public void addListener(io.vertx.core.impl.future.Listener)
{
java.lang.Object v2;
io.vertx.core.impl.future.Listener v1;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: io.vertx.core.impl.future.Listener;
v2 = v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result>;
virtualinvoke v0.<io.vertx.core.impl.future.SucceededFuture: void emitSuccess(java.lang.Object,io.vertx.core.impl.future.Listener)>(v2, v1);
return;
}
public java.lang.Object result()
{
java.lang.Object v1;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 = v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result>;
return v1;
}
public java.lang.Throwable cause()
{
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
return null;
}
public boolean succeeded()
{
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
return 1;
}
public boolean failed()
{
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
return 0;
}
public io.vertx.core.Future map(java.lang.Object)
{
io.vertx.core.impl.ContextInternal v3;
java.lang.Object v1;
io.vertx.core.impl.future.SucceededFuture v0, v2;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: java.lang.Object;
v2 = new io.vertx.core.impl.future.SucceededFuture;
v3 = v0.<io.vertx.core.impl.future.SucceededFuture: io.vertx.core.impl.ContextInternal context>;
specialinvoke v2.<io.vertx.core.impl.future.SucceededFuture: void <init>(io.vertx.core.impl.ContextInternal,java.lang.Object)>(v3, v1);
return v2;
}
public io.vertx.core.Future otherwise(java.util.function.Function)
{
io.vertx.core.impl.future.SucceededFuture v0;
java.util.function.Function v1;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: java.util.function.Function;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "No null mapper accepted");
return v0;
}
public io.vertx.core.Future otherwise(java.lang.Object)
{
java.lang.Object v1;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 := @parameter0: java.lang.Object;
return v0;
}
public java.lang.String toString()
{
java.lang.Object v1;
java.lang.String v2;
io.vertx.core.impl.future.SucceededFuture v0;
v0 := @this: io.vertx.core.impl.future.SucceededFuture;
v1 = v0.<io.vertx.core.impl.future.SucceededFuture: java.lang.Object result>;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Future{result=\u0001}");
return v2;
}
static void <clinit>()
{
io.vertx.core.impl.future.SucceededFuture v0;
v0 = new io.vertx.core.impl.future.SucceededFuture;
specialinvoke v0.<io.vertx.core.impl.future.SucceededFuture: void <init>(io.vertx.core.impl.ContextInternal,java.lang.Object)>(null, null);
<io.vertx.core.impl.future.SucceededFuture: io.vertx.core.impl.future.SucceededFuture EMPTY> = v0;
return;
}
}