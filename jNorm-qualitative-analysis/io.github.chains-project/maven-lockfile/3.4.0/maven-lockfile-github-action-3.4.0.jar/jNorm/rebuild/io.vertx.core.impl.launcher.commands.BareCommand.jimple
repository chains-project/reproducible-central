public class io.vertx.core.impl.launcher.commands.BareCommand extends io.vertx.core.impl.launcher.commands.ClasspathHandler
{
public static final java.lang.String VERTX_OPTIONS_PROP_PREFIX;
public static final java.lang.String VERTX_EVENTBUS_PROP_PREFIX;
public static final java.lang.String DEPLOYMENT_OPTIONS_PROP_PREFIX;
public static final java.lang.String METRICS_OPTIONS_PROP_PREFIX;
protected io.vertx.core.Vertx vertx;
protected int clusterPort;
protected java.lang.String clusterHost;
protected int clusterPublicPort;
protected java.lang.String clusterPublicHost;
protected int quorum;
protected java.lang.String haGroup;
protected java.lang.String vertxOptions;
protected io.vertx.core.VertxOptions options;
protected java.lang.Runnable finalAction;
private static final java.lang.ThreadLocal configureFromSystemProperties;
public void <init>()
{
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
specialinvoke v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: void <init>()>();
return;
}
public void setQuorum(int)
{
int v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: int;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: int quorum> = v1;
return;
}
public void setHAGroup(java.lang.String)
{
java.lang.String v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String haGroup> = v1;
return;
}
public void setClusterPort(int)
{
int v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: int;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPort> = v1;
return;
}
public void setClusterHost(java.lang.String)
{
java.lang.String v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String clusterHost> = v1;
return;
}
public void setClusterPublicPort(int)
{
int v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: int;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPublicPort> = v1;
return;
}
public void setClusterPublicHost(java.lang.String)
{
java.lang.String v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String clusterPublicHost> = v1;
return;
}
public void setVertxOptions(java.lang.String)
{
io.vertx.core.impl.launcher.commands.BareCommand v0;
java.lang.String v1, v2, v3, v4;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: java.lang.String;
if v1 == null goto label1;
v2 = virtualinvoke v1.<java.lang.String: java.lang.String trim()>();
v3 = virtualinvoke v2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^\"|\"$", "");
v4 = virtualinvoke v3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^\'|\'$", "");
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String vertxOptions> = v4;
goto label2;
label1:
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String vertxOptions> = null;
label2:
return;
}
public boolean isClustered()
{
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
return 1;
}
public boolean getHA()
{
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
return 1;
}
public void run()
{
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: void run(java.lang.Runnable)>(null);
return;
}
public void run(java.lang.Runnable)
{
io.vertx.core.Vertx v2;
java.lang.Runnable v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: java.lang.Runnable;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.Runnable finalAction> = v1;
v2 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.Vertx startVertx()>();
v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.Vertx vertx> = v2;
return;
}
protected io.vertx.core.Vertx startVertx()
{
java.lang.Thread v63;
io.vertx.core.json.JsonObject v2, v6;
io.vertx.core.impl.logging.Logger v12, v22, v60, v62, v66, v71;
java.util.concurrent.CountDownLatch v55;
java.lang.Throwable v19, v68;
io.vertx.core.eventbus.EventBusOptions v24, v3, v39, v41;
java.lang.String v1, v25, v26, v28, v31, v32, v34, v38, v42, v48, v50;
java.lang.Runnable v72;
boolean v21, v27, v33, v46, v59, v65;
java.lang.ThreadLocal v11, v18, v20;
io.vertx.core.VertxOptions v10, v13, v14, v16, v23, v47, v49, v53, v8, v9;
io.vertx.core.metrics.MetricsOptions v15, v17;
java.util.concurrent.atomic.AtomicReference v56;
io.vertx.core.impl.launcher.commands.BareCommand v0;
int v29, v30, v35, v36, v37, v40, v43, v44, v45, v51, v52, v54;
io.vertx.core.impl.VertxBuilder v4, v5, v7;
java.util.concurrent.TimeUnit v58;
java.lang.InterruptedException v61;
java.lang.Object v64, v67, v69, v70;
io.vertx.core.Handler v57;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String vertxOptions>;
v2 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.json.JsonObject getJsonFromFileOrString(java.lang.String,java.lang.String)>(v1, "options");
if v2 != null goto label01;
v3 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.eventbus.EventBusOptions getEventBusOptions()>();
v4 = new io.vertx.core.impl.VertxBuilder;
specialinvoke v4.<io.vertx.core.impl.VertxBuilder: void <init>()>();
v5 = v4;
goto label02;
label01:
v6 = virtualinvoke v2.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>("eventBusOptions");
v3 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.eventbus.EventBusOptions getEventBusOptions(io.vertx.core.json.JsonObject)>(v6);
v7 = new io.vertx.core.impl.VertxBuilder;
specialinvoke v7.<io.vertx.core.impl.VertxBuilder: void <init>(io.vertx.core.json.JsonObject)>(v2);
v5 = v7;
label02:
v8 = virtualinvoke v5.<io.vertx.core.impl.VertxBuilder: io.vertx.core.VertxOptions options()>();
v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options> = v8;
v9 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
virtualinvoke v9.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setEventBusOptions(io.vertx.core.eventbus.EventBusOptions)>(v3);
v10 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: void beforeStartingVertx(io.vertx.core.VertxOptions)>(v10);
v11 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
v12 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
virtualinvoke v11.<java.lang.ThreadLocal: void set(java.lang.Object)>(v12);
label03:
v13 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: void configureFromSystemProperties(java.lang.Object,java.lang.String)>(v13, "vertx.options.");
v14 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
v15 = virtualinvoke v14.<io.vertx.core.VertxOptions: io.vertx.core.metrics.MetricsOptions getMetricsOptions()>();
if v15 == null goto label04;
v16 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
v17 = virtualinvoke v16.<io.vertx.core.VertxOptions: io.vertx.core.metrics.MetricsOptions getMetricsOptions()>();
staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: void configureFromSystemProperties(java.lang.Object,java.lang.String)>(v17, "vertx.metrics.options.");
label04:
virtualinvoke v5.<io.vertx.core.impl.VertxBuilder: io.vertx.core.impl.VertxBuilder init()>();
label05:
v18 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
virtualinvoke v18.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);
goto label07;
label06:
v19 := @caughtexception;
v20 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
virtualinvoke v20.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);
throw v19;
label07:
v21 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: boolean isClustered()>();
if v21 == 0 goto label20;
v22 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
interfaceinvoke v22.<io.vertx.core.impl.logging.Logger: void info(java.lang.Object)>("Starting clustering...");
v23 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
v24 = virtualinvoke v23.<io.vertx.core.VertxOptions: io.vertx.core.eventbus.EventBusOptions getEventBusOptions()>();
v25 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: java.lang.String getHost()>();
v26 = <io.vertx.core.eventbus.EventBusOptions: java.lang.String DEFAULT_CLUSTER_HOST>;
v27 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v25, v26);
if v27 != 0 goto label08;
v28 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: java.lang.String getHost()>();
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String clusterHost> = v28;
label08:
v29 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: int getPort()>();
if v29 == 0 goto label09;
v30 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: int getPort()>();
v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPort> = v30;
label09:
v31 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: java.lang.String getClusterPublicHost()>();
v32 = <io.vertx.core.eventbus.EventBusOptions: java.lang.String DEFAULT_CLUSTER_PUBLIC_HOST>;
v33 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v31, v32);
if v33 != 0 goto label10;
v34 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: java.lang.String getClusterPublicHost()>();
v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String clusterPublicHost> = v34;
label10:
v35 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: int getClusterPublicPort()>();
v36 = (int) -1;
if v35 == v36 goto label11;
v37 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: int getClusterPublicPort()>();
v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPublicPort> = v37;
label11:
v38 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String clusterHost>;
v39 = virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: io.vertx.core.eventbus.EventBusOptions setHost(java.lang.String)>(v38);
v40 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPort>;
v41 = virtualinvoke v39.<io.vertx.core.eventbus.EventBusOptions: io.vertx.core.eventbus.EventBusOptions setPort(int)>(v40);
v42 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String clusterPublicHost>;
virtualinvoke v41.<io.vertx.core.eventbus.EventBusOptions: io.vertx.core.eventbus.EventBusOptions setClusterPublicHost(java.lang.String)>(v42);
v43 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPublicPort>;
v44 = (int) -1;
if v43 == v44 goto label12;
v45 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: int clusterPublicPort>;
virtualinvoke v24.<io.vertx.core.eventbus.EventBusOptions: io.vertx.core.eventbus.EventBusOptions setClusterPublicPort(int)>(v45);
label12:
v46 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: boolean getHA()>();
if v46 == 0 goto label14;
v47 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
virtualinvoke v47.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setHAEnabled(boolean)>(1);
v48 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String haGroup>;
if v48 == null goto label13;
v49 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
v50 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.String haGroup>;
virtualinvoke v49.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setHAGroup(java.lang.String)>(v50);
label13:
v51 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: int quorum>;
v52 = (int) -1;
if v51 == v52 goto label14;
v53 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.VertxOptions options>;
v54 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: int quorum>;
virtualinvoke v53.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setQuorumSize(int)>(v54);
label14:
v55 = new java.util.concurrent.CountDownLatch;
specialinvoke v55.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v56 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v56.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v57 = staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand$lambda_startVertx_0__1570: io.vertx.core.Handler bootstrap$(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>(v56, v55);
virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: void create(io.vertx.core.impl.VertxBuilder,io.vertx.core.Handler)>(v5, v57);
label15:
v58 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
v59 = virtualinvoke v55.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(2L, v58);
if v59 != 0 goto label18;
v60 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
interfaceinvoke v60.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object)>("Timed out in starting clustered Vert.x");
label16:
return null;
label17:
v61 := @caughtexception;
v62 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
interfaceinvoke v62.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object)>("Thread interrupted in startup");
v63 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v63.<java.lang.Thread: void interrupt()>();
return null;
label18:
v64 = virtualinvoke v56.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v65 = interfaceinvoke v64.<io.vertx.core.AsyncResult: boolean failed()>();
if v65 == 0 goto label19;
v66 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
v67 = virtualinvoke v56.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v68 = interfaceinvoke v67.<io.vertx.core.AsyncResult: java.lang.Throwable cause()>();
interfaceinvoke v66.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Failed to form cluster", v68);
return null;
label19:
v69 = virtualinvoke v56.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v70 = interfaceinvoke v69.<io.vertx.core.AsyncResult: java.lang.Object result()>();
goto label21;
label20:
v70 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.Vertx create(io.vertx.core.impl.VertxBuilder)>(v5);
label21:
v71 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
v72 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.Runnable finalAction>;
staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: void addShutdownHook(io.vertx.core.Vertx,io.vertx.core.impl.logging.Logger,java.lang.Runnable)>(v70, v71, v72);
virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: void afterStartingVertx(io.vertx.core.Vertx)>(v70);
return v70;
catch java.lang.Throwable from label03 to label05 with label06;
catch java.lang.InterruptedException from label15 to label16 with label17;
}
protected io.vertx.core.json.JsonObject getJsonFromFileOrString(java.lang.String, java.lang.String)
{
java.lang.Throwable v12;
io.vertx.core.json.DecodeException v15, v9;
java.util.Scanner v3, v5;
io.vertx.core.impl.launcher.commands.BareCommand v0;
io.vertx.core.json.JsonObject v14, v7, v8;
java.lang.String v1, v11, v17, v2, v6;
io.vertx.core.impl.logging.Logger v10, v16;
java.io.File v4;
java.io.FileNotFoundException v13;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v1 == null goto label14;
label01:
v3 = new java.util.Scanner;
v4 = new java.io.File;
specialinvoke v4.<java.io.File: void <init>(java.lang.String)>(v1);
specialinvoke v3.<java.util.Scanner: void <init>(java.io.File,java.lang.String)>(v4, "UTF-8");
v5 = virtualinvoke v3.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\A");
label02:
v6 = virtualinvoke v5.<java.util.Scanner: java.lang.String next()>();
label03:
v7 = new io.vertx.core.json.JsonObject;
specialinvoke v7.<io.vertx.core.json.JsonObject: void <init>(java.lang.String)>(v6);
v8 = v7;
label04:
goto label08;
label05:
v9 := @caughtexception;
v10 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Configuration file \u0001 does not contain a valid JSON object");
interfaceinvoke v10.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object)>(v11);
label06:
if v5 == null goto label07;
virtualinvoke v5.<java.util.Scanner: void close()>();
label07:
return null;
label08:
virtualinvoke v5.<java.util.Scanner: void close()>();
goto label15;
label09:
v12 := @caughtexception;
throw v12;
label10:
v13 := @caughtexception;
label11:
v14 = new io.vertx.core.json.JsonObject;
specialinvoke v14.<io.vertx.core.json.JsonObject: void <init>(java.lang.String)>(v1);
v8 = v14;
label12:
goto label15;
label13:
v15 := @caughtexception;
v16 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The -\u0001 argument does not point to an existing file or is not a valid JSON object");
interfaceinvoke v16.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>(v17, v15);
return null;
label14:
v8 = null;
label15:
return v8;
catch io.vertx.core.json.DecodeException from label03 to label04 with label05;
catch java.lang.Throwable from label02 to label06 with label09;
catch java.io.FileNotFoundException from label01 to label07 with label10;
catch java.io.FileNotFoundException from label08 to label10 with label10;
catch io.vertx.core.json.DecodeException from label11 to label12 with label13;
}
protected void afterStartingVertx(io.vertx.core.Vertx)
{
io.vertx.core.spi.launcher.ExecutionContext v2;
io.vertx.core.impl.launcher.commands.BareCommand v0;
io.vertx.core.Vertx v1;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.spi.launcher.ExecutionContext executionContext>;
v3 = virtualinvoke v2.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object main()>();
v4 = v3 instanceof io.vertx.core.impl.launcher.VertxLifecycleHooks;
if v4 == 0 goto label1;
interfaceinvoke v3.<io.vertx.core.impl.launcher.VertxLifecycleHooks: void afterStartingVertx(io.vertx.core.Vertx)>(v1);
label1:
return;
}
protected void beforeStartingVertx(io.vertx.core.VertxOptions)
{
io.vertx.core.spi.launcher.ExecutionContext v2;
io.vertx.core.impl.launcher.commands.BareCommand v0;
io.vertx.core.VertxOptions v1;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: io.vertx.core.VertxOptions;
v2 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.spi.launcher.ExecutionContext executionContext>;
v3 = virtualinvoke v2.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object main()>();
v4 = v3 instanceof io.vertx.core.impl.launcher.VertxLifecycleHooks;
if v4 == 0 goto label1;
interfaceinvoke v3.<io.vertx.core.impl.launcher.VertxLifecycleHooks: void beforeStartingVertx(io.vertx.core.VertxOptions)>(v1);
label1:
return;
}
protected io.vertx.core.eventbus.EventBusOptions getEventBusOptions()
{
io.vertx.core.eventbus.EventBusOptions v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.eventbus.EventBusOptions getEventBusOptions(io.vertx.core.json.JsonObject)>(null);
return v1;
}
protected io.vertx.core.eventbus.EventBusOptions getEventBusOptions(io.vertx.core.json.JsonObject)
{
io.vertx.core.impl.logging.Logger v4;
java.lang.Throwable v6;
java.lang.ThreadLocal v3, v5, v7;
io.vertx.core.impl.launcher.commands.BareCommand v0;
io.vertx.core.json.JsonObject v1;
io.vertx.core.eventbus.EventBusOptions v2;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: io.vertx.core.json.JsonObject;
if v1 != null goto label1;
v2 = new io.vertx.core.eventbus.EventBusOptions;
specialinvoke v2.<io.vertx.core.eventbus.EventBusOptions: void <init>()>();
goto label2;
label1:
v2 = new io.vertx.core.eventbus.EventBusOptions;
specialinvoke v2.<io.vertx.core.eventbus.EventBusOptions: void <init>(io.vertx.core.json.JsonObject)>(v1);
label2:
v3 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
v4 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.impl.logging.Logger log>;
virtualinvoke v3.<java.lang.ThreadLocal: void set(java.lang.Object)>(v4);
label3:
staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: void configureFromSystemProperties(java.lang.Object,java.lang.String)>(v2, "vertx.eventBus.options.");
label4:
v5 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
virtualinvoke v5.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);
goto label6;
label5:
v6 := @caughtexception;
v7 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
virtualinvoke v7.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);
throw v6;
label6:
return v2;
catch java.lang.Throwable from label3 to label4 with label5;
}
public static void configureFromSystemProperties(java.lang.Object, java.lang.String)
{
io.vertx.core.VertxException v35;
java.util.Enumeration v5;
java.lang.reflect.Method v13;
boolean v19, v22, v24, v26, v27, v6, v9;
java.lang.ThreadLocal v2;
java.lang.Exception v34;
java.io.Serializable v20;
java.lang.Object[] v33;
int v10;
java.lang.String v1, v11, v15, v16, v28, v31, v32, v36, v8;
java.util.Properties v4;
java.lang.Class[] v17;
java.lang.IllegalArgumentException v29;
java.lang.Class v12, v14, v18, v21, v23, v25, v30;
java.lang.Object v0, v3, v7;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String;
v2 = <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
if v3 != null goto label01;
return;
label01:
v4 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();
v5 = virtualinvoke v4.<java.util.Properties: java.util.Enumeration propertyNames()>();
label02:
v6 = interfaceinvoke v5.<java.util.Enumeration: boolean hasMoreElements()>();
if v6 == 0 goto label15;
v7 = interfaceinvoke v5.<java.util.Enumeration: java.lang.Object nextElement()>();
v8 = virtualinvoke v4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(v7);
v9 = virtualinvoke v7.<java.lang.String: boolean startsWith(java.lang.String)>(v1);
if v9 == 0 goto label02;
v10 = virtualinvoke v1.<java.lang.String: int length()>();
v11 = virtualinvoke v7.<java.lang.String: java.lang.String substring(int)>(v10);
v12 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v13 = staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.reflect.Method getSetter(java.lang.String,java.lang.Class)>(v11, v12);
if v13 != null goto label03;
v14 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v15 = virtualinvoke v14.<java.lang.Class: java.lang.String getName()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v15, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No such property to configure on options: \u0001.\u0001");
interfaceinvoke v3.<io.vertx.core.impl.logging.Logger: void warn(java.lang.Object)>(v16);
goto label02;
label03:
v17 = virtualinvoke v13.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
v18 = v17[0];
label04:
v19 = virtualinvoke v18.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/String;");
if v19 == 0 goto label05;
v20 = v8;
goto label12;
label05:
v21 = <java.lang.Integer: java.lang.Class TYPE>;
v22 = virtualinvoke v18.<java.lang.Object: boolean equals(java.lang.Object)>(v21);
if v22 == 0 goto label06;
v20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(v8);
goto label12;
label06:
v23 = <java.lang.Long: java.lang.Class TYPE>;
v24 = virtualinvoke v18.<java.lang.Object: boolean equals(java.lang.Object)>(v23);
if v24 == 0 goto label07;
v20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(v8);
goto label12;
label07:
v25 = <java.lang.Boolean: java.lang.Class TYPE>;
v26 = virtualinvoke v18.<java.lang.Object: boolean equals(java.lang.Object)>(v25);
if v26 == 0 goto label08;
v20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(v8);
goto label12;
label08:
v27 = virtualinvoke v18.<java.lang.Class: boolean isEnum()>();
if v27 == 0 goto label09;
v20 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v18, v8);
goto label12;
label09:
v28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid type for setter: \u0001");
interfaceinvoke v3.<io.vertx.core.impl.logging.Logger: void warn(java.lang.Object)>(v28);
label10:
goto label02;
label11:
v29 := @caughtexception;
v30 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v31 = virtualinvoke v30.<java.lang.Class: java.lang.String getName()>();
v32 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class,java.lang.String,java.lang.String)>(v18, v31, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid argtype:\u0001 on options: \u0001.\u0001");
interfaceinvoke v3.<io.vertx.core.impl.logging.Logger: void warn(java.lang.Object)>(v32);
goto label02;
label12:
v33 = newarray (java.lang.Object)[1];
v33[0] = v20;
virtualinvoke v13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v0, v33);
label13:
goto label02;
label14:
v34 := @caughtexception;
v35 = new io.vertx.core.VertxException;
v36 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Method)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to invoke setter: \u0001");
specialinvoke v35.<io.vertx.core.VertxException: void <init>(java.lang.String,java.lang.Throwable)>(v36, v34);
throw v35;
label15:
return;
catch java.lang.IllegalArgumentException from label04 to label10 with label11;
catch java.lang.Exception from label12 to label13 with label14;
}
private static java.lang.reflect.Method getSetter(java.lang.String, java.lang.Class)
{
java.lang.reflect.Method[] v2, v9;
int v10, v11, v3, v4;
java.lang.String v0, v13, v14, v6, v7;
java.lang.reflect.Method v12, v5;
boolean v15, v8;
java.lang.Class v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("set\u0001");
v7 = virtualinvoke v5.<java.lang.reflect.Method: java.lang.String getName()>();
v8 = virtualinvoke v6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v7);
if v8 == 0 goto label2;
return v5;
label2:
v4 = v4 + 1;
goto label1;
label3:
v9 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
v10 = lengthof v9;
v11 = 0;
label4:
if v11 >= v10 goto label6;
v12 = v9[v11];
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("set\u0001");
v14 = virtualinvoke v12.<java.lang.reflect.Method: java.lang.String getName()>();
v15 = virtualinvoke v13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v14);
if v15 == 0 goto label5;
return v12;
label5:
v11 = v11 + 1;
goto label4;
label6:
return null;
}
protected static void addShutdownHook(io.vertx.core.Vertx, io.vertx.core.impl.logging.Logger, java.lang.Runnable)
{
io.vertx.core.impl.logging.Logger v1;
java.lang.Runtime v3;
java.lang.Thread v4;
io.vertx.core.Vertx v0;
java.lang.Runnable v2, v5;
v0 := @parameter0: io.vertx.core.Vertx;
v1 := @parameter1: io.vertx.core.impl.logging.Logger;
v2 := @parameter2: java.lang.Runnable;
v3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
v4 = new java.lang.Thread;
v5 = staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: java.lang.Runnable getTerminationRunnable(io.vertx.core.Vertx,io.vertx.core.impl.logging.Logger,java.lang.Runnable)>(v0, v1, v2);
specialinvoke v4.<java.lang.Thread: void <init>(java.lang.Runnable)>(v5);
virtualinvoke v3.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>(v4);
return;
}
public static java.lang.Runnable getTerminationRunnable(io.vertx.core.Vertx, io.vertx.core.impl.logging.Logger, java.lang.Runnable)
{
io.vertx.core.impl.logging.Logger v1;
io.vertx.core.Vertx v0;
java.lang.Runnable v2, v3;
v0 := @parameter0: io.vertx.core.Vertx;
v1 := @parameter1: io.vertx.core.impl.logging.Logger;
v2 := @parameter2: java.lang.Runnable;
v3 = staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand$lambda_getTerminationRunnable_2__1571: java.lang.Runnable bootstrap$(io.vertx.core.Vertx,io.vertx.core.impl.logging.Logger,java.lang.Runnable)>(v0, v1, v2);
return v3;
}
protected java.lang.String getDefaultAddress()
{
java.lang.String v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 = staticinvoke <io.vertx.core.eventbus.AddressHelper: java.lang.String defaultAddress()>();
return v1;
}
public void setExecutionContext(io.vertx.core.spi.launcher.ExecutionContext)
{
io.vertx.core.spi.launcher.ExecutionContext v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 := @parameter0: io.vertx.core.spi.launcher.ExecutionContext;
v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.spi.launcher.ExecutionContext executionContext> = v1;
return;
}
public synchronized io.vertx.core.Vertx vertx()
{
io.vertx.core.Vertx v1;
io.vertx.core.impl.launcher.commands.BareCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.BareCommand;
v1 = v0.<io.vertx.core.impl.launcher.commands.BareCommand: io.vertx.core.Vertx vertx>;
return v1;
}
static void <clinit>()
{
java.lang.ThreadLocal v0;
v0 = new java.lang.ThreadLocal;
specialinvoke v0.<java.lang.ThreadLocal: void <init>()>();
<io.vertx.core.impl.launcher.commands.BareCommand: java.lang.ThreadLocal configureFromSystemProperties> = v0;
return;
}
}