public abstract class io.vertx.core.impl.launcher.commands.ClasspathHandler extends io.vertx.core.spi.launcher.DefaultCommand
{
protected static final java.lang.String PATH_SEP;
protected final io.vertx.core.impl.logging.Logger log;
protected java.util.List classpath;
protected java.lang.Object manager;
private java.lang.ClassLoader classloader;
public void <init>()
{
io.vertx.core.impl.logging.Logger v2;
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
java.lang.Class v1;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
specialinvoke v0.<io.vertx.core.spi.launcher.DefaultCommand: void <init>()>();
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <io.vertx.core.impl.logging.LoggerFactory: io.vertx.core.impl.logging.Logger getLogger(java.lang.Class)>(v1);
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.impl.logging.Logger log> = v2;
return;
}
public void setClasspath(java.lang.String)
{
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
java.lang.String[] v7;
java.util.List v5, v8;
java.lang.Class v3;
java.lang.ClassLoader v4, v9;
java.lang.String v1, v6;
boolean v2;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
v1 := @parameter0: java.lang.String;
if v1 == null goto label1;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label2;
label1:
v3 = class "Lio/vertx/core/impl/launcher/commands/ClasspathHandler;";
v4 = virtualinvoke v3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader> = v4;
v5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.util.List classpath> = v5;
goto label3;
label2:
v6 = <io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.String PATH_SEP>;
v7 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>(v6);
v8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v7);
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.util.List classpath> = v8;
v9 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader createClassloader()>();
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader> = v9;
label3:
return;
}
protected synchronized java.lang.ClassLoader createClassloader()
{
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
java.lang.Object[] v6;
java.util.function.Function v3;
java.net.URLClassLoader v7;
java.util.List v1;
java.util.stream.Stream v2, v4;
java.lang.Class v8;
java.lang.ClassLoader v9;
java.util.function.IntFunction v5;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
v1 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.util.List classpath>;
v2 = interfaceinvoke v1.<java.util.List: java.util.stream.Stream stream()>();
v3 = staticinvoke <io.vertx.core.impl.launcher.commands.ClasspathHandler$lambda_createClassloader_0__1580: java.util.function.Function bootstrap$()>();
v4 = interfaceinvoke v2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v3);
v5 = staticinvoke <io.vertx.core.impl.launcher.commands.ClasspathHandler$lambda_createClassloader_1__1581: java.util.function.IntFunction bootstrap$()>();
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(v5);
v7 = new java.net.URLClassLoader;
v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
specialinvoke v7.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>(v6, v9);
return v7;
}
protected synchronized java.lang.Object newInstance()
{
io.vertx.core.impl.logging.Logger v13;
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
java.lang.IllegalStateException v14;
java.lang.Object[] v10;
java.lang.Class[] v8;
java.lang.reflect.Constructor v9;
java.lang.Exception v12;
java.util.List v1, v2;
java.lang.Class v4, v7;
java.lang.Object v11;
java.lang.ClassLoader v5, v6;
boolean v3;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
label1:
v1 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.util.List classpath>;
if v1 == null goto label2;
v2 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.util.List classpath>;
v3 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v3 == 0 goto label3;
label2:
v4 = class "Lio/vertx/core/impl/launcher/commands/ClasspathHandler;";
v5 = virtualinvoke v4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
goto label4;
label3:
v5 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader createClassloader()>();
label4:
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader> = v5;
v6 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader>;
v7 = virtualinvoke v6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer");
v8 = newarray (java.lang.Class)[0];
v9 = virtualinvoke v7.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v8);
v10 = newarray (java.lang.Object)[0];
v11 = virtualinvoke v9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v10);
label5:
return v11;
label6:
v12 := @caughtexception;
v13 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.impl.logging.Logger log>;
interfaceinvoke v13.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Failed to load or instantiate the isolated deployer", v12);
v14 = new java.lang.IllegalStateException;
specialinvoke v14.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v12);
throw v14;
catch java.lang.Exception from label1 to label5 with label6;
}
protected synchronized io.vertx.core.Vertx create(io.vertx.core.impl.VertxBuilder)
{
io.vertx.core.impl.logging.Logger v11;
java.lang.Throwable v13;
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
io.vertx.core.Vertx v8;
io.vertx.core.impl.VertxBuilder v1;
java.lang.Exception v10;
java.lang.Thread v12, v14, v2, v4, v9;
java.lang.Class v7;
java.lang.ClassLoader v3, v5, v6;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
v1 := @parameter0: io.vertx.core.impl.VertxBuilder;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label1:
v4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v5 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader>;
if v5 == null goto label2;
v6 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader>;
goto label3;
label2:
v7 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
label3:
virtualinvoke v4.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v6);
v8 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.Vertx vertx()>();
label4:
v9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v3);
return v8;
label5:
v10 := @caughtexception;
v11 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.impl.logging.Logger log>;
interfaceinvoke v11.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Failed to create the vert.x instance", v10);
label6:
v12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v12.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v3);
goto label8;
label7:
v13 := @caughtexception;
v14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v14.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v3);
throw v13;
label8:
return null;
catch java.lang.Exception from label1 to label4 with label5;
catch java.lang.Throwable from label1 to label4 with label7;
catch java.lang.Throwable from label5 to label6 with label7;
}
protected synchronized void create(io.vertx.core.impl.VertxBuilder, io.vertx.core.Handler)
{
io.vertx.core.impl.logging.Logger v11;
java.lang.Throwable v13;
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
io.vertx.core.impl.VertxBuilder v1;
java.lang.Exception v10;
java.lang.Thread v12, v14, v3, v5, v9;
java.lang.Class v8;
java.lang.ClassLoader v4, v6, v7;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
v1 := @parameter0: io.vertx.core.impl.VertxBuilder;
v2 := @parameter1: io.vertx.core.Handler;
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v4 = virtualinvoke v3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label1:
v5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v6 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader>;
if v6 == null goto label2;
v7 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader>;
goto label3;
label2:
v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
label3:
virtualinvoke v5.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v7);
virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: void clusteredVertx(io.vertx.core.Handler)>(v2);
label4:
v9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v4);
goto label8;
label5:
v10 := @caughtexception;
v11 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.impl.logging.Logger log>;
interfaceinvoke v11.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Failed to create the vert.x instance", v10);
label6:
v12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v12.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v4);
goto label8;
label7:
v13 := @caughtexception;
v14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v14.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v4);
throw v13;
label8:
return;
catch java.lang.Exception from label1 to label4 with label5;
catch java.lang.Throwable from label1 to label4 with label7;
catch java.lang.Throwable from label5 to label6 with label7;
}
public synchronized void deploy(java.lang.String, io.vertx.core.Vertx, io.vertx.core.DeploymentOptions, io.vertx.core.Handler)
{
java.lang.Thread v23, v28, v32, v34, v7, v9;
java.lang.reflect.Method v14;
io.vertx.core.impl.logging.Logger v25, v30;
java.lang.Exception v29;
java.lang.reflect.InvocationTargetException v24;
java.lang.ClassLoader v10, v8;
io.vertx.core.spi.launcher.ExecutionContext v15, v19;
java.lang.Throwable v27, v33;
java.lang.Object[] v22;
int v17, v18;
java.lang.String v1, v26, v31;
io.vertx.core.impl.launcher.commands.ClasspathHandler v0;
io.vertx.core.Vertx v2;
java.lang.Class[] v13;
io.vertx.core.DeploymentOptions v3;
java.lang.Class v12;
java.lang.Object v11, v16, v20, v21, v5, v6;
io.vertx.core.Handler v4;
v0 := @this: io.vertx.core.impl.launcher.commands.ClasspathHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.Vertx;
v3 := @parameter2: io.vertx.core.DeploymentOptions;
v4 := @parameter3: io.vertx.core.Handler;
v5 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.Object manager>;
if v5 != null goto label01;
v6 = virtualinvoke v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.Object newInstance()>();
v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.Object manager> = v6;
label01:
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v8 = virtualinvoke v7.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label02:
v9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v10 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.ClassLoader classloader>;
virtualinvoke v9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v10);
v11 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.Object manager>;
v12 = virtualinvoke v11.<java.lang.Object: java.lang.Class getClass()>();
v13 = newarray (java.lang.Class)[4];
v13[0] = class "Ljava/lang/String;";
v13[1] = class "Lio/vertx/core/Vertx;";
v13[2] = class "Lio/vertx/core/DeploymentOptions;";
v13[3] = class "Lio/vertx/core/Handler;";
v14 = virtualinvoke v12.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("deploy", v13);
v15 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.spi.launcher.ExecutionContext executionContext>;
v16 = virtualinvoke v15.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object get(java.lang.Object)>("Default-Verticle-Factory");
if v16 == null goto label03;
v17 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(58);
v18 = (int) -1;
if v17 != v18 goto label03;
v19 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.spi.launcher.ExecutionContext executionContext>;
v20 = virtualinvoke v19.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object get(java.lang.Object)>("Default-Verticle-Factory");
v1 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.String)>(v20, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
label03:
v21 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.Object manager>;
v22 = newarray (java.lang.Object)[4];
v22[0] = v1;
v22[1] = v2;
v22[2] = v3;
v22[3] = v4;
virtualinvoke v14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v21, v22);
label04:
v23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v23.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v8);
goto label10;
label05:
v24 := @caughtexception;
v25 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.impl.logging.Logger log>;
v26 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to deploy verticle \u0001");
v27 = virtualinvoke v24.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
interfaceinvoke v25.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>(v26, v27);
label06:
v28 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v28.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v8);
goto label10;
label07:
v29 := @caughtexception;
v30 = v0.<io.vertx.core.impl.launcher.commands.ClasspathHandler: io.vertx.core.impl.logging.Logger log>;
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to deploy verticle \u0001");
interfaceinvoke v30.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>(v31, v29);
label08:
v32 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v32.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v8);
goto label10;
label09:
v33 := @caughtexception;
v34 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v34.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(v8);
throw v33;
label10:
return;
catch java.lang.reflect.InvocationTargetException from label02 to label04 with label05;
catch java.lang.Exception from label02 to label04 with label07;
catch java.lang.Throwable from label02 to label04 with label09;
catch java.lang.Throwable from label05 to label06 with label09;
catch java.lang.Throwable from label07 to label08 with label09;
}
static void <clinit>()
{
java.lang.String v0;
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("path.separator");
<io.vertx.core.impl.launcher.commands.ClasspathHandler: java.lang.String PATH_SEP> = v0;
return;
}
}