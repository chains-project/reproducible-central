public class io.vertx.core.impl.transports.JDKTransport extends java.lang.Object implements io.vertx.core.spi.transport.Transport
{
public static final io.vertx.core.spi.transport.Transport INSTANCE;
public void <init>()
{
io.vertx.core.impl.transports.JDKTransport v0;
v0 := @this: io.vertx.core.impl.transports.JDKTransport;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.netty.channel.EventLoopGroup eventLoopGroup(int, int, java.util.concurrent.ThreadFactory, int)
{
int v1, v2, v4;
io.vertx.core.impl.transports.JDKTransport v0;
java.util.concurrent.ThreadFactory v3;
io.netty.channel.nio.NioEventLoopGroup v5;
v0 := @this: io.vertx.core.impl.transports.JDKTransport;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: java.util.concurrent.ThreadFactory;
v4 := @parameter3: int;
v5 = new io.netty.channel.nio.NioEventLoopGroup;
specialinvoke v5.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.ThreadFactory)>(v2, v3);
virtualinvoke v5.<io.netty.channel.nio.NioEventLoopGroup: void setIoRatio(int)>(v4);
return v5;
}
public io.netty.channel.socket.DatagramChannel datagramChannel()
{
io.vertx.core.impl.transports.JDKTransport v0;
io.netty.channel.socket.nio.NioDatagramChannel v1;
v0 := @this: io.vertx.core.impl.transports.JDKTransport;
v1 = new io.netty.channel.socket.nio.NioDatagramChannel;
specialinvoke v1.<io.netty.channel.socket.nio.NioDatagramChannel: void <init>()>();
return v1;
}
public io.netty.channel.socket.DatagramChannel datagramChannel(io.netty.channel.socket.InternetProtocolFamily)
{
java.lang.UnsupportedOperationException v9;
io.netty.channel.socket.nio.NioDatagramChannel v5, v7;
int[] v2;
int v3, v4;
io.netty.channel.socket.InternetProtocolFamily v1, v6, v8;
io.vertx.core.impl.transports.JDKTransport v0;
v0 := @this: io.vertx.core.impl.transports.JDKTransport;
v1 := @parameter0: io.netty.channel.socket.InternetProtocolFamily;
v2 = <io.vertx.core.impl.transports.JDKTransport$1: int[] $SwitchMap$io$netty$channel$socket$InternetProtocolFamily>;
v3 = virtualinvoke v1.<io.netty.channel.socket.InternetProtocolFamily: int ordinal()>();
v4 = v2[v3];
lookupswitch(v4)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
v5 = new io.netty.channel.socket.nio.NioDatagramChannel;
v6 = <io.netty.channel.socket.InternetProtocolFamily: io.netty.channel.socket.InternetProtocolFamily IPv4>;
specialinvoke v5.<io.netty.channel.socket.nio.NioDatagramChannel: void <init>(io.netty.channel.socket.InternetProtocolFamily)>(v6);
return v5;
label2:
v7 = new io.netty.channel.socket.nio.NioDatagramChannel;
v8 = <io.netty.channel.socket.InternetProtocolFamily: io.netty.channel.socket.InternetProtocolFamily IPv6>;
specialinvoke v7.<io.netty.channel.socket.nio.NioDatagramChannel: void <init>(io.netty.channel.socket.InternetProtocolFamily)>(v8);
return v7;
label3:
v9 = new java.lang.UnsupportedOperationException;
specialinvoke v9.<java.lang.UnsupportedOperationException: void <init>()>();
throw v9;
}
public io.netty.channel.ChannelFactory channelFactory(boolean)
{
io.netty.channel.ChannelFactory v3;
io.vertx.core.impl.transports.JDKTransport v0;
java.lang.IllegalArgumentException v2;
boolean v1;
v0 := @this: io.vertx.core.impl.transports.JDKTransport;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Vertx instance must be created with the preferNativeTransport option set to true to create domain sockets");
throw v2;
label1:
v3 = staticinvoke <io.vertx.core.impl.transports.JDKTransport$init__1555: io.netty.channel.ChannelFactory bootstrap$()>();
return v3;
}
public io.netty.channel.ChannelFactory serverChannelFactory(boolean)
{
io.netty.channel.ChannelFactory v3;
io.vertx.core.impl.transports.JDKTransport v0;
java.lang.IllegalArgumentException v2;
boolean v1;
v0 := @this: io.vertx.core.impl.transports.JDKTransport;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>()>();
throw v2;
label1:
v3 = staticinvoke <io.vertx.core.impl.transports.JDKTransport$init__1556: io.netty.channel.ChannelFactory bootstrap$()>();
return v3;
}
static void <clinit>()
{
io.vertx.core.impl.transports.JDKTransport v0;
v0 = new io.vertx.core.impl.transports.JDKTransport;
specialinvoke v0.<io.vertx.core.impl.transports.JDKTransport: void <init>()>();
<io.vertx.core.impl.transports.JDKTransport: io.vertx.core.spi.transport.Transport INSTANCE> = v0;
return;
}
}