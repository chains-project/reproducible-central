class io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter extends java.lang.Object implements java.util.Iterator
{
final int start;
int cursor;
final io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0;
public void <init>(io.vertx.core.impl.utils.ConcurrentCyclicSequence, int)
{
int v2;
io.vertx.core.impl.utils.ConcurrentCyclicSequence v1;
io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter v0;
v0 := @this: io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter;
v1 := @parameter0: io.vertx.core.impl.utils.ConcurrentCyclicSequence;
v2 := @parameter1: int;
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int start> = v2;
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int cursor> = 0;
return;
}
public boolean hasNext()
{
io.vertx.core.impl.utils.ConcurrentCyclicSequence v2;
java.lang.Object[] v3;
int v1, v4;
io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter v0;
boolean v5;
v0 := @this: io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter;
v1 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int cursor>;
v2 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0>;
v3 = v2.<io.vertx.core.impl.utils.ConcurrentCyclicSequence: java.lang.Object[] elements>;
v4 = lengthof v3;
if v1 == v4 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public java.lang.Object next()
{
io.vertx.core.impl.utils.ConcurrentCyclicSequence v2, v6, v8;
java.lang.Object[] v3, v7;
io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter v0;
int v1, v10, v11, v12, v13, v4, v9;
java.lang.Object v14;
java.util.NoSuchElementException v5;
v0 := @this: io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter;
v1 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int cursor>;
v2 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0>;
v3 = v2.<io.vertx.core.impl.utils.ConcurrentCyclicSequence: java.lang.Object[] elements>;
v4 = lengthof v3;
if v1 < v4 goto label1;
v5 = new java.util.NoSuchElementException;
specialinvoke v5.<java.util.NoSuchElementException: void <init>()>();
throw v5;
label1:
v6 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0>;
v7 = v6.<io.vertx.core.impl.utils.ConcurrentCyclicSequence: java.lang.Object[] elements>;
v8 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0>;
v9 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int start>;
v10 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int cursor>;
v11 = v10 + 1;
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$Iter: int cursor> = v11;
v12 = v9 + v10;
v13 = specialinvoke v8.<io.vertx.core.impl.utils.ConcurrentCyclicSequence: int computeIndex(int)>(v12);
v14 = v7[v13];
return v14;
}
}