public class io.vertx.core.json.Json extends java.lang.Object
{
public static final io.vertx.core.spi.json.JsonCodec CODEC;
public void <init>()
{
io.vertx.core.json.Json v0;
v0 := @this: io.vertx.core.json.Json;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static io.vertx.core.spi.JsonFactory load()
{
io.vertx.core.spi.JsonFactory v0;
v0 = staticinvoke <io.vertx.core.spi.JsonFactory: io.vertx.core.spi.JsonFactory load()>();
return v0;
}
public static java.lang.String encode(java.lang.Object) throws io.vertx.core.json.EncodeException
{
java.lang.Object v0;
java.lang.String v2;
io.vertx.core.spi.json.JsonCodec v1;
v0 := @parameter0: java.lang.Object;
v1 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.json.JsonCodec: java.lang.String toString(java.lang.Object)>(v0);
return v2;
}
public static io.vertx.core.buffer.Buffer encodeToBuffer(java.lang.Object) throws io.vertx.core.json.EncodeException
{
java.lang.Object v0;
io.vertx.core.buffer.Buffer v2;
io.vertx.core.spi.json.JsonCodec v1;
v0 := @parameter0: java.lang.Object;
v1 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.json.JsonCodec: io.vertx.core.buffer.Buffer toBuffer(java.lang.Object)>(v0);
return v2;
}
public static java.lang.String encodePrettily(java.lang.Object) throws io.vertx.core.json.EncodeException
{
java.lang.Object v0;
java.lang.String v2;
io.vertx.core.spi.json.JsonCodec v1;
v0 := @parameter0: java.lang.Object;
v1 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.json.JsonCodec: java.lang.String toString(java.lang.Object,boolean)>(v0, 1);
return v2;
}
public static java.lang.Object decodeValue(java.lang.String, java.lang.Class) throws io.vertx.core.json.DecodeException
{
io.vertx.core.spi.json.JsonCodec v2;
java.lang.Class v1;
java.lang.Object v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Class;
v2 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v3 = interfaceinvoke v2.<io.vertx.core.spi.json.JsonCodec: java.lang.Object fromString(java.lang.String,java.lang.Class)>(v0, v1);
return v3;
}
public static java.lang.Object decodeValue(java.lang.String) throws io.vertx.core.json.DecodeException
{
java.lang.Object v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.vertx.core.json.Json: java.lang.Object decodeValue(java.lang.String,java.lang.Class)>(v0, class "Ljava/lang/Object;");
return v1;
}
public static java.lang.Object decodeValue(io.vertx.core.buffer.Buffer) throws io.vertx.core.json.DecodeException
{
java.lang.Object v1;
io.vertx.core.buffer.Buffer v0;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
v1 = staticinvoke <io.vertx.core.json.Json: java.lang.Object decodeValue(io.vertx.core.buffer.Buffer,java.lang.Class)>(v0, class "Ljava/lang/Object;");
return v1;
}
public static java.lang.Object decodeValue(io.vertx.core.buffer.Buffer, java.lang.Class) throws io.vertx.core.json.DecodeException
{
io.vertx.core.buffer.Buffer v0;
io.vertx.core.spi.json.JsonCodec v2;
java.lang.Class v1;
java.lang.Object v3;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
v1 := @parameter1: java.lang.Class;
v2 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v3 = interfaceinvoke v2.<io.vertx.core.spi.json.JsonCodec: java.lang.Object fromBuffer(io.vertx.core.buffer.Buffer,java.lang.Class)>(v0, v1);
return v3;
}
static void <clinit>()
{
io.vertx.core.spi.json.JsonCodec v1;
io.vertx.core.spi.JsonFactory v0;
v0 = staticinvoke <io.vertx.core.json.Json: io.vertx.core.spi.JsonFactory load()>();
v1 = interfaceinvoke v0.<io.vertx.core.spi.JsonFactory: io.vertx.core.spi.json.JsonCodec codec()>();
<io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC> = v1;
return;
}
}