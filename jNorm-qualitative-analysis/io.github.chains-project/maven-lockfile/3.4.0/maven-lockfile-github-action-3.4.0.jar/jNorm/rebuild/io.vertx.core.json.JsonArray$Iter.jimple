class io.vertx.core.json.JsonArray$Iter extends java.lang.Object implements java.util.Iterator
{
final java.util.Iterator listIter;
void <init>(java.util.Iterator)
{
io.vertx.core.json.JsonArray$Iter v0;
java.util.Iterator v1;
v0 := @this: io.vertx.core.json.JsonArray$Iter;
v1 := @parameter0: java.util.Iterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.json.JsonArray$Iter: java.util.Iterator listIter> = v1;
return;
}
public boolean hasNext()
{
io.vertx.core.json.JsonArray$Iter v0;
java.util.Iterator v1;
boolean v2;
v0 := @this: io.vertx.core.json.JsonArray$Iter;
v1 = v0.<io.vertx.core.json.JsonArray$Iter: java.util.Iterator listIter>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.lang.Object next()
{
io.vertx.core.json.JsonArray$Iter v0;
java.util.Iterator v1;
java.lang.Object v2, v3;
v0 := @this: io.vertx.core.json.JsonArray$Iter;
v1 = v0.<io.vertx.core.json.JsonArray$Iter: java.util.Iterator listIter>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v3 = staticinvoke <io.vertx.core.json.impl.JsonUtil: java.lang.Object wrapJsonValue(java.lang.Object)>(v2);
return v3;
}
public void remove()
{
io.vertx.core.json.JsonArray$Iter v0;
java.util.Iterator v1;
v0 := @this: io.vertx.core.json.JsonArray$Iter;
v1 = v0.<io.vertx.core.json.JsonArray$Iter: java.util.Iterator listIter>;
interfaceinvoke v1.<java.util.Iterator: void remove()>();
return;
}
}