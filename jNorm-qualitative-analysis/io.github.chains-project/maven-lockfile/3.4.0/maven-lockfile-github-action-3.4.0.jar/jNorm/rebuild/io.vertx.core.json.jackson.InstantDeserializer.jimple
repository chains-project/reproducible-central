class io.vertx.core.json.jackson.InstantDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
{
void <init>()
{
io.vertx.core.json.jackson.InstantDeserializer v0;
v0 := @this: io.vertx.core.json.jackson.InstantDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
return;
}
public java.time.Instant deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.databind.exc.InvalidFormatException v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.time.Instant v6;
java.time.temporal.TemporalAccessor v5;
io.vertx.core.json.jackson.InstantDeserializer v0;
java.time.format.DateTimeFormatter v4;
java.lang.String v3;
java.time.DateTimeException v7;
v0 := @this: io.vertx.core.json.jackson.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
label1:
v4 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v5 = virtualinvoke v4.<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>(v3);
v6 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new com.fasterxml.jackson.databind.exc.InvalidFormatException;
specialinvoke v8.<com.fasterxml.jackson.databind.exc.InvalidFormatException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v1, "Expected an ISO 8601 formatted date time", v3, class "Ljava/time/Instant;");
throw v8;
catch java.time.DateTimeException from label1 to label2 with label3;
}
}