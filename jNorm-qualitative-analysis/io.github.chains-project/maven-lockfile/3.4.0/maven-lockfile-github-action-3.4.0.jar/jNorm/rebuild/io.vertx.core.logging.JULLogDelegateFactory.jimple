public class io.vertx.core.logging.JULLogDelegateFactory extends java.lang.Object implements io.vertx.core.spi.logging.LogDelegateFactory
{
public void <init>()
{
io.vertx.core.logging.JULLogDelegateFactory v0;
v0 := @this: io.vertx.core.logging.JULLogDelegateFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void loadConfig()
{
java.lang.Throwable v4;
java.util.logging.LogManager v3;
java.io.IOException v5;
java.lang.Class v0;
java.lang.ClassLoader v1;
java.io.InputStream v2;
label1:
v0 = class "Lio/vertx/core/logging/JULLogDelegateFactory;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v2 = virtualinvoke v1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("vertx-default-jul-logging.properties");
label2:
if v2 == null goto label6;
v3 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>();
virtualinvoke v3.<java.util.logging.LogManager: void readConfiguration(java.io.InputStream)>(v2);
label3:
if v2 == null goto label6;
virtualinvoke v2.<java.io.InputStream: void close()>();
goto label6;
label4:
v4 := @caughtexception;
throw v4;
label5:
v5 := @caughtexception;
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
catch java.io.IOException from label1 to label5 with label5;
}
public boolean isAvailable()
{
io.vertx.core.logging.JULLogDelegateFactory v0;
v0 := @this: io.vertx.core.logging.JULLogDelegateFactory;
return 1;
}
public io.vertx.core.spi.logging.LogDelegate createDelegate(java.lang.String)
{
io.vertx.core.logging.JULLogDelegateFactory v0;
java.lang.String v1;
io.vertx.core.logging.JULLogDelegate v2;
v0 := @this: io.vertx.core.logging.JULLogDelegateFactory;
v1 := @parameter0: java.lang.String;
v2 = new io.vertx.core.logging.JULLogDelegate;
specialinvoke v2.<io.vertx.core.logging.JULLogDelegate: void <init>(java.lang.String)>(v1);
return v2;
}
static void <clinit>()
{
java.lang.String v0;
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.util.logging.config.file");
if v0 != null goto label1;
staticinvoke <io.vertx.core.logging.JULLogDelegateFactory: void loadConfig()>();
label1:
return;
}
}