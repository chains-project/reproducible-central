public class io.vertx.core.logging.Logger extends java.lang.Object
{
final io.vertx.core.spi.logging.LogDelegate delegate;
public void <init>(io.vertx.core.spi.logging.LogDelegate)
{
io.vertx.core.spi.logging.LogDelegate v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: io.vertx.core.spi.logging.LogDelegate;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate> = v1;
return;
}
public boolean isWarnEnabled()
{
io.vertx.core.spi.logging.LogDelegate v1;
io.vertx.core.logging.Logger v0;
boolean v2;
v0 := @this: io.vertx.core.logging.Logger;
v1 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.logging.LogDelegate: boolean isWarnEnabled()>();
return v2;
}
public boolean isInfoEnabled()
{
io.vertx.core.spi.logging.LogDelegate v1;
io.vertx.core.logging.Logger v0;
boolean v2;
v0 := @this: io.vertx.core.logging.Logger;
v1 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.logging.LogDelegate: boolean isInfoEnabled()>();
return v2;
}
public boolean isDebugEnabled()
{
io.vertx.core.spi.logging.LogDelegate v1;
io.vertx.core.logging.Logger v0;
boolean v2;
v0 := @this: io.vertx.core.logging.Logger;
v1 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.logging.LogDelegate: boolean isDebugEnabled()>();
return v2;
}
public boolean isTraceEnabled()
{
io.vertx.core.spi.logging.LogDelegate v1;
io.vertx.core.logging.Logger v0;
boolean v2;
v0 := @this: io.vertx.core.logging.Logger;
v1 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.logging.LogDelegate: boolean isTraceEnabled()>();
return v2;
}
public void fatal(java.lang.Object)
{
io.vertx.core.spi.logging.LogDelegate v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v2.<io.vertx.core.spi.logging.LogDelegate: void fatal(java.lang.Object)>(v1);
return;
}
public void fatal(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void fatal(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public void error(java.lang.Object)
{
io.vertx.core.spi.logging.LogDelegate v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v2.<io.vertx.core.spi.logging.LogDelegate: void error(java.lang.Object)>(v1);
return;
}
public void error(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void error(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public transient void error(java.lang.Object, java.lang.Object[])
{
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object[] v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void error(java.lang.Object,java.lang.Object[])>(v1, v2);
return;
}
public transient void error(java.lang.Object, java.lang.Throwable, java.lang.Object[])
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v4;
java.lang.Object[] v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v4.<io.vertx.core.spi.logging.LogDelegate: void error(java.lang.Object,java.lang.Throwable,java.lang.Object[])>(v1, v2, v3);
return;
}
public void warn(java.lang.Object)
{
io.vertx.core.spi.logging.LogDelegate v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v2.<io.vertx.core.spi.logging.LogDelegate: void warn(java.lang.Object)>(v1);
return;
}
public void warn(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void warn(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public transient void warn(java.lang.Object, java.lang.Object[])
{
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object[] v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void warn(java.lang.Object,java.lang.Object[])>(v1, v2);
return;
}
public transient void warn(java.lang.Object, java.lang.Throwable, java.lang.Object[])
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v4;
java.lang.Object[] v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v4.<io.vertx.core.spi.logging.LogDelegate: void warn(java.lang.Object,java.lang.Throwable,java.lang.Object[])>(v1, v2, v3);
return;
}
public void info(java.lang.Object)
{
io.vertx.core.spi.logging.LogDelegate v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v2.<io.vertx.core.spi.logging.LogDelegate: void info(java.lang.Object)>(v1);
return;
}
public void info(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void info(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public transient void info(java.lang.Object, java.lang.Object[])
{
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object[] v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void info(java.lang.Object,java.lang.Object[])>(v1, v2);
return;
}
public transient void info(java.lang.Object, java.lang.Throwable, java.lang.Object[])
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v4;
java.lang.Object[] v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v4.<io.vertx.core.spi.logging.LogDelegate: void info(java.lang.Object,java.lang.Throwable,java.lang.Object[])>(v1, v2, v3);
return;
}
public void debug(java.lang.Object)
{
io.vertx.core.spi.logging.LogDelegate v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v2.<io.vertx.core.spi.logging.LogDelegate: void debug(java.lang.Object)>(v1);
return;
}
public void debug(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void debug(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public transient void debug(java.lang.Object, java.lang.Object[])
{
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object[] v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void debug(java.lang.Object,java.lang.Object[])>(v1, v2);
return;
}
public transient void debug(java.lang.Object, java.lang.Throwable, java.lang.Object[])
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v4;
java.lang.Object[] v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v4.<io.vertx.core.spi.logging.LogDelegate: void debug(java.lang.Object,java.lang.Throwable,java.lang.Object[])>(v1, v2, v3);
return;
}
public void trace(java.lang.Object)
{
io.vertx.core.spi.logging.LogDelegate v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v2.<io.vertx.core.spi.logging.LogDelegate: void trace(java.lang.Object)>(v1);
return;
}
public void trace(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void trace(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public transient void trace(java.lang.Object, java.lang.Object[])
{
io.vertx.core.spi.logging.LogDelegate v3;
java.lang.Object[] v2;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v3.<io.vertx.core.spi.logging.LogDelegate: void trace(java.lang.Object,java.lang.Object[])>(v1, v2);
return;
}
public transient void trace(java.lang.Object, java.lang.Throwable, java.lang.Object[])
{
java.lang.Throwable v2;
io.vertx.core.spi.logging.LogDelegate v4;
java.lang.Object[] v3;
java.lang.Object v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
interfaceinvoke v4.<io.vertx.core.spi.logging.LogDelegate: void trace(java.lang.Object,java.lang.Throwable,java.lang.Object[])>(v1, v2, v3);
return;
}
public io.vertx.core.spi.logging.LogDelegate getDelegate()
{
io.vertx.core.spi.logging.LogDelegate v1;
io.vertx.core.logging.Logger v0;
v0 := @this: io.vertx.core.logging.Logger;
v1 = v0.<io.vertx.core.logging.Logger: io.vertx.core.spi.logging.LogDelegate delegate>;
return v1;
}
}