public class io.vertx.core.net.ProxyOptions extends java.lang.Object
{
public static final io.vertx.core.net.ProxyType DEFAULT_TYPE;
public static final int DEFAULT_PORT;
public static final java.lang.String DEFAULT_HOST;
private java.lang.String host;
private int port;
private java.lang.String username;
private java.lang.String password;
private io.vertx.core.net.ProxyType type;
public void <init>()
{
io.vertx.core.net.ProxyOptions v0;
io.vertx.core.net.ProxyType v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.ProxyOptions: java.lang.String host> = "localhost";
v0.<io.vertx.core.net.ProxyOptions: int port> = 3128;
v1 = <io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType DEFAULT_TYPE>;
v0.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType type> = v1;
return;
}
public void <init>(io.vertx.core.net.ProxyOptions)
{
io.vertx.core.net.ProxyOptions v0, v1;
io.vertx.core.net.ProxyType v6;
int v3;
java.lang.String v2, v4, v5;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: io.vertx.core.net.ProxyOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<io.vertx.core.net.ProxyOptions: java.lang.String getHost()>();
v0.<io.vertx.core.net.ProxyOptions: java.lang.String host> = v2;
v3 = virtualinvoke v1.<io.vertx.core.net.ProxyOptions: int getPort()>();
v0.<io.vertx.core.net.ProxyOptions: int port> = v3;
v4 = virtualinvoke v1.<io.vertx.core.net.ProxyOptions: java.lang.String getUsername()>();
v0.<io.vertx.core.net.ProxyOptions: java.lang.String username> = v4;
v5 = virtualinvoke v1.<io.vertx.core.net.ProxyOptions: java.lang.String getPassword()>();
v0.<io.vertx.core.net.ProxyOptions: java.lang.String password> = v5;
v6 = virtualinvoke v1.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType getType()>();
v0.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType type> = v6;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.ProxyOptions v0;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<io.vertx.core.net.ProxyOptions: void <init>()>();
staticinvoke <io.vertx.core.net.ProxyOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.core.net.ProxyOptions)>(v1, v0);
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.ProxyOptions v0;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.core.net.ProxyOptionsConverter: void toJson(io.vertx.core.net.ProxyOptions,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
public java.lang.String getHost()
{
io.vertx.core.net.ProxyOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 = v0.<io.vertx.core.net.ProxyOptions: java.lang.String host>;
return v1;
}
public io.vertx.core.net.ProxyOptions setHost(java.lang.String)
{
io.vertx.core.net.ProxyOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: java.lang.String;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Proxy host may not be null");
v0.<io.vertx.core.net.ProxyOptions: java.lang.String host> = v1;
return v0;
}
public int getPort()
{
int v1;
io.vertx.core.net.ProxyOptions v0;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 = v0.<io.vertx.core.net.ProxyOptions: int port>;
return v1;
}
public io.vertx.core.net.ProxyOptions setPort(int)
{
io.vertx.core.net.ProxyOptions v0;
int v1, v2;
java.lang.String v4;
java.lang.IllegalArgumentException v3;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: int;
if v1 < 0 goto label1;
v2 = (int) 65535;
if v1 <= v2 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid proxy port \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label2:
v0.<io.vertx.core.net.ProxyOptions: int port> = v1;
return v0;
}
public java.lang.String getUsername()
{
io.vertx.core.net.ProxyOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 = v0.<io.vertx.core.net.ProxyOptions: java.lang.String username>;
return v1;
}
public io.vertx.core.net.ProxyOptions setUsername(java.lang.String)
{
io.vertx.core.net.ProxyOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.net.ProxyOptions: java.lang.String username> = v1;
return v0;
}
public java.lang.String getPassword()
{
io.vertx.core.net.ProxyOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 = v0.<io.vertx.core.net.ProxyOptions: java.lang.String password>;
return v1;
}
public io.vertx.core.net.ProxyOptions setPassword(java.lang.String)
{
io.vertx.core.net.ProxyOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.net.ProxyOptions: java.lang.String password> = v1;
return v0;
}
public io.vertx.core.net.ProxyType getType()
{
io.vertx.core.net.ProxyOptions v0;
io.vertx.core.net.ProxyType v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 = v0.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType type>;
return v1;
}
public io.vertx.core.net.ProxyOptions setType(io.vertx.core.net.ProxyType)
{
io.vertx.core.net.ProxyOptions v0;
io.vertx.core.net.ProxyType v1;
v0 := @this: io.vertx.core.net.ProxyOptions;
v1 := @parameter0: io.vertx.core.net.ProxyType;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Proxy type may not be null");
v0.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType type> = v1;
return v0;
}
static void <clinit>()
{
io.vertx.core.net.ProxyType v0;
v0 = <io.vertx.core.net.ProxyType: io.vertx.core.net.ProxyType HTTP>;
<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyType DEFAULT_TYPE> = v0;
return;
}
}