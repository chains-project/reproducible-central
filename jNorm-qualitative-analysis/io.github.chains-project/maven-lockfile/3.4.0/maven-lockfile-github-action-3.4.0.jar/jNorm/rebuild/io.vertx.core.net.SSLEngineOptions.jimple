public abstract class io.vertx.core.net.SSLEngineOptions extends java.lang.Object
{
public static final boolean DEFAULT_USE_WORKER_POOL;
private boolean useWorkerThread;
public abstract io.vertx.core.net.SSLEngineOptions copy();
public void <init>()
{
io.vertx.core.net.SSLEngineOptions v0;
v0 := @this: io.vertx.core.net.SSLEngineOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.SSLEngineOptions: boolean useWorkerThread> = 0;
return;
}
public void <init>(io.vertx.core.net.SSLEngineOptions)
{
io.vertx.core.net.SSLEngineOptions v0, v1;
boolean v2;
v0 := @this: io.vertx.core.net.SSLEngineOptions;
v1 := @parameter0: io.vertx.core.net.SSLEngineOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1.<io.vertx.core.net.SSLEngineOptions: boolean useWorkerThread>;
v0.<io.vertx.core.net.SSLEngineOptions: boolean useWorkerThread> = v2;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.net.SSLEngineOptions v0;
java.lang.Boolean v2, v3;
io.vertx.core.json.JsonObject v1;
boolean v4;
v0 := @this: io.vertx.core.net.SSLEngineOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v3 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>("useWorkerThread", v2);
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
v0.<io.vertx.core.net.SSLEngineOptions: boolean useWorkerThread> = v4;
return;
}
public abstract io.vertx.core.spi.tls.SslContextFactory sslContextFactory();
public boolean getUseWorkerThread()
{
io.vertx.core.net.SSLEngineOptions v0;
boolean v1;
v0 := @this: io.vertx.core.net.SSLEngineOptions;
v1 = v0.<io.vertx.core.net.SSLEngineOptions: boolean useWorkerThread>;
return v1;
}
public io.vertx.core.net.SSLEngineOptions setUseWorkerThread(boolean)
{
io.vertx.core.net.SSLEngineOptions v0;
boolean v1;
v0 := @this: io.vertx.core.net.SSLEngineOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.net.SSLEngineOptions: boolean useWorkerThread> = v1;
return v0;
}
}