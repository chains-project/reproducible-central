final class io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator extends java.lang.Object implements java.util.Iterator
{
private final java.util.Iterator holderIt;
public void <init>(java.util.Iterator)
{
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator v0;
java.util.Iterator v1;
v0 := @this: io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator;
v1 := @parameter0: java.util.Iterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator: java.util.Iterator holderIt> = v1;
return;
}
public boolean hasNext()
{
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator v0;
java.util.Iterator v1;
boolean v2;
v0 := @this: io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator;
v1 = v0.<io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator: java.util.Iterator holderIt>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public io.netty.util.concurrent.EventExecutor next()
{
java.util.Iterator v1;
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator v0;
java.lang.Object v2;
io.netty.channel.EventLoop v3;
v0 := @this: io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator;
v1 = v0.<io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator: java.util.Iterator holderIt>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v3 = v2.<io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopHolder: io.netty.channel.EventLoop worker>;
return v3;
}
public void remove()
{
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("read-only");
throw v1;
}
}