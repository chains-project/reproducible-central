class io.vertx.core.net.impl.VertxSniHandler extends io.netty.handler.ssl.SniHandler
{
private final java.util.concurrent.Executor delegatedTaskExec;
public void <init>(io.netty.util.AsyncMapping, long, java.util.concurrent.Executor)
{
java.util.concurrent.Executor v3;
io.vertx.core.net.impl.VertxSniHandler v0;
long v2;
io.netty.util.AsyncMapping v1;
v0 := @this: io.vertx.core.net.impl.VertxSniHandler;
v1 := @parameter0: io.netty.util.AsyncMapping;
v2 := @parameter1: long;
v3 := @parameter2: java.util.concurrent.Executor;
specialinvoke v0.<io.netty.handler.ssl.SniHandler: void <init>(io.netty.util.AsyncMapping,long)>(v1, v2);
v0.<io.vertx.core.net.impl.VertxSniHandler: java.util.concurrent.Executor delegatedTaskExec> = v3;
return;
}
protected io.netty.handler.ssl.SslHandler newSslHandler(io.netty.handler.ssl.SslContext, io.netty.buffer.ByteBufAllocator)
{
java.util.concurrent.TimeUnit v6;
io.netty.handler.ssl.SslContext v1;
io.netty.handler.ssl.SslHandler v4;
java.util.concurrent.Executor v3;
io.netty.buffer.ByteBufAllocator v2;
io.vertx.core.net.impl.VertxSniHandler v0;
long v5;
v0 := @this: io.vertx.core.net.impl.VertxSniHandler;
v1 := @parameter0: io.netty.handler.ssl.SslContext;
v2 := @parameter1: io.netty.buffer.ByteBufAllocator;
v3 = v0.<io.vertx.core.net.impl.VertxSniHandler: java.util.concurrent.Executor delegatedTaskExec>;
v4 = virtualinvoke v1.<io.netty.handler.ssl.SslContext: io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator,java.util.concurrent.Executor)>(v2, v3);
v5 = v0.<io.vertx.core.net.impl.VertxSniHandler: long handshakeTimeoutMillis>;
v6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke v4.<io.netty.handler.ssl.SslHandler: void setHandshakeTimeout(long,java.util.concurrent.TimeUnit)>(v5, v6);
return v4;
}
}