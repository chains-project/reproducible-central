class io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1 extends io.vertx.core.net.impl.pool.Task
{
final io.vertx.core.net.impl.pool.SimpleConnectionPool$Close this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Close)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1 v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close this$0> = v1;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1 v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close v1;
io.vertx.core.Handler v2;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close this$0>;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close: io.vertx.core.Handler handler>;
v3 = <io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.Future POOL_CLOSED>;
interfaceinvoke v2.<io.vertx.core.Handler: void handle(java.lang.Object)>(v3);
return;
}
}