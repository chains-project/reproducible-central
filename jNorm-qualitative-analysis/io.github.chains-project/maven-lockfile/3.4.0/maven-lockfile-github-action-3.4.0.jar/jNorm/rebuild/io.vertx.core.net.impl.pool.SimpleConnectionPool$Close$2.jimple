class io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2 extends io.vertx.core.net.impl.pool.Task
{
final java.util.List val$waiters;
final java.util.List val$list;
final io.vertx.core.net.impl.pool.SimpleConnectionPool$Close this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Close, java.util.List, java.util.List)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2 v0;
java.util.List v2, v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.util.List;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close this$0> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2: java.util.List val$waiters> = v2;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2: java.util.List val$list> = v3;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
java.util.function.Consumer v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2 v0;
java.util.List v1, v5;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Close v3;
io.vertx.core.Handler v4;
io.vertx.core.Future v6;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2: java.util.List val$waiters>;
v2 = staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2$lambda_run_0__1399: java.util.function.Consumer bootstrap$()>();
interfaceinvoke v1.<java.util.List: void forEach(java.util.function.Consumer)>(v2);
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$Close this$0>;
v4 = v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close: io.vertx.core.Handler handler>;
v5 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Close$2: java.util.List val$list>;
v6 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v5);
interfaceinvoke v4.<io.vertx.core.Handler: void handle(java.lang.Object)>(v6);
return;
}
}