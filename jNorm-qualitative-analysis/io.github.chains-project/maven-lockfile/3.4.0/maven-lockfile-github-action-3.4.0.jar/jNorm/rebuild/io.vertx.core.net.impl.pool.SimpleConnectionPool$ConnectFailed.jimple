class io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed extends java.lang.Object implements io.vertx.core.net.impl.pool.Executor$Action
{
private final io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot removed;
private final java.lang.Throwable cause;
private io.vertx.core.net.impl.pool.PoolWaiter waiter;
public void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot, java.lang.Throwable, io.vertx.core.net.impl.pool.PoolWaiter)
{
java.lang.Throwable v2;
io.vertx.core.net.impl.pool.PoolWaiter v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: io.vertx.core.net.impl.pool.PoolWaiter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot removed> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: java.lang.Throwable cause> = v2;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: io.vertx.core.net.impl.pool.PoolWaiter waiter> = v3;
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v6;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed v0;
io.vertx.core.net.impl.pool.PoolWaiter v2, v4;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed$1 v7;
boolean v3, v5;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool: int access$910(io.vertx.core.net.impl.pool.SimpleConnectionPool)>(v1);
v2 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v3 = v2.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed>;
if v3 == 0 goto label1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: io.vertx.core.net.impl.pool.PoolWaiter waiter> = null;
goto label2;
label1:
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v4.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed> = 1;
label2:
v5 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: boolean closed>;
if v5 != 0 goto label3;
v6 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot removed>;
specialinvoke v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: void remove(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)>(v6);
label3:
v7 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed$1;
specialinvoke v7.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed,io.vertx.core.net.impl.pool.SimpleConnectionPool)>(v0, v1);
return v7;
}
}