class io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess extends java.lang.Object implements io.vertx.core.net.impl.pool.Executor$Action
{
private final io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot;
private final io.vertx.core.net.impl.pool.ConnectResult result;
private io.vertx.core.net.impl.pool.PoolWaiter waiter;
private void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot, io.vertx.core.net.impl.pool.ConnectResult, io.vertx.core.net.impl.pool.PoolWaiter)
{
io.vertx.core.net.impl.pool.ConnectResult v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess v0;
io.vertx.core.net.impl.pool.PoolWaiter v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot;
v2 := @parameter1: io.vertx.core.net.impl.pool.ConnectResult;
v3 := @parameter2: io.vertx.core.net.impl.pool.PoolWaiter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.ConnectResult result> = v2;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter> = v3;
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v11, v14, v15, v24, v36, v46, v50, v6, v8;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v33, v35, v45;
byte v26;
int[] v2;
boolean v19, v21, v28, v32;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2 v51;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] v43;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1 v23;
long v13, v25, v4, v42;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess v0;
int v16, v17, v18, v34, v41, v44, v5, v7;
io.vertx.core.net.impl.pool.ConnectResult v12, v3, v9;
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
io.vertx.core.net.impl.pool.PoolWaiter v20, v22, v27, v30, v31, v37, v39, v48;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v29, v40, v47;
java.lang.Object v10;
io.vertx.core.Handler v38, v49;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int[] capacityFactors>;
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.ConnectResult result>;
v4 = virtualinvoke v3.<io.vertx.core.net.impl.pool.ConnectResult: long weight()>();
v5 = v2[v4];
v6 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v7 = v6.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int capacity>;
v8 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v9 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.ConnectResult result>;
v10 = virtualinvoke v9.<io.vertx.core.net.impl.pool.ConnectResult: java.lang.Object connection()>();
v8.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection> = v10;
v11 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v12 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.ConnectResult result>;
v13 = virtualinvoke v12.<io.vertx.core.net.impl.pool.ConnectResult: long concurrency()>();
v11.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency> = v13;
v14 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v14.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int capacity> = v5;
v15 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v15.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage> = 0;
staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool: int access$910(io.vertx.core.net.impl.pool.SimpleConnectionPool)>(v1);
v16 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int capacity>;
v17 = v5 - v7;
v18 = v16 + v17;
v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int capacity> = v18;
v19 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: boolean closed>;
if v19 == 0 goto label03;
v20 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v21 = v20.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed>;
if v21 == 0 goto label01;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter> = null;
goto label02;
label01:
v22 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v22.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed> = 1;
label02:
v23 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1;
specialinvoke v23.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess)>(v0);
return v23;
label03:
v24 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v25 = v24.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency>;
v26 = v25 cmp 0L;
if v26 != 0 goto label05;
v27 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v28 = v27.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed>;
if v28 != 0 goto label04;
v29 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v30 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
virtualinvoke v29.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: void addFirst(io.vertx.core.net.impl.pool.PoolWaiter)>(v30);
label04:
return null;
label05:
v31 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v32 = v31.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed>;
if v32 == 0 goto label06;
v33 = null;
v34 = 0;
goto label07;
label06:
v35 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v36 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v37 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v38 = v37.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.Handler handler>;
specialinvoke v35.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot,io.vertx.core.Handler)>(v36, v38);
v33 = v35;
v34 = 1;
v39 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v39.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed> = 1;
v25 = v25 - 1L;
label07:
v40 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v41 = virtualinvoke v40.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size()>();
v42 = staticinvoke <java.lang.Math: long min(long,long)>(v25, v41);
if v42 <= 0 goto label09;
v34 = v34 + v42;
v43 = newarray (io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)[v42];
v44 = 0;
label08:
if v44 >= v42 goto label10;
v45 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v46 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v47 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v48 = virtualinvoke v47.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter poll()>();
v49 = v48.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.Handler handler>;
specialinvoke v45.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot,io.vertx.core.Handler)>(v46, v49);
v43[v44] = v45;
v44 = v44 + 1;
goto label08;
label09:
v43 = null;
label10:
v50 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v50.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage> = v34;
v51 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2;
specialinvoke v51.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess,io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl,io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[])>(v0, v33, v43);
return v51;
}
}