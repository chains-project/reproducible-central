class io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict extends java.lang.Object implements io.vertx.core.net.impl.pool.Executor$Action
{
private final java.util.function.Predicate predicate;
private final io.vertx.core.Handler handler;
public void <init>(java.util.function.Predicate, io.vertx.core.Handler)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict v0;
io.vertx.core.Handler v2;
java.util.function.Predicate v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict;
v1 := @parameter0: java.util.function.Predicate;
v2 := @parameter1: io.vertx.core.Handler;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict: java.util.function.Predicate predicate> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict: io.vertx.core.Handler handler> = v2;
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$1 v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2 v19;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v9;
java.util.ArrayList v4, v5;
int v11, v6, v7;
boolean v14, v17, v2;
java.util.Iterator v16;
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
java.util.function.Predicate v12;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot[] v8;
java.lang.Object v10, v13, v15, v18;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: boolean closed>;
if v2 == 0 goto label1;
v3 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$1;
specialinvoke v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict)>(v0);
return v3;
label1:
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
v6 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int size>;
v7 = v6 - 1;
label2:
if v7 < 0 goto label4;
v8 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot[] slots>;
v9 = v8[v7];
v10 = v9.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
if v10 == null goto label3;
v11 = v9.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage>;
if v11 != 0 goto label3;
v12 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict: java.util.function.Predicate predicate>;
v13 = v9.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
v14 = interfaceinvoke v12.<java.util.function.Predicate: boolean test(java.lang.Object)>(v13);
if v14 == 0 goto label3;
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v9);
v15 = v9.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v15);
label3:
v7 = v7 - 1;
goto label2;
label4:
v16 = interfaceinvoke v5.<java.util.List: java.util.Iterator iterator()>();
label5:
v17 = interfaceinvoke v16.<java.util.Iterator: boolean hasNext()>();
if v17 == 0 goto label6;
v18 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: void remove(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)>(v18);
goto label5;
label6:
v19 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2;
specialinvoke v19.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict,java.util.List)>(v0, v4);
return v19;
}
}