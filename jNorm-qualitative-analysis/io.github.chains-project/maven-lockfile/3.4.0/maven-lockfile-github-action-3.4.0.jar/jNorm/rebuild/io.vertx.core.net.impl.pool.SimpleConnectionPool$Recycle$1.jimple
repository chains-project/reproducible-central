class io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1 extends io.vertx.core.net.impl.pool.Task
{
final io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease;
final io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle, io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1 v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle;
v2 := @parameter1: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle this$0> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease> = v2;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1 v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease>;
virtualinvoke v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void emit()>();
return;
}
}