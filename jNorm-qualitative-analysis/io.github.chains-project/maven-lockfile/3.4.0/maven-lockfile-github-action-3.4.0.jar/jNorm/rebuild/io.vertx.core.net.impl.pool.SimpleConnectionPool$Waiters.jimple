class io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters extends java.lang.Object implements java.lang.Iterable
{
private final io.vertx.core.net.impl.pool.PoolWaiter head;
private int size;
public void <init>()
{
io.vertx.core.net.impl.pool.PoolWaiter v1, v2, v3, v4;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new io.vertx.core.net.impl.pool.PoolWaiter;
specialinvoke v1.<io.vertx.core.net.impl.pool.PoolWaiter: void <init>(io.vertx.core.net.impl.pool.PoolWaiter$Listener,io.vertx.core.impl.ContextInternal,int,io.vertx.core.Handler)>(null, null, 0, null);
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head> = v1;
v2 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v3.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v4;
v2.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v4;
return;
}
io.vertx.core.net.impl.pool.PoolWaiter poll()
{
io.vertx.core.net.impl.pool.PoolWaiter v1, v2, v3, v4, v5;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v2 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next>;
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
if v2 != v3 goto label1;
return null;
label1:
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v5 = v4.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next>;
virtualinvoke v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: boolean remove(io.vertx.core.net.impl.pool.PoolWaiter)>(v5);
return v5;
}
void addLast(io.vertx.core.net.impl.pool.PoolWaiter)
{
java.lang.IllegalStateException v3;
io.vertx.core.net.impl.pool.PoolWaiter v1, v4, v5, v6, v7, v8, v9;
int v10, v11;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
boolean v2;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 := @parameter0: io.vertx.core.net.impl.pool.PoolWaiter;
v2 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: boolean queued>;
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
label1:
v1.<io.vertx.core.net.impl.pool.PoolWaiter: boolean queued> = 1;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v5 = v4.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev>;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v5;
v6 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v6;
v7 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v8 = v7.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev>;
v8.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v1;
v9 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v9.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v1;
v10 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size>;
v11 = v10 + 1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size> = v11;
return;
}
void addFirst(io.vertx.core.net.impl.pool.PoolWaiter)
{
java.lang.IllegalStateException v3;
io.vertx.core.net.impl.pool.PoolWaiter v1, v4, v5, v6, v7, v8, v9;
int v10, v11;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
boolean v2;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 := @parameter0: io.vertx.core.net.impl.pool.PoolWaiter;
v2 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: boolean queued>;
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
label1:
v1.<io.vertx.core.net.impl.pool.PoolWaiter: boolean queued> = 1;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v4;
v5 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v6 = v5.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev>;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v6;
v7 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v8 = v7.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next>;
v8.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v1;
v9 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v9.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v1;
v10 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size>;
v11 = v10 + 1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size> = v11;
return;
}
boolean remove(io.vertx.core.net.impl.pool.PoolWaiter)
{
io.vertx.core.net.impl.pool.PoolWaiter v1, v3, v4, v5, v6;
int v7, v8;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
boolean v2;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 := @parameter0: io.vertx.core.net.impl.pool.PoolWaiter;
v2 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: boolean queued>;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next>;
v4 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev>;
v3.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v4;
v5 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev>;
v6 = v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next>;
v5.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v6;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = null;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = null;
v1.<io.vertx.core.net.impl.pool.PoolWaiter: boolean queued> = 0;
v7 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size>;
v8 = v7 - 1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size> = v8;
return 1;
}
java.util.List clear()
{
java.util.function.Consumer v3;
io.vertx.core.net.impl.pool.PoolWaiter v4, v5, v6;
int v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
java.util.ArrayList v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 = new java.util.ArrayList;
v2 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size>;
specialinvoke v1.<java.util.ArrayList: void <init>(int)>(v2);
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters$add__1400: java.util.function.Consumer bootstrap$(java.util.List)>(v1);
virtualinvoke v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: void forEach(java.util.function.Consumer)>(v3);
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size> = 0;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v5 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v6 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter head>;
v5.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter prev> = v6;
v4.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.net.impl.pool.PoolWaiter next> = v6;
return v1;
}
int size()
{
int v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size>;
return v1;
}
public java.util.Iterator iterator()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters$1 v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters;
v1 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters$1;
specialinvoke v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters)>(v0);
return v1;
}
}