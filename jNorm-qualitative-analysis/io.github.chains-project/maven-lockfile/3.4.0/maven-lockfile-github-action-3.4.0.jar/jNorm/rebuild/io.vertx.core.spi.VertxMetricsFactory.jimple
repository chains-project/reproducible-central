public interface  io.vertx.core.spi.VertxMetricsFactory extends java.lang.Object implements io.vertx.core.spi.VertxServiceProvider
{
public void init(io.vertx.core.impl.VertxBuilder)
{
io.vertx.core.spi.VertxMetricsFactory v0;
io.vertx.core.VertxOptions v4, v9;
io.vertx.core.impl.VertxBuilder v1;
io.vertx.core.spi.metrics.VertxMetrics v12, v2;
io.vertx.core.metrics.MetricsOptions v10, v7, v8;
io.vertx.core.json.JsonObject v3, v6;
boolean v11, v5;
v0 := @this: io.vertx.core.spi.VertxMetricsFactory;
v1 := @parameter0: io.vertx.core.impl.VertxBuilder;
v2 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.spi.metrics.VertxMetrics metrics()>();
if v2 != null goto label4;
v3 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.json.JsonObject config()>();
v4 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.VertxOptions options()>();
if v3 == null goto label1;
v5 = virtualinvoke v3.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("metricsOptions");
if v5 == 0 goto label1;
v6 = virtualinvoke v3.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>("metricsOptions");
v7 = interfaceinvoke v0.<io.vertx.core.spi.VertxMetricsFactory: io.vertx.core.metrics.MetricsOptions newOptions(io.vertx.core.json.JsonObject)>(v6);
goto label3;
label1:
v8 = virtualinvoke v4.<io.vertx.core.VertxOptions: io.vertx.core.metrics.MetricsOptions getMetricsOptions()>();
if v8 != null goto label2;
v7 = interfaceinvoke v0.<io.vertx.core.spi.VertxMetricsFactory: io.vertx.core.metrics.MetricsOptions newOptions()>();
goto label3;
label2:
v7 = interfaceinvoke v0.<io.vertx.core.spi.VertxMetricsFactory: io.vertx.core.metrics.MetricsOptions newOptions(io.vertx.core.metrics.MetricsOptions)>(v8);
label3:
staticinvoke <io.vertx.core.impl.launcher.commands.BareCommand: void configureFromSystemProperties(java.lang.Object,java.lang.String)>(v7, "vertx.metrics.options.");
v9 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.VertxOptions options()>();
virtualinvoke v9.<io.vertx.core.VertxOptions: io.vertx.core.VertxOptions setMetricsOptions(io.vertx.core.metrics.MetricsOptions)>(v7);
v10 = virtualinvoke v4.<io.vertx.core.VertxOptions: io.vertx.core.metrics.MetricsOptions getMetricsOptions()>();
v11 = virtualinvoke v10.<io.vertx.core.metrics.MetricsOptions: boolean isEnabled()>();
if v11 == 0 goto label4;
v12 = interfaceinvoke v0.<io.vertx.core.spi.VertxMetricsFactory: io.vertx.core.spi.metrics.VertxMetrics metrics(io.vertx.core.VertxOptions)>(v4);
virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.impl.VertxBuilder metrics(io.vertx.core.spi.metrics.VertxMetrics)>(v12);
label4:
return;
}
public abstract io.vertx.core.spi.metrics.VertxMetrics metrics(io.vertx.core.VertxOptions);
public io.vertx.core.metrics.MetricsOptions newOptions()
{
io.vertx.core.metrics.MetricsOptions v1;
io.vertx.core.spi.VertxMetricsFactory v0;
v0 := @this: io.vertx.core.spi.VertxMetricsFactory;
v1 = new io.vertx.core.metrics.MetricsOptions;
specialinvoke v1.<io.vertx.core.metrics.MetricsOptions: void <init>()>();
return v1;
}
public io.vertx.core.metrics.MetricsOptions newOptions(io.vertx.core.metrics.MetricsOptions)
{
io.vertx.core.metrics.MetricsOptions v1, v3;
io.vertx.core.spi.VertxMetricsFactory v0;
io.vertx.core.json.JsonObject v2;
v0 := @this: io.vertx.core.spi.VertxMetricsFactory;
v1 := @parameter0: io.vertx.core.metrics.MetricsOptions;
v2 = virtualinvoke v1.<io.vertx.core.metrics.MetricsOptions: io.vertx.core.json.JsonObject toJson()>();
v3 = interfaceinvoke v0.<io.vertx.core.spi.VertxMetricsFactory: io.vertx.core.metrics.MetricsOptions newOptions(io.vertx.core.json.JsonObject)>(v2);
return v3;
}
public io.vertx.core.metrics.MetricsOptions newOptions(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.metrics.MetricsOptions v2;
io.vertx.core.spi.VertxMetricsFactory v0;
v0 := @this: io.vertx.core.spi.VertxMetricsFactory;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v2 = new io.vertx.core.metrics.MetricsOptions;
specialinvoke v2.<io.vertx.core.metrics.MetricsOptions: void <init>(io.vertx.core.json.JsonObject)>(v1);
return v2;
}
}