public interface  io.vertx.core.spi.cluster.ClusterManager extends java.lang.Object implements io.vertx.core.spi.VertxServiceProvider
{
public void init(io.vertx.core.impl.VertxBuilder)
{
io.vertx.core.impl.VertxBuilder v1;
io.vertx.core.spi.cluster.ClusterManager v0, v2;
v0 := @this: io.vertx.core.spi.cluster.ClusterManager;
v1 := @parameter0: io.vertx.core.impl.VertxBuilder;
v2 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.spi.cluster.ClusterManager clusterManager()>();
if v2 != null goto label1;
virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.impl.VertxBuilder clusterManager(io.vertx.core.spi.cluster.ClusterManager)>(v0);
label1:
return;
}
public abstract void init(io.vertx.core.Vertx, io.vertx.core.spi.cluster.NodeSelector);
public abstract void getAsyncMap(java.lang.String, io.vertx.core.Promise);
public abstract java.util.Map getSyncMap(java.lang.String);
public abstract void getLockWithTimeout(java.lang.String, long, io.vertx.core.Promise);
public abstract void getCounter(java.lang.String, io.vertx.core.Promise);
public abstract java.lang.String getNodeId();
public abstract java.util.List getNodes();
public abstract void nodeListener(io.vertx.core.spi.cluster.NodeListener);
public abstract void setNodeInfo(io.vertx.core.spi.cluster.NodeInfo, io.vertx.core.Promise);
public abstract io.vertx.core.spi.cluster.NodeInfo getNodeInfo();
public abstract void getNodeInfo(java.lang.String, io.vertx.core.Promise);
public abstract void join(io.vertx.core.Promise);
public abstract void leave(io.vertx.core.Promise);
public abstract boolean isActive();
public abstract void addRegistration(java.lang.String, io.vertx.core.spi.cluster.RegistrationInfo, io.vertx.core.Promise);
public abstract void removeRegistration(java.lang.String, io.vertx.core.spi.cluster.RegistrationInfo, io.vertx.core.Promise);
public abstract void getRegistrations(java.lang.String, io.vertx.core.Promise);
public java.lang.String clusterHost()
{
io.vertx.core.spi.cluster.ClusterManager v0;
v0 := @this: io.vertx.core.spi.cluster.ClusterManager;
return null;
}
public java.lang.String clusterPublicHost()
{
io.vertx.core.spi.cluster.ClusterManager v0;
v0 := @this: io.vertx.core.spi.cluster.ClusterManager;
return null;
}
}