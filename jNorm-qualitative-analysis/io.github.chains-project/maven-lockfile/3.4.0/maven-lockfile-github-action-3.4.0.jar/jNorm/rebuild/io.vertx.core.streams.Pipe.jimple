public interface  io.vertx.core.streams.Pipe extends java.lang.Object
{
public abstract io.vertx.core.streams.Pipe endOnFailure(boolean);
public abstract io.vertx.core.streams.Pipe endOnSuccess(boolean);
public abstract io.vertx.core.streams.Pipe endOnComplete(boolean);
public io.vertx.core.Future 'to'(io.vertx.core.streams.WriteStream)
{
io.vertx.core.streams.Pipe v0;
io.vertx.core.streams.WriteStream v1;
io.vertx.core.Promise v2;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.streams.Pipe;
v1 := @parameter0: io.vertx.core.streams.WriteStream;
v2 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
interfaceinvoke v0.<io.vertx.core.streams.Pipe: void 'to'(io.vertx.core.streams.WriteStream,io.vertx.core.Handler)>(v1, v2);
v3 = interfaceinvoke v2.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v3;
}
public abstract void 'to'(io.vertx.core.streams.WriteStream, io.vertx.core.Handler);
public abstract void close();
}