public interface  io.vertx.ext.auth.User extends java.lang.Object
{
public static io.vertx.ext.auth.User fromName(java.lang.String)
{
io.vertx.ext.auth.User v3;
io.vertx.core.json.JsonObject v1, v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("username", v0);
v3 = staticinvoke <io.vertx.ext.auth.User: io.vertx.ext.auth.User create(io.vertx.core.json.JsonObject)>(v2);
return v3;
}
public static io.vertx.ext.auth.User fromToken(java.lang.String)
{
io.vertx.ext.auth.User v3;
io.vertx.core.json.JsonObject v1, v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("access_token", v0);
v3 = staticinvoke <io.vertx.ext.auth.User: io.vertx.ext.auth.User create(io.vertx.core.json.JsonObject)>(v2);
return v3;
}
public static io.vertx.ext.auth.User create(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v0, v1;
io.vertx.ext.auth.User v2;
v0 := @parameter0: io.vertx.core.json.JsonObject;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
v2 = staticinvoke <io.vertx.ext.auth.User: io.vertx.ext.auth.User create(io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject)>(v0, v1);
return v2;
}
public static io.vertx.ext.auth.User create(io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v0, v1;
io.vertx.ext.auth.impl.UserImpl v2;
v0 := @parameter0: io.vertx.core.json.JsonObject;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = new io.vertx.ext.auth.impl.UserImpl;
specialinvoke v2.<io.vertx.ext.auth.impl.UserImpl: void <init>(io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject)>(v0, v1);
return v2;
}
public java.lang.String subject()
{
io.vertx.core.json.JsonObject v1, v11, v12, v3, v5, v7, v9;
java.lang.String v14, v4, v8;
boolean v10, v13, v2, v6;
io.vertx.ext.auth.User v0;
java.lang.Object v15;
v0 := @this: io.vertx.ext.auth.User;
v1 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("username");
if v2 == 0 goto label1;
v3 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v4 = virtualinvoke v3.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("username");
return v4;
label1:
v5 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v6 = virtualinvoke v5.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("userHandle");
if v6 == 0 goto label2;
v7 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v8 = virtualinvoke v7.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("userHandle");
return v8;
label2:
v9 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v10 = virtualinvoke v9.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("idToken");
if v10 == 0 goto label3;
v11 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v12 = virtualinvoke v11.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>("idToken");
v13 = virtualinvoke v12.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("sub");
if v13 == 0 goto label3;
v14 = virtualinvoke v12.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("sub");
return v14;
label3:
v15 = interfaceinvoke v0.<io.vertx.ext.auth.User: java.lang.Object get(java.lang.String)>("sub");
return v15;
}
public abstract io.vertx.core.json.JsonObject attributes();
public boolean expired()
{
io.vertx.ext.auth.User v0;
int v4;
io.vertx.core.json.JsonObject v1;
java.lang.Integer v2, v3;
boolean v5;
v0 := @this: io.vertx.ext.auth.User;
v1 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
v3 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>("leeway", v2);
v4 = virtualinvoke v3.<java.lang.Integer: int intValue()>();
v5 = interfaceinvoke v0.<io.vertx.ext.auth.User: boolean expired(int)>(v4);
return v5;
}
public boolean expired(int)
{
long v11, v19, v2, v20, v28, v29, v3, v5;
byte v12, v21, v30;
java.lang.Long v10, v16, v17, v18, v25, v26, v27, v8, v9;
int v1;
io.vertx.core.json.JsonObject v14, v15, v23, v24, v6, v7;
boolean v13, v22, v4;
io.vertx.ext.auth.User v0;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: int;
v2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v3 = v2 / 1000L;
v4 = interfaceinvoke v0.<io.vertx.ext.auth.User: boolean containsKey(java.lang.String)>("exp");
if v4 == 0 goto label1;
v5 = v3 - v1;
v6 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v7 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);
v9 = virtualinvoke v7.<io.vertx.core.json.JsonObject: java.lang.Long getLong(java.lang.String,java.lang.Long)>("exp", v8);
v10 = virtualinvoke v6.<io.vertx.core.json.JsonObject: java.lang.Long getLong(java.lang.String,java.lang.Long)>("exp", v9);
v11 = virtualinvoke v10.<java.lang.Long: long longValue()>();
v12 = v5 cmp v11;
if v12 < 0 goto label1;
return 1;
label1:
v13 = interfaceinvoke v0.<io.vertx.ext.auth.User: boolean containsKey(java.lang.String)>("iat");
if v13 == 0 goto label2;
v14 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v15 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);
v17 = virtualinvoke v15.<io.vertx.core.json.JsonObject: java.lang.Long getLong(java.lang.String,java.lang.Long)>("iat", v16);
v18 = virtualinvoke v14.<io.vertx.core.json.JsonObject: java.lang.Long getLong(java.lang.String,java.lang.Long)>("iat", v17);
v19 = virtualinvoke v18.<java.lang.Long: long longValue()>();
v20 = v3 + v1;
v21 = v19 cmp v20;
if v21 <= 0 goto label2;
return 1;
label2:
v22 = interfaceinvoke v0.<io.vertx.ext.auth.User: boolean containsKey(java.lang.String)>("nbf");
if v22 == 0 goto label3;
v23 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v24 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);
v26 = virtualinvoke v24.<io.vertx.core.json.JsonObject: java.lang.Long getLong(java.lang.String,java.lang.Long)>("nbf", v25);
v27 = virtualinvoke v23.<io.vertx.core.json.JsonObject: java.lang.Long getLong(java.lang.String,java.lang.Long)>("nbf", v26);
v28 = virtualinvoke v27.<java.lang.Long: long longValue()>();
v29 = v3 + v1;
v30 = v28 cmp v29;
if v30 <= 0 goto label3;
return 1;
label3:
return 0;
}
public java.lang.Object get(java.lang.String)
{
java.lang.ClassCastException v8;
io.vertx.core.json.JsonObject v11, v13, v15, v17, v2, v4, v5, v7;
java.lang.String v1, v6;
boolean v12, v16, v3, v9;
io.vertx.ext.auth.User v0;
java.lang.Object v10, v14, v18;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v3 = virtualinvoke v2.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("rootClaim");
if v3 == 0 goto label5;
label1:
v4 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v5 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v6 = virtualinvoke v5.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("rootClaim");
v7 = virtualinvoke v4.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>(v6);
label2:
goto label4;
label3:
v8 := @caughtexception;
v7 = null;
label4:
if v7 == null goto label5;
v9 = virtualinvoke v7.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v9 == 0 goto label5;
v10 = virtualinvoke v7.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String)>(v1);
return v10;
label5:
v11 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v12 = virtualinvoke v11.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v12 == 0 goto label6;
v13 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v14 = virtualinvoke v13.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String)>(v1);
return v14;
label6:
v15 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v16 = virtualinvoke v15.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v16 == 0 goto label7;
v17 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v18 = virtualinvoke v17.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String)>(v1);
return v18;
label7:
return null;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
public java.lang.Object getOrDefault(java.lang.String, java.lang.Object)
{
java.lang.ClassCastException v9;
io.vertx.core.json.JsonObject v12, v14, v16, v18, v3, v5, v6, v8;
java.lang.String v1, v7;
boolean v10, v13, v17, v4;
io.vertx.ext.auth.User v0;
java.lang.Object v11, v15, v19, v2;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v4 = virtualinvoke v3.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("rootClaim");
if v4 == 0 goto label5;
label1:
v5 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v6 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v7 = virtualinvoke v6.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("rootClaim");
v8 = virtualinvoke v5.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>(v7);
label2:
goto label4;
label3:
v9 := @caughtexception;
v8 = null;
label4:
if v8 == null goto label5;
v10 = virtualinvoke v8.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v10 == 0 goto label5;
v11 = virtualinvoke v8.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String)>(v1);
return v11;
label5:
v12 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v13 = virtualinvoke v12.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v13 == 0 goto label6;
v14 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v15 = virtualinvoke v14.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String)>(v1);
return v15;
label6:
v16 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v17 = virtualinvoke v16.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v17 == 0 goto label7;
v18 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v19 = virtualinvoke v18.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String)>(v1);
return v19;
label7:
return v2;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
public boolean containsKey(java.lang.String)
{
java.lang.ClassCastException v8;
io.vertx.ext.auth.User v0;
io.vertx.core.json.JsonObject v10, v12, v2, v4, v5, v7;
java.lang.String v1, v6;
boolean v11, v13, v14, v3, v9;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v3 = virtualinvoke v2.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("rootClaim");
if v3 == 0 goto label5;
label1:
v4 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v5 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v6 = virtualinvoke v5.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("rootClaim");
v7 = virtualinvoke v4.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>(v6);
label2:
goto label4;
label3:
v8 := @caughtexception;
v7 = null;
label4:
if v7 == null goto label5;
v9 = virtualinvoke v7.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v9 == 0 goto label5;
return 1;
label5:
v10 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject attributes()>();
v11 = virtualinvoke v10.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v11 != 0 goto label6;
v12 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v13 = virtualinvoke v12.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>(v1);
if v13 == 0 goto label7;
label6:
v14 = 1;
goto label8;
label7:
v14 = 0;
label8:
return v14;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
public io.vertx.ext.auth.authorization.Authorizations authorizations()
{
io.vertx.ext.auth.User v0;
io.vertx.ext.auth.authorization.impl.AuthorizationsImpl v1;
v0 := @this: io.vertx.ext.auth.User;
v1 = new io.vertx.ext.auth.authorization.impl.AuthorizationsImpl;
specialinvoke v1.<io.vertx.ext.auth.authorization.impl.AuthorizationsImpl: void <init>()>();
return v1;
}
public abstract io.vertx.ext.auth.User isAuthorized(io.vertx.ext.auth.authorization.Authorization, io.vertx.core.Handler);
public io.vertx.ext.auth.User isAuthorized(java.lang.String, io.vertx.core.Handler)
{
io.vertx.ext.auth.User v0, v6;
io.vertx.ext.auth.authorization.Authorization v5;
java.lang.String v1, v4;
io.vertx.core.Handler v2;
boolean v3;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.Handler;
v3 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>("role:");
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(5);
v5 = staticinvoke <io.vertx.ext.auth.authorization.RoleBasedAuthorization: io.vertx.ext.auth.authorization.RoleBasedAuthorization create(java.lang.String)>(v4);
goto label2;
label1:
v5 = staticinvoke <io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization: io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization create(java.lang.String)>(v1);
label2:
v6 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.ext.auth.User isAuthorized(io.vertx.ext.auth.authorization.Authorization,io.vertx.core.Handler)>(v5, v2);
return v6;
}
public io.vertx.core.Future isAuthorized(io.vertx.ext.auth.authorization.Authorization)
{
io.vertx.ext.auth.User v0;
io.vertx.core.Promise v2;
io.vertx.ext.auth.authorization.Authorization v1;
io.vertx.core.Future v3;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: io.vertx.ext.auth.authorization.Authorization;
v2 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.ext.auth.User isAuthorized(io.vertx.ext.auth.authorization.Authorization,io.vertx.core.Handler)>(v1, v2);
v3 = interfaceinvoke v2.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v3;
}
public io.vertx.core.Future isAuthorized(java.lang.String)
{
io.vertx.ext.auth.User v0;
io.vertx.ext.auth.authorization.Authorization v4;
java.lang.String v1, v3;
io.vertx.core.Future v5;
boolean v2;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>("role:");
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(5);
v4 = staticinvoke <io.vertx.ext.auth.authorization.RoleBasedAuthorization: io.vertx.ext.auth.authorization.RoleBasedAuthorization create(java.lang.String)>(v3);
goto label2;
label1:
v4 = staticinvoke <io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization: io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization create(java.lang.String)>(v1);
label2:
v5 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.Future isAuthorized(io.vertx.ext.auth.authorization.Authorization)>(v4);
return v5;
}
public io.vertx.ext.auth.User clearCache()
{
io.vertx.ext.auth.User v0;
io.vertx.ext.auth.authorization.Authorizations v1;
v0 := @this: io.vertx.ext.auth.User;
v1 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.ext.auth.authorization.Authorizations authorizations()>();
interfaceinvoke v1.<io.vertx.ext.auth.authorization.Authorizations: io.vertx.ext.auth.authorization.Authorizations clear()>();
return v0;
}
public abstract io.vertx.core.json.JsonObject principal();
public abstract void setAuthProvider(io.vertx.ext.auth.AuthProvider);
public abstract io.vertx.ext.auth.User merge(io.vertx.ext.auth.User);
public boolean hasAmr(java.lang.String)
{
io.vertx.core.json.JsonArray v5;
io.vertx.ext.auth.User v0;
io.vertx.core.json.JsonObject v2, v4;
java.lang.String v1;
boolean v3, v6;
v0 := @this: io.vertx.ext.auth.User;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v3 = virtualinvoke v2.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("amr");
if v3 == 0 goto label1;
v4 = interfaceinvoke v0.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v5 = virtualinvoke v4.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonArray getJsonArray(java.lang.String)>("amr");
v6 = virtualinvoke v5.<io.vertx.core.json.JsonArray: boolean contains(java.lang.Object)>(v1);
return v6;
label1:
return 0;
}
}