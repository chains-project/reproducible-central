public class io.vertx.ext.auth.authentication.TokenCredentials extends java.lang.Object implements io.vertx.ext.auth.authentication.Credentials
{
private java.lang.String token;
private java.util.List scopes;
public void <init>()
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void <init>(java.lang.String)
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.lang.String v1;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.lang.String token> = v1;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.ext.auth.authentication.TokenCredentials v0;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <io.vertx.ext.auth.authentication.TokenCredentialsConverter: void fromJson(java.lang.Iterable,io.vertx.ext.auth.authentication.TokenCredentials)>(v1, v0);
return;
}
public java.lang.String getToken()
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.lang.String v1;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.lang.String token>;
return v1;
}
public io.vertx.ext.auth.authentication.TokenCredentials setToken(java.lang.String)
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.lang.String v1;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.lang.String token> = v1;
return v0;
}
public java.util.List getScopes()
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.util.List v1;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.util.List scopes>;
return v1;
}
public io.vertx.ext.auth.authentication.TokenCredentials setScopes(java.util.List)
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.util.List v1;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: java.util.List;
v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.util.List scopes> = v1;
return v0;
}
public io.vertx.ext.auth.authentication.TokenCredentials addScope(java.lang.String)
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.util.List v2, v4;
java.lang.String v1;
java.util.ArrayList v3;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.util.List scopes>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.util.List scopes> = v3;
label1:
v4 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.util.List scopes>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public void checkValid(java.lang.Object) throws io.vertx.ext.auth.authentication.CredentialValidationException
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
io.vertx.ext.auth.authentication.CredentialValidationException v5;
int v4;
java.lang.Object v1;
java.lang.String v2, v3;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.lang.String token>;
if v2 == null goto label1;
v3 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.lang.String token>;
v4 = virtualinvoke v3.<java.lang.String: int length()>();
if v4 != 0 goto label2;
label1:
v5 = new io.vertx.ext.auth.authentication.CredentialValidationException;
specialinvoke v5.<io.vertx.ext.auth.authentication.CredentialValidationException: void <init>(java.lang.String)>("token cannot be null or empty");
throw v5;
label2:
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.json.JsonObject v1;
io.vertx.ext.auth.authentication.TokenCredentials v0;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.ext.auth.authentication.TokenCredentialsConverter: void toJson(io.vertx.ext.auth.authentication.TokenCredentials,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
public java.lang.String toString()
{
io.vertx.core.json.JsonObject v1;
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.lang.String v2;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 = virtualinvoke v0.<io.vertx.ext.auth.authentication.TokenCredentials: io.vertx.core.json.JsonObject toJson()>();
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.String encode()>();
return v2;
}
public io.vertx.ext.auth.authentication.TokenCredentials applyHttpChallenge(java.lang.String, io.vertx.core.http.HttpMethod, java.lang.String, java.lang.Integer, java.lang.String) throws io.vertx.ext.auth.authentication.CredentialValidationException
{
java.lang.IllegalArgumentException v10;
java.lang.Integer v4;
io.vertx.ext.auth.authentication.TokenCredentials v0;
io.vertx.core.http.HttpMethod v2;
int v6;
java.lang.String v1, v3, v5, v7, v8;
boolean v9;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.http.HttpMethod;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Integer;
v5 := @parameter4: java.lang.String;
if v1 == null goto label1;
v6 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(32);
v7 = "Bearer";
v8 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v6);
v9 = virtualinvoke v7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v8);
if v9 != 0 goto label1;
v10 = new java.lang.IllegalArgumentException;
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only \'Bearer\' auth-scheme is supported");
throw v10;
label1:
virtualinvoke v0.<io.vertx.ext.auth.authentication.TokenCredentials: void checkValid(java.lang.Object)>(null);
return v0;
}
public java.lang.String toHttpAuthorization()
{
io.vertx.ext.auth.authentication.TokenCredentials v0;
java.lang.String v1, v2;
v0 := @this: io.vertx.ext.auth.authentication.TokenCredentials;
v1 = v0.<io.vertx.ext.auth.authentication.TokenCredentials: java.lang.String token>;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Bearer \u0001");
return v2;
}
}