public class io.vertx.ext.auth.authorization.impl.AndAuthorizationConverter extends java.lang.Object
{
public static final java.lang.String TYPE;
public void <init>()
{
io.vertx.ext.auth.authorization.impl.AndAuthorizationConverter v0;
v0 := @this: io.vertx.ext.auth.authorization.impl.AndAuthorizationConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.AndAuthorization) throws java.lang.IllegalArgumentException
{
io.vertx.ext.auth.authorization.AndAuthorization v0;
java.util.Iterator v4;
io.vertx.core.json.JsonArray v2;
java.util.List v3;
io.vertx.core.json.JsonObject v1, v7;
java.lang.Object v6;
boolean v5;
v0 := @parameter0: io.vertx.ext.auth.authorization.AndAuthorization;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("type", "and");
v2 = new io.vertx.core.json.JsonArray;
specialinvoke v2.<io.vertx.core.json.JsonArray: void <init>()>();
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("authorizations", v2);
v3 = interfaceinvoke v0.<io.vertx.ext.auth.authorization.AndAuthorization: java.util.List getAuthorizations()>();
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = staticinvoke <io.vertx.ext.auth.authorization.impl.AuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.Authorization)>(v6);
virtualinvoke v2.<io.vertx.core.json.JsonArray: io.vertx.core.json.JsonArray add(java.lang.Object)>(v7);
goto label1;
label2:
return v1;
}
public static io.vertx.ext.auth.authorization.AndAuthorization decode(io.vertx.core.json.JsonObject) throws java.lang.IllegalArgumentException
{
io.vertx.core.json.JsonArray v2;
io.vertx.ext.auth.authorization.AndAuthorization v1;
io.vertx.ext.auth.authorization.Authorization v6;
int v3, v4;
io.vertx.core.json.JsonObject v0, v5;
v0 := @parameter0: io.vertx.core.json.JsonObject;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = staticinvoke <io.vertx.ext.auth.authorization.AndAuthorization: io.vertx.ext.auth.authorization.AndAuthorization create()>();
v2 = virtualinvoke v0.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonArray getJsonArray(java.lang.String)>("authorizations");
v3 = 0;
label1:
v4 = virtualinvoke v2.<io.vertx.core.json.JsonArray: int size()>();
if v3 >= v4 goto label2;
v5 = virtualinvoke v2.<io.vertx.core.json.JsonArray: io.vertx.core.json.JsonObject getJsonObject(int)>(v3);
v6 = staticinvoke <io.vertx.ext.auth.authorization.impl.AuthorizationConverter: io.vertx.ext.auth.authorization.Authorization decode(io.vertx.core.json.JsonObject)>(v5);
interfaceinvoke v1.<io.vertx.ext.auth.authorization.AndAuthorization: io.vertx.ext.auth.authorization.AndAuthorization addAuthorization(io.vertx.ext.auth.authorization.Authorization)>(v6);
v3 = v3 + 1;
goto label1;
label2:
return v1;
}
}