public class io.vertx.ext.auth.impl.asn.ASN1$ASN extends java.lang.Object
{
public final io.vertx.ext.auth.impl.asn.ASN1$ASNTag tag;
public final java.util.List value;
public final io.vertx.ext.auth.impl.asn.ASN1$ASNLength length;
private void <init>(io.vertx.ext.auth.impl.asn.ASN1$ASNTag, io.vertx.ext.auth.impl.asn.ASN1$ASNLength, java.util.List)
{
java.util.List v3;
io.vertx.ext.auth.impl.asn.ASN1$ASNTag v1;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
io.vertx.ext.auth.impl.asn.ASN1$ASNLength v2;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: io.vertx.ext.auth.impl.asn.ASN1$ASNTag;
v2 := @parameter1: io.vertx.ext.auth.impl.asn.ASN1$ASNLength;
v3 := @parameter2: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: io.vertx.ext.auth.impl.asn.ASN1$ASNTag tag> = v1;
v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: io.vertx.ext.auth.impl.asn.ASN1$ASNLength length> = v2;
v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: java.util.List value> = v3;
return;
}
public byte[] binary(int)
{
java.util.List v2;
int v1;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
java.lang.Object v3;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: java.util.List value>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public int integer(int)
{
byte[] v2;
java.lang.IllegalArgumentException v4;
short v10;
byte v8;
int v1, v3, v5, v6, v7, v9;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: byte[] binary(int)>(v1);
v3 = lengthof v2;
if v3 <= 4 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("integer too long");
throw v4;
label1:
v5 = 0;
v6 = lengthof v2;
v7 = 0;
label2:
if v7 >= v6 goto label3;
v8 = v2[v7];
v9 = v5 << 8;
v10 = v8 & 255;
v5 = v9 | v10;
v7 = v7 + 1;
goto label2;
label3:
return v5;
}
public java.math.BigInteger bigInteger(int)
{
byte[] v3;
int v1;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
java.math.BigInteger v2;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 = new java.math.BigInteger;
v3 = virtualinvoke v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: byte[] binary(int)>(v1);
specialinvoke v2.<java.math.BigInteger: void <init>(byte[])>(v3);
return v2;
}
public io.vertx.ext.auth.impl.asn.ASN1$ASN object(int)
{
java.util.List v2;
int v1;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
java.lang.Object v3;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: java.util.List value>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public io.vertx.ext.auth.impl.asn.ASN1$ASN object(int, int)
{
java.lang.ClassCastException v6;
java.util.List v3;
int v1, v2;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
java.lang.Object v4;
java.lang.String v7;
boolean v5;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: java.util.List value>;
v4 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v1);
v5 = virtualinvoke v4.<io.vertx.ext.auth.impl.asn.ASN1$ASN: boolean is(int)>(v2);
if v5 != 0 goto label1;
v6 = new java.lang.ClassCastException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Object at index(\u0001) is not of type: \u0001");
specialinvoke v6.<java.lang.ClassCastException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
return v4;
}
public java.lang.String oid(int)
{
byte[] v3;
byte v19, v7;
int v1, v10, v11, v16, v17, v18, v20, v21, v5, v6, v8, v9;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0, v2;
java.lang.String v22;
java.lang.StringBuilder v12, v13, v14, v15, v4;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: io.vertx.ext.auth.impl.asn.ASN1$ASN object(int,int)>(v1, 6);
v3 = virtualinvoke v2.<io.vertx.ext.auth.impl.asn.ASN1$ASN: byte[] binary(int)>(0);
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
v5 = 0;
label1:
v6 = lengthof v3;
if v5 >= v6 goto label5;
v7 = v3[v5];
v8 = staticinvoke <java.lang.Byte: int toUnsignedInt(byte)>(v7);
if v5 != 0 goto label2;
v9 = v8 % 40;
v10 = v8 - v9;
v11 = v10 / 40;
v12 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v11);
v13 = virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v9);
goto label4;
label2:
if v8 >= 128 goto label3;
v14 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v8);
goto label4;
label3:
v15 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
v16 = v8 - 128;
v17 = v16 * 128;
v18 = v5 + 1;
v19 = v3[v18];
v20 = staticinvoke <java.lang.Byte: int toUnsignedInt(byte)>(v19);
v21 = v17 + v20;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v21);
v5 = v5 + 1;
label4:
v5 = v5 + 1;
goto label1;
label5:
v22 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
return v22;
}
public int length()
{
int v2;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
java.util.List v1;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: java.util.List value>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public boolean is(int)
{
int v1, v5, v6, v9;
io.vertx.ext.auth.impl.asn.ASN1$ASNTag v2, v4, v8;
io.vertx.ext.auth.impl.asn.ASN1$ASN v0;
boolean v10, v3, v7;
v0 := @this: io.vertx.ext.auth.impl.asn.ASN1$ASN;
v1 := @parameter0: int;
v2 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: io.vertx.ext.auth.impl.asn.ASN1$ASNTag tag>;
v3 = v2.<io.vertx.ext.auth.impl.asn.ASN1$ASNTag: boolean constructed>;
if v3 == 0 goto label3;
v4 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: io.vertx.ext.auth.impl.asn.ASN1$ASNTag tag>;
v5 = v4.<io.vertx.ext.auth.impl.asn.ASN1$ASNTag: int type>;
v6 = 32 + v1;
if v5 != v6 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
label3:
v8 = v0.<io.vertx.ext.auth.impl.asn.ASN1$ASN: io.vertx.ext.auth.impl.asn.ASN1$ASNTag tag>;
v9 = v8.<io.vertx.ext.auth.impl.asn.ASN1$ASNTag: int type>;
if v9 != v1 goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
}
}