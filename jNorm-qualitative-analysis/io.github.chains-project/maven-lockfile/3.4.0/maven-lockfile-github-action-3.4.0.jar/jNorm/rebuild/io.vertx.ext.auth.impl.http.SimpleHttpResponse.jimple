public final class io.vertx.ext.auth.impl.http.SimpleHttpResponse extends java.lang.Object
{
private final int statusCode;
private final io.vertx.core.MultiMap headers;
private final io.vertx.core.buffer.Buffer body;
public void <init>(int, io.vertx.core.MultiMap, io.vertx.core.buffer.Buffer)
{
io.vertx.core.buffer.Buffer v3;
int v1;
io.vertx.core.MultiMap v2;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 := @parameter0: int;
v2 := @parameter1: io.vertx.core.MultiMap;
v3 := @parameter2: io.vertx.core.buffer.Buffer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.MultiMap headers> = v2;
v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.buffer.Buffer body> = v3;
v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: int statusCode> = v1;
return;
}
public int statusCode()
{
int v1;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: int statusCode>;
return v1;
}
public io.vertx.core.MultiMap headers()
{
io.vertx.core.MultiMap v1;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.MultiMap headers>;
return v1;
}
public java.lang.String getHeader(java.lang.String)
{
io.vertx.core.MultiMap v2, v3;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
java.lang.String v1, v4;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.MultiMap headers>;
if v2 == null goto label1;
v3 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.MultiMap headers>;
v4 = interfaceinvoke v3.<io.vertx.core.MultiMap: java.lang.String get(java.lang.String)>(v1);
return v4;
label1:
return null;
}
public io.vertx.core.buffer.Buffer body()
{
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
io.vertx.core.buffer.Buffer v1;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.buffer.Buffer body>;
return v1;
}
public io.vertx.core.json.JsonObject jsonObject()
{
io.vertx.core.buffer.Buffer v1, v3;
io.vertx.core.json.JsonObject v2;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.buffer.Buffer body>;
if v1 != null goto label1;
return null;
label1:
v2 = new io.vertx.core.json.JsonObject;
v3 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.buffer.Buffer body>;
specialinvoke v2.<io.vertx.core.json.JsonObject: void <init>(io.vertx.core.buffer.Buffer)>(v3);
return v2;
}
public io.vertx.core.json.JsonArray jsonArray()
{
io.vertx.core.json.JsonArray v2;
io.vertx.core.buffer.Buffer v1, v3;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.buffer.Buffer body>;
if v1 != null goto label1;
return null;
label1:
v2 = new io.vertx.core.json.JsonArray;
v3 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.buffer.Buffer body>;
specialinvoke v2.<io.vertx.core.json.JsonArray: void <init>(io.vertx.core.buffer.Buffer)>(v3);
return v2;
}
public boolean is(java.lang.String)
{
io.vertx.core.MultiMap v2, v3;
io.vertx.ext.auth.impl.http.SimpleHttpResponse v0;
int v5, v6;
java.lang.String v1, v4, v7;
boolean v8;
v0 := @this: io.vertx.ext.auth.impl.http.SimpleHttpResponse;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.MultiMap headers>;
if v2 == null goto label2;
v3 = v0.<io.vertx.ext.auth.impl.http.SimpleHttpResponse: io.vertx.core.MultiMap headers>;
v4 = interfaceinvoke v3.<io.vertx.core.MultiMap: java.lang.String get(java.lang.String)>("Content-Type");
if v4 == null goto label2;
v5 = virtualinvoke v4.<java.lang.String: int indexOf(int)>(59);
v6 = (int) -1;
if v5 == v6 goto label1;
v7 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
v4 = virtualinvoke v7.<java.lang.String: java.lang.String trim()>();
label1:
v8 = virtualinvoke v1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v4);
return v8;
label2:
return 0;
}
}