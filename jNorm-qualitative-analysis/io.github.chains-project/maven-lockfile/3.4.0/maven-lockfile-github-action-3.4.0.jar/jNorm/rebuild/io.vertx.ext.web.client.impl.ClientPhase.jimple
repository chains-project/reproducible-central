public final enum class io.vertx.ext.web.client.impl.ClientPhase extends java.lang.Enum
{
public static final enum io.vertx.ext.web.client.impl.ClientPhase PREPARE_REQUEST;
public static final enum io.vertx.ext.web.client.impl.ClientPhase CREATE_REQUEST;
public static final enum io.vertx.ext.web.client.impl.ClientPhase SEND_REQUEST;
public static final enum io.vertx.ext.web.client.impl.ClientPhase FOLLOW_REDIRECT;
public static final enum io.vertx.ext.web.client.impl.ClientPhase RECEIVE_RESPONSE;
public static final enum io.vertx.ext.web.client.impl.ClientPhase DISPATCH_RESPONSE;
public static final enum io.vertx.ext.web.client.impl.ClientPhase FAILURE;
private static final io.vertx.ext.web.client.impl.ClientPhase[] $VALUES;
public static io.vertx.ext.web.client.impl.ClientPhase[] values()
{
java.lang.Object v1;
io.vertx.ext.web.client.impl.ClientPhase[] v0;
v0 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.vertx.ext.web.client.impl.ClientPhase valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/vertx/ext/web/client/impl/ClientPhase;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
io.vertx.ext.web.client.impl.ClientPhase v0;
v0 := @this: io.vertx.ext.web.client.impl.ClientPhase;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static io.vertx.ext.web.client.impl.ClientPhase[] $values()
{
io.vertx.ext.web.client.impl.ClientPhase v1, v2, v3, v4, v5, v6, v7;
io.vertx.ext.web.client.impl.ClientPhase[] v0;
v0 = newarray (io.vertx.ext.web.client.impl.ClientPhase)[7];
v1 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase PREPARE_REQUEST>;
v0[0] = v1;
v2 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase CREATE_REQUEST>;
v0[1] = v2;
v3 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase SEND_REQUEST>;
v0[2] = v3;
v4 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FOLLOW_REDIRECT>;
v0[3] = v4;
v5 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase RECEIVE_RESPONSE>;
v0[4] = v5;
v6 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase DISPATCH_RESPONSE>;
v0[5] = v6;
v7 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FAILURE>;
v0[6] = v7;
return v0;
}
static void <clinit>()
{
io.vertx.ext.web.client.impl.ClientPhase v0, v1, v2, v3, v4, v5, v6;
io.vertx.ext.web.client.impl.ClientPhase[] v7;
v0 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v0.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("PREPARE_REQUEST", 0);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase PREPARE_REQUEST> = v0;
v1 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v1.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("CREATE_REQUEST", 1);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase CREATE_REQUEST> = v1;
v2 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v2.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("SEND_REQUEST", 2);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase SEND_REQUEST> = v2;
v3 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v3.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("FOLLOW_REDIRECT", 3);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FOLLOW_REDIRECT> = v3;
v4 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v4.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("RECEIVE_RESPONSE", 4);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase RECEIVE_RESPONSE> = v4;
v5 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v5.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("DISPATCH_RESPONSE", 5);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase DISPATCH_RESPONSE> = v5;
v6 = new io.vertx.ext.web.client.impl.ClientPhase;
specialinvoke v6.<io.vertx.ext.web.client.impl.ClientPhase: void <init>(java.lang.String,int)>("FAILURE", 6);
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FAILURE> = v6;
v7 = staticinvoke <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase[] $values()>();
<io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase[] $VALUES> = v7;
return;
}
}