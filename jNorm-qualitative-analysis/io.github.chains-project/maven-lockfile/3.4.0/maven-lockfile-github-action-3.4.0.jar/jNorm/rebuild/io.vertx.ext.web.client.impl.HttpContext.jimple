public class io.vertx.ext.web.client.impl.HttpContext extends java.lang.Object
{
private final io.vertx.core.Handler handler;
private final io.vertx.core.http.impl.HttpClientInternal client;
private final io.vertx.ext.web.client.WebClientOptions options;
private final java.util.List interceptors;
private io.vertx.core.Context context;
private io.vertx.ext.web.client.impl.HttpRequestImpl request;
private java.lang.Object body;
private java.lang.String contentType;
private java.util.Map attrs;
private int interceptorIdx;
private boolean invoking;
private boolean invokeNext;
private io.vertx.ext.web.client.impl.ClientPhase phase;
private io.vertx.core.http.RequestOptions requestOptions;
private io.vertx.core.http.HttpClientRequest clientRequest;
private io.vertx.core.http.HttpClientResponse clientResponse;
private io.vertx.core.Promise requestPromise;
private io.vertx.ext.web.client.HttpResponse response;
private java.lang.Throwable failure;
private int redirects;
private java.util.List redirectedLocations;
private io.vertx.ext.web.client.spi.CacheStore privateCacheStore;
void <init>(io.vertx.core.http.impl.HttpClientInternal, io.vertx.ext.web.client.WebClientOptions, java.util.List, io.vertx.core.Handler)
{
io.vertx.ext.web.client.WebClientOptions v2;
java.util.List v3, v5;
io.vertx.core.http.impl.HttpClientInternal v1;
io.vertx.core.Handler v4;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.core.http.impl.HttpClientInternal;
v2 := @parameter1: io.vertx.ext.web.client.WebClientOptions;
v3 := @parameter2: java.util.List;
v4 := @parameter3: io.vertx.core.Handler;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List redirectedLocations> = v5;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Handler handler> = v4;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.impl.HttpClientInternal client> = v1;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.WebClientOptions options> = v2;
v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List interceptors> = v3;
return;
}
public io.vertx.ext.web.client.impl.HttpContext duplicate()
{
io.vertx.ext.web.client.WebClientOptions v3;
java.util.List v4;
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.Handler v5;
io.vertx.ext.web.client.impl.HttpContext v0, v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = new io.vertx.ext.web.client.impl.HttpContext;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.impl.HttpClientInternal client>;
v3 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.WebClientOptions options>;
v4 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List interceptors>;
v5 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Handler handler>;
specialinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: void <init>(io.vertx.core.http.impl.HttpClientInternal,io.vertx.ext.web.client.WebClientOptions,java.util.List,io.vertx.core.Handler)>(v2, v3, v4, v5);
return v1;
}
public io.vertx.core.http.HttpClientRequest clientRequest()
{
io.vertx.core.http.HttpClientRequest v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientRequest clientRequest>;
return v1;
}
public io.vertx.core.http.HttpClientResponse clientResponse()
{
io.vertx.core.http.HttpClientResponse v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientResponse clientResponse>;
return v1;
}
public io.vertx.ext.web.client.impl.ClientPhase phase()
{
io.vertx.ext.web.client.impl.ClientPhase v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest request()
{
io.vertx.ext.web.client.impl.HttpRequestImpl v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
return v1;
}
public io.vertx.core.http.RequestOptions requestOptions()
{
io.vertx.core.http.RequestOptions v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions>;
return v1;
}
public void setRequestOptions(io.vertx.core.http.RequestOptions)
{
io.vertx.core.http.RequestOptions v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions> = v1;
return;
}
public io.vertx.ext.web.client.HttpResponse response()
{
io.vertx.ext.web.client.HttpResponse v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpResponse response>;
return v1;
}
public io.vertx.ext.web.client.impl.HttpContext response(io.vertx.ext.web.client.HttpResponse)
{
io.vertx.ext.web.client.HttpResponse v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.ext.web.client.HttpResponse;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpResponse response> = v1;
return v0;
}
public int redirects()
{
int v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: int redirects>;
return v1;
}
public io.vertx.ext.web.client.impl.HttpContext redirects(int)
{
int v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: int;
v0.<io.vertx.ext.web.client.impl.HttpContext: int redirects> = v1;
return v0;
}
public java.lang.String contentType()
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType>;
return v1;
}
public java.lang.Object body()
{
java.lang.Object v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
return v1;
}
public java.lang.Throwable failure()
{
java.lang.Throwable v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Throwable failure>;
return v1;
}
public java.util.List getRedirectedLocations()
{
java.util.List v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List redirectedLocations>;
return v1;
}
public io.vertx.ext.web.client.spi.CacheStore privateCacheStore()
{
io.vertx.ext.web.client.spi.CacheStore v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.spi.CacheStore privateCacheStore>;
return v1;
}
public io.vertx.ext.web.client.impl.HttpContext privateCacheStore(io.vertx.ext.web.client.spi.CacheStore)
{
io.vertx.ext.web.client.spi.CacheStore v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.ext.web.client.spi.CacheStore;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.spi.CacheStore privateCacheStore> = v1;
return v0;
}
public void prepareRequest(io.vertx.ext.web.client.HttpRequest, java.lang.String, java.lang.Object)
{
java.lang.Object v3;
java.lang.String v2;
io.vertx.ext.web.client.HttpRequest v1;
io.vertx.ext.web.client.impl.ClientPhase v4;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.ext.web.client.HttpRequest;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request> = v1;
v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType> = v2;
v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body> = v3;
v4 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase PREPARE_REQUEST>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v4);
return;
}
public void createRequest(io.vertx.core.http.RequestOptions)
{
io.vertx.core.http.RequestOptions v1;
io.vertx.ext.web.client.impl.ClientPhase v2;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions> = v1;
v2 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase CREATE_REQUEST>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v2);
return;
}
public void sendRequest(io.vertx.core.http.HttpClientRequest)
{
io.vertx.core.http.HttpClientRequest v1;
io.vertx.ext.web.client.impl.ClientPhase v2;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.core.http.HttpClientRequest;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientRequest clientRequest> = v1;
v2 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase SEND_REQUEST>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v2);
return;
}
private void handleFollowRedirect()
{
io.vertx.ext.web.client.impl.ClientPhase v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase CREATE_REQUEST>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v1);
return;
}
public void receiveResponse(io.vertx.core.http.HttpClientResponse)
{
java.util.function.Function v12;
io.vertx.ext.web.client.impl.ClientPhase v21;
java.util.ArrayList v16;
io.vertx.core.http.HttpClientResponse v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v3;
int v10, v2, v7, v8, v9;
io.vertx.core.http.HttpClientOptions v6;
java.lang.String v19;
boolean v15, v4;
io.vertx.core.http.impl.HttpClientInternal v11, v5;
java.lang.CharSequence v18;
java.util.List v14, v17;
java.lang.Object v13;
io.vertx.core.Handler v20;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.core.http.HttpClientResponse;
v2 = interfaceinvoke v1.<io.vertx.core.http.HttpClientResponse: int statusCode()>();
v3 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
v4 = virtualinvoke v3.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects()>();
if v4 == 0 goto label1;
v5 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.impl.HttpClientInternal client>;
v6 = interfaceinvoke v5.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.http.HttpClientOptions options()>();
v7 = virtualinvoke v6.<io.vertx.core.http.HttpClientOptions: int getMaxRedirects()>();
goto label2;
label1:
v7 = 0;
label2:
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientResponse clientResponse> = v1;
v8 = v0.<io.vertx.ext.web.client.impl.HttpContext: int redirects>;
if v8 >= v7 goto label4;
if v2 < 300 goto label4;
if v2 >= 400 goto label4;
v9 = v0.<io.vertx.ext.web.client.impl.HttpContext: int redirects>;
v10 = v9 + 1;
v0.<io.vertx.ext.web.client.impl.HttpContext: int redirects> = v10;
v11 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.impl.HttpClientInternal client>;
v12 = interfaceinvoke v11.<io.vertx.core.http.impl.HttpClientInternal: java.util.function.Function redirectHandler()>();
v13 = interfaceinvoke v12.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
if v13 == null goto label4;
v14 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List redirectedLocations>;
v15 = interfaceinvoke v14.<java.util.List: boolean isEmpty()>();
if v15 == 0 goto label3;
v16 = new java.util.ArrayList;
specialinvoke v16.<java.util.ArrayList: void <init>()>();
v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List redirectedLocations> = v16;
label3:
v17 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List redirectedLocations>;
v18 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence LOCATION>;
v19 = interfaceinvoke v1.<io.vertx.core.http.HttpClientResponse: java.lang.String getHeader(java.lang.CharSequence)>(v18);
interfaceinvoke v17.<java.util.List: boolean add(java.lang.Object)>(v19);
v20 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_receiveResponse_0__800: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v0);
interfaceinvoke v13.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v20);
return;
label4:
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientResponse clientResponse> = v1;
v21 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase RECEIVE_RESPONSE>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v21);
return;
}
public void dispatchResponse(io.vertx.ext.web.client.HttpResponse)
{
io.vertx.ext.web.client.HttpResponse v1;
io.vertx.ext.web.client.impl.ClientPhase v2;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.ext.web.client.HttpResponse;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpResponse response> = v1;
v2 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase DISPATCH_RESPONSE>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v2);
return;
}
public boolean fail(java.lang.Throwable)
{
java.lang.Throwable v1;
io.vertx.ext.web.client.impl.ClientPhase v2, v3, v4;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase>;
v3 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FAILURE>;
if v2 != v3 goto label1;
return 0;
label1:
v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Throwable failure> = v1;
v4 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FAILURE>;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void fire(io.vertx.ext.web.client.impl.ClientPhase)>(v4);
return 1;
}
private void fire(io.vertx.ext.web.client.impl.ClientPhase)
{
boolean v2;
io.vertx.ext.web.client.impl.ClientPhase v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: io.vertx.ext.web.client.impl.ClientPhase;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase> = v1;
v0.<io.vertx.ext.web.client.impl.HttpContext: int interceptorIdx> = 0;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invoking>;
if v2 == 0 goto label1;
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invokeNext> = 1;
goto label2;
label1:
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void next()>();
label2:
return;
}
public void next()
{
java.lang.Throwable v12;
java.lang.Exception v10;
io.vertx.ext.web.client.impl.ClientPhase v11;
java.util.List v3, v5;
int v2, v4, v6, v8, v9;
java.lang.Object v7;
boolean v1, v13;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invoking>;
if v1 == 0 goto label01;
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invokeNext> = 1;
goto label10;
label01:
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: int interceptorIdx>;
v3 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List interceptors>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 >= v4 goto label09;
v5 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.List interceptors>;
v6 = v0.<io.vertx.ext.web.client.impl.HttpContext: int interceptorIdx>;
v7 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v6);
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invoking> = 1;
v8 = v0.<io.vertx.ext.web.client.impl.HttpContext: int interceptorIdx>;
v9 = v8 + 1;
v0.<io.vertx.ext.web.client.impl.HttpContext: int interceptorIdx> = v9;
label02:
interfaceinvoke v7.<io.vertx.core.Handler: void handle(java.lang.Object)>(v0);
label03:
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invoking> = 0;
goto label07;
label04:
v10 := @caughtexception;
v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Throwable failure> = v10;
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invokeNext> = 0;
v11 = <io.vertx.ext.web.client.impl.ClientPhase: io.vertx.ext.web.client.impl.ClientPhase FAILURE>;
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase> = v11;
label05:
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invoking> = 0;
goto label09;
label06:
v12 := @caughtexception;
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invoking> = 0;
throw v12;
label07:
v13 = v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invokeNext>;
if v13 != 0 goto label08;
return;
label08:
v0.<io.vertx.ext.web.client.impl.HttpContext: boolean invokeNext> = 0;
goto label01;
label09:
v0.<io.vertx.ext.web.client.impl.HttpContext: int interceptorIdx> = 0;
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void execute()>();
label10:
return;
catch java.lang.Exception from label02 to label03 with label04;
catch java.lang.Throwable from label02 to label03 with label06;
catch java.lang.Throwable from label04 to label05 with label06;
}
private void execute()
{
int[] v1;
int v3, v4;
io.vertx.ext.web.client.impl.ClientPhase v2;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = <io.vertx.ext.web.client.impl.HttpContext$1: int[] $SwitchMap$io$vertx$ext$web$client$impl$ClientPhase>;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase>;
v3 = virtualinvoke v2.<io.vertx.ext.web.client.impl.ClientPhase: int ordinal()>();
v4 = v1[v3];
tableswitch(v4)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label4;
case 5: goto label5;
case 6: goto label6;
case 7: goto label7;
default: goto label8;
};
label1:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handlePrepareRequest()>();
goto label8;
label2:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handleCreateRequest()>();
goto label8;
label3:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handleSendRequest()>();
goto label8;
label4:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handleFollowRedirect()>();
goto label8;
label5:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handleReceiveResponse()>();
goto label8;
label6:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handleDispatchResponse()>();
goto label8;
label7:
specialinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void handleFailure()>();
label8:
return;
}
private void handleFailure()
{
java.lang.Throwable v2;
io.vertx.core.Handler v1;
io.vertx.core.Future v3;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Handler handler>;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Throwable failure>;
v3 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future failedFuture(java.lang.Throwable)>(v2);
interfaceinvoke v1.<io.vertx.core.Handler: void handle(java.lang.Object)>(v3);
return;
}
private void handleDispatchResponse()
{
io.vertx.ext.web.client.HttpResponse v2;
io.vertx.core.Handler v1;
io.vertx.core.Future v3;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Handler handler>;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpResponse response>;
v3 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v2);
interfaceinvoke v1.<io.vertx.core.Handler: void handle(java.lang.Object)>(v3);
return;
}
private void handlePrepareRequest()
{
io.vertx.core.impl.VertxInternal v2;
io.vertx.core.http.impl.HttpClientInternal v1;
java.lang.CharSequence v11, v9;
io.vertx.core.MultiMap v8;
io.vertx.core.impl.ContextInternal v3;
io.vertx.core.http.RequestOptions v5;
java.lang.Exception v6;
io.vertx.ext.web.client.impl.HttpRequestImpl v4;
java.lang.String v10, v12, v7;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.impl.HttpClientInternal client>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.impl.VertxInternal vertx()>();
v3 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.ContextInternal getOrCreateContext()>();
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Context context> = v3;
v0.<io.vertx.ext.web.client.impl.HttpContext: int redirects> = 0;
label1:
v4 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
v5 = virtualinvoke v4.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.RequestOptions buildRequestOptions()>();
label2:
goto label4;
label3:
v6 := @caughtexception;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: boolean fail(java.lang.Throwable)>(v6);
return;
label4:
v7 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType>;
if v7 == null goto label6;
v8 = virtualinvoke v5.<io.vertx.core.http.RequestOptions: io.vertx.core.MultiMap getHeaders()>();
v9 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence CONTENT_TYPE>;
v10 = interfaceinvoke v8.<io.vertx.core.MultiMap: java.lang.String get(java.lang.CharSequence)>(v9);
if v10 != null goto label5;
v11 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence CONTENT_TYPE>;
v12 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType>;
virtualinvoke v5.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions addHeader(java.lang.CharSequence,java.lang.CharSequence)>(v11, v12);
goto label6;
label5:
v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType> = v10;
label6:
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: void createRequest(io.vertx.core.http.RequestOptions)>(v5);
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private void handleCreateRequest()
{
io.vertx.core.MultiMap v19, v26, v28;
io.vertx.core.http.RequestOptions v24, v46, v57;
io.vertx.core.Context v15;
io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode v13;
boolean v10, v12, v22, v31, v38, v41, v5, v7;
java.lang.CharSequence v47;
io.vertx.ext.web.client.impl.MultipartFormUpload v14;
java.util.Set v20;
io.vertx.core.Future v35, v51, v54, v58;
java.lang.Exception v17;
io.vertx.core.streams.Pipe v33;
io.vertx.ext.web.client.impl.HttpRequestImpl v11, v18, v25;
int v48;
java.lang.String v27, v3, v4, v43, v45, v49, v8, v9;
io.vertx.core.http.impl.HttpClientInternal v56;
java.util.Iterator v21;
io.vertx.core.Promise v1, v34, v50, v53;
java.util.function.Consumer v29;
java.lang.Object v16, v2, v23, v30, v32, v37, v39, v40, v42, v44, v6;
io.vertx.core.Handler v36, v52, v55, v59;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Promise requestPromise> = v1;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
if v2 != null goto label01;
v3 = "application/json";
v4 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType>;
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label15;
label01:
v6 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v7 = v6 instanceof io.vertx.ext.web.multipart.MultipartForm;
if v7 == 0 goto label10;
label02:
v8 = "multipart/form-data";
v9 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.String contentType>;
v10 = virtualinvoke v8.<java.lang.String: boolean equals(java.lang.Object)>(v9);
v11 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
v12 = virtualinvoke v11.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed()>();
if v12 == 0 goto label03;
v13 = <io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode: io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode RFC1738>;
goto label04;
label03:
v13 = <io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode: io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode HTML5>;
label04:
v14 = new io.vertx.ext.web.client.impl.MultipartFormUpload;
v15 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Context context>;
v16 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
specialinvoke v14.<io.vertx.ext.web.client.impl.MultipartFormUpload: void <init>(io.vertx.core.Context,io.vertx.ext.web.multipart.MultipartForm,boolean,io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode)>(v15, v16, v10, v13);
v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body> = v14;
label05:
goto label07;
label06:
v17 := @caughtexception;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpContext: boolean fail(java.lang.Throwable)>(v17);
return;
label07:
v18 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
v19 = virtualinvoke v18.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers()>();
v20 = interfaceinvoke v19.<io.vertx.core.MultiMap: java.util.Set names()>();
v21 = interfaceinvoke v20.<java.util.Set: java.util.Iterator iterator()>();
label08:
v22 = interfaceinvoke v21.<java.util.Iterator: boolean hasNext()>();
if v22 == 0 goto label09;
v23 = interfaceinvoke v21.<java.util.Iterator: java.lang.Object next()>();
v24 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions>;
v25 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
v26 = virtualinvoke v25.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers()>();
v27 = interfaceinvoke v26.<io.vertx.core.MultiMap: java.lang.String get(java.lang.String)>(v23);
virtualinvoke v24.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions putHeader(java.lang.String,java.lang.String)>(v23, v27);
goto label08;
label09:
v28 = virtualinvoke v14.<io.vertx.ext.web.client.impl.MultipartFormUpload: io.vertx.core.MultiMap headers()>();
v29 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleCreateRequest_1__804: java.util.function.Consumer bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v0);
interfaceinvoke v28.<io.vertx.core.MultiMap: void forEach(java.util.function.Consumer)>(v29);
label10:
v30 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v31 = v30 instanceof io.vertx.core.streams.ReadStream;
if v31 == 0 goto label11;
v32 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v33 = interfaceinvoke v32.<io.vertx.core.streams.ReadStream: io.vertx.core.streams.Pipe pipe()>();
v34 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Promise requestPromise>;
v35 = interfaceinvoke v34.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v36 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleCreateRequest_3__803: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.streams.Pipe)>(v0, v33);
interfaceinvoke v35.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v36);
goto label16;
label11:
v37 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v38 = v37 instanceof io.vertx.core.buffer.Buffer;
if v38 == 0 goto label12;
v39 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
goto label14;
label12:
v40 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v41 = v40 instanceof io.vertx.core.json.JsonObject;
if v41 == 0 goto label13;
v42 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v43 = virtualinvoke v42.<io.vertx.core.json.JsonObject: java.lang.String encode()>();
v39 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(java.lang.String)>(v43);
goto label14;
label13:
v44 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.lang.Object body>;
v45 = staticinvoke <io.vertx.core.json.Json: java.lang.String encode(java.lang.Object)>(v44);
v39 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(java.lang.String)>(v45);
label14:
v46 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions>;
v47 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence CONTENT_LENGTH>;
v48 = interfaceinvoke v39.<io.vertx.core.buffer.Buffer: int length()>();
v49 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v48) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001");
virtualinvoke v46.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions putHeader(java.lang.CharSequence,java.lang.CharSequence)>(v47, v49);
v50 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Promise requestPromise>;
v51 = interfaceinvoke v50.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v52 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleCreateRequest_4__801: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.buffer.Buffer)>(v0, v39);
interfaceinvoke v51.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v52);
goto label16;
label15:
v53 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Promise requestPromise>;
v54 = interfaceinvoke v53.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v55 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleCreateRequest_5__805: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v0);
interfaceinvoke v54.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v55);
label16:
v56 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.impl.HttpClientInternal client>;
v57 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions>;
v58 = interfaceinvoke v56.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future request(io.vertx.core.http.RequestOptions)>(v57);
v59 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleCreateRequest_6__802: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v0);
interfaceinvoke v58.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v59);
return;
catch java.lang.Exception from label02 to label05 with label06;
}
private void handleReceiveResponse()
{
io.vertx.core.Promise v3;
io.vertx.ext.web.codec.BodyCodec v9;
io.vertx.core.Context v2;
io.vertx.core.Future v4;
io.vertx.core.http.HttpClientResponse v1;
io.vertx.core.streams.Pipe v7;
io.vertx.ext.web.client.impl.HttpRequestImpl v8;
io.vertx.core.Handler v10, v5, v6;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientResponse clientResponse>;
v2 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
v3 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v4 = interfaceinvoke v3.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v5 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleReceiveResponse_8__806: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.Context)>(v0, v2);
interfaceinvoke v4.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v5);
v6 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleReceiveResponse_9__807: io.vertx.core.Handler bootstrap$(io.vertx.core.Promise)>(v3);
interfaceinvoke v1.<io.vertx.core.http.HttpClientResponse: io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler)>(v6);
v7 = interfaceinvoke v1.<io.vertx.core.http.HttpClientResponse: io.vertx.core.streams.Pipe pipe()>();
v8 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpRequestImpl request>;
v9 = virtualinvoke v8.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec bodyCodec()>();
v10 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleReceiveResponse_12__808: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.streams.Pipe,io.vertx.core.Promise,io.vertx.core.http.HttpClientResponse)>(v0, v7, v3, v1);
interfaceinvoke v9.<io.vertx.ext.web.codec.BodyCodec: void create(io.vertx.core.Handler)>(v10);
return;
}
private void handleSendRequest()
{
io.vertx.core.http.HttpClientRequest v1, v4;
io.vertx.core.Promise v3;
io.vertx.core.Handler v2;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientRequest clientRequest>;
v2 = staticinvoke <io.vertx.ext.web.client.impl.HttpContext$lambda_handleSendRequest_13__809: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v0);
interfaceinvoke v1.<io.vertx.core.http.HttpClientRequest: io.vertx.core.http.HttpClientRequest response(io.vertx.core.Handler)>(v2);
v3 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.Promise requestPromise>;
v4 = v0.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientRequest clientRequest>;
interfaceinvoke v3.<io.vertx.core.Promise: void complete(java.lang.Object)>(v4);
return;
}
public java.lang.Object get(java.lang.String)
{
java.util.Map v2, v3;
java.lang.Object v4;
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs>;
if v2 == null goto label1;
v3 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
goto label2;
label1:
v4 = null;
label2:
return v4;
}
public io.vertx.ext.web.client.impl.HttpContext set(java.lang.String, java.lang.Object)
{
java.util.HashMap v6;
java.util.Map v3, v4, v5, v7;
java.lang.Object v2;
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpContext v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label1;
v3 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs>;
if v3 == null goto label3;
v4 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs>;
interfaceinvoke v4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
goto label3;
label1:
v5 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs>;
if v5 != null goto label2;
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>()>();
v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs> = v6;
label2:
v7 = v0.<io.vertx.ext.web.client.impl.HttpContext: java.util.Map attrs>;
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
label3:
return v0;
}
}