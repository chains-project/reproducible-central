public class io.vertx.ext.web.client.impl.OAuth2AwareInterceptor extends java.lang.Object implements io.vertx.core.Handler
{
private final java.util.Set dejaVu;
private final io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient;
public void <init>(io.vertx.ext.web.client.impl.Oauth2WebClientAware)
{
io.vertx.ext.web.client.impl.Oauth2WebClientAware v1;
java.util.HashSet v2;
io.vertx.ext.web.client.impl.OAuth2AwareInterceptor v0;
v0 := @this: io.vertx.ext.web.client.impl.OAuth2AwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.Oauth2WebClientAware;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: java.util.Set dejaVu> = v2;
v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient> = v1;
return;
}
public void handle(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.impl.OAuth2AwareInterceptor v0;
io.vertx.core.Future v6, v8;
io.vertx.ext.web.client.impl.ClientPhase v3;
int[] v2;
int v4, v5;
io.vertx.core.Handler v7, v9;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.OAuth2AwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$1: int[] $SwitchMap$io$vertx$ext$web$client$impl$ClientPhase>;
v3 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase()>();
v4 = virtualinvoke v3.<io.vertx.ext.web.client.impl.ClientPhase: int ordinal()>();
v5 = v2[v4];
lookupswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
v6 = specialinvoke v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.core.Future createRequest(io.vertx.ext.web.client.impl.HttpContext)>(v1);
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v7 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$fail__814: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v1);
v8 = interfaceinvoke v6.<io.vertx.core.Future: io.vertx.core.Future onFailure(io.vertx.core.Handler)>(v7);
v9 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$lambda_handle_0__815: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.HttpContext)>(v1);
interfaceinvoke v8.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v9);
goto label4;
label2:
specialinvoke v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: void processResponse(io.vertx.ext.web.client.impl.HttpContext)>(v1);
goto label4;
label3:
virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: void next()>();
label4:
return;
}
private void processResponse(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.impl.Oauth2WebClientAware v10, v12, v4;
io.vertx.ext.web.client.HttpResponse v2;
int v3;
io.vertx.ext.auth.authentication.Credentials v13;
boolean v5, v7;
java.util.Set v18, v6, v8, v9;
io.vertx.ext.web.client.impl.OAuth2AwareInterceptor v0;
io.vertx.core.Future v14, v16;
io.vertx.ext.auth.oauth2.OAuth2Auth v11;
io.vertx.core.Handler v15, v17;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.OAuth2AwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpResponse response()>();
v3 = interfaceinvoke v2.<io.vertx.ext.web.client.HttpResponse: int statusCode()>();
lookupswitch(v3)
{
case 401: goto label1;
default: goto label4;
};
label1:
v4 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v5 = virtualinvoke v4.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: boolean isRenewTokenOnForbidden()>();
if v5 == 0 goto label2;
v6 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: java.util.Set dejaVu>;
v7 = interfaceinvoke v6.<java.util.Set: boolean contains(java.lang.Object)>(v1);
if v7 == 0 goto label3;
label2:
v8 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: java.util.Set dejaVu>;
interfaceinvoke v8.<java.util.Set: boolean remove(java.lang.Object)>(v1);
virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: void next()>();
goto label5;
label3:
v9 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: java.util.Set dejaVu>;
interfaceinvoke v9.<java.util.Set: boolean add(java.lang.Object)>(v1);
v10 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v11 = virtualinvoke v10.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.oauth2.OAuth2Auth oauth2Auth()>();
v12 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v13 = virtualinvoke v12.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.authentication.Credentials getCredentials()>();
v14 = interfaceinvoke v11.<io.vertx.ext.auth.oauth2.OAuth2Auth: io.vertx.core.Future authenticate(io.vertx.ext.auth.authentication.Credentials)>(v13);
v15 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$lambda_processResponse_1__816: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.OAuth2AwareInterceptor,io.vertx.ext.web.client.impl.HttpContext)>(v0, v1);
v16 = interfaceinvoke v14.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v15);
v17 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$lambda_processResponse_2__817: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.OAuth2AwareInterceptor,io.vertx.ext.web.client.impl.HttpContext)>(v0, v1);
interfaceinvoke v16.<io.vertx.core.Future: io.vertx.core.Future onFailure(io.vertx.core.Handler)>(v17);
goto label5;
label4:
v18 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: java.util.Set dejaVu>;
interfaceinvoke v18.<java.util.Set: boolean remove(java.lang.Object)>(v1);
virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: void next()>();
label5:
return;
}
private io.vertx.core.Future createRequest(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.core.http.RequestOptions v20;
io.vertx.core.json.JsonObject v24;
boolean v11;
java.lang.CharSequence v21;
io.vertx.core.Future v16, v18, v31, v33, v35;
io.vertx.ext.auth.User v15, v23, v6, v8;
io.vertx.ext.auth.oauth2.OAuth2Auth v13, v28;
io.vertx.ext.web.client.impl.Oauth2WebClientAware v12, v14, v22, v27, v29, v3, v5, v7, v9;
int v10;
java.lang.String v25, v26;
io.vertx.ext.auth.authentication.Credentials v30, v4;
io.vertx.core.Promise v2;
io.vertx.ext.web.client.impl.OAuth2AwareInterceptor v0;
io.vertx.core.Handler v17, v19, v32, v34;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.OAuth2AwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v3 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v4 = virtualinvoke v3.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.authentication.Credentials getCredentials()>();
if v4 == null goto label3;
v5 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v6 = virtualinvoke v5.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.User getUser()>();
if v6 == null goto label2;
v7 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v8 = virtualinvoke v7.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.User getUser()>();
v9 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v10 = virtualinvoke v9.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: int getLeeway()>();
v11 = interfaceinvoke v8.<io.vertx.ext.auth.User: boolean expired(int)>(v10);
if v11 == 0 goto label1;
v12 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v13 = virtualinvoke v12.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.oauth2.OAuth2Auth oauth2Auth()>();
v14 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v15 = virtualinvoke v14.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.User getUser()>();
v16 = interfaceinvoke v13.<io.vertx.ext.auth.oauth2.OAuth2Auth: io.vertx.core.Future refresh(io.vertx.ext.auth.User)>(v15);
v17 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$lambda_createRequest_3__820: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.OAuth2AwareInterceptor,io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.Promise)>(v0, v1, v2);
v18 = interfaceinvoke v16.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v17);
v19 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$lambda_createRequest_6__821: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.OAuth2AwareInterceptor,io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.Promise)>(v0, v1, v2);
interfaceinvoke v18.<io.vertx.core.Future: io.vertx.core.Future onFailure(io.vertx.core.Handler)>(v19);
goto label4;
label1:
v20 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v21 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence AUTHORIZATION>;
v22 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v23 = virtualinvoke v22.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.User getUser()>();
v24 = interfaceinvoke v23.<io.vertx.ext.auth.User: io.vertx.core.json.JsonObject principal()>();
v25 = virtualinvoke v24.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("access_token");
v26 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v25) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Bearer \u0001");
virtualinvoke v20.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions putHeader(java.lang.CharSequence,java.lang.CharSequence)>(v21, v26);
interfaceinvoke v2.<io.vertx.core.Promise: void complete()>();
goto label4;
label2:
v27 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v28 = virtualinvoke v27.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.oauth2.OAuth2Auth oauth2Auth()>();
v29 = v0.<io.vertx.ext.web.client.impl.OAuth2AwareInterceptor: io.vertx.ext.web.client.impl.Oauth2WebClientAware parentClient>;
v30 = virtualinvoke v29.<io.vertx.ext.web.client.impl.Oauth2WebClientAware: io.vertx.ext.auth.authentication.Credentials getCredentials()>();
v31 = interfaceinvoke v28.<io.vertx.ext.auth.oauth2.OAuth2Auth: io.vertx.core.Future authenticate(io.vertx.ext.auth.authentication.Credentials)>(v30);
v32 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$lambda_createRequest_7__818: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.OAuth2AwareInterceptor,io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.Promise)>(v0, v1, v2);
v33 = interfaceinvoke v31.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v32);
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v34 = staticinvoke <io.vertx.ext.web.client.impl.OAuth2AwareInterceptor$fail__819: io.vertx.core.Handler bootstrap$(io.vertx.core.Promise)>(v2);
interfaceinvoke v33.<io.vertx.core.Future: io.vertx.core.Future onFailure(io.vertx.core.Handler)>(v34);
goto label4;
label3:
interfaceinvoke v2.<io.vertx.core.Promise: void fail(java.lang.String)>("Missing client credentials");
label4:
v35 = interfaceinvoke v2.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v35;
}
}