public class io.vertx.ext.web.client.impl.SessionAwareInterceptor extends java.lang.Object implements io.vertx.core.Handler
{
private final io.vertx.ext.web.client.impl.WebClientSessionAware parentClient;
public void <init>(io.vertx.ext.web.client.impl.WebClientSessionAware)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v1;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.WebClientSessionAware;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: io.vertx.ext.web.client.impl.WebClientSessionAware parentClient> = v1;
return;
}
public void handle(io.vertx.ext.web.client.impl.HttpContext)
{
int[] v2;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
int v4, v5;
io.vertx.ext.web.client.impl.ClientPhase v3;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = <io.vertx.ext.web.client.impl.SessionAwareInterceptor$1: int[] $SwitchMap$io$vertx$ext$web$client$impl$ClientPhase>;
v3 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.ClientPhase phase()>();
v4 = virtualinvoke v3.<io.vertx.ext.web.client.impl.ClientPhase: int ordinal()>();
v5 = v2[v4];
tableswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
specialinvoke v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: void createRequest(io.vertx.ext.web.client.impl.HttpContext)>(v1);
goto label4;
label2:
specialinvoke v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: void processRedirectCookies(io.vertx.ext.web.client.impl.HttpContext)>(v1);
goto label4;
label3:
specialinvoke v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: void processResponse(io.vertx.ext.web.client.impl.HttpContext)>(v1);
label4:
virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: void next()>();
return;
}
private void createRequest(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v5, v9;
io.vertx.core.MultiMap v4, v6;
io.vertx.core.http.RequestOptions v2, v3;
java.lang.Iterable v13;
io.netty.handler.codec.http.cookie.ClientCookieEncoder v14;
java.lang.Boolean v11;
io.vertx.ext.web.client.spi.CookieStore v10;
java.lang.String v12, v15, v8;
java.lang.CharSequence v16;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
io.vertx.ext.web.client.HttpRequest v7;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v3 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v4 = virtualinvoke v3.<io.vertx.core.http.RequestOptions: io.vertx.core.MultiMap getHeaders()>();
if v4 != null goto label1;
v4 = staticinvoke <io.vertx.core.http.HttpHeaders: io.vertx.core.MultiMap headers()>();
virtualinvoke v3.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setHeaders(io.vertx.core.MultiMap)>(v4);
label1:
v5 = v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: io.vertx.ext.web.client.impl.WebClientSessionAware parentClient>;
v6 = virtualinvoke v5.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v4.<io.vertx.core.MultiMap: io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap)>(v6);
v7 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpRequest request()>();
v8 = interfaceinvoke v7.<io.vertx.ext.web.client.HttpRequest: java.lang.String virtualHost()>();
if v8 != null goto label2;
v8 = virtualinvoke v3.<io.vertx.core.http.RequestOptions: java.lang.String getHost()>();
label2:
v9 = v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: io.vertx.ext.web.client.impl.WebClientSessionAware parentClient>;
v10 = virtualinvoke v9.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CookieStore cookieStore()>();
v11 = virtualinvoke v2.<io.vertx.core.http.RequestOptions: java.lang.Boolean isSsl()>();
v12 = virtualinvoke v2.<io.vertx.core.http.RequestOptions: java.lang.String getURI()>();
v13 = interfaceinvoke v10.<io.vertx.ext.web.client.spi.CookieStore: java.lang.Iterable get(java.lang.Boolean,java.lang.String,java.lang.String)>(v11, v8, v12);
v14 = <io.netty.handler.codec.http.cookie.ClientCookieEncoder: io.netty.handler.codec.http.cookie.ClientCookieEncoder STRICT>;
v15 = virtualinvoke v14.<io.netty.handler.codec.http.cookie.ClientCookieEncoder: java.lang.String encode(java.lang.Iterable)>(v13);
if v15 == null goto label3;
v16 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence COOKIE>;
interfaceinvoke v4.<io.vertx.core.MultiMap: io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.CharSequence)>(v16, v15);
label3:
return;
}
private void processRedirectCookies(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.impl.HttpContext v1;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
specialinvoke v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: void processRedirectResponse(io.vertx.ext.web.client.impl.HttpContext)>(v1);
specialinvoke v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: void prepareRedirectRequest(io.vertx.ext.web.client.impl.HttpContext)>(v1);
return;
}
private void processRedirectResponse(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v5;
io.vertx.core.http.RequestOptions v4;
io.vertx.core.http.HttpClientRequest v8;
io.vertx.core.http.HttpClientResponse v2, v7;
io.vertx.ext.web.client.spi.CookieStore v6;
java.lang.String v11, v12, v15, v9;
java.net.URI v10;
boolean v13;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
io.vertx.ext.web.client.HttpRequest v14, v16;
java.util.function.Consumer v17;
java.util.List v3;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientResponse clientResponse()>();
v3 = interfaceinvoke v2.<io.vertx.core.http.HttpClientResponse: java.util.List cookies()>();
if v3 != null goto label1;
return;
label1:
v4 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v5 = v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: io.vertx.ext.web.client.impl.WebClientSessionAware parentClient>;
v6 = virtualinvoke v5.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CookieStore cookieStore()>();
v7 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.HttpClientResponse clientResponse()>();
v8 = interfaceinvoke v7.<io.vertx.core.http.HttpClientResponse: io.vertx.core.http.HttpClientRequest request()>();
v9 = interfaceinvoke v8.<io.vertx.core.http.HttpClientRequest: java.lang.String absoluteURI()>();
v10 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v9);
v11 = virtualinvoke v10.<java.net.URI: java.lang.String getHost()>();
v12 = virtualinvoke v4.<io.vertx.core.http.RequestOptions: java.lang.String getHost()>();
v13 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v12);
if v13 == 0 goto label2;
v14 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpRequest request()>();
v15 = interfaceinvoke v14.<io.vertx.ext.web.client.HttpRequest: java.lang.String virtualHost()>();
if v15 == null goto label2;
v16 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpRequest request()>();
v11 = interfaceinvoke v16.<io.vertx.ext.web.client.HttpRequest: java.lang.String virtualHost()>();
label2:
v17 = staticinvoke <io.vertx.ext.web.client.impl.SessionAwareInterceptor$lambda_processRedirectResponse_0__824: java.util.function.Consumer bootstrap$(java.lang.String,io.vertx.ext.web.client.spi.CookieStore)>(v11, v6);
interfaceinvoke v3.<java.util.List: void forEach(java.util.function.Consumer)>(v17);
return;
}
private void prepareRedirectRequest(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v13;
io.vertx.core.http.RequestOptions v2, v3;
java.lang.Iterable v16;
io.netty.handler.codec.http.cookie.ClientCookieEncoder v17;
java.lang.Boolean v15;
io.vertx.ext.web.client.spi.CookieStore v14;
java.lang.String v10, v11, v12, v18, v4, v5, v8;
boolean v6;
java.lang.CharSequence v19;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
io.vertx.ext.web.client.HttpRequest v7, v9;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v3 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v4 = virtualinvoke v2.<io.vertx.core.http.RequestOptions: java.lang.String getHost()>();
v5 = virtualinvoke v3.<io.vertx.core.http.RequestOptions: java.lang.String getHost()>();
v6 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label1;
v7 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpRequest request()>();
v8 = interfaceinvoke v7.<io.vertx.ext.web.client.HttpRequest: java.lang.String virtualHost()>();
if v8 == null goto label1;
v9 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpRequest request()>();
v10 = interfaceinvoke v9.<io.vertx.ext.web.client.HttpRequest: java.lang.String virtualHost()>();
goto label2;
label1:
v10 = v4;
label2:
v11 = virtualinvoke v2.<io.vertx.core.http.RequestOptions: java.lang.String getURI()>();
v12 = staticinvoke <io.vertx.ext.web.client.impl.SessionAwareInterceptor: java.lang.String parsePath(java.lang.String)>(v11);
v13 = v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: io.vertx.ext.web.client.impl.WebClientSessionAware parentClient>;
v14 = virtualinvoke v13.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CookieStore cookieStore()>();
v15 = virtualinvoke v3.<io.vertx.core.http.RequestOptions: java.lang.Boolean isSsl()>();
v16 = interfaceinvoke v14.<io.vertx.ext.web.client.spi.CookieStore: java.lang.Iterable get(java.lang.Boolean,java.lang.String,java.lang.String)>(v15, v10, v12);
v17 = <io.netty.handler.codec.http.cookie.ClientCookieEncoder: io.netty.handler.codec.http.cookie.ClientCookieEncoder STRICT>;
v18 = virtualinvoke v17.<io.netty.handler.codec.http.cookie.ClientCookieEncoder: java.lang.String encode(java.lang.Iterable)>(v16);
if v18 == null goto label3;
v19 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence COOKIE>;
virtualinvoke v2.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions putHeader(java.lang.CharSequence,java.lang.CharSequence)>(v19, v18);
label3:
return;
}
private static java.lang.String parsePath(java.lang.String)
{
char v2;
int v1, v3, v4, v5, v6, v7, v8, v9;
java.lang.String v0, v10;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 != 0 goto label1;
return "";
label1:
v2 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v2 != 47 goto label2;
v3 = 0;
goto label4;
label2:
v4 = virtualinvoke v0.<java.lang.String: int indexOf(java.lang.String)>("://");
v5 = (int) -1;
if v4 != v5 goto label3;
v3 = 0;
goto label4;
label3:
v6 = v4 + 3;
v3 = virtualinvoke v0.<java.lang.String: int indexOf(int,int)>(47, v6);
v7 = (int) -1;
if v3 != v7 goto label4;
return "/";
label4:
v8 = virtualinvoke v0.<java.lang.String: int indexOf(int,int)>(63, v3);
v9 = (int) -1;
if v8 != v9 goto label5;
v8 = virtualinvoke v0.<java.lang.String: int length()>();
label5:
v10 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(v3, v8);
return v10;
}
private void processResponse(io.vertx.ext.web.client.impl.HttpContext)
{
io.vertx.ext.web.client.HttpResponse v2;
io.vertx.ext.web.client.impl.WebClientSessionAware v5;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v0;
io.vertx.core.http.RequestOptions v4;
java.util.function.Consumer v7;
java.util.List v3;
io.vertx.ext.web.client.spi.CookieStore v6;
io.vertx.ext.web.client.impl.HttpContext v1;
v0 := @this: io.vertx.ext.web.client.impl.SessionAwareInterceptor;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpContext;
v2 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.HttpResponse response()>();
v3 = interfaceinvoke v2.<io.vertx.ext.web.client.HttpResponse: java.util.List cookies()>();
if v3 != null goto label1;
return;
label1:
v4 = virtualinvoke v1.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.core.http.RequestOptions requestOptions()>();
v5 = v0.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: io.vertx.ext.web.client.impl.WebClientSessionAware parentClient>;
v6 = virtualinvoke v5.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CookieStore cookieStore()>();
v7 = staticinvoke <io.vertx.ext.web.client.impl.SessionAwareInterceptor$lambda_processResponse_1__825: java.util.function.Consumer bootstrap$(io.vertx.ext.web.client.impl.HttpContext,io.vertx.core.http.RequestOptions,io.vertx.ext.web.client.spi.CookieStore)>(v1, v4, v6);
interfaceinvoke v3.<java.util.List: void forEach(java.util.function.Consumer)>(v7);
return;
}
}