public class io.vertx.ext.web.client.impl.cache.LocalCacheStore extends java.lang.Object implements io.vertx.ext.web.client.spi.CacheStore
{
private final java.util.Map localMap;
public void <init>()
{
java.util.HashMap v1;
io.vertx.ext.web.client.impl.cache.LocalCacheStore v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.LocalCacheStore;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v0.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: java.util.Map localMap> = v1;
return;
}
public io.vertx.core.Future get(io.vertx.ext.web.client.impl.cache.CacheKey)
{
java.util.Map v2;
io.vertx.ext.web.client.impl.cache.CacheKey v1;
java.lang.Object v3;
io.vertx.ext.web.client.impl.cache.LocalCacheStore v0;
io.vertx.core.Future v4;
v0 := @this: io.vertx.ext.web.client.impl.cache.LocalCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 = v0.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: java.util.Map localMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v4 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v3);
return v4;
}
public io.vertx.core.Future set(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.ext.web.client.impl.cache.CachedHttpResponse)
{
java.util.Map v3;
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.impl.cache.CachedHttpResponse v2;
java.lang.Object v4;
io.vertx.ext.web.client.impl.cache.LocalCacheStore v0;
io.vertx.core.Future v5;
v0 := @this: io.vertx.ext.web.client.impl.cache.LocalCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 := @parameter1: io.vertx.ext.web.client.impl.cache.CachedHttpResponse;
v3 = v0.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: java.util.Map localMap>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
v5 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v4);
return v5;
}
public io.vertx.core.Future delete(io.vertx.ext.web.client.impl.cache.CacheKey)
{
java.util.Map v2;
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.impl.cache.LocalCacheStore v0;
io.vertx.core.Future v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.LocalCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 = v0.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: java.util.Map localMap>;
interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
v3 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture()>();
return v3;
}
public io.vertx.core.Future flush()
{
io.vertx.ext.web.client.impl.cache.LocalCacheStore v0;
io.vertx.core.Future v2;
java.util.Map v1;
v0 := @this: io.vertx.ext.web.client.impl.cache.LocalCacheStore;
v1 = v0.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: java.util.Map localMap>;
interfaceinvoke v1.<java.util.Map: void clear()>();
v2 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture()>();
return v2;
}
}