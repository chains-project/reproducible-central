public interface  io.vertx.ext.web.codec.BodyCodec extends java.lang.Object
{
public static io.vertx.ext.web.codec.BodyCodec string()
{
io.vertx.ext.web.codec.BodyCodec v0;
v0 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.BodyCodec STRING>;
return v0;
}
public static io.vertx.ext.web.codec.BodyCodec string(java.lang.String)
{
io.vertx.ext.web.codec.impl.BodyCodecImpl v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.impl.BodyCodecImpl string(java.lang.String)>(v0);
return v1;
}
public static io.vertx.ext.web.codec.BodyCodec buffer()
{
io.vertx.ext.web.codec.BodyCodec v0;
v0 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.BodyCodec BUFFER>;
return v0;
}
public static io.vertx.ext.web.codec.BodyCodec jsonObject()
{
io.vertx.ext.web.codec.BodyCodec v0;
v0 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.BodyCodec JSON_OBJECT>;
return v0;
}
public static io.vertx.ext.web.codec.BodyCodec jsonArray()
{
io.vertx.ext.web.codec.BodyCodec v0;
v0 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.BodyCodec JSON_ARRAY>;
return v0;
}
public static io.vertx.ext.web.codec.BodyCodec json(java.lang.Class)
{
io.vertx.ext.web.codec.BodyCodec v1;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.BodyCodec json(java.lang.Class)>(v0);
return v1;
}
public static io.vertx.ext.web.codec.BodyCodec none()
{
io.vertx.ext.web.codec.BodyCodec v0;
v0 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: io.vertx.ext.web.codec.BodyCodec NONE>;
return v0;
}
public static io.vertx.ext.web.codec.BodyCodec create(java.util.function.Function)
{
io.vertx.ext.web.codec.impl.BodyCodecImpl v1;
java.util.function.Function v0;
v0 := @parameter0: java.util.function.Function;
v1 = new io.vertx.ext.web.codec.impl.BodyCodecImpl;
specialinvoke v1.<io.vertx.ext.web.codec.impl.BodyCodecImpl: void <init>(java.util.function.Function)>(v0);
return v1;
}
public static io.vertx.ext.web.codec.BodyCodec pipe(io.vertx.core.streams.WriteStream)
{
io.vertx.ext.web.codec.BodyCodec v1;
io.vertx.core.streams.WriteStream v0;
v0 := @parameter0: io.vertx.core.streams.WriteStream;
v1 = staticinvoke <io.vertx.ext.web.codec.BodyCodec: io.vertx.ext.web.codec.BodyCodec pipe(io.vertx.core.streams.WriteStream,boolean)>(v0, 1);
return v1;
}
public static io.vertx.ext.web.codec.BodyCodec pipe(io.vertx.core.streams.WriteStream, boolean)
{
io.vertx.ext.web.codec.impl.StreamingBodyCodec v2;
io.vertx.core.streams.WriteStream v0;
boolean v1;
v0 := @parameter0: io.vertx.core.streams.WriteStream;
v1 := @parameter1: boolean;
v2 = new io.vertx.ext.web.codec.impl.StreamingBodyCodec;
specialinvoke v2.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: void <init>(io.vertx.core.streams.WriteStream,boolean)>(v0, v1);
virtualinvoke v2.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: void init()>();
return v2;
}
public static io.vertx.ext.web.codec.BodyCodec jsonStream(io.vertx.core.parsetools.JsonParser)
{
io.vertx.core.parsetools.JsonParser v0;
io.vertx.ext.web.codec.impl.JsonStreamBodyCodec v1;
v0 := @parameter0: io.vertx.core.parsetools.JsonParser;
v1 = new io.vertx.ext.web.codec.impl.JsonStreamBodyCodec;
specialinvoke v1.<io.vertx.ext.web.codec.impl.JsonStreamBodyCodec: void <init>(io.vertx.core.parsetools.JsonParser)>(v0);
return v1;
}
public abstract void create(io.vertx.core.Handler);
}