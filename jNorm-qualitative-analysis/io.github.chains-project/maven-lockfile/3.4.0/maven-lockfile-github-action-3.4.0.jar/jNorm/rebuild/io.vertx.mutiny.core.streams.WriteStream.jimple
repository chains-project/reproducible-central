public interface  io.vertx.mutiny.core.streams.WriteStream extends java.lang.Object implements io.vertx.mutiny.core.streams.StreamBase
{
public abstract io.vertx.core.streams.WriteStream getDelegate();
public abstract io.vertx.mutiny.core.streams.WriteStream exceptionHandler(java.util.function.Consumer);
public abstract io.smallrye.mutiny.Uni write(java.lang.Object);
public abstract java.lang.Void writeAndAwait(java.lang.Object);
public abstract void writeAndForget(java.lang.Object);
public abstract io.smallrye.mutiny.Uni end();
public abstract java.lang.Void endAndAwait();
public abstract void endAndForget();
public abstract io.smallrye.mutiny.Uni end(java.lang.Object);
public abstract java.lang.Void endAndAwait(java.lang.Object);
public abstract void endAndForget(java.lang.Object);
public abstract io.vertx.mutiny.core.streams.WriteStream setWriteQueueMaxSize(int);
public abstract boolean writeQueueFull();
public abstract io.vertx.mutiny.core.streams.WriteStream drainHandler(java.lang.Runnable);
public static io.vertx.mutiny.core.streams.WriteStream newInstance(io.vertx.core.streams.WriteStream)
{
io.vertx.mutiny.core.streams.WriteStreamImpl v1;
io.vertx.core.streams.WriteStream v0;
v0 := @parameter0: io.vertx.core.streams.WriteStream;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.streams.WriteStreamImpl;
specialinvoke v1.<io.vertx.mutiny.core.streams.WriteStreamImpl: void <init>(io.vertx.core.streams.WriteStream)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
public static io.vertx.mutiny.core.streams.WriteStream newInstance(io.vertx.core.streams.WriteStream, io.smallrye.mutiny.vertx.TypeArg)
{
io.vertx.mutiny.core.streams.WriteStreamImpl v2;
io.vertx.core.streams.WriteStream v0;
io.smallrye.mutiny.vertx.TypeArg v1;
v0 := @parameter0: io.vertx.core.streams.WriteStream;
v1 := @parameter1: io.smallrye.mutiny.vertx.TypeArg;
if v0 == null goto label1;
v2 = new io.vertx.mutiny.core.streams.WriteStreamImpl;
specialinvoke v2.<io.vertx.mutiny.core.streams.WriteStreamImpl: void <init>(io.vertx.core.streams.WriteStream,io.smallrye.mutiny.vertx.TypeArg)>(v0, v1);
goto label2;
label1:
v2 = null;
label2:
return v2;
}
}