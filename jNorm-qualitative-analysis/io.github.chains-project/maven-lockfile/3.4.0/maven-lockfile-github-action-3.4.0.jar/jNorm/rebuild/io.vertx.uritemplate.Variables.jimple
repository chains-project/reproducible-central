public interface  io.vertx.uritemplate.Variables extends java.lang.Object
{
public static io.vertx.uritemplate.Variables variables()
{
io.vertx.uritemplate.impl.VariablesImpl v0;
v0 = new io.vertx.uritemplate.impl.VariablesImpl;
specialinvoke v0.<io.vertx.uritemplate.impl.VariablesImpl: void <init>()>();
return v0;
}
public static io.vertx.uritemplate.Variables variables(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v0;
io.vertx.uritemplate.Variables v1, v2;
v0 := @parameter0: io.vertx.core.json.JsonObject;
v1 = staticinvoke <io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables variables()>();
v2 = interfaceinvoke v1.<io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables addAll(io.vertx.core.json.JsonObject)>(v0);
return v2;
}
public abstract io.vertx.uritemplate.Variables set(java.lang.String, java.lang.String);
public abstract io.vertx.uritemplate.Variables set(java.lang.String, java.util.List);
public abstract io.vertx.uritemplate.Variables set(java.lang.String, java.util.Map);
public io.vertx.uritemplate.Variables setAll(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.uritemplate.Variables v0, v2, v3;
v0 := @this: io.vertx.uritemplate.Variables;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v2 = interfaceinvoke v0.<io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables clear()>();
v3 = interfaceinvoke v2.<io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables addAll(io.vertx.core.json.JsonObject)>(v1);
return v3;
}
public abstract io.vertx.uritemplate.Variables addAll(io.vertx.core.json.JsonObject);
public abstract io.vertx.uritemplate.Variables clear();
public abstract java.util.Set names();
public abstract java.lang.Object get(java.lang.String);
public abstract java.lang.String getSingle(java.lang.String);
public abstract java.util.List getList(java.lang.String);
public abstract java.util.Map getMap(java.lang.String);
}