class jakarta.el.FactoryFinder extends java.lang.Object
{
private static final boolean IS_SECURITY_ENABLED;
void <init>()
{
jakarta.el.FactoryFinder v0;
v0 := @this: jakarta.el.FactoryFinder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, java.util.Properties)
{
java.lang.Object[] v14, v7;
jakarta.el.ELException v17, v20;
java.lang.reflect.Constructor v13, v4;
java.lang.String v0, v18, v21;
boolean v9;
java.util.Properties v2;
java.lang.Class[] v12, v5;
java.lang.Exception v19, v6;
jakarta.el.FactoryFinder$1 v10;
java.lang.Class v3;
java.lang.ClassNotFoundException v16;
java.lang.Object v11, v15, v8;
java.lang.ClassLoader v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.ClassLoader;
v2 := @parameter2: java.util.Properties;
label01:
if v1 != null goto label02;
v3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(v0);
goto label03;
label02:
v3 = virtualinvoke v1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(v0);
label03:
if v2 == null goto label09;
v4 = null;
label04:
v5 = newarray (java.lang.Class)[1];
v5[0] = class "Ljava/util/Properties;";
v4 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v5);
label05:
goto label07;
label06:
v6 := @caughtexception;
label07:
if v4 == null goto label09;
v7 = newarray (java.lang.Object)[1];
v7[0] = v2;
v8 = virtualinvoke v4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v7);
label08:
return v8;
label09:
v9 = <jakarta.el.FactoryFinder: boolean IS_SECURITY_ENABLED>;
if v9 == 0 goto label11;
v10 = new jakarta.el.FactoryFinder$1;
specialinvoke v10.<jakarta.el.FactoryFinder$1: void <init>(java.lang.Class,java.lang.String)>(v3, v0);
v11 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v10);
label10:
return v11;
label11:
v12 = newarray (java.lang.Class)[0];
v13 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v12);
v14 = newarray (java.lang.Object)[0];
v15 = virtualinvoke v13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v14);
label12:
return v15;
label13:
v16 := @caughtexception;
v17 = new jakarta.el.ELException;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Provider \u0001 not found");
specialinvoke v17.<jakarta.el.ELException: void <init>(java.lang.String,java.lang.Throwable)>(v18, v16);
throw v17;
label14:
v19 := @caughtexception;
v20 = new jakarta.el.ELException;
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Exception)>(v0, v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Provider \u0001 could not be instantiated: \u0001");
specialinvoke v20.<jakarta.el.ELException: void <init>(java.lang.String,java.lang.Throwable)>(v21, v19);
throw v20;
catch java.lang.Exception from label04 to label05 with label06;
catch java.lang.ClassNotFoundException from label01 to label08 with label13;
catch java.lang.ClassNotFoundException from label09 to label10 with label13;
catch java.lang.ClassNotFoundException from label11 to label12 with label13;
catch java.lang.Exception from label01 to label08 with label14;
catch java.lang.Exception from label09 to label10 with label14;
catch java.lang.Exception from label11 to label12 with label14;
}
static java.lang.Object find(java.lang.Class, java.lang.String, java.lang.String, java.util.Properties)
{
jakarta.el.ELException v26, v9;
java.lang.Thread v7;
java.lang.SecurityException v25;
java.lang.String v1, v10, v2, v27;
boolean v13, v16, v21, v4;
java.util.Properties v3;
java.util.Iterator v12;
java.util.ServiceLoader v11;
java.lang.Exception v15, v20, v8;
jakarta.el.FactoryFinder$3 v17;
jakarta.el.FactoryFinder$4 v22;
jakarta.el.FactoryFinder$2 v5;
java.lang.Class v0;
java.lang.Object v14, v18, v19, v23, v24, v28, v6;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.util.Properties;
label01:
v4 = <jakarta.el.FactoryFinder: boolean IS_SECURITY_ENABLED>;
if v4 == 0 goto label02;
v5 = new jakarta.el.FactoryFinder$2;
specialinvoke v5.<jakarta.el.FactoryFinder$2: void <init>()>();
v6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v5);
goto label05;
label02:
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v6 = virtualinvoke v7.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label03:
goto label05;
label04:
v8 := @caughtexception;
v9 = new jakarta.el.ELException;
v10 = virtualinvoke v8.<java.lang.Exception: java.lang.String toString()>();
specialinvoke v9.<jakarta.el.ELException: void <init>(java.lang.String,java.lang.Throwable)>(v10, v8);
throw v9;
label05:
v11 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(v0, v6);
v12 = virtualinvoke v11.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label06:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label09;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
if v14 == null goto label06;
label07:
return v14;
label08:
v15 := @caughtexception;
label09:
v16 = <jakarta.el.FactoryFinder: boolean IS_SECURITY_ENABLED>;
if v16 == 0 goto label10;
v17 = new jakarta.el.FactoryFinder$3;
specialinvoke v17.<jakarta.el.FactoryFinder$3: void <init>(java.lang.String)>(v1);
v18 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v17);
goto label11;
label10:
v18 = staticinvoke <jakarta.el.FactoryFinder: java.lang.String getFactoryClassName(java.lang.String)>(v1);
label11:
if v18 == null goto label14;
v19 = staticinvoke <jakarta.el.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,java.util.Properties)>(v18, v6, v3);
label12:
return v19;
label13:
v20 := @caughtexception;
label14:
v21 = <jakarta.el.FactoryFinder: boolean IS_SECURITY_ENABLED>;
if v21 == 0 goto label15;
v22 = new jakarta.el.FactoryFinder$4;
specialinvoke v22.<jakarta.el.FactoryFinder$4: void <init>(java.lang.String)>(v1);
v23 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v22);
goto label16;
label15:
v23 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(v1);
label16:
if v23 == null goto label19;
v24 = staticinvoke <jakarta.el.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,java.util.Properties)>(v23, v6, v3);
label17:
return v24;
label18:
v25 := @caughtexception;
label19:
if v2 != null goto label20;
v26 = new jakarta.el.ELException;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Provider for \u0001 cannot be found");
specialinvoke v26.<jakarta.el.ELException: void <init>(java.lang.String,java.lang.Throwable)>(v27, null);
throw v26;
label20:
v28 = staticinvoke <jakarta.el.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,java.util.Properties)>(v2, v6, v3);
return v28;
catch java.lang.Exception from label01 to label03 with label04;
catch java.lang.Exception from label05 to label07 with label08;
catch java.lang.Exception from label08 to label08 with label08;
catch java.lang.Exception from label09 to label12 with label13;
catch java.lang.SecurityException from label14 to label17 with label18;
}
private static java.lang.String getFactoryClassName(java.lang.String)
{
java.util.Properties v8;
java.io.FileInputStream v9;
java.io.File v6;
java.lang.Exception v10;
java.lang.String v0, v1, v2, v3, v4, v5;
boolean v7;
v0 := @parameter0: java.lang.String;
v1 = null;
v2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
v3 = <java.io.File: java.lang.String separator>;
v4 = <java.io.File: java.lang.String separator>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v2, v3, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001lib\u0001el.properties");
v6 = new java.io.File;
specialinvoke v6.<java.io.File: void <init>(java.lang.String)>(v5);
v7 = virtualinvoke v6.<java.io.File: boolean exists()>();
if v7 == 0 goto label5;
v8 = new java.util.Properties;
specialinvoke v8.<java.util.Properties: void <init>()>();
label1:
v9 = new java.io.FileInputStream;
specialinvoke v9.<java.io.FileInputStream: void <init>(java.io.File)>(v6);
virtualinvoke v8.<java.util.Properties: void load(java.io.InputStream)>(v9);
label2:
goto label4;
label3:
v10 := @caughtexception;
label4:
v1 = virtualinvoke v8.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(v0);
label5:
return v1;
catch java.lang.Exception from label1 to label2 with label3;
}
static void <clinit>()
{
java.lang.SecurityManager v0;
boolean v1;
v0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
<jakarta.el.FactoryFinder: boolean IS_SECURITY_ENABLED> = v1;
return;
}
}