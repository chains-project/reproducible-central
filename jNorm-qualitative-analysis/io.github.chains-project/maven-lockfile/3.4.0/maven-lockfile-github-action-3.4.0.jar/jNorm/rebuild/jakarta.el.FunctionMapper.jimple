public abstract class jakarta.el.FunctionMapper extends java.lang.Object
{
public void <init>()
{
jakarta.el.FunctionMapper v0;
v0 := @this: jakarta.el.FunctionMapper;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract java.lang.reflect.Method resolveFunction(java.lang.String, java.lang.String);
public void mapFunction(java.lang.String, java.lang.String, java.lang.reflect.Method)
{
jakarta.el.FunctionMapper v0;
java.lang.String v1, v2;
java.lang.reflect.Method v3;
v0 := @this: jakarta.el.FunctionMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.reflect.Method;
return;
}
}