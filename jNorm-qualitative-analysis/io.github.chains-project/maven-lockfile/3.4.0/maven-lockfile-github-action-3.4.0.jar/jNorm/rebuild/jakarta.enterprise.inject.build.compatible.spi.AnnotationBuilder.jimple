public interface  jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder extends java.lang.Object
{
public static jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder of(java.lang.Class)
{
jakarta.enterprise.inject.build.compatible.spi.BuildServices v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory v2;
java.lang.Class v0;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v3;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <jakarta.enterprise.inject.build.compatible.spi.BuildServicesResolver: jakarta.enterprise.inject.build.compatible.spi.BuildServices get()>();
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.build.compatible.spi.BuildServices: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory annotationBuilderFactory()>();
v3 = interfaceinvoke v2.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder create(java.lang.Class)>(v0);
return v3;
}
public static jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder of(jakarta.enterprise.lang.model.declarations.ClassInfo)
{
jakarta.enterprise.lang.model.declarations.ClassInfo v0;
jakarta.enterprise.inject.build.compatible.spi.BuildServices v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory v2;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v3;
v0 := @parameter0: jakarta.enterprise.lang.model.declarations.ClassInfo;
v1 = staticinvoke <jakarta.enterprise.inject.build.compatible.spi.BuildServicesResolver: jakarta.enterprise.inject.build.compatible.spi.BuildServices get()>();
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.build.compatible.spi.BuildServices: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory annotationBuilderFactory()>();
v3 = interfaceinvoke v2.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder create(jakarta.enterprise.lang.model.declarations.ClassInfo)>(v0);
return v3;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.AnnotationMember)
{
jakarta.enterprise.lang.model.AnnotationMember v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.AnnotationMember;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.AnnotationMember)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(boolean)
{
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
boolean v1;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: boolean;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,boolean)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(boolean[])
{
boolean[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: boolean[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,boolean[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(byte)
{
byte v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: byte;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,byte)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(byte[])
{
byte[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: byte[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,byte[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(short)
{
short v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: short;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,short)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(short[])
{
short[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: short[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,short[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(int)
{
int v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: int;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,int)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(int[])
{
int[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: int[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,int[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(long)
{
long v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: long;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,long)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(long[])
{
long[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: long[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,long[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(float)
{
float v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: float;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,float)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(float[])
{
float[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: float[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,float[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(double)
{
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
double v1;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: double;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,double)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(double[])
{
double[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: double[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,double[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(char)
{
char v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: char;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,char)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(char[])
{
char[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: char[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,char[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.String)
{
java.lang.String v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.String)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.String[])
{
java.lang.String[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.String[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.String[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.Enum)
{
java.lang.Enum v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.Enum;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.Enum)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.Enum[])
{
java.lang.Enum[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.Enum[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.Enum[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.Class, java.lang.String)
{
java.lang.Class v1;
java.lang.String v2;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v3;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.Class,java.lang.String)>("value", v1, v2);
return v3;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.Class, java.lang.String[])
{
java.lang.Class v1;
java.lang.String[] v2;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v3;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String[];
v3 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.Class,java.lang.String[])>("value", v1, v2);
return v3;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.declarations.ClassInfo, java.lang.String)
{
jakarta.enterprise.lang.model.declarations.ClassInfo v1;
java.lang.String v2;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v3;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.declarations.ClassInfo;
v2 := @parameter1: java.lang.String;
v3 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.declarations.ClassInfo,java.lang.String)>("value", v1, v2);
return v3;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.declarations.ClassInfo, java.lang.String[])
{
jakarta.enterprise.lang.model.declarations.ClassInfo v1;
java.lang.String[] v2;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v3;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.declarations.ClassInfo;
v2 := @parameter1: java.lang.String[];
v3 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.declarations.ClassInfo,java.lang.String[])>("value", v1, v2);
return v3;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.Class)
{
java.lang.Class v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.Class;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.Class)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.Class[])
{
java.lang.Class[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.Class[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.Class[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.declarations.ClassInfo)
{
jakarta.enterprise.lang.model.declarations.ClassInfo v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.declarations.ClassInfo;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.declarations.ClassInfo)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.declarations.ClassInfo[])
{
jakarta.enterprise.lang.model.declarations.ClassInfo[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.declarations.ClassInfo[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.declarations.ClassInfo[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.types.Type)
{
jakarta.enterprise.lang.model.types.Type v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.types.Type;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.types.Type)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.types.Type[])
{
jakarta.enterprise.lang.model.types.Type[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.types.Type[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.types.Type[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.AnnotationInfo)
{
jakarta.enterprise.lang.model.AnnotationInfo v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.AnnotationInfo;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.AnnotationInfo)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(jakarta.enterprise.lang.model.AnnotationInfo[])
{
jakarta.enterprise.lang.model.AnnotationInfo[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: jakarta.enterprise.lang.model.AnnotationInfo[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,jakarta.enterprise.lang.model.AnnotationInfo[])>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.'annotation'.Annotation)
{
java.lang.'annotation'.Annotation v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.'annotation'.Annotation;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.'annotation'.Annotation)>("value", v1);
return v2;
}
public jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder value(java.lang.'annotation'.Annotation[])
{
java.lang.'annotation'.Annotation[] v1;
jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder v0, v2;
v0 := @this: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder: jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String,java.lang.'annotation'.Annotation[])>("value", v1);
return v2;
}
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.AnnotationMember);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, boolean);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, boolean[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, byte);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, byte[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, short);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, short[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, int);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, int[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, long);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, long[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, float);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, float[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, double);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, double[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, char);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, char[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.String);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.String[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.Enum);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.Enum[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.Class, java.lang.String);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.Class, java.lang.String[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo, java.lang.String);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo, java.lang.String[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.Class[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.types.Type);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.types.Type[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.AnnotationInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, jakarta.enterprise.lang.model.AnnotationInfo[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.'annotation'.Annotation);
public abstract jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder member(java.lang.String, java.lang.'annotation'.Annotation[]);
public abstract jakarta.enterprise.lang.model.AnnotationInfo build();
}