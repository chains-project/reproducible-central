public class jakarta.enterprise.inject.spi.Unmanaged extends java.lang.Object
{
private final jakarta.enterprise.inject.spi.InjectionTarget injectionTarget;
private final jakarta.enterprise.inject.spi.BeanManager beanManager;
public void <init>(jakarta.enterprise.inject.spi.BeanManager, java.lang.Class)
{
jakarta.enterprise.inject.spi.Unmanaged v0;
jakarta.enterprise.inject.spi.InjectionTarget v5;
jakarta.enterprise.inject.spi.InjectionTargetFactory v4;
java.lang.Class v2;
jakarta.enterprise.inject.spi.AnnotatedType v3;
jakarta.enterprise.inject.spi.BeanManager v1;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged;
v1 := @parameter0: jakarta.enterprise.inject.spi.BeanManager;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<jakarta.enterprise.inject.spi.Unmanaged: jakarta.enterprise.inject.spi.BeanManager beanManager> = v1;
v3 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.BeanManager: jakarta.enterprise.inject.spi.AnnotatedType createAnnotatedType(java.lang.Class)>(v2);
v4 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.BeanManager: jakarta.enterprise.inject.spi.InjectionTargetFactory getInjectionTargetFactory(jakarta.enterprise.inject.spi.AnnotatedType)>(v3);
v5 = interfaceinvoke v4.<jakarta.enterprise.inject.spi.InjectionTargetFactory: jakarta.enterprise.inject.spi.InjectionTarget createInjectionTarget(jakarta.enterprise.inject.spi.Bean)>(null);
v0.<jakarta.enterprise.inject.spi.Unmanaged: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget> = v5;
return;
}
public void <init>(java.lang.Class)
{
jakarta.enterprise.inject.spi.Unmanaged v0;
jakarta.enterprise.inject.spi.CDI v2;
java.lang.Class v1;
jakarta.enterprise.inject.spi.BeanManager v3;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <jakarta.enterprise.inject.spi.CDI: jakarta.enterprise.inject.spi.CDI current()>();
v3 = virtualinvoke v2.<jakarta.enterprise.inject.spi.CDI: jakarta.enterprise.inject.spi.BeanManager getBeanManager()>();
specialinvoke v0.<jakarta.enterprise.inject.spi.Unmanaged: void <init>(jakarta.enterprise.inject.spi.BeanManager,java.lang.Class)>(v3, v1);
return;
}
public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance newInstance()
{
jakarta.enterprise.inject.spi.Unmanaged v0;
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v1;
jakarta.enterprise.inject.spi.InjectionTarget v3;
jakarta.enterprise.inject.spi.BeanManager v2;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged;
v1 = new jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v2 = v0.<jakarta.enterprise.inject.spi.Unmanaged: jakarta.enterprise.inject.spi.BeanManager beanManager>;
v3 = v0.<jakarta.enterprise.inject.spi.Unmanaged: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget>;
specialinvoke v1.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: void <init>(jakarta.enterprise.inject.spi.BeanManager,jakarta.enterprise.inject.spi.InjectionTarget)>(v2, v3);
return v1;
}
}