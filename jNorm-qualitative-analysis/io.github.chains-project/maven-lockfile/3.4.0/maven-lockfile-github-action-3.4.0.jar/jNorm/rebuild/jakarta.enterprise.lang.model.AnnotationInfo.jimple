public interface  jakarta.enterprise.lang.model.AnnotationInfo extends java.lang.Object
{
public abstract jakarta.enterprise.lang.model.declarations.ClassInfo declaration();
public java.lang.String name()
{
jakarta.enterprise.lang.model.declarations.ClassInfo v1;
java.lang.String v2;
jakarta.enterprise.lang.model.AnnotationInfo v0;
v0 := @this: jakarta.enterprise.lang.model.AnnotationInfo;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationInfo: jakarta.enterprise.lang.model.declarations.ClassInfo declaration()>();
v2 = interfaceinvoke v1.<jakarta.enterprise.lang.model.declarations.ClassInfo: java.lang.String name()>();
return v2;
}
public boolean isRepeatable()
{
jakarta.enterprise.lang.model.declarations.ClassInfo v1;
jakarta.enterprise.lang.model.AnnotationInfo v0;
boolean v2;
v0 := @this: jakarta.enterprise.lang.model.AnnotationInfo;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationInfo: jakarta.enterprise.lang.model.declarations.ClassInfo declaration()>();
v2 = interfaceinvoke v1.<jakarta.enterprise.lang.model.declarations.ClassInfo: boolean hasAnnotation(java.lang.Class)>(class "Ljava/lang/annotation/Repeatable;");
return v2;
}
public abstract boolean hasMember(java.lang.String);
public abstract jakarta.enterprise.lang.model.AnnotationMember member(java.lang.String);
public boolean hasValue()
{
jakarta.enterprise.lang.model.AnnotationInfo v0;
boolean v1;
v0 := @this: jakarta.enterprise.lang.model.AnnotationInfo;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationInfo: boolean hasMember(java.lang.String)>("value");
return v1;
}
public jakarta.enterprise.lang.model.AnnotationMember value()
{
jakarta.enterprise.lang.model.AnnotationInfo v0;
jakarta.enterprise.lang.model.AnnotationMember v1;
v0 := @this: jakarta.enterprise.lang.model.AnnotationInfo;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationInfo: jakarta.enterprise.lang.model.AnnotationMember member(java.lang.String)>("value");
return v1;
}
public abstract java.util.Map members();
}