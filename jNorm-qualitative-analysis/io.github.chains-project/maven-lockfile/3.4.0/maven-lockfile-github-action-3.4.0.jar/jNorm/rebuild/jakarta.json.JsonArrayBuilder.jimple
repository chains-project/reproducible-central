public interface  jakarta.json.JsonArrayBuilder extends java.lang.Object
{
public abstract jakarta.json.JsonArrayBuilder add(jakarta.json.JsonValue);
public abstract jakarta.json.JsonArrayBuilder add(java.lang.String);
public abstract jakarta.json.JsonArrayBuilder add(java.math.BigDecimal);
public abstract jakarta.json.JsonArrayBuilder add(java.math.BigInteger);
public abstract jakarta.json.JsonArrayBuilder add(int);
public abstract jakarta.json.JsonArrayBuilder add(long);
public abstract jakarta.json.JsonArrayBuilder add(double);
public abstract jakarta.json.JsonArrayBuilder add(boolean);
public abstract jakarta.json.JsonArrayBuilder addNull();
public abstract jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder);
public abstract jakarta.json.JsonArrayBuilder add(jakarta.json.JsonArrayBuilder);
public jakarta.json.JsonArrayBuilder addAll(jakarta.json.JsonArrayBuilder)
{
jakarta.json.JsonArrayBuilder v0, v1;
java.lang.UnsupportedOperationException v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: jakarta.json.JsonArrayBuilder;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.json.JsonArrayBuilder add(int, jakarta.json.JsonValue)
{
java.lang.UnsupportedOperationException v3;
jakarta.json.JsonValue v2;
int v1;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, java.lang.String)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
java.lang.String v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, java.math.BigDecimal)
{
java.lang.UnsupportedOperationException v3;
java.math.BigDecimal v2;
int v1;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigDecimal;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, java.math.BigInteger)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
java.math.BigInteger v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigInteger;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, int)
{
java.lang.UnsupportedOperationException v3;
int v1, v2;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, long)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
long v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, double)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
double v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: double;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, boolean)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
boolean v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder addNull(int)
{
jakarta.json.JsonValue v2;
int v1;
jakarta.json.JsonArrayBuilder v0, v3;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
v3 = interfaceinvoke v0.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(int,jakarta.json.JsonValue)>(v1, v2);
return v3;
}
public jakarta.json.JsonArrayBuilder add(int, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObjectBuilder v2;
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonObjectBuilder;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder add(int, jakarta.json.JsonArrayBuilder)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0, v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonArrayBuilder;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, jakarta.json.JsonValue)
{
java.lang.UnsupportedOperationException v3;
jakarta.json.JsonValue v2;
int v1;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, java.lang.String)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
java.lang.String v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, java.math.BigDecimal)
{
java.lang.UnsupportedOperationException v3;
java.math.BigDecimal v2;
int v1;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigDecimal;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, java.math.BigInteger)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
java.math.BigInteger v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigInteger;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, int)
{
java.lang.UnsupportedOperationException v3;
int v1, v2;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, long)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
long v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, double)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
double v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: double;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, boolean)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
boolean v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder setNull(int)
{
jakarta.json.JsonValue v2;
int v1;
jakarta.json.JsonArrayBuilder v0, v3;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
v3 = interfaceinvoke v0.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder set(int,jakarta.json.JsonValue)>(v1, v2);
return v3;
}
public jakarta.json.JsonArrayBuilder set(int, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObjectBuilder v2;
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonObjectBuilder;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder set(int, jakarta.json.JsonArrayBuilder)
{
java.lang.UnsupportedOperationException v3;
int v1;
jakarta.json.JsonArrayBuilder v0, v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonArrayBuilder;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.json.JsonArrayBuilder remove(int)
{
int v1;
jakarta.json.JsonArrayBuilder v0;
java.lang.UnsupportedOperationException v2;
v0 := @this: jakarta.json.JsonArrayBuilder;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public abstract jakarta.json.JsonArray build();
}