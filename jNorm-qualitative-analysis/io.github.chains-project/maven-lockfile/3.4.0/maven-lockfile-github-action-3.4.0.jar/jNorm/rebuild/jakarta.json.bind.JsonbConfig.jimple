public class jakarta.json.bind.JsonbConfig extends java.lang.Object
{
private final java.util.Map configuration;
public static final java.lang.String FORMATTING;
public static final java.lang.String ENCODING;
public static final java.lang.String PROPERTY_NAMING_STRATEGY;
public static final java.lang.String PROPERTY_ORDER_STRATEGY;
public static final java.lang.String NULL_VALUES;
public static final java.lang.String STRICT_IJSON;
public static final java.lang.String PROPERTY_VISIBILITY_STRATEGY;
public static final java.lang.String ADAPTERS;
public static final java.lang.String SERIALIZERS;
public static final java.lang.String DESERIALIZERS;
public static final java.lang.String BINARY_DATA_STRATEGY;
public static final java.lang.String DATE_FORMAT;
public static final java.lang.String LOCALE;
public static final java.lang.String CREATOR_PARAMETERS_REQUIRED;
public void <init>()
{
jakarta.json.bind.JsonbConfig v0;
java.util.HashMap v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v0.<jakarta.json.bind.JsonbConfig: java.util.Map configuration> = v1;
return;
}
public final jakarta.json.bind.JsonbConfig setProperty(java.lang.String, java.lang.Object)
{
jakarta.json.bind.JsonbConfig v0;
java.util.Map v3;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<jakarta.json.bind.JsonbConfig: java.util.Map configuration>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public final java.util.Optional getProperty(java.lang.String)
{
jakarta.json.bind.JsonbConfig v0;
java.util.Map v2;
java.util.Optional v4;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 = v0.<jakarta.json.bind.JsonbConfig: java.util.Map configuration>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v4 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>(v3);
return v4;
}
public final java.util.Map getAsMap()
{
jakarta.json.bind.JsonbConfig v0;
java.util.Map v1, v2;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 = v0.<jakarta.json.bind.JsonbConfig: java.util.Map configuration>;
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withFormatting(java.lang.Boolean)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.Boolean v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.Boolean;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.formatting", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withNullValues(java.lang.Boolean)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.Boolean v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.Boolean;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.null-values", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withEncoding(java.lang.String)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.encoding", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withStrictIJSON(java.lang.Boolean)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.Boolean v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.Boolean;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.strict-ijson", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withPropertyNamingStrategy(jakarta.json.bind.config.PropertyNamingStrategy)
{
jakarta.json.bind.JsonbConfig v0, v2;
jakarta.json.bind.config.PropertyNamingStrategy v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: jakarta.json.bind.config.PropertyNamingStrategy;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.property-naming-strategy", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withPropertyNamingStrategy(java.lang.String)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.property-naming-strategy", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withPropertyOrderStrategy(java.lang.String)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.property-order-strategy", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withPropertyVisibilityStrategy(jakarta.json.bind.config.PropertyVisibilityStrategy)
{
jakarta.json.bind.JsonbConfig v0, v2;
jakarta.json.bind.config.PropertyVisibilityStrategy v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: jakarta.json.bind.config.PropertyVisibilityStrategy;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.property-visibility-strategy", v1);
return v2;
}
public final transient jakarta.json.bind.JsonbConfig withAdapters(jakarta.json.bind.adapter.JsonbAdapter[])
{
jakarta.json.bind.JsonbConfig v0;
jakarta.json.bind.adapter.JsonbAdapter[] v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: jakarta.json.bind.adapter.JsonbAdapter[];
specialinvoke v0.<jakarta.json.bind.JsonbConfig: void mergeProperties(java.lang.String,java.lang.Object[],java.lang.Class)>("jsonb.adapters", v1, class "Ljakarta/json/bind/adapter/JsonbAdapter;");
return v0;
}
public final transient jakarta.json.bind.JsonbConfig withSerializers(jakarta.json.bind.serializer.JsonbSerializer[])
{
jakarta.json.bind.JsonbConfig v0;
jakarta.json.bind.serializer.JsonbSerializer[] v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: jakarta.json.bind.serializer.JsonbSerializer[];
specialinvoke v0.<jakarta.json.bind.JsonbConfig: void mergeProperties(java.lang.String,java.lang.Object[],java.lang.Class)>("jsonb.serializers", v1, class "Ljakarta/json/bind/serializer/JsonbSerializer;");
return v0;
}
public final transient jakarta.json.bind.JsonbConfig withDeserializers(jakarta.json.bind.serializer.JsonbDeserializer[])
{
jakarta.json.bind.JsonbConfig v0;
jakarta.json.bind.serializer.JsonbDeserializer[] v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: jakarta.json.bind.serializer.JsonbDeserializer[];
specialinvoke v0.<jakarta.json.bind.JsonbConfig: void mergeProperties(java.lang.String,java.lang.Object[],java.lang.Class)>("jsonb.derializers", v1, class "Ljakarta/json/bind/serializer/JsonbDeserializer;");
return v0;
}
public final jakarta.json.bind.JsonbConfig withBinaryDataStrategy(java.lang.String)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.binary-data-strategy", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withDateFormat(java.lang.String, java.util.Locale)
{
jakarta.json.bind.JsonbConfig v0, v3, v5;
java.util.Locale v2, v4;
java.lang.String v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Locale;
v3 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.date-format", v1);
if v2 == null goto label1;
v4 = v2;
goto label2;
label1:
v4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
label2:
v5 = virtualinvoke v3.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.locale", v4);
return v5;
}
public final jakarta.json.bind.JsonbConfig withLocale(java.util.Locale)
{
jakarta.json.bind.JsonbConfig v0, v2;
java.util.Locale v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.util.Locale;
v2 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.locale", v1);
return v2;
}
public final jakarta.json.bind.JsonbConfig withCreatorParametersRequired(boolean)
{
jakarta.json.bind.JsonbConfig v0, v3;
java.lang.Boolean v2;
boolean v1;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>("jsonb.creator-parameters-required", v2);
return v3;
}
private void mergeProperties(java.lang.String, java.lang.Object[], java.lang.Class)
{
jakarta.json.bind.JsonbConfig v0;
java.lang.Object[] v2;
int v11, v12, v13, v7, v8, v9;
java.util.Optional v4;
java.lang.Class v3;
java.lang.Object v10, v6;
java.lang.String v1;
boolean v5;
v0 := @this: jakarta.json.bind.JsonbConfig;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v0.<jakarta.json.bind.JsonbConfig: java.util.Optional getProperty(java.lang.String)>(v1);
v5 = virtualinvoke v4.<java.util.Optional: boolean isPresent()>();
if v5 != 0 goto label1;
virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>(v1, v2);
return;
label1:
v6 = virtualinvoke v4.<java.util.Optional: java.lang.Object get()>();
v7 = lengthof v6;
v8 = lengthof v2;
v9 = v7 + v8;
v10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v3, v9);
v11 = lengthof v6;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v6, 0, v10, 0, v11);
v12 = lengthof v6;
v13 = lengthof v2;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v10, v12, v13);
virtualinvoke v0.<jakarta.json.bind.JsonbConfig: jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)>(v1, v10);
return;
}
}