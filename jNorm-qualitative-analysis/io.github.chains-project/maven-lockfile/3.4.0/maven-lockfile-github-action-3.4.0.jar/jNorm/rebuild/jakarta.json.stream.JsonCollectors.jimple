public final class jakarta.json.stream.JsonCollectors extends java.lang.Object
{
private void <init>()
{
jakarta.json.stream.JsonCollectors v0;
v0 := @this: jakarta.json.stream.JsonCollectors;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.stream.Collector toJsonArray()
{
java.util.function.BiConsumer v1;
java.util.stream.Collector v5;
java.util.function.Function v3;
java.util.function.Supplier v0;
java.util.function.BinaryOperator v2;
java.util.stream.Collector$Characteristics[] v4;
v0 = staticinvoke <jakarta.json.stream.JsonCollectors$createArrayBuilder__566: java.util.function.Supplier bootstrap$()>();
v1 = staticinvoke <jakarta.json.stream.JsonCollectors$add__567: java.util.function.BiConsumer bootstrap$()>();
v2 = staticinvoke <jakarta.json.stream.JsonCollectors$addAll__568: java.util.function.BinaryOperator bootstrap$()>();
v3 = staticinvoke <jakarta.json.stream.JsonCollectors$build__569: java.util.function.Function bootstrap$()>();
v4 = newarray (java.util.stream.Collector$Characteristics)[0];
v5 = staticinvoke <java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector$Characteristics[])>(v0, v1, v2, v3, v4);
return v5;
}
public static java.util.stream.Collector toJsonObject()
{
java.util.function.BiConsumer v1;
java.util.stream.Collector v5;
java.util.function.Function v3;
java.util.function.Supplier v0;
java.util.function.BinaryOperator v2;
java.util.stream.Collector$Characteristics[] v4;
v0 = staticinvoke <jakarta.json.stream.JsonCollectors$createObjectBuilder__570: java.util.function.Supplier bootstrap$()>();
v1 = staticinvoke <jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571: java.util.function.BiConsumer bootstrap$()>();
v2 = staticinvoke <jakarta.json.stream.JsonCollectors$addAll__572: java.util.function.BinaryOperator bootstrap$()>();
v3 = staticinvoke <jakarta.json.stream.JsonCollectors$build__573: java.util.function.Function bootstrap$()>();
v4 = newarray (java.util.stream.Collector$Characteristics)[0];
v5 = staticinvoke <java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector$Characteristics[])>(v0, v1, v2, v3, v4);
return v5;
}
public static java.util.stream.Collector toJsonObject(java.util.function.Function, java.util.function.Function)
{
java.util.function.Function v0, v1, v5;
java.util.function.Supplier v2;
java.util.function.BinaryOperator v4;
java.util.stream.Collector$Characteristics v7;
java.util.function.BiConsumer v3;
java.util.stream.Collector v8;
java.util.stream.Collector$Characteristics[] v6;
v0 := @parameter0: java.util.function.Function;
v1 := @parameter1: java.util.function.Function;
v2 = staticinvoke <jakarta.json.stream.JsonCollectors$createObjectBuilder__574: java.util.function.Supplier bootstrap$()>();
v3 = staticinvoke <jakarta.json.stream.JsonCollectors$lambda_toJsonObject_1__575: java.util.function.BiConsumer bootstrap$(java.util.function.Function,java.util.function.Function)>(v0, v1);
v4 = staticinvoke <jakarta.json.stream.JsonCollectors$addAll__576: java.util.function.BinaryOperator bootstrap$()>();
v5 = staticinvoke <jakarta.json.stream.JsonCollectors$build__577: java.util.function.Function bootstrap$()>();
v6 = newarray (java.util.stream.Collector$Characteristics)[1];
v7 = <java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics UNORDERED>;
v6[0] = v7;
v8 = staticinvoke <java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector$Characteristics[])>(v2, v3, v4, v5, v6);
return v8;
}
public static java.util.stream.Collector groupingBy(java.util.function.Function, java.util.stream.Collector)
{
java.util.function.Function v0, v3;
java.util.function.Supplier v5;
java.util.function.BinaryOperator v4;
java.util.stream.Collector$Characteristics v7;
java.util.function.BiConsumer v2;
java.util.stream.Collector v1, v8;
java.util.stream.Collector$Characteristics[] v6;
v0 := @parameter0: java.util.function.Function;
v1 := @parameter1: java.util.stream.Collector;
v2 = staticinvoke <jakarta.json.stream.JsonCollectors$lambda_groupingBy_3__578: java.util.function.BiConsumer bootstrap$(java.util.function.Function,java.util.stream.Collector)>(v0, v1);
v3 = staticinvoke <jakarta.json.stream.JsonCollectors$lambda_groupingBy_5__579: java.util.function.Function bootstrap$(java.util.stream.Collector)>(v1);
v4 = staticinvoke <jakarta.json.stream.JsonCollectors$lambda_groupingBy_6__580: java.util.function.BinaryOperator bootstrap$()>();
v5 = staticinvoke <jakarta.json.stream.JsonCollectors$init__581: java.util.function.Supplier bootstrap$()>();
v6 = newarray (java.util.stream.Collector$Characteristics)[1];
v7 = <java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics UNORDERED>;
v6[0] = v7;
v8 = staticinvoke <java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector$Characteristics[])>(v5, v2, v4, v3, v6);
return v8;
}
public static java.util.stream.Collector groupingBy(java.util.function.Function)
{
java.util.stream.Collector v1, v2;
java.util.function.Function v0;
v0 := @parameter0: java.util.function.Function;
v1 = staticinvoke <jakarta.json.stream.JsonCollectors: java.util.stream.Collector toJsonArray()>();
v2 = staticinvoke <jakarta.json.stream.JsonCollectors: java.util.stream.Collector groupingBy(java.util.function.Function,java.util.stream.Collector)>(v0, v1);
return v2;
}
}