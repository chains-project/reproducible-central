public final enum class jakarta.json.stream.JsonParser$Event extends java.lang.Enum
{
public static final enum jakarta.json.stream.JsonParser$Event START_ARRAY;
public static final enum jakarta.json.stream.JsonParser$Event START_OBJECT;
public static final enum jakarta.json.stream.JsonParser$Event KEY_NAME;
public static final enum jakarta.json.stream.JsonParser$Event VALUE_STRING;
public static final enum jakarta.json.stream.JsonParser$Event VALUE_NUMBER;
public static final enum jakarta.json.stream.JsonParser$Event VALUE_TRUE;
public static final enum jakarta.json.stream.JsonParser$Event VALUE_FALSE;
public static final enum jakarta.json.stream.JsonParser$Event VALUE_NULL;
public static final enum jakarta.json.stream.JsonParser$Event END_OBJECT;
public static final enum jakarta.json.stream.JsonParser$Event END_ARRAY;
private static final jakarta.json.stream.JsonParser$Event[] $VALUES;
public static jakarta.json.stream.JsonParser$Event[] values()
{
java.lang.Object v1;
jakarta.json.stream.JsonParser$Event[] v0;
v0 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static jakarta.json.stream.JsonParser$Event valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljakarta/json/stream/JsonParser$Event;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
jakarta.json.stream.JsonParser$Event v0;
v0 := @this: jakarta.json.stream.JsonParser$Event;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static jakarta.json.stream.JsonParser$Event[] $values()
{
jakarta.json.stream.JsonParser$Event[] v0;
jakarta.json.stream.JsonParser$Event v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (jakarta.json.stream.JsonParser$Event)[10];
v1 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_ARRAY>;
v0[0] = v1;
v2 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_OBJECT>;
v0[1] = v2;
v3 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event KEY_NAME>;
v0[2] = v3;
v4 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_STRING>;
v0[3] = v4;
v5 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_NUMBER>;
v0[4] = v5;
v6 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_TRUE>;
v0[5] = v6;
v7 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_FALSE>;
v0[6] = v7;
v8 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_NULL>;
v0[7] = v8;
v9 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_OBJECT>;
v0[8] = v9;
v10 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_ARRAY>;
v0[9] = v10;
return v0;
}
static void <clinit>()
{
jakarta.json.stream.JsonParser$Event[] v10;
jakarta.json.stream.JsonParser$Event v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v0.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("START_ARRAY", 0);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_ARRAY> = v0;
v1 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v1.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("START_OBJECT", 1);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_OBJECT> = v1;
v2 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v2.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("KEY_NAME", 2);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event KEY_NAME> = v2;
v3 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v3.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("VALUE_STRING", 3);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_STRING> = v3;
v4 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v4.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("VALUE_NUMBER", 4);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_NUMBER> = v4;
v5 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v5.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("VALUE_TRUE", 5);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_TRUE> = v5;
v6 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v6.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("VALUE_FALSE", 6);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_FALSE> = v6;
v7 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v7.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("VALUE_NULL", 7);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_NULL> = v7;
v8 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v8.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("END_OBJECT", 8);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_OBJECT> = v8;
v9 = new jakarta.json.stream.JsonParser$Event;
specialinvoke v9.<jakarta.json.stream.JsonParser$Event: void <init>(java.lang.String,int)>("END_ARRAY", 9);
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_ARRAY> = v9;
v10 = staticinvoke <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event[] $values()>();
<jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event[] $VALUES> = v10;
return;
}
}