public class org.apache.commons.io.CopyUtils extends java.lang.Object
{
public void <init>()
{
org.apache.commons.io.CopyUtils v0;
v0 := @this: org.apache.commons.io.CopyUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void copy(byte[], java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
byte[] v0;
v0 := @parameter0: byte[];
v1 := @parameter1: java.io.OutputStream;
virtualinvoke v1.<java.io.OutputStream: void write(byte[])>(v0);
return;
}
public static void copy(byte[], java.io.Writer) throws java.io.IOException
{
java.io.Writer v1;
byte[] v0;
java.io.ByteArrayInputStream v2;
v0 := @parameter0: byte[];
v1 := @parameter1: java.io.Writer;
v2 = new java.io.ByteArrayInputStream;
specialinvoke v2.<java.io.ByteArrayInputStream: void <init>(byte[])>(v0);
staticinvoke <org.apache.commons.io.CopyUtils: void copy(java.io.InputStream,java.io.Writer)>(v2, v1);
return;
}
public static void copy(byte[], java.io.Writer, java.lang.String) throws java.io.IOException
{
byte[] v0;
java.io.ByteArrayInputStream v3;
java.io.Writer v1;
java.lang.String v2;
v0 := @parameter0: byte[];
v1 := @parameter1: java.io.Writer;
v2 := @parameter2: java.lang.String;
v3 = new java.io.ByteArrayInputStream;
specialinvoke v3.<java.io.ByteArrayInputStream: void <init>(byte[])>(v0);
staticinvoke <org.apache.commons.io.CopyUtils: void copy(java.io.InputStream,java.io.Writer,java.lang.String)>(v3, v1, v2);
return;
}
public static int copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
byte[] v2;
int v3, v4, v5;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 := @parameter1: java.io.OutputStream;
v2 = staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray()>();
v3 = 0;
label1:
v4 = virtualinvoke v0.<java.io.InputStream: int read(byte[])>(v2);
v5 = (int) -1;
if v5 == v4 goto label2;
virtualinvoke v1.<java.io.OutputStream: void write(byte[],int,int)>(v2, 0, v4);
v3 = v3 + v4;
goto label1;
label2:
return v3;
}
public static int copy(java.io.Reader, java.io.Writer) throws java.io.IOException
{
int v3, v4, v5;
java.io.Writer v1;
char[] v2;
java.io.Reader v0;
v0 := @parameter0: java.io.Reader;
v1 := @parameter1: java.io.Writer;
v2 = staticinvoke <org.apache.commons.io.IOUtils: char[] getCharArray()>();
v3 = 0;
label1:
v4 = virtualinvoke v0.<java.io.Reader: int read(char[])>(v2);
v5 = (int) -1;
if v5 == v4 goto label2;
virtualinvoke v1.<java.io.Writer: void write(char[],int,int)>(v2, 0, v4);
v3 = v3 + v4;
goto label1;
label2:
return v3;
}
public static void copy(java.io.InputStream, java.io.Writer) throws java.io.IOException
{
java.nio.charset.Charset v3;
java.io.Writer v1;
java.io.InputStreamReader v2;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 := @parameter1: java.io.Writer;
v2 = new java.io.InputStreamReader;
v3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
specialinvoke v2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(v0, v3);
staticinvoke <org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)>(v2, v1);
return;
}
public static void copy(java.io.InputStream, java.io.Writer, java.lang.String) throws java.io.IOException
{
java.io.Writer v1;
java.lang.String v2;
java.io.InputStreamReader v3;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 := @parameter1: java.io.Writer;
v2 := @parameter2: java.lang.String;
v3 = new java.io.InputStreamReader;
specialinvoke v3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(v0, v2);
staticinvoke <org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)>(v3, v1);
return;
}
public static void copy(java.io.Reader, java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
java.nio.charset.Charset v3;
java.io.OutputStreamWriter v2;
java.io.Reader v0;
v0 := @parameter0: java.io.Reader;
v1 := @parameter1: java.io.OutputStream;
v2 = new java.io.OutputStreamWriter;
v3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
specialinvoke v2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(v1, v3);
staticinvoke <org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)>(v0, v2);
virtualinvoke v2.<java.io.OutputStreamWriter: void flush()>();
return;
}
public static void copy(java.io.Reader, java.io.OutputStream, java.lang.String) throws java.io.IOException
{
java.io.OutputStream v1;
java.io.OutputStreamWriter v3;
java.io.Reader v0;
java.lang.String v2;
v0 := @parameter0: java.io.Reader;
v1 := @parameter1: java.io.OutputStream;
v2 := @parameter2: java.lang.String;
v3 = new java.io.OutputStreamWriter;
specialinvoke v3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(v1, v2);
staticinvoke <org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)>(v0, v3);
virtualinvoke v3.<java.io.OutputStreamWriter: void flush()>();
return;
}
public static void copy(java.lang.String, java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
java.io.StringReader v2;
java.nio.charset.Charset v4;
java.io.OutputStreamWriter v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.io.OutputStream;
v2 = new java.io.StringReader;
specialinvoke v2.<java.io.StringReader: void <init>(java.lang.String)>(v0);
v3 = new java.io.OutputStreamWriter;
v4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
specialinvoke v3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(v1, v4);
staticinvoke <org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)>(v2, v3);
virtualinvoke v3.<java.io.OutputStreamWriter: void flush()>();
return;
}
public static void copy(java.lang.String, java.io.OutputStream, java.lang.String) throws java.io.IOException
{
java.io.OutputStream v1;
java.io.StringReader v3;
java.io.OutputStreamWriter v4;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.io.OutputStream;
v2 := @parameter2: java.lang.String;
v3 = new java.io.StringReader;
specialinvoke v3.<java.io.StringReader: void <init>(java.lang.String)>(v0);
v4 = new java.io.OutputStreamWriter;
specialinvoke v4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(v1, v2);
staticinvoke <org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)>(v3, v4);
virtualinvoke v4.<java.io.OutputStreamWriter: void flush()>();
return;
}
public static void copy(java.lang.String, java.io.Writer) throws java.io.IOException
{
java.io.Writer v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.io.Writer;
virtualinvoke v1.<java.io.Writer: void write(java.lang.String)>(v0);
return;
}
}