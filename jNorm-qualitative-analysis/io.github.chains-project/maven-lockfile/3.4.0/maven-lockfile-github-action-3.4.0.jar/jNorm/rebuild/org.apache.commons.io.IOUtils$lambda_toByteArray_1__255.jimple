public final class org.apache.commons.io.IOUtils$lambda_toByteArray_1__255 extends java.lang.Object implements org.apache.commons.io.function.IOFunction
{
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream cap0;
public static org.apache.commons.io.function.IOFunction bootstrap$(org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream)
{
org.apache.commons.io.IOUtils$lambda_toByteArray_1__255 v1;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @parameter0: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 = new org.apache.commons.io.IOUtils$lambda_toByteArray_1__255;
specialinvoke v1.<org.apache.commons.io.IOUtils$lambda_toByteArray_1__255: void <init>(org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream)>(v0);
return v1;
}
public void <init>(org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream)
{
org.apache.commons.io.IOUtils$lambda_toByteArray_1__255 v0;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v1;
v0 := @this: org.apache.commons.io.IOUtils$lambda_toByteArray_1__255;
v1 := @parameter0: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.io.IOUtils$lambda_toByteArray_1__255: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream cap0> = v1;
return;
}
public java.lang.Object apply(java.lang.Object)
{
java.io.OutputStream v3;
org.apache.commons.io.IOUtils$lambda_toByteArray_1__255 v0;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v2;
java.lang.Object v1;
v0 := @this: org.apache.commons.io.IOUtils$lambda_toByteArray_1__255;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.apache.commons.io.IOUtils$lambda_toByteArray_1__255: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream cap0>;
v3 = staticinvoke <org.apache.commons.io.IOUtils: java.io.OutputStream lambda$toByteArray$1(org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream,org.apache.commons.io.output.ThresholdingOutputStream)>(v2, v1);
return v3;
}
}