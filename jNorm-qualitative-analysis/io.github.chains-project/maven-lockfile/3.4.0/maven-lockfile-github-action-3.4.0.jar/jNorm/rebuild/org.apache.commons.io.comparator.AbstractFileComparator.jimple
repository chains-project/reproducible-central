abstract class org.apache.commons.io.comparator.AbstractFileComparator extends java.lang.Object implements java.util.Comparator
{
void <init>()
{
org.apache.commons.io.comparator.AbstractFileComparator v0;
v0 := @this: org.apache.commons.io.comparator.AbstractFileComparator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public transient java.io.File[] sort(java.io.File[])
{
org.apache.commons.io.comparator.AbstractFileComparator v0;
java.io.File[] v1;
v0 := @this: org.apache.commons.io.comparator.AbstractFileComparator;
v1 := @parameter0: java.io.File[];
if v1 == null goto label1;
staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(v1, v0);
label1:
return v1;
}
public java.util.List sort(java.util.List)
{
org.apache.commons.io.comparator.AbstractFileComparator v0;
java.util.List v1;
v0 := @this: org.apache.commons.io.comparator.AbstractFileComparator;
v1 := @parameter0: java.util.List;
if v1 == null goto label1;
interfaceinvoke v1.<java.util.List: void sort(java.util.Comparator)>(v0);
label1:
return v1;
}
public java.lang.String toString()
{
org.apache.commons.io.comparator.AbstractFileComparator v0;
java.lang.Class v1;
java.lang.String v2;
v0 := @this: org.apache.commons.io.comparator.AbstractFileComparator;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
return v2;
}
}