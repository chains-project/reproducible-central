public class org.apache.commons.io.filefilter.AgeFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
private static final long serialVersionUID;
private final boolean acceptOlder;
private final long cutoffMillis;
public void <init>(java.util.Date)
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
java.util.Date v1;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: java.util.Date;
specialinvoke v0.<org.apache.commons.io.filefilter.AgeFileFilter: void <init>(java.util.Date,boolean)>(v1, 1);
return;
}
public void <init>(java.util.Date, boolean)
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
java.util.Date v1;
long v3;
boolean v2;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<java.util.Date: long getTime()>();
specialinvoke v0.<org.apache.commons.io.filefilter.AgeFileFilter: void <init>(long,boolean)>(v3, v2);
return;
}
public void <init>(java.io.File)
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
java.io.File v1;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: java.io.File;
specialinvoke v0.<org.apache.commons.io.filefilter.AgeFileFilter: void <init>(java.io.File,boolean)>(v1, 1);
return;
}
public void <init>(java.io.File, boolean)
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
long v3;
java.io.File v1;
boolean v2;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: boolean;
v3 = staticinvoke <org.apache.commons.io.FileUtils: long lastModifiedUnchecked(java.io.File)>(v1);
specialinvoke v0.<org.apache.commons.io.filefilter.AgeFileFilter: void <init>(long,boolean)>(v3, v2);
return;
}
public void <init>(long)
{
long v1;
org.apache.commons.io.filefilter.AgeFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: long;
specialinvoke v0.<org.apache.commons.io.filefilter.AgeFileFilter: void <init>(long,boolean)>(v1, 1);
return;
}
public void <init>(long, boolean)
{
long v1;
org.apache.commons.io.filefilter.AgeFileFilter v0;
boolean v2;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: long;
v2 := @parameter1: boolean;
specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();
v0.<org.apache.commons.io.filefilter.AgeFileFilter: boolean acceptOlder> = v2;
v0.<org.apache.commons.io.filefilter.AgeFileFilter: long cutoffMillis> = v1;
return;
}
public boolean accept(java.io.File)
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
long v2;
java.io.File v1;
boolean v3, v4, v5;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: java.io.File;
v2 = v0.<org.apache.commons.io.filefilter.AgeFileFilter: long cutoffMillis>;
v3 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(v1, v2);
v4 = v0.<org.apache.commons.io.filefilter.AgeFileFilter: boolean acceptOlder>;
if v4 == v3 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
java.nio.file.LinkOption[] v4;
java.io.IOException v6;
long v3;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.FileVisitResult v10, v7;
java.nio.file.Path v1;
boolean v5, v8, v9;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
label1:
v3 = v0.<org.apache.commons.io.filefilter.AgeFileFilter: long cutoffMillis>;
v4 = newarray (java.nio.file.LinkOption)[0];
v5 = staticinvoke <org.apache.commons.io.file.PathUtils: boolean isNewer(java.nio.file.Path,long,java.nio.file.LinkOption[])>(v1, v3, v4);
label2:
goto label4;
label3:
v6 := @caughtexception;
v7 = virtualinvoke v0.<org.apache.commons.io.filefilter.AgeFileFilter: java.nio.file.FileVisitResult handle(java.lang.Throwable)>(v6);
return v7;
label4:
v8 = v0.<org.apache.commons.io.filefilter.AgeFileFilter: boolean acceptOlder>;
if v8 == v5 goto label5;
v9 = 1;
goto label6;
label5:
v9 = 0;
label6:
v10 = staticinvoke <org.apache.commons.io.filefilter.AgeFileFilter: java.nio.file.FileVisitResult toFileVisitResult(boolean,java.nio.file.Path)>(v9, v1);
return v10;
catch java.io.IOException from label1 to label2 with label3;
}
public java.lang.String toString()
{
org.apache.commons.io.filefilter.AgeFileFilter v0;
long v4;
java.lang.String v2, v3, v5;
boolean v1;
v0 := @this: org.apache.commons.io.filefilter.AgeFileFilter;
v1 = v0.<org.apache.commons.io.filefilter.AgeFileFilter: boolean acceptOlder>;
if v1 == 0 goto label1;
v2 = "<=";
goto label2;
label1:
v2 = ">";
label2:
v3 = specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();
v4 = v0.<org.apache.commons.io.filefilter.AgeFileFilter: long cutoffMillis>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,long)>(v3, v2, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001\u0001)");
return v5;
}
}