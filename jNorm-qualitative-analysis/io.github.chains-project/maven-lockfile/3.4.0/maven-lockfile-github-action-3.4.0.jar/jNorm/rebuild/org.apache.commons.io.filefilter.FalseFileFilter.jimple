public class org.apache.commons.io.filefilter.FalseFileFilter extends java.lang.Object implements org.apache.commons.io.filefilter.IOFileFilter, java.io.Serializable
{
private static final java.lang.String TO_STRING;
public static final org.apache.commons.io.filefilter.IOFileFilter FALSE;
public static final org.apache.commons.io.filefilter.IOFileFilter INSTANCE;
private static final long serialVersionUID;
protected void <init>()
{
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean accept(java.io.File)
{
java.io.File v1;
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 := @parameter0: java.io.File;
return 0;
}
public boolean accept(java.io.File, java.lang.String)
{
java.lang.String v2;
java.io.File v1;
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.String;
return 0;
}
public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)
{
java.nio.file.FileVisitResult v3;
org.apache.commons.io.filefilter.FalseFileFilter v0;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.Path v1;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
v3 = <java.nio.file.FileVisitResult: java.nio.file.FileVisitResult TERMINATE>;
return v3;
}
public org.apache.commons.io.filefilter.IOFileFilter negate()
{
org.apache.commons.io.filefilter.IOFileFilter v1;
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 = <org.apache.commons.io.filefilter.TrueFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE>;
return v1;
}
public java.lang.String toString()
{
java.lang.String v1;
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 = <org.apache.commons.io.filefilter.FalseFileFilter: java.lang.String TO_STRING>;
return v1;
}
public org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter)
{
org.apache.commons.io.filefilter.IOFileFilter v1, v2;
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 := @parameter0: org.apache.commons.io.filefilter.IOFileFilter;
v2 = <org.apache.commons.io.filefilter.FalseFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE>;
return v2;
}
public org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter)
{
org.apache.commons.io.filefilter.IOFileFilter v1;
org.apache.commons.io.filefilter.FalseFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.FalseFileFilter;
v1 := @parameter0: org.apache.commons.io.filefilter.IOFileFilter;
return v1;
}
static void <clinit>()
{
org.apache.commons.io.filefilter.IOFileFilter v3;
org.apache.commons.io.filefilter.FalseFileFilter v2;
java.lang.Boolean v0;
java.lang.String v1;
v0 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v1 = virtualinvoke v0.<java.lang.Boolean: java.lang.String toString()>();
<org.apache.commons.io.filefilter.FalseFileFilter: java.lang.String TO_STRING> = v1;
v2 = new org.apache.commons.io.filefilter.FalseFileFilter;
specialinvoke v2.<org.apache.commons.io.filefilter.FalseFileFilter: void <init>()>();
<org.apache.commons.io.filefilter.FalseFileFilter: org.apache.commons.io.filefilter.IOFileFilter FALSE> = v2;
v3 = <org.apache.commons.io.filefilter.FalseFileFilter: org.apache.commons.io.filefilter.IOFileFilter FALSE>;
<org.apache.commons.io.filefilter.FalseFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE> = v3;
return;
}
}