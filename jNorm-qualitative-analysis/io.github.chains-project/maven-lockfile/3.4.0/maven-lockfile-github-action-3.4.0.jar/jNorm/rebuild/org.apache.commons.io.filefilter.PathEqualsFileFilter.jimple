public class org.apache.commons.io.filefilter.PathEqualsFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter
{
private final java.nio.file.Path path;
public void <init>(java.nio.file.Path)
{
org.apache.commons.io.filefilter.PathEqualsFileFilter v0;
java.nio.file.Path v1;
v0 := @this: org.apache.commons.io.filefilter.PathEqualsFileFilter;
v1 := @parameter0: java.nio.file.Path;
specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();
v0.<org.apache.commons.io.filefilter.PathEqualsFileFilter: java.nio.file.Path path> = v1;
return;
}
public boolean accept(java.io.File)
{
org.apache.commons.io.filefilter.PathEqualsFileFilter v0;
java.nio.file.Path v2, v3;
java.io.File v1;
boolean v4;
v0 := @this: org.apache.commons.io.filefilter.PathEqualsFileFilter;
v1 := @parameter0: java.io.File;
v2 = v0.<org.apache.commons.io.filefilter.PathEqualsFileFilter: java.nio.file.Path path>;
v3 = virtualinvoke v1.<java.io.File: java.nio.file.Path toPath()>();
v4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v2, v3);
return v4;
}
public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)
{
org.apache.commons.io.filefilter.PathEqualsFileFilter v0;
java.nio.file.FileVisitResult v5;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.Path v1, v3;
boolean v4;
v0 := @this: org.apache.commons.io.filefilter.PathEqualsFileFilter;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
v3 = v0.<org.apache.commons.io.filefilter.PathEqualsFileFilter: java.nio.file.Path path>;
v4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v3, v1);
v5 = staticinvoke <org.apache.commons.io.filefilter.PathEqualsFileFilter: java.nio.file.FileVisitResult toFileVisitResult(boolean,java.nio.file.Path)>(v4, v1);
return v5;
}
}