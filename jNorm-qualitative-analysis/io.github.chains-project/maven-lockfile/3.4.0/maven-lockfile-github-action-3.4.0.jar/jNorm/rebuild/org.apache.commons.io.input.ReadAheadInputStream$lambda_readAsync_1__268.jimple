public final class org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268 extends java.lang.Object implements java.lang.Runnable
{
org.apache.commons.io.input.ReadAheadInputStream cap0;
byte[] cap1;
public static java.lang.Runnable bootstrap$(org.apache.commons.io.input.ReadAheadInputStream, byte[])
{
byte[] v1;
org.apache.commons.io.input.ReadAheadInputStream v0;
org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268 v2;
v0 := @parameter0: org.apache.commons.io.input.ReadAheadInputStream;
v1 := @parameter1: byte[];
v2 = new org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268;
specialinvoke v2.<org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268: void <init>(org.apache.commons.io.input.ReadAheadInputStream,byte[])>(v0, v1);
return v2;
}
public void <init>(org.apache.commons.io.input.ReadAheadInputStream, byte[])
{
byte[] v2;
org.apache.commons.io.input.ReadAheadInputStream v1;
org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268 v0;
v0 := @this: org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268;
v1 := @parameter0: org.apache.commons.io.input.ReadAheadInputStream;
v2 := @parameter1: byte[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268: org.apache.commons.io.input.ReadAheadInputStream cap0> = v1;
v0.<org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268: byte[] cap1> = v2;
return;
}
public void run()
{
byte[] v2;
org.apache.commons.io.input.ReadAheadInputStream v1;
org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268 v0;
v0 := @this: org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268;
v1 = v0.<org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268: org.apache.commons.io.input.ReadAheadInputStream cap0>;
v2 = v0.<org.apache.commons.io.input.ReadAheadInputStream$lambda_readAsync_1__268: byte[] cap1>;
specialinvoke v1.<org.apache.commons.io.input.ReadAheadInputStream: void lambda$readAsync$1(byte[])>(v2);
return;
}
}