public class org.apache.commons.io.input.ReversedLinesFileReader extends java.lang.Object implements java.io.Closeable
{
private static final java.lang.String EMPTY_STRING;
private static final int DEFAULT_BLOCK_SIZE;
private final int blockSize;
private final java.nio.charset.Charset charset;
private final java.nio.channels.SeekableByteChannel channel;
private final long totalByteLength;
private final long totalBlockCount;
private final byte[][] newLineSequences;
private final int avoidNewlineSplitBufferSize;
private final int byteDecrement;
private org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart;
private boolean trailingNewlineOfFileSkipped;
public void <init>(java.io.File) throws java.io.IOException
{
java.nio.charset.Charset v2;
java.io.File v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.io.File;
v2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
specialinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(v1, 8192, v2);
return;
}
public void <init>(java.io.File, java.nio.charset.Charset) throws java.io.IOException
{
java.nio.charset.Charset v2;
java.nio.file.Path v3;
java.io.File v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.nio.charset.Charset;
v3 = virtualinvoke v1.<java.io.File: java.nio.file.Path toPath()>();
specialinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.nio.file.Path,java.nio.charset.Charset)>(v3, v2);
return;
}
public void <init>(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException
{
java.nio.charset.Charset v3;
int v2;
java.nio.file.Path v4;
java.io.File v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.io.File;
v2 := @parameter1: int;
v3 := @parameter2: java.nio.charset.Charset;
v4 = virtualinvoke v1.<java.io.File: java.nio.file.Path toPath()>();
specialinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.nio.file.Path,int,java.nio.charset.Charset)>(v4, v2, v3);
return;
}
public void <init>(java.io.File, int, java.lang.String) throws java.io.IOException
{
int v2;
java.lang.String v3;
java.nio.file.Path v4;
java.io.File v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.io.File;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v1.<java.io.File: java.nio.file.Path toPath()>();
specialinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.nio.file.Path,int,java.lang.String)>(v4, v2, v3);
return;
}
public void <init>(java.nio.file.Path, java.nio.charset.Charset) throws java.io.IOException
{
java.nio.charset.Charset v2;
java.nio.file.Path v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.charset.Charset;
specialinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.nio.file.Path,int,java.nio.charset.Charset)>(v1, 8192, v2);
return;
}
public void <init>(java.nio.file.Path, int, java.nio.charset.Charset) throws java.io.IOException
{
byte[] v33, v36, v39, v41;
org.apache.commons.io.StandardLineSeparator v31, v34, v37;
byte v56, v8;
java.nio.file.Path v1;
org.apache.commons.io.input.ReversedLinesFileReader$FilePart v57;
java.nio.file.StandardOpenOption v44;
java.nio.channels.SeekableByteChannel v45, v46;
byte[][] v30, v40;
java.nio.charset.CharsetEncoder v6;
float v7;
java.io.UnsupportedEncodingException v27, v28;
long v47, v48, v49, v50, v51, v52, v53, v54, v55, v58;
org.apache.commons.io.input.ReversedLinesFileReader v0;
java.nio.charset.Charset v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v3, v32, v35, v38, v4, v5, v9;
java.nio.file.OpenOption[] v43;
int v2, v42;
java.lang.String v29;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: int;
v3 := @parameter2: java.nio.charset.Charset;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.io.input.ReversedLinesFileReader: int blockSize> = v2;
v4 = staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(v3);
v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset> = v4;
v5 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v6 = virtualinvoke v5.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
v7 = virtualinvoke v6.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>();
v8 = v7 cmpl 1.0F;
if v8 != 0 goto label01;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 1;
goto label08;
label01:
v9 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
if v9 != v10 goto label02;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 1;
goto label08;
label02:
v11 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v12 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("Shift_JIS");
if v11 == v12 goto label03;
v13 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v14 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("windows-31j");
if v13 == v14 goto label03;
v15 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v16 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("x-windows-949");
if v15 == v16 goto label03;
v17 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v18 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("gbk");
if v17 == v18 goto label03;
v19 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v20 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("x-windows-950");
if v19 != v20 goto label04;
label03:
v0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 1;
goto label08;
label04:
v21 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v22 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>;
if v21 == v22 goto label05;
v23 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v24 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>;
if v23 != v24 goto label06;
label05:
v0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 2;
goto label08;
label06:
v25 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v26 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>;
if v25 != v26 goto label07;
v27 = new java.io.UnsupportedEncodingException;
specialinvoke v27.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>("For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)");
throw v27;
label07:
v28 = new java.io.UnsupportedEncodingException;
v29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.nio.charset.Charset)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Encoding \u0001 is not supported yet (feel free to submit a patch)");
specialinvoke v28.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(v29);
throw v28;
label08:
v30 = newarray (byte[])[3];
v31 = <org.apache.commons.io.StandardLineSeparator: org.apache.commons.io.StandardLineSeparator CRLF>;
v32 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v33 = virtualinvoke v31.<org.apache.commons.io.StandardLineSeparator: byte[] getBytes(java.nio.charset.Charset)>(v32);
v30[0] = v33;
v34 = <org.apache.commons.io.StandardLineSeparator: org.apache.commons.io.StandardLineSeparator LF>;
v35 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v36 = virtualinvoke v34.<org.apache.commons.io.StandardLineSeparator: byte[] getBytes(java.nio.charset.Charset)>(v35);
v30[1] = v36;
v37 = <org.apache.commons.io.StandardLineSeparator: org.apache.commons.io.StandardLineSeparator CR>;
v38 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset charset>;
v39 = virtualinvoke v37.<org.apache.commons.io.StandardLineSeparator: byte[] getBytes(java.nio.charset.Charset)>(v38);
v30[2] = v39;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: byte[][] newLineSequences> = v30;
v40 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: byte[][] newLineSequences>;
v41 = v40[0];
v42 = lengthof v41;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: int avoidNewlineSplitBufferSize> = v42;
v43 = newarray (java.nio.file.OpenOption)[1];
v44 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption READ>;
v43[0] = v44;
v45 = staticinvoke <java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.nio.file.OpenOption[])>(v1, v43);
v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.channels.SeekableByteChannel channel> = v45;
v46 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.channels.SeekableByteChannel channel>;
v47 = interfaceinvoke v46.<java.nio.channels.SeekableByteChannel: long size()>();
v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength> = v47;
v48 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;
v49 = v48 % v2;
if v49 <= 0 goto label09;
v50 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;
v51 = v50 / v2;
v52 = v51 + 1L;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalBlockCount> = v52;
goto label10;
label09:
v53 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;
v54 = v53 / v2;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalBlockCount> = v54;
v55 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;
v56 = v55 cmp 0L;
if v56 <= 0 goto label10;
v49 = v2;
label10:
v57 = new org.apache.commons.io.input.ReversedLinesFileReader$FilePart;
v58 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalBlockCount>;
specialinvoke v57.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>(v0, v58, v49, null);
v0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart> = v57;
return;
}
public void <init>(java.nio.file.Path, int, java.lang.String) throws java.io.IOException
{
java.nio.charset.Charset v4;
int v2;
java.lang.String v3;
java.nio.file.Path v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.lang.String)>(v3);
specialinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.nio.file.Path,int,java.nio.charset.Charset)>(v1, v2, v4);
return;
}
public void close() throws java.io.IOException
{
java.nio.channels.SeekableByteChannel v1;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.channels.SeekableByteChannel channel>;
interfaceinvoke v1.<java.nio.channels.SeekableByteChannel: void close()>();
return;
}
public java.lang.String readLine() throws java.io.IOException
{
org.apache.commons.io.input.ReversedLinesFileReader v0;
java.lang.String v2, v7;
org.apache.commons.io.input.ReversedLinesFileReader$FilePart v1, v3, v4, v5, v6;
boolean v8, v9;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;
v2 = specialinvoke v1.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>();
label1:
if v2 != null goto label2;
v3 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;
v4 = specialinvoke v3.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>();
v0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart> = v4;
v5 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;
if v5 == null goto label2;
v6 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;
v2 = specialinvoke v6.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>();
goto label1;
label2:
v7 = "";
v8 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v8 == 0 goto label3;
v9 = v0.<org.apache.commons.io.input.ReversedLinesFileReader: boolean trailingNewlineOfFileSkipped>;
if v9 != 0 goto label3;
v0.<org.apache.commons.io.input.ReversedLinesFileReader: boolean trailingNewlineOfFileSkipped> = 1;
v2 = virtualinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>();
label3:
return v2;
}
public java.util.List readLines(int) throws java.io.IOException
{
int v1, v4;
java.lang.String v5;
java.lang.IllegalArgumentException v2;
java.util.ArrayList v3;
org.apache.commons.io.input.ReversedLinesFileReader v0;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: int;
if v1 >= 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lineCount < 0");
throw v2;
label1:
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>(int)>(v1);
v4 = 0;
label2:
if v4 >= v1 goto label4;
v5 = virtualinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>();
if v5 != null goto label3;
return v3;
label3:
virtualinvoke v3.<java.util.ArrayList: boolean add(java.lang.Object)>(v5);
v4 = v4 + 1;
goto label2;
label4:
return v3;
}
public java.lang.String toString(int) throws java.io.IOException
{
org.apache.commons.io.input.ReversedLinesFileReader v0;
java.util.List v2;
int v1;
java.lang.String v4, v5, v6, v7;
boolean v3;
v0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.apache.commons.io.input.ReversedLinesFileReader: java.util.List readLines(int)>(v1);
staticinvoke <java.util.Collections: void reverse(java.util.List)>(v2);
v3 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = "";
goto label2;
label1:
v5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v6 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(v5, v2);
v7 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
label2:
return v4;
}
}