public class org.apache.commons.io.output.AppendableWriter extends java.io.Writer
{
private final java.lang.Appendable appendable;
public void <init>(java.lang.Appendable)
{
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v1;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: java.lang.Appendable;
specialinvoke v0.<java.io.Writer: void <init>()>();
v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable> = v1;
return;
}
public java.io.Writer append(char) throws java.io.IOException
{
char v1;
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v2;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: char;
v2 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
interfaceinvoke v2.<java.lang.Appendable: java.lang.Appendable append(char)>(v1);
return v0;
}
public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
{
java.lang.CharSequence v1;
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v2;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: java.lang.CharSequence;
v2 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
interfaceinvoke v2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(v1);
return v0;
}
public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
{
java.lang.CharSequence v1;
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v4;
int v2, v3;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
interfaceinvoke v4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>(v1, v2, v3);
return v0;
}
public void close() throws java.io.IOException
{
org.apache.commons.io.output.AppendableWriter v0;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
return;
}
public void flush() throws java.io.IOException
{
org.apache.commons.io.output.AppendableWriter v0;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
return;
}
public java.lang.Appendable getAppendable()
{
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v1;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
return v1;
}
public void write(char[], int, int) throws java.io.IOException
{
java.lang.IndexOutOfBoundsException v6;
java.lang.Appendable v10;
char v12;
org.apache.commons.io.output.AppendableWriter v0;
int v11, v2, v3, v4, v5, v7, v9;
char[] v1;
java.lang.String v8;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Character array is missing");
if v3 < 0 goto label1;
v4 = v2 + v3;
v5 = lengthof v1;
if v4 <= v5 goto label2;
label1:
v6 = new java.lang.IndexOutOfBoundsException;
v7 = lengthof v1;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v7, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Array Size=\u0001, offset=\u0001, length=\u0001");
specialinvoke v6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v8);
throw v6;
label2:
v9 = 0;
label3:
if v9 >= v3 goto label4;
v10 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
v11 = v2 + v9;
v12 = v1[v11];
interfaceinvoke v10.<java.lang.Appendable: java.lang.Appendable append(char)>(v12);
v9 = v9 + 1;
goto label3;
label4:
return;
}
public void write(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v2;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
interfaceinvoke v2.<java.lang.Appendable: java.lang.Appendable append(char)>(v1);
return;
}
public void write(java.lang.String, int, int) throws java.io.IOException
{
org.apache.commons.io.output.AppendableWriter v0;
java.lang.Appendable v4;
int v2, v3, v5;
java.lang.String v1;
v0 := @this: org.apache.commons.io.output.AppendableWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "String is missing");
v4 = v0.<org.apache.commons.io.output.AppendableWriter: java.lang.Appendable appendable>;
v5 = v2 + v3;
interfaceinvoke v4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>(v1, v2, v5);
return;
}
}