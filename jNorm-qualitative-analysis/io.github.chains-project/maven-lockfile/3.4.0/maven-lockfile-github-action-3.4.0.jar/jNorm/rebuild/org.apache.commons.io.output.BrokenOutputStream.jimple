public class org.apache.commons.io.output.BrokenOutputStream extends java.io.OutputStream
{
private final java.io.IOException exception;
public void <init>(java.io.IOException)
{
java.io.IOException v1;
org.apache.commons.io.output.BrokenOutputStream v0;
v0 := @this: org.apache.commons.io.output.BrokenOutputStream;
v1 := @parameter0: java.io.IOException;
specialinvoke v0.<java.io.OutputStream: void <init>()>();
v0.<org.apache.commons.io.output.BrokenOutputStream: java.io.IOException exception> = v1;
return;
}
public void <init>()
{
java.io.IOException v1;
org.apache.commons.io.output.BrokenOutputStream v0;
v0 := @this: org.apache.commons.io.output.BrokenOutputStream;
v1 = new java.io.IOException;
specialinvoke v1.<java.io.IOException: void <init>(java.lang.String)>("Broken output stream");
specialinvoke v0.<org.apache.commons.io.output.BrokenOutputStream: void <init>(java.io.IOException)>(v1);
return;
}
public void write(int) throws java.io.IOException
{
int v1;
java.io.IOException v2;
org.apache.commons.io.output.BrokenOutputStream v0;
v0 := @this: org.apache.commons.io.output.BrokenOutputStream;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.output.BrokenOutputStream: java.io.IOException exception>;
throw v2;
}
public void flush() throws java.io.IOException
{
java.io.IOException v1;
org.apache.commons.io.output.BrokenOutputStream v0;
v0 := @this: org.apache.commons.io.output.BrokenOutputStream;
v1 = v0.<org.apache.commons.io.output.BrokenOutputStream: java.io.IOException exception>;
throw v1;
}
public void close() throws java.io.IOException
{
java.io.IOException v1;
org.apache.commons.io.output.BrokenOutputStream v0;
v0 := @this: org.apache.commons.io.output.BrokenOutputStream;
v1 = v0.<org.apache.commons.io.output.BrokenOutputStream: java.io.IOException exception>;
throw v1;
}
}