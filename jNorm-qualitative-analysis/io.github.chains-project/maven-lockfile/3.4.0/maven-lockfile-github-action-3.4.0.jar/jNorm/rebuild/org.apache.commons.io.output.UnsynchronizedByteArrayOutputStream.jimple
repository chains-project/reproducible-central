public final class org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream extends org.apache.commons.io.output.AbstractByteArrayOutputStream
{
public void <init>()
{
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
specialinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void <init>(int)>(1024);
return;
}
public void <init>(int)
{
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
int v1;
java.lang.String v3;
java.lang.IllegalArgumentException v2;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 := @parameter0: int;
specialinvoke v0.<org.apache.commons.io.output.AbstractByteArrayOutputStream: void <init>()>();
if v1 >= 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Negative initial size: \u0001");
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void needNewBuffer(int)>(v1);
return;
}
public void write(byte[], int, int)
{
byte[] v1;
java.lang.IndexOutOfBoundsException v8;
java.lang.Object[] v9;
java.lang.Integer v10, v11;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
int v2, v3, v4, v5, v6, v7;
java.lang.String v12;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
if v2 < 0 goto label1;
v4 = lengthof v1;
if v2 > v4 goto label1;
if v3 < 0 goto label1;
v5 = v2 + v3;
v6 = lengthof v1;
if v5 > v6 goto label1;
v7 = v2 + v3;
if v7 >= 0 goto label2;
label1:
v8 = new java.lang.IndexOutOfBoundsException;
v9 = newarray (java.lang.Object)[2];
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v9[0] = v10;
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v9[1] = v11;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("offset=%,d, length=%,d", v9);
specialinvoke v8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v12);
throw v8;
label2:
if v3 != 0 goto label3;
return;
label3:
virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void writeImpl(byte[],int,int)>(v1, v2, v3);
return;
}
public void write(int)
{
int v1;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 := @parameter0: int;
virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void writeImpl(int)>(v1);
return;
}
public int write(java.io.InputStream) throws java.io.IOException
{
int v2;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 := @parameter0: java.io.InputStream;
v2 = virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: int writeImpl(java.io.InputStream)>(v1);
return v2;
}
public int size()
{
int v1;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 = v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: int count>;
return v1;
}
public void reset()
{
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void resetImpl()>();
return;
}
public void writeTo(java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 := @parameter0: java.io.OutputStream;
virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void writeToImpl(java.io.OutputStream)>(v1);
return;
}
public static java.io.InputStream toBufferedInputStream(java.io.InputStream) throws java.io.IOException
{
java.io.InputStream v0, v1;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>(v0, 1024);
return v1;
}
public static java.io.InputStream toBufferedInputStream(java.io.InputStream, int) throws java.io.IOException
{
java.lang.Throwable v4;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v2;
int v1;
java.io.InputStream v0, v3;
v0 := @parameter0: java.io.InputStream;
v1 := @parameter1: int;
v2 = new org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
specialinvoke v2.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void <init>(int)>(v1);
label1:
virtualinvoke v2.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: int write(java.io.InputStream)>(v0);
v3 = virtualinvoke v2.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: java.io.InputStream toInputStream()>();
label2:
virtualinvoke v2.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: void close()>();
return v3;
label3:
v4 := @caughtexception;
throw v4;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.io.InputStream toInputStream()
{
org.apache.commons.io.output.AbstractByteArrayOutputStream$InputStreamConstructor v1;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
java.io.InputStream v2;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 = staticinvoke <org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream$init__262: org.apache.commons.io.output.AbstractByteArrayOutputStream$InputStreamConstructor bootstrap$()>();
v2 = virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: java.io.InputStream toInputStream(org.apache.commons.io.output.AbstractByteArrayOutputStream$InputStreamConstructor)>(v1);
return v2;
}
public byte[] toByteArray()
{
byte[] v1;
org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream v0;
v0 := @this: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream;
v1 = virtualinvoke v0.<org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream: byte[] toByteArrayImpl()>();
return v1;
}
}