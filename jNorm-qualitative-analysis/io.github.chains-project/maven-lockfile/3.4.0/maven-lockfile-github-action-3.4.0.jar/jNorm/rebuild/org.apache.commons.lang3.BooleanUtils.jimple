public class org.apache.commons.lang3.BooleanUtils extends java.lang.Object
{
public static final java.lang.String FALSE;
public static final java.lang.String NO;
public static final java.lang.String OFF;
public static final java.lang.String ON;
public static final java.lang.String TRUE;
public static final java.lang.String YES;
public static transient boolean and(boolean[])
{
boolean[] v0;
int v1, v2;
boolean v3;
v0 := @parameter0: boolean[];
staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object requireNonEmpty(java.lang.Object,java.lang.String)>(v0, "array");
v1 = lengthof v0;
v2 = 0;
label1:
if v2 >= v1 goto label3;
v3 = v0[v2];
if v3 != 0 goto label2;
return 0;
label2:
v2 = v2 + 1;
goto label1;
label3:
return 1;
}
public static transient java.lang.Boolean and(java.lang.Boolean[])
{
boolean[] v1;
java.lang.Boolean v3;
java.lang.IllegalArgumentException v5;
java.lang.Boolean[] v0;
java.lang.NullPointerException v4;
boolean v2;
v0 := @parameter0: java.lang.Boolean[];
staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object requireNonEmpty(java.lang.Object,java.lang.String)>(v0, "array");
label1:
v1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean[] toPrimitive(java.lang.Boolean[])>(v0);
v2 = staticinvoke <org.apache.commons.lang3.BooleanUtils: boolean and(boolean[])>(v1);
if v2 == 0 goto label2;
v3 = <java.lang.Boolean: java.lang.Boolean TRUE>;
goto label3;
label2:
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
label3:
return v3;
label4:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array must not contain any null elements");
throw v5;
catch java.lang.NullPointerException from label1 to label3 with label4;
}
public static java.lang.Boolean[] booleanValues()
{
java.lang.Boolean v1, v2;
java.lang.Boolean[] v0;
v0 = newarray (java.lang.Boolean)[2];
v1 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v0[0] = v1;
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v0[1] = v2;
return v0;
}
public static int compare(boolean, boolean)
{
byte v2;
boolean v0, v1;
v0 := @parameter0: boolean;
v1 := @parameter1: boolean;
if v0 != v1 goto label1;
return 0;
label1:
if v0 == 0 goto label2;
v2 = 1;
goto label3;
label2:
v2 = -1;
label3:
return v2;
}
public static boolean isFalse(java.lang.Boolean)
{
java.lang.Boolean v0, v1;
boolean v2;
v0 := @parameter0: java.lang.Boolean;
v1 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v2 = virtualinvoke v1.<java.lang.Boolean: boolean equals(java.lang.Object)>(v0);
return v2;
}
public static boolean isNotFalse(java.lang.Boolean)
{
java.lang.Boolean v0;
boolean v1, v2;
v0 := @parameter0: java.lang.Boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: boolean isFalse(java.lang.Boolean)>(v0);
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public static boolean isNotTrue(java.lang.Boolean)
{
java.lang.Boolean v0;
boolean v1, v2;
v0 := @parameter0: java.lang.Boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: boolean isTrue(java.lang.Boolean)>(v0);
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public static boolean isTrue(java.lang.Boolean)
{
java.lang.Boolean v0, v1;
boolean v2;
v0 := @parameter0: java.lang.Boolean;
v1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v2 = virtualinvoke v1.<java.lang.Boolean: boolean equals(java.lang.Object)>(v0);
return v2;
}
public static java.lang.Boolean negate(java.lang.Boolean)
{
java.lang.Boolean v0, v2;
boolean v1;
v0 := @parameter0: java.lang.Boolean;
if v0 != null goto label1;
return null;
label1:
v1 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v1 == 0 goto label2;
v2 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label3;
label2:
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
label3:
return v2;
}
public static transient boolean or(boolean[])
{
boolean[] v0;
int v1, v2;
boolean v3;
v0 := @parameter0: boolean[];
staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object requireNonEmpty(java.lang.Object,java.lang.String)>(v0, "array");
v1 = lengthof v0;
v2 = 0;
label1:
if v2 >= v1 goto label3;
v3 = v0[v2];
if v3 == 0 goto label2;
return 1;
label2:
v2 = v2 + 1;
goto label1;
label3:
return 0;
}
public static transient java.lang.Boolean or(java.lang.Boolean[])
{
boolean[] v1;
java.lang.Boolean v3;
java.lang.IllegalArgumentException v5;
java.lang.Boolean[] v0;
java.lang.NullPointerException v4;
boolean v2;
v0 := @parameter0: java.lang.Boolean[];
staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object requireNonEmpty(java.lang.Object,java.lang.String)>(v0, "array");
label1:
v1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean[] toPrimitive(java.lang.Boolean[])>(v0);
v2 = staticinvoke <org.apache.commons.lang3.BooleanUtils: boolean or(boolean[])>(v1);
if v2 == 0 goto label2;
v3 = <java.lang.Boolean: java.lang.Boolean TRUE>;
goto label3;
label2:
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
label3:
return v3;
label4:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array must not contain any null elements");
throw v5;
catch java.lang.NullPointerException from label1 to label3 with label4;
}
public static boolean[] primitiveValues()
{
boolean[] v0;
v0 = newarray (boolean)[2];
v0[0] = 0;
v0[1] = 1;
return v0;
}
public static boolean toBoolean(java.lang.Boolean)
{
java.lang.Boolean v0;
boolean v1, v2;
v0 := @parameter0: java.lang.Boolean;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v1 == 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public static boolean toBoolean(int)
{
int v0;
boolean v1;
v0 := @parameter0: int;
if v0 == 0 goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
public static boolean toBoolean(int, int, int)
{
int v0, v1, v2;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v0 != v1 goto label1;
return 1;
label1:
if v0 != v2 goto label2;
return 0;
label2:
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Integer did not match either specified value");
throw v3;
}
public static boolean toBoolean(java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
java.lang.IllegalArgumentException v5;
java.lang.Integer v0, v1, v2;
boolean v3, v4;
v0 := @parameter0: java.lang.Integer;
v1 := @parameter1: java.lang.Integer;
v2 := @parameter2: java.lang.Integer;
if v0 != null goto label2;
if v1 != null goto label1;
return 1;
label1:
if v2 != null goto label4;
return 0;
label2:
v3 = virtualinvoke v0.<java.lang.Integer: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label3;
return 1;
label3:
v4 = virtualinvoke v0.<java.lang.Integer: boolean equals(java.lang.Object)>(v2);
if v4 == 0 goto label4;
return 0;
label4:
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Integer did not match either specified value");
throw v5;
}
public static boolean toBoolean(java.lang.String)
{
java.lang.Boolean v1, v2;
java.lang.String v0;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.Boolean toBooleanObject(java.lang.String)>(v0);
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public static boolean toBoolean(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.String v0, v1, v2;
java.lang.IllegalArgumentException v5;
boolean v3, v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
if v0 != v1 goto label1;
return 1;
label1:
if v0 != v2 goto label2;
return 0;
label2:
if v0 == null goto label4;
v3 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label3;
return 1;
label3:
v4 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v4 == 0 goto label4;
return 0;
label4:
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The String did not match either specified value");
throw v5;
}
public static boolean toBooleanDefaultIfNull(java.lang.Boolean, boolean)
{
java.lang.Boolean v0;
boolean v1, v2;
v0 := @parameter0: java.lang.Boolean;
v1 := @parameter1: boolean;
if v0 != null goto label1;
return v1;
label1:
v2 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
return v2;
}
public static java.lang.Boolean toBooleanObject(int)
{
int v0;
java.lang.Boolean v1;
v0 := @parameter0: int;
if v0 != 0 goto label1;
v1 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label2;
label1:
v1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
label2:
return v1;
}
public static java.lang.Boolean toBooleanObject(int, int, int, int)
{
int v0, v1, v2, v3;
java.lang.Boolean v4, v5;
java.lang.IllegalArgumentException v6;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
if v0 != v1 goto label1;
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v4;
label1:
if v0 != v2 goto label2;
v5 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v5;
label2:
if v0 != v3 goto label3;
return null;
label3:
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Integer did not match any specified value");
throw v6;
}
public static java.lang.Boolean toBooleanObject(java.lang.Integer)
{
int v1;
java.lang.Boolean v2;
java.lang.Integer v0;
v0 := @parameter0: java.lang.Integer;
if v0 != null goto label1;
return null;
label1:
v1 = virtualinvoke v0.<java.lang.Integer: int intValue()>();
if v1 != 0 goto label2;
v2 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label3;
label2:
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
label3:
return v2;
}
public static java.lang.Boolean toBooleanObject(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
java.lang.IllegalArgumentException v11;
java.lang.Integer v0, v1, v2, v3;
java.lang.Boolean v4, v5, v7, v9;
boolean v10, v6, v8;
v0 := @parameter0: java.lang.Integer;
v1 := @parameter1: java.lang.Integer;
v2 := @parameter2: java.lang.Integer;
v3 := @parameter3: java.lang.Integer;
if v0 != null goto label3;
if v1 != null goto label1;
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v4;
label1:
if v2 != null goto label2;
v5 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v5;
label2:
if v3 != null goto label6;
return null;
label3:
v6 = virtualinvoke v0.<java.lang.Integer: boolean equals(java.lang.Object)>(v1);
if v6 == 0 goto label4;
v7 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v7;
label4:
v8 = virtualinvoke v0.<java.lang.Integer: boolean equals(java.lang.Object)>(v2);
if v8 == 0 goto label5;
v9 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v9;
label5:
v10 = virtualinvoke v0.<java.lang.Integer: boolean equals(java.lang.Object)>(v3);
if v10 == 0 goto label6;
return null;
label6:
v11 = new java.lang.IllegalArgumentException;
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Integer did not match any specified value");
throw v11;
}
public static java.lang.Boolean toBooleanObject(java.lang.String)
{
int v2;
java.lang.Boolean v1, v13, v14, v19, v25, v4, v5, v8, v9;
java.lang.String v0;
char v10, v11, v12, v15, v16, v17, v18, v20, v21, v22, v23, v24, v3, v6, v7;
v0 := @parameter0: java.lang.String;
if v0 != "true" goto label01;
v1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v1;
label01:
if v0 != null goto label02;
return null;
label02:
v2 = virtualinvoke v0.<java.lang.String: int length()>();
tableswitch(v2)
{
case 1: goto label03;
case 2: goto label07;
case 3: goto label13;
case 4: goto label21;
case 5: goto label26;
default: goto label32;
};
label03:
v3 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v3 == 121 goto label04;
if v3 == 89 goto label04;
if v3 == 116 goto label04;
if v3 == 84 goto label04;
if v3 != 49 goto label05;
label04:
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v4;
label05:
if v3 == 110 goto label06;
if v3 == 78 goto label06;
if v3 == 102 goto label06;
if v3 == 70 goto label06;
if v3 != 48 goto label32;
label06:
v5 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v5;
label07:
v6 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
v7 = virtualinvoke v0.<java.lang.String: char charAt(int)>(1);
if v6 == 111 goto label08;
if v6 != 79 goto label10;
label08:
if v7 == 110 goto label09;
if v7 != 78 goto label10;
label09:
v8 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v8;
label10:
if v6 == 110 goto label11;
if v6 != 78 goto label32;
label11:
if v7 == 111 goto label12;
if v7 != 79 goto label32;
label12:
v9 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v9;
label13:
v10 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
v11 = virtualinvoke v0.<java.lang.String: char charAt(int)>(1);
v12 = virtualinvoke v0.<java.lang.String: char charAt(int)>(2);
if v10 == 121 goto label14;
if v10 != 89 goto label17;
label14:
if v11 == 101 goto label15;
if v11 != 69 goto label17;
label15:
if v12 == 115 goto label16;
if v12 != 83 goto label17;
label16:
v13 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v13;
label17:
if v10 == 111 goto label18;
if v10 != 79 goto label32;
label18:
if v11 == 102 goto label19;
if v11 != 70 goto label32;
label19:
if v12 == 102 goto label20;
if v12 != 70 goto label32;
label20:
v14 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v14;
label21:
v15 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
v16 = virtualinvoke v0.<java.lang.String: char charAt(int)>(1);
v17 = virtualinvoke v0.<java.lang.String: char charAt(int)>(2);
v18 = virtualinvoke v0.<java.lang.String: char charAt(int)>(3);
if v15 == 116 goto label22;
if v15 != 84 goto label32;
label22:
if v16 == 114 goto label23;
if v16 != 82 goto label32;
label23:
if v17 == 117 goto label24;
if v17 != 85 goto label32;
label24:
if v18 == 101 goto label25;
if v18 != 69 goto label32;
label25:
v19 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v19;
label26:
v20 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
v21 = virtualinvoke v0.<java.lang.String: char charAt(int)>(1);
v22 = virtualinvoke v0.<java.lang.String: char charAt(int)>(2);
v23 = virtualinvoke v0.<java.lang.String: char charAt(int)>(3);
v24 = virtualinvoke v0.<java.lang.String: char charAt(int)>(4);
if v20 == 102 goto label27;
if v20 != 70 goto label32;
label27:
if v21 == 97 goto label28;
if v21 != 65 goto label32;
label28:
if v22 == 108 goto label29;
if v22 != 76 goto label32;
label29:
if v23 == 115 goto label30;
if v23 != 83 goto label32;
label30:
if v24 == 101 goto label31;
if v24 != 69 goto label32;
label31:
v25 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v25;
label32:
return null;
}
public static java.lang.Boolean toBooleanObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
{
java.lang.IllegalArgumentException v11;
java.lang.Boolean v4, v5, v7, v9;
java.lang.String v0, v1, v2, v3;
boolean v10, v6, v8;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.lang.String;
if v0 != null goto label3;
if v1 != null goto label1;
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v4;
label1:
if v2 != null goto label2;
v5 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v5;
label2:
if v3 != null goto label6;
return null;
label3:
v6 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v6 == 0 goto label4;
v7 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v7;
label4:
v8 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v8 == 0 goto label5;
v9 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v9;
label5:
v10 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v10 == 0 goto label6;
return null;
label6:
v11 = new java.lang.IllegalArgumentException;
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The String did not match any specified value");
throw v11;
}
public static int toInteger(boolean)
{
byte v1;
boolean v0;
v0 := @parameter0: boolean;
if v0 == 0 goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
public static int toInteger(boolean, int, int)
{
int v1, v2, v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v0 == 0 goto label1;
v3 = v1;
goto label2;
label1:
v3 = v2;
label2:
return v3;
}
public static int toInteger(java.lang.Boolean, int, int, int)
{
int v1, v2, v3, v5;
java.lang.Boolean v0;
boolean v4;
v0 := @parameter0: java.lang.Boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
if v0 != null goto label1;
return v3;
label1:
v4 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v4 == 0 goto label2;
v5 = v1;
goto label3;
label2:
v5 = v2;
label3:
return v5;
}
public static java.lang.Integer toIntegerObject(boolean)
{
java.lang.Integer v1;
boolean v0;
v0 := @parameter0: boolean;
if v0 == 0 goto label1;
v1 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_ONE>;
goto label2;
label1:
v1 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_ZERO>;
label2:
return v1;
}
public static java.lang.Integer toIntegerObject(boolean, java.lang.Integer, java.lang.Integer)
{
java.lang.Integer v1, v2, v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: java.lang.Integer;
v2 := @parameter2: java.lang.Integer;
if v0 == 0 goto label1;
v3 = v1;
goto label2;
label1:
v3 = v2;
label2:
return v3;
}
public static java.lang.Integer toIntegerObject(java.lang.Boolean)
{
java.lang.Boolean v0;
java.lang.Integer v2;
boolean v1;
v0 := @parameter0: java.lang.Boolean;
if v0 != null goto label1;
return null;
label1:
v1 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v1 == 0 goto label2;
v2 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_ONE>;
goto label3;
label2:
v2 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_ZERO>;
label3:
return v2;
}
public static java.lang.Integer toIntegerObject(java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
java.lang.Boolean v0;
java.lang.Integer v1, v2, v3, v5;
boolean v4;
v0 := @parameter0: java.lang.Boolean;
v1 := @parameter1: java.lang.Integer;
v2 := @parameter2: java.lang.Integer;
v3 := @parameter3: java.lang.Integer;
if v0 != null goto label1;
return v3;
label1:
v4 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v4 == 0 goto label2;
v5 = v1;
goto label3;
label2:
v5 = v2;
label3:
return v5;
}
public static java.lang.String toString(boolean, java.lang.String, java.lang.String)
{
java.lang.String v1, v2, v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
if v0 == 0 goto label1;
v3 = v1;
goto label2;
label1:
v3 = v2;
label2:
return v3;
}
public static java.lang.String toString(java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String)
{
java.lang.Boolean v0;
java.lang.String v1, v2, v3, v5;
boolean v4;
v0 := @parameter0: java.lang.Boolean;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.lang.String;
if v0 != null goto label1;
return v3;
label1:
v4 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v4 == 0 goto label2;
v5 = v1;
goto label3;
label2:
v5 = v2;
label3:
return v5;
}
public static java.lang.String toStringOnOff(boolean)
{
java.lang.String v1;
boolean v0;
v0 := @parameter0: boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.String toString(boolean,java.lang.String,java.lang.String)>(v0, "on", "off");
return v1;
}
public static java.lang.String toStringOnOff(java.lang.Boolean)
{
java.lang.Boolean v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)>(v0, "on", "off", null);
return v1;
}
public static java.lang.String toStringTrueFalse(boolean)
{
java.lang.String v1;
boolean v0;
v0 := @parameter0: boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.String toString(boolean,java.lang.String,java.lang.String)>(v0, "true", "false");
return v1;
}
public static java.lang.String toStringTrueFalse(java.lang.Boolean)
{
java.lang.Boolean v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)>(v0, "true", "false", null);
return v1;
}
public static java.lang.String toStringYesNo(boolean)
{
java.lang.String v1;
boolean v0;
v0 := @parameter0: boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.String toString(boolean,java.lang.String,java.lang.String)>(v0, "yes", "no");
return v1;
}
public static java.lang.String toStringYesNo(java.lang.Boolean)
{
java.lang.Boolean v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Boolean;
v1 = staticinvoke <org.apache.commons.lang3.BooleanUtils: java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)>(v0, "yes", "no", null);
return v1;
}
public static transient boolean xor(boolean[])
{
boolean[] v0;
int v2, v3;
boolean v1, v4;
v0 := @parameter0: boolean[];
staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object requireNonEmpty(java.lang.Object,java.lang.String)>(v0, "array");
v1 = 0;
v2 = lengthof v0;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v0[v3];
v1 = v1 ^ v4;
v3 = v3 + 1;
goto label1;
label2:
return v1;
}
public static transient java.lang.Boolean xor(java.lang.Boolean[])
{
boolean[] v1;
java.lang.Boolean v3;
java.lang.IllegalArgumentException v5;
java.lang.Boolean[] v0;
java.lang.NullPointerException v4;
boolean v2;
v0 := @parameter0: java.lang.Boolean[];
staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object requireNonEmpty(java.lang.Object,java.lang.String)>(v0, "array");
label1:
v1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean[] toPrimitive(java.lang.Boolean[])>(v0);
v2 = staticinvoke <org.apache.commons.lang3.BooleanUtils: boolean xor(boolean[])>(v1);
if v2 == 0 goto label2;
v3 = <java.lang.Boolean: java.lang.Boolean TRUE>;
goto label3;
label2:
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
label3:
return v3;
label4:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array must not contain any null elements");
throw v5;
catch java.lang.NullPointerException from label1 to label3 with label4;
}
public void <init>()
{
org.apache.commons.lang3.BooleanUtils v0;
v0 := @this: org.apache.commons.lang3.BooleanUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}