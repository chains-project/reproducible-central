public class org.apache.commons.lang3.RandomStringUtils extends java.lang.Object
{
private static final java.util.Random RANDOM;
public void <init>()
{
org.apache.commons.lang3.RandomStringUtils v0;
v0 := @this: org.apache.commons.lang3.RandomStringUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String random(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,boolean,boolean)>(v0, 0, 0);
return v1;
}
public static java.lang.String randomAscii(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean)>(v0, 32, 127, 0, 0);
return v1;
}
public static java.lang.String randomAscii(int, int)
{
int v0, v1, v2;
java.lang.String v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>(v0, v1);
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAscii(int)>(v2);
return v3;
}
public static java.lang.String randomAlphabetic(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,boolean,boolean)>(v0, 1, 0);
return v1;
}
public static java.lang.String randomAlphabetic(int, int)
{
int v0, v1, v2;
java.lang.String v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>(v0, v1);
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAlphabetic(int)>(v2);
return v3;
}
public static java.lang.String randomAlphanumeric(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,boolean,boolean)>(v0, 1, 1);
return v1;
}
public static java.lang.String randomAlphanumeric(int, int)
{
int v0, v1, v2;
java.lang.String v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>(v0, v1);
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAlphanumeric(int)>(v2);
return v3;
}
public static java.lang.String randomGraph(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean)>(v0, 33, 126, 0, 0);
return v1;
}
public static java.lang.String randomGraph(int, int)
{
int v0, v1, v2;
java.lang.String v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>(v0, v1);
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String randomGraph(int)>(v2);
return v3;
}
public static java.lang.String randomNumeric(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,boolean,boolean)>(v0, 0, 1);
return v1;
}
public static java.lang.String randomNumeric(int, int)
{
int v0, v1, v2;
java.lang.String v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>(v0, v1);
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String randomNumeric(int)>(v2);
return v3;
}
public static java.lang.String randomPrint(int)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean)>(v0, 32, 126, 0, 0);
return v1;
}
public static java.lang.String randomPrint(int, int)
{
int v0, v1, v2;
java.lang.String v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>(v0, v1);
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String randomPrint(int)>(v2);
return v3;
}
public static java.lang.String random(int, boolean, boolean)
{
int v0;
java.lang.String v3;
boolean v1, v2;
v0 := @parameter0: int;
v1 := @parameter1: boolean;
v2 := @parameter2: boolean;
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean)>(v0, 0, 0, v1, v2);
return v3;
}
public static java.lang.String random(int, int, int, boolean, boolean)
{
int v0, v1, v2;
java.util.Random v5;
java.lang.String v6;
boolean v3, v4;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: boolean;
v5 = <org.apache.commons.lang3.RandomStringUtils: java.util.Random RANDOM>;
v6 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random)>(v0, v1, v2, v3, v4, null, v5);
return v6;
}
public static transient java.lang.String random(int, int, int, boolean, boolean, char[])
{
java.util.Random v6;
int v0, v1, v2;
char[] v5;
java.lang.String v7;
boolean v3, v4;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: boolean;
v5 := @parameter5: char[];
v6 = <org.apache.commons.lang3.RandomStringUtils: java.util.Random RANDOM>;
v7 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random)>(v0, v1, v2, v3, v4, v5, v6);
return v7;
}
public static java.lang.String random(int, int, int, boolean, boolean, char[], java.util.Random)
{
java.util.Random v6;
int v0, v1, v16, v17, v18, v19, v2, v20, v21, v22, v23, v9;
java.lang.String v12, v14, v26, v8;
boolean v24, v25, v3, v4;
java.lang.IllegalArgumentException v10, v11, v13, v7;
char[] v5;
java.lang.StringBuilder v15;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: boolean;
v5 := @parameter5: char[];
v6 := @parameter6: java.util.Random;
if v0 != 0 goto label01;
return "";
label01:
if v0 >= 0 goto label02;
v7 = new java.lang.IllegalArgumentException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Requested random string length \u0001 is less than 0.");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v7;
label02:
if v5 == null goto label03;
v9 = lengthof v5;
if v9 != 0 goto label03;
v10 = new java.lang.IllegalArgumentException;
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The chars array must not be empty");
throw v10;
label03:
if v1 != 0 goto label06;
if v2 != 0 goto label06;
if v5 == null goto label04;
v2 = lengthof v5;
goto label07;
label04:
if v3 != 0 goto label05;
if v4 != 0 goto label05;
v2 = 1114111;
goto label07;
label05:
v2 = 123;
v1 = 32;
goto label07;
label06:
if v2 > v1 goto label07;
v11 = new java.lang.IllegalArgumentException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v2, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Parameter end (\u0001) must be greater than start (\u0001)");
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v11;
label07:
if v5 != null goto label10;
if v4 == 0 goto label08;
if v2 <= 48 goto label09;
label08:
if v3 == 0 goto label10;
if v2 > 65 goto label10;
label09:
v13 = new java.lang.IllegalArgumentException;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Parameter end (\u0001) must be greater then (48) for generating digits or greater then (65) for generating letters.");
specialinvoke v13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v13;
label10:
v15 = new java.lang.StringBuilder;
specialinvoke v15.<java.lang.StringBuilder: void <init>(int)>(v0);
v16 = v2 - v1;
label11:
v17 = v0;
v0 = v0 - 1;
if v17 == 0 goto label20;
if v5 != null goto label13;
v18 = virtualinvoke v6.<java.util.Random: int nextInt(int)>(v16);
v19 = v18 + v1;
v20 = staticinvoke <java.lang.Character: int getType(int)>(v19);
lookupswitch(v20)
{
case 0: goto label12;
case 18: goto label12;
case 19: goto label12;
default: goto label14;
};
label12:
v0 = v0 + 1;
goto label11;
label13:
v21 = virtualinvoke v6.<java.util.Random: int nextInt(int)>(v16);
v22 = v21 + v1;
v19 = v5[v22];
label14:
v23 = staticinvoke <java.lang.Character: int charCount(int)>(v19);
if v0 != 0 goto label15;
if v23 <= 1 goto label15;
v0 = v0 + 1;
goto label11;
label15:
if v3 == 0 goto label16;
v24 = staticinvoke <java.lang.Character: boolean isLetter(int)>(v19);
if v24 != 0 goto label18;
label16:
if v4 == 0 goto label17;
v25 = staticinvoke <java.lang.Character: boolean isDigit(int)>(v19);
if v25 != 0 goto label18;
label17:
if v3 != 0 goto label19;
if v4 != 0 goto label19;
label18:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(v19);
if v23 != 2 goto label11;
v0 = v0 - 1;
goto label11;
label19:
v0 = v0 + 1;
goto label11;
label20:
v26 = virtualinvoke v15.<java.lang.StringBuilder: java.lang.String toString()>();
return v26;
}
public static java.lang.String random(int, java.lang.String)
{
int v0;
char[] v4;
java.util.Random v2;
java.lang.String v1, v3, v5;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
if v1 != null goto label1;
v2 = <org.apache.commons.lang3.RandomStringUtils: java.util.Random RANDOM>;
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random)>(v0, 0, 0, 0, 0, null, v2);
return v3;
label1:
v4 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v5 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,char[])>(v0, v4);
return v5;
}
public static transient java.lang.String random(int, char[])
{
int v0, v4;
char[] v1;
java.util.Random v2, v5;
java.lang.String v3, v6;
v0 := @parameter0: int;
v1 := @parameter1: char[];
if v1 != null goto label1;
v2 = <org.apache.commons.lang3.RandomStringUtils: java.util.Random RANDOM>;
v3 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random)>(v0, 0, 0, 0, 0, null, v2);
return v3;
label1:
v4 = lengthof v1;
v5 = <org.apache.commons.lang3.RandomStringUtils: java.util.Random RANDOM>;
v6 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random)>(v0, 0, v4, 0, 0, v1, v5);
return v6;
}
static void <clinit>()
{
java.util.Random v0;
v0 = new java.util.Random;
specialinvoke v0.<java.util.Random: void <init>()>();
<org.apache.commons.lang3.RandomStringUtils: java.util.Random RANDOM> = v0;
return;
}
}