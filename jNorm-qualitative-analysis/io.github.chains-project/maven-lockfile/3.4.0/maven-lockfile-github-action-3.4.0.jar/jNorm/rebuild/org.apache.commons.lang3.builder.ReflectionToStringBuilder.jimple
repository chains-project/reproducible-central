public class org.apache.commons.lang3.builder.ReflectionToStringBuilder extends org.apache.commons.lang3.builder.ToStringBuilder
{
private boolean appendStatics;
private boolean appendTransients;
private boolean excludeNullValues;
protected java.lang.String[] excludeFieldNames;
private java.lang.Class upToClass;
public static java.lang.String toString(java.lang.Object)
{
java.lang.Object v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Object;
v1 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class)>(v0, null, 0, 0, null);
return v1;
}
public static java.lang.String toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle)
{
org.apache.commons.lang3.builder.ToStringStyle v1;
java.lang.Object v0;
java.lang.String v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v2 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class)>(v0, v1, 0, 0, null);
return v2;
}
public static java.lang.String toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean)
{
org.apache.commons.lang3.builder.ToStringStyle v1;
java.lang.Object v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v2 := @parameter2: boolean;
v3 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class)>(v0, v1, v2, 0, null);
return v3;
}
public static java.lang.String toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, boolean)
{
org.apache.commons.lang3.builder.ToStringStyle v1;
java.lang.Object v0;
java.lang.String v4;
boolean v2, v3;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v2 := @parameter2: boolean;
v3 := @parameter3: boolean;
v4 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class)>(v0, v1, v2, v3, null);
return v4;
}
public static java.lang.String toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, boolean, java.lang.Class)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v5;
org.apache.commons.lang3.builder.ToStringStyle v1;
java.lang.Class v4;
java.lang.Object v0;
java.lang.String v6;
boolean v2, v3;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v2 := @parameter2: boolean;
v3 := @parameter3: boolean;
v4 := @parameter4: java.lang.Class;
v5 = new org.apache.commons.lang3.builder.ReflectionToStringBuilder;
specialinvoke v5.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean)>(v0, v1, null, v4, v2, v3);
v6 = virtualinvoke v5.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString()>();
return v6;
}
public static java.lang.String toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, boolean, boolean, java.lang.Class)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v6;
org.apache.commons.lang3.builder.ToStringStyle v1;
java.lang.Class v5;
java.lang.Object v0;
java.lang.String v7;
boolean v2, v3, v4;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v2 := @parameter2: boolean;
v3 := @parameter3: boolean;
v4 := @parameter4: boolean;
v5 := @parameter5: java.lang.Class;
v6 = new org.apache.commons.lang3.builder.ReflectionToStringBuilder;
specialinvoke v6.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean,boolean)>(v0, v1, null, v5, v2, v3, v4);
v7 = virtualinvoke v6.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString()>();
return v7;
}
public static java.lang.String toStringExclude(java.lang.Object, java.util.Collection)
{
java.util.Collection v1;
java.lang.Object v0;
java.lang.String[] v2;
java.lang.String v3;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.util.Collection;
v2 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.util.Collection)>(v1);
v3 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toStringExclude(java.lang.Object,java.lang.String[])>(v0, v2);
return v3;
}
static java.lang.String[] toNoNullStringArray(java.util.Collection)
{
java.lang.Object[] v2;
java.util.Collection v0;
java.lang.String[] v1, v3;
v0 := @parameter0: java.util.Collection;
if v0 != null goto label1;
v1 = <org.apache.commons.lang3.ArrayUtils: java.lang.String[] EMPTY_STRING_ARRAY>;
return v1;
label1:
v2 = interfaceinvoke v0.<java.util.Collection: java.lang.Object[] toArray()>();
v3 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>(v2);
return v3;
}
static java.lang.String[] toNoNullStringArray(java.lang.Object[])
{
java.lang.Object[] v0, v8;
java.lang.String[] v7;
java.util.ArrayList v1;
int v2, v3, v4;
java.lang.Object v5;
java.lang.String v6;
v0 := @parameter0: java.lang.Object[];
v1 = new java.util.ArrayList;
v2 = lengthof v0;
specialinvoke v1.<java.util.ArrayList: void <init>(int)>(v2);
v3 = lengthof v0;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v0[v4];
if v5 == null goto label2;
v6 = virtualinvoke v5.<java.lang.Object: java.lang.String toString()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v6);
label2:
v4 = v4 + 1;
goto label1;
label3:
v7 = <org.apache.commons.lang3.ArrayUtils: java.lang.String[] EMPTY_STRING_ARRAY>;
v8 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v7);
return v8;
}
public static transient java.lang.String toStringExclude(java.lang.Object, java.lang.String[])
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v2, v3;
java.lang.Object v0;
java.lang.String[] v1;
java.lang.String v4;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String[];
v2 = new org.apache.commons.lang3.builder.ReflectionToStringBuilder;
specialinvoke v2.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void <init>(java.lang.Object)>(v0);
v3 = virtualinvoke v2.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[])>(v1);
v4 = virtualinvoke v3.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String toString()>();
return v4;
}
private static java.lang.Object checkNotNull(java.lang.Object)
{
java.lang.Object v0, v2;
java.lang.Object[] v1;
v0 := @parameter0: java.lang.Object;
v1 = newarray (java.lang.Object)[0];
v2 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "obj", v1);
return v2;
}
public void <init>(java.lang.Object)
{
java.lang.Object v1, v2;
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object checkNotNull(java.lang.Object)>(v1);
specialinvoke v0.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object)>(v2);
return;
}
public void <init>(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.Object v1, v3;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v3 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object checkNotNull(java.lang.Object)>(v1);
specialinvoke v0.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle)>(v3, v2);
return;
}
public void <init>(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, java.lang.StringBuffer)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.StringBuffer v3;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.Object v1, v4;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v3 := @parameter2: java.lang.StringBuffer;
v4 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object checkNotNull(java.lang.Object)>(v1);
specialinvoke v0.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer)>(v4, v2, v3);
return;
}
public void <init>(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, java.lang.StringBuffer, java.lang.Class, boolean, boolean)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.StringBuffer v3;
java.lang.Class v4;
java.lang.Object v1, v7;
boolean v5, v6;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v3 := @parameter2: java.lang.StringBuffer;
v4 := @parameter3: java.lang.Class;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object checkNotNull(java.lang.Object)>(v1);
specialinvoke v0.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer)>(v7, v2, v3);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setUpToClass(java.lang.Class)>(v4);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setAppendTransients(boolean)>(v5);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setAppendStatics(boolean)>(v6);
return;
}
public void <init>(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, java.lang.StringBuffer, java.lang.Class, boolean, boolean, boolean)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.StringBuffer v3;
java.lang.Class v4;
java.lang.Object v1, v8;
boolean v5, v6, v7;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: org.apache.commons.lang3.builder.ToStringStyle;
v3 := @parameter2: java.lang.StringBuffer;
v4 := @parameter3: java.lang.Class;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: boolean;
v8 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object checkNotNull(java.lang.Object)>(v1);
specialinvoke v0.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer)>(v8, v2, v3);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setUpToClass(java.lang.Class)>(v4);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setAppendTransients(boolean)>(v5);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setAppendStatics(boolean)>(v6);
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void setExcludeNullValues(boolean)>(v7);
return;
}
protected boolean accept(java.lang.reflect.Field)
{
java.lang.String[] v11, v12;
int v14, v3, v4, v5, v8;
java.lang.String v13, v2;
boolean v10, v15, v16, v6, v7, v9;
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.reflect.Field v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.reflect.Field;
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.String getName()>();
v3 = virtualinvoke v2.<java.lang.String: int indexOf(int)>(36);
v4 = (int) -1;
if v3 == v4 goto label1;
return 0;
label1:
v5 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
v6 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(v5);
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean isAppendTransients()>();
if v7 != 0 goto label2;
return 0;
label2:
v8 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
v9 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v8);
if v9 == 0 goto label3;
v10 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean isAppendStatics()>();
if v10 != 0 goto label3;
return 0;
label3:
v11 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames>;
if v11 == null goto label4;
v12 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames>;
v13 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.String getName()>();
v14 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(v12, v13);
if v14 < 0 goto label4;
return 0;
label4:
v15 = virtualinvoke v1.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/apache/commons/lang3/builder/ToStringExclude;");
if v15 != 0 goto label5;
v16 = 1;
goto label6;
label5:
v16 = 0;
label6:
return v16;
}
protected void appendFieldsIn(java.lang.Class)
{
java.lang.Object[] v7;
java.util.function.Function v5;
int v8, v9;
java.lang.InternalError v18;
java.lang.String v11, v19, v20;
boolean v12, v14, v15, v16, v2;
java.lang.IllegalAccessException v17;
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.reflect.Field v10;
java.lang.reflect.Field[] v4;
java.lang.Class v1;
java.lang.Object v13, v3;
java.util.Comparator v6;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isArray()>();
if v2 == 0 goto label01;
v3 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getObject()>();
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object)>(v3);
return;
label01:
v4 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
v5 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder$getName__251: java.util.function.Function bootstrap$()>();
v6 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(v5);
v7 = staticinvoke <org.apache.commons.lang3.ArraySorter: java.lang.Object[] sort(java.lang.Object[],java.util.Comparator)>(v4, v6);
staticinvoke <java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>(v7, 1);
v8 = lengthof v7;
v9 = 0;
label02:
if v9 >= v8 goto label10;
v10 = v7[v9];
v11 = virtualinvoke v10.<java.lang.reflect.Field: java.lang.String getName()>();
v12 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean accept(java.lang.reflect.Field)>(v10);
if v12 == 0 goto label09;
label03:
v13 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getValue(java.lang.reflect.Field)>(v10);
v14 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean excludeNullValues>;
if v14 == 0 goto label04;
if v13 == null goto label09;
label04:
v15 = virtualinvoke v10.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/apache/commons/lang3/builder/ToStringSummary;");
if v15 != 0 goto label05;
v16 = 1;
goto label06;
label05:
v16 = 0;
label06:
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object,boolean)>(v11, v13, v16);
label07:
goto label09;
label08:
v17 := @caughtexception;
v18 = new java.lang.InternalError;
v19 = virtualinvoke v17.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected IllegalAccessException: \u0001");
specialinvoke v18.<java.lang.InternalError: void <init>(java.lang.String)>(v20);
throw v18;
label09:
v9 = v9 + 1;
goto label02;
label10:
return;
catch java.lang.IllegalAccessException from label03 to label07 with label08;
}
public java.lang.String[] getExcludeFieldNames()
{
java.lang.Object v2;
java.lang.String[] v1;
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
public java.lang.Class getUpToClass()
{
java.lang.Class v1;
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Class upToClass>;
return v1;
}
protected java.lang.Object getValue(java.lang.reflect.Field) throws java.lang.IllegalAccessException
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.Object v2, v3;
java.lang.reflect.Field v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.reflect.Field;
v2 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getObject()>();
v3 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v2);
return v3;
}
public boolean isAppendStatics()
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean appendStatics>;
return v1;
}
public boolean isAppendTransients()
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean appendTransients>;
return v1;
}
public boolean isExcludeNullValues()
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 = v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean excludeNullValues>;
return v1;
}
public org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.StringBuffer v3;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.Object v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: org.apache.commons.lang3.builder.ToStringStyle getStyle()>();
v3 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.StringBuffer getStringBuffer()>();
virtualinvoke v2.<org.apache.commons.lang3.builder.ToStringStyle: void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)>(v3, null, v1);
return v0;
}
public void setAppendStatics(boolean)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: boolean;
v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean appendStatics> = v1;
return;
}
public void setAppendTransients(boolean)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: boolean;
v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean appendTransients> = v1;
return;
}
public void setExcludeNullValues(boolean)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: boolean;
v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: boolean excludeNullValues> = v1;
return;
}
public transient org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[])
{
java.lang.Object[] v3;
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.String[] v1, v2;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.String[];
if v1 != null goto label1;
v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames> = null;
goto label2;
label1:
v2 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>(v1);
v3 = staticinvoke <org.apache.commons.lang3.ArraySorter: java.lang.Object[] sort(java.lang.Object[])>(v2);
v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] excludeFieldNames> = v3;
label2:
return v0;
}
public void setUpToClass(java.lang.Class)
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
java.lang.Class v1;
java.lang.Object v2;
java.lang.IllegalArgumentException v4;
boolean v3;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 := @parameter0: java.lang.Class;
if v1 == null goto label1;
v2 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getObject()>();
if v2 == null goto label1;
v3 = virtualinvoke v1.<java.lang.Class: boolean isInstance(java.lang.Object)>(v2);
if v3 != 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified class is not a superclass of the object");
throw v4;
label1:
v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Class upToClass> = v1;
return;
}
public java.lang.String toString()
{
org.apache.commons.lang3.builder.ReflectionToStringBuilder v0;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.Class v5, v6, v7;
java.lang.Object v1, v4;
java.lang.String v3, v8;
v0 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder;
v1 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getObject()>();
if v1 != null goto label1;
v2 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: org.apache.commons.lang3.builder.ToStringStyle getStyle()>();
v3 = virtualinvoke v2.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String getNullText()>();
return v3;
label1:
v4 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Object getObject()>();
v5 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void appendFieldsIn(java.lang.Class)>(v5);
label2:
v6 = virtualinvoke v5.<java.lang.Class: java.lang.Class getSuperclass()>();
if v6 == null goto label3;
v7 = virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.Class getUpToClass()>();
if v5 == v7 goto label3;
v5 = virtualinvoke v5.<java.lang.Class: java.lang.Class getSuperclass()>();
virtualinvoke v0.<org.apache.commons.lang3.builder.ReflectionToStringBuilder: void appendFieldsIn(java.lang.Class)>(v5);
goto label2;
label3:
v8 = specialinvoke v0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.String toString()>();
return v8;
}
}