final class org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle extends org.apache.commons.lang3.builder.ToStringStyle
{
private static final long serialVersionUID;
void <init>()
{
java.lang.String v1, v2, v3, v4;
org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle v0;
v0 := @this: org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle;
specialinvoke v0.<org.apache.commons.lang3.builder.ToStringStyle: void <init>()>();
virtualinvoke v0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setContentStart(java.lang.String)>("[");
v1 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001  ");
virtualinvoke v0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setFieldSeparator(java.lang.String)>(v2);
virtualinvoke v0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setFieldSeparatorAtStart(boolean)>(1);
v3 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001]");
virtualinvoke v0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setContentEnd(java.lang.String)>(v4);
return;
}
private java.lang.Object readResolve()
{
org.apache.commons.lang3.builder.ToStringStyle v1;
org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle v0;
v0 := @this: org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle;
v1 = <org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: org.apache.commons.lang3.builder.ToStringStyle MULTI_LINE_STYLE>;
return v1;
}
}