public final class org.apache.commons.lang3.function.Failable$lambda_accept_2__219 extends java.lang.Object implements org.apache.commons.lang3.function.FailableRunnable
{
org.apache.commons.lang3.function.FailableDoubleConsumer cap0;
double cap1;
public static org.apache.commons.lang3.function.FailableRunnable bootstrap$(org.apache.commons.lang3.function.FailableDoubleConsumer, double)
{
org.apache.commons.lang3.function.Failable$lambda_accept_2__219 v2;
org.apache.commons.lang3.function.FailableDoubleConsumer v0;
double v1;
v0 := @parameter0: org.apache.commons.lang3.function.FailableDoubleConsumer;
v1 := @parameter1: double;
v2 = new org.apache.commons.lang3.function.Failable$lambda_accept_2__219;
specialinvoke v2.<org.apache.commons.lang3.function.Failable$lambda_accept_2__219: void <init>(org.apache.commons.lang3.function.FailableDoubleConsumer,double)>(v0, v1);
return v2;
}
public void <init>(org.apache.commons.lang3.function.FailableDoubleConsumer, double)
{
org.apache.commons.lang3.function.Failable$lambda_accept_2__219 v0;
org.apache.commons.lang3.function.FailableDoubleConsumer v1;
double v2;
v0 := @this: org.apache.commons.lang3.function.Failable$lambda_accept_2__219;
v1 := @parameter0: org.apache.commons.lang3.function.FailableDoubleConsumer;
v2 := @parameter1: double;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.function.Failable$lambda_accept_2__219: org.apache.commons.lang3.function.FailableDoubleConsumer cap0> = v1;
v0.<org.apache.commons.lang3.function.Failable$lambda_accept_2__219: double cap1> = v2;
return;
}
public void run()
{
org.apache.commons.lang3.function.Failable$lambda_accept_2__219 v0;
org.apache.commons.lang3.function.FailableDoubleConsumer v1;
double v2;
v0 := @this: org.apache.commons.lang3.function.Failable$lambda_accept_2__219;
v1 = v0.<org.apache.commons.lang3.function.Failable$lambda_accept_2__219: org.apache.commons.lang3.function.FailableDoubleConsumer cap0>;
v2 = v0.<org.apache.commons.lang3.function.Failable$lambda_accept_2__219: double cap1>;
staticinvoke <org.apache.commons.lang3.function.Failable: void lambda$accept$2(org.apache.commons.lang3.function.FailableDoubleConsumer,double)>(v1, v2);
return;
}
}