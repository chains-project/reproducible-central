public interface  org.apache.commons.lang3.function.FailableFunction extends java.lang.Object
{
public static final org.apache.commons.lang3.function.FailableFunction NOP;
public static org.apache.commons.lang3.function.FailableFunction identity()
{
org.apache.commons.lang3.function.FailableFunction v0;
v0 = staticinvoke <org.apache.commons.lang3.function.FailableFunction$lambda_identity_1__188: org.apache.commons.lang3.function.FailableFunction bootstrap$()>();
return v0;
}
public static org.apache.commons.lang3.function.FailableFunction 'nop'()
{
org.apache.commons.lang3.function.FailableFunction v0;
v0 = <org.apache.commons.lang3.function.FailableFunction: org.apache.commons.lang3.function.FailableFunction NOP>;
return v0;
}
public org.apache.commons.lang3.function.FailableFunction andThen(org.apache.commons.lang3.function.FailableFunction)
{
org.apache.commons.lang3.function.FailableFunction v0, v1, v2;
v0 := @this: org.apache.commons.lang3.function.FailableFunction;
v1 := @parameter0: org.apache.commons.lang3.function.FailableFunction;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.apache.commons.lang3.function.FailableFunction$lambda_andThen_2__189: org.apache.commons.lang3.function.FailableFunction bootstrap$(org.apache.commons.lang3.function.FailableFunction,org.apache.commons.lang3.function.FailableFunction)>(v0, v1);
return v2;
}
public abstract java.lang.Object apply(java.lang.Object) throws java.lang.Throwable;
public org.apache.commons.lang3.function.FailableFunction compose(org.apache.commons.lang3.function.FailableFunction)
{
org.apache.commons.lang3.function.FailableFunction v0, v1, v2;
v0 := @this: org.apache.commons.lang3.function.FailableFunction;
v1 := @parameter0: org.apache.commons.lang3.function.FailableFunction;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.apache.commons.lang3.function.FailableFunction$lambda_compose_3__190: org.apache.commons.lang3.function.FailableFunction bootstrap$(org.apache.commons.lang3.function.FailableFunction,org.apache.commons.lang3.function.FailableFunction)>(v0, v1);
return v2;
}
static void <clinit>()
{
org.apache.commons.lang3.function.FailableFunction v0;
v0 = staticinvoke <org.apache.commons.lang3.function.FailableFunction$lambda_static_0__191: org.apache.commons.lang3.function.FailableFunction bootstrap$()>();
<org.apache.commons.lang3.function.FailableFunction: org.apache.commons.lang3.function.FailableFunction NOP> = v0;
return;
}
}