public interface  org.apache.commons.lang3.function.FailableIntUnaryOperator extends java.lang.Object
{
public static final org.apache.commons.lang3.function.FailableIntUnaryOperator NOP;
public static org.apache.commons.lang3.function.FailableIntUnaryOperator identity()
{
org.apache.commons.lang3.function.FailableIntUnaryOperator v0;
v0 = staticinvoke <org.apache.commons.lang3.function.FailableIntUnaryOperator$lambda_identity_1__174: org.apache.commons.lang3.function.FailableIntUnaryOperator bootstrap$()>();
return v0;
}
public static org.apache.commons.lang3.function.FailableIntUnaryOperator 'nop'()
{
org.apache.commons.lang3.function.FailableIntUnaryOperator v0;
v0 = <org.apache.commons.lang3.function.FailableIntUnaryOperator: org.apache.commons.lang3.function.FailableIntUnaryOperator NOP>;
return v0;
}
public org.apache.commons.lang3.function.FailableIntUnaryOperator andThen(org.apache.commons.lang3.function.FailableIntUnaryOperator)
{
org.apache.commons.lang3.function.FailableIntUnaryOperator v0, v1, v2;
v0 := @this: org.apache.commons.lang3.function.FailableIntUnaryOperator;
v1 := @parameter0: org.apache.commons.lang3.function.FailableIntUnaryOperator;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.apache.commons.lang3.function.FailableIntUnaryOperator$lambda_andThen_2__175: org.apache.commons.lang3.function.FailableIntUnaryOperator bootstrap$(org.apache.commons.lang3.function.FailableIntUnaryOperator,org.apache.commons.lang3.function.FailableIntUnaryOperator)>(v0, v1);
return v2;
}
public abstract int applyAsInt(int) throws java.lang.Throwable;
public org.apache.commons.lang3.function.FailableIntUnaryOperator compose(org.apache.commons.lang3.function.FailableIntUnaryOperator)
{
org.apache.commons.lang3.function.FailableIntUnaryOperator v0, v1, v2;
v0 := @this: org.apache.commons.lang3.function.FailableIntUnaryOperator;
v1 := @parameter0: org.apache.commons.lang3.function.FailableIntUnaryOperator;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.apache.commons.lang3.function.FailableIntUnaryOperator$lambda_compose_3__176: org.apache.commons.lang3.function.FailableIntUnaryOperator bootstrap$(org.apache.commons.lang3.function.FailableIntUnaryOperator,org.apache.commons.lang3.function.FailableIntUnaryOperator)>(v0, v1);
return v2;
}
static void <clinit>()
{
org.apache.commons.lang3.function.FailableIntUnaryOperator v0;
v0 = staticinvoke <org.apache.commons.lang3.function.FailableIntUnaryOperator$lambda_static_0__177: org.apache.commons.lang3.function.FailableIntUnaryOperator bootstrap$()>();
<org.apache.commons.lang3.function.FailableIntUnaryOperator: org.apache.commons.lang3.function.FailableIntUnaryOperator NOP> = v0;
return;
}
}