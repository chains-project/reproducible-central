public interface  org.apache.commons.lang3.function.FailableLongConsumer extends java.lang.Object
{
public static final org.apache.commons.lang3.function.FailableLongConsumer NOP;
public static org.apache.commons.lang3.function.FailableLongConsumer 'nop'()
{
org.apache.commons.lang3.function.FailableLongConsumer v0;
v0 = <org.apache.commons.lang3.function.FailableLongConsumer: org.apache.commons.lang3.function.FailableLongConsumer NOP>;
return v0;
}
public abstract void accept(long) throws java.lang.Throwable;
public org.apache.commons.lang3.function.FailableLongConsumer andThen(org.apache.commons.lang3.function.FailableLongConsumer)
{
org.apache.commons.lang3.function.FailableLongConsumer v0, v1, v2;
v0 := @this: org.apache.commons.lang3.function.FailableLongConsumer;
v1 := @parameter0: org.apache.commons.lang3.function.FailableLongConsumer;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.apache.commons.lang3.function.FailableLongConsumer$lambda_andThen_1__172: org.apache.commons.lang3.function.FailableLongConsumer bootstrap$(org.apache.commons.lang3.function.FailableLongConsumer,org.apache.commons.lang3.function.FailableLongConsumer)>(v0, v1);
return v2;
}
static void <clinit>()
{
org.apache.commons.lang3.function.FailableLongConsumer v0;
v0 = staticinvoke <org.apache.commons.lang3.function.FailableLongConsumer$lambda_static_0__173: org.apache.commons.lang3.function.FailableLongConsumer bootstrap$()>();
<org.apache.commons.lang3.function.FailableLongConsumer: org.apache.commons.lang3.function.FailableLongConsumer NOP> = v0;
return;
}
}