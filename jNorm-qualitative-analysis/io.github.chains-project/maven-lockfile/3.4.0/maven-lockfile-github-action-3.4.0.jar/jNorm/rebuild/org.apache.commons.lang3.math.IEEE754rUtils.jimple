public class org.apache.commons.lang3.math.IEEE754rUtils extends java.lang.Object
{
public void <init>()
{
org.apache.commons.lang3.math.IEEE754rUtils v0;
v0 := @this: org.apache.commons.lang3.math.IEEE754rUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static transient double min(double[])
{
java.lang.Object[] v1, v4;
double[] v0;
int v2, v6, v7;
boolean v3;
double v5, v8;
v0 := @parameter0: double[];
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "array", v1);
v2 = lengthof v0;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v3, "Array cannot be empty.", v4);
v5 = v0[0];
v6 = 1;
label3:
v7 = lengthof v0;
if v6 >= v7 goto label4;
v8 = v0[v6];
v5 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: double min(double,double)>(v8, v5);
v6 = v6 + 1;
goto label3;
label4:
return v5;
}
public static transient float min(float[])
{
java.lang.Object[] v1, v4;
float[] v0;
int v2, v6, v7;
float v5, v8;
boolean v3;
v0 := @parameter0: float[];
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "array", v1);
v2 = lengthof v0;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v3, "Array cannot be empty.", v4);
v5 = v0[0];
v6 = 1;
label3:
v7 = lengthof v0;
if v6 >= v7 goto label4;
v8 = v0[v6];
v5 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: float min(float,float)>(v8, v5);
v6 = v6 + 1;
goto label3;
label4:
return v5;
}
public static double min(double, double, double)
{
double v0, v1, v2, v3, v4;
v0 := @parameter0: double;
v1 := @parameter1: double;
v2 := @parameter2: double;
v3 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: double min(double,double)>(v0, v1);
v4 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: double min(double,double)>(v3, v2);
return v4;
}
public static double min(double, double)
{
boolean v2, v3;
double v0, v1, v4;
v0 := @parameter0: double;
v1 := @parameter1: double;
v2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v0);
if v2 == 0 goto label1;
return v1;
label1:
v3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v1);
if v3 == 0 goto label2;
return v0;
label2:
v4 = staticinvoke <java.lang.Math: double min(double,double)>(v0, v1);
return v4;
}
public static float min(float, float, float)
{
float v0, v1, v2, v3, v4;
v0 := @parameter0: float;
v1 := @parameter1: float;
v2 := @parameter2: float;
v3 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: float min(float,float)>(v0, v1);
v4 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: float min(float,float)>(v3, v2);
return v4;
}
public static float min(float, float)
{
float v0, v1, v4;
boolean v2, v3;
v0 := @parameter0: float;
v1 := @parameter1: float;
v2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(v0);
if v2 == 0 goto label1;
return v1;
label1:
v3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(v1);
if v3 == 0 goto label2;
return v0;
label2:
v4 = staticinvoke <java.lang.Math: float min(float,float)>(v0, v1);
return v4;
}
public static transient double max(double[])
{
java.lang.Object[] v1, v4;
double[] v0;
int v2, v6, v7;
boolean v3;
double v5, v8;
v0 := @parameter0: double[];
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "array", v1);
v2 = lengthof v0;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v3, "Array cannot be empty.", v4);
v5 = v0[0];
v6 = 1;
label3:
v7 = lengthof v0;
if v6 >= v7 goto label4;
v8 = v0[v6];
v5 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: double max(double,double)>(v8, v5);
v6 = v6 + 1;
goto label3;
label4:
return v5;
}
public static transient float max(float[])
{
java.lang.Object[] v1, v4;
float[] v0;
int v2, v6, v7;
float v5, v8;
boolean v3;
v0 := @parameter0: float[];
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "array", v1);
v2 = lengthof v0;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v3, "Array cannot be empty.", v4);
v5 = v0[0];
v6 = 1;
label3:
v7 = lengthof v0;
if v6 >= v7 goto label4;
v8 = v0[v6];
v5 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: float max(float,float)>(v8, v5);
v6 = v6 + 1;
goto label3;
label4:
return v5;
}
public static double max(double, double, double)
{
double v0, v1, v2, v3, v4;
v0 := @parameter0: double;
v1 := @parameter1: double;
v2 := @parameter2: double;
v3 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: double max(double,double)>(v0, v1);
v4 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: double max(double,double)>(v3, v2);
return v4;
}
public static double max(double, double)
{
boolean v2, v3;
double v0, v1, v4;
v0 := @parameter0: double;
v1 := @parameter1: double;
v2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v0);
if v2 == 0 goto label1;
return v1;
label1:
v3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v1);
if v3 == 0 goto label2;
return v0;
label2:
v4 = staticinvoke <java.lang.Math: double max(double,double)>(v0, v1);
return v4;
}
public static float max(float, float, float)
{
float v0, v1, v2, v3, v4;
v0 := @parameter0: float;
v1 := @parameter1: float;
v2 := @parameter2: float;
v3 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: float max(float,float)>(v0, v1);
v4 = staticinvoke <org.apache.commons.lang3.math.IEEE754rUtils: float max(float,float)>(v3, v2);
return v4;
}
public static float max(float, float)
{
float v0, v1, v4;
boolean v2, v3;
v0 := @parameter0: float;
v1 := @parameter1: float;
v2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(v0);
if v2 == 0 goto label1;
return v1;
label1:
v3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(v1);
if v3 == 0 goto label2;
return v0;
label2:
v4 = staticinvoke <java.lang.Math: float max(float,float)>(v0, v1);
return v4;
}
}