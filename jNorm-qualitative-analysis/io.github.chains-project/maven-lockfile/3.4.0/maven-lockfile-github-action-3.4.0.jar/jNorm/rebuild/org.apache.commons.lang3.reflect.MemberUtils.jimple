abstract class org.apache.commons.lang3.reflect.MemberUtils extends java.lang.Object
{
private static final int ACCESS_TEST;
private static final java.lang.Class[] ORDERED_PRIMITIVE_TYPES;
void <init>()
{
org.apache.commons.lang3.reflect.MemberUtils v0;
v0 := @this: org.apache.commons.lang3.reflect.MemberUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static boolean setAccessibleWorkaround(java.lang.reflect.AccessibleObject)
{
java.lang.reflect.AccessibleObject v0;
int v3, v6;
java.lang.Class v5;
java.lang.SecurityException v8;
boolean v1, v2, v4, v7;
v0 := @parameter0: java.lang.reflect.AccessibleObject;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if v1 == 0 goto label2;
label1:
return 0;
label2:
v2 = virtualinvoke v0.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if v2 != 0 goto label6;
v3 = interfaceinvoke v0.<java.lang.reflect.Member: int getModifiers()>();
v4 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v3);
if v4 == 0 goto label6;
v5 = interfaceinvoke v0.<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>();
v6 = virtualinvoke v5.<java.lang.Class: int getModifiers()>();
v7 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean isPackageAccess(int)>(v6);
if v7 == 0 goto label6;
label3:
virtualinvoke v0.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);
label4:
return 1;
label5:
v8 := @caughtexception;
label6:
return 0;
catch java.lang.SecurityException from label3 to label4 with label5;
}
static boolean isPackageAccess(int)
{
int v0, v1;
boolean v2;
v0 := @parameter0: int;
v1 = v0 & 7;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
static boolean isAccessible(java.lang.reflect.Member)
{
java.lang.reflect.Member v0;
int v1;
boolean v2, v3, v4;
v0 := @parameter0: java.lang.reflect.Member;
if v0 == null goto label1;
v1 = interfaceinvoke v0.<java.lang.reflect.Member: int getModifiers()>();
v2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v1);
if v2 == 0 goto label1;
v3 = interfaceinvoke v0.<java.lang.reflect.Member: boolean isSynthetic()>();
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
static int compareConstructorFit(java.lang.reflect.Constructor, java.lang.reflect.Constructor, java.lang.Class[])
{
int v5;
java.lang.Class[] v2;
java.lang.reflect.Constructor v0, v1;
org.apache.commons.lang3.reflect.MemberUtils$Executable v3, v4;
v0 := @parameter0: java.lang.reflect.Constructor;
v1 := @parameter1: java.lang.reflect.Constructor;
v2 := @parameter2: java.lang.Class[];
v3 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils$Executable: org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Constructor)>(v0);
v4 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils$Executable: org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Constructor)>(v1);
v5 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: int compareParameterTypes(org.apache.commons.lang3.reflect.MemberUtils$Executable,org.apache.commons.lang3.reflect.MemberUtils$Executable,java.lang.Class[])>(v3, v4, v2);
return v5;
}
static int compareMethodFit(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Class[])
{
int v5;
java.lang.Class[] v2;
java.lang.reflect.Method v0, v1;
org.apache.commons.lang3.reflect.MemberUtils$Executable v3, v4;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: java.lang.reflect.Method;
v2 := @parameter2: java.lang.Class[];
v3 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils$Executable: org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Method)>(v0);
v4 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils$Executable: org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Method)>(v1);
v5 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: int compareParameterTypes(org.apache.commons.lang3.reflect.MemberUtils$Executable,org.apache.commons.lang3.reflect.MemberUtils$Executable,java.lang.Class[])>(v3, v4, v2);
return v5;
}
private static int compareParameterTypes(org.apache.commons.lang3.reflect.MemberUtils$Executable, org.apache.commons.lang3.reflect.MemberUtils$Executable, java.lang.Class[])
{
int v5;
float v3, v4;
java.lang.Class[] v2;
org.apache.commons.lang3.reflect.MemberUtils$Executable v0, v1;
v0 := @parameter0: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v1 := @parameter1: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v2 := @parameter2: java.lang.Class[];
v3 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getTotalTransformationCost(java.lang.Class[],org.apache.commons.lang3.reflect.MemberUtils$Executable)>(v2, v0);
v4 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getTotalTransformationCost(java.lang.Class[],org.apache.commons.lang3.reflect.MemberUtils$Executable)>(v2, v1);
v5 = staticinvoke <java.lang.Float: int compare(float,float)>(v3, v4);
return v5;
}
private static float getTotalTransformationCost(java.lang.Class[], org.apache.commons.lang3.reflect.MemberUtils$Executable)
{
org.apache.commons.lang3.reflect.MemberUtils$Executable v1;
byte v11, v9;
boolean v17, v18, v27, v28, v3;
float v14, v33, v34, v39, v4, v40, v45, v46;
int v10, v15, v16, v19, v20, v21, v22, v24, v25, v29, v30, v35, v36, v41, v42, v43, v5, v6, v7, v8;
java.lang.Class[] v0, v2;
java.lang.Class v12, v13, v23, v26, v31, v32, v37, v38, v44;
v0 := @parameter0: java.lang.Class[];
v1 := @parameter1: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v2 = virtualinvoke v1.<org.apache.commons.lang3.reflect.MemberUtils$Executable: java.lang.Class[] getParameterTypes()>();
v3 = virtualinvoke v1.<org.apache.commons.lang3.reflect.MemberUtils$Executable: boolean isVarArgs()>();
v4 = 0.0F;
if v3 == 0 goto label01;
v5 = lengthof v2;
v6 = v5 - 1;
goto label02;
label01:
v7 = lengthof v2;
label02:
v8 = lengthof v0;
v9 = v8 cmp v6;
if v9 >= 0 goto label03;
return 3.4028235E38F;
label03:
v10 = 0;
label04:
v11 = v10 cmp v6;
if v11 >= 0 goto label05;
v12 = v0[v10];
v13 = v2[v10];
v14 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getObjectTransformationCost(java.lang.Class,java.lang.Class)>(v12, v13);
v4 = v4 + v14;
v10 = v10 + 1;
goto label04;
label05:
if v3 == 0 goto label13;
v15 = lengthof v0;
v16 = lengthof v2;
if v15 >= v16 goto label06;
v17 = 1;
goto label07;
label06:
v17 = 0;
label07:
v18 = v17;
v19 = lengthof v0;
v20 = lengthof v2;
if v19 != v20 goto label08;
v21 = lengthof v0;
v22 = v21 - 1;
v23 = v0[v22];
if v23 == null goto label08;
v24 = lengthof v0;
v25 = v24 - 1;
v26 = v0[v25];
v27 = virtualinvoke v26.<java.lang.Class: boolean isArray()>();
if v27 == 0 goto label08;
v28 = 1;
goto label09;
label08:
v28 = 0;
label09:
v29 = lengthof v2;
v30 = v29 - 1;
v31 = v2[v30];
v32 = virtualinvoke v31.<java.lang.Class: java.lang.Class getComponentType()>();
if v18 == 0 goto label10;
v33 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getObjectTransformationCost(java.lang.Class,java.lang.Class)>(v32, class "Ljava/lang/Object;");
v34 = v33 + 0.001F;
v4 = v4 + v34;
goto label13;
label10:
if v28 == 0 goto label11;
v35 = lengthof v0;
v36 = v35 - 1;
v37 = v0[v36];
v38 = virtualinvoke v37.<java.lang.Class: java.lang.Class getComponentType()>();
v39 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getObjectTransformationCost(java.lang.Class,java.lang.Class)>(v38, v32);
v40 = v39 + 0.001F;
v4 = v4 + v40;
goto label13;
label11:
v41 = lengthof v2;
v42 = v41 - 1;
label12:
v43 = lengthof v0;
if v42 >= v43 goto label13;
v44 = v0[v42];
v45 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getObjectTransformationCost(java.lang.Class,java.lang.Class)>(v44, v32);
v46 = v45 + 0.001F;
v4 = v4 + v46;
v42 = v42 + 1;
goto label12;
label13:
return v4;
}
private static float getObjectTransformationCost(java.lang.Class, java.lang.Class)
{
float v3, v4;
java.lang.Class v0, v1;
boolean v2, v5, v6, v7;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isPrimitive()>();
if v2 == 0 goto label1;
v3 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: float getPrimitivePromotionCost(java.lang.Class,java.lang.Class)>(v0, v1);
return v3;
label1:
v4 = 0.0F;
label2:
if v0 == null goto label4;
v5 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v0);
if v5 != 0 goto label4;
v6 = virtualinvoke v1.<java.lang.Class: boolean isInterface()>();
if v6 == 0 goto label3;
v7 = staticinvoke <org.apache.commons.lang3.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>(v0, v1);
if v7 == 0 goto label3;
v4 = v4 + 0.25F;
goto label4;
label3:
v4 = v4 + 1.0F;
v0 = virtualinvoke v0.<java.lang.Class: java.lang.Class getSuperclass()>();
goto label2;
label4:
if v0 != null goto label5;
v4 = v4 + 1.5F;
label5:
return v4;
}
private static float getPrimitivePromotionCost(java.lang.Class, java.lang.Class)
{
java.lang.Class[] v10, v13, v6, v8;
int v11, v12, v14, v5, v7;
float v2;
java.lang.Class v0, v1, v3, v9;
boolean v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class;
if v0 != null goto label1;
return 1.5F;
label1:
v2 = 0.0F;
v3 = v0;
v4 = virtualinvoke v0.<java.lang.Class: boolean isPrimitive()>();
if v4 != 0 goto label2;
v2 = 0.1F;
v3 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.Class wrapperToPrimitive(java.lang.Class)>(v0);
label2:
v5 = 0;
label3:
if v3 == v1 goto label5;
v6 = <org.apache.commons.lang3.reflect.MemberUtils: java.lang.Class[] ORDERED_PRIMITIVE_TYPES>;
v7 = lengthof v6;
if v5 >= v7 goto label5;
v8 = <org.apache.commons.lang3.reflect.MemberUtils: java.lang.Class[] ORDERED_PRIMITIVE_TYPES>;
v9 = v8[v5];
if v3 != v9 goto label4;
v2 = v2 + 0.1F;
v10 = <org.apache.commons.lang3.reflect.MemberUtils: java.lang.Class[] ORDERED_PRIMITIVE_TYPES>;
v11 = lengthof v10;
v12 = v11 - 1;
if v5 >= v12 goto label4;
v13 = <org.apache.commons.lang3.reflect.MemberUtils: java.lang.Class[] ORDERED_PRIMITIVE_TYPES>;
v14 = v5 + 1;
v3 = v13[v14];
label4:
v5 = v5 + 1;
goto label3;
label5:
return v2;
}
static boolean isMatchingMethod(java.lang.reflect.Method, java.lang.Class[])
{
java.lang.Class[] v1;
java.lang.reflect.Method v0;
org.apache.commons.lang3.reflect.MemberUtils$Executable v2;
boolean v3;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: java.lang.Class[];
v2 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils$Executable: org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Method)>(v0);
v3 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean isMatchingExecutable(org.apache.commons.lang3.reflect.MemberUtils$Executable,java.lang.Class[])>(v2, v1);
return v3;
}
static boolean isMatchingConstructor(java.lang.reflect.Constructor, java.lang.Class[])
{
java.lang.Class[] v1;
java.lang.reflect.Constructor v0;
org.apache.commons.lang3.reflect.MemberUtils$Executable v2;
boolean v3;
v0 := @parameter0: java.lang.reflect.Constructor;
v1 := @parameter1: java.lang.Class[];
v2 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils$Executable: org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Constructor)>(v0);
v3 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean isMatchingExecutable(org.apache.commons.lang3.reflect.MemberUtils$Executable,java.lang.Class[])>(v2, v1);
return v3;
}
private static boolean isMatchingExecutable(org.apache.commons.lang3.reflect.MemberUtils$Executable, java.lang.Class[])
{
org.apache.commons.lang3.reflect.MemberUtils$Executable v0;
int v12, v13, v16, v5, v6, v7, v8;
boolean v11, v18, v3, v4;
java.lang.Class[] v1, v2;
java.lang.Class v10, v14, v15, v17, v9;
v0 := @parameter0: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v1 := @parameter1: java.lang.Class[];
v2 = virtualinvoke v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: java.lang.Class[] getParameterTypes()>();
v3 = staticinvoke <org.apache.commons.lang3.ClassUtils: boolean isAssignable(java.lang.Class[],java.lang.Class[],boolean)>(v1, v2, 1);
if v3 == 0 goto label1;
return 1;
label1:
v4 = virtualinvoke v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: boolean isVarArgs()>();
if v4 == 0 goto label8;
v5 = 0;
label2:
v6 = lengthof v2;
v7 = v6 - 1;
if v5 >= v7 goto label4;
v8 = lengthof v1;
if v5 >= v8 goto label4;
v9 = v1[v5];
v10 = v2[v5];
v11 = staticinvoke <org.apache.commons.lang3.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class,boolean)>(v9, v10, 1);
if v11 != 0 goto label3;
return 0;
label3:
v5 = v5 + 1;
goto label2;
label4:
v12 = lengthof v2;
v13 = v12 - 1;
v14 = v2[v13];
v15 = virtualinvoke v14.<java.lang.Class: java.lang.Class getComponentType()>();
label5:
v16 = lengthof v1;
if v5 >= v16 goto label7;
v17 = v1[v5];
v18 = staticinvoke <org.apache.commons.lang3.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class,boolean)>(v17, v15, 1);
if v18 != 0 goto label6;
return 0;
label6:
v5 = v5 + 1;
goto label5;
label7:
return 1;
label8:
return 0;
}
static void <clinit>()
{
java.lang.Class[] v0;
java.lang.Class v1, v2, v3, v4, v5, v6, v7;
v0 = newarray (java.lang.Class)[7];
v1 = <java.lang.Byte: java.lang.Class TYPE>;
v0[0] = v1;
v2 = <java.lang.Short: java.lang.Class TYPE>;
v0[1] = v2;
v3 = <java.lang.Character: java.lang.Class TYPE>;
v0[2] = v3;
v4 = <java.lang.Integer: java.lang.Class TYPE>;
v0[3] = v4;
v5 = <java.lang.Long: java.lang.Class TYPE>;
v0[4] = v5;
v6 = <java.lang.Float: java.lang.Class TYPE>;
v0[5] = v6;
v7 = <java.lang.Double: java.lang.Class TYPE>;
v0[6] = v7;
<org.apache.commons.lang3.reflect.MemberUtils: java.lang.Class[] ORDERED_PRIMITIVE_TYPES> = v0;
return;
}
}