public class org.apache.commons.lang3.text.translate.UnicodeUnescaper extends org.apache.commons.lang3.text.translate.CharSequenceTranslator
{
public void <init>()
{
org.apache.commons.lang3.text.translate.UnicodeUnescaper v0;
v0 := @this: org.apache.commons.lang3.text.translate.UnicodeUnescaper;
specialinvoke v0.<org.apache.commons.lang3.text.translate.CharSequenceTranslator: void <init>()>();
return;
}
public int translate(java.lang.CharSequence, int, java.io.Writer) throws java.io.IOException
{
java.lang.CharSequence v1, v24, v32;
org.apache.commons.lang3.text.translate.UnicodeUnescaper v0;
java.io.Writer v3;
int v10, v11, v12, v14, v15, v16, v18, v19, v2, v20, v21, v22, v23, v29, v31, v5, v6, v7, v9;
java.lang.String v25, v28, v33;
char v13, v17, v34, v4, v8;
java.lang.NumberFormatException v26;
java.lang.IllegalArgumentException v27, v30;
v0 := @this: org.apache.commons.lang3.text.translate.UnicodeUnescaper;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: java.io.Writer;
v4 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v2);
if v4 != 92 goto label9;
v5 = v2 + 1;
v6 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v5 >= v6 goto label9;
v7 = v2 + 1;
v8 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v7);
if v8 != 117 goto label9;
v9 = 2;
label1:
v10 = v2 + v9;
v11 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v10 >= v11 goto label2;
v12 = v2 + v9;
v13 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v13 != 117 goto label2;
v9 = v9 + 1;
goto label1;
label2:
v14 = v2 + v9;
v15 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v14 >= v15 goto label3;
v16 = v2 + v9;
v17 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v16);
if v17 != 43 goto label3;
v9 = v9 + 1;
label3:
v18 = v2 + v9;
v19 = v18 + 4;
v20 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v19 > v20 goto label8;
v21 = v2 + v9;
v22 = v2 + v9;
v23 = v22 + 4;
v24 = interfaceinvoke v1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v21, v23);
label4:
v25 = virtualinvoke v24.<java.lang.Object: java.lang.String toString()>();
staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(v25, 16);
virtualinvoke v3.<java.io.Writer: void write(int)>(v34);
label5:
goto label7;
label6:
v26 := @caughtexception;
v27 = new java.lang.IllegalArgumentException;
v28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence)>(v24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to parse unicode value: \u0001");
specialinvoke v27.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v28, v26);
throw v27;
label7:
v29 = v9 + 4;
return v29;
label8:
v30 = new java.lang.IllegalArgumentException;
v31 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v32 = interfaceinvoke v1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v2, v31);
v33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence)>(v32) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Less than 4 hex digits in unicode value: \'\u0001\' due to end of CharSequence");
specialinvoke v30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v33);
throw v30;
label9:
return 0;
catch java.lang.NumberFormatException from label4 to label5 with label6;
}
}