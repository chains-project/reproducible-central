class org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser$PatternStrategy
{
private static final org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_1_STRATEGY;
private static final org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_2_STRATEGY;
private static final org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_3_STRATEGY;
void <init>(java.lang.String)
{
org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy v0;
java.lang.String v1;
v0 := @this: org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void <init>()>();
virtualinvoke v0.<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: void createPattern(java.lang.String)>(v1);
return;
}
void setCalendar(org.apache.commons.lang3.time.FastDateParser, java.util.Calendar, java.lang.String)
{
java.util.Calendar v2;
java.util.TimeZone v4;
org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy v0;
java.lang.String v3;
org.apache.commons.lang3.time.FastDateParser v1;
v0 := @this: org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy;
v1 := @parameter0: org.apache.commons.lang3.time.FastDateParser;
v2 := @parameter1: java.util.Calendar;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone getGmtTimeZone(java.lang.String)>(v3);
virtualinvoke v2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(v4);
return;
}
static org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)
{
org.apache.commons.lang3.time.FastDateParser$Strategy v1, v2, v3;
int v0;
java.lang.IllegalArgumentException v4;
v0 := @parameter0: int;
tableswitch(v0)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
v1 = <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_1_STRATEGY>;
return v1;
label2:
v2 = <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_2_STRATEGY>;
return v2;
label3:
v3 = <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_3_STRATEGY>;
return v3;
label4:
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid number of X");
throw v4;
}
static void <clinit>()
{
org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy v0, v1, v2;
v0 = new org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy;
specialinvoke v0.<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: void <init>(java.lang.String)>("(Z|(?:[+-]\\d{2}))");
<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_1_STRATEGY> = v0;
v1 = new org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy;
specialinvoke v1.<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: void <init>(java.lang.String)>("(Z|(?:[+-]\\d{2}\\d{2}))");
<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_2_STRATEGY> = v1;
v2 = new org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy;
specialinvoke v2.<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: void <init>(java.lang.String)>("(Z|(?:[+-]\\d{2}(?::)\\d{2}))");
<org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy ISO_8601_3_STRATEGY> = v2;
return;
}
}