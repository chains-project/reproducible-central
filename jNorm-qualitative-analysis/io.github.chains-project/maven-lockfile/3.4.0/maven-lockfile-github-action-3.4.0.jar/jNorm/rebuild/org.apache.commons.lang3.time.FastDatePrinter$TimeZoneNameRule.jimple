class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule extends java.lang.Object implements org.apache.commons.lang3.time.FastDatePrinter$Rule
{
private final java.util.Locale mLocale;
private final int mStyle;
private final java.lang.String mStandard;
private final java.lang.String mDaylight;
void <init>(java.util.TimeZone, java.util.Locale, int)
{
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule v0;
java.util.Locale v2, v4;
java.util.TimeZone v1;
int v3;
java.lang.String v5, v6;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule;
v1 := @parameter0: java.util.TimeZone;
v2 := @parameter1: java.util.Locale;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(v2);
v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.util.Locale mLocale> = v4;
v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: int mStyle> = v3;
v5 = staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>(v1, 0, v3, v2);
v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.lang.String mStandard> = v5;
v6 = staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>(v1, 1, v3, v2);
v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.lang.String mDaylight> = v6;
return;
}
public int estimateLength()
{
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule v0;
int v2, v4, v5;
java.lang.String v1, v3;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.lang.String mStandard>;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.lang.String mDaylight>;
v4 = virtualinvoke v3.<java.lang.String: int length()>();
v5 = staticinvoke <java.lang.Math: int max(int,int)>(v2, v4);
return v5;
}
public void appendTo(java.lang.Appendable, java.util.Calendar) throws java.io.IOException
{
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule v0;
java.lang.Appendable v1;
java.util.TimeZone v3;
java.util.Calendar v2;
java.util.Locale v6, v9;
int v4, v5, v8;
java.lang.String v10, v7;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule;
v1 := @parameter0: java.lang.Appendable;
v2 := @parameter1: java.util.Calendar;
v3 = virtualinvoke v2.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
v4 = virtualinvoke v2.<java.util.Calendar: int get(int)>(16);
if v4 != 0 goto label1;
v5 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: int mStyle>;
v6 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.util.Locale mLocale>;
v7 = staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>(v3, 0, v5, v6);
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(v7);
goto label2;
label1:
v8 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: int mStyle>;
v9 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.util.Locale mLocale>;
v10 = staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>(v3, 1, v8, v9);
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(v10);
label2:
return;
}
}