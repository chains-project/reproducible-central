public class org.apache.commons.lang3.time.FastDatePrinter extends java.lang.Object implements org.apache.commons.lang3.time.DatePrinter, java.io.Serializable
{
private static final org.apache.commons.lang3.time.FastDatePrinter$Rule[] EMPTY_RULE_ARRAY;
private static final long serialVersionUID;
public static final int FULL;
public static final int LONG;
public static final int MEDIUM;
public static final int SHORT;
private final java.lang.String mPattern;
private final java.util.TimeZone mTimeZone;
private final java.util.Locale mLocale;
private transient org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules;
private transient int mMaxLengthEstimate;
private static final int MAX_DIGITS;
private static final java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache;
protected void <init>(java.lang.String, java.util.TimeZone, java.util.Locale)
{
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v3, v4;
java.util.TimeZone v2;
java.lang.String v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.TimeZone;
v3 := @parameter2: java.util.Locale;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern> = v1;
v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone> = v2;
v4 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(v3);
v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale> = v4;
specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: void init()>();
return;
}
private void init()
{
java.lang.Object[] v3;
org.apache.commons.lang3.time.FastDatePrinter$Rule[] v2, v5, v7;
org.apache.commons.lang3.time.FastDatePrinter$Rule v8;
java.util.List v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
int v4, v6, v9;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.List parsePattern()>();
v2 = <org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$Rule[] EMPTY_RULE_ARRAY>;
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v2);
v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules> = v3;
v4 = 0;
v5 = v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules>;
v6 = lengthof v5;
label1:
v6 = v6 - 1;
if v6 < 0 goto label2;
v7 = v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules>;
v8 = v7[v6];
v9 = interfaceinvoke v8.<org.apache.commons.lang3.time.FastDatePrinter$Rule: int estimateLength()>();
v4 = v4 + v9;
goto label1;
label2:
v0.<org.apache.commons.lang3.time.FastDatePrinter: int mMaxLengthEstimate> = v4;
return;
}
protected java.util.List parsePattern()
{
org.apache.commons.lang3.time.FastDatePrinter$TextField v19, v23, v24, v27, v31;
org.apache.commons.lang3.time.FastDatePrinter$NumberRule v26, v30, v33;
org.apache.commons.lang3.time.FastDatePrinter$Rule v20;
int[] v12;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v2, v36, v39;
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule v34, v37;
org.apache.commons.lang3.time.FastDatePrinter$DayInWeekField v29;
java.util.TimeZone v35, v38;
java.lang.String[] v28, v4, v5, v6, v7, v8, v9;
org.apache.commons.lang3.time.FastDatePrinter$StringLiteral v44;
java.util.ArrayList v3;
int v11, v13, v16, v17, v21, v41;
org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField v25;
org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField v32;
java.lang.String v10, v14, v15, v40, v46;
org.apache.commons.lang3.time.FastDatePrinter$WeekYear v22;
org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral v42;
char v18, v43;
java.lang.IllegalArgumentException v45;
java.text.DateFormatSymbols v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = new java.text.DateFormatSymbols;
v2 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
specialinvoke v1.<java.text.DateFormatSymbols: void <init>(java.util.Locale)>(v2);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = virtualinvoke v1.<java.text.DateFormatSymbols: java.lang.String[] getEras()>();
v5 = virtualinvoke v1.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();
v6 = virtualinvoke v1.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();
v7 = virtualinvoke v1.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();
v8 = virtualinvoke v1.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();
v9 = virtualinvoke v1.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();
v10 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
v11 = virtualinvoke v10.<java.lang.String: int length()>();
v12 = newarray (int)[1];
v13 = 0;
label01:
if v13 >= v11 goto label37;
v12[0] = v13;
v14 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
v15 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String parseToken(java.lang.String,int[])>(v14, v12);
v16 = v12[0];
v17 = virtualinvoke v15.<java.lang.String: int length()>();
if v17 == 0 goto label37;
v18 = virtualinvoke v15.<java.lang.String: char charAt(int)>(0);
tableswitch(v18)
{
case 39: goto label33;
case 40: goto label35;
case 41: goto label35;
case 42: goto label35;
case 43: goto label35;
case 44: goto label35;
case 45: goto label35;
case 46: goto label35;
case 47: goto label35;
case 48: goto label35;
case 49: goto label35;
case 50: goto label35;
case 51: goto label35;
case 52: goto label35;
case 53: goto label35;
case 54: goto label35;
case 55: goto label35;
case 56: goto label35;
case 57: goto label35;
case 58: goto label35;
case 59: goto label35;
case 60: goto label35;
case 61: goto label35;
case 62: goto label35;
case 63: goto label35;
case 64: goto label35;
case 65: goto label35;
case 66: goto label35;
case 67: goto label35;
case 68: goto label20;
case 69: goto label16;
case 70: goto label21;
case 71: goto label02;
case 72: goto label12;
case 73: goto label35;
case 74: goto label35;
case 75: goto label26;
case 76: goto label35;
case 77: goto label06;
case 78: goto label35;
case 79: goto label35;
case 80: goto label35;
case 81: goto label35;
case 82: goto label35;
case 83: goto label15;
case 84: goto label35;
case 85: goto label35;
case 86: goto label35;
case 87: goto label23;
case 88: goto label27;
case 89: goto label03;
case 90: goto label30;
case 91: goto label35;
case 92: goto label35;
case 93: goto label35;
case 94: goto label35;
case 95: goto label35;
case 96: goto label35;
case 97: goto label24;
case 98: goto label35;
case 99: goto label35;
case 100: goto label10;
case 101: goto label35;
case 102: goto label35;
case 103: goto label35;
case 104: goto label11;
case 105: goto label35;
case 106: goto label35;
case 107: goto label25;
case 108: goto label35;
case 109: goto label13;
case 110: goto label35;
case 111: goto label35;
case 112: goto label35;
case 113: goto label35;
case 114: goto label35;
case 115: goto label14;
case 116: goto label35;
case 117: goto label19;
case 118: goto label35;
case 119: goto label22;
case 120: goto label35;
case 121: goto label03;
case 122: goto label28;
default: goto label35;
};
label02:
v19 = new org.apache.commons.lang3.time.FastDatePrinter$TextField;
specialinvoke v19.<org.apache.commons.lang3.time.FastDatePrinter$TextField: void <init>(int,java.lang.String[])>(0, v4);
v20 = v19;
goto label36;
label03:
if v17 != 2 goto label04;
v20 = <org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField: org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField INSTANCE>;
goto label05;
label04:
v21 = staticinvoke <java.lang.Math: int max(int,int)>(v17, 4);
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(1, v21);
label05:
if v18 != 89 goto label36;
v22 = new org.apache.commons.lang3.time.FastDatePrinter$WeekYear;
specialinvoke v22.<org.apache.commons.lang3.time.FastDatePrinter$WeekYear: void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)>(v20);
v20 = v22;
goto label36;
label06:
if v17 < 4 goto label07;
v23 = new org.apache.commons.lang3.time.FastDatePrinter$TextField;
specialinvoke v23.<org.apache.commons.lang3.time.FastDatePrinter$TextField: void <init>(int,java.lang.String[])>(2, v5);
v20 = v23;
goto label36;
label07:
if v17 != 3 goto label08;
v24 = new org.apache.commons.lang3.time.FastDatePrinter$TextField;
specialinvoke v24.<org.apache.commons.lang3.time.FastDatePrinter$TextField: void <init>(int,java.lang.String[])>(2, v6);
v20 = v24;
goto label36;
label08:
if v17 != 2 goto label09;
v20 = <org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField: org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField INSTANCE>;
goto label36;
label09:
v20 = <org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField: org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField INSTANCE>;
goto label36;
label10:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(5, v17);
goto label36;
label11:
v25 = new org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField;
v26 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(10, v17);
specialinvoke v25.<org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField: void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)>(v26);
v20 = v25;
goto label36;
label12:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(11, v17);
goto label36;
label13:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(12, v17);
goto label36;
label14:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(13, v17);
goto label36;
label15:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(14, v17);
goto label36;
label16:
v27 = new org.apache.commons.lang3.time.FastDatePrinter$TextField;
if v17 >= 4 goto label17;
v28 = v8;
goto label18;
label17:
v28 = v7;
label18:
specialinvoke v27.<org.apache.commons.lang3.time.FastDatePrinter$TextField: void <init>(int,java.lang.String[])>(7, v28);
v20 = v27;
goto label36;
label19:
v29 = new org.apache.commons.lang3.time.FastDatePrinter$DayInWeekField;
v30 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(7, v17);
specialinvoke v29.<org.apache.commons.lang3.time.FastDatePrinter$DayInWeekField: void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)>(v30);
v20 = v29;
goto label36;
label20:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(6, v17);
goto label36;
label21:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(8, v17);
goto label36;
label22:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(3, v17);
goto label36;
label23:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(4, v17);
goto label36;
label24:
v31 = new org.apache.commons.lang3.time.FastDatePrinter$TextField;
specialinvoke v31.<org.apache.commons.lang3.time.FastDatePrinter$TextField: void <init>(int,java.lang.String[])>(9, v9);
v20 = v31;
goto label36;
label25:
v32 = new org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField;
v33 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(11, v17);
specialinvoke v32.<org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField: void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)>(v33);
v20 = v32;
goto label36;
label26:
v20 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int)>(10, v17);
goto label36;
label27:
v20 = staticinvoke <org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule getRule(int)>(v17);
goto label36;
label28:
if v17 < 4 goto label29;
v34 = new org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule;
v35 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v36 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
specialinvoke v34.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: void <init>(java.util.TimeZone,java.util.Locale,int)>(v35, v36, 1);
v20 = v34;
goto label36;
label29:
v37 = new org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule;
v38 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v39 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
specialinvoke v37.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: void <init>(java.util.TimeZone,java.util.Locale,int)>(v38, v39, 0);
v20 = v37;
goto label36;
label30:
if v17 != 1 goto label31;
v20 = <org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_NO_COLON>;
goto label36;
label31:
if v17 != 2 goto label32;
v20 = <org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_COLON_MINUTES>;
goto label36;
label32:
v20 = <org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_COLON>;
goto label36;
label33:
v40 = virtualinvoke v15.<java.lang.String: java.lang.String substring(int)>(1);
v41 = virtualinvoke v40.<java.lang.String: int length()>();
if v41 != 1 goto label34;
v42 = new org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral;
v43 = virtualinvoke v40.<java.lang.String: char charAt(int)>(0);
specialinvoke v42.<org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral: void <init>(char)>(v43);
v20 = v42;
goto label36;
label34:
v44 = new org.apache.commons.lang3.time.FastDatePrinter$StringLiteral;
specialinvoke v44.<org.apache.commons.lang3.time.FastDatePrinter$StringLiteral: void <init>(java.lang.String)>(v40);
v20 = v44;
goto label36;
label35:
v45 = new java.lang.IllegalArgumentException;
v46 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Illegal pattern component: \u0001");
specialinvoke v45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v46);
throw v45;
label36:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v20);
v13 = v16 + 1;
goto label01;
label37:
return v3;
}
protected java.lang.String parseToken(java.lang.String, int[])
{
int[] v2;
org.apache.commons.lang3.time.FastDatePrinter v0;
int v12, v13, v4, v5, v7, v8;
java.lang.String v1, v16;
boolean v10, v15;
char v11, v14, v6, v9;
java.lang.StringBuilder v3;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int[];
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = v2[0];
v5 = virtualinvoke v1.<java.lang.String: int length()>();
v6 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v4);
if v6 < 65 goto label01;
if v6 <= 90 goto label02;
label01:
if v6 < 97 goto label04;
if v6 > 122 goto label04;
label02:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v6);
label03:
v7 = v4 + 1;
if v7 >= v5 goto label14;
v8 = v4 + 1;
v9 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v8);
if v9 != v6 goto label14;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v6);
v4 = v4 + 1;
goto label03;
label04:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);
v10 = 0;
label05:
if v4 >= v5 goto label14;
v11 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v4);
if v11 != 39 goto label09;
v12 = v4 + 1;
if v12 >= v5 goto label06;
v13 = v4 + 1;
v14 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v13);
if v14 != 39 goto label06;
v4 = v4 + 1;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v11);
goto label13;
label06:
if v10 != 0 goto label07;
v15 = 1;
goto label08;
label07:
v15 = 0;
label08:
v10 = v15;
goto label13;
label09:
if v10 != 0 goto label12;
if v11 < 65 goto label10;
if v11 <= 90 goto label11;
label10:
if v11 < 97 goto label12;
if v11 > 122 goto label12;
label11:
v4 = v4 - 1;
goto label14;
label12:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v11);
label13:
v4 = v4 + 1;
goto label05;
label14:
v2[0] = v4;
v16 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v16;
}
protected org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int, int)
{
org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
int v1, v2;
org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField v5;
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField v4;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: int;
v2 := @parameter1: int;
lookupswitch(v2)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
v3 = new org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField;
specialinvoke v3.<org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField: void <init>(int)>(v1);
return v3;
label2:
v4 = new org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField;
specialinvoke v4.<org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField: void <init>(int)>(v1);
return v4;
label3:
v5 = new org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField;
specialinvoke v5.<org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField: void <init>(int,int)>(v1, v2);
return v5;
}
public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
{
long v9;
java.lang.IllegalArgumentException v11;
java.text.FieldPosition v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.StringBuffer v10, v2, v5, v7;
java.lang.Class v13;
java.lang.Object v1;
java.lang.String v12, v14;
boolean v4, v6, v8;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.StringBuffer;
v3 := @parameter2: java.text.FieldPosition;
v4 = v1 instanceof java.util.Date;
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer)>(v1, v2);
return v5;
label1:
v6 = v1 instanceof java.util.Calendar;
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer)>(v1, v2);
return v7;
label2:
v8 = v1 instanceof java.lang.Long;
if v8 == 0 goto label3;
v9 = virtualinvoke v1.<java.lang.Long: long longValue()>();
v10 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(long,java.lang.StringBuffer)>(v9, v2);
return v10;
label3:
v11 = new java.lang.IllegalArgumentException;
if v1 != null goto label4;
v12 = "<null>";
goto label5;
label4:
v13 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v12 = virtualinvoke v13.<java.lang.Class: java.lang.String getName()>();
label5:
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown class: \u0001");
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v11;
}
java.lang.String format(java.lang.Object)
{
long v7;
java.lang.IllegalArgumentException v9;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Class v11;
java.lang.Object v1;
java.lang.String v10, v12, v3, v5, v8;
boolean v2, v4, v6;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.util.Date;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String format(java.util.Date)>(v1);
return v3;
label1:
v4 = v1 instanceof java.util.Calendar;
if v4 == 0 goto label2;
v5 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String format(java.util.Calendar)>(v1);
return v5;
label2:
v6 = v1 instanceof java.lang.Long;
if v6 == 0 goto label3;
v7 = virtualinvoke v1.<java.lang.Long: long longValue()>();
v8 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String format(long)>(v7);
return v8;
label3:
v9 = new java.lang.IllegalArgumentException;
if v1 != null goto label4;
v10 = "<null>";
goto label5;
label4:
v11 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v10 = virtualinvoke v11.<java.lang.Class: java.lang.String getName()>();
label5:
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown class: \u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v9;
}
public java.lang.String format(long)
{
java.util.Calendar v2;
org.apache.commons.lang3.time.FastDatePrinter v0;
long v1;
java.lang.String v3;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: long;
v2 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Calendar newCalendar()>();
virtualinvoke v2.<java.util.Calendar: void setTimeInMillis(long)>(v1);
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String applyRulesToString(java.util.Calendar)>(v2);
return v3;
}
private java.lang.String applyRulesToString(java.util.Calendar)
{
java.util.Calendar v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v4;
int v3;
java.lang.StringBuilder v2;
java.lang.String v5;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Calendar;
v2 = new java.lang.StringBuilder;
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter: int mMaxLengthEstimate>;
specialinvoke v2.<java.lang.StringBuilder: void <init>(int)>(v3);
v4 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v1, v2);
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
return v5;
}
private java.util.Calendar newCalendar()
{
java.util.Calendar v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v2;
java.util.TimeZone v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v2 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
v3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(v1, v2);
return v3;
}
public java.lang.String format(java.util.Date)
{
java.util.Calendar v2;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Date v1;
java.lang.String v3;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Date;
v2 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Calendar newCalendar()>();
virtualinvoke v2.<java.util.Calendar: void setTime(java.util.Date)>(v1);
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String applyRulesToString(java.util.Calendar)>(v2);
return v3;
}
public java.lang.String format(java.util.Calendar)
{
java.util.Calendar v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v4;
int v3;
java.lang.StringBuilder v2;
java.lang.String v5;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Calendar;
v2 = new java.lang.StringBuilder;
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter: int mMaxLengthEstimate>;
specialinvoke v2.<java.lang.StringBuilder: void <init>(int)>(v3);
v4 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable format(java.util.Calendar,java.lang.Appendable)>(v1, v2);
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
return v5;
}
public java.lang.StringBuffer format(long, java.lang.StringBuffer)
{
java.util.Calendar v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v4;
java.lang.StringBuffer v2;
long v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: long;
v2 := @parameter1: java.lang.StringBuffer;
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Calendar newCalendar()>();
virtualinvoke v3.<java.util.Calendar: void setTimeInMillis(long)>(v1);
v4 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v3, v2);
return v4;
}
public java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer)
{
java.util.Calendar v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v4;
java.lang.StringBuffer v2;
java.util.Date v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: java.lang.StringBuffer;
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Calendar newCalendar()>();
virtualinvoke v3.<java.util.Calendar: void setTime(java.util.Date)>(v1);
v4 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v3, v2);
return v4;
}
public java.lang.StringBuffer format(java.util.Calendar, java.lang.StringBuffer)
{
java.util.Calendar v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.StringBuffer v2, v4;
java.util.Date v3;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Calendar;
v2 := @parameter1: java.lang.StringBuffer;
v3 = virtualinvoke v1.<java.util.Calendar: java.util.Date getTime()>();
v4 = virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer)>(v3, v2);
return v4;
}
public java.lang.Appendable format(long, java.lang.Appendable)
{
java.util.Calendar v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v2, v4;
long v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: long;
v2 := @parameter1: java.lang.Appendable;
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Calendar newCalendar()>();
virtualinvoke v3.<java.util.Calendar: void setTimeInMillis(long)>(v1);
v4 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v3, v2);
return v4;
}
public java.lang.Appendable format(java.util.Date, java.lang.Appendable)
{
java.util.Calendar v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v2, v4;
java.util.Date v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: java.lang.Appendable;
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Calendar newCalendar()>();
virtualinvoke v3.<java.util.Calendar: void setTime(java.util.Date)>(v1);
v4 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v3, v2);
return v4;
}
public java.lang.Appendable format(java.util.Calendar, java.lang.Appendable)
{
java.lang.Appendable v2, v8;
java.util.TimeZone v3, v4, v7;
java.util.Calendar v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Object v6;
boolean v5;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Calendar;
v2 := @parameter1: java.lang.Appendable;
v3 = virtualinvoke v1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
v4 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v5 = virtualinvoke v3.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
if v5 != 0 goto label1;
v6 = virtualinvoke v1.<java.util.Calendar: java.lang.Object clone()>();
v7 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
virtualinvoke v6.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(v7);
label1:
v8 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v6, v2);
return v8;
}
protected java.lang.StringBuffer applyRules(java.util.Calendar, java.lang.StringBuffer)
{
java.util.Calendar v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.lang.Appendable v3;
java.lang.StringBuffer v2;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Calendar;
v2 := @parameter1: java.lang.StringBuffer;
v3 = specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(v1, v2);
return v3;
}
private java.lang.Appendable applyRules(java.util.Calendar, java.lang.Appendable)
{
org.apache.commons.lang3.time.FastDatePrinter$Rule[] v3;
java.lang.Appendable v2;
java.io.IOException v7;
org.apache.commons.lang3.time.FastDatePrinter$Rule v6;
java.util.Calendar v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
int v4, v5;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.util.Calendar;
v2 := @parameter1: java.lang.Appendable;
label1:
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules>;
v4 = lengthof v3;
v5 = 0;
label2:
if v5 >= v4 goto label4;
v6 = v3[v5];
interfaceinvoke v6.<org.apache.commons.lang3.time.FastDatePrinter$Rule: void appendTo(java.lang.Appendable,java.util.Calendar)>(v2, v1);
v5 = v5 + 1;
goto label2;
label3:
v7 := @caughtexception;
staticinvoke <org.apache.commons.lang3.exception.ExceptionUtils: java.lang.Object rethrow(java.lang.Throwable)>(v7);
label4:
return v2;
catch java.io.IOException from label1 to label3 with label3;
}
public java.lang.String getPattern()
{
java.lang.String v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
return v1;
}
public java.util.TimeZone getTimeZone()
{
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.TimeZone v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
return v1;
}
public java.util.Locale getLocale()
{
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
return v1;
}
public int getMaxLengthEstimate()
{
int v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: int mMaxLengthEstimate>;
return v1;
}
public boolean equals(java.lang.Object)
{
java.util.TimeZone v6, v7;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v10, v9;
java.lang.Object v1;
java.lang.String v3, v4;
boolean v11, v12, v2, v5, v8;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof org.apache.commons.lang3.time.FastDatePrinter;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
v4 = v1.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label2;
v6 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v7 = v1.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v8 = virtualinvoke v6.<java.lang.Object: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label2;
v9 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
v10 = v1.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
v11 = virtualinvoke v9.<java.util.Locale: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label2;
v12 = 1;
goto label3;
label2:
v12 = 0;
label3:
return v12;
}
public int hashCode()
{
java.util.TimeZone v3;
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v5;
int v10, v2, v4, v6, v7, v8, v9;
java.lang.String v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v4 = virtualinvoke v3.<java.lang.Object: int hashCode()>();
v5 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
v6 = virtualinvoke v5.<java.util.Locale: int hashCode()>();
v7 = 13 * v6;
v8 = v4 + v7;
v9 = 13 * v8;
v10 = v2 + v9;
return v10;
}
public java.lang.String toString()
{
org.apache.commons.lang3.time.FastDatePrinter v0;
java.util.Locale v2;
java.util.TimeZone v3;
java.lang.String v1, v4, v5;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String mPattern>;
v2 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale mLocale>;
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone mTimeZone>;
v4 = virtualinvoke v3.<java.util.TimeZone: java.lang.String getID()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.util.Locale,java.lang.String)>(v1, v2, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("FastDatePrinter[\u0001,\u0001,\u0001]");
return v5;
}
private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
{
java.io.ObjectInputStream v1;
org.apache.commons.lang3.time.FastDatePrinter v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter;
v1 := @parameter0: java.io.ObjectInputStream;
virtualinvoke v1.<java.io.ObjectInputStream: void defaultReadObject()>();
specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter: void init()>();
return;
}
private static void appendDigits(java.lang.Appendable, int) throws java.io.IOException
{
java.lang.Appendable v0;
int v1, v2, v3, v4, v5;
v0 := @parameter0: java.lang.Appendable;
v1 := @parameter1: int;
v2 = v1 / 10;
v3 = v2 + 48;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v3);
v4 = v1 % 10;
v5 = v4 + 48;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v5);
return;
}
private static void appendFullDigits(java.lang.Appendable, int, int) throws java.io.IOException
{
int v1, v10, v11, v13, v14, v15, v16, v2, v3, v4, v5, v6, v7, v8, v9;
java.lang.Appendable v0;
char v17;
char[] v12;
v0 := @parameter0: java.lang.Appendable;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 >= 10000 goto label10;
v3 = 4;
if v1 >= 1000 goto label01;
v3 = 3;
if v1 >= 100 goto label01;
v3 = 2;
if v1 >= 10 goto label01;
v3 = 1;
label01:
v4 = v2 - v3;
label02:
if v4 <= 0 goto label03;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(48);
v4 = v4 - 1;
goto label02;
label03:
tableswitch(v3)
{
case 1: goto label09;
case 2: goto label07;
case 3: goto label05;
case 4: goto label04;
default: goto label14;
};
label04:
v5 = v1 / 1000;
v6 = v5 + 48;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v6);
v1 = v1 % 1000;
label05:
if v1 < 100 goto label06;
v7 = v1 / 100;
v8 = v7 + 48;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v8);
v1 = v1 % 100;
goto label07;
label06:
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(48);
label07:
if v1 < 10 goto label08;
v9 = v1 / 10;
v10 = v9 + 48;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v10);
v1 = v1 % 10;
goto label09;
label08:
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(48);
label09:
v11 = v1 + 48;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v11);
goto label14;
label10:
v12 = newarray (char)[10];
v13 = 0;
label11:
if v1 == 0 goto label12;
v14 = v13;
v13 = v13 + 1;
v15 = v1 % 10;
v16 = v15 + 48;
v12[v14] = v16;
v1 = v1 / 10;
goto label11;
label12:
if v13 >= v2 goto label13;
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(48);
v2 = v2 - 1;
goto label12;
label13:
v13 = v13 - 1;
if v13 < 0 goto label14;
v17 = v12[v13];
interfaceinvoke v0.<java.lang.Appendable: java.lang.Appendable append(char)>(v17);
goto label13;
label14:
return;
}
static java.lang.String getTimeZoneDisplay(java.util.TimeZone, boolean, int, java.util.Locale)
{
java.util.TimeZone v0;
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey v4;
java.util.concurrent.ConcurrentMap v5, v7;
java.util.Locale v3;
int v2;
java.lang.Object v6, v8;
boolean v1;
v0 := @parameter0: java.util.TimeZone;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: java.util.Locale;
v4 = new org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey;
specialinvoke v4.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: void <init>(java.util.TimeZone,boolean,int,java.util.Locale)>(v0, v1, v2, v3);
v5 = <org.apache.commons.lang3.time.FastDatePrinter: java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache>;
v6 = interfaceinvoke v5.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v4);
if v6 != null goto label1;
v6 = virtualinvoke v0.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>(v1, v2, v3);
v7 = <org.apache.commons.lang3.time.FastDatePrinter: java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache>;
v8 = interfaceinvoke v7.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v4, v6);
if v8 == null goto label1;
v6 = v8;
label1:
return v6;
}
static void <clinit>()
{
java.util.concurrent.ConcurrentHashMap v1;
org.apache.commons.lang3.time.FastDatePrinter$Rule[] v0;
v0 = newarray (org.apache.commons.lang3.time.FastDatePrinter$Rule)[0];
<org.apache.commons.lang3.time.FastDatePrinter: org.apache.commons.lang3.time.FastDatePrinter$Rule[] EMPTY_RULE_ARRAY> = v0;
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(7);
<org.apache.commons.lang3.time.FastDatePrinter: java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache> = v1;
return;
}
}