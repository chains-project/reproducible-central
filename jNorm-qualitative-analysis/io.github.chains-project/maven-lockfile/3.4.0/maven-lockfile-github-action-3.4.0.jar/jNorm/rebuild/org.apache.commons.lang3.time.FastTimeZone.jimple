public class org.apache.commons.lang3.time.FastTimeZone extends java.lang.Object
{
private static final java.util.regex.Pattern GMT_PATTERN;
private static final java.util.TimeZone GREENWICH;
public static java.util.TimeZone getGmtTimeZone()
{
java.util.TimeZone v0;
v0 = <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone GREENWICH>;
return v0;
}
public static java.util.TimeZone getGmtTimeZone(java.lang.String)
{
org.apache.commons.lang3.time.GmtTimeZone v14;
java.util.regex.Matcher v7;
int v10, v12;
java.lang.String v0, v1, v11, v15, v3, v9;
boolean v16, v2, v4, v8;
java.util.TimeZone v13, v5;
java.util.regex.Pattern v6;
v0 := @parameter0: java.lang.String;
v1 = "Z";
v2 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v2 != 0 goto label1;
v3 = "UTC";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v4 == 0 goto label2;
label1:
v5 = <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone GREENWICH>;
return v5;
label2:
v6 = <org.apache.commons.lang3.time.FastTimeZone: java.util.regex.Pattern GMT_PATTERN>;
v7 = virtualinvoke v6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v8 = virtualinvoke v7.<java.util.regex.Matcher: boolean matches()>();
if v8 == 0 goto label4;
v9 = virtualinvoke v7.<java.util.regex.Matcher: java.lang.String group(int)>(2);
v10 = staticinvoke <org.apache.commons.lang3.time.FastTimeZone: int parseInt(java.lang.String)>(v9);
v11 = virtualinvoke v7.<java.util.regex.Matcher: java.lang.String group(int)>(4);
v12 = staticinvoke <org.apache.commons.lang3.time.FastTimeZone: int parseInt(java.lang.String)>(v11);
if v10 != 0 goto label3;
if v12 != 0 goto label3;
v13 = <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone GREENWICH>;
return v13;
label3:
v14 = new org.apache.commons.lang3.time.GmtTimeZone;
v15 = virtualinvoke v7.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v16 = staticinvoke <org.apache.commons.lang3.time.FastTimeZone: boolean parseSign(java.lang.String)>(v15);
specialinvoke v14.<org.apache.commons.lang3.time.GmtTimeZone: void <init>(boolean,int,int)>(v16, v10, v12);
return v14;
label4:
return null;
}
public static java.util.TimeZone getTimeZone(java.lang.String)
{
java.lang.String v0;
java.util.TimeZone v1, v2;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone getGmtTimeZone(java.lang.String)>(v0);
if v1 == null goto label1;
return v1;
label1:
v2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(v0);
return v2;
}
private static int parseInt(java.lang.String)
{
int v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
private static boolean parseSign(java.lang.String)
{
char v1;
java.lang.String v0;
boolean v2;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v1 != 45 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
private void <init>()
{
org.apache.commons.lang3.time.FastTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.FastTimeZone;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.regex.Pattern v0;
org.apache.commons.lang3.time.GmtTimeZone v1;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(?:(?i)GMT)?([+-])?(\\d\\d?)?(:?(\\d\\d?))?$");
<org.apache.commons.lang3.time.FastTimeZone: java.util.regex.Pattern GMT_PATTERN> = v0;
v1 = new org.apache.commons.lang3.time.GmtTimeZone;
specialinvoke v1.<org.apache.commons.lang3.time.GmtTimeZone: void <init>(boolean,int,int)>(0, 0, 0);
<org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone GREENWICH> = v1;
return;
}
}