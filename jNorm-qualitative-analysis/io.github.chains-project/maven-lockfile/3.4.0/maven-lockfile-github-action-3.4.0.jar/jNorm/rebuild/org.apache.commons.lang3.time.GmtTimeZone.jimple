class org.apache.commons.lang3.time.GmtTimeZone extends java.util.TimeZone
{
private static final int MILLISECONDS_PER_MINUTE;
private static final int MINUTES_PER_HOUR;
private static final int HOURS_PER_DAY;
static final long serialVersionUID;
private final int offset;
private final java.lang.String zoneId;
void <init>(boolean, int, int)
{
org.apache.commons.lang3.time.GmtTimeZone v0;
int v10, v11, v12, v2, v3, v8, v9;
java.lang.String v20, v5, v7;
boolean v1;
char v15;
java.lang.IllegalArgumentException v4, v6;
java.lang.StringBuilder v13, v14, v16, v17, v18, v19;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.util.TimeZone: void <init>()>();
if v2 < 24 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 hours out of range");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
if v3 < 60 goto label2;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 minutes out of range");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
label2:
v8 = v2 * 60;
v9 = v3 + v8;
v10 = (int) 60000;
v11 = v9 * v10;
if v1 == 0 goto label3;
v12 = neg v11;
goto label4;
label3:
v12 = v11;
label4:
v0.<org.apache.commons.lang3.time.GmtTimeZone: int offset> = v12;
v13 = new java.lang.StringBuilder;
specialinvoke v13.<java.lang.StringBuilder: void <init>(int)>(9);
v14 = virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");
if v1 == 0 goto label5;
v15 = 45;
goto label6;
label5:
v15 = 43;
label6:
v16 = virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v15);
v17 = staticinvoke <org.apache.commons.lang3.time.GmtTimeZone: java.lang.StringBuilder twoDigits(java.lang.StringBuilder,int)>(v16, v2);
v18 = virtualinvoke v17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
v19 = staticinvoke <org.apache.commons.lang3.time.GmtTimeZone: java.lang.StringBuilder twoDigits(java.lang.StringBuilder,int)>(v18, v3);
v20 = virtualinvoke v19.<java.lang.StringBuilder: java.lang.String toString()>();
v0.<org.apache.commons.lang3.time.GmtTimeZone: java.lang.String zoneId> = v20;
return;
}
private static java.lang.StringBuilder twoDigits(java.lang.StringBuilder, int)
{
int v1, v2, v3, v5, v6;
java.lang.StringBuilder v0, v4, v7;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: int;
v2 = v1 / 10;
v3 = 48 + v2;
v4 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v3);
v5 = v1 % 10;
v6 = 48 + v5;
v7 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v6);
return v7;
}
public int getOffset(int, int, int, int, int, int)
{
org.apache.commons.lang3.time.GmtTimeZone v0;
int v1, v2, v3, v4, v5, v6, v7;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 = v0.<org.apache.commons.lang3.time.GmtTimeZone: int offset>;
return v7;
}
public void setRawOffset(int)
{
int v1;
java.lang.UnsupportedOperationException v2;
org.apache.commons.lang3.time.GmtTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public int getRawOffset()
{
int v1;
org.apache.commons.lang3.time.GmtTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 = v0.<org.apache.commons.lang3.time.GmtTimeZone: int offset>;
return v1;
}
public java.lang.String getID()
{
java.lang.String v1;
org.apache.commons.lang3.time.GmtTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 = v0.<org.apache.commons.lang3.time.GmtTimeZone: java.lang.String zoneId>;
return v1;
}
public boolean useDaylightTime()
{
org.apache.commons.lang3.time.GmtTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
return 0;
}
public boolean inDaylightTime(java.util.Date)
{
org.apache.commons.lang3.time.GmtTimeZone v0;
java.util.Date v1;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 := @parameter0: java.util.Date;
return 0;
}
public java.lang.String toString()
{
int v2;
java.lang.String v1, v3;
org.apache.commons.lang3.time.GmtTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 = v0.<org.apache.commons.lang3.time.GmtTimeZone: java.lang.String zoneId>;
v2 = v0.<org.apache.commons.lang3.time.GmtTimeZone: int offset>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[GmtTimeZone id=\"\u0001\",offset=\u0001]");
return v3;
}
public int hashCode()
{
int v1;
org.apache.commons.lang3.time.GmtTimeZone v0;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 = v0.<org.apache.commons.lang3.time.GmtTimeZone: int offset>;
return v1;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
java.lang.String v3, v4;
org.apache.commons.lang3.time.GmtTimeZone v0;
boolean v2, v5;
v0 := @this: org.apache.commons.lang3.time.GmtTimeZone;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof org.apache.commons.lang3.time.GmtTimeZone;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v0.<org.apache.commons.lang3.time.GmtTimeZone: java.lang.String zoneId>;
v4 = v1.<org.apache.commons.lang3.time.GmtTimeZone: java.lang.String zoneId>;
if v3 != v4 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
}