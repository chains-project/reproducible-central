public interface  org.eclipse.microprofile.context.ThreadContext extends java.lang.Object
{
public static final java.lang.String ALL_REMAINING;
public static final java.lang.String APPLICATION;
public static final java.lang.String CDI;
public static final java.lang.String[] NONE;
public static final java.lang.String SECURITY;
public static final java.lang.String TRANSACTION;
public static org.eclipse.microprofile.context.ThreadContext$Builder builder()
{
org.eclipse.microprofile.context.ThreadContext$Builder v2;
org.eclipse.microprofile.context.spi.ContextManager v1;
org.eclipse.microprofile.context.spi.ContextManagerProvider v0;
v0 = staticinvoke <org.eclipse.microprofile.context.spi.ContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProvider instance()>();
v1 = interfaceinvoke v0.<org.eclipse.microprofile.context.spi.ContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManager getContextManager()>();
v2 = interfaceinvoke v1.<org.eclipse.microprofile.context.spi.ContextManager: org.eclipse.microprofile.context.ThreadContext$Builder newThreadContextBuilder()>();
return v2;
}
public abstract java.util.concurrent.Executor currentContextExecutor();
public abstract java.util.concurrent.Callable contextualCallable(java.util.concurrent.Callable);
public abstract java.util.function.BiConsumer contextualConsumer(java.util.function.BiConsumer);
public abstract java.util.function.Consumer contextualConsumer(java.util.function.Consumer);
public abstract java.util.function.BiFunction contextualFunction(java.util.function.BiFunction);
public abstract java.util.function.Function contextualFunction(java.util.function.Function);
public abstract java.lang.Runnable contextualRunnable(java.lang.Runnable);
public abstract java.util.function.Supplier contextualSupplier(java.util.function.Supplier);
public abstract java.util.concurrent.CompletableFuture withContextCapture(java.util.concurrent.CompletableFuture);
public abstract java.util.concurrent.CompletionStage withContextCapture(java.util.concurrent.CompletionStage);
static void <clinit>()
{
java.lang.String[] v0;
v0 = newarray (java.lang.String)[0];
<org.eclipse.microprofile.context.ThreadContext: java.lang.String[] NONE> = v0;
return;
}
}