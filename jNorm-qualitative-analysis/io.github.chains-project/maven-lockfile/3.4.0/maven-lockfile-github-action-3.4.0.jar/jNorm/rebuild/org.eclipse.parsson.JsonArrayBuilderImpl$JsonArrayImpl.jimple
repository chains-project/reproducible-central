final class org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl extends java.util.AbstractList implements jakarta.json.JsonArray
{
private final java.util.List valueList;
private final org.eclipse.parsson.api.BufferPool bufferPool;
private int hashCode;
void <init>(java.util.List, org.eclipse.parsson.api.BufferPool)
{
java.util.List v1;
org.eclipse.parsson.api.BufferPool v2;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: java.util.List;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.util.AbstractList: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList> = v1;
v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v2;
return;
}
public int size()
{
int v2;
java.util.List v1;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public jakarta.json.JsonObject getJsonObject(int)
{
java.util.List v2;
int v1;
java.lang.Object v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public jakarta.json.JsonArray getJsonArray(int)
{
java.util.List v2;
int v1;
java.lang.Object v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public jakarta.json.JsonNumber getJsonNumber(int)
{
java.util.List v2;
int v1;
java.lang.Object v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public jakarta.json.JsonString getJsonString(int)
{
java.util.List v2;
int v1;
java.lang.Object v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public java.util.List getValuesAs(java.lang.Class)
{
java.lang.Class v1;
java.util.List v2;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: java.lang.Class;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
return v2;
}
public java.lang.String getString(int)
{
int v1;
java.lang.String v3;
jakarta.json.JsonString v2;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: jakarta.json.JsonString getJsonString(int)>(v1);
v3 = interfaceinvoke v2.<jakarta.json.JsonString: java.lang.String getString()>();
return v3;
}
public java.lang.String getString(int, java.lang.String)
{
int v1;
java.lang.String v2, v3;
java.lang.Exception v4;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
label1:
v3 = virtualinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.lang.String getString(int)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
return v2;
catch java.lang.Exception from label1 to label2 with label3;
}
public int getInt(int)
{
int v1, v3;
jakarta.json.JsonNumber v2;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: jakarta.json.JsonNumber getJsonNumber(int)>(v1);
v3 = interfaceinvoke v2.<jakarta.json.JsonNumber: int intValue()>();
return v3;
}
public int getInt(int, int)
{
int v1, v2, v3;
java.lang.Exception v4;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 := @parameter1: int;
label1:
v3 = virtualinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: int getInt(int)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
return v2;
catch java.lang.Exception from label1 to label2 with label3;
}
public boolean getBoolean(int)
{
jakarta.json.JsonValue v2, v3, v4;
int v1;
java.lang.ClassCastException v5;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: jakarta.json.JsonValue get(int)>(v1);
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
if v2 != v3 goto label1;
return 1;
label1:
v4 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
if v2 != v4 goto label2;
return 0;
label2:
v5 = new java.lang.ClassCastException;
specialinvoke v5.<java.lang.ClassCastException: void <init>()>();
throw v5;
}
public boolean getBoolean(int, boolean)
{
int v1;
java.lang.Exception v4;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
boolean v2, v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
label1:
v3 = virtualinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: boolean getBoolean(int)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
return v2;
catch java.lang.Exception from label1 to label2 with label3;
}
public boolean isNull(int)
{
java.util.List v2;
jakarta.json.JsonValue v4;
int v1;
java.lang.Object v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
boolean v5;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
v4 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
v5 = virtualinvoke v3.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
return v5;
}
public jakarta.json.JsonValue$ValueType getValueType()
{
jakarta.json.JsonValue$ValueType v1;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType ARRAY>;
return v1;
}
public jakarta.json.JsonValue get(int)
{
java.util.List v2;
int v1;
java.lang.Object v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: java.util.List valueList>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public int hashCode()
{
int v1, v2, v3;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: int hashCode>;
if v1 != 0 goto label1;
v2 = specialinvoke v0.<java.util.AbstractList: int hashCode()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: int hashCode> = v2;
label1:
v3 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: int hashCode>;
return v3;
}
public java.lang.String toString()
{
java.lang.Throwable v4;
java.io.StringWriter v1;
java.lang.String v5;
org.eclipse.parsson.api.BufferPool v3;
org.eclipse.parsson.JsonWriterImpl v2;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v1 = new java.io.StringWriter;
specialinvoke v1.<java.io.StringWriter: void <init>()>();
v2 = new org.eclipse.parsson.JsonWriterImpl;
v3 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v2.<org.eclipse.parsson.JsonWriterImpl: void <init>(java.io.Writer,org.eclipse.parsson.api.BufferPool)>(v1, v3);
label1:
interfaceinvoke v2.<jakarta.json.JsonWriter: void write(jakarta.json.JsonStructure)>(v0);
label2:
interfaceinvoke v2.<jakarta.json.JsonWriter: void close()>();
goto label4;
label3:
v4 := @caughtexception;
throw v4;
label4:
v5 = virtualinvoke v1.<java.io.StringWriter: java.lang.String toString()>();
return v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public jakarta.json.JsonArray asJsonArray()
{
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v0;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
return v0;
}
}