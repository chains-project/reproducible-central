public final class org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588 extends java.lang.Object implements java.util.function.BiConsumer
{
jakarta.json.JsonObject cap0;
jakarta.json.JsonObjectBuilder cap1;
public static java.util.function.BiConsumer bootstrap$(jakarta.json.JsonObject, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObject v0;
jakarta.json.JsonObjectBuilder v1;
org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588 v2;
v0 := @parameter0: jakarta.json.JsonObject;
v1 := @parameter1: jakarta.json.JsonObjectBuilder;
v2 = new org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588;
specialinvoke v2.<org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588: void <init>(jakarta.json.JsonObject,jakarta.json.JsonObjectBuilder)>(v0, v1);
return v2;
}
public void <init>(jakarta.json.JsonObject, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObject v1;
jakarta.json.JsonObjectBuilder v2;
org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588 v0;
v0 := @this: org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: jakarta.json.JsonObjectBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588: jakarta.json.JsonObject cap0> = v1;
v0.<org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588: jakarta.json.JsonObjectBuilder cap1> = v2;
return;
}
public void accept(java.lang.Object, java.lang.Object)
{
jakarta.json.JsonObjectBuilder v4;
org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588 v0;
jakarta.json.JsonObject v3;
java.lang.Object v1, v2;
v0 := @this: org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588: jakarta.json.JsonObject cap0>;
v4 = v0.<org.eclipse.parsson.JsonMergePatchImpl$lambda_diff_1__588: jakarta.json.JsonObjectBuilder cap1>;
staticinvoke <org.eclipse.parsson.JsonMergePatchImpl: void lambda$diff$1(jakarta.json.JsonObject,jakarta.json.JsonObjectBuilder,java.lang.String,jakarta.json.JsonValue)>(v3, v4, v1, v2);
return;
}
}