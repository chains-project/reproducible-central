final class org.eclipse.parsson.JsonParserImpl$Stack extends java.lang.Object
{
private org.eclipse.parsson.JsonParserImpl$Context head;
private void <init>()
{
org.eclipse.parsson.JsonParserImpl$Stack v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$Stack;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private void push(org.eclipse.parsson.JsonParserImpl$Context)
{
org.eclipse.parsson.JsonParserImpl$Stack v0;
org.eclipse.parsson.JsonParserImpl$Context v1, v2;
v0 := @this: org.eclipse.parsson.JsonParserImpl$Stack;
v1 := @parameter0: org.eclipse.parsson.JsonParserImpl$Context;
v2 = v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head>;
v1.<org.eclipse.parsson.JsonParserImpl$Context: org.eclipse.parsson.JsonParserImpl$Context next> = v2;
v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head> = v1;
return;
}
private org.eclipse.parsson.JsonParserImpl$Context pop()
{
org.eclipse.parsson.JsonParserImpl$Stack v0;
org.eclipse.parsson.JsonParserImpl$Context v1, v3, v4, v5;
java.util.NoSuchElementException v2;
v0 := @this: org.eclipse.parsson.JsonParserImpl$Stack;
v1 = v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head>;
if v1 != null goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head>;
v4 = v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head>;
v5 = v4.<org.eclipse.parsson.JsonParserImpl$Context: org.eclipse.parsson.JsonParserImpl$Context next>;
v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head> = v5;
return v3;
}
private org.eclipse.parsson.JsonParserImpl$Context peek()
{
org.eclipse.parsson.JsonParserImpl$Stack v0;
org.eclipse.parsson.JsonParserImpl$Context v1;
v0 := @this: org.eclipse.parsson.JsonParserImpl$Stack;
v1 = v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head>;
return v1;
}
private boolean isEmpty()
{
org.eclipse.parsson.JsonParserImpl$Stack v0;
org.eclipse.parsson.JsonParserImpl$Context v1;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonParserImpl$Stack;
v1 = v0.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context head>;
if v1 != null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
}