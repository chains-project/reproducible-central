abstract class org.eclipse.parsson.JsonStructureParser$Scope extends java.lang.Object implements java.util.Iterator
{
private void <init>()
{
org.eclipse.parsson.JsonStructureParser$Scope v0;
v0 := @this: org.eclipse.parsson.JsonStructureParser$Scope;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
abstract jakarta.json.JsonValue getJsonValue();
static org.eclipse.parsson.JsonStructureParser$Scope createScope(jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonStructureParser$ObjectScope v4;
jakarta.json.JsonValue v0;
jakarta.json.JsonException v5;
java.lang.String v6;
org.eclipse.parsson.JsonStructureParser$ArrayScope v2;
boolean v1, v3;
v0 := @parameter0: jakarta.json.JsonValue;
v1 = v0 instanceof jakarta.json.JsonArray;
if v1 == 0 goto label1;
v2 = new org.eclipse.parsson.JsonStructureParser$ArrayScope;
specialinvoke v2.<org.eclipse.parsson.JsonStructureParser$ArrayScope: void <init>(jakarta.json.JsonArray)>(v0);
return v2;
label1:
v3 = v0 instanceof jakarta.json.JsonObject;
if v3 == 0 goto label2;
v4 = new org.eclipse.parsson.JsonStructureParser$ObjectScope;
specialinvoke v4.<org.eclipse.parsson.JsonStructureParser$ObjectScope: void <init>(jakarta.json.JsonObject)>(v0);
return v4;
label2:
v5 = new jakarta.json.JsonException;
v6 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String PARSER_SCOPE_ERR(jakarta.json.JsonValue)>(v0);
specialinvoke v5.<jakarta.json.JsonException: void <init>(java.lang.String)>(v6);
throw v5;
}
}