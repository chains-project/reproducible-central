public final class org.eclipse.parsson.JsonUtil extends java.lang.Object
{
private static org.eclipse.parsson.api.BufferPool internalPool;
private void <init>()
{
org.eclipse.parsson.JsonUtil v0;
v0 := @this: org.eclipse.parsson.JsonUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static org.eclipse.parsson.api.BufferPool getInternalBufferPool()
{
org.eclipse.parsson.api.BufferPool v0, v2;
org.eclipse.parsson.BufferPoolImpl v1;
v0 = <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool internalPool>;
if v0 != null goto label1;
v1 = new org.eclipse.parsson.BufferPoolImpl;
specialinvoke v1.<org.eclipse.parsson.BufferPoolImpl: void <init>()>();
<org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool internalPool> = v1;
label1:
v2 = <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool internalPool>;
return v2;
}
public static jakarta.json.JsonValue toJson(java.lang.String)
{
jakarta.json.JsonValue v12;
char v5;
org.eclipse.parsson.JsonReaderImpl v8;
java.io.StringReader v9;
int v3, v4, v6;
java.lang.StringBuilder v1;
java.lang.String v0, v10;
org.eclipse.parsson.api.BufferPool v11;
boolean v2, v7;
v0 := @parameter0: java.lang.String;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = 0;
v3 = 0;
label1:
v4 = virtualinvoke v0.<java.lang.String: int length()>();
if v3 >= v4 goto label7;
v5 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v3);
if v5 != 92 goto label3;
v3 = v3 + 1;
v6 = virtualinvoke v0.<java.lang.String: int length()>();
if v3 >= v6 goto label6;
v5 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v3);
if v2 == 0 goto label2;
if v5 == 39 goto label6;
label2:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
goto label6;
label3:
if v5 != 39 goto label6;
v5 = 34;
if v2 != 0 goto label4;
v7 = 1;
goto label5;
label4:
v7 = 0;
label5:
v2 = v7;
label6:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
v3 = v3 + 1;
goto label1;
label7:
v8 = new org.eclipse.parsson.JsonReaderImpl;
v9 = new java.io.StringReader;
v10 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke v9.<java.io.StringReader: void <init>(java.lang.String)>(v10);
v11 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v8.<org.eclipse.parsson.JsonReaderImpl: void <init>(java.io.Reader,org.eclipse.parsson.api.BufferPool)>(v9, v11);
v12 = interfaceinvoke v8.<jakarta.json.JsonReader: jakarta.json.JsonValue readValue()>();
interfaceinvoke v8.<jakarta.json.JsonReader: void close()>();
return v12;
}
}