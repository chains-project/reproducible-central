class org.eclipse.parsson.JsonWriterImpl$1 extends java.lang.Object
{
static final int[] $SwitchMap$jakarta$json$JsonValue$ValueType;
static void <clinit>()
{
jakarta.json.JsonValue$ValueType[] v0;
java.lang.NoSuchFieldError v10, v6;
int[] v2, v3, v7;
int v1, v5, v9;
jakarta.json.JsonValue$ValueType v4, v8;
v0 = staticinvoke <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType[] values()>();
v1 = lengthof v0;
v2 = newarray (int)[v1];
<org.eclipse.parsson.JsonWriterImpl$1: int[] $SwitchMap$jakarta$json$JsonValue$ValueType> = v2;
label1:
v3 = <org.eclipse.parsson.JsonWriterImpl$1: int[] $SwitchMap$jakarta$json$JsonValue$ValueType>;
v4 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType OBJECT>;
v5 = virtualinvoke v4.<jakarta.json.JsonValue$ValueType: int ordinal()>();
v3[v5] = 1;
label2:
goto label4;
label3:
v6 := @caughtexception;
label4:
v7 = <org.eclipse.parsson.JsonWriterImpl$1: int[] $SwitchMap$jakarta$json$JsonValue$ValueType>;
v8 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType ARRAY>;
v9 = virtualinvoke v8.<jakarta.json.JsonValue$ValueType: int ordinal()>();
v7[v9] = 2;
label5:
goto label7;
label6:
v10 := @caughtexception;
label7:
return;
catch java.lang.NoSuchFieldError from label1 to label2 with label3;
catch java.lang.NoSuchFieldError from label4 to label5 with label6;
}
}