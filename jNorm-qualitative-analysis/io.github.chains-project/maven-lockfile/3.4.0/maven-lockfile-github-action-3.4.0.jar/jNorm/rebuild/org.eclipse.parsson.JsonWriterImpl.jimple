class org.eclipse.parsson.JsonWriterImpl extends java.lang.Object implements jakarta.json.JsonWriter
{
private final org.eclipse.parsson.JsonGeneratorImpl generator;
private boolean writeDone;
private final org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os;
void <init>(java.io.Writer, org.eclipse.parsson.api.BufferPool)
{
java.io.Writer v1;
org.eclipse.parsson.api.BufferPool v2;
org.eclipse.parsson.JsonWriterImpl v0;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: java.io.Writer;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void <init>(java.io.Writer,boolean,org.eclipse.parsson.api.BufferPool)>(v1, 0, v2);
return;
}
void <init>(java.io.Writer, boolean, org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonPrettyGeneratorImpl v4;
java.io.Writer v1;
org.eclipse.parsson.JsonGeneratorImpl v5, v6;
org.eclipse.parsson.api.BufferPool v3;
org.eclipse.parsson.JsonWriterImpl v0;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: java.io.Writer;
v2 := @parameter1: boolean;
v3 := @parameter2: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v2 == 0 goto label1;
v4 = new org.eclipse.parsson.JsonPrettyGeneratorImpl;
v5 = v4;
specialinvoke v4.<org.eclipse.parsson.JsonPrettyGeneratorImpl: void <init>(java.io.Writer,org.eclipse.parsson.api.BufferPool)>(v1, v3);
goto label2;
label1:
v6 = new org.eclipse.parsson.JsonGeneratorImpl;
v5 = v6;
specialinvoke v6.<org.eclipse.parsson.JsonGeneratorImpl: void <init>(java.io.Writer,org.eclipse.parsson.api.BufferPool)>(v1, v3);
label2:
v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator> = v5;
v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os> = null;
return;
}
void <init>(java.io.OutputStream, org.eclipse.parsson.api.BufferPool)
{
java.io.OutputStream v1;
java.nio.charset.Charset v3;
org.eclipse.parsson.api.BufferPool v2;
org.eclipse.parsson.JsonWriterImpl v0;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
v3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void <init>(java.io.OutputStream,java.nio.charset.Charset,boolean,org.eclipse.parsson.api.BufferPool)>(v1, v3, 0, v2);
return;
}
void <init>(java.io.OutputStream, boolean, org.eclipse.parsson.api.BufferPool)
{
java.io.OutputStream v1;
java.nio.charset.Charset v4;
org.eclipse.parsson.api.BufferPool v3;
org.eclipse.parsson.JsonWriterImpl v0;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: boolean;
v3 := @parameter2: org.eclipse.parsson.api.BufferPool;
v4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void <init>(java.io.OutputStream,java.nio.charset.Charset,boolean,org.eclipse.parsson.api.BufferPool)>(v1, v4, v2, v3);
return;
}
void <init>(java.io.OutputStream, java.nio.charset.Charset, boolean, org.eclipse.parsson.api.BufferPool)
{
java.io.OutputStream v1;
org.eclipse.parsson.JsonPrettyGeneratorImpl v6;
org.eclipse.parsson.JsonGeneratorImpl v7, v9;
org.eclipse.parsson.JsonWriterImpl v0;
java.nio.charset.Charset v2;
org.eclipse.parsson.api.BufferPool v4;
boolean v3;
org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream v10, v5, v8;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: java.nio.charset.Charset;
v3 := @parameter2: boolean;
v4 := @parameter3: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = new org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream;
specialinvoke v5.<org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream: void <init>(java.io.OutputStream)>(v1);
v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os> = v5;
if v3 == 0 goto label1;
v6 = new org.eclipse.parsson.JsonPrettyGeneratorImpl;
v7 = v6;
v8 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os>;
specialinvoke v6.<org.eclipse.parsson.JsonPrettyGeneratorImpl: void <init>(java.io.OutputStream,java.nio.charset.Charset,org.eclipse.parsson.api.BufferPool)>(v8, v2, v4);
goto label2;
label1:
v9 = new org.eclipse.parsson.JsonGeneratorImpl;
v7 = v9;
v10 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os>;
specialinvoke v9.<org.eclipse.parsson.JsonGeneratorImpl: void <init>(java.io.OutputStream,java.nio.charset.Charset,org.eclipse.parsson.api.BufferPool)>(v10, v2, v4);
label2:
v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator> = v7;
return;
}
public void writeArray(jakarta.json.JsonArray)
{
java.lang.IllegalStateException v3;
java.util.Iterator v6;
org.eclipse.parsson.JsonGeneratorImpl v10, v11, v13, v5, v9;
org.eclipse.parsson.JsonWriterImpl v0;
java.lang.Object v8;
java.lang.String v4;
jakarta.json.JsonArray v1;
boolean v2, v7;
org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream v12;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: jakarta.json.JsonArray;
v2 = v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone>;
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String WRITER_WRITE_ALREADY_CALLED()>();
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone> = 1;
v5 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v5.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator writeStartArray()>();
v6 = interfaceinvoke v1.<jakarta.json.JsonArray: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label3;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v9.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator write(jakarta.json.JsonValue)>(v8);
goto label2;
label3:
v10 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v10.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator writeEnd()>();
v11 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v11.<org.eclipse.parsson.JsonGeneratorImpl: void flushBuffer()>();
v12 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os>;
if v12 == null goto label4;
v13 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v13.<org.eclipse.parsson.JsonGeneratorImpl: void flush()>();
label4:
return;
}
public void writeObject(jakarta.json.JsonObject)
{
java.lang.IllegalStateException v3;
org.eclipse.parsson.JsonGeneratorImpl v10, v13, v14, v16, v5;
jakarta.json.JsonObject v1;
java.lang.String v4;
boolean v2, v8;
org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream v15;
java.util.Iterator v7;
java.util.Set v6;
org.eclipse.parsson.JsonWriterImpl v0;
java.lang.Object v11, v12, v9;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 = v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone>;
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String WRITER_WRITE_ALREADY_CALLED()>();
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone> = 1;
v5 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v5.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator writeStartObject()>();
v6 = interfaceinvoke v1.<jakarta.json.JsonObject: java.util.Set entrySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
v11 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v10.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator write(java.lang.String,jakarta.json.JsonValue)>(v11, v12);
goto label2;
label3:
v13 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v13.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator writeEnd()>();
v14 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v14.<org.eclipse.parsson.JsonGeneratorImpl: void flushBuffer()>();
v15 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os>;
if v15 == null goto label4;
v16 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v16.<org.eclipse.parsson.JsonGeneratorImpl: void flush()>();
label4:
return;
}
public void write(jakarta.json.JsonStructure)
{
jakarta.json.JsonStructure v1;
org.eclipse.parsson.JsonWriterImpl v0;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: jakarta.json.JsonStructure;
v2 = v1 instanceof jakarta.json.JsonArray;
if v2 == 0 goto label1;
virtualinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void writeArray(jakarta.json.JsonArray)>(v1);
goto label2;
label1:
virtualinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void writeObject(jakarta.json.JsonObject)>(v1);
label2:
return;
}
public void write(jakarta.json.JsonValue)
{
java.lang.IllegalStateException v7;
jakarta.json.JsonValue v1;
org.eclipse.parsson.JsonGeneratorImpl v10, v12, v9;
org.eclipse.parsson.JsonWriterImpl v0;
int[] v2;
int v4, v5;
jakarta.json.JsonValue$ValueType v3;
java.lang.String v8;
boolean v6;
org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream v11;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v1 := @parameter0: jakarta.json.JsonValue;
v2 = <org.eclipse.parsson.JsonWriterImpl$1: int[] $SwitchMap$jakarta$json$JsonValue$ValueType>;
v3 = interfaceinvoke v1.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v4 = virtualinvoke v3.<jakarta.json.JsonValue$ValueType: int ordinal()>();
v5 = v2[v4];
lookupswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
virtualinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void writeObject(jakarta.json.JsonObject)>(v1);
return;
label2:
virtualinvoke v0.<org.eclipse.parsson.JsonWriterImpl: void writeArray(jakarta.json.JsonArray)>(v1);
return;
label3:
v6 = v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone>;
if v6 == 0 goto label4;
v7 = new java.lang.IllegalStateException;
v8 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String WRITER_WRITE_ALREADY_CALLED()>();
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v8);
throw v7;
label4:
v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone> = 1;
v9 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v9.<org.eclipse.parsson.JsonGeneratorImpl: jakarta.json.stream.JsonGenerator write(jakarta.json.JsonValue)>(v1);
v10 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v10.<org.eclipse.parsson.JsonGeneratorImpl: void flushBuffer()>();
v11 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonWriterImpl$NoFlushOutputStream os>;
if v11 == null goto label5;
v12 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v12.<org.eclipse.parsson.JsonGeneratorImpl: void flush()>();
label5:
return;
}
public void close()
{
org.eclipse.parsson.JsonGeneratorImpl v1;
org.eclipse.parsson.JsonWriterImpl v0;
v0 := @this: org.eclipse.parsson.JsonWriterImpl;
v0.<org.eclipse.parsson.JsonWriterImpl: boolean writeDone> = 1;
v1 = v0.<org.eclipse.parsson.JsonWriterImpl: org.eclipse.parsson.JsonGeneratorImpl generator>;
virtualinvoke v1.<org.eclipse.parsson.JsonGeneratorImpl: void close()>();
return;
}
}