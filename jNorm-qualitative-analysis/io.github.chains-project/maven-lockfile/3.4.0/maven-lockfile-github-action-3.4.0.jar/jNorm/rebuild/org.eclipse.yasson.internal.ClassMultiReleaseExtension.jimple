public class org.eclipse.yasson.internal.ClassMultiReleaseExtension extends java.lang.Object
{
private void <init>()
{
org.eclipse.yasson.internal.ClassMultiReleaseExtension v0;
java.lang.IllegalStateException v1;
v0 := @this: org.eclipse.yasson.internal.ClassMultiReleaseExtension;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This class cannot be instantiated");
throw v1;
}
static boolean shouldTransformToPropertyName(java.lang.reflect.Method)
{
java.lang.reflect.Method v0;
v0 := @parameter0: java.lang.reflect.Method;
return 1;
}
static boolean isSpecialAccessorMethod(java.lang.reflect.Method, java.util.Map)
{
java.lang.reflect.Method v0;
java.util.Map v1;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: java.util.Map;
return 0;
}
static org.eclipse.yasson.internal.model.JsonbCreator findCreator(java.lang.Class, java.lang.reflect.Constructor[], org.eclipse.yasson.internal.AnnotationIntrospector, jakarta.json.bind.config.PropertyNamingStrategy)
{
java.lang.reflect.Constructor[] v1;
java.lang.Class v0;
jakarta.json.bind.config.PropertyNamingStrategy v3;
org.eclipse.yasson.internal.AnnotationIntrospector v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.reflect.Constructor[];
v2 := @parameter2: org.eclipse.yasson.internal.AnnotationIntrospector;
v3 := @parameter3: jakarta.json.bind.config.PropertyNamingStrategy;
return null;
}
public static boolean isRecord(java.lang.Class)
{
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
return 0;
}
public static java.util.Optional exceptionToThrow(java.lang.Class)
{
java.util.Optional v1;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v1;
}
}