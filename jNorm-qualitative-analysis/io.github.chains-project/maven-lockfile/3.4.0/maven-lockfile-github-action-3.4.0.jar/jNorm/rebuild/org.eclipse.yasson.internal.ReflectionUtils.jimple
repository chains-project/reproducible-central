public class org.eclipse.yasson.internal.ReflectionUtils extends java.lang.Object
{
private static final java.util.logging.Logger LOGGER;
private void <init>()
{
java.lang.IllegalStateException v1;
org.eclipse.yasson.internal.ReflectionUtils v0;
v0 := @this: org.eclipse.yasson.internal.ReflectionUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Utility classes should not be instantiated.");
throw v1;
}
public static java.util.Optional getOptionalRawType(java.lang.reflect.Type)
{
int v16, v17;
boolean v1, v13, v20, v23, v24, v27, v3, v6, v9;
java.lang.reflect.Type v0, v18, v4;
java.lang.reflect.Type[] v12, v15;
java.util.Optional v14, v19, v2, v29, v5, v8;
java.lang.Class v10, v21, v7;
java.lang.Object v11, v22, v25, v26, v28;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.Class;
if v1 == 0 goto label1;
v2 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v0);
return v2;
label1:
v3 = v0 instanceof java.lang.reflect.ParameterizedType;
if v3 == 0 goto label2;
v4 = interfaceinvoke v0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v5 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v4);
return v5;
label2:
v6 = v0 instanceof java.lang.reflect.GenericArrayType;
if v6 == 0 goto label3;
v7 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v8 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v7);
return v8;
label3:
v9 = v0 instanceof java.lang.reflect.TypeVariable;
if v9 == 0 goto label8;
v10 = class "Ljava/lang/reflect/TypeVariable;";
v11 = virtualinvoke v10.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v0);
v12 = interfaceinvoke v11.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
v13 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(v12);
if v13 == 0 goto label8;
v14 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
v15 = interfaceinvoke v11.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
v16 = lengthof v15;
v17 = 0;
label4:
if v17 >= v16 goto label7;
v18 = v15[v17];
v19 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.util.Optional getOptionalRawType(java.lang.reflect.Type)>(v18);
v20 = virtualinvoke v19.<java.util.Optional: boolean isPresent()>();
if v20 == 0 goto label6;
v21 = class "Ljava/lang/Object;";
v22 = virtualinvoke v19.<java.util.Optional: java.lang.Object get()>();
v23 = virtualinvoke v21.<java.lang.Object: boolean equals(java.lang.Object)>(v22);
if v23 != 0 goto label6;
v24 = virtualinvoke v14.<java.util.Optional: boolean isPresent()>();
if v24 == 0 goto label5;
v25 = virtualinvoke v14.<java.util.Optional: java.lang.Object get()>();
v26 = virtualinvoke v19.<java.util.Optional: java.lang.Object get()>();
v27 = virtualinvoke v25.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v26);
if v27 == 0 goto label6;
label5:
v28 = virtualinvoke v19.<java.util.Optional: java.lang.Object get()>();
v14 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v28);
label6:
v17 = v17 + 1;
goto label4;
label7:
return v14;
label8:
v29 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v29;
}
public static java.lang.Class getRawType(java.lang.reflect.Type)
{
java.lang.reflect.Type v0;
java.util.Optional v1;
java.lang.Object v3;
java.util.function.Supplier v2;
v0 := @parameter0: java.lang.reflect.Type;
v1 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.util.Optional getOptionalRawType(java.lang.reflect.Type)>(v0);
v2 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils$lambda_getRawType_0__333: java.util.function.Supplier bootstrap$(java.lang.reflect.Type)>(v0);
v3 = virtualinvoke v1.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>(v2);
return v3;
}
public static java.lang.Class resolveRawType(java.util.List, java.lang.reflect.Type)
{
java.util.List v0;
java.lang.reflect.Type v1, v4, v5;
java.lang.Class v6;
boolean v2, v3;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.reflect.Type;
v2 = v1 instanceof java.lang.Class;
if v2 == 0 goto label1;
return v1;
label1:
v3 = v1 instanceof java.lang.reflect.ParameterizedType;
if v3 == 0 goto label2;
v4 = interfaceinvoke v1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
return v4;
label2:
v5 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveType(java.util.List,java.lang.reflect.Type)>(v0, v1);
v6 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.Class getRawType(java.lang.reflect.Type)>(v5);
return v6;
}
public static java.lang.reflect.Type resolveType(java.util.List, java.lang.reflect.Type)
{
java.util.List v0;
java.lang.reflect.Type v1, v2;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.reflect.Type;
v2 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveType(java.util.List,java.lang.reflect.Type,boolean)>(v0, v1, 1);
return v2;
}
private static java.lang.reflect.Type resolveType(java.util.List, java.lang.reflect.Type, boolean)
{
int v12, v13;
boolean v11, v2, v3, v7, v9;
java.util.List v0;
org.eclipse.yasson.internal.ReflectionUtils$GenericArrayTypeImpl v6;
java.lang.reflect.Type v1, v10, v15, v4, v5, v8;
java.lang.Object v14;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.reflect.Type;
v2 := @parameter2: boolean;
v3 = v1 instanceof java.lang.reflect.GenericArrayType;
if v3 == 0 goto label1;
v4 = interfaceinvoke v1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
v5 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveType(java.util.List,java.lang.reflect.Type)>(v0, v4);
v6 = new org.eclipse.yasson.internal.ReflectionUtils$GenericArrayTypeImpl;
specialinvoke v6.<org.eclipse.yasson.internal.ReflectionUtils$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>(v5);
return v6;
label1:
v7 = v1 instanceof java.lang.reflect.WildcardType;
if v7 == 0 goto label2;
v8 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveMostSpecificBound(java.util.List,java.lang.reflect.WildcardType,boolean)>(v0, v1, v2);
return v8;
label2:
v9 = v1 instanceof java.lang.reflect.TypeVariable;
if v9 == 0 goto label3;
v10 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveItemVariableType(java.util.List,java.lang.reflect.TypeVariable,boolean)>(v0, v1, v2);
return v10;
label3:
v11 = v1 instanceof java.lang.reflect.ParameterizedType;
if v11 == 0 goto label4;
v12 = interfaceinvoke v0.<java.util.List: int size()>();
v13 = v12 - 1;
v14 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(v13);
v15 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveTypeArguments(java.lang.reflect.ParameterizedType,java.lang.reflect.Type)>(v1, v14);
return v15;
label4:
return v1;
}
public static java.util.Optional resolveOptionalType(java.util.List, java.lang.reflect.Type)
{
java.util.List v0;
java.lang.reflect.Type v1, v2;
java.util.Optional v3, v5;
java.lang.RuntimeException v4;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.reflect.Type;
label1:
v2 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveType(java.util.List,java.lang.reflect.Type,boolean)>(v0, v1, 0);
v3 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v5;
catch java.lang.RuntimeException from label1 to label2 with label3;
}
public static java.lang.reflect.Type resolveItemVariableType(java.util.List, java.lang.reflect.TypeVariable, boolean)
{
org.eclipse.yasson.internal.VariableTypeInheritanceSearch v7;
java.lang.reflect.TypeVariable v1;
java.util.List v0;
java.lang.reflect.Type v3, v8;
int v4, v5;
java.lang.Object v6;
boolean v10, v2, v9;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.reflect.TypeVariable;
v2 := @parameter2: boolean;
v3 = v1;
v4 = interfaceinvoke v0.<java.util.List: int size()>();
v5 = v4 - 1;
label1:
if v5 < 0 goto label3;
v6 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(v5);
v7 = new org.eclipse.yasson.internal.VariableTypeInheritanceSearch;
specialinvoke v7.<org.eclipse.yasson.internal.VariableTypeInheritanceSearch: void <init>()>();
v8 = virtualinvoke v7.<org.eclipse.yasson.internal.VariableTypeInheritanceSearch: java.lang.reflect.Type searchParametrizedType(java.lang.reflect.Type,java.lang.reflect.TypeVariable)>(v6, v3);
if v8 == null goto label2;
v3 = v8;
label2:
v9 = v3 instanceof java.lang.reflect.TypeVariable;
if v9 == 0 goto label3;
v5 = v5 - 1;
goto label1;
label3:
v10 = v3 instanceof java.lang.reflect.TypeVariable;
if v10 == 0 goto label4;
return class "Ljava/lang/Object;";
label4:
return v3;
}
public static java.lang.reflect.Type resolveTypeArguments(java.lang.reflect.ParameterizedType, java.lang.reflect.Type)
{
java.lang.IllegalStateException v16;
java.lang.Object[] v18;
org.eclipse.yasson.internal.ResolvedParameterizedType v29;
org.eclipse.yasson.internal.properties.MessageKeys v17;
int v3, v5, v6;
java.lang.String v19;
boolean v11, v15, v21, v24, v27, v8, v9;
org.eclipse.yasson.internal.VariableTypeInheritanceSearch v12;
org.eclipse.yasson.internal.ReflectionUtils$GenericArrayTypeImpl v25;
java.lang.reflect.ParameterizedType v0, v28;
java.lang.reflect.Type v1, v10, v13, v14, v20, v22, v23, v26, v7;
java.lang.reflect.Type[] v2, v4;
v0 := @parameter0: java.lang.reflect.ParameterizedType;
v1 := @parameter1: java.lang.reflect.Type;
v2 = interfaceinvoke v0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v3 = lengthof v2;
v4 = newarray (java.lang.reflect.Type)[v3];
v5 = 0;
label01:
v6 = lengthof v2;
if v5 >= v6 goto label08;
v7 = v2[v5];
v8 = v7 instanceof java.lang.reflect.TypeVariable;
if v8 != 0 goto label02;
v9 = v7 instanceof java.lang.reflect.GenericArrayType;
if v9 != 0 goto label02;
v4[v5] = v7;
goto label05;
label02:
v10 = v7;
v11 = v7 instanceof java.lang.reflect.GenericArrayType;
if v11 == 0 goto label03;
v10 = interfaceinvoke v7.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();
label03:
v12 = new org.eclipse.yasson.internal.VariableTypeInheritanceSearch;
specialinvoke v12.<org.eclipse.yasson.internal.VariableTypeInheritanceSearch: void <init>()>();
v13 = virtualinvoke v12.<org.eclipse.yasson.internal.VariableTypeInheritanceSearch: java.lang.reflect.Type searchParametrizedType(java.lang.reflect.Type,java.lang.reflect.TypeVariable)>(v1, v10);
v4[v5] = v13;
v14 = v4[v5];
if v14 != null goto label05;
v15 = v1 instanceof java.lang.Class;
if v15 == 0 goto label04;
return class "Ljava/lang/Object;";
label04:
v16 = new java.lang.IllegalStateException;
v17 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys GENERIC_BOUND_NOT_FOUND>;
v18 = newarray (java.lang.Object)[2];
v18[0] = v10;
v18[1] = v1;
v19 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v17, v18);
specialinvoke v16.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v19);
throw v16;
label05:
v20 = v4[v5];
v21 = v20 instanceof java.lang.reflect.ParameterizedType;
if v21 == 0 goto label06;
v22 = v4[v5];
v23 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveTypeArguments(java.lang.reflect.ParameterizedType,java.lang.reflect.Type)>(v22, v1);
v4[v5] = v23;
goto label07;
label06:
v24 = v7 instanceof java.lang.reflect.GenericArrayType;
if v24 == 0 goto label07;
v25 = new org.eclipse.yasson.internal.ReflectionUtils$GenericArrayTypeImpl;
v26 = v4[v5];
specialinvoke v25.<org.eclipse.yasson.internal.ReflectionUtils$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>(v26);
v4[v5] = v25;
label07:
v5 = v5 + 1;
goto label01;
label08:
v27 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(v4, v2);
if v27 == 0 goto label09;
v28 = v0;
goto label10;
label09:
v29 = new org.eclipse.yasson.internal.ResolvedParameterizedType;
v28 = v29;
specialinvoke v29.<org.eclipse.yasson.internal.ResolvedParameterizedType: void <init>(java.lang.reflect.ParameterizedType,java.lang.reflect.Type[])>(v0, v4);
label10:
return v28;
}
public static java.lang.Object createNoArgConstructorInstance(java.lang.reflect.Constructor)
{
java.lang.Object[] v1;
jakarta.json.bind.JsonbException v4;
java.lang.Object v2;
java.lang.ReflectiveOperationException v3;
java.lang.reflect.Constructor v0;
v0 := @parameter0: java.lang.reflect.Constructor;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
label1:
v1 = newarray (java.lang.Object)[0];
v2 = virtualinvoke v0.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v1);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = new jakarta.json.bind.JsonbException;
specialinvoke v4.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t create instance", v3);
throw v4;
catch java.lang.InstantiationException from label1 to label2 with label3;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
}
public static java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class, boolean)
{
java.lang.Class v0;
java.lang.Object v3;
java.security.PrivilegedAction v2;
boolean v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: boolean;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils$lambda_getDefaultConstructor_1__334: java.security.PrivilegedAction bootstrap$(java.lang.Class,boolean)>(v0, v1);
v3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v2);
return v3;
}
public static java.lang.reflect.ParameterizedType findParameterizedType(java.lang.Class, java.lang.Class)
{
java.lang.Object[] v13;
org.eclipse.yasson.internal.properties.MessageKeys v12;
java.lang.reflect.Type v6, v8;
int v4, v5;
java.lang.reflect.Type[] v3;
jakarta.json.bind.JsonbException v11;
java.lang.Class v0, v1, v2, v9;
java.lang.String v14;
boolean v10, v7;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class;
v2 = v0;
label1:
if v2 == class "Ljava/lang/Object;" goto label5;
v3 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();
v4 = lengthof v3;
v5 = 0;
label2:
if v5 >= v4 goto label4;
v6 = v3[v5];
v7 = v6 instanceof java.lang.reflect.ParameterizedType;
if v7 == 0 goto label3;
v8 = interfaceinvoke v6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v9 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.Class getRawType(java.lang.reflect.Type)>(v8);
v10 = virtualinvoke v1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v9);
if v10 == 0 goto label3;
return v6;
label3:
v5 = v5 + 1;
goto label2;
label4:
v2 = virtualinvoke v2.<java.lang.Class: java.lang.Class getSuperclass()>();
goto label1;
label5:
v11 = new jakarta.json.bind.JsonbException;
v12 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys NON_PARAMETRIZED_TYPE>;
v13 = newarray (java.lang.Object)[1];
v13[0] = v1;
v14 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v12, v13);
specialinvoke v11.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v14);
throw v11;
}
public static boolean isResolvedType(java.lang.reflect.Type)
{
java.lang.reflect.Type v0, v5;
int v3, v4;
java.lang.reflect.Type[] v2;
boolean v1, v6, v7;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.reflect.ParameterizedType;
if v1 == 0 goto label4;
v2 = interfaceinvoke v0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: boolean isResolvedType(java.lang.reflect.Type)>(v5);
if v6 != 0 goto label2;
return 0;
label2:
v4 = v4 + 1;
goto label1;
label3:
return 1;
label4:
v7 = v0 instanceof java.lang.Class;
return v7;
}
private static java.lang.reflect.ParameterizedType findParameterizedSuperclass(java.lang.reflect.Type)
{
java.lang.reflect.ParameterizedType v6;
java.lang.reflect.Type v0, v5;
jakarta.json.bind.JsonbException v3;
java.lang.String v4;
boolean v1, v2;
v0 := @parameter0: java.lang.reflect.Type;
if v0 == null goto label1;
v1 = v0 instanceof java.lang.reflect.ParameterizedType;
if v1 == 0 goto label2;
label1:
return v0;
label2:
v2 = v0 instanceof java.lang.Class;
if v2 != 0 goto label3;
v3 = new jakarta.json.bind.JsonbException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Type)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Can\'t resolve ParameterizedType superclass for: \u0001");
specialinvoke v3.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v4);
throw v3;
label3:
v5 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();
v6 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.ParameterizedType findParameterizedSuperclass(java.lang.reflect.Type)>(v5);
return v6;
}
private static java.lang.reflect.Type resolveMostSpecificBound(java.util.List, java.lang.reflect.WildcardType, boolean)
{
java.lang.reflect.WildcardType v1;
java.util.List v0;
java.lang.reflect.Type v11, v7;
int v10, v5, v6, v9;
java.lang.reflect.Type[] v4, v8;
java.lang.Class v3;
boolean v2;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.reflect.WildcardType;
v2 := @parameter2: boolean;
v3 = class "Ljava/lang/Object;";
v4 = interfaceinvoke v1.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
v3 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.Class getMostSpecificBound(java.util.List,java.lang.Class,java.lang.reflect.Type,boolean)>(v0, v3, v7, v2);
v6 = v6 + 1;
goto label1;
label2:
v8 = interfaceinvoke v1.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();
v9 = lengthof v8;
v10 = 0;
label3:
if v10 >= v9 goto label4;
v11 = v8[v10];
v3 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.Class getMostSpecificBound(java.util.List,java.lang.Class,java.lang.reflect.Type,boolean)>(v0, v3, v11, v2);
v10 = v10 + 1;
goto label3;
label4:
return v3;
}
private static java.lang.Class getMostSpecificBound(java.util.List, java.lang.Class, java.lang.reflect.Type, boolean)
{
java.util.List v0;
java.lang.reflect.Type v2, v5;
java.lang.Class v1, v6;
boolean v3, v4, v7;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.lang.reflect.Type;
v3 := @parameter3: boolean;
if v2 != class "Ljava/lang/Object;" goto label1;
return v1;
label1:
v4 = v2 instanceof java.lang.reflect.TypeVariable;
if v4 == 0 goto label2;
v5 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.reflect.Type resolveType(java.util.List,java.lang.reflect.Type,boolean)>(v0, v2, v3);
goto label3;
label2:
v5 = v2;
label3:
v6 = staticinvoke <org.eclipse.yasson.internal.ReflectionUtils: java.lang.Class getRawType(java.lang.reflect.Type)>(v5);
v7 = virtualinvoke v1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v7 == 0 goto label4;
v1 = v6;
label4:
return v1;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lorg/eclipse/yasson/internal/ReflectionUtils;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<org.eclipse.yasson.internal.ReflectionUtils: java.util.logging.Logger LOGGER> = v2;
return;
}
}