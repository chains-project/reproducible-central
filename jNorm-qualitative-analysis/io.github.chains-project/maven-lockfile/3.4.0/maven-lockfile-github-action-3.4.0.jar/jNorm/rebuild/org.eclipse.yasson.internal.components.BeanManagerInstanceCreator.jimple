public class org.eclipse.yasson.internal.components.BeanManagerInstanceCreator extends java.lang.Object implements org.eclipse.yasson.spi.JsonbComponentInstanceCreator
{
private final jakarta.enterprise.inject.spi.BeanManager beanManager;
private final java.util.concurrent.ConcurrentMap injectionTargets;
public void <init>(java.lang.Object)
{
java.lang.Object[] v6;
java.util.concurrent.ConcurrentHashMap v2;
org.eclipse.yasson.internal.properties.MessageKeys v5;
jakarta.json.bind.JsonbException v4;
java.lang.Object v1;
java.lang.String v7, v8;
org.eclipse.yasson.internal.components.BeanManagerInstanceCreator v0;
boolean v3;
v0 := @this: org.eclipse.yasson.internal.components.BeanManagerInstanceCreator;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator: java.util.concurrent.ConcurrentMap injectionTargets> = v2;
v3 = v1 instanceof jakarta.enterprise.inject.spi.BeanManager;
if v3 != 0 goto label1;
v4 = new jakarta.json.bind.JsonbException;
v5 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys INTERNAL_ERROR>;
v6 = newarray (java.lang.Object)[1];
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(class "Ljakarta/enterprise/inject/spi/BeanManager;") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("beanManager instance should be of type \'\u0001\'");
v6[0] = v7;
v8 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v5, v6);
specialinvoke v4.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v8);
throw v4;
label1:
v0.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator: jakarta.enterprise.inject.spi.BeanManager beanManager> = v1;
return;
}
public java.lang.Object getOrCreateComponent(java.lang.Class)
{
java.lang.Class v1;
java.lang.Object v4, v5;
java.util.function.Function v3;
org.eclipse.yasson.internal.components.BeanManagerInstanceCreator v0;
java.util.concurrent.ConcurrentMap v2;
v0 := @this: org.eclipse.yasson.internal.components.BeanManagerInstanceCreator;
v1 := @parameter0: java.lang.Class;
v2 = v0.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator: java.util.concurrent.ConcurrentMap injectionTargets>;
v3 = staticinvoke <org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$lambda_getOrCreateComponent_0__371: java.util.function.Function bootstrap$(org.eclipse.yasson.internal.components.BeanManagerInstanceCreator,java.lang.Class)>(v0, v1);
v4 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v1, v3);
v5 = specialinvoke v4.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean: java.lang.Object getInstance()>();
return v5;
}
public void close() throws java.io.IOException
{
java.util.function.BiConsumer v2;
org.eclipse.yasson.internal.components.BeanManagerInstanceCreator v0;
java.util.concurrent.ConcurrentMap v1, v3;
v0 := @this: org.eclipse.yasson.internal.components.BeanManagerInstanceCreator;
v1 = v0.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator: java.util.concurrent.ConcurrentMap injectionTargets>;
v2 = staticinvoke <org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$lambda_close_1__372: java.util.function.BiConsumer bootstrap$(org.eclipse.yasson.internal.components.BeanManagerInstanceCreator)>(v0);
interfaceinvoke v1.<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>(v2);
v3 = v0.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator: java.util.concurrent.ConcurrentMap injectionTargets>;
interfaceinvoke v3.<java.util.concurrent.ConcurrentMap: void clear()>();
return;
}
private void cleanupBean(org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean)
{
org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean v1;
jakarta.enterprise.inject.spi.InjectionTarget v2, v4;
java.lang.Object v3, v5;
jakarta.enterprise.context.spi.CreationalContext v6;
org.eclipse.yasson.internal.components.BeanManagerInstanceCreator v0;
v0 := @this: org.eclipse.yasson.internal.components.BeanManagerInstanceCreator;
v1 := @parameter0: org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean;
v2 = specialinvoke v1.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean: jakarta.enterprise.inject.spi.InjectionTarget getInjectionTarget()>();
v3 = specialinvoke v1.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean: java.lang.Object getInstance()>();
interfaceinvoke v2.<jakarta.enterprise.inject.spi.InjectionTarget: void preDestroy(java.lang.Object)>(v3);
v4 = specialinvoke v1.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean: jakarta.enterprise.inject.spi.InjectionTarget getInjectionTarget()>();
v5 = specialinvoke v1.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean: java.lang.Object getInstance()>();
interfaceinvoke v4.<jakarta.enterprise.inject.spi.InjectionTarget: void dispose(java.lang.Object)>(v5);
v6 = specialinvoke v1.<org.eclipse.yasson.internal.components.BeanManagerInstanceCreator$CDIManagedBean: jakarta.enterprise.context.spi.CreationalContext getCreationalContext()>();
interfaceinvoke v6.<jakarta.enterprise.context.spi.CreationalContext: void release()>();
return;
}
}