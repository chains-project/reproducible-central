class org.eclipse.yasson.internal.serializer.types.LocalDateSerializer extends org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer
{
private static final java.time.format.DateTimeFormatter DEFAULT_FORMAT;
void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)
{
org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder v1;
org.eclipse.yasson.internal.serializer.types.LocalDateSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.LocalDateSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)>(v1);
return;
}
protected java.time.Instant toInstant(java.time.LocalDate)
{
java.time.LocalDate v1;
java.time.ZonedDateTime v3;
java.time.Instant v4;
java.time.ZoneId v2;
org.eclipse.yasson.internal.serializer.types.LocalDateSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.LocalDateSerializer;
v1 := @parameter0: java.time.LocalDate;
v2 = <org.eclipse.yasson.internal.serializer.types.LocalDateSerializer: java.time.ZoneId UTC>;
v3 = virtualinvoke v1.<java.time.LocalDate: java.time.ZonedDateTime atStartOfDay(java.time.ZoneId)>(v2);
v4 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(v3);
return v4;
}
protected java.lang.String formatDefault(java.time.LocalDate, java.util.Locale)
{
java.util.Locale v2;
java.time.LocalDate v1;
java.time.format.DateTimeFormatter v3, v4;
java.lang.String v5;
org.eclipse.yasson.internal.serializer.types.LocalDateSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.LocalDateSerializer;
v1 := @parameter0: java.time.LocalDate;
v2 := @parameter1: java.util.Locale;
v3 = <org.eclipse.yasson.internal.serializer.types.LocalDateSerializer: java.time.format.DateTimeFormatter DEFAULT_FORMAT>;
v4 = virtualinvoke v3.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withLocale(java.util.Locale)>(v2);
v5 = virtualinvoke v4.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v1);
return v5;
}
protected java.lang.String formatStrictIJson(java.time.LocalDate)
{
java.time.ZonedDateTime v4;
java.time.LocalDateTime v2;
java.time.ZoneId v3, v6;
java.time.LocalDate v1;
java.time.format.DateTimeFormatter v5, v7;
java.lang.String v8;
org.eclipse.yasson.internal.serializer.types.LocalDateSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.LocalDateSerializer;
v1 := @parameter0: java.time.LocalDate;
v2 = virtualinvoke v1.<java.time.LocalDate: java.time.LocalDateTime atTime(int,int,int)>(0, 0, 0);
v3 = <org.eclipse.yasson.internal.serializer.types.LocalDateSerializer: java.time.ZoneId UTC>;
v4 = virtualinvoke v2.<java.time.LocalDateTime: java.time.ZonedDateTime atZone(java.time.ZoneId)>(v3);
v5 = <org.eclipse.yasson.internal.JsonbDateFormatter: java.time.format.DateTimeFormatter IJSON_DATE_FORMATTER>;
v6 = <org.eclipse.yasson.internal.serializer.types.LocalDateSerializer: java.time.ZoneId UTC>;
v7 = virtualinvoke v5.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v6);
v8 = virtualinvoke v7.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v4);
return v8;
}
static void <clinit>()
{
java.time.ZoneId v1;
java.time.format.DateTimeFormatter v0, v2;
v0 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_LOCAL_DATE>;
v1 = <org.eclipse.yasson.internal.serializer.types.LocalDateSerializer: java.time.ZoneId UTC>;
v2 = virtualinvoke v0.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v1);
<org.eclipse.yasson.internal.serializer.types.LocalDateSerializer: java.time.format.DateTimeFormatter DEFAULT_FORMAT> = v2;
return;
}
}