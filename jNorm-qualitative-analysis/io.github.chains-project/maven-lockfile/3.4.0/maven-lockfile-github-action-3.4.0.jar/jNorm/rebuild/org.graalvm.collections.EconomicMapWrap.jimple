public class org.graalvm.collections.EconomicMapWrap extends java.lang.Object implements org.graalvm.collections.EconomicMap
{
private final java.util.Map map;
public void <init>(java.util.Map)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map> = v1;
return;
}
public java.lang.Object get(java.lang.Object)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v2;
java.lang.Object v1, v3;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.lang.Object put(java.lang.Object, java.lang.Object)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v3;
java.lang.Object v1, v2, v4;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v3;
java.lang.Object v1, v2, v4;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public int size()
{
int v2;
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
return v2;
}
public boolean containsKey(java.lang.Object)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v2;
java.lang.Object v1;
boolean v3;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v3 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v3;
}
public void clear()
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
interfaceinvoke v1.<java.util.Map: void clear()>();
return;
}
public java.lang.Object removeKey(java.lang.Object)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v2;
java.lang.Object v1, v3;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return v3;
}
public java.lang.Iterable getValues()
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Collection v2;
java.util.Map v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Collection values()>();
return v2;
}
public java.lang.Iterable getKeys()
{
java.util.Set v2;
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
public boolean isEmpty()
{
org.graalvm.collections.EconomicMapWrap v0;
boolean v2;
java.util.Map v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
return v2;
}
public org.graalvm.collections.MapCursor getEntries()
{
org.graalvm.collections.EconomicMapWrap$1 v4;
java.util.Iterator v3;
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v1;
java.util.Set v2;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
v4 = new org.graalvm.collections.EconomicMapWrap$1;
specialinvoke v4.<org.graalvm.collections.EconomicMapWrap$1: void <init>(org.graalvm.collections.EconomicMapWrap,java.util.Iterator)>(v0, v3);
return v4;
}
public void replaceAll(java.util.function.BiFunction)
{
org.graalvm.collections.EconomicMapWrap v0;
java.util.Map v2;
java.util.function.BiFunction v1;
v0 := @this: org.graalvm.collections.EconomicMapWrap;
v1 := @parameter0: java.util.function.BiFunction;
v2 = v0.<org.graalvm.collections.EconomicMapWrap: java.util.Map map>;
interfaceinvoke v2.<java.util.Map: void replaceAll(java.util.function.BiFunction)>(v1);
return;
}
}