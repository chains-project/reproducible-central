class org.graalvm.collections.EmptyMap$4 extends java.lang.Object implements org.graalvm.collections.EconomicMap
{
void <init>()
{
org.graalvm.collections.EmptyMap$4 v0;
v0 := @this: org.graalvm.collections.EmptyMap$4;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object put(java.lang.Object, java.lang.Object)
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.Object v1, v2;
java.lang.IllegalArgumentException v3;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot modify the always-empty map");
throw v3;
}
public void clear()
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.IllegalArgumentException v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 = new java.lang.IllegalArgumentException;
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot modify the always-empty map");
throw v1;
}
public java.lang.Object removeKey(java.lang.Object)
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.Object v1;
java.lang.IllegalArgumentException v2;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot modify the always-empty map");
throw v2;
}
public java.lang.Object get(java.lang.Object)
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.Object v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 := @parameter0: java.lang.Object;
return null;
}
public boolean containsKey(java.lang.Object)
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.Object v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 := @parameter0: java.lang.Object;
return 0;
}
public int size()
{
org.graalvm.collections.EmptyMap$4 v0;
v0 := @this: org.graalvm.collections.EmptyMap$4;
return 0;
}
public boolean isEmpty()
{
org.graalvm.collections.EmptyMap$4 v0;
v0 := @this: org.graalvm.collections.EmptyMap$4;
return 1;
}
public java.lang.Iterable getValues()
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.Iterable v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 = <org.graalvm.collections.EmptyMap: java.lang.Iterable EMPTY_ITERABLE>;
return v1;
}
public java.lang.Iterable getKeys()
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.Iterable v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 = <org.graalvm.collections.EmptyMap: java.lang.Iterable EMPTY_ITERABLE>;
return v1;
}
public org.graalvm.collections.MapCursor getEntries()
{
org.graalvm.collections.EmptyMap$4 v0;
org.graalvm.collections.MapCursor v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 = <org.graalvm.collections.EmptyMap: org.graalvm.collections.MapCursor EMPTY_CURSOR>;
return v1;
}
public void replaceAll(java.util.function.BiFunction)
{
org.graalvm.collections.EmptyMap$4 v0;
java.lang.IllegalArgumentException v2;
java.util.function.BiFunction v1;
v0 := @this: org.graalvm.collections.EmptyMap$4;
v1 := @parameter0: java.util.function.BiFunction;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot modify the always-empty map");
throw v2;
}
}