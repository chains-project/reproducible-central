public abstract class org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractExceptionDispatch extends org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractDispatchClass
{
protected void <init>(org.graalvm.polyglot.impl.AbstractPolyglotImpl)
{
org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractExceptionDispatch v0;
org.graalvm.polyglot.impl.AbstractPolyglotImpl v1;
v0 := @this: org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractExceptionDispatch;
v1 := @parameter0: org.graalvm.polyglot.impl.AbstractPolyglotImpl;
specialinvoke v0.<org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractDispatchClass: void <init>()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
return;
}
public abstract boolean isInternalError(java.lang.Object);
public abstract boolean isCancelled(java.lang.Object);
public abstract boolean isExit(java.lang.Object);
public abstract int getExitStatus(java.lang.Object);
public abstract java.lang.Iterable getPolyglotStackTrace(java.lang.Object);
public abstract boolean isSyntaxError(java.lang.Object);
public abstract org.graalvm.polyglot.Value getGuestObject(java.lang.Object);
public abstract boolean isIncompleteSource(java.lang.Object);
public abstract void onCreate(java.lang.Object, org.graalvm.polyglot.PolyglotException);
public abstract void printStackTrace(java.lang.Object, java.io.PrintStream);
public abstract void printStackTrace(java.lang.Object, java.io.PrintWriter);
public abstract java.lang.StackTraceElement[] getStackTrace(java.lang.Object);
public abstract java.lang.String getMessage(java.lang.Object);
public abstract boolean isHostException(java.lang.Object);
public abstract java.lang.Throwable asHostException(java.lang.Object);
public abstract org.graalvm.polyglot.SourceSection getSourceLocation(java.lang.Object);
public abstract boolean isResourceExhausted(java.lang.Object);
public abstract boolean isInterrupted(java.lang.Object);
}