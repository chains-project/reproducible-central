public final class org.jboss.logging.Log4j2LoggerProvider extends java.lang.Object implements org.jboss.logging.LoggerProvider
{
public void <init>()
{
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.jboss.logging.Log4j2Logger getLogger(java.lang.String)
{
org.jboss.logging.Log4j2Logger v2;
java.lang.String v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = new org.jboss.logging.Log4j2Logger;
specialinvoke v2.<org.jboss.logging.Log4j2Logger: void <init>(java.lang.String)>(v1);
return v2;
}
public void clearMdc()
{
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
staticinvoke <org.apache.logging.log4j.ThreadContext: void clearMap()>();
return;
}
public java.lang.Object putMdc(java.lang.String, java.lang.Object)
{
java.lang.Throwable v5;
org.jboss.logging.Log4j2LoggerProvider v0;
java.lang.Object v2;
java.lang.String v1, v3, v4, v6;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
label1:
v3 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.lang.String get(java.lang.String)>(v1);
label2:
v4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
staticinvoke <org.apache.logging.log4j.ThreadContext: void put(java.lang.String,java.lang.String)>(v1, v4);
return v3;
label3:
v5 := @caughtexception;
v6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
staticinvoke <org.apache.logging.log4j.ThreadContext: void put(java.lang.String,java.lang.String)>(v1, v6);
throw v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.lang.Object getMdc(java.lang.String)
{
java.lang.String v1, v2;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.lang.String get(java.lang.String)>(v1);
return v2;
}
public void removeMdc(java.lang.String)
{
java.lang.String v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 := @parameter0: java.lang.String;
staticinvoke <org.apache.logging.log4j.ThreadContext: void remove(java.lang.String)>(v1);
return;
}
public java.util.Map getMdcMap()
{
java.util.HashMap v1;
org.jboss.logging.Log4j2LoggerProvider v0;
java.util.Map v2;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 = new java.util.HashMap;
v2 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.util.Map getImmutableContext()>();
specialinvoke v1.<java.util.HashMap: void <init>(java.util.Map)>(v2);
return v1;
}
public void clearNdc()
{
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
staticinvoke <org.apache.logging.log4j.ThreadContext: void clearStack()>();
return;
}
public java.lang.String getNdc()
{
java.lang.String v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.lang.String peek()>();
return v1;
}
public int getNdcDepth()
{
int v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 = staticinvoke <org.apache.logging.log4j.ThreadContext: int getDepth()>();
return v1;
}
public java.lang.String popNdc()
{
java.lang.String v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.lang.String pop()>();
return v1;
}
public java.lang.String peekNdc()
{
java.lang.String v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.lang.String peek()>();
return v1;
}
public void pushNdc(java.lang.String)
{
java.lang.String v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 := @parameter0: java.lang.String;
staticinvoke <org.apache.logging.log4j.ThreadContext: void push(java.lang.String)>(v1);
return;
}
public void setNdcMaxDepth(int)
{
int v1;
org.jboss.logging.Log4j2LoggerProvider v0;
v0 := @this: org.jboss.logging.Log4j2LoggerProvider;
v1 := @parameter0: int;
staticinvoke <org.apache.logging.log4j.ThreadContext: void trim(int)>(v1);
return;
}
}