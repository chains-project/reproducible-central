public abstract class org.jboss.logmanager.ExtFormatter extends java.util.logging.Formatter
{
public void <init>()
{
org.jboss.logmanager.ExtFormatter v0;
v0 := @this: org.jboss.logmanager.ExtFormatter;
specialinvoke v0.<java.util.logging.Formatter: void <init>()>();
return;
}
public final java.lang.String format(java.util.logging.LogRecord)
{
java.lang.String v3;
java.util.logging.LogRecord v1;
org.jboss.logmanager.ExtFormatter v0;
org.jboss.logmanager.ExtLogRecord v2;
v0 := @this: org.jboss.logmanager.ExtFormatter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = staticinvoke <org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord wrap(java.util.logging.LogRecord)>(v1);
v3 = virtualinvoke v0.<org.jboss.logmanager.ExtFormatter: java.lang.String format(org.jboss.logmanager.ExtLogRecord)>(v2);
return v3;
}
public abstract java.lang.String format(org.jboss.logmanager.ExtLogRecord);
public java.lang.String formatMessage(java.util.logging.LogRecord)
{
java.lang.Object[] v5;
org.jboss.logmanager.ExtLogRecord$FormatStyle v10, v12, v9;
java.util.ResourceBundle v2;
int v14, v6;
java.lang.String v11, v13, v15, v3, v7;
boolean v8;
java.util.MissingResourceException v4;
java.util.logging.LogRecord v1;
org.jboss.logmanager.ExtFormatter v0;
v0 := @this: org.jboss.logmanager.ExtFormatter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = virtualinvoke v1.<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()>();
v3 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
if v3 != null goto label01;
return null;
label01:
if v2 == null goto label05;
label02:
v3 = virtualinvoke v2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(v3);
label03:
goto label05;
label04:
v4 := @caughtexception;
label05:
v5 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();
if v5 == null goto label06;
v6 = lengthof v5;
if v6 != 0 goto label07;
label06:
v7 = virtualinvoke v0.<org.jboss.logmanager.ExtFormatter: java.lang.String formatMessageNone(java.util.logging.LogRecord)>(v1);
return v7;
label07:
v8 = v1 instanceof org.jboss.logmanager.ExtLogRecord;
if v8 == 0 goto label09;
v9 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle getFormatStyle()>();
v10 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle PRINTF>;
if v9 != v10 goto label08;
v11 = virtualinvoke v0.<org.jboss.logmanager.ExtFormatter: java.lang.String formatMessagePrintf(java.util.logging.LogRecord)>(v1);
return v11;
label08:
v12 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle NO_FORMAT>;
if v9 != v12 goto label09;
v13 = virtualinvoke v0.<org.jboss.logmanager.ExtFormatter: java.lang.String formatMessageNone(java.util.logging.LogRecord)>(v1);
return v13;
label09:
v14 = virtualinvoke v3.<java.lang.String: int indexOf(int)>(123);
if v14 < 0 goto label10;
v15 = virtualinvoke v0.<org.jboss.logmanager.ExtFormatter: java.lang.String formatMessageLegacy(java.util.logging.LogRecord)>(v1);
goto label11;
label10:
v15 = virtualinvoke v0.<org.jboss.logmanager.ExtFormatter: java.lang.String formatMessageNone(java.util.logging.LogRecord)>(v1);
label11:
return v15;
catch java.util.MissingResourceException from label02 to label03 with label04;
}
public boolean isCallerCalculationRequired()
{
org.jboss.logmanager.ExtFormatter v0;
v0 := @this: org.jboss.logmanager.ExtFormatter;
return 1;
}
protected java.lang.String formatMessageNone(java.util.logging.LogRecord)
{
java.lang.String v2;
java.util.logging.LogRecord v1;
org.jboss.logmanager.ExtFormatter v0;
v0 := @this: org.jboss.logmanager.ExtFormatter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
return v2;
}
protected java.lang.String formatMessageLegacy(java.util.logging.LogRecord)
{
java.lang.Object[] v3;
java.lang.String v2, v4;
java.util.logging.LogRecord v1;
org.jboss.logmanager.ExtFormatter v0;
v0 := @this: org.jboss.logmanager.ExtFormatter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
v3 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();
v4 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(v2, v3);
return v4;
}
protected java.lang.String formatMessagePrintf(java.util.logging.LogRecord)
{
java.lang.Object[] v3;
java.lang.String v2, v4;
java.util.logging.LogRecord v1;
org.jboss.logmanager.ExtFormatter v0;
v0 := @this: org.jboss.logmanager.ExtFormatter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
v3 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v2, v3);
return v4;
}
}