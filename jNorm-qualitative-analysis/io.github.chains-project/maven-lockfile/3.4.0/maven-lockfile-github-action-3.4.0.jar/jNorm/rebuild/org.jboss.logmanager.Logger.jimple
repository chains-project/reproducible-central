public final class org.jboss.logmanager.Logger extends java.util.logging.Logger implements java.io.Serializable
{
private static final long serialVersionUID;
private final org.jboss.logmanager.LoggerNode loggerNode;
private static final java.lang.String LOGGER_CLASS_NAME;
static final int OFF_INT;
static final int SEVERE_INT;
static final int WARNING_INT;
static final int INFO_INT;
static final int CONFIG_INT;
static final int FINE_INT;
static final int FINER_INT;
static final int FINEST_INT;
public static org.jboss.logmanager.Logger getLogger(java.lang.String)
{
java.lang.IllegalStateException v3;
java.lang.Class v4;
java.lang.String v0, v5, v6;
java.util.logging.Logger v1;
java.lang.ClassCastException v2;
v0 := @parameter0: java.lang.String;
label1:
v1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v0);
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = new java.lang.IllegalStateException;
v4 = class "Lorg/jboss/logmanager/LogManager;";
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The LogManager was not properly installed (you must set the \"java.util.logging.manager\" system property to \"\u0001\")");
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
throw v3;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
public static org.jboss.logmanager.Logger getLogger(java.lang.String, java.lang.String)
{
java.lang.IllegalStateException v4;
java.util.logging.Logger v2;
java.lang.ClassCastException v3;
java.lang.Class v5;
java.lang.String v0, v1, v6, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
label1:
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String,java.lang.String)>(v0, v1);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalStateException;
v5 = class "Lorg/jboss/logmanager/LogManager;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The LogManager was not properly installed (you must set the \"java.util.logging.manager\" system property to \"\u0001\")");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v4;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
void <init>(org.jboss.logmanager.LoggerNode, java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v1;
java.lang.String v2;
java.util.logging.Level v3;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: org.jboss.logmanager.LoggerNode;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.util.logging.Logger: void <init>(java.lang.String,java.lang.String)>(v2, null);
v3 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: java.util.logging.Level getLevel()>();
specialinvoke v0.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(v3);
v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode> = v1;
return;
}
protected final java.lang.Object writeReplace() throws java.io.ObjectStreamException
{
org.jboss.logmanager.Logger v0;
java.lang.String v2;
org.jboss.logmanager.SerializedLogger v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 = new org.jboss.logmanager.SerializedLogger;
v2 = virtualinvoke v0.<org.jboss.logmanager.Logger: java.lang.String getName()>();
specialinvoke v1.<org.jboss.logmanager.SerializedLogger: void <init>(java.lang.String)>(v2);
return v1;
}
public void setFilter(java.util.logging.Filter) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
java.util.logging.Filter v1;
org.jboss.logmanager.LoggerNode v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Filter;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v2.<org.jboss.logmanager.LoggerNode: void setFilter(java.util.logging.Filter)>(v1);
return;
}
public java.util.logging.Filter getFilter()
{
org.jboss.logmanager.Logger v0;
java.util.logging.Filter v2;
org.jboss.logmanager.LoggerNode v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: java.util.logging.Filter getFilter()>();
return v2;
}
public void setLevel(java.util.logging.Level) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
java.util.logging.Level v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
specialinvoke v0.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(v1);
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v2.<org.jboss.logmanager.LoggerNode: void setLevel(java.util.logging.Level)>(v1);
return;
}
public void setLevelName(java.lang.String) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LogContext v3;
org.jboss.logmanager.LoggerNode v2;
java.lang.String v1;
java.util.logging.Level v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: org.jboss.logmanager.LogContext getContext()>();
v4 = virtualinvoke v3.<org.jboss.logmanager.LogContext: java.util.logging.Level getLevelForName(java.lang.String)>(v1);
virtualinvoke v0.<org.jboss.logmanager.Logger: void setLevel(java.util.logging.Level)>(v4);
return;
}
public int getEffectiveLevel()
{
int v2;
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: int getEffectiveLevel()>();
return v2;
}
public java.util.logging.Level getLevel()
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v1;
java.util.logging.Level v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: java.util.logging.Level getLevel()>();
return v2;
}
public boolean isLoggable(java.util.logging.Level)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
int v3;
boolean v4;
java.util.logging.Level v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
return v4;
}
public java.lang.Object getAttachment(org.jboss.logmanager.Logger$AttachmentKey)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
org.jboss.logmanager.Logger$AttachmentKey v1;
java.lang.Object v3;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: org.jboss.logmanager.Logger$AttachmentKey;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: java.lang.Object getAttachment(org.jboss.logmanager.Logger$AttachmentKey)>(v1);
return v3;
}
public java.lang.Object attach(org.jboss.logmanager.Logger$AttachmentKey, java.lang.Object) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v3;
org.jboss.logmanager.Logger$AttachmentKey v1;
java.lang.Object v2, v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: org.jboss.logmanager.Logger$AttachmentKey;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v4 = virtualinvoke v3.<org.jboss.logmanager.LoggerNode: java.lang.Object attach(org.jboss.logmanager.Logger$AttachmentKey,java.lang.Object)>(v1, v2);
return v4;
}
public java.lang.Object attachIfAbsent(org.jboss.logmanager.Logger$AttachmentKey, java.lang.Object) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v3;
org.jboss.logmanager.Logger$AttachmentKey v1;
java.lang.Object v2, v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: org.jboss.logmanager.Logger$AttachmentKey;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v4 = virtualinvoke v3.<org.jboss.logmanager.LoggerNode: java.lang.Object attachIfAbsent(org.jboss.logmanager.Logger$AttachmentKey,java.lang.Object)>(v1, v2);
return v4;
}
public java.lang.Object detach(org.jboss.logmanager.Logger$AttachmentKey) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
org.jboss.logmanager.Logger$AttachmentKey v1;
java.lang.Object v3;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: org.jboss.logmanager.Logger$AttachmentKey;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: java.lang.Object detach(org.jboss.logmanager.Logger$AttachmentKey)>(v1);
return v3;
}
public void addHandler(java.util.logging.Handler) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v3;
java.util.logging.Handler v1;
java.lang.NullPointerException v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Handler;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("handler is null");
throw v2;
label1:
v3 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v3.<org.jboss.logmanager.LoggerNode: void addHandler(java.util.logging.Handler)>(v1);
return;
}
public void removeHandler(java.util.logging.Handler) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
java.util.logging.Handler v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Handler;
if v1 != null goto label1;
return;
label1:
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v2.<org.jboss.logmanager.LoggerNode: void removeHandler(java.util.logging.Handler)>(v1);
return;
}
public java.util.logging.Handler[] getHandlers()
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v1;
int v3;
java.util.logging.Handler[] v2;
java.lang.Object v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: java.util.logging.Handler[] getHandlers()>();
v3 = lengthof v2;
if v3 <= 0 goto label1;
v4 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public void setHandlers(java.util.logging.Handler[]) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
java.util.logging.Handler[] v1;
java.lang.IllegalArgumentException v6;
org.jboss.logmanager.LoggerNode v7;
int v3, v4;
java.lang.Object v2;
java.util.logging.Handler v5;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Handler[];
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
if v5 != null goto label2;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A handler is null");
throw v6;
label2:
v4 = v4 + 1;
goto label1;
label3:
v7 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v7.<org.jboss.logmanager.LoggerNode: java.util.logging.Handler[] setHandlers(java.util.logging.Handler[])>(v2);
return;
}
public java.util.logging.Handler[] getAndSetHandlers(java.util.logging.Handler[]) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
java.util.logging.Handler[] v1, v8;
java.lang.IllegalArgumentException v6;
org.jboss.logmanager.LoggerNode v7;
int v3, v4;
java.lang.Object v2;
java.util.logging.Handler v5;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Handler[];
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
if v5 != null goto label2;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A handler is null");
throw v6;
label2:
v4 = v4 + 1;
goto label1;
label3:
v7 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v8 = virtualinvoke v7.<org.jboss.logmanager.LoggerNode: java.util.logging.Handler[] setHandlers(java.util.logging.Handler[])>(v2);
return v8;
}
public boolean compareAndSetHandlers(java.util.logging.Handler[], java.util.logging.Handler[]) throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
java.util.logging.Handler[] v1, v10, v2;
java.lang.IllegalArgumentException v8;
org.jboss.logmanager.LoggerNode v12, v9;
int v5, v6;
java.lang.Object v3, v4;
java.util.logging.Handler v7;
boolean v11, v13;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Handler[];
v2 := @parameter1: java.util.logging.Handler[];
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v4 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label3;
v7 = v4[v6];
if v7 != null goto label2;
v8 = new java.lang.IllegalArgumentException;
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A handler is null");
throw v8;
label2:
v6 = v6 + 1;
goto label1;
label3:
v9 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v10 = virtualinvoke v9.<org.jboss.logmanager.LoggerNode: java.util.logging.Handler[] getHandlers()>();
v11 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(v10, v3);
if v11 != 0 goto label4;
return 0;
label4:
v12 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v13 = virtualinvoke v12.<org.jboss.logmanager.LoggerNode: boolean compareAndSetHandlers(java.util.logging.Handler[],java.util.logging.Handler[])>(v10, v4);
if v13 == 0 goto label3;
return 1;
}
public java.util.logging.Handler[] clearHandlers() throws java.lang.SecurityException
{
org.jboss.logmanager.Logger v0;
java.util.logging.Handler[] v2;
org.jboss.logmanager.LoggerNode v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: java.util.logging.Handler[] clearHandlers()>();
return v2;
}
public void setUseParentHandlers(boolean)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
boolean v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v2.<org.jboss.logmanager.LoggerNode: void setUseParentHandlers(boolean)>(v1);
return;
}
public boolean getUseParentHandlers()
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v1;
boolean v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: boolean getUseParentHandlers()>();
return v2;
}
public void setUseParentFilters(boolean)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
boolean v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v2.<org.jboss.logmanager.LoggerNode: void setUseParentFilters(boolean)>(v1);
return;
}
public boolean getUseParentFilters()
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v1;
boolean v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: boolean getUseParentFilters()>();
return v2;
}
public org.jboss.logmanager.Logger getParent()
{
org.jboss.logmanager.Logger v0, v3;
org.jboss.logmanager.LoggerNode v1, v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: org.jboss.logmanager.LoggerNode getParent()>();
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: org.jboss.logmanager.Logger createLogger()>();
label2:
return v3;
}
public void setParent(java.util.logging.Logger)
{
org.jboss.logmanager.Logger v0;
java.lang.SecurityException v2;
java.util.logging.Logger v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Logger;
v2 = new java.lang.SecurityException;
specialinvoke v2.<java.lang.SecurityException: void <init>(java.lang.String)>("setParent() disallowed");
throw v2;
}
public org.jboss.logmanager.LogContext getLogContext()
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LogContext v2;
org.jboss.logmanager.LoggerNode v1;
v0 := @this: org.jboss.logmanager.Logger;
v1 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v2 = virtualinvoke v1.<org.jboss.logmanager.LoggerNode: org.jboss.logmanager.LogContext getContext()>();
return v2;
}
public void log(java.util.logging.LogRecord)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v2;
int v4;
java.util.logging.LogRecord v1;
boolean v5;
java.util.logging.Level v3;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = virtualinvoke v1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
v4 = virtualinvoke v3.<java.util.logging.Level: int intValue()>();
v5 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v4);
if v5 != 0 goto label1;
return;
label1:
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(java.util.logging.LogRecord)>(v1);
return;
}
public void entering(java.lang.String, java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v6;
java.util.logging.Level v7;
org.jboss.logmanager.LoggerNode v3;
int v4;
java.lang.String v1, v2, v8;
boolean v5;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v4 = <org.jboss.logmanager.Logger: int FINER_INT>;
v5 = virtualinvoke v3.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v4);
if v5 != 0 goto label1;
return;
label1:
v6 = new org.jboss.logmanager.ExtLogRecord;
v7 = <java.util.logging.Level: java.util.logging.Level FINER>;
v8 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v6.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v7, "ENTRY", v8);
virtualinvoke v6.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v1);
virtualinvoke v6.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v2);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v6);
return;
}
public void entering(java.lang.String, java.lang.String, java.lang.Object)
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v10;
org.jboss.logmanager.ExtLogRecord v7;
java.util.logging.Level v8;
org.jboss.logmanager.LoggerNode v4;
int v5;
java.lang.Object v3;
java.lang.String v1, v2, v9;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = <org.jboss.logmanager.Logger: int FINER_INT>;
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new org.jboss.logmanager.ExtLogRecord;
v8 = <java.util.logging.Level: java.util.logging.Level FINER>;
v9 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v7.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v8, "ENTRY {0}", v9);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v1);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v2);
v10 = newarray (java.lang.Object)[1];
v10[0] = v3;
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v10);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v7);
return;
}
public void entering(java.lang.String, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
org.jboss.logmanager.ExtLogRecord v12;
java.util.logging.Level v13;
int v5, v8, v9;
java.lang.String v1, v14, v15, v2;
boolean v6;
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LoggerNode v4;
java.lang.StringBuilder v10, v11, v7;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = <org.jboss.logmanager.Logger: int FINER_INT>;
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>("ENTRY");
if v3 == null goto label3;
v8 = 0;
label2:
v9 = lengthof v3;
if v8 >= v9 goto label3;
v10 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");
v11 = virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v8);
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
v8 = v8 + 1;
goto label2;
label3:
v12 = new org.jboss.logmanager.ExtLogRecord;
v13 = <java.util.logging.Level: java.util.logging.Level FINER>;
v14 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.String toString()>();
v15 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v12.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v13, v14, v15);
virtualinvoke v12.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v1);
virtualinvoke v12.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v2);
if v3 == null goto label4;
virtualinvoke v12.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v3);
label4:
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v12);
return;
}
public void exiting(java.lang.String, java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v6;
java.util.logging.Level v7;
org.jboss.logmanager.LoggerNode v3;
int v4;
java.lang.String v1, v2, v8;
boolean v5;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v4 = <org.jboss.logmanager.Logger: int FINER_INT>;
v5 = virtualinvoke v3.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v4);
if v5 != 0 goto label1;
return;
label1:
v6 = new org.jboss.logmanager.ExtLogRecord;
v7 = <java.util.logging.Level: java.util.logging.Level FINER>;
v8 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v6.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v7, "RETURN", v8);
virtualinvoke v6.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v1);
virtualinvoke v6.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v2);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v6);
return;
}
public void exiting(java.lang.String, java.lang.String, java.lang.Object)
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v10;
org.jboss.logmanager.ExtLogRecord v7;
java.util.logging.Level v8;
org.jboss.logmanager.LoggerNode v4;
int v5;
java.lang.Object v3;
java.lang.String v1, v2, v9;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = <org.jboss.logmanager.Logger: int FINER_INT>;
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new org.jboss.logmanager.ExtLogRecord;
v8 = <java.util.logging.Level: java.util.logging.Level FINER>;
v9 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v7.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v8, "RETURN {0}", v9);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v1);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v2);
v10 = newarray (java.lang.Object)[1];
v10[0] = v3;
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v10);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v7);
return;
}
public void throwing(java.lang.String, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v7;
java.util.logging.Level v8;
org.jboss.logmanager.LoggerNode v4;
int v5;
java.lang.String v1, v2, v9;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = <org.jboss.logmanager.Logger: int FINER_INT>;
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new org.jboss.logmanager.ExtLogRecord;
v8 = <java.util.logging.Level: java.util.logging.Level FINER>;
v9 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v7.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v8, "THROW", v9);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v1);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v2);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setThrown(java.lang.Throwable)>(v3);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v7);
return;
}
public void severe(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int SEVERE_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void warning(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int WARNING_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level WARNING>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void info(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int INFO_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level INFO>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void config(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int CONFIG_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level CONFIG>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void fine(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int FINE_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level FINE>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void finer(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int FINER_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level FINER>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void finest(java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v5;
java.util.logging.Level v6;
org.jboss.logmanager.LoggerNode v2;
int v3;
java.lang.String v1, v7;
boolean v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = <org.jboss.logmanager.Logger: int FINEST_INT>;
v4 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v3);
if v4 != 0 goto label1;
return;
label1:
v5 = new org.jboss.logmanager.ExtLogRecord;
v6 = <java.util.logging.Level: java.util.logging.Level FINEST>;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v5.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v6, v1, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v5);
return;
}
public void log(java.util.logging.Level, java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v6;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v3;
int v4;
java.lang.String v2, v7;
boolean v5;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v4 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v5 = virtualinvoke v3.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v4);
if v5 != 0 goto label1;
return;
label1:
v6 = new org.jboss.logmanager.ExtLogRecord;
v7 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v6.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v2, v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v6);
return;
}
public void log(java.util.logging.Level, java.lang.String, java.lang.Object)
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v9;
org.jboss.logmanager.ExtLogRecord v7;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v4;
int v5;
java.lang.Object v3;
java.lang.String v2, v8;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new org.jboss.logmanager.ExtLogRecord;
v8 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v7.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v2, v8);
v9 = newarray (java.lang.Object)[1];
v9[0] = v3;
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v9);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v7);
return;
}
public void log(java.util.logging.Level, java.lang.String, java.lang.Object[])
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v3;
org.jboss.logmanager.ExtLogRecord v7;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v4;
int v5;
java.lang.String v2, v8;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new org.jboss.logmanager.ExtLogRecord;
v8 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v7.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v2, v8);
if v3 == null goto label2;
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v3);
label2:
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v7);
return;
}
public void log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v7;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v4;
int v5;
java.lang.String v2, v8;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
v4 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v5 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v6 = virtualinvoke v4.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v5);
if v6 != 0 goto label1;
return;
label1:
v7 = new org.jboss.logmanager.ExtLogRecord;
v8 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v7.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v2, v8);
virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord: void setThrown(java.lang.Throwable)>(v3);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v7);
return;
}
public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String)
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v8;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v5;
int v6;
java.lang.String v2, v3, v4, v9;
boolean v7;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v6 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v7 = virtualinvoke v5.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v6);
if v7 != 0 goto label1;
return;
label1:
v8 = new org.jboss.logmanager.ExtLogRecord;
v9 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v8.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v4, v9);
virtualinvoke v8.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v2);
virtualinvoke v8.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v3);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v8);
return;
}
public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v11;
org.jboss.logmanager.ExtLogRecord v9;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v6;
int v7;
java.lang.Object v5;
java.lang.String v10, v2, v3, v4;
boolean v8;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object;
v6 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v7 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v8 = virtualinvoke v6.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v7);
if v8 != 0 goto label1;
return;
label1:
v9 = new org.jboss.logmanager.ExtLogRecord;
v10 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v9.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v4, v10);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v2);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v3);
v11 = newarray (java.lang.Object)[1];
v11[0] = v5;
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v11);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v9);
return;
}
public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v5;
org.jboss.logmanager.ExtLogRecord v9;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v6;
int v7;
java.lang.String v10, v2, v3, v4;
boolean v8;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object[];
v6 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v7 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v8 = virtualinvoke v6.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v7);
if v8 != 0 goto label1;
return;
label1:
v9 = new org.jboss.logmanager.ExtLogRecord;
v10 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v9.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v4, v10);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v2);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v3);
if v5 == null goto label2;
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v5);
label2:
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v9);
return;
}
public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v5;
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v9;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v6;
int v7;
java.lang.String v10, v2, v3, v4;
boolean v8;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Throwable;
v6 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v7 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v8 = virtualinvoke v6.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v7);
if v8 != 0 goto label1;
return;
label1:
v9 = new org.jboss.logmanager.ExtLogRecord;
v10 = <org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME>;
specialinvoke v9.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v1, v4, v10);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v2);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v3);
virtualinvoke v9.<org.jboss.logmanager.ExtLogRecord: void setThrown(java.lang.Throwable)>(v5);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v9);
return;
}
public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
{
org.jboss.logmanager.Logger v0;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v6;
int v7;
java.lang.String v2, v3, v4, v5;
boolean v8;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v7 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v8 = virtualinvoke v6.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v7);
if v8 != 0 goto label1;
return;
label1:
specialinvoke v0.<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3, v4, v5);
return;
}
public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
{
org.jboss.logmanager.Logger v0;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v7;
int v8;
java.lang.Object v6;
java.lang.String v2, v3, v4, v5;
boolean v9;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: java.lang.Object;
v7 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v8 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v9 = virtualinvoke v7.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v8);
if v9 != 0 goto label1;
return;
label1:
specialinvoke v0.<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(v1, v2, v3, v4, v5, v6);
return;
}
public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])
{
org.jboss.logmanager.Logger v0;
java.lang.Object[] v6;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v7;
int v8;
java.lang.String v2, v3, v4, v5;
boolean v9;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: java.lang.Object[];
v7 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v8 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v9 = virtualinvoke v7.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v8);
if v9 != 0 goto label1;
return;
label1:
specialinvoke v0.<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>(v1, v2, v3, v4, v5, v6);
return;
}
public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v6;
org.jboss.logmanager.Logger v0;
java.util.logging.Level v1;
org.jboss.logmanager.LoggerNode v7;
int v8;
java.lang.String v2, v3, v4, v5;
boolean v9;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: java.lang.Throwable;
v7 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v8 = virtualinvoke v1.<java.util.logging.Level: int intValue()>();
v9 = virtualinvoke v7.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v8);
if v9 != 0 goto label1;
return;
label1:
specialinvoke v0.<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>(v1, v2, v3, v4, v5, v6);
return;
}
public void log(java.lang.String, java.util.logging.Level, java.lang.String, java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v7;
org.jboss.logmanager.Logger v0;
java.lang.Object[] v6;
org.jboss.logmanager.ExtLogRecord v11;
org.jboss.logmanager.ExtLogRecord$FormatStyle v5;
java.util.logging.Level v2;
org.jboss.logmanager.LoggerNode v8;
int v9;
java.lang.String v1, v3, v4;
boolean v10;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.logging.Level;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: org.jboss.logmanager.ExtLogRecord$FormatStyle;
v6 := @parameter5: java.lang.Object[];
v7 := @parameter6: java.lang.Throwable;
if v2 == null goto label1;
if v1 == null goto label1;
if v3 == null goto label1;
v8 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v9 = virtualinvoke v2.<java.util.logging.Level: int intValue()>();
v10 = virtualinvoke v8.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v9);
if v10 != 0 goto label2;
label1:
return;
label2:
v11 = new org.jboss.logmanager.ExtLogRecord;
specialinvoke v11.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle,java.lang.String)>(v2, v3, v5, v1);
virtualinvoke v11.<org.jboss.logmanager.ExtLogRecord: void setResourceBundleName(java.lang.String)>(v4);
virtualinvoke v11.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v6);
virtualinvoke v11.<org.jboss.logmanager.ExtLogRecord: void setThrown(java.lang.Throwable)>(v7);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v11);
return;
}
public void log(java.lang.String, java.util.logging.Level, java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v6;
org.jboss.logmanager.Logger v0;
java.lang.Object[] v5;
org.jboss.logmanager.ExtLogRecord v10;
org.jboss.logmanager.ExtLogRecord$FormatStyle v4;
java.util.logging.Level v2;
org.jboss.logmanager.LoggerNode v7;
int v8;
java.lang.String v1, v3;
boolean v9;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.logging.Level;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: org.jboss.logmanager.ExtLogRecord$FormatStyle;
v5 := @parameter4: java.lang.Object[];
v6 := @parameter5: java.lang.Throwable;
if v2 == null goto label1;
if v1 == null goto label1;
if v3 == null goto label1;
v7 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v8 = virtualinvoke v2.<java.util.logging.Level: int intValue()>();
v9 = virtualinvoke v7.<org.jboss.logmanager.LoggerNode: boolean isLoggableLevel(int)>(v8);
if v9 != 0 goto label2;
label1:
return;
label2:
v10 = new org.jboss.logmanager.ExtLogRecord;
specialinvoke v10.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle,java.lang.String)>(v2, v3, v4, v1);
virtualinvoke v10.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v5);
virtualinvoke v10.<org.jboss.logmanager.ExtLogRecord: void setThrown(java.lang.Throwable)>(v6);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v10);
return;
}
public void log(java.lang.String, java.util.logging.Level, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v4;
org.jboss.logmanager.Logger v0;
java.lang.String v1, v3;
org.jboss.logmanager.ExtLogRecord$FormatStyle v5;
java.util.logging.Level v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.logging.Level;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Throwable;
v5 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
virtualinvoke v0.<org.jboss.logmanager.Logger: void log(java.lang.String,java.util.logging.Level,java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle,java.lang.Object[],java.lang.Throwable)>(v1, v2, v3, v5, null, v4);
return;
}
public void logRaw(org.jboss.logmanager.ExtLogRecord)
{
java.lang.Throwable v8;
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.ExtLogRecord v1;
java.lang.VirtualMachineError v7;
org.jboss.logmanager.LoggerNode v5, v9;
java.util.ResourceBundle v4;
java.lang.String v2, v3;
boolean v6;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = virtualinvoke v0.<org.jboss.logmanager.Logger: java.lang.String getName()>();
virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: void setLoggerName(java.lang.String)>(v2);
v3 = virtualinvoke v0.<org.jboss.logmanager.Logger: java.lang.String getResourceBundleName()>();
v4 = virtualinvoke v0.<org.jboss.logmanager.Logger: java.util.ResourceBundle getResourceBundle()>();
if v3 == null goto label1;
if v4 == null goto label1;
virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: void setResourceBundleName(java.lang.String)>(v3);
virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: void setResourceBundle(java.util.ResourceBundle)>(v4);
label1:
v5 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v6 = virtualinvoke v5.<org.jboss.logmanager.LoggerNode: boolean isLoggable(org.jboss.logmanager.ExtLogRecord)>(v1);
if v6 != 0 goto label5;
label2:
return;
label3:
v7 := @caughtexception;
throw v7;
label4:
v8 := @caughtexception;
label5:
v9 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
virtualinvoke v9.<org.jboss.logmanager.LoggerNode: void publish(org.jboss.logmanager.ExtLogRecord)>(v1);
return;
catch java.lang.VirtualMachineError from label1 to label2 with label3;
catch java.lang.Throwable from label1 to label2 with label4;
}
public void logRaw(java.util.logging.LogRecord)
{
org.jboss.logmanager.Logger v0;
java.util.logging.LogRecord v1;
org.jboss.logmanager.ExtLogRecord v2;
v0 := @this: org.jboss.logmanager.Logger;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = staticinvoke <org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord wrap(java.util.logging.LogRecord)>(v1);
virtualinvoke v0.<org.jboss.logmanager.Logger: void logRaw(org.jboss.logmanager.ExtLogRecord)>(v2);
return;
}
public java.lang.String toString()
{
org.jboss.logmanager.Logger v0;
org.jboss.logmanager.LogContext v3;
org.jboss.logmanager.LoggerNode v2;
java.lang.String v1, v4;
v0 := @this: org.jboss.logmanager.Logger;
v1 = virtualinvoke v0.<org.jboss.logmanager.Logger: java.lang.String getName()>();
v2 = v0.<org.jboss.logmanager.Logger: org.jboss.logmanager.LoggerNode loggerNode>;
v3 = virtualinvoke v2.<org.jboss.logmanager.LoggerNode: org.jboss.logmanager.LogContext getContext()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.jboss.logmanager.LogContext)>(v1, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Logger \'\u0001\' in context \u0001");
return v4;
}
static void <clinit>()
{
java.util.logging.Level v10, v12, v14, v16, v2, v4, v6, v8;
int v11, v13, v15, v17, v3, v5, v7, v9;
java.lang.String v1;
java.lang.Class v0;
v0 = class "Lorg/jboss/logmanager/Logger;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
<org.jboss.logmanager.Logger: java.lang.String LOGGER_CLASS_NAME> = v1;
v2 = <java.util.logging.Level: java.util.logging.Level OFF>;
v3 = virtualinvoke v2.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int OFF_INT> = v3;
v4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
v5 = virtualinvoke v4.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int SEVERE_INT> = v5;
v6 = <java.util.logging.Level: java.util.logging.Level WARNING>;
v7 = virtualinvoke v6.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int WARNING_INT> = v7;
v8 = <java.util.logging.Level: java.util.logging.Level INFO>;
v9 = virtualinvoke v8.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int INFO_INT> = v9;
v10 = <java.util.logging.Level: java.util.logging.Level CONFIG>;
v11 = virtualinvoke v10.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int CONFIG_INT> = v11;
v12 = <java.util.logging.Level: java.util.logging.Level FINE>;
v13 = virtualinvoke v12.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int FINE_INT> = v13;
v14 = <java.util.logging.Level: java.util.logging.Level FINER>;
v15 = virtualinvoke v14.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int FINER_INT> = v15;
v16 = <java.util.logging.Level: java.util.logging.Level FINEST>;
v17 = virtualinvoke v16.<java.util.logging.Level: int intValue()>();
<org.jboss.logmanager.Logger: int FINEST_INT> = v17;
return;
}
}