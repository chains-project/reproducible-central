public final class org.jboss.logmanager.LoggingUncaughtExceptionHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
private final org.jboss.logmanager.Logger log;
public void <init>(org.jboss.logmanager.Logger)
{
org.jboss.logmanager.Logger v1;
org.jboss.logmanager.LoggingUncaughtExceptionHandler v0;
v0 := @this: org.jboss.logmanager.LoggingUncaughtExceptionHandler;
v1 := @parameter0: org.jboss.logmanager.Logger;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.LoggingUncaughtExceptionHandler: org.jboss.logmanager.Logger log> = v1;
return;
}
public void uncaughtException(java.lang.Thread, java.lang.Throwable)
{
java.lang.Throwable v2;
org.jboss.logmanager.Logger v3;
org.jboss.logmanager.LoggingUncaughtExceptionHandler v0;
java.lang.Thread v1;
org.jboss.logmanager.Level v4;
v0 := @this: org.jboss.logmanager.LoggingUncaughtExceptionHandler;
v1 := @parameter0: java.lang.Thread;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<org.jboss.logmanager.LoggingUncaughtExceptionHandler: org.jboss.logmanager.Logger log>;
v4 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level ERROR>;
virtualinvoke v3.<org.jboss.logmanager.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(v4, "Uncaught exception", v2);
return;
}
}