public final class org.jboss.logmanager.errormanager.OnlyOnceErrorManager extends java.util.logging.ErrorManager
{
private final java.util.concurrent.atomic.AtomicBoolean called;
public void <init>()
{
java.util.concurrent.atomic.AtomicBoolean v1;
org.jboss.logmanager.errormanager.OnlyOnceErrorManager v0;
v0 := @this: org.jboss.logmanager.errormanager.OnlyOnceErrorManager;
specialinvoke v0.<java.util.logging.ErrorManager: void <init>()>();
v1 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<org.jboss.logmanager.errormanager.OnlyOnceErrorManager: java.util.concurrent.atomic.AtomicBoolean called> = v1;
return;
}
public void error(java.lang.String, java.lang.Exception, int)
{
java.lang.Object[] v7;
org.jboss.logmanager.errormanager.OnlyOnceErrorManager v0;
java.util.concurrent.atomic.AtomicBoolean v4;
java.lang.Exception v2;
int v3;
java.lang.String v1, v6;
boolean v5;
v0 := @this: org.jboss.logmanager.errormanager.OnlyOnceErrorManager;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Exception;
v3 := @parameter2: int;
v4 = v0.<org.jboss.logmanager.errormanager.OnlyOnceErrorManager: java.util.concurrent.atomic.AtomicBoolean called>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);
if v5 == 0 goto label1;
return;
label1:
tableswitch(v3)
{
case 0: goto label5;
case 1: goto label7;
case 2: goto label3;
case 3: goto label2;
case 4: goto label6;
case 5: goto label4;
default: goto label8;
};
label2:
v6 = "CLOSE_FAILURE";
goto label9;
label3:
v6 = "FLUSH_FAILURE";
goto label9;
label4:
v6 = "FORMAT_FAILURE";
goto label9;
label5:
v6 = "GENERIC_FAILURE";
goto label9;
label6:
v6 = "OPEN_FAILURE";
goto label9;
label7:
v6 = "WRITE_FAILURE";
goto label9;
label8:
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("INVALID (\u0001)");
label9:
v7 = newarray (java.lang.Object)[2];
v7[0] = v6;
v7[1] = v1;
staticinvoke <org.jboss.logmanager.StandardOutputStreams: void printError(java.lang.Throwable,java.lang.String,java.lang.Object[])>(v2, "LogManager error of type %s: %s%n", v7);
return;
}
}