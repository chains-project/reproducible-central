public final class org.jboss.logmanager.filters.AllFilter extends java.lang.Object implements java.util.logging.Filter
{
private final java.util.logging.Filter[] filters;
public void <init>(java.util.logging.Filter[])
{
java.lang.Object v2;
java.util.logging.Filter[] v1;
org.jboss.logmanager.filters.AllFilter v0;
v0 := @this: org.jboss.logmanager.filters.AllFilter;
v1 := @parameter0: java.util.logging.Filter[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v0.<org.jboss.logmanager.filters.AllFilter: java.util.logging.Filter[] filters> = v2;
return;
}
public void <init>(java.lang.Iterable)
{
java.util.Iterator v2;
org.jboss.logmanager.filters.AllFilter v0;
java.lang.Iterable v1;
v0 := @this: org.jboss.logmanager.filters.AllFilter;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
specialinvoke v0.<org.jboss.logmanager.filters.AllFilter: void <init>(java.util.Iterator)>(v2);
return;
}
public void <init>(java.util.Iterator)
{
java.util.logging.Filter[] v2;
java.util.Iterator v1;
org.jboss.logmanager.filters.AllFilter v0;
v0 := @this: org.jboss.logmanager.filters.AllFilter;
v1 := @parameter0: java.util.Iterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <org.jboss.logmanager.filters.AllFilter: java.util.logging.Filter[] unroll(java.util.Iterator,int)>(v1, 0);
v0.<org.jboss.logmanager.filters.AllFilter: java.util.logging.Filter[] filters> = v2;
return;
}
private static java.util.logging.Filter[] unroll(java.util.Iterator, int)
{
java.util.Iterator v0;
java.lang.NullPointerException v4;
int v1, v6;
java.lang.Object v3;
java.util.logging.Filter[] v7, v8;
java.lang.String v5;
boolean v2;
v0 := @parameter0: java.util.Iterator;
v1 := @parameter1: int;
v2 = interfaceinvoke v0.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v0.<java.util.Iterator: java.lang.Object next()>();
if v3 != null goto label1;
v4 = new java.lang.NullPointerException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("filter at index \u0001 is null");
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v1 + 1;
v7 = staticinvoke <org.jboss.logmanager.filters.AllFilter: java.util.logging.Filter[] unroll(java.util.Iterator,int)>(v0, v6);
v7[v1] = v3;
return v7;
label2:
v8 = newarray (java.util.logging.Filter)[v1];
return v8;
}
public boolean isLoggable(java.util.logging.LogRecord)
{
java.util.logging.Filter v5;
org.jboss.logmanager.filters.AllFilter v0;
int v3, v4;
java.util.logging.Filter[] v2;
java.util.logging.LogRecord v1;
boolean v6;
v0 := @this: org.jboss.logmanager.filters.AllFilter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = v0.<org.jboss.logmanager.filters.AllFilter: java.util.logging.Filter[] filters>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = interfaceinvoke v5.<java.util.logging.Filter: boolean isLoggable(java.util.logging.LogRecord)>(v1);
if v6 != 0 goto label2;
return 0;
label2:
v4 = v4 + 1;
goto label1;
label3:
return 1;
}
}