public interface  org.jboss.logmanager.formatters.StructuredFormatter$Generator extends java.lang.Object
{
public org.jboss.logmanager.formatters.StructuredFormatter$Generator begin() throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, int) throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0;
int v2;
java.lang.String v1, v3;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v2);
interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String,java.lang.String)>(v1, v3);
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, long) throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0;
long v2;
java.lang.String v1, v3;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(v2);
interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String,java.lang.String)>(v1, v3);
return v0;
}
public abstract org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, java.util.Map) throws java.lang.Exception;
public abstract org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, java.lang.String) throws java.lang.Exception;
public org.jboss.logmanager.formatters.StructuredFormatter$Generator addMetaData(java.util.Map) throws java.lang.Exception
{
java.util.Iterator v3;
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0;
java.util.Map v1;
java.util.Set v2;
java.lang.Object v5, v6;
boolean v4;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v5);
interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String,java.lang.String)>(v5, v6);
goto label1;
label2:
return v0;
}
public abstract org.jboss.logmanager.formatters.StructuredFormatter$Generator startObject(java.lang.String) throws java.lang.Exception;
public abstract org.jboss.logmanager.formatters.StructuredFormatter$Generator endObject() throws java.lang.Exception;
public org.jboss.logmanager.formatters.StructuredFormatter$Generator startArray(java.lang.String) throws java.lang.Exception
{
java.lang.String v1;
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0, v2;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator startObject(java.lang.String)>(v1);
return v2;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator endArray() throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0, v1;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 = interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator endObject()>();
return v1;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator addAttribute(java.lang.String, int) throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0, v3;
int v2;
java.lang.String v1;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String,int)>(v1, v2);
return v3;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator addAttribute(java.lang.String, java.lang.String) throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0, v3;
java.lang.String v1, v2;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = interfaceinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$Generator: org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String,java.lang.String)>(v1, v2);
return v3;
}
public abstract org.jboss.logmanager.formatters.StructuredFormatter$Generator end() throws java.lang.Exception;
public boolean wrapArrays()
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v0;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$Generator;
return 0;
}
}