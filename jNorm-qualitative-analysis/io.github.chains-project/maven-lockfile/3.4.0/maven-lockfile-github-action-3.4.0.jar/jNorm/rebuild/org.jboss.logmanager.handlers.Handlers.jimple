public final class org.jboss.logmanager.handlers.Handlers extends java.lang.Object
{
private void <init>()
{
org.jboss.logmanager.handlers.Handlers v0;
v0 := @this: org.jboss.logmanager.handlers.Handlers;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static org.jboss.logmanager.handlers.FlushableCloseable wrap(java.util.logging.Handler)
{
org.jboss.logmanager.handlers.Handlers$1 v2;
java.util.logging.Handler v0;
boolean v1;
v0 := @parameter0: java.util.logging.Handler;
v1 = v0 instanceof org.jboss.logmanager.handlers.FlushableCloseable;
if v1 != 0 goto label1;
v2 = new org.jboss.logmanager.handlers.Handlers$1;
v0 = v2;
specialinvoke v2.<org.jboss.logmanager.handlers.Handlers$1: void <init>(java.util.logging.Handler)>(v2);
label1:
return v0;
}
public static java.lang.Runnable flusher(java.util.logging.Handler)
{
java.util.logging.Handler v0;
org.jboss.logmanager.handlers.Handlers$2 v1;
v0 := @parameter0: java.util.logging.Handler;
v1 = new org.jboss.logmanager.handlers.Handlers$2;
specialinvoke v1.<org.jboss.logmanager.handlers.Handlers$2: void <init>(java.util.logging.Handler)>(v0);
return v1;
}
}