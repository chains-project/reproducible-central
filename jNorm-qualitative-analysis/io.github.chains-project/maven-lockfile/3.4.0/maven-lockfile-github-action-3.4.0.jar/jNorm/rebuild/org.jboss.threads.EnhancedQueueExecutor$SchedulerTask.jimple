final class org.jboss.threads.EnhancedQueueExecutor$SchedulerTask extends java.lang.Object implements java.lang.Runnable
{
final long startMark;
final java.util.concurrent.locks.ReentrantLock ql;
final java.util.concurrent.locks.Condition qc;
org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue q;
boolean shutdownDetected;
final org.jboss.threads.EnhancedQueueExecutor this$0;
void <init>(org.jboss.threads.EnhancedQueueExecutor)
{
java.util.concurrent.locks.Condition v5;
org.jboss.threads.EnhancedQueueExecutor v1;
java.util.concurrent.locks.ReentrantLock v3, v4;
long v2;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v0;
org.jboss.threads.EnhancedQueueExecutor$TreeSetQueue v6;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor;
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.lang.System: long nanoTime()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: long startMark> = v2;
v3 = new java.util.concurrent.locks.ReentrantLock;
specialinvoke v3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql> = v3;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
v5 = virtualinvoke v4.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.Condition qc> = v5;
v6 = new org.jboss.threads.EnhancedQueueExecutor$TreeSetQueue;
specialinvoke v6.<org.jboss.threads.EnhancedQueueExecutor$TreeSetQueue: void <init>()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue q> = v6;
return;
}
void shutdown()
{
java.lang.Throwable v4;
java.util.concurrent.locks.Condition v2;
java.util.concurrent.locks.ReentrantLock v1, v3, v5;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v1.<java.util.concurrent.locks.ReentrantLock: void lock()>();
label1:
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: boolean shutdownDetected> = 1;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.Condition qc>;
interfaceinvoke v2.<java.util.concurrent.locks.Condition: void signal()>();
label2:
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
goto label4;
label3:
v4 := @caughtexception;
v5 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void run()
{
java.lang.Throwable v20;
long v12, v13, v14, v16, v2, v4;
byte v15;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v11, v25;
int v22, v23, v24;
boolean v5, v8;
java.util.concurrent.locks.ReentrantLock v19, v21, v3, v7;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v6;
java.util.concurrent.locks.Condition v17, v9;
org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue v1;
java.lang.InterruptedException v10, v18;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue q>;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: long startMark>;
label01:
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v3.<java.util.concurrent.locks.ReentrantLock: void lock()>();
label02:
v4 = staticinvoke <java.lang.System: long nanoTime()>();
v5 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: boolean shutdownDetected>;
if v5 == 0 goto label04;
v6 = interfaceinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] toArray()>();
interfaceinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: void clear()>();
label03:
v7 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
goto label16;
label04:
v8 = interfaceinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: boolean isEmpty()>();
if v8 == 0 goto label08;
label05:
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.Condition qc>;
interfaceinvoke v9.<java.util.concurrent.locks.Condition: void await()>();
label06:
goto label02;
label07:
v10 := @caughtexception;
goto label02;
label08:
v11 = interfaceinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture first()>();
v12 = v11.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long when>;
v13 = v4 - v2;
v14 = staticinvoke <java.lang.Math: long max(long,long)>(0L, v13);
v15 = v12 cmp v14;
if v15 > 0 goto label09;
interfaceinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture pollFirst()>();
goto label13;
label09:
v16 = v12 - v14;
label10:
v17 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.Condition qc>;
interfaceinvoke v17.<java.util.concurrent.locks.Condition: long awaitNanos(long)>(v16);
label11:
goto label02;
label12:
v18 := @caughtexception;
goto label02;
label13:
v19 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v19.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
goto label15;
label14:
v20 := @caughtexception;
v21 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v21.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
throw v20;
label15:
virtualinvoke v11.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void submit()>();
goto label01;
label16:
v22 = lengthof v6;
if v22 <= 0 goto label18;
v23 = lengthof v6;
v24 = 0;
label17:
if v24 >= v23 goto label18;
v25 = v6[v24];
virtualinvoke v25.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: boolean cancel(boolean)>(1);
v24 = v24 + 1;
goto label17;
label18:
return;
catch java.lang.InterruptedException from label05 to label06 with label07;
catch java.lang.InterruptedException from label10 to label11 with label12;
catch java.lang.Throwable from label02 to label03 with label14;
catch java.lang.Throwable from label04 to label13 with label14;
}
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture schedule(org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
java.lang.Throwable v17;
org.jboss.threads.EnhancedQueueExecutor v8;
long v3, v4;
byte v5;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v1;
boolean v11, v7;
java.util.concurrent.locks.ReentrantLock v16, v18, v6, v9;
java.util.concurrent.locks.Condition v15;
org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue v10, v13, v14;
org.jboss.threads.EnhancedQueueExecutor$Task v2;
org.jboss.threads.EnhancedQueueExecutor$QueueFullException v12;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v2 = v1.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask>;
v3 = v1.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long when>;
v4 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: long age()>();
v5 = v3 cmp v4;
if v5 > 0 goto label1;
virtualinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void submit()>();
return v1;
label1:
v6 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v6.<java.util.concurrent.locks.ReentrantLock: void lock()>();
label2:
v7 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: boolean shutdownDetected>;
if v7 == 0 goto label4;
v8 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v8.<org.jboss.threads.EnhancedQueueExecutor: void rejectShutdown(org.jboss.threads.EnhancedQueueExecutor$Task)>(v2);
label3:
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
return v1;
label4:
v10 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue q>;
v11 = interfaceinvoke v10.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: boolean insertAndCheckForFirst(org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)>(v1);
label5:
goto label7;
label6:
v12 := @caughtexception;
v13 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue q>;
v14 = interfaceinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue: org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue grow()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue q> = v14;
goto label4;
label7:
if v11 == 0 goto label8;
v15 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.Condition qc>;
interfaceinvoke v15.<java.util.concurrent.locks.Condition: void signal()>();
label8:
v16 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v16.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
return v1;
label9:
v17 := @caughtexception;
v18 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: java.util.concurrent.locks.ReentrantLock ql>;
virtualinvoke v18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
throw v17;
catch org.jboss.threads.EnhancedQueueExecutor$QueueFullException from label4 to label5 with label6;
catch java.lang.Throwable from label2 to label3 with label9;
catch java.lang.Throwable from label4 to label8 with label9;
}
long age()
{
long v1, v2, v3;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask;
v1 = staticinvoke <java.lang.System: long nanoTime()>();
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: long startMark>;
v3 = v1 - v2;
return v3;
}
}