final class org.jboss.threads.EnhancedQueueExecutor$ThreadBody extends java.lang.Object implements java.lang.Runnable
{
private org.jboss.threads.EnhancedQueueExecutor$Task initialTask;
static final boolean $assertionsDisabled;
final org.jboss.threads.EnhancedQueueExecutor this$0;
void <init>(org.jboss.threads.EnhancedQueueExecutor, org.jboss.threads.EnhancedQueueExecutor$Task)
{
org.jboss.threads.EnhancedQueueExecutor v1;
org.jboss.threads.EnhancedQueueExecutor$Task v2;
org.jboss.threads.EnhancedQueueExecutor$ThreadBody v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ThreadBody;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor;
v2 := @parameter1: org.jboss.threads.EnhancedQueueExecutor$Task;
v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor$Task initialTask> = v2;
return;
}
public void run()
{
byte v31, v48;
java.lang.Thread v1;
java.util.Set v45, v5, v63;
org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode v13, v14, v8, v9;
org.jboss.threads.EnhancedQueueExecutor v2, v27, v29, v4, v42, v44, v47, v49, v50, v56, v62, v64;
long v15, v16, v28, v30, v51, v52, v57, v58;
java.lang.AssertionError v21, v55, v61;
java.lang.Runnable v12, v17, v19, v20, v22, v23, v24, v32, v35, v40, v54, v6, v7;
boolean v11, v18, v25, v26, v36, v37, v41, v43, v46, v53, v59, v60;
org.jboss.threads.EnhancedQueueExecutor$ThreadBody v0;
java.util.concurrent.atomic.LongAdder v3;
org.jboss.threads.EnhancedQueueExecutor$QNode v10;
int v33, v34, v38, v39;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ThreadBody;
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v3 = v2.<org.jboss.threads.EnhancedQueueExecutor: java.util.concurrent.atomic.LongAdder spinMisses>;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v5 = v4.<org.jboss.threads.EnhancedQueueExecutor: java.util.Set runningThreads>;
interfaceinvoke v5.<java.util.Set: boolean add(java.lang.Object)>(v1);
v6 = specialinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: java.lang.Runnable getAndClearInitialTask()>();
v7 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable nullToNop(java.lang.Runnable)>(v6);
interfaceinvoke v7.<java.lang.Runnable: void run()>();
v8 = new org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode;
specialinvoke v8.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void <init>(java.lang.Thread)>(v1);
v9 = v8;
label01:
v10 = specialinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor$QNode getOrAddNode(org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode)>(v9);
v11 = v10 instanceof org.jboss.threads.EnhancedQueueExecutor$TaskNode;
if v11 == 0 goto label02;
v12 = virtualinvoke v10.<org.jboss.threads.EnhancedQueueExecutor$TaskNode: java.lang.Runnable getAndClearTask()>();
interfaceinvoke v12.<java.lang.Runnable: void run()>();
goto label01;
label02:
if v10 != v9 goto label18;
v13 = v9;
v14 = new org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode;
specialinvoke v14.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void <init>(java.lang.Thread)>(v1);
v9 = v14;
v15 = staticinvoke <java.lang.System: long nanoTime()>();
v16 = 0L;
label03:
v17 = virtualinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: java.lang.Runnable getTask()>();
v18 = <org.jboss.threads.EnhancedQueueExecutor$ThreadBody: boolean $assertionsDisabled>;
if v18 != 0 goto label05;
v19 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable ACCEPTED>;
if v17 == v19 goto label04;
v20 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable GAVE_UP>;
if v17 == v20 goto label04;
if v17 != null goto label05;
label04:
v21 = new java.lang.AssertionError;
specialinvoke v21.<java.lang.AssertionError: void <init>()>();
throw v21;
label05:
v22 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable WAITING>;
if v17 == v22 goto label07;
v23 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable EXIT>;
if v17 == v23 goto label07;
v24 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable ACCEPTED>;
v25 = virtualinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: boolean compareAndSetTask(java.lang.Runnable,java.lang.Runnable)>(v17, v24);
if v25 == 0 goto label06;
interfaceinvoke v17.<java.lang.Runnable: void run()>();
goto label01;
label06:
v26 = <org.jboss.threads.EnhancedQueueExecutor: boolean UPDATE_STATISTICS>;
if v26 == 0 goto label03;
virtualinvoke v3.<java.util.concurrent.atomic.LongAdder: void increment()>();
goto label03;
label07:
v27 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v28 = v27.<org.jboss.threads.EnhancedQueueExecutor: long timeoutNanos>;
v29 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v30 = v29.<org.jboss.threads.EnhancedQueueExecutor: long threadStatus>;
v31 = v16 cmp v28;
if v31 >= 0 goto label08;
v32 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable EXIT>;
if v17 == v32 goto label08;
v33 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: int currentSizeOf(long)>(v30);
v34 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: int maxSizeOf(long)>(v30);
if v33 <= v34 goto label16;
label08:
v35 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable EXIT>;
if v17 == v35 goto label09;
v36 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: boolean isShutdownRequested(long)>(v30);
if v36 != 0 goto label09;
v37 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: boolean isAllowCoreTimeout(long)>(v30);
if v37 != 0 goto label09;
v38 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: int currentSizeOf(long)>(v30);
v39 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: int coreSizeOf(long)>(v30);
if v38 <= v39 goto label13;
label09:
v40 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable GAVE_UP>;
v41 = virtualinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: boolean compareAndSetTask(java.lang.Runnable,java.lang.Runnable)>(v17, v40);
if v41 == 0 goto label03;
label10:
v42 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v43 = virtualinvoke v42.<org.jboss.threads.EnhancedQueueExecutor: boolean tryDeallocateThread(long)>(v30);
if v43 == 0 goto label11;
v44 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v45 = v44.<org.jboss.threads.EnhancedQueueExecutor: java.util.Set runningThreads>;
interfaceinvoke v45.<java.util.Set: boolean remove(java.lang.Object)>(v1);
return;
label11:
v46 = <org.jboss.threads.EnhancedQueueExecutor: boolean UPDATE_STATISTICS>;
if v46 == 0 goto label12;
virtualinvoke v3.<java.util.concurrent.atomic.LongAdder: void increment()>();
label12:
v47 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v30 = v47.<org.jboss.threads.EnhancedQueueExecutor: long threadStatus>;
goto label10;
label13:
v48 = v16 cmp v28;
if v48 < 0 goto label14;
v49 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void park(org.jboss.threads.EnhancedQueueExecutor)>(v49);
goto label15;
label14:
v50 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v51 = v28 - v16;
virtualinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void park(org.jboss.threads.EnhancedQueueExecutor,long)>(v50, v51);
label15:
staticinvoke <java.lang.Thread: boolean interrupted()>();
v52 = staticinvoke <java.lang.System: long nanoTime()>();
v16 = v52 - v15;
goto label03;
label16:
v53 = <org.jboss.threads.EnhancedQueueExecutor$ThreadBody: boolean $assertionsDisabled>;
if v53 != 0 goto label17;
v54 = <org.jboss.threads.EnhancedQueueExecutor: java.lang.Runnable WAITING>;
if v17 == v54 goto label17;
v55 = new java.lang.AssertionError;
specialinvoke v55.<java.lang.AssertionError: void <init>()>();
throw v55;
label17:
v56 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v57 = v28 - v16;
virtualinvoke v13.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void park(org.jboss.threads.EnhancedQueueExecutor,long)>(v56, v57);
staticinvoke <java.lang.Thread: boolean interrupted()>();
v58 = staticinvoke <java.lang.System: long nanoTime()>();
v16 = v58 - v15;
goto label03;
label18:
v59 = <org.jboss.threads.EnhancedQueueExecutor$ThreadBody: boolean $assertionsDisabled>;
if v59 != 0 goto label19;
v60 = v10 instanceof org.jboss.threads.EnhancedQueueExecutor$TerminateWaiterNode;
if v60 != 0 goto label19;
v61 = new java.lang.AssertionError;
specialinvoke v61.<java.lang.AssertionError: void <init>()>();
throw v61;
label19:
v62 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v63 = v62.<org.jboss.threads.EnhancedQueueExecutor: java.util.Set runningThreads>;
interfaceinvoke v63.<java.util.Set: boolean remove(java.lang.Object)>(v1);
v64 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v64.<org.jboss.threads.EnhancedQueueExecutor: void deallocateThread()>();
return;
}
private org.jboss.threads.EnhancedQueueExecutor$QNode getOrAddNode(org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode)
{
java.util.concurrent.atomic.LongAdder v17;
org.jboss.threads.EnhancedQueueExecutor v16, v2, v6, v9;
org.jboss.threads.EnhancedQueueExecutor$QNode v4;
org.jboss.threads.EnhancedQueueExecutor$TaskNode v3;
java.lang.AssertionError v14;
boolean v10, v11, v12, v13, v15, v5, v7, v8;
org.jboss.threads.EnhancedQueueExecutor$ThreadBody v0;
org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode v1;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ThreadBody;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode;
label1:
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v3 = v2.<org.jboss.threads.EnhancedQueueExecutor: org.jboss.threads.EnhancedQueueExecutor$TaskNode head>;
v4 = virtualinvoke v3.<org.jboss.threads.EnhancedQueueExecutor$TaskNode: org.jboss.threads.EnhancedQueueExecutor$QNode getNext()>();
if v4 == v3 goto label8;
v5 = v4 instanceof org.jboss.threads.EnhancedQueueExecutor$TaskNode;
if v5 == 0 goto label3;
v6 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v7 = virtualinvoke v6.<org.jboss.threads.EnhancedQueueExecutor: boolean compareAndSetHead(org.jboss.threads.EnhancedQueueExecutor$TaskNode,org.jboss.threads.EnhancedQueueExecutor$TaskNode)>(v3, v4);
if v7 == 0 goto label8;
virtualinvoke v3.<org.jboss.threads.EnhancedQueueExecutor$TaskNode: void setNextOrdered(org.jboss.threads.EnhancedQueueExecutor$QNode)>(v3);
v8 = <org.jboss.threads.EnhancedQueueExecutor: boolean NO_QUEUE_LIMIT>;
if v8 != 0 goto label2;
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v9.<org.jboss.threads.EnhancedQueueExecutor: void decreaseQueueSize()>();
label2:
return v4;
label3:
v10 = v4 instanceof org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode;
if v10 != 0 goto label4;
if v4 != null goto label6;
label4:
virtualinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void setNextRelaxed(org.jboss.threads.EnhancedQueueExecutor$QNode)>(v4);
v11 = virtualinvoke v3.<org.jboss.threads.EnhancedQueueExecutor$TaskNode: boolean compareAndSetNext(org.jboss.threads.EnhancedQueueExecutor$QNode,org.jboss.threads.EnhancedQueueExecutor$QNode)>(v4, v1);
if v11 == 0 goto label5;
return v1;
label5:
if v4 == null goto label8;
virtualinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode: void setNextRelaxed(org.jboss.threads.EnhancedQueueExecutor$QNode)>(null);
goto label8;
label6:
v12 = <org.jboss.threads.EnhancedQueueExecutor$ThreadBody: boolean $assertionsDisabled>;
if v12 != 0 goto label7;
v13 = v4 instanceof org.jboss.threads.EnhancedQueueExecutor$TerminateWaiterNode;
if v13 != 0 goto label7;
v14 = new java.lang.AssertionError;
specialinvoke v14.<java.lang.AssertionError: void <init>()>();
throw v14;
label7:
return v4;
label8:
v15 = <org.jboss.threads.EnhancedQueueExecutor: boolean UPDATE_STATISTICS>;
if v15 == 0 goto label1;
v16 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor this$0>;
v17 = v16.<org.jboss.threads.EnhancedQueueExecutor: java.util.concurrent.atomic.LongAdder spinMisses>;
virtualinvoke v17.<java.util.concurrent.atomic.LongAdder: void increment()>();
goto label1;
}
private java.lang.Runnable getAndClearInitialTask()
{
org.jboss.threads.EnhancedQueueExecutor$Task v1;
org.jboss.threads.EnhancedQueueExecutor$ThreadBody v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ThreadBody;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor$Task initialTask>;
v0.<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: org.jboss.threads.EnhancedQueueExecutor$Task initialTask> = null;
return v1;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/jboss/threads/EnhancedQueueExecutor;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.jboss.threads.EnhancedQueueExecutor$ThreadBody: boolean $assertionsDisabled> = v2;
return;
}
}