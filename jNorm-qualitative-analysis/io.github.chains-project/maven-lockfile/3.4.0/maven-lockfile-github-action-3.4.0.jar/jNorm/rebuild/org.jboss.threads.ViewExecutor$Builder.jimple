public final class org.jboss.threads.ViewExecutor$Builder extends java.lang.Object
{
private final java.util.concurrent.Executor delegate;
private int maxSize;
private int queueLimit;
private java.lang.Thread$UncaughtExceptionHandler handler;
void <init>(java.util.concurrent.Executor)
{
org.jboss.threads.ViewExecutor$Builder v0;
java.lang.Thread$UncaughtExceptionHandler v2;
java.util.concurrent.Executor v1;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 := @parameter0: java.util.concurrent.Executor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.threads.ViewExecutor$Builder: int maxSize> = 1;
v0.<org.jboss.threads.ViewExecutor$Builder: int queueLimit> = 2147483647;
v2 = staticinvoke <org.jboss.threads.JBossExecutors: java.lang.Thread$UncaughtExceptionHandler loggingExceptionHandler()>();
v0.<org.jboss.threads.ViewExecutor$Builder: java.lang.Thread$UncaughtExceptionHandler handler> = v2;
v0.<org.jboss.threads.ViewExecutor$Builder: java.util.concurrent.Executor delegate> = v1;
return;
}
public int getMaxSize()
{
int v1;
org.jboss.threads.ViewExecutor$Builder v0;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 = v0.<org.jboss.threads.ViewExecutor$Builder: int maxSize>;
return v1;
}
public org.jboss.threads.ViewExecutor$Builder setMaxSize(int)
{
int v1;
org.jboss.threads.ViewExecutor$Builder v0;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 := @parameter0: int;
staticinvoke <org.wildfly.common.Assert: void checkMinimumParameter(java.lang.String,int,int)>("maxSize", 1, v1);
v0.<org.jboss.threads.ViewExecutor$Builder: int maxSize> = v1;
return v0;
}
public int getQueueLimit()
{
int v1;
org.jboss.threads.ViewExecutor$Builder v0;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 = v0.<org.jboss.threads.ViewExecutor$Builder: int queueLimit>;
return v1;
}
public org.jboss.threads.ViewExecutor$Builder setQueueLimit(int)
{
int v1;
org.jboss.threads.ViewExecutor$Builder v0;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 := @parameter0: int;
staticinvoke <org.wildfly.common.Assert: void checkMinimumParameter(java.lang.String,int,int)>("queueLimit", 0, v1);
v0.<org.jboss.threads.ViewExecutor$Builder: int queueLimit> = v1;
return v0;
}
public java.util.concurrent.Executor getDelegate()
{
org.jboss.threads.ViewExecutor$Builder v0;
java.util.concurrent.Executor v1;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 = v0.<org.jboss.threads.ViewExecutor$Builder: java.util.concurrent.Executor delegate>;
return v1;
}
public java.lang.Thread$UncaughtExceptionHandler getUncaughtHandler()
{
org.jboss.threads.ViewExecutor$Builder v0;
java.lang.Thread$UncaughtExceptionHandler v1;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 = v0.<org.jboss.threads.ViewExecutor$Builder: java.lang.Thread$UncaughtExceptionHandler handler>;
return v1;
}
public org.jboss.threads.ViewExecutor$Builder setUncaughtHandler(java.lang.Thread$UncaughtExceptionHandler)
{
org.jboss.threads.ViewExecutor$Builder v0;
java.lang.Thread$UncaughtExceptionHandler v1;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;
v0.<org.jboss.threads.ViewExecutor$Builder: java.lang.Thread$UncaughtExceptionHandler handler> = v1;
return v0;
}
public int getQueueInitialSize()
{
org.jboss.threads.ViewExecutor$Builder v0;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
return 0;
}
public org.jboss.threads.ViewExecutor$Builder setQueueInitialSize(int)
{
int v1;
org.jboss.threads.ViewExecutor$Builder v0;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 := @parameter0: int;
return v0;
}
public org.jboss.threads.ViewExecutor build()
{
java.lang.Thread$UncaughtExceptionHandler v6;
java.util.concurrent.Executor v2;
int v4, v5;
org.jboss.threads.ViewExecutor$Builder v0;
java.lang.Object v3;
org.jboss.threads.EnhancedViewExecutor v1;
v0 := @this: org.jboss.threads.ViewExecutor$Builder;
v1 = new org.jboss.threads.EnhancedViewExecutor;
v2 = v0.<org.jboss.threads.ViewExecutor$Builder: java.util.concurrent.Executor delegate>;
v3 = staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("delegate", v2);
v4 = v0.<org.jboss.threads.ViewExecutor$Builder: int maxSize>;
v5 = v0.<org.jboss.threads.ViewExecutor$Builder: int queueLimit>;
v6 = v0.<org.jboss.threads.ViewExecutor$Builder: java.lang.Thread$UncaughtExceptionHandler handler>;
specialinvoke v1.<org.jboss.threads.EnhancedViewExecutor: void <init>(java.util.concurrent.Executor,int,int,java.lang.Thread$UncaughtExceptionHandler)>(v3, v4, v5, v6);
return v1;
}
}