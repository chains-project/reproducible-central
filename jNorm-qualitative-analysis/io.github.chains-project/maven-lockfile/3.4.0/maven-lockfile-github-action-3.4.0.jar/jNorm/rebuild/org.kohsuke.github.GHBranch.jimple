public class org.kohsuke.github.GHBranch extends org.kohsuke.github.GitHubInteractiveObject
{
private org.kohsuke.github.GHRepository owner;
private java.lang.String name;
private org.kohsuke.github.GHBranch$Commit commit;
private boolean protection;
private java.lang.String protection_url;
void <init>(java.lang.String) throws java.lang.Exception
{
java.lang.String v1;
org.kohsuke.github.GHBranch v0;
v0 := @this: org.kohsuke.github.GHBranch;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.kohsuke.github.GHBranch: java.lang.String name> = v1;
return;
}
public org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHBranch v0;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner>;
return v1;
}
public java.lang.String getName()
{
java.lang.String v1;
org.kohsuke.github.GHBranch v0;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: java.lang.String name>;
return v1;
}
public boolean isProtected()
{
org.kohsuke.github.GHBranch v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: boolean protection>;
return v1;
}
public java.net.URL getProtectionUrl()
{
java.lang.String v1;
org.kohsuke.github.GHBranch v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: java.lang.String protection_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHBranchProtection getProtection() throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
org.kohsuke.github.GitHubRequest$Builder v4, v6;
org.kohsuke.github.GHBranch v0;
java.lang.Object v7;
java.lang.String v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews LUKE_CAGE>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = v0.<org.kohsuke.github.GHBranch: java.lang.String protection_url>;
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setRawUrlPath(java.lang.String)>(v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHBranchProtection;");
return v7;
}
public java.lang.String getSHA1()
{
java.lang.String v2;
org.kohsuke.github.GHBranch v0;
org.kohsuke.github.GHBranch$Commit v1;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHBranch$Commit commit>;
v2 = v1.<org.kohsuke.github.GHBranch$Commit: java.lang.String sha>;
return v2;
}
public void disableProtection() throws java.io.IOException
{
org.kohsuke.github.GHBranch v0;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = v0.<org.kohsuke.github.GHBranch: java.lang.String protection_url>;
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setRawUrlPath(java.lang.String)>(v4);
virtualinvoke v5.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.GHBranchProtectionBuilder enableProtection()
{
org.kohsuke.github.GHBranch v0;
org.kohsuke.github.GHBranchProtectionBuilder v1;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = new org.kohsuke.github.GHBranchProtectionBuilder;
specialinvoke v1.<org.kohsuke.github.GHBranchProtectionBuilder: void <init>(org.kohsuke.github.GHBranch)>(v0);
return v1;
}
public void enableProtection(org.kohsuke.github.EnforcementLevel, java.util.Collection) throws java.io.IOException
{
org.kohsuke.github.EnforcementLevel v1, v8;
java.util.Collection v2;
org.kohsuke.github.GHBranch v0;
int[] v3;
int v4, v5;
boolean v9;
org.kohsuke.github.GHBranchProtectionBuilder v10, v6, v7;
v0 := @this: org.kohsuke.github.GHBranch;
v1 := @parameter0: org.kohsuke.github.EnforcementLevel;
v2 := @parameter1: java.util.Collection;
v3 = <org.kohsuke.github.GHBranch$1: int[] $SwitchMap$org$kohsuke$github$EnforcementLevel>;
v4 = virtualinvoke v1.<org.kohsuke.github.EnforcementLevel: int ordinal()>();
v5 = v3[v4];
tableswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label2;
default: goto label5;
};
label1:
virtualinvoke v0.<org.kohsuke.github.GHBranch: void disableProtection()>();
goto label5;
label2:
v6 = virtualinvoke v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHBranchProtectionBuilder enableProtection()>();
v7 = virtualinvoke v6.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder addRequiredChecks(java.util.Collection)>(v2);
v8 = <org.kohsuke.github.EnforcementLevel: org.kohsuke.github.EnforcementLevel EVERYONE>;
if v1 != v8 goto label3;
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
v10 = virtualinvoke v7.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder includeAdmins(boolean)>(v9);
virtualinvoke v10.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtection enable()>();
label5:
return;
}
public org.kohsuke.github.GHCommit merge(org.kohsuke.github.GHBranch, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHBranch v0, v1;
java.lang.String v2, v3;
org.kohsuke.github.GHCommit v4;
v0 := @this: org.kohsuke.github.GHBranch;
v1 := @parameter0: org.kohsuke.github.GHBranch;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v1.<org.kohsuke.github.GHBranch: java.lang.String getName()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHCommit merge(java.lang.String,java.lang.String)>(v3, v2);
return v4;
}
public org.kohsuke.github.GHCommit merge(java.lang.String, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHRepository v15, v5;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v10, v12, v13, v8, v9;
org.kohsuke.github.GHBranch v0;
java.lang.String v1, v11, v2, v6;
org.kohsuke.github.GitHub v3;
java.lang.Object v14;
org.kohsuke.github.Requester v4;
v0 := @this: org.kohsuke.github.GHBranch;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner>;
v6 = virtualinvoke v5.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>("merges");
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("commit_message", v2);
v11 = v0.<org.kohsuke.github.GHBranch: java.lang.String name>;
v12 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("base", v11);
v13 = virtualinvoke v12.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("head", v1);
v14 = virtualinvoke v13.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHCommit;");
if v14 == null goto label1;
v15 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner>;
virtualinvoke v14.<org.kohsuke.github.GHCommit: org.kohsuke.github.GHCommit wrapUp(org.kohsuke.github.GHRepository)>(v15);
label1:
return v14;
}
java.lang.String getApiRoute()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHBranch v0;
java.lang.String v2, v3, v4;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner>;
v2 = v0.<org.kohsuke.github.GHBranch: java.lang.String name>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/branches/\u0001");
v4 = virtualinvoke v1.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v3);
return v4;
}
public java.lang.String toString()
{
org.kohsuke.github.GHRepository v1, v2;
org.kohsuke.github.GHBranch v0;
java.net.URL v3;
java.lang.String v4, v5, v6;
v0 := @this: org.kohsuke.github.GHBranch;
v1 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHRepository: java.net.URL getUrl()>();
v4 = virtualinvoke v3.<java.net.URL: java.lang.String toString()>();
goto label2;
label1:
v4 = "unknown";
label2:
v5 = v0.<org.kohsuke.github.GHBranch: java.lang.String name>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v5, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Branch:\u0001 in \u0001");
return v6;
}
org.kohsuke.github.GHBranch wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHBranch v0;
v0 := @this: org.kohsuke.github.GHBranch;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHBranch: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
}