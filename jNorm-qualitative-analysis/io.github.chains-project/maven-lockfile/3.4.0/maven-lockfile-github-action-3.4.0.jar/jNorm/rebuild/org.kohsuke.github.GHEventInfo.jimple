public class org.kohsuke.github.GHEventInfo extends org.kohsuke.github.GitHubInteractiveObject
{
private com.fasterxml.jackson.databind.node.ObjectNode payload;
private long id;
private java.lang.String created_at;
private java.lang.String type;
private org.kohsuke.github.GHEventInfo$GHEventRepository repo;
private org.kohsuke.github.GHUser actor;
private org.kohsuke.github.GHOrganization org;
static final java.util.Map mapTypeStringToEvent;
public void <init>()
{
org.kohsuke.github.GHEventInfo v0;
v0 := @this: org.kohsuke.github.GHEventInfo;
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>()>();
return;
}
private static java.util.Map createEventMap()
{
java.util.HashMap v0;
java.util.Map v16;
org.kohsuke.github.GHEvent v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
v1 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent COMMIT_COMMENT>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CommitCommentEvent", v1);
v2 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent CREATE>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CreateEvent", v2);
v3 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent DELETE>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("DeleteEvent", v3);
v4 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent FORK>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ForkEvent", v4);
v5 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent GOLLUM>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GollumEvent", v5);
v6 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent ISSUE_COMMENT>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IssueCommentEvent", v6);
v7 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent ISSUES>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IssuesEvent", v7);
v8 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent MEMBER>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MemberEvent", v8);
v9 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent PUBLIC>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PublicEvent", v9);
v10 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent PULL_REQUEST>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PullRequestEvent", v10);
v11 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent PULL_REQUEST_REVIEW>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PullRequestReviewEvent", v11);
v12 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent PULL_REQUEST_REVIEW_COMMENT>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PullRequestReviewCommentEvent", v12);
v13 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent PUSH>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PushEvent", v13);
v14 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent RELEASE>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ReleaseEvent", v14);
v15 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent WATCH>;
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WatchEvent", v15);
v16 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v0);
return v16;
}
static org.kohsuke.github.GHEvent transformTypeToGHEvent(java.lang.String)
{
org.kohsuke.github.GHEvent v2;
java.util.Map v1;
java.lang.Object v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = <org.kohsuke.github.GHEventInfo: java.util.Map mapTypeStringToEvent>;
v2 = <org.kohsuke.github.GHEvent: org.kohsuke.github.GHEvent UNKNOWN>;
v3 = interfaceinvoke v1.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(v0, v2);
return v3;
}
public org.kohsuke.github.GHEvent getType()
{
java.lang.String v1;
org.kohsuke.github.GHEventInfo v0;
org.kohsuke.github.GHEvent v2;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = v0.<org.kohsuke.github.GHEventInfo: java.lang.String type>;
v2 = staticinvoke <org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHEvent transformTypeToGHEvent(java.lang.String)>(v1);
return v2;
}
public long getId()
{
long v1;
org.kohsuke.github.GHEventInfo v0;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = v0.<org.kohsuke.github.GHEventInfo: long id>;
return v1;
}
public java.util.Date getCreatedAt()
{
java.lang.String v1;
org.kohsuke.github.GHEventInfo v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = v0.<org.kohsuke.github.GHEventInfo: java.lang.String created_at>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHRepository getRepository() throws java.io.IOException
{
org.kohsuke.github.GHRepository v4;
java.lang.String v3;
org.kohsuke.github.GHEventInfo v0;
org.kohsuke.github.GHEventInfo$GHEventRepository v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = virtualinvoke v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GitHub root()>();
v2 = v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHEventInfo$GHEventRepository repo>;
v3 = v2.<org.kohsuke.github.GHEventInfo$GHEventRepository: java.lang.String name>;
v4 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.GHRepository getRepository(java.lang.String)>(v3);
return v4;
}
public org.kohsuke.github.GHUser getActor() throws java.io.IOException
{
org.kohsuke.github.GHUser v2, v4;
java.lang.String v3;
org.kohsuke.github.GHEventInfo v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = virtualinvoke v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GitHub root()>();
v2 = v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHUser actor>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v4 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.GHUser getUser(java.lang.String)>(v3);
return v4;
}
public java.lang.String getActorLogin() throws java.io.IOException
{
java.lang.String v2;
org.kohsuke.github.GHEventInfo v0;
org.kohsuke.github.GHUser v1;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHUser actor>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
return v2;
}
public org.kohsuke.github.GHOrganization getOrganization() throws java.io.IOException
{
org.kohsuke.github.GHEventInfo v0;
org.kohsuke.github.GHOrganization v1, v2, v4, v6;
java.lang.String v3, v7;
org.kohsuke.github.GitHub v5;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 = v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHOrganization org>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHOrganization org>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHOrganization: java.lang.String getLogin()>();
if v3 != null goto label2;
label1:
v4 = null;
goto label3;
label2:
v5 = virtualinvoke v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GitHub root()>();
v6 = v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GHOrganization org>;
v7 = virtualinvoke v6.<org.kohsuke.github.GHOrganization: java.lang.String getLogin()>();
v4 = virtualinvoke v5.<org.kohsuke.github.GitHub: org.kohsuke.github.GHOrganization getOrganization(java.lang.String)>(v7);
label3:
return v4;
}
public org.kohsuke.github.GHEventPayload getPayload(java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.ObjectReader v3;
com.fasterxml.jackson.core.JsonParser v5;
java.lang.Class v1;
java.lang.Object v6;
org.kohsuke.github.GHEventInfo v0;
com.fasterxml.jackson.databind.node.ObjectNode v4;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHEventInfo;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<org.kohsuke.github.GHEventInfo: org.kohsuke.github.GitHub root()>();
v3 = staticinvoke <org.kohsuke.github.GitHubClient: com.fasterxml.jackson.databind.ObjectReader getMappingObjectReader(org.kohsuke.github.GitHub)>(v2);
v4 = v0.<org.kohsuke.github.GHEventInfo: com.fasterxml.jackson.databind.node.ObjectNode payload>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.core.JsonParser traverse()>();
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.ObjectReader: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)>(v5, v1);
virtualinvoke v6.<org.kohsuke.github.GHEventPayload: void lateBind()>();
return v6;
}
static void <clinit>()
{
java.util.Map v0;
v0 = staticinvoke <org.kohsuke.github.GHEventInfo: java.util.Map createEventMap()>();
<org.kohsuke.github.GHEventInfo: java.util.Map mapTypeStringToEvent> = v0;
return;
}
}