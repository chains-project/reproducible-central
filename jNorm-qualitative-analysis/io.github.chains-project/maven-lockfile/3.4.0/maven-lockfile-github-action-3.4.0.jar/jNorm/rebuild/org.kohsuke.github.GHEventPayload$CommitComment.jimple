public class org.kohsuke.github.GHEventPayload$CommitComment extends org.kohsuke.github.GHEventPayload
{
private org.kohsuke.github.GHCommitComment comment;
public void <init>()
{
org.kohsuke.github.GHEventPayload$CommitComment v0;
v0 := @this: org.kohsuke.github.GHEventPayload$CommitComment;
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void <init>()>();
return;
}
public org.kohsuke.github.GHCommitComment getComment()
{
org.kohsuke.github.GHEventPayload$CommitComment v0;
org.kohsuke.github.GHCommitComment v1;
v0 := @this: org.kohsuke.github.GHEventPayload$CommitComment;
v1 = v0.<org.kohsuke.github.GHEventPayload$CommitComment: org.kohsuke.github.GHCommitComment comment>;
return v1;
}
public void setComment(org.kohsuke.github.GHCommitComment)
{
org.kohsuke.github.GHEventPayload$CommitComment v0;
java.lang.RuntimeException v2;
org.kohsuke.github.GHCommitComment v1;
v0 := @this: org.kohsuke.github.GHEventPayload$CommitComment;
v1 := @parameter0: org.kohsuke.github.GHCommitComment;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
void lateBind()
{
org.kohsuke.github.GHEventPayload$CommitComment v0;
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHCommitComment v2;
v0 := @this: org.kohsuke.github.GHEventPayload$CommitComment;
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void lateBind()>();
v1 = virtualinvoke v0.<org.kohsuke.github.GHEventPayload$CommitComment: org.kohsuke.github.GHRepository getRepository()>();
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHEventPayload$CommitComment: org.kohsuke.github.GHCommitComment comment>;
virtualinvoke v2.<org.kohsuke.github.GHCommitComment: org.kohsuke.github.GHCommitComment wrap(org.kohsuke.github.GHRepository)>(v1);
label1:
return;
}
}