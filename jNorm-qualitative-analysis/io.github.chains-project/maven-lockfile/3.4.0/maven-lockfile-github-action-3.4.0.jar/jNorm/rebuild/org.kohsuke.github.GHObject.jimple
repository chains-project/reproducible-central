public abstract class org.kohsuke.github.GHObject extends org.kohsuke.github.GitHubInteractiveObject
{
protected transient java.util.Map responseHeaderFields;
private java.lang.String url;
private long id;
private java.lang.String nodeId;
private java.lang.String createdAt;
private java.lang.String updatedAt;
private static final org.apache.commons.lang3.builder.ToStringStyle TOSTRING_STYLE;
void <init>()
{
org.kohsuke.github.GHObject v0;
v0 := @this: org.kohsuke.github.GHObject;
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>()>();
return;
}
protected void setResponseHeaderFields(org.kohsuke.github.connector.GitHubConnectorResponse)
{
org.kohsuke.github.connector.GitHubConnectorResponse v1;
org.kohsuke.github.GHObject v0;
java.util.Map v2;
v0 := @this: org.kohsuke.github.GHObject;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorResponse;
if v1 == null goto label1;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.util.Map allHeaders()>();
v0.<org.kohsuke.github.GHObject: java.util.Map responseHeaderFields> = v2;
label1:
return;
}
public java.util.Map getResponseHeaderFields()
{
org.kohsuke.github.GHObject v0;
java.util.Map v1, v2;
v0 := @this: org.kohsuke.github.GHObject;
v1 = v0.<org.kohsuke.github.GHObject: java.util.Map responseHeaderFields>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Map unmodifiableMapOrNull(java.util.Map)>(v1);
return v2;
}
public java.util.Date getCreatedAt() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHObject v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHObject;
v1 = v0.<org.kohsuke.github.GHObject: java.lang.String createdAt>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
private java.lang.Object createdAtStr(java.util.Date, java.lang.Class)
{
org.kohsuke.github.GHObject v0;
java.util.Date v1;
java.lang.Class v2;
java.lang.String v3;
v0 := @this: org.kohsuke.github.GHObject;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: java.lang.Class;
v3 = v0.<org.kohsuke.github.GHObject: java.lang.String createdAt>;
return v3;
}
public java.net.URL getUrl()
{
java.lang.String v1;
org.kohsuke.github.GHObject v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHObject;
v1 = v0.<org.kohsuke.github.GHObject: java.lang.String url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public abstract java.net.URL getHtmlUrl() throws java.io.IOException;
public java.util.Date getUpdatedAt() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHObject v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHObject;
v1 = v0.<org.kohsuke.github.GHObject: java.lang.String updatedAt>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public java.lang.String getNodeId()
{
java.lang.String v1;
org.kohsuke.github.GHObject v0;
v0 := @this: org.kohsuke.github.GHObject;
v1 = v0.<org.kohsuke.github.GHObject: java.lang.String nodeId>;
return v1;
}
public long getId()
{
long v1;
org.kohsuke.github.GHObject v0;
v0 := @this: org.kohsuke.github.GHObject;
v1 = v0.<org.kohsuke.github.GHObject: long id>;
return v1;
}
private java.lang.Object longToStringOrInt(long, java.lang.Class)
{
org.kohsuke.github.GHObject v0;
long v1;
java.lang.AssertionError v6;
java.lang.Integer v5;
java.lang.Class v2, v4;
java.lang.String v3, v7;
v0 := @this: org.kohsuke.github.GHObject;
v1 := @parameter0: long;
v2 := @parameter1: java.lang.Class;
if v2 != class "Ljava/lang/String;" goto label1;
v3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(v1);
return v3;
label1:
v4 = <java.lang.Integer: java.lang.Class TYPE>;
if v2 != v4 goto label2;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
return v5;
label2:
v6 = new java.lang.AssertionError;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected type: \u0001");
specialinvoke v6.<java.lang.AssertionError: void <init>(java.lang.Object)>(v7);
throw v6;
}
private java.lang.Object urlToString(java.net.URL, java.lang.Class)
{
org.kohsuke.github.GHObject v0;
java.net.URL v1;
java.lang.Class v2;
java.lang.String v3;
v0 := @this: org.kohsuke.github.GHObject;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: java.lang.Class;
if v1 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v1.<java.net.URL: java.lang.String toString()>();
label2:
return v3;
}
public java.lang.String toString()
{
org.kohsuke.github.GHObject$1 v1;
org.kohsuke.github.GHObject v0;
org.apache.commons.lang3.builder.ToStringStyle v2;
java.lang.String v3;
v0 := @this: org.kohsuke.github.GHObject;
v1 = new org.kohsuke.github.GHObject$1;
v2 = <org.kohsuke.github.GHObject: org.apache.commons.lang3.builder.ToStringStyle TOSTRING_STYLE>;
specialinvoke v1.<org.kohsuke.github.GHObject$1: void <init>(org.kohsuke.github.GHObject,java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean)>(v0, v0, v2, null, null, 0, 0);
v3 = virtualinvoke v1.<org.kohsuke.github.GHObject$1: java.lang.String toString()>();
return v3;
}
static void <clinit>()
{
org.kohsuke.github.GHObject$2 v0;
v0 = new org.kohsuke.github.GHObject$2;
specialinvoke v0.<org.kohsuke.github.GHObject$2: void <init>()>();
<org.kohsuke.github.GHObject: org.apache.commons.lang3.builder.ToStringStyle TOSTRING_STYLE> = v0;
return;
}
}