public class org.kohsuke.github.GHProjectColumn extends org.kohsuke.github.GHObject
{
protected org.kohsuke.github.GHProject project;
private java.lang.String name;
private java.lang.String project_url;
public void <init>()
{
org.kohsuke.github.GHProjectColumn v0;
v0 := @this: org.kohsuke.github.GHProjectColumn;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public java.net.URL getHtmlUrl() throws java.io.IOException
{
org.kohsuke.github.GHProjectColumn v0;
v0 := @this: org.kohsuke.github.GHProjectColumn;
return null;
}
public org.kohsuke.github.GHProjectColumn wrap(org.kohsuke.github.GitHub)
{
org.kohsuke.github.GHProjectColumn v0;
java.lang.RuntimeException v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
org.kohsuke.github.GHProjectColumn lateBind(org.kohsuke.github.GitHub)
{
org.kohsuke.github.GHProjectColumn v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: org.kohsuke.github.GitHub;
return v0;
}
public org.kohsuke.github.GHProjectColumn wrap(org.kohsuke.github.GHProject)
{
org.kohsuke.github.GHProjectColumn v0;
java.lang.RuntimeException v2;
org.kohsuke.github.GHProject v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: org.kohsuke.github.GHProject;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
org.kohsuke.github.GHProjectColumn lateBind(org.kohsuke.github.GHProject)
{
org.kohsuke.github.GHProjectColumn v0, v3;
org.kohsuke.github.GHProject v1;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: org.kohsuke.github.GHProject;
v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProject project> = v1;
v2 = virtualinvoke v1.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProjectColumn lateBind(org.kohsuke.github.GitHub)>(v2);
return v3;
}
public org.kohsuke.github.GHProject getProject() throws java.io.IOException
{
java.net.URL v4;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.io.FileNotFoundException v9;
org.kohsuke.github.GHProjectColumn v0;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.GHProject v1, v10;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 = v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProject project>;
if v1 != null goto label4;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: java.net.URL getProjectUrl()>();
v5 = virtualinvoke v4.<java.net.URL: java.lang.String getPath()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProject;");
v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProject project> = v8;
label2:
goto label4;
label3:
v9 := @caughtexception;
label4:
v10 = v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProject project>;
return v10;
catch java.io.FileNotFoundException from label1 to label2 with label3;
}
public java.lang.String getName()
{
org.kohsuke.github.GHProjectColumn v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 = v0.<org.kohsuke.github.GHProjectColumn: java.lang.String name>;
return v1;
}
public java.net.URL getProjectUrl()
{
org.kohsuke.github.GHProjectColumn v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 = v0.<org.kohsuke.github.GHProjectColumn: java.lang.String project_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public void setName(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHProjectColumn v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHProjectColumn: void edit(java.lang.String,java.lang.Object)>("name", v1);
return;
}
private void edit(java.lang.String, java.lang.Object) throws java.io.IOException
{
org.kohsuke.github.internal.Previews v6;
java.lang.String[] v10;
org.kohsuke.github.GitHubRequest$Builder v11, v5, v7, v8;
org.kohsuke.github.GHProjectColumn v0;
java.lang.Object v2;
java.lang.String v1, v9;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>(v1, v2);
v9 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: java.lang.String getApiRoute()>();
v10 = newarray (java.lang.String)[0];
v11 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v9, v10);
virtualinvoke v11.<org.kohsuke.github.Requester: void send()>();
return;
}
protected java.lang.String getApiRoute()
{
org.kohsuke.github.GHProjectColumn v0;
java.lang.Object[] v1;
java.lang.Long v3;
long v2;
java.lang.String v4;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 = newarray (java.lang.Object)[1];
v2 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: long getId()>();
v3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v2);
v1[0] = v3;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/columns/%d", v1);
return v4;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v4, v5, v8;
org.kohsuke.github.GHProjectColumn v0;
java.lang.String v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v6 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: java.lang.String getApiRoute()>();
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
virtualinvoke v8.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.PagedIterable listCards() throws java.io.IOException
{
java.lang.Object[] v5;
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v9;
long v6;
org.kohsuke.github.GitHubRequest$Builder v10, v4;
java.util.function.Consumer v11;
org.kohsuke.github.GHProjectColumn v0;
java.lang.Long v7;
java.lang.String v8;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v12;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = newarray (java.lang.Object)[1];
v6 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: long getId()>();
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v6);
v5[0] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/columns/%d/cards", v5);
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
v11 = staticinvoke <org.kohsuke.github.GHProjectColumn$lambda_listCards_0__71: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHProjectColumn)>(v0);
v12 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHProjectCard;", v11);
return v12;
}
public org.kohsuke.github.GHProjectCard createCard(java.lang.String) throws java.io.IOException
{
java.lang.Object[] v8;
java.lang.String[] v12;
long v9;
org.kohsuke.github.GitHubRequest$Builder v13, v4, v6, v7;
java.lang.Long v10;
java.lang.String v1, v11;
org.kohsuke.github.GitHub v2;
org.kohsuke.github.internal.Previews v5;
org.kohsuke.github.GHProjectColumn v0;
org.kohsuke.github.GHProjectCard v15;
java.lang.Object v14;
org.kohsuke.github.Requester v3;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v5 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note", v1);
v8 = newarray (java.lang.Object)[1];
v9 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: long getId()>();
v10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v9);
v8[0] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/columns/%d/cards", v8);
v12 = newarray (java.lang.String)[0];
v13 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v11, v12);
v14 = virtualinvoke v13.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProjectCard;");
v15 = virtualinvoke v14.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectCard lateBind(org.kohsuke.github.GHProjectColumn)>(v0);
return v15;
}
public org.kohsuke.github.GHProjectCard createCard(org.kohsuke.github.GHIssue) throws java.io.IOException
{
java.lang.Object[] v12;
java.lang.String[] v16;
long v10, v13;
org.kohsuke.github.GitHubRequest$Builder v11, v17, v6, v8, v9;
java.lang.Long v14;
java.lang.String v15, v3;
org.kohsuke.github.GitHub v4;
boolean v2;
org.kohsuke.github.GHIssue v1;
org.kohsuke.github.internal.Previews v7;
org.kohsuke.github.GHProjectColumn v0;
org.kohsuke.github.GHProjectCard v19;
java.lang.Object v18;
org.kohsuke.github.Requester v5;
v0 := @this: org.kohsuke.github.GHProjectColumn;
v1 := @parameter0: org.kohsuke.github.GHIssue;
v2 = v1 instanceof org.kohsuke.github.GHPullRequest;
if v2 == 0 goto label1;
v3 = "PullRequest";
goto label2;
label1:
v3 = "Issue";
label2:
v4 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v7 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v8 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v7);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("content_type", v3);
v10 = virtualinvoke v1.<org.kohsuke.github.GHIssue: long getId()>();
v11 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,long)>("content_id", v10);
v12 = newarray (java.lang.Object)[1];
v13 = virtualinvoke v0.<org.kohsuke.github.GHProjectColumn: long getId()>();
v14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v13);
v12[0] = v14;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/columns/%d/cards", v12);
v16 = newarray (java.lang.String)[0];
v17 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v15, v16);
v18 = virtualinvoke v17.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProjectCard;");
v19 = virtualinvoke v18.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectCard lateBind(org.kohsuke.github.GHProjectColumn)>(v0);
return v19;
}
}