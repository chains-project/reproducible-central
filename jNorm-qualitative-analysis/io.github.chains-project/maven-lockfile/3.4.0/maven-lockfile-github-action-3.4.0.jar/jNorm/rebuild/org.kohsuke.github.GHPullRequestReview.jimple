public class org.kohsuke.github.GHPullRequestReview extends org.kohsuke.github.GHObject
{
org.kohsuke.github.GHPullRequest owner;
private java.lang.String body;
private org.kohsuke.github.GHUser user;
private java.lang.String commit_id;
private org.kohsuke.github.GHPullRequestReviewState state;
private java.lang.String submitted_at;
private java.lang.String html_url;
public void <init>()
{
org.kohsuke.github.GHPullRequestReview v0;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
org.kohsuke.github.GHPullRequestReview wrapUp(org.kohsuke.github.GHPullRequest)
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHPullRequestReview v0;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 := @parameter0: org.kohsuke.github.GHPullRequest;
v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner> = v1;
return v0;
}
public org.kohsuke.github.GHPullRequest getParent()
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHPullRequestReview v0;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
return v1;
}
public java.lang.String getBody()
{
java.lang.String v1;
org.kohsuke.github.GHPullRequestReview v0;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String body>;
return v1;
}
public org.kohsuke.github.GHUser getUser() throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v2;
org.kohsuke.github.GHPullRequestReview v0;
org.kohsuke.github.GHUser v1, v4, v6;
java.lang.String v5;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHUser user>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHUser user>;
v5 = virtualinvoke v4.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v6 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.GHUser getUser(java.lang.String)>(v5);
return v6;
label1:
return null;
}
public java.lang.String getCommitId()
{
java.lang.String v1;
org.kohsuke.github.GHPullRequestReview v0;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String commit_id>;
return v1;
}
public org.kohsuke.github.GHPullRequestReviewState getState()
{
org.kohsuke.github.GHPullRequestReview v0;
org.kohsuke.github.GHPullRequestReviewState v1;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequestReviewState state>;
return v1;
}
public java.net.URL getHtmlUrl()
{
java.lang.String v1;
org.kohsuke.github.GHPullRequestReview v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
protected java.lang.String getApiRoute()
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHPullRequestReview v0;
long v3;
java.lang.String v2, v4;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: java.lang.String getApiRoute()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: long getId()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,long)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/reviews/\u0001");
return v4;
}
public java.util.Date getSubmittedAt() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHPullRequestReview v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String submitted_at>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public java.util.Date getCreatedAt() throws java.io.IOException
{
org.kohsuke.github.GHPullRequestReview v0;
java.util.Date v1;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: java.util.Date getSubmittedAt()>();
return v1;
}
public void submit(java.lang.String, org.kohsuke.github.GHPullRequestReviewState) throws java.io.IOException
{
org.kohsuke.github.GHPullRequestReview v0;
org.kohsuke.github.GHPullRequestReviewState v2;
java.lang.String v1;
org.kohsuke.github.GHPullRequestReviewEvent v3;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.kohsuke.github.GHPullRequestReviewState;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequestReviewState: org.kohsuke.github.GHPullRequestReviewEvent toEvent()>();
virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: void submit(java.lang.String,org.kohsuke.github.GHPullRequestReviewEvent)>(v1, v3);
return;
}
public void submit(java.lang.String, org.kohsuke.github.GHPullRequestReviewEvent) throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v3;
org.kohsuke.github.GHPullRequestReview v0;
org.kohsuke.github.GHPullRequestReviewState v14;
java.lang.String[] v12;
org.kohsuke.github.GitHubRequest$Builder v13, v6, v7, v9;
org.kohsuke.github.GHPullRequestReviewEvent v2;
java.lang.String v1, v10, v11, v8;
org.kohsuke.github.Requester v5;
org.kohsuke.github.GitHub v4;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.kohsuke.github.GHPullRequestReviewEvent;
v3 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
v4 = virtualinvoke v3.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("body", v1);
v8 = virtualinvoke v2.<org.kohsuke.github.GHPullRequestReviewEvent: java.lang.String action()>();
v9 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("event", v8);
v10 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String getApiRoute()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/events");
v12 = newarray (java.lang.String)[0];
v13 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v11, v12);
virtualinvoke v13.<org.kohsuke.github.Requester: java.lang.Object fetchInto(java.lang.Object)>(v0);
v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String body> = v1;
v14 = virtualinvoke v2.<org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewState toState()>();
v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequestReviewState state> = v14;
return;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHPullRequestReview v0;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
java.lang.String v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v5 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String getApiRoute()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
virtualinvoke v7.<org.kohsuke.github.Requester: void send()>();
return;
}
public void dismiss(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v2;
org.kohsuke.github.GHPullRequestReview v0;
org.kohsuke.github.GHPullRequestReviewState v11;
java.lang.String[] v9;
org.kohsuke.github.GitHubRequest$Builder v10, v5, v6;
java.lang.String v1, v7, v8;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("message", v1);
v7 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String getApiRoute()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/dismissals");
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
virtualinvoke v10.<org.kohsuke.github.Requester: void send()>();
v11 = <org.kohsuke.github.GHPullRequestReviewState: org.kohsuke.github.GHPullRequestReviewState DISMISSED>;
v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequestReviewState state> = v11;
return;
}
public org.kohsuke.github.PagedIterable listReviewComments() throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHPullRequestReview v0;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.util.function.Consumer v8;
java.lang.String v4, v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.PagedIterable v9;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHPullRequestReview;
v1 = v0.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequest owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReview: java.lang.String getApiRoute()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/comments");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = staticinvoke <org.kohsuke.github.GHPullRequestReview$lambda_listReviewComments_0__73: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHPullRequestReview)>(v0);
v9 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHPullRequestReviewComment;", v8);
return v9;
}
}