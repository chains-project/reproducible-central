public class org.kohsuke.github.GHRateLimit extends java.lang.Object
{
public int remaining;
public int limit;
public java.util.Date reset;
private final org.kohsuke.github.GHRateLimit$Record core;
private final org.kohsuke.github.GHRateLimit$Record search;
private final org.kohsuke.github.GHRateLimit$Record graphql;
private final org.kohsuke.github.GHRateLimit$Record integrationManifest;
static final org.kohsuke.github.GHRateLimit DEFAULT;
private static final java.util.logging.Logger LOGGER;
static org.kohsuke.github.GHRateLimit fromRecord(org.kohsuke.github.GHRateLimit$Record, org.kohsuke.github.RateLimitTarget)
{
org.kohsuke.github.GHRateLimit$UnknownLimitRecord v10, v11, v12, v15, v16, v17, v20, v21, v22, v5, v6, v7;
java.lang.String v24, v25;
java.lang.IllegalArgumentException v23;
org.kohsuke.github.GHRateLimit v14, v19, v4, v9;
org.kohsuke.github.GHRateLimit$Record v0;
org.kohsuke.github.RateLimitTarget v1, v13, v18, v2, v3, v8;
v0 := @parameter0: org.kohsuke.github.GHRateLimit$Record;
v1 := @parameter1: org.kohsuke.github.RateLimitTarget;
v2 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget CORE>;
if v1 == v2 goto label1;
v3 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget NONE>;
if v1 != v3 goto label2;
label1:
v4 = new org.kohsuke.github.GHRateLimit;
v5 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v6 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v7 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
specialinvoke v4.<org.kohsuke.github.GHRateLimit: void <init>(org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record)>(v0, v5, v6, v7);
return v4;
label2:
v8 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget SEARCH>;
if v1 != v8 goto label3;
v9 = new org.kohsuke.github.GHRateLimit;
v10 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v11 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v12 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
specialinvoke v9.<org.kohsuke.github.GHRateLimit: void <init>(org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record)>(v10, v0, v11, v12);
return v9;
label3:
v13 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget GRAPHQL>;
if v1 != v13 goto label4;
v14 = new org.kohsuke.github.GHRateLimit;
v15 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v16 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v17 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
specialinvoke v14.<org.kohsuke.github.GHRateLimit: void <init>(org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record)>(v15, v16, v0, v17);
return v14;
label4:
v18 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget INTEGRATION_MANIFEST>;
if v1 != v18 goto label5;
v19 = new org.kohsuke.github.GHRateLimit;
v20 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v21 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v22 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
specialinvoke v19.<org.kohsuke.github.GHRateLimit: void <init>(org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record)>(v20, v21, v22, v0);
return v19;
label5:
v23 = new java.lang.IllegalArgumentException;
v24 = virtualinvoke v1.<org.kohsuke.github.RateLimitTarget: java.lang.String toString()>();
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown rate limit target: \u0001");
specialinvoke v23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v25);
throw v23;
}
void <init>(org.kohsuke.github.GHRateLimit$Record, org.kohsuke.github.GHRateLimit$Record, org.kohsuke.github.GHRateLimit$Record, org.kohsuke.github.GHRateLimit$Record)
{
java.util.Date v7;
long v8;
int v5, v6;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1, v2, v3, v4;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 := @parameter0: org.kohsuke.github.GHRateLimit$Record;
v2 := @parameter1: org.kohsuke.github.GHRateLimit$Record;
v3 := @parameter2: org.kohsuke.github.GHRateLimit$Record;
v4 := @parameter3: org.kohsuke.github.GHRateLimit$Record;
specialinvoke v0.<java.lang.Object: void <init>()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record core> = v1;
v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record search> = v2;
v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record graphql> = v3;
v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record integrationManifest> = v4;
v5 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: int getRemaining()>();
v0.<org.kohsuke.github.GHRateLimit: int remaining> = v5;
v6 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: int getLimit()>();
v0.<org.kohsuke.github.GHRateLimit: int limit> = v6;
v7 = new java.util.Date;
v8 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: long getResetEpochSeconds()>();
specialinvoke v7.<java.util.Date: void <init>(long)>(v8);
v0.<org.kohsuke.github.GHRateLimit: java.util.Date reset> = v7;
return;
}
public java.util.Date getResetDate()
{
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: java.util.Date getResetDate()>();
return v2;
}
public int getRemaining()
{
int v2;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: int getRemaining()>();
return v2;
}
public int getLimit()
{
int v2;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: int getLimit()>();
return v2;
}
public long getResetEpochSeconds()
{
long v2;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: long getResetEpochSeconds()>();
return v2;
}
public boolean isExpired()
{
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
boolean v2;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: boolean isExpired()>();
return v2;
}
public org.kohsuke.github.GHRateLimit$Record getCore()
{
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record core>;
return v1;
}
public org.kohsuke.github.GHRateLimit$Record getSearch()
{
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record search>;
return v1;
}
public org.kohsuke.github.GHRateLimit$Record getGraphQL()
{
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record graphql>;
return v1;
}
public org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()
{
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record integrationManifest>;
return v1;
}
public java.lang.String toString()
{
java.lang.String v2, v4, v6, v8, v9;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v1, v3, v5, v7;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit$Record: java.lang.String toString()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GHRateLimit$Record: java.lang.String toString()>();
v5 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GHRateLimit$Record: java.lang.String toString()>();
v7 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
v8 = virtualinvoke v7.<org.kohsuke.github.GHRateLimit$Record: java.lang.String toString()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v2, v4, v6, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("GHRateLimit {core \u0001, search \u0001, graphql \u0001, integrationManifest \u0001}");
return v9;
}
public boolean equals(java.lang.Object)
{
boolean v12, v15, v16, v6, v9;
java.lang.Class v2, v3;
java.lang.Object v1;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v10, v11, v13, v14, v4, v5, v7, v8;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v5 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v6 = virtualinvoke v4.<org.kohsuke.github.GHRateLimit$Record: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label4;
v7 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
v8 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
v9 = virtualinvoke v7.<org.kohsuke.github.GHRateLimit$Record: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label4;
v10 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
v11 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
v12 = virtualinvoke v10.<org.kohsuke.github.GHRateLimit$Record: boolean equals(java.lang.Object)>(v11);
if v12 == 0 goto label4;
v13 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
v14 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
v15 = virtualinvoke v13.<org.kohsuke.github.GHRateLimit$Record: boolean equals(java.lang.Object)>(v14);
if v15 == 0 goto label4;
v16 = 1;
goto label5;
label4:
v16 = 0;
label5:
return v16;
}
public int hashCode()
{
java.lang.Object[] v1;
int v6;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v2, v3, v4, v5;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 = newarray (java.lang.Object)[4];
v2 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v1[0] = v2;
v3 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
v1[1] = v3;
v4 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
v1[2] = v4;
v5 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
v1[3] = v5;
v6 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v6;
}
org.kohsuke.github.GHRateLimit getMergedRateLimit(org.kohsuke.github.GHRateLimit)
{
boolean v16;
org.kohsuke.github.GHRateLimit v0, v1, v15, v2;
org.kohsuke.github.GHRateLimit$Record v10, v11, v12, v13, v14, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 := @parameter0: org.kohsuke.github.GHRateLimit;
v2 = new org.kohsuke.github.GHRateLimit;
v3 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v4 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
v5 = virtualinvoke v3.<org.kohsuke.github.GHRateLimit$Record: org.kohsuke.github.GHRateLimit$Record currentOrUpdated(org.kohsuke.github.GHRateLimit$Record)>(v4);
v6 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
v7 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
v8 = virtualinvoke v6.<org.kohsuke.github.GHRateLimit$Record: org.kohsuke.github.GHRateLimit$Record currentOrUpdated(org.kohsuke.github.GHRateLimit$Record)>(v7);
v9 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
v10 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
v11 = virtualinvoke v9.<org.kohsuke.github.GHRateLimit$Record: org.kohsuke.github.GHRateLimit$Record currentOrUpdated(org.kohsuke.github.GHRateLimit$Record)>(v10);
v12 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
v13 = virtualinvoke v1.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
v14 = virtualinvoke v12.<org.kohsuke.github.GHRateLimit$Record: org.kohsuke.github.GHRateLimit$Record currentOrUpdated(org.kohsuke.github.GHRateLimit$Record)>(v13);
specialinvoke v2.<org.kohsuke.github.GHRateLimit: void <init>(org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record)>(v5, v8, v11, v14);
v15 = v2;
v16 = virtualinvoke v2.<org.kohsuke.github.GHRateLimit: boolean equals(java.lang.Object)>(v0);
if v16 == 0 goto label1;
v15 = v0;
label1:
return v15;
}
org.kohsuke.github.GHRateLimit$Record getRecord(org.kohsuke.github.RateLimitTarget)
{
org.kohsuke.github.GHRateLimit$UnknownLimitRecord v11;
java.lang.IllegalArgumentException v12;
java.lang.String v13, v14;
org.kohsuke.github.GHRateLimit v0;
org.kohsuke.github.GHRateLimit$Record v3, v5, v7, v9;
org.kohsuke.github.RateLimitTarget v1, v10, v2, v4, v6, v8;
v0 := @this: org.kohsuke.github.GHRateLimit;
v1 := @parameter0: org.kohsuke.github.RateLimitTarget;
v2 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget CORE>;
if v1 != v2 goto label1;
v3 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getCore()>();
return v3;
label1:
v4 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget SEARCH>;
if v1 != v4 goto label2;
v5 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getSearch()>();
return v5;
label2:
v6 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget GRAPHQL>;
if v1 != v6 goto label3;
v7 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getGraphQL()>();
return v7;
label3:
v8 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget INTEGRATION_MANIFEST>;
if v1 != v8 goto label4;
v9 = virtualinvoke v0.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getIntegrationManifest()>();
return v9;
label4:
v10 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget NONE>;
if v1 != v10 goto label5;
v11 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
return v11;
label5:
v12 = new java.lang.IllegalArgumentException;
v13 = virtualinvoke v1.<org.kohsuke.github.RateLimitTarget: java.lang.String toString()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown rate limit target: \u0001");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v12;
}
static void <clinit>()
{
org.kohsuke.github.GHRateLimit$UnknownLimitRecord v1, v2, v3, v4;
java.util.logging.Logger v7;
java.lang.Class v5;
java.lang.String v6;
org.kohsuke.github.GHRateLimit v0;
v0 = new org.kohsuke.github.GHRateLimit;
v1 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v2 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v3 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
v4 = <org.kohsuke.github.GHRateLimit$UnknownLimitRecord: org.kohsuke.github.GHRateLimit$UnknownLimitRecord DEFAULT>;
specialinvoke v0.<org.kohsuke.github.GHRateLimit: void <init>(org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record,org.kohsuke.github.GHRateLimit$Record)>(v1, v2, v3, v4);
<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit DEFAULT> = v0;
v5 = class "Lorg/kohsuke/github/Requester;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v6);
<org.kohsuke.github.GHRateLimit: java.util.logging.Logger LOGGER> = v7;
return;
}
}