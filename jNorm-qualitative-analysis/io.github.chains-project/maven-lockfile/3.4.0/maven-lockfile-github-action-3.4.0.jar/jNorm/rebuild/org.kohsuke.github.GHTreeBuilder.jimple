public class org.kohsuke.github.GHTreeBuilder extends java.lang.Object
{
private final org.kohsuke.github.GHRepository repo;
private final org.kohsuke.github.Requester req;
private final java.util.List treeEntries;
void <init>(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHTreeBuilder v0;
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
java.util.ArrayList v2;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHTreeBuilder: java.util.List treeEntries> = v2;
v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHRepository repo> = v1;
v3 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.Requester req> = v4;
return;
}
public org.kohsuke.github.GHTreeBuilder baseTree(java.lang.String)
{
org.kohsuke.github.GHTreeBuilder v0;
java.lang.String v1;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("base_tree", v1);
return v0;
}
public org.kohsuke.github.GHTreeBuilder entry(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
{
org.kohsuke.github.GHTreeBuilder$TreeEntry v6;
org.kohsuke.github.GHTreeBuilder v0;
java.util.List v7;
java.lang.String v1, v2, v3, v4, v5;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 = new org.kohsuke.github.GHTreeBuilder$TreeEntry;
specialinvoke v6.<org.kohsuke.github.GHTreeBuilder$TreeEntry: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
v6.<org.kohsuke.github.GHTreeBuilder$TreeEntry: java.lang.String sha> = v4;
v6.<org.kohsuke.github.GHTreeBuilder$TreeEntry: java.lang.String content> = v5;
v7 = v0.<org.kohsuke.github.GHTreeBuilder: java.util.List treeEntries>;
interfaceinvoke v7.<java.util.List: boolean add(java.lang.Object)>(v6);
return v0;
}
public org.kohsuke.github.GHTreeBuilder shaEntry(java.lang.String, java.lang.String, boolean)
{
org.kohsuke.github.GHTreeBuilder v0;
java.util.List v6;
java.lang.String v1, v2, v5;
org.kohsuke.github.GHTreeBuilder$TreeEntry v4;
boolean v3;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 = new org.kohsuke.github.GHTreeBuilder$TreeEntry;
if v3 == 0 goto label1;
v5 = "100755";
goto label2;
label1:
v5 = "100644";
label2:
specialinvoke v4.<org.kohsuke.github.GHTreeBuilder$TreeEntry: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v1, v5, "blob");
v4.<org.kohsuke.github.GHTreeBuilder$TreeEntry: java.lang.String sha> = v2;
v6 = v0.<org.kohsuke.github.GHTreeBuilder: java.util.List treeEntries>;
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v4);
return v0;
}
public org.kohsuke.github.GHTreeBuilder textEntry(java.lang.String, java.lang.String, boolean)
{
org.kohsuke.github.GHTreeBuilder v0;
java.util.List v6;
java.lang.String v1, v2, v5;
org.kohsuke.github.GHTreeBuilder$TreeEntry v4;
boolean v3;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 = new org.kohsuke.github.GHTreeBuilder$TreeEntry;
if v3 == 0 goto label1;
v5 = "100755";
goto label2;
label1:
v5 = "100644";
label2:
specialinvoke v4.<org.kohsuke.github.GHTreeBuilder$TreeEntry: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v1, v5, "blob");
v4.<org.kohsuke.github.GHTreeBuilder$TreeEntry: java.lang.String content> = v2;
v6 = v0.<org.kohsuke.github.GHTreeBuilder: java.util.List treeEntries>;
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v4);
return v0;
}
public org.kohsuke.github.GHTreeBuilder add(java.lang.String, byte[], boolean)
{
byte[] v2;
org.kohsuke.github.GHRepository v4;
java.io.IOException v10;
org.kohsuke.github.GHException v11;
org.kohsuke.github.GHBlob v7;
org.kohsuke.github.GHTreeBuilder v0, v9;
java.lang.String v1, v12, v8;
org.kohsuke.github.GHBlobBuilder v5, v6;
boolean v3;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: byte[];
v3 := @parameter2: boolean;
label1:
v4 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHRepository repo>;
v5 = virtualinvoke v4.<org.kohsuke.github.GHRepository: org.kohsuke.github.GHBlobBuilder createBlob()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GHBlobBuilder: org.kohsuke.github.GHBlobBuilder binaryContent(byte[])>(v2);
v7 = virtualinvoke v6.<org.kohsuke.github.GHBlobBuilder: org.kohsuke.github.GHBlob create()>();
v8 = virtualinvoke v7.<org.kohsuke.github.GHBlob: java.lang.String getSha()>();
v9 = virtualinvoke v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHTreeBuilder shaEntry(java.lang.String,java.lang.String,boolean)>(v1, v8, v3);
label2:
return v9;
label3:
v10 := @caughtexception;
v11 = new org.kohsuke.github.GHException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create binary content of \'\u0001\'");
specialinvoke v11.<org.kohsuke.github.GHException: void <init>(java.lang.String,java.lang.Throwable)>(v12, v10);
throw v11;
catch java.io.IOException from label1 to label2 with label3;
}
public org.kohsuke.github.GHTreeBuilder add(java.lang.String, java.lang.String, boolean)
{
byte[] v5;
org.kohsuke.github.GHTreeBuilder v0, v6;
java.nio.charset.Charset v4;
java.lang.String v1, v2;
boolean v3;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v5 = virtualinvoke v2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v4);
v6 = virtualinvoke v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHTreeBuilder add(java.lang.String,byte[],boolean)>(v1, v5, v3);
return v6;
}
private java.lang.String getApiTail()
{
org.kohsuke.github.GHTreeBuilder v0;
org.kohsuke.github.GHRepository v2, v4;
java.lang.Object[] v1;
java.lang.String v3, v5, v6;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHRepository repo>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHRepository: java.lang.String getOwnerName()>();
v1[0] = v3;
v4 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHRepository repo>;
v5 = virtualinvoke v4.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v1[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/repos/%s/%s/git/trees", v1);
return v6;
}
public org.kohsuke.github.GHTree create() throws java.io.IOException
{
org.kohsuke.github.GHRepository v9;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
org.kohsuke.github.GHTreeBuilder v0;
java.util.List v2;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.GHTree v10;
org.kohsuke.github.Requester v1, v3;
v0 := @this: org.kohsuke.github.GHTreeBuilder;
v1 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.Requester req>;
v2 = v0.<org.kohsuke.github.GHTreeBuilder: java.util.List treeEntries>;
virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("tree", v2);
v3 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.Requester req>;
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v5 = specialinvoke v0.<org.kohsuke.github.GHTreeBuilder: java.lang.String getApiTail()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHTree;");
v9 = v0.<org.kohsuke.github.GHTreeBuilder: org.kohsuke.github.GHRepository repo>;
v10 = virtualinvoke v8.<org.kohsuke.github.GHTree: org.kohsuke.github.GHTree wrap(org.kohsuke.github.GHRepository)>(v9);
return v10;
}
}