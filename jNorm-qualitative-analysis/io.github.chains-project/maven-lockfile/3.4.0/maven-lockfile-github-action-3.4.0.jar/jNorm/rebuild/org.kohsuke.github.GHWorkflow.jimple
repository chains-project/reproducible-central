public class org.kohsuke.github.GHWorkflow extends org.kohsuke.github.GHObject
{
private org.kohsuke.github.GHRepository owner;
private java.lang.String name;
private java.lang.String path;
private java.lang.String state;
private java.lang.String htmlUrl;
private java.lang.String badgeUrl;
public void <init>()
{
org.kohsuke.github.GHWorkflow v0;
v0 := @this: org.kohsuke.github.GHWorkflow;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public java.lang.String getName()
{
java.lang.String v1;
org.kohsuke.github.GHWorkflow v0;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: java.lang.String name>;
return v1;
}
public java.lang.String getPath()
{
java.lang.String v1;
org.kohsuke.github.GHWorkflow v0;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: java.lang.String path>;
return v1;
}
public java.lang.String getState()
{
java.lang.String v1;
org.kohsuke.github.GHWorkflow v0;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: java.lang.String state>;
return v1;
}
public java.net.URL getHtmlUrl() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHWorkflow v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: java.lang.String htmlUrl>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHRepository getRepository()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHWorkflow v0;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHRepository owner>;
return v1;
}
public java.net.URL getBadgeUrl()
{
java.lang.String v1;
org.kohsuke.github.GHWorkflow v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: java.lang.String badgeUrl>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public void disable() throws java.io.IOException
{
org.kohsuke.github.GHWorkflow v0;
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v4 = specialinvoke v0.<org.kohsuke.github.GHWorkflow: java.lang.String getApiRoute()>();
v5 = newarray (java.lang.String)[1];
v5[0] = "disable";
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
public void enable() throws java.io.IOException
{
org.kohsuke.github.GHWorkflow v0;
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v4 = specialinvoke v0.<org.kohsuke.github.GHWorkflow: java.lang.String getApiRoute()>();
v5 = newarray (java.lang.String)[1];
v5[0] = "enable";
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
public void dispatch(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHWorkflow v0;
java.util.Map v2;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
virtualinvoke v0.<org.kohsuke.github.GHWorkflow: void dispatch(java.lang.String,java.util.Map)>(v1, v2);
return;
}
public void dispatch(java.lang.String, java.util.Map) throws java.io.IOException
{
org.kohsuke.github.GHWorkflow v0;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v5, v8, v9;
java.util.Map v2;
java.lang.String v1, v6;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
boolean v10;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v6 = specialinvoke v0.<org.kohsuke.github.GHWorkflow: java.lang.String getApiRoute()>();
v7 = newarray (java.lang.String)[1];
v7[0] = "dispatches";
v8 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("ref", v1);
v10 = interfaceinvoke v2.<java.util.Map: boolean isEmpty()>();
if v10 != 0 goto label1;
virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Map)>("inputs", v2);
label1:
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.PagedIterable listRuns()
{
org.kohsuke.github.GHRepository v2;
org.kohsuke.github.GHWorkflow v0;
java.lang.String[] v6;
org.kohsuke.github.GHWorkflowRunsIterable v1;
org.kohsuke.github.GitHubRequest$Builder v7;
java.lang.String v5;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = new org.kohsuke.github.GHWorkflowRunsIterable;
v2 = v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHRepository owner>;
v3 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = specialinvoke v0.<org.kohsuke.github.GHWorkflow: java.lang.String getApiRoute()>();
v6 = newarray (java.lang.String)[1];
v6[0] = "runs";
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
specialinvoke v1.<org.kohsuke.github.GHWorkflowRunsIterable: void <init>(org.kohsuke.github.GHRepository,org.kohsuke.github.GitHubRequest$Builder)>(v2, v7);
return v1;
}
private java.lang.String getApiRoute()
{
org.kohsuke.github.GHRepository v1, v10, v12;
org.kohsuke.github.GHWorkflow v0;
java.net.URL v2;
long v14;
java.lang.CharSequence[] v8;
java.lang.String v11, v13, v15, v4, v6, v7, v9;
org.kohsuke.github.GitHub v5;
java.lang.Object v3;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 = v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHRepository owner>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: java.net.URL getUrl()>();
v3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "Missing instance URL!");
v4 = virtualinvoke v3.<java.net.URL: java.lang.String toString()>();
v5 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GitHub root()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GitHub: java.lang.String getApiUrl()>();
v7 = virtualinvoke v4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(v6, "");
v8 = newarray (java.lang.CharSequence)[0];
v9 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])>(v7, "/", v8);
return v9;
label1:
v10 = v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHRepository owner>;
v11 = virtualinvoke v10.<org.kohsuke.github.GHRepository: java.lang.String getOwnerName()>();
v12 = v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHRepository owner>;
v13 = virtualinvoke v12.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v14 = virtualinvoke v0.<org.kohsuke.github.GHWorkflow: long getId()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,long)>(v11, v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repos/\u0001/\u0001/actions/workflows/\u0001");
return v15;
}
org.kohsuke.github.GHWorkflow wrapUp(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHWorkflow v0;
v0 := @this: org.kohsuke.github.GHWorkflow;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
}