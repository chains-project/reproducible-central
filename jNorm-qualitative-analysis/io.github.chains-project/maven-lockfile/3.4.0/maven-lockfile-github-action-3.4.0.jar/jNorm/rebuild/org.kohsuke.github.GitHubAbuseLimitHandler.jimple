public abstract class org.kohsuke.github.GitHubAbuseLimitHandler extends org.kohsuke.github.GitHubConnectorResponseErrorHandler
{
public void <init>()
{
org.kohsuke.github.GitHubAbuseLimitHandler v0;
v0 := @this: org.kohsuke.github.GitHubAbuseLimitHandler;
specialinvoke v0.<org.kohsuke.github.GitHubConnectorResponseErrorHandler: void <init>()>();
return;
}
boolean isError(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException
{
int v2;
org.kohsuke.github.GitHubAbuseLimitHandler v0;
java.lang.String v3;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
boolean v4;
v0 := @this: org.kohsuke.github.GitHubAbuseLimitHandler;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorResponse;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: int statusCode()>();
if v2 != 403 goto label1;
v3 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>("Retry-After");
if v3 == null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public abstract void onError(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException;
}