public abstract class org.kohsuke.github.RateLimitHandler extends org.kohsuke.github.GitHubRateLimitHandler
{
public static final org.kohsuke.github.RateLimitHandler WAIT;
public static final org.kohsuke.github.RateLimitHandler FAIL;
public void <init>()
{
org.kohsuke.github.RateLimitHandler v0;
v0 := @this: org.kohsuke.github.RateLimitHandler;
specialinvoke v0.<org.kohsuke.github.GitHubRateLimitHandler: void <init>()>();
return;
}
public void onError(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException
{
java.net.HttpURLConnection v10;
org.kohsuke.github.HttpException v2;
org.kohsuke.github.connector.GitHubConnectorRequest v5;
java.net.URL v6;
org.kohsuke.github.RateLimitHandler v0;
java.util.Map v8;
int v3;
java.lang.String v4, v7;
org.kohsuke.github.GHIOException v9;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
v0 := @this: org.kohsuke.github.RateLimitHandler;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorResponse;
v2 = new org.kohsuke.github.HttpException;
v3 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: int statusCode()>();
v4 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>("Status");
v5 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: org.kohsuke.github.connector.GitHubConnectorRequest request()>();
v6 = interfaceinvoke v5.<org.kohsuke.github.connector.GitHubConnectorRequest: java.net.URL url()>();
v7 = virtualinvoke v6.<java.net.URL: java.lang.String toString()>();
specialinvoke v2.<org.kohsuke.github.HttpException: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("API rate limit reached", v3, v4, v7);
v8 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.util.Map allHeaders()>();
v9 = virtualinvoke v2.<org.kohsuke.github.HttpException: org.kohsuke.github.GHIOException withResponseHeaderFields(java.util.Map)>(v8);
v10 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.net.HttpURLConnection toHttpURLConnection()>();
virtualinvoke v0.<org.kohsuke.github.RateLimitHandler: void onError(java.io.IOException,java.net.HttpURLConnection)>(v9, v10);
return;
}
public abstract void onError(java.io.IOException, java.net.HttpURLConnection) throws java.io.IOException;
static void <clinit>()
{
org.kohsuke.github.RateLimitHandler$1 v0;
org.kohsuke.github.RateLimitHandler$2 v1;
v0 = new org.kohsuke.github.RateLimitHandler$1;
specialinvoke v0.<org.kohsuke.github.RateLimitHandler$1: void <init>()>();
<org.kohsuke.github.RateLimitHandler: org.kohsuke.github.RateLimitHandler WAIT> = v0;
v1 = new org.kohsuke.github.RateLimitHandler$2;
specialinvoke v1.<org.kohsuke.github.RateLimitHandler$2: void <init>()>();
<org.kohsuke.github.RateLimitHandler: org.kohsuke.github.RateLimitHandler FAIL> = v1;
return;
}
}