class org.kohsuke.github.Requester extends org.kohsuke.github.GitHubRequest$Builder
{
final transient org.kohsuke.github.GitHubClient client;
void <init>(org.kohsuke.github.GitHubClient)
{
org.kohsuke.github.GitHubClient v1;
java.lang.String v2;
org.kohsuke.github.Requester v0;
v0 := @this: org.kohsuke.github.Requester;
v1 := @parameter0: org.kohsuke.github.GitHubClient;
specialinvoke v0.<org.kohsuke.github.GitHubRequest$Builder: void <init>()>();
v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client> = v1;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: java.lang.String getApiUrl()>();
virtualinvoke v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withApiUrl(java.lang.String)>(v2);
return;
}
public void send() throws java.io.IOException
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHubClient$BodyHandler v2;
org.kohsuke.github.Requester v0;
v0 := @this: org.kohsuke.github.Requester;
v1 = v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client>;
v2 = staticinvoke <org.kohsuke.github.Requester$lambda_send_0__75: org.kohsuke.github.GitHubClient$BodyHandler bootstrap$()>();
virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GitHubResponse sendRequest(org.kohsuke.github.GitHubRequest$Builder,org.kohsuke.github.GitHubClient$BodyHandler)>(v0, v2);
return;
}
public java.lang.Object fetch(java.lang.Class) throws java.io.IOException
{
org.kohsuke.github.GitHubResponse v4;
org.kohsuke.github.GitHubClient v2;
java.lang.Class v1;
java.lang.Object v5;
org.kohsuke.github.GitHubClient$BodyHandler v3;
org.kohsuke.github.Requester v0;
v0 := @this: org.kohsuke.github.Requester;
v1 := @parameter0: java.lang.Class;
v2 = v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client>;
v3 = staticinvoke <org.kohsuke.github.Requester$lambda_fetch_1__76: org.kohsuke.github.GitHubClient$BodyHandler bootstrap$(java.lang.Class)>(v1);
v4 = virtualinvoke v2.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GitHubResponse sendRequest(org.kohsuke.github.GitHubRequest$Builder,org.kohsuke.github.GitHubClient$BodyHandler)>(v0, v3);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubResponse: java.lang.Object body()>();
return v5;
}
public java.lang.Object fetchInto(java.lang.Object) throws java.io.IOException
{
org.kohsuke.github.GitHubResponse v4;
org.kohsuke.github.GitHubClient v2;
java.lang.Object v1, v5;
org.kohsuke.github.GitHubClient$BodyHandler v3;
org.kohsuke.github.Requester v0;
v0 := @this: org.kohsuke.github.Requester;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client>;
v3 = staticinvoke <org.kohsuke.github.Requester$lambda_fetchInto_2__77: org.kohsuke.github.GitHubClient$BodyHandler bootstrap$(java.lang.Object)>(v1);
v4 = virtualinvoke v2.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GitHubResponse sendRequest(org.kohsuke.github.GitHubRequest$Builder,org.kohsuke.github.GitHubClient$BodyHandler)>(v0, v3);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubResponse: java.lang.Object body()>();
return v5;
}
public int fetchHttpStatusCode() throws java.io.IOException
{
int v4;
org.kohsuke.github.GitHubResponse v3;
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.Requester v0;
org.kohsuke.github.GitHubRequest v2;
v0 := @this: org.kohsuke.github.Requester;
v1 = v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest build()>();
v3 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GitHubResponse sendRequest(org.kohsuke.github.GitHubRequest,org.kohsuke.github.GitHubClient$BodyHandler)>(v2, null);
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubResponse: int statusCode()>();
return v4;
}
public java.lang.Object fetchStream(org.kohsuke.github.function.InputStreamFunction) throws java.io.IOException
{
org.kohsuke.github.function.InputStreamFunction v1;
org.kohsuke.github.GitHubResponse v4;
org.kohsuke.github.GitHubClient v2;
java.lang.Object v5;
org.kohsuke.github.GitHubClient$BodyHandler v3;
org.kohsuke.github.Requester v0;
v0 := @this: org.kohsuke.github.Requester;
v1 := @parameter0: org.kohsuke.github.function.InputStreamFunction;
v2 = v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client>;
v3 = staticinvoke <org.kohsuke.github.Requester$lambda_fetchStream_3__78: org.kohsuke.github.GitHubClient$BodyHandler bootstrap$(org.kohsuke.github.function.InputStreamFunction)>(v1);
v4 = virtualinvoke v2.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GitHubResponse sendRequest(org.kohsuke.github.GitHubRequest$Builder,org.kohsuke.github.GitHubClient$BodyHandler)>(v0, v3);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubResponse: java.lang.Object body()>();
return v5;
}
public static java.io.InputStream copyInputStream(java.io.InputStream) throws java.io.IOException
{
byte[] v2;
java.io.ByteArrayInputStream v1;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = new java.io.ByteArrayInputStream;
v2 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(v0);
specialinvoke v1.<java.io.ByteArrayInputStream: void <init>(byte[])>(v2);
return v1;
}
public org.kohsuke.github.PagedIterable toIterable(java.lang.Class, java.util.function.Consumer)
{
java.util.function.Consumer v2;
org.kohsuke.github.GitHubClient v4;
java.lang.Class v1;
org.kohsuke.github.GitHubPageContentsIterable v3;
org.kohsuke.github.Requester v0;
org.kohsuke.github.GitHubRequest v5;
v0 := @this: org.kohsuke.github.Requester;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.function.Consumer;
v3 = new org.kohsuke.github.GitHubPageContentsIterable;
v4 = v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubClient client>;
v5 = virtualinvoke v0.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest build()>();
specialinvoke v3.<org.kohsuke.github.GitHubPageContentsIterable: void <init>(org.kohsuke.github.GitHubClient,org.kohsuke.github.GitHubRequest,java.lang.Class,java.util.function.Consumer)>(v4, v5, v1, v2);
return v3;
}
}