final class org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection extends java.net.HttpURLConnection implements okhttp3.Callback
{
okhttp3.OkHttpClient client;
final org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor networkInterceptor;
okhttp3.Headers$Builder requestHeaders;
okhttp3.Headers responseHeaders;
boolean executed;
okhttp3.Call call;
long fixedContentLength;
private final java.lang.Object lock;
private okhttp3.Response response;
private java.lang.Throwable callFailure;
okhttp3.Response networkResponse;
boolean connectPending;
java.net.Proxy proxy;
okhttp3.Handshake handshake;
void <init>(java.net.URL, okhttp3.OkHttpClient)
{
okhttp3.OkHttpClient v2;
java.net.URL v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor v3;
okhttp3.Headers$Builder v4;
java.lang.Object v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: okhttp3.OkHttpClient;
specialinvoke v0.<java.net.HttpURLConnection: void <init>(java.net.URL)>(v1);
v3 = new org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor;
specialinvoke v3.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor: void <init>(org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection)>(v0);
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor networkInterceptor> = v3;
v4 = new okhttp3.Headers$Builder;
specialinvoke v4.<okhttp3.Headers$Builder: void <init>()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders> = v4;
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long fixedContentLength> = -1L;
v5 = new java.lang.Object;
specialinvoke v5.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock> = v5;
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean connectPending> = 1;
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client> = v2;
return;
}
public void connect() throws java.io.IOException
{
java.lang.Throwable v14, v6, v8, v9;
java.io.IOException v10;
java.io.InterruptedIOException v13;
java.lang.InterruptedException v11;
java.lang.Thread v12;
okhttp3.Response v5;
java.lang.Object v3, v7;
okhttp3.Call v2;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
boolean v1, v4;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean executed>;
if v1 == 0 goto label1;
return;
label1:
v2 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call buildCall()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean executed> = 1;
interfaceinvoke v2.<okhttp3.Call: void enqueue(okhttp3.Callback)>(v0);
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
entermonitor v3;
label2:
v4 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean connectPending>;
if v4 == 0 goto label3;
v5 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response>;
if v5 != null goto label3;
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
if v6 != null goto label3;
v7 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
virtualinvoke v7.<java.lang.Object: void wait()>();
goto label2;
label3:
v8 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
if v8 == null goto label5;
v9 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
v10 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.io.IOException propagate(java.lang.Throwable)>(v9);
throw v10;
label4:
v11 := @caughtexception;
v12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v12.<java.lang.Thread: void interrupt()>();
v13 = new java.io.InterruptedIOException;
specialinvoke v13.<java.io.InterruptedIOException: void <init>()>();
throw v13;
label5:
exitmonitor v3;
label6:
goto label8;
label7:
v14 := @caughtexception;
exitmonitor v3;
throw v14;
label8:
return;
catch java.lang.InterruptedException from label2 to label4 with label4;
catch java.lang.Throwable from label2 to label6 with label7;
}
public void disconnect()
{
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor v2;
okhttp3.Call v1, v3;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call call>;
if v1 != null goto label1;
return;
label1:
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor networkInterceptor>;
virtualinvoke v2.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor: void proceed()>();
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call call>;
interfaceinvoke v3.<okhttp3.Call: void cancel()>();
return;
}
public java.io.InputStream getErrorStream()
{
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$ResponseBodyInputStream v4;
int v3;
okhttp3.Response v1;
java.io.IOException v6;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.ResponseBody v5;
boolean v2;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
label1:
v1 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(1);
v2 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: boolean hasBody(okhttp3.Response)>(v1);
if v2 == 0 goto label3;
v3 = virtualinvoke v1.<okhttp3.Response: int code()>();
if v3 < 400 goto label3;
v4 = new org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$ResponseBodyInputStream;
v5 = virtualinvoke v1.<okhttp3.Response: okhttp3.ResponseBody body()>();
specialinvoke v4.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$ResponseBodyInputStream: void <init>(okhttp3.ResponseBody)>(v5);
label2:
return v4;
label3:
return null;
label4:
v6 := @caughtexception;
return null;
catch java.io.IOException from label1 to label2 with label4;
}
okhttp3.Headers getHeaders() throws java.io.IOException
{
okhttp3.Headers v1, v10, v11, v3;
okhttp3.Headers$Builder v4, v7, v9;
okhttp3.Response v2;
okhttp3.Protocol v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v6, v8;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers responseHeaders>;
if v1 != null goto label1;
v2 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(1);
v3 = virtualinvoke v2.<okhttp3.Response: okhttp3.Headers headers()>();
v4 = virtualinvoke v3.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>();
v5 = virtualinvoke v2.<okhttp3.Response: okhttp3.Protocol protocol()>();
v6 = virtualinvoke v5.<okhttp3.Protocol: java.lang.String toString()>();
v7 = virtualinvoke v4.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>("ObsoleteUrlFactory-Selected-Protocol", v6);
v8 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.lang.String responseSourceHeader(okhttp3.Response)>(v2);
v9 = virtualinvoke v7.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>("ObsoleteUrlFactory-Response-Source", v8);
v10 = virtualinvoke v9.<okhttp3.Headers$Builder: okhttp3.Headers build()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers responseHeaders> = v10;
label1:
v11 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers responseHeaders>;
return v11;
}
public java.lang.String getHeaderField(int)
{
int v1, v3;
java.io.IOException v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v4;
okhttp3.Headers v2;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: int;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers getHeaders()>();
if v1 < 0 goto label2;
v3 = virtualinvoke v2.<okhttp3.Headers: int size()>();
if v1 < v3 goto label3;
label2:
return null;
label3:
v4 = virtualinvoke v2.<okhttp3.Headers: java.lang.String value(int)>(v1);
label4:
return v4;
label5:
v5 := @caughtexception;
return null;
catch java.io.IOException from label1 to label2 with label5;
catch java.io.IOException from label3 to label4 with label5;
}
public java.lang.String getHeaderField(java.lang.String)
{
okhttp3.Response v2;
java.io.IOException v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v1, v3;
okhttp3.Headers v4;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: java.lang.String;
label1:
if v1 != null goto label2;
v2 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(1);
v3 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.lang.String statusLineToString(okhttp3.Response)>(v2);
goto label3;
label2:
v4 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers getHeaders()>();
v3 = virtualinvoke v4.<okhttp3.Headers: java.lang.String get(java.lang.String)>(v1);
label3:
return v3;
label4:
v5 := @caughtexception;
return null;
catch java.io.IOException from label1 to label3 with label4;
}
public java.lang.String getHeaderFieldKey(int)
{
int v1, v3;
java.io.IOException v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v4;
okhttp3.Headers v2;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: int;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers getHeaders()>();
if v1 < 0 goto label2;
v3 = virtualinvoke v2.<okhttp3.Headers: int size()>();
if v1 < v3 goto label3;
label2:
return null;
label3:
v4 = virtualinvoke v2.<okhttp3.Headers: java.lang.String name(int)>(v1);
label4:
return v4;
label5:
v5 := @caughtexception;
return null;
catch java.io.IOException from label1 to label2 with label5;
catch java.io.IOException from label3 to label4 with label5;
}
public java.util.Map getHeaderFields()
{
java.util.Map v4, v6;
okhttp3.Response v2;
java.io.IOException v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v3;
okhttp3.Headers v1;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
label1:
v1 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers getHeaders()>();
v2 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(1);
v3 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.lang.String statusLineToString(okhttp3.Response)>(v2);
v4 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.util.Map toMultimap(okhttp3.Headers,java.lang.String)>(v1, v3);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
return v6;
catch java.io.IOException from label1 to label2 with label3;
}
public java.util.Map getRequestProperties()
{
java.lang.IllegalStateException v2;
java.util.Map v5;
okhttp3.Headers$Builder v3;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.Headers v4;
boolean v1;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean connected>;
if v1 == 0 goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot access request header fields after connection is set");
throw v2;
label1:
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v4 = virtualinvoke v3.<okhttp3.Headers$Builder: okhttp3.Headers build()>();
v5 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.util.Map toMultimap(okhttp3.Headers,java.lang.String)>(v4, null);
return v5;
}
public java.io.InputStream getInputStream() throws java.io.IOException
{
java.net.URL v6;
java.io.FileNotFoundException v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$ResponseBodyInputStream v8;
java.net.ProtocolException v2;
int v4;
okhttp3.Response v3;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v7;
okhttp3.ResponseBody v9;
boolean v1;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean doInput>;
if v1 != 0 goto label1;
v2 = new java.net.ProtocolException;
specialinvoke v2.<java.net.ProtocolException: void <init>(java.lang.String)>("This protocol does not support input");
throw v2;
label1:
v3 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(0);
v4 = virtualinvoke v3.<okhttp3.Response: int code()>();
if v4 < 400 goto label2;
v5 = new java.io.FileNotFoundException;
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.net.URL url>;
v7 = virtualinvoke v6.<java.net.URL: java.lang.String toString()>();
specialinvoke v5.<java.io.FileNotFoundException: void <init>(java.lang.String)>(v7);
throw v5;
label2:
v8 = new org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$ResponseBodyInputStream;
v9 = virtualinvoke v3.<okhttp3.Response: okhttp3.ResponseBody body()>();
specialinvoke v8.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$ResponseBodyInputStream: void <init>(okhttp3.ResponseBody)>(v9);
return v8;
}
public java.io.OutputStream getOutputStream() throws java.io.IOException
{
java.io.OutputStream v11;
okhttp3.Request v2;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor v8;
okhttp3.RequestBody v3;
java.net.ProtocolException v10, v4;
okhttp3.Call v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v5, v6;
boolean v7, v9;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call buildCall()>();
v2 = interfaceinvoke v1.<okhttp3.Call: okhttp3.Request request()>();
v3 = virtualinvoke v2.<okhttp3.Request: okhttp3.RequestBody body()>();
if v3 != null goto label1;
v4 = new java.net.ProtocolException;
v5 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("method does not support a request body: \u0001");
specialinvoke v4.<java.net.ProtocolException: void <init>(java.lang.String)>(v6);
throw v4;
label1:
v7 = v3 instanceof org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody;
if v7 == 0 goto label2;
virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: void connect()>();
v8 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor networkInterceptor>;
virtualinvoke v8.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor: void proceed()>();
label2:
v9 = v3.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OutputStreamRequestBody: boolean closed>;
if v9 == 0 goto label3;
v10 = new java.net.ProtocolException;
specialinvoke v10.<java.net.ProtocolException: void <init>(java.lang.String)>("cannot write request body after response has been read");
throw v10;
label3:
v11 = v3.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OutputStreamRequestBody: java.io.OutputStream outputStream>;
return v11;
}
public java.security.Permission getPermission()
{
java.net.SocketAddress v11;
java.net.URL v1;
okhttp3.OkHttpClient v9;
java.net.Proxy v10;
int v3, v4, v5, v7;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v13, v2, v6;
java.net.SocketPermission v12;
boolean v8;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.net.URL getURL()>();
v2 = virtualinvoke v1.<java.net.URL: java.lang.String getHost()>();
v3 = virtualinvoke v1.<java.net.URL: int getPort()>();
v4 = (int) -1;
if v3 == v4 goto label1;
v5 = virtualinvoke v1.<java.net.URL: int getPort()>();
goto label2;
label1:
v6 = virtualinvoke v1.<java.net.URL: java.lang.String getProtocol()>();
v5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>(v6);
label2:
v7 = v5;
v8 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean usingProxy()>();
if v8 == 0 goto label3;
v9 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v10 = virtualinvoke v9.<okhttp3.OkHttpClient: java.net.Proxy proxy()>();
v11 = virtualinvoke v10.<java.net.Proxy: java.net.SocketAddress address()>();
v2 = virtualinvoke v11.<java.net.InetSocketAddress: java.lang.String getHostName()>();
v7 = virtualinvoke v11.<java.net.InetSocketAddress: int getPort()>();
label3:
v12 = new java.net.SocketPermission;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v2, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
specialinvoke v12.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(v13, "connect, resolve");
return v12;
}
public java.lang.String getRequestProperty(java.lang.String)
{
okhttp3.Headers$Builder v2;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v1, v3;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
return null;
label1:
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v3 = virtualinvoke v2.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>(v1);
return v3;
}
public void setConnectTimeout(int)
{
java.util.concurrent.TimeUnit v4;
okhttp3.OkHttpClient v2, v6;
int v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.OkHttpClient$Builder v3, v5;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: int;
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v3 = virtualinvoke v2.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>();
v4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v5 = virtualinvoke v3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(v1, v4);
v6 = virtualinvoke v5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client> = v6;
return;
}
public void setInstanceFollowRedirects(boolean)
{
okhttp3.OkHttpClient v2, v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.OkHttpClient$Builder v3, v4;
boolean v1;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: boolean;
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v3 = virtualinvoke v2.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>();
v4 = virtualinvoke v3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)>(v1);
v5 = virtualinvoke v4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client> = v5;
return;
}
public boolean getInstanceFollowRedirects()
{
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.OkHttpClient v1;
boolean v2;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v2 = virtualinvoke v1.<okhttp3.OkHttpClient: boolean followRedirects()>();
return v2;
}
public int getConnectTimeout()
{
int v2;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.OkHttpClient v1;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v2 = virtualinvoke v1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>();
return v2;
}
public void setReadTimeout(int)
{
java.util.concurrent.TimeUnit v4;
okhttp3.OkHttpClient v2, v6;
int v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.OkHttpClient$Builder v3, v5;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: int;
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v3 = virtualinvoke v2.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>();
v4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v5 = virtualinvoke v3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(v1, v4);
v6 = virtualinvoke v5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client> = v6;
return;
}
public int getReadTimeout()
{
int v2;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.OkHttpClient v1;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v2 = virtualinvoke v1.<okhttp3.OkHttpClient: int readTimeoutMillis()>();
return v2;
}
private okhttp3.Call buildCall() throws java.io.IOException
{
okhttp3.Request$Builder v43, v44, v47, v49;
okhttp3.Dispatcher v59, v61;
byte v22, v30;
okhttp3.Headers$Builder v11, v13, v18, v20, v27, v45;
okhttp3.Request v50;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor v58;
long v21, v26, v29;
okhttp3.Call v1, v2, v65;
java.lang.String v10, v12, v14, v16, v19, v28, v39, v4, v48, v6, v9;
java.net.ProtocolException v8;
okhttp3.OkHttpClient v35, v51, v60, v64;
java.net.URL v38;
okio.Timeout v34;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$BufferedRequestBody v33;
boolean v17, v24, v25, v3, v5, v63, v7;
okhttp3.Interceptor v55;
java.util.List v53, v54, v56, v57;
okhttp3.HttpUrl v40;
okhttp3.OkHttpClient$Builder v52;
okhttp3.Headers v46;
int v23, v36;
java.util.concurrent.ExecutorService v62;
java.net.MalformedURLException v42;
java.lang.IllegalArgumentException v41;
java.util.concurrent.TimeUnit v37;
java.lang.Object v15, v32;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody v31;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call call>;
if v1 == null goto label01;
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call call>;
return v2;
label01:
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean connected> = 1;
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean doOutput>;
if v3 == 0 goto label03;
v4 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method>;
v5 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>("GET");
if v5 == 0 goto label02;
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method> = "POST";
goto label03;
label02:
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method>;
v7 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: boolean permitsRequestBody(java.lang.String)>(v6);
if v7 != 0 goto label03;
v8 = new java.net.ProtocolException;
v9 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method>;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 does not support writing");
specialinvoke v8.<java.net.ProtocolException: void <init>(java.lang.String)>(v10);
throw v8;
label03:
v11 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v12 = virtualinvoke v11.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("User-Agent");
if v12 != null goto label04;
v13 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v14 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.lang.String defaultUserAgent()>();
virtualinvoke v13.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>("User-Agent", v14);
label04:
v15 = null;
v16 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method>;
v17 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: boolean permitsRequestBody(java.lang.String)>(v16);
if v17 == 0 goto label13;
v18 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v19 = virtualinvoke v18.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Content-Type");
if v19 != null goto label05;
v20 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
virtualinvoke v20.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded");
label05:
v21 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long fixedContentLength>;
v22 = v21 cmp -1L;
if v22 != 0 goto label06;
v23 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: int chunkLength>;
if v23 <= 0 goto label07;
label06:
v24 = 1;
goto label08;
label07:
v24 = 0;
label08:
v25 = v24;
v26 = -1L;
v27 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v28 = virtualinvoke v27.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Content-Length");
v29 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long fixedContentLength>;
v30 = v29 cmp -1L;
if v30 == 0 goto label09;
v26 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long fixedContentLength>;
goto label10;
label09:
if v28 == null goto label10;
v26 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v28);
label10:
if v25 == 0 goto label11;
v31 = new org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody;
v32 = v31;
specialinvoke v31.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody: void <init>(long)>(v26);
goto label12;
label11:
v33 = new org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$BufferedRequestBody;
v32 = v33;
specialinvoke v33.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$BufferedRequestBody: void <init>(long)>(v26);
label12:
v15 = v32;
v34 = v32.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OutputStreamRequestBody: okio.Timeout timeout>;
v35 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v36 = virtualinvoke v35.<okhttp3.OkHttpClient: int writeTimeoutMillis()>();
v37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke v34.<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>(v36, v37);
label13:
v38 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.net.URL getURL()>();
v39 = virtualinvoke v38.<java.net.URL: java.lang.String toString()>();
v40 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)>(v39);
label14:
goto label16;
label15:
v41 := @caughtexception;
v42 = new java.net.MalformedURLException;
specialinvoke v42.<java.net.MalformedURLException: void <init>()>();
virtualinvoke v42.<java.net.MalformedURLException: java.lang.Throwable initCause(java.lang.Throwable)>(v41);
throw v42;
label16:
v43 = new okhttp3.Request$Builder;
specialinvoke v43.<okhttp3.Request$Builder: void <init>()>();
v44 = virtualinvoke v43.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>(v40);
v45 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v46 = virtualinvoke v45.<okhttp3.Headers$Builder: okhttp3.Headers build()>();
v47 = virtualinvoke v44.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>(v46);
v48 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method>;
v49 = virtualinvoke v47.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>(v48, v15);
v50 = virtualinvoke v49.<okhttp3.Request$Builder: okhttp3.Request build()>();
v51 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v52 = virtualinvoke v51.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>();
v53 = virtualinvoke v52.<okhttp3.OkHttpClient$Builder: java.util.List interceptors()>();
interfaceinvoke v53.<java.util.List: void clear()>();
v54 = virtualinvoke v52.<okhttp3.OkHttpClient$Builder: java.util.List interceptors()>();
v55 = <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$UnexpectedException: okhttp3.Interceptor INTERCEPTOR>;
interfaceinvoke v54.<java.util.List: boolean add(java.lang.Object)>(v55);
v56 = virtualinvoke v52.<okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()>();
interfaceinvoke v56.<java.util.List: void clear()>();
v57 = virtualinvoke v52.<okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()>();
v58 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor networkInterceptor>;
interfaceinvoke v57.<java.util.List: boolean add(java.lang.Object)>(v58);
v59 = new okhttp3.Dispatcher;
v60 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v61 = virtualinvoke v60.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>();
v62 = virtualinvoke v61.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>();
specialinvoke v59.<okhttp3.Dispatcher: void <init>(java.util.concurrent.ExecutorService)>(v62);
virtualinvoke v52.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)>(v59);
v63 = virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean getUseCaches()>();
if v63 != 0 goto label17;
virtualinvoke v52.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)>(null);
label17:
v64 = virtualinvoke v52.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();
v65 = virtualinvoke v64.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>(v50);
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call call> = v65;
return v65;
catch java.lang.IllegalArgumentException from label13 to label14 with label15;
}
private okhttp3.Response getResponse(boolean) throws java.io.IOException
{
java.lang.Thread v22;
boolean v1, v16;
okhttp3.Request v13;
java.lang.Throwable v10, v19, v24, v28, v29, v33, v5, v8;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor v12;
java.lang.AssertionError v34;
java.io.InterruptedIOException v23;
okhttp3.RequestBody v14;
okhttp3.Response v18, v25, v3, v31, v32, v4, v6, v7;
okhttp3.Call v11;
java.io.OutputStream v15;
java.io.IOException v26, v30, v9;
java.lang.InterruptedException v21;
java.lang.Object v17, v2, v20, v27;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: boolean;
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
entermonitor v2;
label01:
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response>;
if v3 == null goto label03;
v4 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response>;
exitmonitor v2;
label02:
return v4;
label03:
v5 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
if v5 == null goto label06;
if v1 == 0 goto label05;
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response networkResponse>;
if v6 == null goto label05;
v7 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response networkResponse>;
exitmonitor v2;
label04:
return v7;
label05:
v8 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
v9 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.io.IOException propagate(java.lang.Throwable)>(v8);
throw v9;
label06:
exitmonitor v2;
label07:
goto label09;
label08:
v10 := @caughtexception;
exitmonitor v2;
throw v10;
label09:
v11 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Call buildCall()>();
v12 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor networkInterceptor>;
virtualinvoke v12.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection$NetworkInterceptor: void proceed()>();
v13 = interfaceinvoke v11.<okhttp3.Call: okhttp3.Request request()>();
v14 = virtualinvoke v13.<okhttp3.Request: okhttp3.RequestBody body()>();
if v14 == null goto label10;
v15 = v14.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OutputStreamRequestBody: java.io.OutputStream outputStream>;
virtualinvoke v15.<java.io.OutputStream: void close()>();
label10:
v16 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean executed>;
if v16 == 0 goto label16;
v17 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
entermonitor v17;
label11:
v18 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response>;
if v18 != null goto label13;
v19 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
if v19 != null goto label13;
v20 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
virtualinvoke v20.<java.lang.Object: void wait()>();
goto label11;
label12:
v21 := @caughtexception;
v22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v22.<java.lang.Thread: void interrupt()>();
v23 = new java.io.InterruptedIOException;
specialinvoke v23.<java.io.InterruptedIOException: void <init>()>();
throw v23;
label13:
exitmonitor v17;
label14:
goto label20;
label15:
v24 := @caughtexception;
exitmonitor v17;
throw v24;
label16:
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean executed> = 1;
label17:
v25 = interfaceinvoke v11.<okhttp3.Call: okhttp3.Response execute()>();
virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: void onResponse(okhttp3.Call,okhttp3.Response)>(v11, v25);
label18:
goto label20;
label19:
v26 := @caughtexception;
virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: void onFailure(okhttp3.Call,java.io.IOException)>(v11, v26);
label20:
v27 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
entermonitor v27;
label21:
v28 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
if v28 == null goto label22;
v29 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure>;
v30 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.io.IOException propagate(java.lang.Throwable)>(v29);
throw v30;
label22:
v31 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response>;
if v31 == null goto label24;
v32 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response>;
exitmonitor v27;
label23:
return v32;
label24:
exitmonitor v27;
label25:
goto label27;
label26:
v33 := @caughtexception;
exitmonitor v27;
throw v33;
label27:
v34 = new java.lang.AssertionError;
specialinvoke v34.<java.lang.AssertionError: void <init>()>();
throw v34;
catch java.lang.Throwable from label01 to label02 with label08;
catch java.lang.Throwable from label03 to label04 with label08;
catch java.lang.Throwable from label05 to label07 with label08;
catch java.lang.InterruptedException from label11 to label12 with label12;
catch java.lang.Throwable from label11 to label14 with label15;
catch java.io.IOException from label17 to label18 with label19;
catch java.lang.Throwable from label21 to label23 with label26;
catch java.lang.Throwable from label24 to label25 with label26;
}
public boolean usingProxy()
{
java.net.Proxy$Type v4, v5;
okhttp3.OkHttpClient v2;
java.net.Proxy v1, v3;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
boolean v6;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.net.Proxy proxy>;
if v1 == null goto label1;
return 1;
label1:
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.OkHttpClient client>;
v3 = virtualinvoke v2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>();
if v3 == null goto label2;
v4 = virtualinvoke v3.<java.net.Proxy: java.net.Proxy$Type type()>();
v5 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;
if v4 == v5 goto label2;
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
public java.lang.String getResponseMessage() throws java.io.IOException
{
okhttp3.Response v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v2;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(1);
v2 = virtualinvoke v1.<okhttp3.Response: java.lang.String message()>();
return v2;
}
public int getResponseCode() throws java.io.IOException
{
int v2;
okhttp3.Response v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response getResponse(boolean)>(1);
v2 = virtualinvoke v1.<okhttp3.Response: int code()>();
return v2;
}
public void setRequestProperty(java.lang.String, java.lang.String)
{
java.lang.IllegalStateException v4;
okhttp3.Headers$Builder v6;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v1, v2;
java.lang.NullPointerException v5;
boolean v3;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean connected>;
if v3 == 0 goto label1;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set request property after connection is made");
throw v4;
label1:
if v1 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("field == null");
throw v5;
label2:
if v2 != null goto label3;
return;
label3:
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
virtualinvoke v6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>(v1, v2);
return;
}
public void setIfModifiedSince(long)
{
java.util.Date v5;
long v1, v2, v6;
byte v3;
okhttp3.Headers$Builder v4, v8;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v7;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: long;
specialinvoke v0.<java.net.HttpURLConnection: void setIfModifiedSince(long)>(v1);
v2 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long ifModifiedSince>;
v3 = v2 cmp 0L;
if v3 == 0 goto label1;
v4 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
v5 = new java.util.Date;
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long ifModifiedSince>;
specialinvoke v5.<java.util.Date: void <init>(long)>(v6);
v7 = staticinvoke <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.lang.String format(java.util.Date)>(v5);
virtualinvoke v4.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("If-Modified-Since", v7);
goto label2;
label1:
v8 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
virtualinvoke v8.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("If-Modified-Since");
label2:
return;
}
public void addRequestProperty(java.lang.String, java.lang.String)
{
java.lang.IllegalStateException v4;
okhttp3.Headers$Builder v6;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v1, v2;
java.lang.NullPointerException v5;
boolean v3;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: boolean connected>;
if v3 == 0 goto label1;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot add request property after connection is made");
throw v4;
label1:
if v1 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("field == null");
throw v5;
label2:
if v2 != null goto label3;
return;
label3:
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders>;
virtualinvoke v6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>(v1, v2);
return;
}
public void setRequestMethod(java.lang.String) throws java.net.ProtocolException
{
java.net.ProtocolException v4;
java.util.Set v2, v5;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
java.lang.String v1, v6;
boolean v3;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: java.lang.String;
v2 = <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.util.Set METHODS>;
v3 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v1);
if v3 != 0 goto label1;
v4 = new java.net.ProtocolException;
v5 = <org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory: java.util.Set METHODS>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.Set,java.lang.String)>(v5, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected one of \u0001 but was \u0001");
specialinvoke v4.<java.net.ProtocolException: void <init>(java.lang.String)>(v6);
throw v4;
label1:
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.String method> = v1;
return;
}
public void setFixedLengthStreamingMode(int)
{
int v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: int;
virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: void setFixedLengthStreamingMode(long)>(v1);
return;
}
public void setFixedLengthStreamingMode(long)
{
java.lang.IllegalStateException v3, v5;
long v1, v8;
java.lang.IllegalArgumentException v7;
byte v6;
int v4;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
boolean v2;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: long;
v2 = v0.<java.net.HttpURLConnection: boolean connected>;
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
throw v3;
label1:
v4 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: int chunkLength>;
if v4 <= 0 goto label2;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already in chunked mode");
throw v5;
label2:
v6 = v1 cmp 0L;
if v6 >= 0 goto label3;
v7 = new java.lang.IllegalArgumentException;
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("contentLength < 0");
throw v7;
label3:
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: long fixedContentLength> = v1;
v8 = staticinvoke <java.lang.Math: long min(long,long)>(v1, 2147483647L);
v0.<java.net.HttpURLConnection: int fixedContentLength> = v8;
return;
}
public void onFailure(okhttp3.Call, java.io.IOException)
{
java.lang.Throwable v5, v7;
java.io.IOException v2;
java.lang.Object v3, v6;
okhttp3.Call v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
boolean v4;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: okhttp3.Call;
v2 := @parameter1: java.io.IOException;
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
entermonitor v3;
label1:
v4 = v2 instanceof org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$UnexpectedException;
if v4 == 0 goto label2;
v5 = virtualinvoke v2.<java.io.IOException: java.lang.Throwable getCause()>();
goto label3;
label2:
v5 = v2;
label3:
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Throwable callFailure> = v5;
v6 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
virtualinvoke v6.<java.lang.Object: void notifyAll()>();
exitmonitor v3;
label4:
goto label6;
label5:
v7 := @caughtexception;
exitmonitor v3;
throw v7;
label6:
return;
catch java.lang.Throwable from label1 to label4 with label5;
}
public void onResponse(okhttp3.Call, okhttp3.Response)
{
java.lang.Throwable v9;
okhttp3.Request v5;
java.net.URL v7;
okhttp3.Response v2;
java.lang.Object v3, v8;
okhttp3.Call v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection v0;
okhttp3.Handshake v4;
okhttp3.HttpUrl v6;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection;
v1 := @parameter0: okhttp3.Call;
v2 := @parameter1: okhttp3.Response;
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
entermonitor v3;
label1:
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Response response> = v2;
v4 = virtualinvoke v2.<okhttp3.Response: okhttp3.Handshake handshake()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: okhttp3.Handshake handshake> = v4;
v5 = virtualinvoke v2.<okhttp3.Response: okhttp3.Request request()>();
v6 = virtualinvoke v5.<okhttp3.Request: okhttp3.HttpUrl url()>();
v7 = virtualinvoke v6.<okhttp3.HttpUrl: java.net.URL url()>();
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.net.URL url> = v7;
v8 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OkHttpURLConnection: java.lang.Object lock>;
virtualinvoke v8.<java.lang.Object: void notifyAll()>();
exitmonitor v3;
label2:
goto label4;
label3:
v9 := @caughtexception;
exitmonitor v3;
throw v9;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}