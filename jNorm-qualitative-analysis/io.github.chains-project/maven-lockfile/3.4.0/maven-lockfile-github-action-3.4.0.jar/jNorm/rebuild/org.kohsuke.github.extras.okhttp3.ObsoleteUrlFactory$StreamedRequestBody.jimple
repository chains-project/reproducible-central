final class org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody extends org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OutputStreamRequestBody
{
private final okio.Pipe pipe;
void <init>(long)
{
okio.BufferedSink v5;
long v1;
okio.Pipe v2, v3;
okio.Sink v4;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody;
v1 := @parameter0: long;
specialinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$OutputStreamRequestBody: void <init>()>();
v2 = new okio.Pipe;
specialinvoke v2.<okio.Pipe: void <init>(long)>(8192L);
v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody: okio.Pipe pipe> = v2;
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody: okio.Pipe pipe>;
v4 = virtualinvoke v3.<okio.Pipe: okio.Sink sink()>();
v5 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>(v4);
virtualinvoke v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody: void initOutputStream(okio.BufferedSink,long)>(v5, v1);
return;
}
public boolean isOneShot()
{
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody;
return 1;
}
public void writeTo(okio.BufferedSink) throws java.io.IOException
{
okio.Buffer v2;
okio.Source v4;
long v5, v7;
okio.Pipe v3;
byte v6;
okio.BufferedSink v1;
org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody;
v1 := @parameter0: okio.BufferedSink;
v2 = new okio.Buffer;
specialinvoke v2.<okio.Buffer: void <init>()>();
label1:
v3 = v0.<org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory$StreamedRequestBody: okio.Pipe pipe>;
v4 = virtualinvoke v3.<okio.Pipe: okio.Source source()>();
v5 = interfaceinvoke v4.<okio.Source: long read(okio.Buffer,long)>(v2, 8192L);
v6 = v5 cmp -1L;
if v6 == 0 goto label2;
v7 = virtualinvoke v2.<okio.Buffer: long size()>();
interfaceinvoke v1.<okio.BufferedSink: void write(okio.Buffer,long)>(v2, v7);
goto label1;
label2:
return;
}
}