public final class org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse extends org.kohsuke.github.connector.GitHubConnectorResponse$ByteArrayResponse
{
private final java.net.HttpURLConnection connection;
void <init>(org.kohsuke.github.connector.GitHubConnectorRequest, int, java.util.Map, java.net.HttpURLConnection)
{
java.net.HttpURLConnection v4;
org.kohsuke.github.connector.GitHubConnectorRequest v1;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse v0;
java.util.Map v3;
int v2;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorRequest;
v2 := @parameter1: int;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.net.HttpURLConnection;
specialinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponse$ByteArrayResponse: void <init>(org.kohsuke.github.connector.GitHubConnectorRequest,int,java.util.Map)>(v1, v2, v3);
v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse: java.net.HttpURLConnection connection> = v4;
return;
}
protected java.io.InputStream rawBodyStream() throws java.io.IOException
{
java.net.HttpURLConnection v1, v3;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse v0;
java.io.InputStream v2;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse;
v1 = v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse: java.net.HttpURLConnection connection>;
v2 = virtualinvoke v1.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();
if v2 != null goto label1;
v3 = v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse: java.net.HttpURLConnection connection>;
v2 = virtualinvoke v3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();
label1:
return v2;
}
public java.net.HttpURLConnection toHttpURLConnection()
{
java.net.HttpURLConnection v1;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse v0;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse;
v1 = v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse: java.net.HttpURLConnection connection>;
return v1;
}
public void close() throws java.io.IOException
{
java.net.HttpURLConnection v1;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse v0;
java.io.IOException v3;
java.io.InputStream v2;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse;
specialinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponse$ByteArrayResponse: void close()>();
label1:
v1 = v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse: java.net.HttpURLConnection connection>;
v2 = virtualinvoke v1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();
staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
}