public class org.slf4j.event.DefaultLoggingEvent extends java.lang.Object implements org.slf4j.event.LoggingEvent
{
org.slf4j.Logger logger;
org.slf4j.event.Level level;
java.lang.String message;
java.util.List markers;
java.util.List arguments;
java.util.List keyValuePairs;
java.lang.Throwable throwable;
java.lang.String threadName;
long timeStamp;
java.lang.String callerBoundary;
public void <init>(org.slf4j.event.Level, org.slf4j.Logger)
{
org.slf4j.event.DefaultLoggingEvent v0;
org.slf4j.Logger v2;
org.slf4j.event.Level v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: org.slf4j.event.Level;
v2 := @parameter1: org.slf4j.Logger;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.slf4j.event.DefaultLoggingEvent: org.slf4j.Logger logger> = v2;
v0.<org.slf4j.event.DefaultLoggingEvent: org.slf4j.event.Level level> = v1;
return;
}
public void addMarker(org.slf4j.Marker)
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v2, v4;
org.slf4j.Marker v1;
java.util.ArrayList v3;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: org.slf4j.Marker;
v2 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List markers>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>(int)>(2);
v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List markers> = v3;
label1:
v4 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List markers>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return;
}
public java.util.List getMarkers()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List markers>;
return v1;
}
public void addArgument(java.lang.Object)
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.Object v1;
java.util.List v2;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List getNonNullArguments()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return;
}
public transient void addArguments(java.lang.Object[])
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v2, v3;
java.lang.Object[] v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: java.lang.Object[];
v2 = specialinvoke v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List getNonNullArguments()>();
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v3);
return;
}
private java.util.List getNonNullArguments()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v1, v3;
java.util.ArrayList v2;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List arguments>;
if v1 != null goto label1;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(3);
v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List arguments> = v2;
label1:
v3 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List arguments>;
return v3;
}
public java.util.List getArguments()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List arguments>;
return v1;
}
public java.lang.Object[] getArgumentArray()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v1, v2;
java.lang.Object[] v3;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List arguments>;
if v1 != null goto label1;
return null;
label1:
v2 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List arguments>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object[] toArray()>();
return v3;
}
public void addKeyValue(java.lang.String, java.lang.Object)
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v3;
org.slf4j.event.KeyValuePair v4;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = specialinvoke v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List getNonnullKeyValuePairs()>();
v4 = new org.slf4j.event.KeyValuePair;
specialinvoke v4.<org.slf4j.event.KeyValuePair: void <init>(java.lang.String,java.lang.Object)>(v1, v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v4);
return;
}
private java.util.List getNonnullKeyValuePairs()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v1, v3;
java.util.ArrayList v2;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List keyValuePairs>;
if v1 != null goto label1;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(4);
v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List keyValuePairs> = v2;
label1:
v3 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List keyValuePairs>;
return v3;
}
public java.util.List getKeyValuePairs()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.util.List v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.util.List keyValuePairs>;
return v1;
}
public void setThrowable(java.lang.Throwable)
{
java.lang.Throwable v1;
org.slf4j.event.DefaultLoggingEvent v0;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: java.lang.Throwable;
v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.Throwable throwable> = v1;
return;
}
public org.slf4j.event.Level getLevel()
{
org.slf4j.event.DefaultLoggingEvent v0;
org.slf4j.event.Level v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: org.slf4j.event.Level level>;
return v1;
}
public java.lang.String getLoggerName()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.String v2;
org.slf4j.Logger v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: org.slf4j.Logger logger>;
v2 = interfaceinvoke v1.<org.slf4j.Logger: java.lang.String getName()>();
return v2;
}
public java.lang.String getMessage()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.String v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.String message>;
return v1;
}
public void setMessage(java.lang.String)
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.String v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: java.lang.String;
v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.String message> = v1;
return;
}
public java.lang.Throwable getThrowable()
{
java.lang.Throwable v1;
org.slf4j.event.DefaultLoggingEvent v0;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.Throwable throwable>;
return v1;
}
public java.lang.String getThreadName()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.String v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.String threadName>;
return v1;
}
public long getTimeStamp()
{
org.slf4j.event.DefaultLoggingEvent v0;
long v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: long timeStamp>;
return v1;
}
public void setTimeStamp(long)
{
org.slf4j.event.DefaultLoggingEvent v0;
long v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: long;
v0.<org.slf4j.event.DefaultLoggingEvent: long timeStamp> = v1;
return;
}
public void setCallerBoundary(java.lang.String)
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.String v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 := @parameter0: java.lang.String;
v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.String callerBoundary> = v1;
return;
}
public java.lang.String getCallerBoundary()
{
org.slf4j.event.DefaultLoggingEvent v0;
java.lang.String v1;
v0 := @this: org.slf4j.event.DefaultLoggingEvent;
v1 = v0.<org.slf4j.event.DefaultLoggingEvent: java.lang.String callerBoundary>;
return v1;
}
}