public abstract class org.slf4j.helpers.MarkerIgnoringBase extends org.slf4j.helpers.NamedLoggerBase implements org.slf4j.Logger
{
private static final long serialVersionUID;
public void <init>()
{
org.slf4j.helpers.MarkerIgnoringBase v0;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
specialinvoke v0.<org.slf4j.helpers.NamedLoggerBase: void <init>()>();
return;
}
public boolean isTraceEnabled(org.slf4j.Marker)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
org.slf4j.Marker v1;
boolean v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 = virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isTraceEnabled()>();
return v2;
}
public void trace(org.slf4j.Marker, java.lang.String)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
org.slf4j.Marker v1;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String)>(v2);
return;
}
public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object)>(v2, v3);
return;
}
public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3, v4;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(v2, v3, v4);
return;
}
public transient void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object[])>(v2, v3);
return;
}
public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Throwable)>(v2, v3);
return;
}
public boolean isDebugEnabled(org.slf4j.Marker)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
org.slf4j.Marker v1;
boolean v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 = virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isDebugEnabled()>();
return v2;
}
public void debug(org.slf4j.Marker, java.lang.String)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
org.slf4j.Marker v1;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String)>(v2);
return;
}
public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object)>(v2, v3);
return;
}
public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3, v4;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(v2, v3, v4);
return;
}
public transient void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object[])>(v2, v3);
return;
}
public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Throwable)>(v2, v3);
return;
}
public boolean isInfoEnabled(org.slf4j.Marker)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
org.slf4j.Marker v1;
boolean v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 = virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isInfoEnabled()>();
return v2;
}
public void info(org.slf4j.Marker, java.lang.String)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
org.slf4j.Marker v1;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String)>(v2);
return;
}
public void info(org.slf4j.Marker, java.lang.String, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object)>(v2, v3);
return;
}
public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3, v4;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object,java.lang.Object)>(v2, v3, v4);
return;
}
public transient void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object[])>(v2, v3);
return;
}
public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Throwable)>(v2, v3);
return;
}
public boolean isWarnEnabled(org.slf4j.Marker)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
org.slf4j.Marker v1;
boolean v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 = virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isWarnEnabled()>();
return v2;
}
public void warn(org.slf4j.Marker, java.lang.String)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
org.slf4j.Marker v1;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String)>(v2);
return;
}
public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object)>(v2, v3);
return;
}
public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3, v4;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object,java.lang.Object)>(v2, v3, v4);
return;
}
public transient void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object[])>(v2, v3);
return;
}
public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Throwable)>(v2, v3);
return;
}
public boolean isErrorEnabled(org.slf4j.Marker)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
org.slf4j.Marker v1;
boolean v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 = virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isErrorEnabled()>();
return v2;
}
public void error(org.slf4j.Marker, java.lang.String)
{
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
org.slf4j.Marker v1;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String)>(v2);
return;
}
public void error(org.slf4j.Marker, java.lang.String, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object)>(v2, v3);
return;
}
public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
{
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Object v3, v4;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object,java.lang.Object)>(v2, v3, v4);
return;
}
public transient void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object[])>(v2, v3);
return;
}
public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
org.slf4j.Marker v1;
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.String v2;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 := @parameter0: org.slf4j.Marker;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Throwable)>(v2, v3);
return;
}
public java.lang.String toString()
{
org.slf4j.helpers.MarkerIgnoringBase v0;
java.lang.Class v1;
java.lang.String v2, v3, v4;
v0 := @this: org.slf4j.helpers.MarkerIgnoringBase;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v3 = virtualinvoke v0.<org.slf4j.helpers.MarkerIgnoringBase: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001)");
return v4;
}
}