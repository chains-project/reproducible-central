public final class org.wildfly.common.Branch extends java.lang.Object
{
static final boolean $assertionsDisabled;
private void <init>()
{
org.wildfly.common.Branch v0;
v0 := @this: org.wildfly.common.Branch;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static boolean veryLikely(boolean)
{
boolean v0;
v0 := @parameter0: boolean;
return v0;
}
public static boolean veryUnlikely(boolean)
{
boolean v0;
v0 := @parameter0: boolean;
return v0;
}
public static boolean likely(boolean)
{
boolean v0;
v0 := @parameter0: boolean;
return v0;
}
public static boolean unlikely(boolean)
{
boolean v0;
v0 := @parameter0: boolean;
return v0;
}
public static boolean probability(float, boolean)
{
byte v3, v4;
float v0;
java.lang.AssertionError v5;
boolean v1, v2;
v0 := @parameter0: float;
v1 := @parameter1: boolean;
v2 = <org.wildfly.common.Branch: boolean $assertionsDisabled>;
if v2 != 0 goto label2;
v3 = 0.0F cmpg v0;
if v3 > 0 goto label1;
v4 = v0 cmpg 1.0F;
if v4 <= 0 goto label2;
label1:
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label2:
return v1;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/wildfly/common/Branch;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.wildfly.common.Branch: boolean $assertionsDisabled> = v2;
return;
}
}