final class org.wildfly.common.archive.HugeIndex extends org.wildfly.common.archive.Index
{
private final long[] table;
void <init>(int)
{
org.wildfly.common.archive.HugeIndex v0;
long[] v3;
int v1, v2;
v0 := @this: org.wildfly.common.archive.HugeIndex;
v1 := @parameter0: int;
specialinvoke v0.<org.wildfly.common.archive.Index: void <init>(int)>(v1);
v2 = virtualinvoke v0.<org.wildfly.common.archive.HugeIndex: int size()>();
v3 = newarray (long)[v2];
staticinvoke <java.util.Arrays: void fill(long[],long)>(v3, -1L);
v0.<org.wildfly.common.archive.HugeIndex: long[] table> = v3;
return;
}
long get(int)
{
org.wildfly.common.archive.HugeIndex v0;
long[] v2;
int v1;
long v3;
v0 := @this: org.wildfly.common.archive.HugeIndex;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.archive.HugeIndex: long[] table>;
v3 = v2[v1];
return v3;
}
void put(int, long)
{
org.wildfly.common.archive.HugeIndex v0;
long v2, v4;
long[] v3;
byte v5;
int v1, v6, v7;
v0 := @this: org.wildfly.common.archive.HugeIndex;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 = v0.<org.wildfly.common.archive.HugeIndex: long[] table>;
v4 = v3[v1];
label1:
v5 = v4 cmp -1L;
if v5 == 0 goto label2;
v6 = v1 + 1;
v7 = virtualinvoke v0.<org.wildfly.common.archive.HugeIndex: int getMask()>();
v1 = v6 & v7;
v4 = v3[v1];
goto label1;
label2:
v3[v1] = v2;
return;
}
}