public interface  org.wildfly.common.function.ExceptionBiFunction extends java.lang.Object
{
public abstract java.lang.Object apply(java.lang.Object, java.lang.Object) throws java.lang.Exception;
public org.wildfly.common.function.ExceptionBiFunction andThen(org.wildfly.common.function.ExceptionFunction)
{
org.wildfly.common.function.ExceptionBiFunction v0, v2;
org.wildfly.common.function.ExceptionFunction v1;
v0 := @this: org.wildfly.common.function.ExceptionBiFunction;
v1 := @parameter0: org.wildfly.common.function.ExceptionFunction;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionBiFunction$lambda_andThen_0__3262: org.wildfly.common.function.ExceptionBiFunction bootstrap$(org.wildfly.common.function.ExceptionBiFunction,org.wildfly.common.function.ExceptionFunction)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionBiConsumer andThen(org.wildfly.common.function.ExceptionConsumer)
{
org.wildfly.common.function.ExceptionBiFunction v0;
org.wildfly.common.function.ExceptionConsumer v1;
org.wildfly.common.function.ExceptionBiConsumer v2;
v0 := @this: org.wildfly.common.function.ExceptionBiFunction;
v1 := @parameter0: org.wildfly.common.function.ExceptionConsumer;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionBiFunction$lambda_andThen_1__3263: org.wildfly.common.function.ExceptionBiConsumer bootstrap$(org.wildfly.common.function.ExceptionBiFunction,org.wildfly.common.function.ExceptionConsumer)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionSupplier compose(org.wildfly.common.function.ExceptionSupplier, org.wildfly.common.function.ExceptionSupplier)
{
org.wildfly.common.function.ExceptionBiFunction v0;
org.wildfly.common.function.ExceptionSupplier v1, v2, v3;
v0 := @this: org.wildfly.common.function.ExceptionBiFunction;
v1 := @parameter0: org.wildfly.common.function.ExceptionSupplier;
v2 := @parameter1: org.wildfly.common.function.ExceptionSupplier;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("before1", v1);
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("before2", v2);
v3 = staticinvoke <org.wildfly.common.function.ExceptionBiFunction$lambda_compose_2__3264: org.wildfly.common.function.ExceptionSupplier bootstrap$(org.wildfly.common.function.ExceptionBiFunction,org.wildfly.common.function.ExceptionSupplier,org.wildfly.common.function.ExceptionSupplier)>(v0, v1, v2);
return v3;
}
}