final class org.wildfly.common.iteration.Base16EncodingCodePointIterator extends org.wildfly.common.iteration.CodePointIterator
{
private org.wildfly.common.iteration.ByteIterator iter;
private final boolean toUpperCase;
int b;
boolean lo;
static final boolean $assertionsDisabled;
void <init>(org.wildfly.common.iteration.ByteIterator, boolean)
{
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
org.wildfly.common.iteration.ByteIterator v1;
boolean v2;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 := @parameter0: org.wildfly.common.iteration.ByteIterator;
v2 := @parameter1: boolean;
specialinvoke v0.<org.wildfly.common.iteration.CodePointIterator: void <init>()>();
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter> = v1;
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean toUpperCase> = v2;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
org.wildfly.common.iteration.ByteIterator v2;
boolean v1, v3, v4;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v1 != 0 goto label1;
v2 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v3 = virtualinvoke v2.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
public boolean hasPrevious()
{
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
org.wildfly.common.iteration.ByteIterator v2;
boolean v1, v3, v4;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v1 != 0 goto label1;
v2 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v3 = virtualinvoke v2.<org.wildfly.common.iteration.ByteIterator: boolean hasPrevious()>();
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
private int hex(int)
{
java.lang.AssertionError v4;
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
byte v6;
int v1, v2, v7, v8;
boolean v3, v5;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 := @parameter0: int;
if v1 >= 10 goto label1;
v2 = 48 + v1;
return v2;
label1:
v3 = <org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean $assertionsDisabled>;
if v3 != 0 goto label2;
if v1 < 16 goto label2;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label2:
v5 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean toUpperCase>;
if v5 == 0 goto label3;
v6 = 65;
goto label4;
label3:
v6 = 97;
label4:
v7 = v6 + v1;
v8 = v7 - 10;
return v8;
}
public int next() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v7;
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
int v10, v11, v4, v5, v6, v8, v9;
java.util.NoSuchElementException v2;
boolean v1, v3;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v3 == 0 goto label2;
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo> = 0;
v4 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b>;
v5 = v4 & 15;
v6 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v5);
return v6;
label2:
v7 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v8 = virtualinvoke v7.<org.wildfly.common.iteration.ByteIterator: int next()>();
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b> = v8;
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo> = 1;
v9 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b>;
v10 = v9 >> 4;
v11 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v10);
return v11;
}
public int peekNext() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v7;
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
int v10, v4, v5, v6, v8, v9;
java.util.NoSuchElementException v2;
boolean v1, v3;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v3 == 0 goto label2;
v4 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b>;
v5 = v4 & 15;
v6 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v5);
return v6;
label2:
v7 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v8 = virtualinvoke v7.<org.wildfly.common.iteration.ByteIterator: int peekNext()>();
v9 = v8 >> 4;
v10 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v9);
return v10;
}
public int previous() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v4, v8;
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
int v10, v11, v12, v5, v6, v7, v9;
java.util.NoSuchElementException v2;
boolean v1, v3;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v3 == 0 goto label2;
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo> = 0;
v4 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
virtualinvoke v4.<org.wildfly.common.iteration.ByteIterator: int previous()>();
v5 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b>;
v6 = v5 >> 4;
v7 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v6);
return v7;
label2:
v8 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v9 = virtualinvoke v8.<org.wildfly.common.iteration.ByteIterator: int peekPrevious()>();
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b> = v9;
v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo> = 1;
v10 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b>;
v11 = v10 & 15;
v12 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v11);
return v12;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v7;
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
int v10, v4, v5, v6, v8, v9;
java.util.NoSuchElementException v2;
boolean v1, v3;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v3 == 0 goto label2;
v4 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int b>;
v5 = v4 >> 4;
v6 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v5);
return v6;
label2:
v7 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v8 = virtualinvoke v7.<org.wildfly.common.iteration.ByteIterator: int peekPrevious()>();
v9 = v8 & 15;
v10 = specialinvoke v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: int hex(int)>(v9);
return v10;
}
public long getIndex()
{
org.wildfly.common.iteration.Base16EncodingCodePointIterator v0;
org.wildfly.common.iteration.ByteIterator v1;
long v2, v3, v6;
boolean v4, v5;
v0 := @this: org.wildfly.common.iteration.Base16EncodingCodePointIterator;
v1 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: long getIndex()>();
v3 = v2 * 2L;
v4 = v0.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean lo>;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v6 = v3 + v5;
return v6;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/wildfly/common/iteration/Base16EncodingCodePointIterator;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.wildfly.common.iteration.Base16EncodingCodePointIterator: boolean $assertionsDisabled> = v2;
return;
}
}