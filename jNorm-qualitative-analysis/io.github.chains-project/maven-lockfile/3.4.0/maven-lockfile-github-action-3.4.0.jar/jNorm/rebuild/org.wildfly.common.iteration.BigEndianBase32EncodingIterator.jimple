final class org.wildfly.common.iteration.BigEndianBase32EncodingIterator extends org.wildfly.common.iteration.Base32EncodingCodePointIterator
{
private final org.wildfly.common.codec.Base32Alphabet alphabet;
void <init>(org.wildfly.common.iteration.ByteIterator, boolean, org.wildfly.common.codec.Base32Alphabet)
{
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.codec.Base32Alphabet v3;
boolean v2;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: org.wildfly.common.iteration.ByteIterator;
v2 := @parameter1: boolean;
v3 := @parameter2: org.wildfly.common.codec.Base32Alphabet;
specialinvoke v0.<org.wildfly.common.iteration.Base32EncodingCodePointIterator: void <init>(org.wildfly.common.iteration.ByteIterator,boolean)>(v1, v2);
v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet> = v3;
return;
}
int calc0(int)
{
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v3, v4, v5;
org.wildfly.common.codec.Base32Alphabet v2;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v3 = v1 >> 3;
v4 = v3 & 31;
v5 = virtualinvoke v2.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v4);
return v5;
}
int calc1(int, int)
{
org.wildfly.common.codec.Base32Alphabet v3;
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v2, v4, v5, v6, v7, v8;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v4 = v1 << 2;
v5 = v2 >> 6;
v6 = v4 | v5;
v7 = v6 & 31;
v8 = virtualinvoke v3.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v7);
return v8;
}
int calc2(int)
{
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v3, v4, v5;
org.wildfly.common.codec.Base32Alphabet v2;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v3 = v1 >> 1;
v4 = v3 & 31;
v5 = virtualinvoke v2.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v4);
return v5;
}
int calc3(int, int)
{
org.wildfly.common.codec.Base32Alphabet v3;
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v2, v4, v5, v6, v7, v8;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v4 = v1 << 4;
v5 = v2 >> 4;
v6 = v4 | v5;
v7 = v6 & 31;
v8 = virtualinvoke v3.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v7);
return v8;
}
int calc4(int, int)
{
org.wildfly.common.codec.Base32Alphabet v3;
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v2, v4, v5, v6, v7, v8;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v4 = v1 << 1;
v5 = v2 >> 7;
v6 = v4 | v5;
v7 = v6 & 31;
v8 = virtualinvoke v3.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v7);
return v8;
}
int calc5(int)
{
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v3, v4, v5;
org.wildfly.common.codec.Base32Alphabet v2;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v3 = v1 >> 2;
v4 = v3 & 31;
v5 = virtualinvoke v2.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v4);
return v5;
}
int calc6(int, int)
{
org.wildfly.common.codec.Base32Alphabet v3;
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v2, v4, v5, v6, v7, v8;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v4 = v1 << 3;
v5 = v2 >> 5;
v6 = v4 | v5;
v7 = v6 & 31;
v8 = virtualinvoke v3.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v7);
return v8;
}
int calc7(int)
{
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v0;
int v1, v3, v4;
org.wildfly.common.codec.Base32Alphabet v2;
v0 := @this: org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: org.wildfly.common.codec.Base32Alphabet alphabet>;
v3 = v1 & 31;
v4 = virtualinvoke v2.<org.wildfly.common.codec.Base32Alphabet: int encode(int)>(v3);
return v4;
}
}