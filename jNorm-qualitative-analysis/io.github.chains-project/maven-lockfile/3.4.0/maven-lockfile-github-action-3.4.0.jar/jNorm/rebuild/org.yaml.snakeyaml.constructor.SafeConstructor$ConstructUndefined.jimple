public final class org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined extends org.yaml.snakeyaml.constructor.AbstractConstruct
{
public void <init>()
{
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined v0;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined;
specialinvoke v0.<org.yaml.snakeyaml.constructor.AbstractConstruct: void <init>()>();
return;
}
public java.lang.Object construct(org.yaml.snakeyaml.nodes.Node)
{
org.yaml.snakeyaml.nodes.Node v1;
org.yaml.snakeyaml.error.Mark v5;
java.lang.String v4;
org.yaml.snakeyaml.constructor.ConstructorException v2;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined v0;
org.yaml.snakeyaml.nodes.Tag v3;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 = new org.yaml.snakeyaml.constructor.ConstructorException;
v3 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.nodes.Tag getTag()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.nodes.Tag)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("could not determine a constructor for the tag \u0001");
v5 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v2.<org.yaml.snakeyaml.constructor.ConstructorException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>(null, null, v4, v5);
throw v2;
}
}