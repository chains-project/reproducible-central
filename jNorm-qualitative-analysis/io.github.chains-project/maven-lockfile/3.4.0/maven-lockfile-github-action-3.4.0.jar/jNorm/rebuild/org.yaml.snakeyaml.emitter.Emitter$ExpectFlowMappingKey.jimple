class org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey v0;
org.yaml.snakeyaml.emitter.Emitter v1;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.events.Event v2, v31, v32;
org.yaml.snakeyaml.comments.CommentEventsCollector v20, v29;
boolean v11, v16, v3, v36, v42, v45, v49, v51;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue v60;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue v54;
int v38, v40;
java.lang.Boolean v10, v15, v35, v44, v48;
org.yaml.snakeyaml.util.ArrayStack v24, v53, v59, v6;
org.yaml.snakeyaml.emitter.Emitter v1, v12, v13, v14, v17, v18, v19, v21, v22, v23, v26, v27, v28, v30, v33, v34, v37, v39, v4, v41, v43, v46, v47, v5, v50, v52, v55, v56, v57, v58, v61, v62, v8, v9;
java.lang.Object v25, v7;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey v0;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v2 = v1.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v3 = v2 instanceof org.yaml.snakeyaml.events.MappingEndEvent;
if v3 == 0 goto label3;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v6 = v5.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack indents>;
v7 = virtualinvoke v6.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v4.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v7;
v8 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
staticinvoke <org.yaml.snakeyaml.emitter.Emitter: int access$2210(org.yaml.snakeyaml.emitter.Emitter)>(v8);
v9 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v10 = v9.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v11 = virtualinvoke v10.<java.lang.Boolean: boolean booleanValue()>();
if v11 == 0 goto label1;
v12 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v12.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>(",", 0, 0, 0);
v13 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v13.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label1:
v14 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v15 = v14.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v16 = virtualinvoke v15.<java.lang.Boolean: boolean booleanValue()>();
if v16 == 0 goto label2;
v17 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v17.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label2:
v18 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v18.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("}", 0, 0, 0);
v19 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v20 = v19.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
virtualinvoke v20.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.comments.CommentEventsCollector collectEvents()>();
v21 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v21.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
v22 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v23 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v24 = v23.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v25 = virtualinvoke v24.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v22.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v25;
goto label8;
label3:
v26 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v26.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>(",", 0, 0, 0);
v27 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v28 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v29 = v28.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v30 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v31 = v30.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v32 = virtualinvoke v29.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEventsAndPoll(org.yaml.snakeyaml.events.Event)>(v31);
v27.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v32;
v33 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v33.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
v34 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v35 = v34.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v36 = virtualinvoke v35.<java.lang.Boolean: boolean booleanValue()>();
if v36 != 0 goto label5;
v37 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v38 = v37.<org.yaml.snakeyaml.emitter.Emitter: int column>;
v39 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v40 = v39.<org.yaml.snakeyaml.emitter.Emitter: int bestWidth>;
if v38 <= v40 goto label4;
v41 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v42 = v41.<org.yaml.snakeyaml.emitter.Emitter: boolean splitLines>;
if v42 != 0 goto label5;
label4:
v43 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v44 = v43.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v45 = virtualinvoke v44.<java.lang.Boolean: boolean booleanValue()>();
if v45 == 0 goto label6;
label5:
v46 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v46.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label6:
v47 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v48 = v47.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v49 = virtualinvoke v48.<java.lang.Boolean: boolean booleanValue()>();
if v49 != 0 goto label7;
v50 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v51 = specialinvoke v50.<org.yaml.snakeyaml.emitter.Emitter: boolean checkSimpleKey()>();
if v51 == 0 goto label7;
v52 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v53 = v52.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v54 = new org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue;
v55 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v54.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v55);
virtualinvoke v53.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v54);
v56 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v56.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 1, 1);
goto label8;
label7:
v57 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v57.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("?", 1, 0, 0);
v58 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v59 = v58.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v60 = new org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue;
v61 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v60.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v61);
virtualinvoke v59.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v60);
v62 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v62.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 1, 0);
label8:
return;
}
}