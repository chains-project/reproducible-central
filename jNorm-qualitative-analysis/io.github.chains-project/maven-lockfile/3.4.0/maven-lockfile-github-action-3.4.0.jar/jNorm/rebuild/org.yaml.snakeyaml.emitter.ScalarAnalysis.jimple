public final class org.yaml.snakeyaml.emitter.ScalarAnalysis extends java.lang.Object
{
private final java.lang.String scalar;
private final boolean empty;
private final boolean multiline;
private final boolean allowFlowPlain;
private final boolean allowBlockPlain;
private final boolean allowSingleQuoted;
private final boolean allowBlock;
public void <init>(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean)
{
java.lang.String v1;
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v2, v3, v4, v5, v6, v7;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: java.lang.String scalar> = v1;
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean empty> = v2;
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean multiline> = v3;
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowFlowPlain> = v4;
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowBlockPlain> = v5;
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowSingleQuoted> = v6;
v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowBlock> = v7;
return;
}
public java.lang.String getScalar()
{
java.lang.String v1;
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: java.lang.String scalar>;
return v1;
}
public boolean isEmpty()
{
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean empty>;
return v1;
}
public boolean isMultiline()
{
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean multiline>;
return v1;
}
public boolean isAllowFlowPlain()
{
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowFlowPlain>;
return v1;
}
public boolean isAllowBlockPlain()
{
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowBlockPlain>;
return v1;
}
public boolean isAllowSingleQuoted()
{
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowSingleQuoted>;
return v1;
}
public boolean isAllowBlock()
{
org.yaml.snakeyaml.emitter.ScalarAnalysis v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.emitter.ScalarAnalysis;
v1 = v0.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean allowBlock>;
return v1;
}
}