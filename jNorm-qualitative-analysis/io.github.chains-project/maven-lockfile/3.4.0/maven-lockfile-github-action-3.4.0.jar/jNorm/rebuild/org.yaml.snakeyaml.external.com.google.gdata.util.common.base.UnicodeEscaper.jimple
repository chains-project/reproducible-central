public abstract class org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper extends java.lang.Object implements org.yaml.snakeyaml.external.com.google.gdata.util.common.base.Escaper
{
private static final int DEST_PAD;
private static final java.lang.ThreadLocal DEST_TL;
static final boolean $assertionsDisabled;
public void <init>()
{
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper v0;
v0 := @this: org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
protected abstract char[] escape(int);
protected int nextEscapeIndex(java.lang.CharSequence, int, int)
{
java.lang.CharSequence v1;
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper v0;
byte v9;
int v2, v3, v4, v5, v7;
char[] v6;
boolean v8;
v0 := @this: org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v2;
label1:
if v4 >= v3 goto label4;
v5 = staticinvoke <org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: int codePointAt(java.lang.CharSequence,int,int)>(v1, v4, v3);
if v5 < 0 goto label4;
v6 = virtualinvoke v0.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: char[] escape(int)>(v5);
if v6 != null goto label4;
v7 = v4;
v8 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(v5);
if v8 == 0 goto label2;
v9 = 2;
goto label3;
label2:
v9 = 1;
label3:
v4 = v7 + v9;
goto label1;
label4:
return v4;
}
public java.lang.String escape(java.lang.String)
{
int v2, v3;
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper v0;
java.lang.String v1, v4;
v0 := @this: org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = virtualinvoke v0.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: int nextEscapeIndex(java.lang.CharSequence,int,int)>(v1, 0, v2);
if v3 != v2 goto label1;
v4 = v1;
goto label2;
label1:
v4 = virtualinvoke v0.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: java.lang.String escapeSlow(java.lang.String,int)>(v1, v3);
label2:
return v4;
}
protected final java.lang.String escapeSlow(java.lang.String, int)
{
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper v0;
byte v24;
int v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v25, v26, v27, v3, v6, v7, v8;
java.lang.String v1, v28;
boolean v23;
java.lang.ThreadLocal v4;
java.lang.IllegalArgumentException v9;
char[] v10;
java.lang.Object v5;
v0 := @this: org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
v4 = <org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: java.lang.ThreadLocal DEST_TL>;
v5 = virtualinvoke v4.<java.lang.ThreadLocal: java.lang.Object get()>();
v6 = 0;
v7 = 0;
label01:
if v2 >= v3 goto label08;
v8 = staticinvoke <org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: int codePointAt(java.lang.CharSequence,int,int)>(v1, v2, v3);
if v8 >= 0 goto label02;
v9 = new java.lang.IllegalArgumentException;
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Trailing high surrogate at end of input");
throw v9;
label02:
v10 = virtualinvoke v0.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: char[] escape(int)>(v8);
if v10 == null goto label05;
v11 = v2 - v7;
v12 = v6 + v11;
v13 = lengthof v10;
v14 = v12 + v13;
v15 = lengthof v5;
if v15 >= v14 goto label03;
v16 = v3 - v2;
v17 = v14 + v16;
v18 = v17 + 32;
v5 = staticinvoke <org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: char[] growBuffer(char[],int,int)>(v5, v6, v18);
label03:
if v11 <= 0 goto label04;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(v7, v2, v5, v6);
v6 = v6 + v11;
label04:
v19 = lengthof v10;
if v19 <= 0 goto label05;
v20 = lengthof v10;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v10, 0, v5, v6, v20);
v21 = lengthof v10;
v6 = v6 + v21;
label05:
v22 = v2;
v23 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(v8);
if v23 == 0 goto label06;
v24 = 2;
goto label07;
label06:
v24 = 1;
label07:
v7 = v22 + v24;
v2 = virtualinvoke v0.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: int nextEscapeIndex(java.lang.CharSequence,int,int)>(v1, v7, v3);
goto label01;
label08:
v25 = v3 - v7;
if v25 <= 0 goto label10;
v26 = v6 + v25;
v27 = lengthof v5;
if v27 >= v26 goto label09;
v5 = staticinvoke <org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: char[] growBuffer(char[],int,int)>(v5, v6, v26);
label09:
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(v7, v3, v5, v6);
v6 = v26;
label10:
v28 = new java.lang.String;
specialinvoke v28.<java.lang.String: void <init>(char[],int,int)>(v5, 0, v6);
return v28;
}
public java.lang.Appendable escape(java.lang.Appendable)
{
java.lang.Appendable v1;
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$1 v4;
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper v0;
java.lang.AssertionError v3;
boolean v2;
v0 := @this: org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper;
v1 := @parameter0: java.lang.Appendable;
v2 = <org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: boolean $assertionsDisabled>;
if v2 != 0 goto label1;
if v1 != null goto label1;
v3 = new java.lang.AssertionError;
specialinvoke v3.<java.lang.AssertionError: void <init>()>();
throw v3;
label1:
v4 = new org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$1;
specialinvoke v4.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$1: void <init>(org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper,java.lang.Appendable)>(v0, v1);
return v4;
}
protected static final int codePointAt(java.lang.CharSequence, int, int)
{
java.lang.IndexOutOfBoundsException v17;
int v1, v11, v15, v2, v3, v5, v6, v7, v8;
java.lang.String v13, v16;
boolean v10;
java.lang.CharSequence v0;
char v4, v9;
java.lang.IllegalArgumentException v12, v14;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 >= v2 goto label6;
v3 = v1 + 1;
v4 = interfaceinvoke v0.<java.lang.CharSequence: char charAt(int)>(v1);
v5 = (int) 55296;
if v4 < v5 goto label1;
v6 = (int) 57343;
if v4 <= v6 goto label2;
label1:
return v4;
label2:
v7 = (int) 56319;
if v4 > v7 goto label5;
if v3 != v2 goto label3;
v8 = neg v4;
return v8;
label3:
v9 = interfaceinvoke v0.<java.lang.CharSequence: char charAt(int)>(v3);
v10 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(v9);
if v10 == 0 goto label4;
v11 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>(v4, v9);
return v11;
label4:
v12 = new java.lang.IllegalArgumentException;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (char,char,int)>(v9, v9, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected low surrogate but got char \'\u0001\' with value \u0001 at index \u0001");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v13);
throw v12;
label5:
v14 = new java.lang.IllegalArgumentException;
v15 = v3 - 1;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (char,char,int)>(v4, v4, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected low surrogate character \'\u0001\' with value \u0001 at index \u0001");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v14;
label6:
v17 = new java.lang.IndexOutOfBoundsException;
specialinvoke v17.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Index exceeds specified range");
throw v17;
}
private static final char[] growBuffer(char[], int, int)
{
int v1, v2;
char[] v0, v3;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = newarray (char)[v2];
if v1 <= 0 goto label1;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v0, 0, v3, 0, v1);
label1:
return v3;
}
static void <clinit>()
{
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2 v3;
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/yaml/snakeyaml/external/com/google/gdata/util/common/base/UnicodeEscaper;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: boolean $assertionsDisabled> = v2;
v3 = new org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2;
specialinvoke v3.<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2: void <init>()>();
<org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper: java.lang.ThreadLocal DEST_TL> = v3;
return;
}
}