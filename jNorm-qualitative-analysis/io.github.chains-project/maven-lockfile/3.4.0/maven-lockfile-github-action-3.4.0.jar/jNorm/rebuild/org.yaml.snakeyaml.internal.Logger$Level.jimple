public final enum class org.yaml.snakeyaml.internal.Logger$Level extends java.lang.Enum
{
public static final enum org.yaml.snakeyaml.internal.Logger$Level WARNING;
private final java.util.logging.Level level;
private static final org.yaml.snakeyaml.internal.Logger$Level[] $VALUES;
public static org.yaml.snakeyaml.internal.Logger$Level[] values()
{
java.lang.Object v1;
org.yaml.snakeyaml.internal.Logger$Level[] v0;
v0 = <org.yaml.snakeyaml.internal.Logger$Level: org.yaml.snakeyaml.internal.Logger$Level[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.yaml.snakeyaml.internal.Logger$Level valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/yaml/snakeyaml/internal/Logger$Level;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.util.logging.Level)
{
org.yaml.snakeyaml.internal.Logger$Level v0;
int v2;
java.lang.String v1;
java.util.logging.Level v3;
v0 := @this: org.yaml.snakeyaml.internal.Logger$Level;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.util.logging.Level;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<org.yaml.snakeyaml.internal.Logger$Level: java.util.logging.Level level> = v3;
return;
}
private static org.yaml.snakeyaml.internal.Logger$Level[] $values()
{
org.yaml.snakeyaml.internal.Logger$Level v1;
org.yaml.snakeyaml.internal.Logger$Level[] v0;
v0 = newarray (org.yaml.snakeyaml.internal.Logger$Level)[1];
v1 = <org.yaml.snakeyaml.internal.Logger$Level: org.yaml.snakeyaml.internal.Logger$Level WARNING>;
v0[0] = v1;
return v0;
}
static void <clinit>()
{
org.yaml.snakeyaml.internal.Logger$Level v0;
org.yaml.snakeyaml.internal.Logger$Level[] v2;
java.util.logging.Level v1;
v0 = new org.yaml.snakeyaml.internal.Logger$Level;
v1 = <java.util.logging.Level: java.util.logging.Level FINE>;
specialinvoke v0.<org.yaml.snakeyaml.internal.Logger$Level: void <init>(java.lang.String,int,java.util.logging.Level)>("WARNING", 0, v1);
<org.yaml.snakeyaml.internal.Logger$Level: org.yaml.snakeyaml.internal.Logger$Level WARNING> = v0;
v2 = staticinvoke <org.yaml.snakeyaml.internal.Logger$Level: org.yaml.snakeyaml.internal.Logger$Level[] $values()>();
<org.yaml.snakeyaml.internal.Logger$Level: org.yaml.snakeyaml.internal.Logger$Level[] $VALUES> = v2;
return;
}
public static java.lang.System$Logger$Level access$000(org.yaml.snakeyaml.internal.Logger$Level)
{
org.yaml.snakeyaml.internal.Logger$Level parameter0;
java.lang.Error $r0;
parameter0 := @parameter0: org.yaml.snakeyaml.internal.Logger$Level;
$r0 = new java.lang.Error;
specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.yaml.snakeyaml.internal.Logger$Level: java.lang.System$Logger$Level access$000(org.yaml.snakeyaml.internal.Logger$Level)> does not exist!");
throw $r0;
}
public void <init>(java.lang.String, int, java.lang.System$Logger$Level)
{
org.yaml.snakeyaml.internal.Logger$Level this;
java.lang.System$Logger$Level parameter2;
int parameter1;
java.lang.Error $r0;
java.lang.String parameter0;
this := @this: org.yaml.snakeyaml.internal.Logger$Level;
parameter0 := @parameter0: java.lang.String;
parameter1 := @parameter1: int;
parameter2 := @parameter2: java.lang.System$Logger$Level;
$r0 = new java.lang.Error;
specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.yaml.snakeyaml.internal.Logger$Level: void <init>(java.lang.String,int,java.lang.System$Logger$Level)> does not exist!");
throw $r0;
}
}