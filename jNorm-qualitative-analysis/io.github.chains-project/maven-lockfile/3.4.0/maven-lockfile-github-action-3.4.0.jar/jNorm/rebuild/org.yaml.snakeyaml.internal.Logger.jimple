public class org.yaml.snakeyaml.internal.Logger extends java.lang.Object
{
private final java.util.logging.Logger logger;
private void <init>(java.lang.String)
{
java.lang.String v1;
java.util.logging.Logger v2;
org.yaml.snakeyaml.internal.Logger v0;
v0 := @this: org.yaml.snakeyaml.internal.Logger;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
v0.<org.yaml.snakeyaml.internal.Logger: java.util.logging.Logger logger> = v2;
return;
}
public static org.yaml.snakeyaml.internal.Logger getLogger(java.lang.String)
{
java.lang.String v0;
org.yaml.snakeyaml.internal.Logger v1;
v0 := @parameter0: java.lang.String;
v1 = new org.yaml.snakeyaml.internal.Logger;
specialinvoke v1.<org.yaml.snakeyaml.internal.Logger: void <init>(java.lang.String)>(v0);
return v1;
}
public boolean isLoggable(org.yaml.snakeyaml.internal.Logger$Level)
{
org.yaml.snakeyaml.internal.Logger$Level v1;
org.yaml.snakeyaml.internal.Logger v0;
java.util.logging.Logger v2;
boolean v4;
java.util.logging.Level v3;
v0 := @this: org.yaml.snakeyaml.internal.Logger;
v1 := @parameter0: org.yaml.snakeyaml.internal.Logger$Level;
v2 = v0.<org.yaml.snakeyaml.internal.Logger: java.util.logging.Logger logger>;
v3 = v1.<org.yaml.snakeyaml.internal.Logger$Level: java.util.logging.Level level>;
v4 = virtualinvoke v2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>(v3);
return v4;
}
public void warn(java.lang.String)
{
org.yaml.snakeyaml.internal.Logger$Level v3;
org.yaml.snakeyaml.internal.Logger v0;
java.lang.String v1;
java.util.logging.Logger v2;
java.util.logging.Level v4;
v0 := @this: org.yaml.snakeyaml.internal.Logger;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.yaml.snakeyaml.internal.Logger: java.util.logging.Logger logger>;
v3 = <org.yaml.snakeyaml.internal.Logger$Level: org.yaml.snakeyaml.internal.Logger$Level WARNING>;
v4 = v3.<org.yaml.snakeyaml.internal.Logger$Level: java.util.logging.Level level>;
virtualinvoke v2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>(v4, v1);
return;
}
}