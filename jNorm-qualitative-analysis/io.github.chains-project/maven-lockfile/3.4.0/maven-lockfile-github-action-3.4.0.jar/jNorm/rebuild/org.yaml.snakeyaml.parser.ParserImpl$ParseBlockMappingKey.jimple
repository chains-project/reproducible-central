class org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v10, v14, v19, v22, v29, v32, v33, v35, v37, v38, v41, v46, v50, v56, v6, v62, v63, v66, v8, v9;
org.yaml.snakeyaml.events.Event v34, v40;
org.yaml.snakeyaml.error.Mark v39, v55, v60, v61;
java.lang.String v54;
org.yaml.snakeyaml.tokens.Token v12, v21, v48, v58;
org.yaml.snakeyaml.events.CommentEvent v13;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue v31, v36;
org.yaml.snakeyaml.tokens.Token$ID[] v16, v24, v3, v43;
org.yaml.snakeyaml.events.MappingEndEvent v59;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey v0, v7;
boolean v18, v28, v45, v5;
org.yaml.snakeyaml.parser.ParserException v49;
org.yaml.snakeyaml.tokens.Token$ID v17, v25, v26, v27, v4, v44, v53;
org.yaml.snakeyaml.util.ArrayStack v30, v51, v64, v67;
org.yaml.snakeyaml.scanner.Scanner v11, v15, v2, v20, v23, v42, v47, v57;
java.lang.Object v52, v65;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v7.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v8);
v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v7;
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v10 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v11 = v10.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v12 = interfaceinvoke v11.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v13 = specialinvoke v9.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v12);
return v13;
label1:
v14 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v15 = v14.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v16 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v17 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v16[0] = v17;
v18 = interfaceinvoke v15.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v16);
if v18 == 0 goto label3;
v19 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v20 = v19.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v21 = interfaceinvoke v20.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v22 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v23 = v22.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v24 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[3];
v25 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v24[0] = v25;
v26 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v24[1] = v26;
v27 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd>;
v24[2] = v27;
v28 = interfaceinvoke v23.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v24);
if v28 != 0 goto label2;
v29 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v30 = v29.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v31 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue;
v32 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v31.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v32);
virtualinvoke v30.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v31);
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v34 = specialinvoke v33.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseBlockNodeOrIndentlessSequence()>();
return v34;
label2:
v35 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v36 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue;
v37 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v36.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v37);
v35.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v36;
v38 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v39 = virtualinvoke v21.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v40 = specialinvoke v38.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v39);
return v40;
label3:
v41 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v42 = v41.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v43 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v44 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd>;
v43[0] = v44;
v45 = interfaceinvoke v42.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v43);
if v45 != 0 goto label4;
v46 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v47 = v46.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v48 = interfaceinvoke v47.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v49 = new org.yaml.snakeyaml.parser.ParserException;
v50 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v51 = v50.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
v52 = virtualinvoke v51.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v53 = virtualinvoke v48.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.tokens.Token$ID getTokenId()>();
v54 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.tokens.Token$ID)>(v53) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected <block end>, but found \'\u0001\'");
v55 = virtualinvoke v48.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v49.<org.yaml.snakeyaml.parser.ParserException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while parsing a block mapping", v52, v54, v55);
throw v49;
label4:
v56 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v57 = v56.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v58 = interfaceinvoke v57.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v59 = new org.yaml.snakeyaml.events.MappingEndEvent;
v60 = virtualinvoke v58.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v61 = virtualinvoke v58.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
specialinvoke v59.<org.yaml.snakeyaml.events.MappingEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v60, v61);
v62 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v63 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v64 = v63.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v65 = virtualinvoke v64.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v62.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v65;
v66 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v67 = v66.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
virtualinvoke v67.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
return v59;
}
}