class org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v15, v18, v19, v21, v23, v24, v27, v29, v30, v33, v6, v9;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue v0;
org.yaml.snakeyaml.events.Event v20, v26, v35;
boolean v14, v5;
org.yaml.snakeyaml.error.Mark v25, v34;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey v17, v22, v28;
org.yaml.snakeyaml.tokens.Token v32, v8;
org.yaml.snakeyaml.tokens.Token$ID v12, v13, v4;
org.yaml.snakeyaml.util.ArrayStack v16;
org.yaml.snakeyaml.scanner.Scanner v10, v2, v31, v7;
org.yaml.snakeyaml.tokens.Token$ID[] v11, v3;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label2;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v8 = interfaceinvoke v7.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v10 = v9.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v11 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[2];
v12 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowEntry>;
v11[0] = v12;
v13 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd>;
v11[1] = v13;
v14 = interfaceinvoke v10.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v11);
if v14 != 0 goto label1;
v15 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v16 = v15.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v17 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v18 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v17.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v18, 0);
virtualinvoke v16.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v17);
v19 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v20 = specialinvoke v19.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseFlowNode()>();
return v20;
label1:
v21 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v22 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v23 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v22.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v23, 0);
v21.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v22;
v24 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v25 = virtualinvoke v8.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v26 = specialinvoke v24.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v25);
return v26;
label2:
v27 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v28 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v29 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v28.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v29, 0);
v27.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v28;
v30 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v31 = v30.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v32 = interfaceinvoke v31.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v34 = virtualinvoke v32.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v35 = specialinvoke v33.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v34);
return v35;
}
}