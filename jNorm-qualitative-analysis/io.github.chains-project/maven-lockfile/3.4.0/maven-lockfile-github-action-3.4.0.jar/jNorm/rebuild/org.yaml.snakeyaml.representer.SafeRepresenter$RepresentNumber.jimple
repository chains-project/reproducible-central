public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber v0;
org.yaml.snakeyaml.representer.SafeRepresenter v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
java.lang.Double v11, v13, v9;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber v0;
org.yaml.snakeyaml.nodes.Node v19;
java.lang.String v8;
boolean v10, v12, v14, v2, v3, v4, v5, v6;
org.yaml.snakeyaml.nodes.Tag v18, v7;
org.yaml.snakeyaml.representer.SafeRepresenter v15, v16;
java.lang.Class v17;
java.lang.Object v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.lang.Byte;
if v2 != 0 goto label1;
v3 = v1 instanceof java.lang.Short;
if v3 != 0 goto label1;
v4 = v1 instanceof java.lang.Integer;
if v4 != 0 goto label1;
v5 = v1 instanceof java.lang.Long;
if v5 != 0 goto label1;
v6 = v1 instanceof java.math.BigInteger;
if v6 == 0 goto label2;
label1:
v7 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag INT>;
v8 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
goto label6;
label2:
v7 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag FLOAT>;
v9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);
v10 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v9);
if v10 == 0 goto label3;
v8 = ".NaN";
goto label6;
label3:
v11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);
v12 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v11);
if v12 == 0 goto label4;
v8 = ".inf";
goto label6;
label4:
v13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#-Infinity);
v14 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v13);
if v14 == 0 goto label5;
v8 = "-.inf";
goto label6;
label5:
v8 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
label6:
v15 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v16 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v17 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v18 = virtualinvoke v16.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Tag getTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag)>(v17, v7);
v19 = virtualinvoke v15.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag,java.lang.String)>(v18, v8);
return v19;
}
}