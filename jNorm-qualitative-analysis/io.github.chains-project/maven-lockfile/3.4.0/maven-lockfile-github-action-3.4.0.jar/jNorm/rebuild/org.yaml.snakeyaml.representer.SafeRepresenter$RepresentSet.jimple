public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet v0;
org.yaml.snakeyaml.representer.SafeRepresenter v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
java.util.Iterator v3;
org.yaml.snakeyaml.DumperOptions$FlowStyle v11;
org.yaml.snakeyaml.nodes.Tag v10, v9;
java.util.LinkedHashMap v2;
org.yaml.snakeyaml.nodes.Node v12;
org.yaml.snakeyaml.representer.SafeRepresenter v6, v7;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet v0;
java.lang.Class v8;
java.lang.Object v1, v5;
boolean v4;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet;
v1 := @parameter0: java.lang.Object;
v2 = new java.util.LinkedHashMap;
specialinvoke v2.<java.util.LinkedHashMap: void <init>()>();
v3 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, null);
goto label1;
label2:
v6 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v7 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v8 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v9 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag SET>;
v10 = virtualinvoke v7.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Tag getTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag)>(v8, v9);
v11 = <org.yaml.snakeyaml.DumperOptions$FlowStyle: org.yaml.snakeyaml.DumperOptions$FlowStyle AUTO>;
v12 = virtualinvoke v6.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representMapping(org.yaml.snakeyaml.nodes.Tag,java.util.Map,org.yaml.snakeyaml.DumperOptions$FlowStyle)>(v10, v2, v11);
return v12;
}
}