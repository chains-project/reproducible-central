public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter v1;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString v0;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
byte[] v10;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v17, v18, v3;
org.yaml.snakeyaml.nodes.Node v23;
java.util.regex.Matcher v20;
java.nio.charset.Charset v12, v9;
java.lang.String v11, v4;
boolean v13, v21, v8;
org.yaml.snakeyaml.nodes.Tag v2;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString v0;
org.yaml.snakeyaml.DumperOptions$NonPrintableStyle v6, v7;
org.yaml.snakeyaml.representer.SafeRepresenter v16, v22, v5;
char[] v15;
java.lang.Object v1;
java.util.regex.Pattern v19;
org.yaml.snakeyaml.error.YAMLException v14;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString;
v1 := @parameter0: java.lang.Object;
v2 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag STR>;
v3 = null;
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v6 = v5.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle>;
v7 = <org.yaml.snakeyaml.DumperOptions$NonPrintableStyle: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle BINARY>;
if v6 != v7 goto label2;
v8 = staticinvoke <org.yaml.snakeyaml.reader.StreamReader: boolean isPrintable(java.lang.String)>(v4);
if v8 != 0 goto label2;
v2 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag BINARY>;
v9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v10 = virtualinvoke v4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v9);
v11 = new java.lang.String;
v12 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v11.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v10, v12);
v13 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v13 != 0 goto label1;
v14 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v14.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("invalid string value has occurred");
throw v14;
label1:
v15 = staticinvoke <org.yaml.snakeyaml.external.biz.base64Coder.Base64Coder: char[] encode(byte[])>(v10);
v4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(v15);
v3 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle LITERAL>;
label2:
v16 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v17 = v16.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultScalarStyle>;
v18 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
if v17 != v18 goto label3;
v19 = <org.yaml.snakeyaml.representer.SafeRepresenter: java.util.regex.Pattern MULTILINE_PATTERN>;
v20 = virtualinvoke v19.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v4);
v21 = virtualinvoke v20.<java.util.regex.Matcher: boolean find()>();
if v21 == 0 goto label3;
v3 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle LITERAL>;
label3:
v22 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v23 = virtualinvoke v22.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v2, v4, v3);
return v23;
}
}