final class org.yaml.snakeyaml.scanner.SimpleKey extends java.lang.Object
{
private final int tokenNumber;
private final boolean required;
private final int index;
private final int line;
private final int column;
private final org.yaml.snakeyaml.error.Mark mark;
public void <init>(int, boolean, int, int, int, org.yaml.snakeyaml.error.Mark)
{
org.yaml.snakeyaml.scanner.SimpleKey v0;
org.yaml.snakeyaml.error.Mark v6;
int v1, v3, v4, v5;
boolean v2;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: org.yaml.snakeyaml.error.Mark;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.scanner.SimpleKey: int tokenNumber> = v1;
v0.<org.yaml.snakeyaml.scanner.SimpleKey: boolean required> = v2;
v0.<org.yaml.snakeyaml.scanner.SimpleKey: int index> = v3;
v0.<org.yaml.snakeyaml.scanner.SimpleKey: int line> = v4;
v0.<org.yaml.snakeyaml.scanner.SimpleKey: int column> = v5;
v0.<org.yaml.snakeyaml.scanner.SimpleKey: org.yaml.snakeyaml.error.Mark mark> = v6;
return;
}
public int getTokenNumber()
{
int v1;
org.yaml.snakeyaml.scanner.SimpleKey v0;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int tokenNumber>;
return v1;
}
public int getColumn()
{
int v1;
org.yaml.snakeyaml.scanner.SimpleKey v0;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int column>;
return v1;
}
public org.yaml.snakeyaml.error.Mark getMark()
{
org.yaml.snakeyaml.scanner.SimpleKey v0;
org.yaml.snakeyaml.error.Mark v1;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: org.yaml.snakeyaml.error.Mark mark>;
return v1;
}
public int getIndex()
{
int v1;
org.yaml.snakeyaml.scanner.SimpleKey v0;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int index>;
return v1;
}
public int getLine()
{
int v1;
org.yaml.snakeyaml.scanner.SimpleKey v0;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int line>;
return v1;
}
public boolean isRequired()
{
org.yaml.snakeyaml.scanner.SimpleKey v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: boolean required>;
return v1;
}
public java.lang.String toString()
{
org.yaml.snakeyaml.scanner.SimpleKey v0;
int v1, v3, v4, v5;
java.lang.String v6;
boolean v2;
v0 := @this: org.yaml.snakeyaml.scanner.SimpleKey;
v1 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int tokenNumber>;
v2 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: boolean required>;
v3 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int index>;
v4 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int line>;
v5 = v0.<org.yaml.snakeyaml.scanner.SimpleKey: int column>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,boolean,int,int,int)>(v1, v2, v3, v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("SimpleKey - tokenNumber=\u0001 required=\u0001 index=\u0001 line=\u0001 column=\u0001");
return v6;
}
}