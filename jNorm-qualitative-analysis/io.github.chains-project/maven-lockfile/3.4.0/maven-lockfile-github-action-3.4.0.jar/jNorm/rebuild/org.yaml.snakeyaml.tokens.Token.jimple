public abstract class org.yaml.snakeyaml.tokens.Token extends java.lang.Object
{
private final org.yaml.snakeyaml.error.Mark startMark;
private final org.yaml.snakeyaml.error.Mark endMark;
public void <init>(org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.error.Mark)
{
org.yaml.snakeyaml.tokens.Token v0;
org.yaml.snakeyaml.error.Mark v1, v2;
org.yaml.snakeyaml.error.YAMLException v3;
v0 := @this: org.yaml.snakeyaml.tokens.Token;
v1 := @parameter0: org.yaml.snakeyaml.error.Mark;
v2 := @parameter1: org.yaml.snakeyaml.error.Mark;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == null goto label1;
if v2 != null goto label2;
label1:
v3 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v3.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("Token requires marks.");
throw v3;
label2:
v0.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark startMark> = v1;
v0.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark endMark> = v2;
return;
}
public org.yaml.snakeyaml.error.Mark getStartMark()
{
org.yaml.snakeyaml.tokens.Token v0;
org.yaml.snakeyaml.error.Mark v1;
v0 := @this: org.yaml.snakeyaml.tokens.Token;
v1 = v0.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark startMark>;
return v1;
}
public org.yaml.snakeyaml.error.Mark getEndMark()
{
org.yaml.snakeyaml.tokens.Token v0;
org.yaml.snakeyaml.error.Mark v1;
v0 := @this: org.yaml.snakeyaml.tokens.Token;
v1 = v0.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark endMark>;
return v1;
}
public abstract org.yaml.snakeyaml.tokens.Token$ID getTokenId();
}