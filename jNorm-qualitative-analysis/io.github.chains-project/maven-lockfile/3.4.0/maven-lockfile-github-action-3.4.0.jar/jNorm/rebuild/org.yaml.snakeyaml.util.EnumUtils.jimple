public class org.yaml.snakeyaml.util.EnumUtils extends java.lang.Object
{
public void <init>()
{
org.yaml.snakeyaml.util.EnumUtils v0;
v0 := @this: org.yaml.snakeyaml.util.EnumUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Enum findEnumInsensitiveCase(java.lang.Class, java.lang.String)
{
java.lang.Object[] v2;
java.lang.IllegalArgumentException v8;
java.lang.Enum v5;
int v3, v4, v7;
java.lang.Class v0;
java.lang.String v1, v10, v6, v9;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = virtualinvoke v5.<java.lang.Enum: java.lang.String name()>();
v7 = virtualinvoke v6.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(v1);
if v7 != 0 goto label2;
return v5;
label2:
v4 = v4 + 1;
goto label1;
label3:
v8 = new java.lang.IllegalArgumentException;
v9 = virtualinvoke v0.<java.lang.Class: java.lang.String getCanonicalName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No enum constant \u0001.\u0001");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v8;
}
}