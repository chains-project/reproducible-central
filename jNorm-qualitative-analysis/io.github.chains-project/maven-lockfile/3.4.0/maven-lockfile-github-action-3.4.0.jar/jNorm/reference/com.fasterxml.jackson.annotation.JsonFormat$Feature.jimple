public final enum class com.fasterxml.jackson.'annotation'.JsonFormat$Feature extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_AS_NULL;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_DATE_TIMESTAMPS_AS_NANOSECONDS;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_VALUES;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES;
public static final enum com.fasterxml.jackson.'annotation'.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
private static final com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] $VALUES;
public static com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] v0;
v0 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.'annotation'.JsonFormat$Feature valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/annotation/JsonFormat$Feature;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] $values()
{
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v1, v10, v11, v2, v3, v4, v5, v6, v7, v8, v9;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] v0;
v0 = newarray (com.fasterxml.jackson.'annotation'.JsonFormat$Feature)[11];
v1 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_AS_NULL>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_VALUES>;
v0[5] = v6;
v7 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v0[6] = v7;
v8 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID>;
v0[7] = v8;
v9 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v0[8] = v9;
v10 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES>;
v0[9] = v10;
v11 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE>;
v0[10] = v11;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v0, v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] v11;
v0 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v0.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("ACCEPT_SINGLE_VALUE_AS_ARRAY", 0);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY> = v0;
v1 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v1.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("ACCEPT_CASE_INSENSITIVE_PROPERTIES", 1);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES> = v1;
v2 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v2.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("READ_UNKNOWN_ENUM_VALUES_AS_NULL", 2);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_AS_NULL> = v2;
v3 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE", 3);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE> = v3;
v4 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("READ_DATE_TIMESTAMPS_AS_NANOSECONDS", 4);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature READ_DATE_TIMESTAMPS_AS_NANOSECONDS> = v4;
v5 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v5.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("ACCEPT_CASE_INSENSITIVE_VALUES", 5);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_VALUES> = v5;
v6 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v6.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS", 6);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS> = v6;
v7 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v7.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("WRITE_DATES_WITH_ZONE_ID", 7);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID> = v7;
v8 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v8.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED", 8);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED> = v8;
v9 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v9.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("WRITE_SORTED_MAP_ENTRIES", 9);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES> = v9;
v10 = new com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
specialinvoke v10.<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: void <init>(java.lang.String,int)>("ADJUST_DATES_TO_CONTEXT_TIME_ZONE", 10);
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE> = v10;
v11 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] $values()>();
<com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature[] $VALUES> = v11;
return;
}
}