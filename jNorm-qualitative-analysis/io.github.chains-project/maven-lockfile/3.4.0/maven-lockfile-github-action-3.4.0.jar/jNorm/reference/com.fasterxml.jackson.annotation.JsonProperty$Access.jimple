public final enum class com.fasterxml.jackson.'annotation'.JsonProperty$Access extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.'annotation'.JsonProperty$Access AUTO;
public static final enum com.fasterxml.jackson.'annotation'.JsonProperty$Access READ_ONLY;
public static final enum com.fasterxml.jackson.'annotation'.JsonProperty$Access WRITE_ONLY;
public static final enum com.fasterxml.jackson.'annotation'.JsonProperty$Access READ_WRITE;
private static final com.fasterxml.jackson.'annotation'.JsonProperty$Access[] $VALUES;
public static com.fasterxml.jackson.'annotation'.JsonProperty$Access[] values()
{
com.fasterxml.jackson.'annotation'.JsonProperty$Access[] v0;
java.lang.Object v1;
v0 = <com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.'annotation'.JsonProperty$Access valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/annotation/JsonProperty$Access;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.fasterxml.jackson.'annotation'.JsonProperty$Access v0;
v0 := @this: com.fasterxml.jackson.'annotation'.JsonProperty$Access;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.fasterxml.jackson.'annotation'.JsonProperty$Access[] $values()
{
com.fasterxml.jackson.'annotation'.JsonProperty$Access[] v0;
com.fasterxml.jackson.'annotation'.JsonProperty$Access v1, v2, v3, v4;
v0 = newarray (com.fasterxml.jackson.'annotation'.JsonProperty$Access)[4];
v1 = <com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access AUTO>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access READ_ONLY>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access WRITE_ONLY>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access READ_WRITE>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.'annotation'.JsonProperty$Access[] v4;
com.fasterxml.jackson.'annotation'.JsonProperty$Access v0, v1, v2, v3;
v0 = new com.fasterxml.jackson.'annotation'.JsonProperty$Access;
specialinvoke v0.<com.fasterxml.jackson.'annotation'.JsonProperty$Access: void <init>(java.lang.String,int)>("AUTO", 0);
<com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access AUTO> = v0;
v1 = new com.fasterxml.jackson.'annotation'.JsonProperty$Access;
specialinvoke v1.<com.fasterxml.jackson.'annotation'.JsonProperty$Access: void <init>(java.lang.String,int)>("READ_ONLY", 1);
<com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access READ_ONLY> = v1;
v2 = new com.fasterxml.jackson.'annotation'.JsonProperty$Access;
specialinvoke v2.<com.fasterxml.jackson.'annotation'.JsonProperty$Access: void <init>(java.lang.String,int)>("WRITE_ONLY", 2);
<com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access WRITE_ONLY> = v2;
v3 = new com.fasterxml.jackson.'annotation'.JsonProperty$Access;
specialinvoke v3.<com.fasterxml.jackson.'annotation'.JsonProperty$Access: void <init>(java.lang.String,int)>("READ_WRITE", 3);
<com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access READ_WRITE> = v3;
v4 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access[] $values()>();
<com.fasterxml.jackson.'annotation'.JsonProperty$Access: com.fasterxml.jackson.'annotation'.JsonProperty$Access[] $VALUES> = v4;
return;
}
}