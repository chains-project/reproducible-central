public class com.fasterxml.jackson.core.JsonParseException extends com.fasterxml.jackson.core.exc.StreamReadException
{
private static final long serialVersionUID;
public void <init>(java.lang.String, com.fasterxml.jackson.core.JsonLocation)
{
com.fasterxml.jackson.core.JsonLocation v2;
java.lang.String v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.core.JsonLocation;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v1, v2, null);
return;
}
public void <init>(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
{
java.lang.Throwable v3;
com.fasterxml.jackson.core.JsonLocation v2;
java.lang.String v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.core.JsonLocation;
v3 := @parameter2: java.lang.Throwable;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v1, v2, v3);
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String)
{
java.lang.String v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v1, v2);
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.String v2;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)>(v1, v2, v3);
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.core.JsonLocation)
{
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.String v2;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation)>(v1, v2, v3);
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
{
java.lang.Throwable v4;
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.String v2;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
v4 := @parameter3: java.lang.Throwable;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v1, v2, v3, v4);
return;
}
public void <init>(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: void <init>(java.lang.String)>(v1);
return;
}
public com.fasterxml.jackson.core.JsonParseException withParser(com.fasterxml.jackson.core.JsonParser)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v0.<com.fasterxml.jackson.core.JsonParseException: com.fasterxml.jackson.core.JsonParser _processor> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonParseException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
{
com.fasterxml.jackson.core.JsonParseException v0;
com.fasterxml.jackson.core.util.RequestPayload v1;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 := @parameter0: com.fasterxml.jackson.core.util.RequestPayload;
v0.<com.fasterxml.jackson.core.JsonParseException: com.fasterxml.jackson.core.util.RequestPayload _requestPayload> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonParser getProcessor()
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 = specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.JsonParser getProcessor()>();
return v1;
}
public com.fasterxml.jackson.core.util.RequestPayload getRequestPayload()
{
com.fasterxml.jackson.core.JsonParseException v0;
com.fasterxml.jackson.core.util.RequestPayload v1;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 = specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.util.RequestPayload getRequestPayload()>();
return v1;
}
public java.lang.String getRequestPayloadAsString()
{
java.lang.String v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 = specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: java.lang.String getRequestPayloadAsString()>();
return v1;
}
public java.lang.String getMessage()
{
java.lang.String v1;
com.fasterxml.jackson.core.JsonParseException v0;
v0 := @this: com.fasterxml.jackson.core.JsonParseException;
v1 = specialinvoke v0.<com.fasterxml.jackson.core.exc.StreamReadException: java.lang.String getMessage()>();
return v1;
}
}