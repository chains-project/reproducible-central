public final enum class com.fasterxml.jackson.core.StreamWriteFeature extends java.lang.Enum implements com.fasterxml.jackson.core.util.JacksonFeature
{
public static final enum com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_TARGET;
public static final enum com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_CONTENT;
public static final enum com.fasterxml.jackson.core.StreamWriteFeature FLUSH_PASSED_TO_STREAM;
public static final enum com.fasterxml.jackson.core.StreamWriteFeature WRITE_BIGDECIMAL_AS_PLAIN;
public static final enum com.fasterxml.jackson.core.StreamWriteFeature STRICT_DUPLICATE_DETECTION;
public static final enum com.fasterxml.jackson.core.StreamWriteFeature IGNORE_UNKNOWN;
public static final enum com.fasterxml.jackson.core.StreamWriteFeature USE_FAST_DOUBLE_WRITER;
private final boolean _defaultState;
private final int _mask;
private final com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature;
private static final com.fasterxml.jackson.core.StreamWriteFeature[] $VALUES;
public static com.fasterxml.jackson.core.StreamWriteFeature[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.core.StreamWriteFeature[] v0;
v0 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.core.StreamWriteFeature valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/core/StreamWriteFeature;", v0);
return v1;
}
private void <init>(java.lang.String, int, com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v3;
int v2, v4;
com.fasterxml.jackson.core.StreamWriteFeature v0;
java.lang.String v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.StreamWriteFeature;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.JsonGenerator$Feature;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature> = v3;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v0.<com.fasterxml.jackson.core.StreamWriteFeature: int _mask> = v4;
v5 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledByDefault()>();
v0.<com.fasterxml.jackson.core.StreamWriteFeature: boolean _defaultState> = v5;
return;
}
public static int collectDefaults()
{
int v0, v2, v3, v6;
com.fasterxml.jackson.core.StreamWriteFeature v4;
com.fasterxml.jackson.core.StreamWriteFeature[] v1;
boolean v5;
v0 = 0;
v1 = staticinvoke <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.StreamWriteFeature: boolean enabledByDefault()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v4.<com.fasterxml.jackson.core.StreamWriteFeature: int getMask()>();
v0 = v0 | v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
return v0;
}
public boolean enabledByDefault()
{
com.fasterxml.jackson.core.StreamWriteFeature v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.StreamWriteFeature;
v1 = v0.<com.fasterxml.jackson.core.StreamWriteFeature: boolean _defaultState>;
return v1;
}
public boolean enabledIn(int)
{
int v1, v2, v3;
com.fasterxml.jackson.core.StreamWriteFeature v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.StreamWriteFeature;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.StreamWriteFeature: int _mask>;
v3 = v1 & v2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int getMask()
{
int v1;
com.fasterxml.jackson.core.StreamWriteFeature v0;
v0 := @this: com.fasterxml.jackson.core.StreamWriteFeature;
v1 = v0.<com.fasterxml.jackson.core.StreamWriteFeature: int _mask>;
return v1;
}
public com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()
{
com.fasterxml.jackson.core.StreamWriteFeature v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
v0 := @this: com.fasterxml.jackson.core.StreamWriteFeature;
v1 = v0.<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature>;
return v1;
}
private static com.fasterxml.jackson.core.StreamWriteFeature[] $values()
{
com.fasterxml.jackson.core.StreamWriteFeature v1, v2, v3, v4, v5, v6, v7;
com.fasterxml.jackson.core.StreamWriteFeature[] v0;
v0 = newarray (com.fasterxml.jackson.core.StreamWriteFeature)[7];
v1 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_TARGET>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_CONTENT>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature FLUSH_PASSED_TO_STREAM>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature WRITE_BIGDECIMAL_AS_PLAIN>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature STRICT_DUPLICATE_DETECTION>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature IGNORE_UNKNOWN>;
v0[5] = v6;
v7 = <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature USE_FAST_DOUBLE_WRITER>;
v0[6] = v7;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1, v11, v13, v3, v5, v7, v9;
com.fasterxml.jackson.core.StreamWriteFeature v0, v10, v12, v2, v4, v6, v8;
com.fasterxml.jackson.core.StreamWriteFeature[] v14;
v0 = new com.fasterxml.jackson.core.StreamWriteFeature;
v1 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET>;
specialinvoke v0.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("AUTO_CLOSE_TARGET", 0, v1);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_TARGET> = v0;
v2 = new com.fasterxml.jackson.core.StreamWriteFeature;
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;
specialinvoke v2.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("AUTO_CLOSE_CONTENT", 1, v3);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_CONTENT> = v2;
v4 = new com.fasterxml.jackson.core.StreamWriteFeature;
v5 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;
specialinvoke v4.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("FLUSH_PASSED_TO_STREAM", 2, v5);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature FLUSH_PASSED_TO_STREAM> = v4;
v6 = new com.fasterxml.jackson.core.StreamWriteFeature;
v7 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN>;
specialinvoke v6.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("WRITE_BIGDECIMAL_AS_PLAIN", 3, v7);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature WRITE_BIGDECIMAL_AS_PLAIN> = v6;
v8 = new com.fasterxml.jackson.core.StreamWriteFeature;
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION>;
specialinvoke v8.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("STRICT_DUPLICATE_DETECTION", 4, v9);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature STRICT_DUPLICATE_DETECTION> = v8;
v10 = new com.fasterxml.jackson.core.StreamWriteFeature;
v11 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature IGNORE_UNKNOWN>;
specialinvoke v10.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("IGNORE_UNKNOWN", 5, v11);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature IGNORE_UNKNOWN> = v10;
v12 = new com.fasterxml.jackson.core.StreamWriteFeature;
v13 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER>;
specialinvoke v12.<com.fasterxml.jackson.core.StreamWriteFeature: void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature)>("USE_FAST_DOUBLE_WRITER", 6, v13);
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature USE_FAST_DOUBLE_WRITER> = v12;
v14 = staticinvoke <com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature[] $values()>();
<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.StreamWriteFeature[] $VALUES> = v14;
return;
}
}