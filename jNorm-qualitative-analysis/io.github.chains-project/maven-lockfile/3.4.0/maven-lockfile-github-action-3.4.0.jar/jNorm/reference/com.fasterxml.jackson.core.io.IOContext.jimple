public class com.fasterxml.jackson.core.io.IOContext extends java.lang.Object
{
protected final com.fasterxml.jackson.core.io.ContentReference _contentReference;
protected final java.lang.Object _sourceRef;
protected com.fasterxml.jackson.core.JsonEncoding _encoding;
protected final boolean _managedResource;
protected final com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler;
protected final com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints;
protected byte[] _readIOBuffer;
protected byte[] _writeEncodingBuffer;
protected byte[] _base64Buffer;
protected char[] _tokenCBuffer;
protected char[] _concatCBuffer;
protected char[] _nameCopyBuffer;
public void <init>(com.fasterxml.jackson.core.StreamReadConstraints, com.fasterxml.jackson.core.util.BufferRecycler, com.fasterxml.jackson.core.io.ContentReference, boolean)
{
com.fasterxml.jackson.core.io.IOContext v0;
java.lang.Object v6;
com.fasterxml.jackson.core.StreamReadConstraints v1, v5;
com.fasterxml.jackson.core.util.BufferRecycler v2;
boolean v4;
com.fasterxml.jackson.core.io.ContentReference v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: com.fasterxml.jackson.core.StreamReadConstraints;
v2 := @parameter1: com.fasterxml.jackson.core.util.BufferRecycler;
v3 := @parameter2: com.fasterxml.jackson.core.io.ContentReference;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v5 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
goto label2;
label1:
v5 = v1;
label2:
v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v5;
v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler> = v2;
v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.io.ContentReference _contentReference> = v3;
v6 = virtualinvoke v3.<com.fasterxml.jackson.core.io.ContentReference: java.lang.Object getRawContent()>();
v0.<com.fasterxml.jackson.core.io.IOContext: java.lang.Object _sourceRef> = v6;
v0.<com.fasterxml.jackson.core.io.IOContext: boolean _managedResource> = v4;
return;
}
public void <init>(com.fasterxml.jackson.core.util.BufferRecycler, com.fasterxml.jackson.core.io.ContentReference, boolean)
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v1;
boolean v3;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
v2 := @parameter1: com.fasterxml.jackson.core.io.ContentReference;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean)>(null, v1, v2, v3);
return;
}
public void <init>(com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)
{
com.fasterxml.jackson.core.io.IOContext v0;
java.lang.Object v2;
com.fasterxml.jackson.core.util.BufferRecycler v1;
boolean v3;
com.fasterxml.jackson.core.io.ContentReference v4;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: boolean;
v4 = staticinvoke <com.fasterxml.jackson.core.io.ContentReference: com.fasterxml.jackson.core.io.ContentReference rawReference(java.lang.Object)>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean)>(v1, v4, v3);
return;
}
public com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.StreamReadConstraints v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
return v1;
}
public void setEncoding(com.fasterxml.jackson.core.JsonEncoding)
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.JsonEncoding v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonEncoding;
v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.JsonEncoding _encoding> = v1;
return;
}
public com.fasterxml.jackson.core.io.IOContext withEncoding(com.fasterxml.jackson.core.JsonEncoding)
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.JsonEncoding v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonEncoding;
v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.JsonEncoding _encoding> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonEncoding getEncoding()
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.JsonEncoding v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.JsonEncoding _encoding>;
return v1;
}
public boolean isResourceManaged()
{
com.fasterxml.jackson.core.io.IOContext v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: boolean _managedResource>;
return v1;
}
public com.fasterxml.jackson.core.io.ContentReference contentReference()
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.io.ContentReference v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.io.ContentReference _contentReference>;
return v1;
}
public java.lang.Object getSourceReference()
{
com.fasterxml.jackson.core.io.IOContext v0;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: java.lang.Object _sourceRef>;
return v1;
}
public com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer()
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.TextBuffer v1;
com.fasterxml.jackson.core.util.BufferRecycler v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = new com.fasterxml.jackson.core.util.TextBuffer;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
specialinvoke v1.<com.fasterxml.jackson.core.util.TextBuffer: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>(v2);
return v1;
}
public com.fasterxml.jackson.core.util.TextBuffer constructReadConstrainedTextBuffer()
{
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.ReadConstrainedTextBuffer v1;
com.fasterxml.jackson.core.StreamReadConstraints v2;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = new com.fasterxml.jackson.core.util.ReadConstrainedTextBuffer;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
specialinvoke v1.<com.fasterxml.jackson.core.util.ReadConstrainedTextBuffer: void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler)>(v2, v3);
return v1;
}
public byte[] allocReadIOBuffer()
{
byte[] v1, v3;
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v1);
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(0);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer> = v3;
return v3;
}
public byte[] allocReadIOBuffer(int)
{
byte[] v2, v4;
com.fasterxml.jackson.core.io.IOContext v0;
int v1;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v2);
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>(0, v1);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer> = v4;
return v4;
}
public byte[] allocWriteEncodingBuffer()
{
byte[] v1, v3;
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v1);
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(1);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer> = v3;
return v3;
}
public byte[] allocWriteEncodingBuffer(int)
{
byte[] v2, v4;
com.fasterxml.jackson.core.io.IOContext v0;
int v1;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v2);
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>(1, v1);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer> = v4;
return v4;
}
public byte[] allocBase64Buffer()
{
byte[] v1, v3;
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v1);
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(3);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer> = v3;
return v3;
}
public byte[] allocBase64Buffer(int)
{
byte[] v2, v4;
com.fasterxml.jackson.core.io.IOContext v0;
int v1;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v2);
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>(3, v1);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer> = v4;
return v4;
}
public char[] allocTokenBuffer()
{
com.fasterxml.jackson.core.io.IOContext v0;
char[] v1, v3;
com.fasterxml.jackson.core.util.BufferRecycler v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v1);
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int)>(0);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer> = v3;
return v3;
}
public char[] allocTokenBuffer(int)
{
com.fasterxml.jackson.core.io.IOContext v0;
int v1;
char[] v2, v4;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v2);
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int,int)>(0, v1);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer> = v4;
return v4;
}
public char[] allocConcatBuffer()
{
com.fasterxml.jackson.core.io.IOContext v0;
char[] v1, v3;
com.fasterxml.jackson.core.util.BufferRecycler v2;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v1);
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int)>(1);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer> = v3;
return v3;
}
public char[] allocNameCopyBuffer(int)
{
com.fasterxml.jackson.core.io.IOContext v0;
int v1;
char[] v2, v4;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>(v2);
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int,int)>(3, v1);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer> = v4;
return v4;
}
public void releaseReadIOBuffer(byte[])
{
byte[] v1, v2;
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: byte[];
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>(v1, v2);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer> = null;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(0, v1);
label1:
return;
}
public void releaseWriteEncodingBuffer(byte[])
{
byte[] v1, v2;
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: byte[];
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>(v1, v2);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer> = null;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(1, v1);
label1:
return;
}
public void releaseBase64Buffer(byte[])
{
byte[] v1, v2;
com.fasterxml.jackson.core.io.IOContext v0;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: byte[];
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>(v1, v2);
v0.<com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer> = null;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(3, v1);
label1:
return;
}
public void releaseTokenBuffer(char[])
{
com.fasterxml.jackson.core.io.IOContext v0;
char[] v1, v2;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: char[];
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>(v1, v2);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer> = null;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(0, v1);
label1:
return;
}
public void releaseConcatBuffer(char[])
{
com.fasterxml.jackson.core.io.IOContext v0;
char[] v1, v2;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: char[];
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>(v1, v2);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer> = null;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(1, v1);
label1:
return;
}
public void releaseNameCopyBuffer(char[])
{
com.fasterxml.jackson.core.io.IOContext v0;
char[] v1, v2;
com.fasterxml.jackson.core.util.BufferRecycler v3;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: char[];
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer>;
virtualinvoke v0.<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>(v1, v2);
v0.<com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer> = null;
v3 = v0.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(3, v1);
label1:
return;
}
protected final void _verifyAlloc(java.lang.Object)
{
com.fasterxml.jackson.core.io.IOContext v0;
java.lang.IllegalStateException v2;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: java.lang.Object;
if v1 == null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call same allocXxx() method second time");
throw v2;
label1:
return;
}
protected final void _verifyRelease(byte[], byte[])
{
byte[] v1, v2;
com.fasterxml.jackson.core.io.IOContext v0;
int v3, v4;
java.lang.IllegalArgumentException v5;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: byte[];
v2 := @parameter1: byte[];
if v1 == v2 goto label1;
v3 = lengthof v1;
v4 = lengthof v2;
if v3 >= v4 goto label1;
v5 = specialinvoke v0.<com.fasterxml.jackson.core.io.IOContext: java.lang.IllegalArgumentException wrongBuf()>();
throw v5;
label1:
return;
}
protected final void _verifyRelease(char[], char[])
{
com.fasterxml.jackson.core.io.IOContext v0;
int v3, v4;
char[] v1, v2;
java.lang.IllegalArgumentException v5;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 := @parameter0: char[];
v2 := @parameter1: char[];
if v1 == v2 goto label1;
v3 = lengthof v1;
v4 = lengthof v2;
if v3 >= v4 goto label1;
v5 = specialinvoke v0.<com.fasterxml.jackson.core.io.IOContext: java.lang.IllegalArgumentException wrongBuf()>();
throw v5;
label1:
return;
}
private java.lang.IllegalArgumentException wrongBuf()
{
com.fasterxml.jackson.core.io.IOContext v0;
java.lang.IllegalArgumentException v1;
v0 := @this: com.fasterxml.jackson.core.io.IOContext;
v1 = new java.lang.IllegalArgumentException;
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Trying to release buffer smaller than original");
return v1;
}
}