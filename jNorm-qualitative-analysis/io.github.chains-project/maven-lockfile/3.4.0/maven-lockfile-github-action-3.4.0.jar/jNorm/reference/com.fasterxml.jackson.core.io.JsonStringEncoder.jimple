public final class com.fasterxml.jackson.core.io.JsonStringEncoder extends java.lang.Object
{
private static final char[] HC;
private static final byte[] HB;
private static final int SURR1_FIRST;
private static final int SURR1_LAST;
private static final int SURR2_FIRST;
private static final int SURR2_LAST;
static final int MIN_CHAR_BUFFER_SIZE;
static final int MAX_CHAR_BUFFER_SIZE;
static final int MIN_BYTE_BUFFER_SIZE;
static final int MAX_BYTE_BUFFER_SIZE;
private static final com.fasterxml.jackson.core.io.JsonStringEncoder instance;
public void <init>()
{
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.fasterxml.jackson.core.io.JsonStringEncoder getInstance()
{
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
v0 = <com.fasterxml.jackson.core.io.JsonStringEncoder: com.fasterxml.jackson.core.io.JsonStringEncoder instance>;
return v0;
}
public char[] quoteAsString(java.lang.String)
{
java.lang.IllegalStateException v15, v27, v32;
int[] v5;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
int v12, v13, v16, v17, v19, v2, v20, v21, v22, v23, v24, v25, v28, v3, v6, v7, v9;
java.lang.String v1;
char v11, v18;
java.io.IOException v14, v26, v31;
com.fasterxml.jackson.core.util.TextBuffer v8;
char[] v10, v29, v30, v4;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _initialCharBufSize(int)>(v2);
v4 = newarray (char)[v3];
v5 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();
v6 = lengthof v5;
v7 = 0;
v8 = null;
v9 = 0;
v10 = null;
label01:
if v7 >= v2 goto label19;
label02:
v11 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v7);
if v11 >= v6 goto label03;
v12 = v5[v11];
if v12 != 0 goto label09;
label03:
v13 = lengthof v4;
if v9 < v13 goto label08;
if v8 != null goto label04;
v8 = staticinvoke <com.fasterxml.jackson.core.util.TextBuffer: com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(v4);
label04:
v4 = virtualinvoke v8.<com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();
label05:
goto label07;
label06:
v14 := @caughtexception;
v15 = new java.lang.IllegalStateException;
specialinvoke v15.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v14);
throw v15;
label07:
v9 = 0;
label08:
v16 = v9;
v9 = v9 + 1;
v4[v16] = v11;
v7 = v7 + 1;
if v7 >= v2 goto label19;
goto label02;
label09:
if v10 != null goto label10;
v10 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: char[] _qbuf()>();
label10:
v17 = v7;
v7 = v7 + 1;
v18 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v17);
v19 = v5[v18];
if v19 >= 0 goto label11;
v20 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNumeric(int,char[])>(v18, v10);
goto label12;
label11:
v20 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNamed(int,char[])>(v19, v10);
label12:
v21 = v20;
v22 = v9 + v20;
v23 = lengthof v4;
if v22 <= v23 goto label18;
v24 = lengthof v4;
v25 = v24 - v9;
if v25 <= 0 goto label13;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v10, 0, v4, v9, v25);
label13:
if v8 != null goto label14;
v8 = staticinvoke <com.fasterxml.jackson.core.util.TextBuffer: com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(v4);
label14:
v4 = virtualinvoke v8.<com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();
label15:
goto label17;
label16:
v26 := @caughtexception;
v27 = new java.lang.IllegalStateException;
specialinvoke v27.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v26);
throw v27;
label17:
v28 = v21 - v25;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v10, v25, v4, 0, v28);
v9 = v28;
goto label01;
label18:
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v10, 0, v4, v9, v20);
v9 = v9 + v20;
goto label01;
label19:
if v8 != null goto label20;
v29 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(v4, 0, v9);
return v29;
label20:
virtualinvoke v8.<com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(v9);
label21:
v30 = virtualinvoke v8.<com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>();
label22:
return v30;
label23:
v31 := @caughtexception;
v32 = new java.lang.IllegalStateException;
specialinvoke v32.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v31);
throw v32;
catch java.io.IOException from label04 to label05 with label06;
catch java.io.IOException from label14 to label15 with label16;
catch java.io.IOException from label21 to label22 with label23;
}
public char[] quoteAsString(java.lang.CharSequence)
{
java.lang.IllegalStateException v17, v29, v34;
int[] v8;
boolean v2;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
java.lang.CharSequence v1;
int v10, v11, v14, v15, v18, v19, v21, v22, v23, v24, v25, v26, v27, v30, v5, v6, v9;
char v13, v20;
java.io.IOException v16, v28, v33;
com.fasterxml.jackson.core.util.TextBuffer v4;
char[] v12, v3, v31, v32, v7;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: java.lang.CharSequence;
v2 = v1 instanceof java.lang.String;
if v2 == 0 goto label01;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: char[] quoteAsString(java.lang.String)>(v1);
return v3;
label01:
v4 = null;
v5 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v6 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _initialCharBufSize(int)>(v5);
v7 = newarray (char)[v6];
v8 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();
v9 = lengthof v8;
v10 = 0;
v11 = 0;
v12 = null;
label02:
if v10 >= v5 goto label20;
label03:
v13 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v10);
if v13 >= v9 goto label04;
v14 = v8[v13];
if v14 != 0 goto label10;
label04:
v15 = lengthof v7;
if v11 < v15 goto label09;
if v4 != null goto label05;
v4 = staticinvoke <com.fasterxml.jackson.core.util.TextBuffer: com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(v7);
label05:
v7 = virtualinvoke v4.<com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();
label06:
goto label08;
label07:
v16 := @caughtexception;
v17 = new java.lang.IllegalStateException;
specialinvoke v17.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v16);
throw v17;
label08:
v11 = 0;
label09:
v18 = v11;
v11 = v11 + 1;
v7[v18] = v13;
v10 = v10 + 1;
if v10 >= v5 goto label20;
goto label03;
label10:
if v12 != null goto label11;
v12 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: char[] _qbuf()>();
label11:
v19 = v10;
v10 = v10 + 1;
v20 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v19);
v21 = v8[v20];
if v21 >= 0 goto label12;
v22 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNumeric(int,char[])>(v20, v12);
goto label13;
label12:
v22 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNamed(int,char[])>(v21, v12);
label13:
v23 = v22;
v24 = v11 + v22;
v25 = lengthof v7;
if v24 <= v25 goto label19;
v26 = lengthof v7;
v27 = v26 - v11;
if v27 <= 0 goto label14;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v12, 0, v7, v11, v27);
label14:
if v4 != null goto label15;
v4 = staticinvoke <com.fasterxml.jackson.core.util.TextBuffer: com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(v7);
label15:
v7 = virtualinvoke v4.<com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();
label16:
goto label18;
label17:
v28 := @caughtexception;
v29 = new java.lang.IllegalStateException;
specialinvoke v29.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v28);
throw v29;
label18:
v30 = v23 - v27;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v12, v27, v7, 0, v30);
v11 = v30;
goto label02;
label19:
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v12, 0, v7, v11, v22);
v11 = v11 + v22;
goto label02;
label20:
if v4 != null goto label21;
v31 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(v7, 0, v11);
return v31;
label21:
virtualinvoke v4.<com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(v11);
label22:
v32 = virtualinvoke v4.<com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>();
label23:
return v32;
label24:
v33 := @caughtexception;
v34 = new java.lang.IllegalStateException;
specialinvoke v34.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v33);
throw v34;
catch java.io.IOException from label05 to label06 with label07;
catch java.io.IOException from label15 to label16 with label17;
catch java.io.IOException from label22 to label23 with label24;
}
public void quoteAsString(java.lang.CharSequence, java.lang.StringBuilder)
{
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
java.lang.CharSequence v1;
char v11, v8;
int[] v3;
int v10, v12, v13, v4, v5, v6, v9;
char[] v7;
java.lang.StringBuilder v2;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.StringBuilder;
v3 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();
v4 = lengthof v3;
v5 = 0;
v6 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v7 = null;
label1:
if v5 >= v6 goto label8;
label2:
v8 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v5);
if v8 >= v4 goto label3;
v9 = v3[v8];
if v9 != 0 goto label4;
label3:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
v5 = v5 + 1;
if v5 >= v6 goto label8;
goto label2;
label4:
if v7 != null goto label5;
v7 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: char[] _qbuf()>();
label5:
v10 = v5;
v5 = v5 + 1;
v11 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v10);
v12 = v3[v11];
if v12 >= 0 goto label6;
v13 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNumeric(int,char[])>(v11, v7);
goto label7;
label6:
v13 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNamed(int,char[])>(v12, v7);
label7:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(v7, 0, v13);
goto label1;
label8:
return;
}
public byte[] quoteAsUTF8(java.lang.String)
{
byte[] v50, v51, v6;
int[] v8;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
int v10, v11, v12, v13, v14, v16, v17, v18, v19, v2, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v32, v33, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5;
java.lang.String v1;
char v15, v20, v31, v34, v9;
com.fasterxml.jackson.core.util.ByteArrayBuilder v7;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: java.lang.String;
v2 = 0;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
v4 = 0;
v5 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _initialByteBufSize(int)>(v3);
v6 = newarray (byte)[v5];
v7 = null;
label01:
if v2 >= v3 goto label20;
v8 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();
label02:
v9 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
if v9 > 127 goto label05;
v10 = v8[v9];
if v10 != 0 goto label05;
v11 = lengthof v6;
if v4 < v11 goto label04;
if v7 != null goto label03;
v7 = staticinvoke <com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(v6, v4);
label03:
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v4 = 0;
label04:
v12 = v4;
v4 = v4 + 1;
v6[v12] = v9;
v2 = v2 + 1;
if v2 >= v3 goto label20;
goto label02;
label05:
if v7 != null goto label06;
v7 = staticinvoke <com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(v6, v4);
label06:
v13 = lengthof v6;
if v4 < v13 goto label07;
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v4 = 0;
label07:
v14 = v2;
v2 = v2 + 1;
v15 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v14);
if v15 > 127 goto label08;
v16 = v8[v15];
v4 = specialinvoke v0.<com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendByte(int,int,com.fasterxml.jackson.core.util.ByteArrayBuilder,int)>(v15, v16, v7, v4);
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] getCurrentSegment()>();
goto label01;
label08:
if v15 > 2047 goto label09;
v17 = v4 + 1;
v18 = v15 >> 6;
v19 = 192 | v18;
v6[v4] = v19;
v20 = v15 & 63;
v21 = 128 | v20;
goto label18;
label09:
v22 = (int) 55296;
if v15 < v22 goto label10;
v23 = (int) 57343;
if v15 <= v23 goto label12;
label10:
v24 = v4 + 1;
v25 = v15 >> 12;
v26 = 224 | v25;
v6[v4] = v26;
v27 = lengthof v6;
if v24 < v27 goto label11;
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v24 = 0;
label11:
v17 = v24 + 1;
v28 = v15 >> 6;
v29 = v28 & 63;
v30 = 128 | v29;
v6[v24] = v30;
v31 = v15 & 63;
v21 = 128 | v31;
goto label18;
label12:
v32 = (int) 56319;
if v15 <= v32 goto label13;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v15);
label13:
if v2 < v3 goto label14;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v15);
label14:
v33 = v2;
v2 = v2 + 1;
v34 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v33);
v35 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>(v15, v34);
if v35 <= 1114111 goto label15;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v35);
label15:
v36 = v4 + 1;
v37 = v35 >> 18;
v38 = 240 | v37;
v6[v4] = v38;
v39 = lengthof v6;
if v36 < v39 goto label16;
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v36 = 0;
label16:
v40 = v36 + 1;
v41 = v35 >> 12;
v42 = v41 & 63;
v43 = 128 | v42;
v6[v36] = v43;
v44 = lengthof v6;
if v40 < v44 goto label17;
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v40 = 0;
label17:
v17 = v40 + 1;
v45 = v35 >> 6;
v46 = v45 & 63;
v47 = 128 | v46;
v6[v40] = v47;
v48 = v35 & 63;
v21 = 128 | v48;
label18:
v49 = lengthof v6;
if v17 < v49 goto label19;
v6 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v17 = 0;
label19:
v4 = v17 + 1;
v6[v17] = v21;
goto label01;
label20:
if v7 != null goto label21;
v50 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(v6, 0, v4);
return v50;
label21:
v51 = virtualinvoke v7.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(v4);
return v51;
}
public byte[] encodeAsUTF8(java.lang.String)
{
byte[] v41, v42, v6;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
int v11, v12, v13, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v5, v7, v9;
java.lang.String v1;
char v10, v14, v28;
com.fasterxml.jackson.core.util.ByteArrayBuilder v8;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: java.lang.String;
v2 = 0;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
v4 = 0;
v5 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _initialByteBufSize(int)>(v3);
v6 = newarray (byte)[v5];
v7 = lengthof v6;
v8 = null;
label01:
if v2 >= v3 goto label19;
v9 = v2;
v2 = v2 + 1;
v10 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v9);
v11 = v10;
label02:
if v11 > 127 goto label05;
if v4 < v7 goto label04;
if v8 != null goto label03;
v8 = staticinvoke <com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(v6, v4);
label03:
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v4 = 0;
label04:
v12 = v4;
v4 = v4 + 1;
v6[v12] = v11;
if v2 >= v3 goto label19;
v13 = v2;
v2 = v2 + 1;
v14 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v13);
v11 = v14;
goto label02;
label05:
if v8 != null goto label06;
v8 = staticinvoke <com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(v6, v4);
label06:
if v4 < v7 goto label07;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v4 = 0;
label07:
if v11 >= 2048 goto label08;
v15 = v4 + 1;
v16 = v11 >> 6;
v17 = 192 | v16;
v6[v4] = v17;
goto label17;
label08:
v18 = (int) 55296;
if v11 < v18 goto label09;
v19 = (int) 57343;
if v11 <= v19 goto label11;
label09:
v20 = v4 + 1;
v21 = v11 >> 12;
v22 = 224 | v21;
v6[v4] = v22;
if v20 < v7 goto label10;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v20 = 0;
label10:
v15 = v20 + 1;
v23 = v11 >> 6;
v24 = v23 & 63;
v25 = 128 | v24;
v6[v20] = v25;
goto label17;
label11:
v26 = (int) 56319;
if v11 <= v26 goto label12;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v11);
label12:
if v2 < v3 goto label13;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v11);
label13:
v27 = v2;
v2 = v2 + 1;
v28 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v27);
v11 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>(v11, v28);
if v11 <= 1114111 goto label14;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v11);
label14:
v29 = v4 + 1;
v30 = v11 >> 18;
v31 = 240 | v30;
v6[v4] = v31;
if v29 < v7 goto label15;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v29 = 0;
label15:
v32 = v29 + 1;
v33 = v11 >> 12;
v34 = v33 & 63;
v35 = 128 | v34;
v6[v29] = v35;
if v32 < v7 goto label16;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v32 = 0;
label16:
v15 = v32 + 1;
v36 = v11 >> 6;
v37 = v36 & 63;
v38 = 128 | v37;
v6[v32] = v38;
label17:
if v15 < v7 goto label18;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v15 = 0;
label18:
v4 = v15 + 1;
v39 = v11 & 63;
v40 = 128 | v39;
v6[v15] = v40;
goto label01;
label19:
if v8 != null goto label20;
v41 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(v6, 0, v4);
return v41;
label20:
v42 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(v4);
return v42;
}
public byte[] encodeAsUTF8(java.lang.CharSequence)
{
byte[] v41, v42, v6;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
java.lang.CharSequence v1;
int v11, v12, v13, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v5, v7, v9;
char v10, v14, v28;
com.fasterxml.jackson.core.util.ByteArrayBuilder v8;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: java.lang.CharSequence;
v2 = 0;
v3 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v4 = 0;
v5 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _initialByteBufSize(int)>(v3);
v6 = newarray (byte)[v5];
v7 = lengthof v6;
v8 = null;
label01:
if v2 >= v3 goto label19;
v9 = v2;
v2 = v2 + 1;
v10 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v9);
v11 = v10;
label02:
if v11 > 127 goto label05;
if v4 < v7 goto label04;
if v8 != null goto label03;
v8 = staticinvoke <com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(v6, v4);
label03:
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v4 = 0;
label04:
v12 = v4;
v4 = v4 + 1;
v6[v12] = v11;
if v2 >= v3 goto label19;
v13 = v2;
v2 = v2 + 1;
v14 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v13);
v11 = v14;
goto label02;
label05:
if v8 != null goto label06;
v8 = staticinvoke <com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(v6, v4);
label06:
if v4 < v7 goto label07;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v4 = 0;
label07:
if v11 >= 2048 goto label08;
v15 = v4 + 1;
v16 = v11 >> 6;
v17 = 192 | v16;
v6[v4] = v17;
goto label17;
label08:
v18 = (int) 55296;
if v11 < v18 goto label09;
v19 = (int) 57343;
if v11 <= v19 goto label11;
label09:
v20 = v4 + 1;
v21 = v11 >> 12;
v22 = 224 | v21;
v6[v4] = v22;
if v20 < v7 goto label10;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v20 = 0;
label10:
v15 = v20 + 1;
v23 = v11 >> 6;
v24 = v23 & 63;
v25 = 128 | v24;
v6[v20] = v25;
goto label17;
label11:
v26 = (int) 56319;
if v11 <= v26 goto label12;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v11);
label12:
if v2 < v3 goto label13;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v11);
label13:
v27 = v2;
v2 = v2 + 1;
v28 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v27);
v11 = staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>(v11, v28);
if v11 <= 1114111 goto label14;
staticinvoke <com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(v11);
label14:
v29 = v4 + 1;
v30 = v11 >> 18;
v31 = 240 | v30;
v6[v4] = v31;
if v29 < v7 goto label15;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v29 = 0;
label15:
v32 = v29 + 1;
v33 = v11 >> 12;
v34 = v33 & 63;
v35 = 128 | v34;
v6[v29] = v35;
if v32 < v7 goto label16;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v32 = 0;
label16:
v15 = v32 + 1;
v36 = v11 >> 6;
v37 = v36 & 63;
v38 = 128 | v37;
v6[v32] = v38;
label17:
if v15 < v7 goto label18;
v6 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();
v7 = lengthof v6;
v15 = 0;
label18:
v4 = v15 + 1;
v39 = v11 & 63;
v40 = 128 | v39;
v6[v15] = v40;
goto label01;
label19:
if v8 != null goto label20;
v41 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(v6, 0, v4);
return v41;
label20:
v42 = virtualinvoke v8.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(v4);
return v42;
}
private char[] _qbuf()
{
char[] v1;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 = newarray (char)[6];
v1[0] = 92;
v1[2] = 48;
v1[3] = 48;
return v1;
}
private int _appendNumeric(int, char[])
{
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
char v5, v8;
int v1, v4, v7;
char[] v2, v3, v6;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: int;
v2 := @parameter1: char[];
v2[1] = 117;
v3 = <com.fasterxml.jackson.core.io.JsonStringEncoder: char[] HC>;
v4 = v1 >> 4;
v5 = v3[v4];
v2[4] = v5;
v6 = <com.fasterxml.jackson.core.io.JsonStringEncoder: char[] HC>;
v7 = v1 & 15;
v8 = v6[v7];
v2[5] = v8;
return 6;
}
private int _appendNamed(int, char[])
{
int v1;
char[] v2;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: int;
v2 := @parameter1: char[];
v2[1] = v1;
return 2;
}
private int _appendByte(int, int, com.fasterxml.jackson.core.util.ByteArrayBuilder, int)
{
byte[] v12, v15, v6, v9;
byte v11, v14, v17, v19, v8;
int v1, v10, v13, v16, v18, v2, v4, v5, v7;
com.fasterxml.jackson.core.io.JsonStringEncoder v0;
com.fasterxml.jackson.core.util.ByteArrayBuilder v3;
v0 := @this: com.fasterxml.jackson.core.io.JsonStringEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v4 := @parameter3: int;
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void setCurrentSegmentLength(int)>(v4);
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(92);
if v2 >= 0 goto label3;
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(117);
if v1 <= 255 goto label1;
v5 = v1 >> 8;
v6 = <com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;
v7 = v5 >> 4;
v8 = v6[v7];
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v8);
v9 = <com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;
v10 = v5 & 15;
v11 = v9[v10];
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v11);
v1 = v1 & 255;
goto label2;
label1:
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(48);
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(48);
label2:
v12 = <com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;
v13 = v1 >> 4;
v14 = v12[v13];
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v14);
v15 = <com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;
v16 = v1 & 15;
v17 = v15[v16];
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v17);
goto label4;
label3:
virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v19);
label4:
v18 = virtualinvoke v3.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int getCurrentSegmentLength()>();
return v18;
}
private static int _convert(int, int)
{
java.lang.IllegalArgumentException v4;
int v0, v1, v10, v11, v12, v13, v14, v2, v3, v8, v9;
java.lang.String v5, v6, v7;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = (int) 56320;
if v1 < v2 goto label1;
v3 = (int) 57343;
if v1 <= v3 goto label2;
label1:
v4 = new java.lang.IllegalArgumentException;
v5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v0);
v6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v1);
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Broken surrogate pair: first char 0x\u0001, second 0x\u0001; illegal combination");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v4;
label2:
v8 = (int) 55296;
v9 = v0 - v8;
v10 = v9 << 10;
v11 = 65536 + v10;
v12 = (int) 56320;
v13 = v1 - v12;
v14 = v11 + v13;
return v14;
}
private static void _illegal(int)
{
int v0;
java.lang.String v2;
java.lang.IllegalArgumentException v1;
v0 := @parameter0: int;
v1 = new java.lang.IllegalArgumentException;
v2 = staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: java.lang.String illegalSurrogateDesc(int)>(v0);
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v2);
throw v1;
}
static int _initialCharBufSize(int)
{
int v0, v1, v2, v3, v4, v5, v6;
v0 := @parameter0: int;
v1 = v0 >> 3;
v2 = 6 + v1;
v3 = staticinvoke <java.lang.Math: int min(int,int)>(v2, 1000);
v4 = v0 + v3;
v5 = staticinvoke <java.lang.Math: int max(int,int)>(16, v4);
v6 = staticinvoke <java.lang.Math: int min(int,int)>(v5, 32000);
return v6;
}
static int _initialByteBufSize(int)
{
int v0, v1, v2, v3, v4, v5;
v0 := @parameter0: int;
v1 = v0 + 6;
v2 = v0 >> 1;
v3 = v1 + v2;
v4 = staticinvoke <java.lang.Math: int max(int,int)>(24, v3);
v5 = staticinvoke <java.lang.Math: int min(int,int)>(v4, 32000);
return v5;
}
static void <clinit>()
{
byte[] v1;
char[] v0;
com.fasterxml.jackson.core.io.JsonStringEncoder v2;
v0 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars(boolean)>(1);
<com.fasterxml.jackson.core.io.JsonStringEncoder: char[] HC> = v0;
v1 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: byte[] copyHexBytes(boolean)>(1);
<com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB> = v1;
v2 = new com.fasterxml.jackson.core.io.JsonStringEncoder;
specialinvoke v2.<com.fasterxml.jackson.core.io.JsonStringEncoder: void <init>()>();
<com.fasterxml.jackson.core.io.JsonStringEncoder: com.fasterxml.jackson.core.io.JsonStringEncoder instance> = v2;
return;
}
}