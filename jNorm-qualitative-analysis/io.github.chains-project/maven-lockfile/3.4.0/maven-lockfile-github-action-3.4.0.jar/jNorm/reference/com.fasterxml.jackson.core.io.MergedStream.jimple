public final class com.fasterxml.jackson.core.io.MergedStream extends java.io.InputStream
{
private final com.fasterxml.jackson.core.io.IOContext _ctxt;
private final java.io.InputStream _in;
private byte[] _b;
private int _ptr;
private final int _end;
public void <init>(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int)
{
byte[] v3;
com.fasterxml.jackson.core.io.IOContext v1;
int v4, v5;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: byte[];
v4 := @parameter3: int;
v5 := @parameter4: int;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v0.<com.fasterxml.jackson.core.io.MergedStream: com.fasterxml.jackson.core.io.IOContext _ctxt> = v1;
v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in> = v2;
v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b> = v3;
v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr> = v4;
v0.<com.fasterxml.jackson.core.io.MergedStream: int _end> = v5;
return;
}
public int available() throws java.io.IOException
{
byte[] v1;
int v2, v3, v4, v6;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v5;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _end>;
v3 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v4 = v2 - v3;
return v4;
label1:
v5 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
v6 = virtualinvoke v5.<java.io.InputStream: int available()>();
return v6;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
specialinvoke v0.<com.fasterxml.jackson.core.io.MergedStream: void _free()>();
v1 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
virtualinvoke v1.<java.io.InputStream: void close()>();
return;
}
public synchronized void mark(int)
{
byte[] v2;
int v1;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v3;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v2 != null goto label1;
v3 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
virtualinvoke v3.<java.io.InputStream: void mark(int)>(v1);
label1:
return;
}
public boolean markSupported()
{
byte[] v1;
boolean v3, v4;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
v3 = virtualinvoke v2.<java.io.InputStream: boolean markSupported()>();
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int read() throws java.io.IOException
{
byte[] v1, v2;
short v6;
byte v5;
int v10, v3, v4, v7, v8;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v9;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v1 == null goto label2;
v2 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
v3 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v4 = v3 + 1;
v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr> = v4;
v5 = v2[v3];
v6 = v5 & 255;
v7 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v8 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _end>;
if v7 < v8 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.io.MergedStream: void _free()>();
label1:
return v6;
label2:
v9 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
v10 = virtualinvoke v9.<java.io.InputStream: int read()>();
return v10;
}
public int read(byte[]) throws java.io.IOException
{
byte[] v1;
int v2, v3;
com.fasterxml.jackson.core.io.MergedStream v0;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.io.MergedStream: int read(byte[],int,int)>(v1, 0, v2);
return v3;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1, v4, v8;
int v10, v11, v12, v13, v15, v2, v3, v5, v6, v7, v9;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v14;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v4 == null goto label3;
v5 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _end>;
v6 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v7 = v5 - v6;
if v3 <= v7 goto label1;
v3 = v7;
label1:
v8 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
v9 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v8, v9, v1, v2, v3);
v10 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v11 = v10 + v3;
v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr> = v11;
v12 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v13 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _end>;
if v12 < v13 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.io.MergedStream: void _free()>();
label2:
return v3;
label3:
v14 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
v15 = virtualinvoke v14.<java.io.InputStream: int read(byte[],int,int)>(v1, v2, v3);
return v15;
}
public synchronized void reset() throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
virtualinvoke v2.<java.io.InputStream: void reset()>();
label1:
return;
}
public long skip(long) throws java.io.IOException
{
byte[] v3;
long v1, v12, v2;
byte v10, v7;
int v4, v5, v6, v8, v9;
com.fasterxml.jackson.core.io.MergedStream v0;
java.io.InputStream v11;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 := @parameter0: long;
v2 = 0L;
v3 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v3 == null goto label2;
v4 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _end>;
v5 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v6 = v4 - v5;
v7 = v6 cmp v1;
if v7 <= 0 goto label1;
v8 = v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr>;
v9 = v8 + v1;
v0.<com.fasterxml.jackson.core.io.MergedStream: int _ptr> = v9;
return v1;
label1:
specialinvoke v0.<com.fasterxml.jackson.core.io.MergedStream: void _free()>();
v2 = 0L + v6;
v1 = v1 - v6;
label2:
v10 = v1 cmp 0L;
if v10 <= 0 goto label3;
v11 = v0.<com.fasterxml.jackson.core.io.MergedStream: java.io.InputStream _in>;
v12 = virtualinvoke v11.<java.io.InputStream: long skip(long)>(v1);
v2 = v2 + v12;
label3:
return v2;
}
private void _free()
{
byte[] v1;
com.fasterxml.jackson.core.io.IOContext v2, v3;
com.fasterxml.jackson.core.io.MergedStream v0;
v0 := @this: com.fasterxml.jackson.core.io.MergedStream;
v1 = v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b>;
if v1 == null goto label1;
v0.<com.fasterxml.jackson.core.io.MergedStream: byte[] _b> = null;
v2 = v0.<com.fasterxml.jackson.core.io.MergedStream: com.fasterxml.jackson.core.io.IOContext _ctxt>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.io.MergedStream: com.fasterxml.jackson.core.io.IOContext _ctxt>;
virtualinvoke v3.<com.fasterxml.jackson.core.io.IOContext: void releaseReadIOBuffer(byte[])>(v1);
label1:
return;
}
}