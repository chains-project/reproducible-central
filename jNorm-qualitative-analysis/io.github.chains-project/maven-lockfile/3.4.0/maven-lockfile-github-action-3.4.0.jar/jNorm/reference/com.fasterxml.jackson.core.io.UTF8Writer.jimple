public final class com.fasterxml.jackson.core.io.UTF8Writer extends java.io.Writer
{
static final int SURR1_FIRST;
static final int SURR1_LAST;
static final int SURR2_FIRST;
static final int SURR2_LAST;
private final com.fasterxml.jackson.core.io.IOContext _context;
private java.io.OutputStream _out;
private byte[] _outBuffer;
private final int _outBufferEnd;
private int _outPtr;
private int _surrogate;
public void <init>(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)
{
java.io.OutputStream v2;
byte[] v3, v4;
com.fasterxml.jackson.core.io.UTF8Writer v0;
com.fasterxml.jackson.core.io.IOContext v1;
int v5, v6;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: java.io.OutputStream;
specialinvoke v0.<java.io.Writer: void <init>()>();
v0.<com.fasterxml.jackson.core.io.UTF8Writer: com.fasterxml.jackson.core.io.IOContext _context> = v1;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out> = v2;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.io.IOContext: byte[] allocWriteEncodingBuffer()>();
v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer> = v3;
v4 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v5 = lengthof v4;
v6 = v5 - 4;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd> = v6;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;
return;
}
public java.io.Writer append(char) throws java.io.IOException
{
char v1;
com.fasterxml.jackson.core.io.UTF8Writer v0;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: char;
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>(v1);
return v0;
}
public void close() throws java.io.IOException
{
java.io.OutputStream v1, v3, v6;
byte[] v4, v7;
com.fasterxml.jackson.core.io.UTF8Writer v0;
com.fasterxml.jackson.core.io.IOContext v8;
int v2, v5, v9;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
if v1 == null goto label3;
v2 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
if v2 <= 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
v4 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v5 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
virtualinvoke v3.<java.io.OutputStream: void write(byte[],int,int)>(v4, 0, v5);
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;
label1:
v6 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out> = null;
v7 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
if v7 == null goto label2;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer> = null;
v8 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: com.fasterxml.jackson.core.io.IOContext _context>;
virtualinvoke v8.<com.fasterxml.jackson.core.io.IOContext: void releaseWriteEncodingBuffer(byte[])>(v7);
label2:
virtualinvoke v6.<java.io.OutputStream: void close()>();
v9 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = 0;
if v9 <= 0 goto label3;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v9);
label3:
return;
}
public void flush() throws java.io.IOException
{
java.io.OutputStream v1, v3, v6;
byte[] v4;
com.fasterxml.jackson.core.io.UTF8Writer v0;
int v2, v5;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
if v1 == null goto label2;
v2 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
if v2 <= 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
v4 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v5 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
virtualinvoke v3.<java.io.OutputStream: void write(byte[],int,int)>(v4, 0, v5);
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;
label1:
v6 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
virtualinvoke v6.<java.io.OutputStream: void flush()>();
label2:
return;
}
public void write(char[]) throws java.io.IOException
{
int v2;
char[] v1;
com.fasterxml.jackson.core.io.UTF8Writer v0;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: char[];
v2 = lengthof v1;
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(char[],int,int)>(v1, 0, v2);
return;
}
public void write(char[], int, int) throws java.io.IOException
{
byte[] v10;
com.fasterxml.jackson.core.io.UTF8Writer v0;
short v26, v37;
int v11, v12, v14, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v38, v39, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5, v50, v51, v52, v53, v54, v6, v8, v9;
java.io.OutputStream v13;
char v15, v25, v36, v4, v40, v7;
char[] v1;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
if v3 >= 2 goto label02;
if v3 != 1 goto label01;
v4 = v1[v2];
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>(v4);
label01:
return;
label02:
v5 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;
if v5 <= 0 goto label03;
v6 = v2;
v2 = v2 + 1;
v7 = v1[v6];
v3 = v3 - 1;
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(v7);
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>(v8);
label03:
v9 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
v10 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v11 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd>;
v12 = v3 + v2;
label04:
if v2 >= v12 goto label14;
if v9 < v11 goto label05;
v13 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
virtualinvoke v13.<java.io.OutputStream: void write(byte[],int,int)>(v10, 0, v9);
v9 = 0;
label05:
v14 = v2;
v2 = v2 + 1;
v15 = v1[v14];
if v15 >= 128 goto label08;
v16 = v9;
v9 = v9 + 1;
v10[v16] = v15;
v17 = v12 - v2;
v18 = v11 - v9;
if v17 <= v18 goto label06;
v17 = v18;
label06:
v19 = v17 + v2;
label07:
if v2 >= v19 goto label04;
v20 = v2;
v2 = v2 + 1;
v15 = v1[v20];
if v15 >= 128 goto label08;
v21 = v9;
v9 = v9 + 1;
v10[v21] = v15;
goto label07;
label08:
if v15 >= 2048 goto label09;
v22 = v9 + 1;
v23 = v15 >> 6;
v24 = 192 | v23;
v10[v9] = v24;
v9 = v22 + 1;
v25 = v15 & 63;
v26 = 128 | v25;
v10[v22] = v26;
goto label04;
label09:
v27 = (int) 55296;
if v15 < v27 goto label10;
v28 = (int) 57343;
if v15 <= v28 goto label11;
label10:
v29 = v9 + 1;
v30 = v15 >> 12;
v31 = 224 | v30;
v10[v9] = v31;
v32 = v29 + 1;
v33 = v15 >> 6;
v34 = v33 & 63;
v35 = 128 | v34;
v10[v29] = v35;
v9 = v32 + 1;
v36 = v15 & 63;
v37 = 128 | v36;
v10[v32] = v37;
goto label04;
label11:
v38 = (int) 56319;
if v15 <= v38 goto label12;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v9;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v15);
label12:
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = v15;
if v2 >= v12 goto label14;
v39 = v2;
v2 = v2 + 1;
v40 = v1[v39];
v41 = virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(v40);
if v41 <= 1114111 goto label13;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v9;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v41);
label13:
v42 = v9 + 1;
v43 = v41 >> 18;
v44 = 240 | v43;
v10[v9] = v44;
v45 = v42 + 1;
v46 = v41 >> 12;
v47 = v46 & 63;
v48 = 128 | v47;
v10[v42] = v48;
v49 = v45 + 1;
v50 = v41 >> 6;
v51 = v50 & 63;
v52 = 128 | v51;
v10[v45] = v52;
v9 = v49 + 1;
v53 = v41 & 63;
v54 = 128 | v53;
v10[v49] = v54;
goto label04;
label14:
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v9;
return;
}
public void write(int) throws java.io.IOException
{
byte[] v11, v15, v19, v24, v28, v33, v36, v40, v45, v50, v9;
com.fasterxml.jackson.core.io.UTF8Writer v0;
int v1, v10, v12, v13, v14, v16, v17, v18, v2, v20, v21, v22, v23, v25, v26, v27, v29, v3, v30, v31, v32, v34, v35, v37, v38, v39, v4, v41, v42, v43, v44, v46, v47, v48, v49, v5, v51, v52, v6, v7;
java.io.OutputStream v8;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;
if v2 <= 0 goto label01;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(v1);
goto label03;
label01:
v3 = (int) 55296;
if v1 < v3 goto label03;
v4 = (int) 57343;
if v1 > v4 goto label03;
v5 = (int) 56319;
if v1 <= v5 goto label02;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v1);
label02:
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = v1;
return;
label03:
v6 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
v7 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd>;
if v6 < v7 goto label04;
v8 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
v9 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v10 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
virtualinvoke v8.<java.io.OutputStream: void write(byte[],int,int)>(v9, 0, v10);
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;
label04:
if v1 >= 128 goto label05;
v11 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v12 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
v13 = v12 + 1;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v13;
v11[v12] = v1;
goto label10;
label05:
v14 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
if v1 >= 2048 goto label06;
v15 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v16 = v14 + 1;
v17 = v1 >> 6;
v18 = 192 | v17;
v15[v14] = v18;
v19 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v20 = v16 + 1;
v21 = v1 & 63;
v22 = 128 | v21;
v19[v16] = v22;
goto label09;
label06:
v23 = (int) 65535;
if v1 > v23 goto label07;
v24 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v25 = v14 + 1;
v26 = v1 >> 12;
v27 = 224 | v26;
v24[v14] = v27;
v28 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v29 = v25 + 1;
v30 = v1 >> 6;
v31 = v30 & 63;
v32 = 128 | v31;
v28[v25] = v32;
v33 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v20 = v29 + 1;
v34 = v1 & 63;
v35 = 128 | v34;
v33[v29] = v35;
goto label09;
label07:
if v1 <= 1114111 goto label08;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v1);
label08:
v36 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v37 = v14 + 1;
v38 = v1 >> 18;
v39 = 240 | v38;
v36[v14] = v39;
v40 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v41 = v37 + 1;
v42 = v1 >> 12;
v43 = v42 & 63;
v44 = 128 | v43;
v40[v37] = v44;
v45 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v46 = v41 + 1;
v47 = v1 >> 6;
v48 = v47 & 63;
v49 = 128 | v48;
v45[v41] = v49;
v50 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v20 = v46 + 1;
v51 = v1 & 63;
v52 = 128 | v51;
v50[v46] = v52;
label09:
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v20;
label10:
return;
}
public void write(java.lang.String) throws java.io.IOException
{
int v2;
java.lang.String v1;
com.fasterxml.jackson.core.io.UTF8Writer v0;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(java.lang.String,int,int)>(v1, 0, v2);
return;
}
public void write(java.lang.String, int, int) throws java.io.IOException
{
byte[] v10;
com.fasterxml.jackson.core.io.UTF8Writer v0;
short v26, v37;
int v11, v12, v14, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v38, v39, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5, v50, v51, v52, v53, v54, v6, v8, v9;
java.lang.String v1;
java.io.OutputStream v13;
char v15, v25, v36, v4, v40, v7;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
if v3 >= 2 goto label02;
if v3 != 1 goto label01;
v4 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>(v4);
label01:
return;
label02:
v5 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;
if v5 <= 0 goto label03;
v6 = v2;
v2 = v2 + 1;
v7 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v6);
v3 = v3 - 1;
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(v7);
virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>(v8);
label03:
v9 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;
v10 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;
v11 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd>;
v12 = v3 + v2;
label04:
if v2 >= v12 goto label14;
if v9 < v11 goto label05;
v13 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;
virtualinvoke v13.<java.io.OutputStream: void write(byte[],int,int)>(v10, 0, v9);
v9 = 0;
label05:
v14 = v2;
v2 = v2 + 1;
v15 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v14);
if v15 >= 128 goto label08;
v16 = v9;
v9 = v9 + 1;
v10[v16] = v15;
v17 = v12 - v2;
v18 = v11 - v9;
if v17 <= v18 goto label06;
v17 = v18;
label06:
v19 = v17 + v2;
label07:
if v2 >= v19 goto label04;
v20 = v2;
v2 = v2 + 1;
v15 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v20);
if v15 >= 128 goto label08;
v21 = v9;
v9 = v9 + 1;
v10[v21] = v15;
goto label07;
label08:
if v15 >= 2048 goto label09;
v22 = v9 + 1;
v23 = v15 >> 6;
v24 = 192 | v23;
v10[v9] = v24;
v9 = v22 + 1;
v25 = v15 & 63;
v26 = 128 | v25;
v10[v22] = v26;
goto label04;
label09:
v27 = (int) 55296;
if v15 < v27 goto label10;
v28 = (int) 57343;
if v15 <= v28 goto label11;
label10:
v29 = v9 + 1;
v30 = v15 >> 12;
v31 = 224 | v30;
v10[v9] = v31;
v32 = v29 + 1;
v33 = v15 >> 6;
v34 = v33 & 63;
v35 = 128 | v34;
v10[v29] = v35;
v9 = v32 + 1;
v36 = v15 & 63;
v37 = 128 | v36;
v10[v32] = v37;
goto label04;
label11:
v38 = (int) 56319;
if v15 <= v38 goto label12;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v9;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v15);
label12:
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = v15;
if v2 >= v12 goto label14;
v39 = v2;
v2 = v2 + 1;
v40 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v39);
v41 = virtualinvoke v0.<com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(v40);
if v41 <= 1114111 goto label13;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v9;
staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(v41);
label13:
v42 = v9 + 1;
v43 = v41 >> 18;
v44 = 240 | v43;
v10[v9] = v44;
v45 = v42 + 1;
v46 = v41 >> 12;
v47 = v46 & 63;
v48 = 128 | v47;
v10[v42] = v48;
v49 = v45 + 1;
v50 = v41 >> 6;
v51 = v50 & 63;
v52 = 128 | v51;
v10[v45] = v52;
v9 = v49 + 1;
v53 = v41 & 63;
v54 = 128 | v53;
v10[v49] = v54;
goto label04;
label14:
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = v9;
return;
}
protected int convertSurrogate(int) throws java.io.IOException
{
int v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v9;
java.lang.String v6, v7, v8;
com.fasterxml.jackson.core.io.UTF8Writer v0;
java.io.IOException v5;
v0 := @this: com.fasterxml.jackson.core.io.UTF8Writer;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;
v0.<com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = 0;
v3 = (int) 56320;
if v1 < v3 goto label1;
v4 = (int) 57343;
if v1 <= v4 goto label2;
label1:
v5 = new java.io.IOException;
v6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v2);
v7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v1);
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Broken surrogate pair: first char 0x\u0001, second 0x\u0001; illegal combination");
specialinvoke v5.<java.io.IOException: void <init>(java.lang.String)>(v8);
throw v5;
label2:
v9 = (int) 55296;
v10 = v2 - v9;
v11 = v10 << 10;
v12 = 65536 + v11;
v13 = (int) 56320;
v14 = v1 - v13;
v15 = v12 + v14;
return v15;
}
protected static void illegalSurrogate(int) throws java.io.IOException
{
int v0;
java.io.IOException v1;
java.lang.String v2;
v0 := @parameter0: int;
v1 = new java.io.IOException;
v2 = staticinvoke <com.fasterxml.jackson.core.io.UTF8Writer: java.lang.String illegalSurrogateDesc(int)>(v0);
specialinvoke v1.<java.io.IOException: void <init>(java.lang.String)>(v2);
throw v1;
}
protected static java.lang.String illegalSurrogateDesc(int)
{
int v0, v3, v4;
java.lang.String v1, v10, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: int;
if v0 <= 1114111 goto label1;
v1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v0);
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Illegal character point (0x\u0001) to output; max is 0x10FFFF as per RFC 4627");
return v2;
label1:
v3 = (int) 55296;
if v0 < v3 goto label3;
v4 = (int) 56319;
if v0 > v4 goto label2;
v5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v0);
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unmatched first part of surrogate pair (0x\u0001)");
return v6;
label2:
v7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v0);
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unmatched second part of surrogate pair (0x\u0001)");
return v8;
label3:
v9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v0);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Illegal character point (0x\u0001) to output");
return v10;
}
}