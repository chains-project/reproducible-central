abstract class com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser extends java.lang.Object
{
public static final java.lang.String ILLEGAL_OFFSET_OR_ILLEGAL_LENGTH;
public static final java.lang.String SYNTAX_ERROR;
public static final java.lang.String VALUE_EXCEEDS_LIMITS;
static final byte DECIMAL_POINT_CLASS;
static final byte OTHER_CLASS;
static final byte[] CHAR_TO_HEX_MAP;
void <init>()
{
com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser v0;
v0 := @this: com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
protected static byte charAt(byte[], int, int)
{
byte[] v0;
byte v3;
int v1, v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 >= v2 goto label1;
v3 = v0[v1];
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
protected static char charAt(char[], int, int)
{
int v1, v2;
char[] v0;
char v3;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 >= v2 goto label1;
v3 = v0[v1];
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
protected static char charAt(java.lang.CharSequence, int, int)
{
java.lang.CharSequence v0;
int v1, v2;
char v3;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 >= v2 goto label1;
v3 = interfaceinvoke v0.<java.lang.CharSequence: char charAt(int)>(v1);
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
protected static int lookupHex(byte)
{
byte[] v1;
short v2;
byte v0, v3;
v0 := @parameter0: byte;
v1 = <com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser: byte[] CHAR_TO_HEX_MAP>;
v2 = v0 & 255;
v3 = v1[v2];
return v3;
}
protected static int lookupHex(char)
{
byte[] v1;
char v0;
byte v2;
v0 := @parameter0: char;
if v0 >= 128 goto label1;
v1 = <com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser: byte[] CHAR_TO_HEX_MAP>;
v2 = v1[v0];
goto label2;
label1:
v2 = -1;
label2:
return v2;
}
static void <clinit>()
{
byte[] v0, v1, v2;
v0 = newarray (byte)[256];
<com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser: byte[] CHAR_TO_HEX_MAP> = v0;
v1 = <com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser: byte[] CHAR_TO_HEX_MAP>;
staticinvoke <java.util.Arrays: void fill(byte[],byte)>(v1, -1);
label1:
v2 = <com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser: byte[] CHAR_TO_HEX_MAP>;
v2[48] = 0;
goto label1;
}
}