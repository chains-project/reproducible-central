public final class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper extends java.lang.Object
{
public static final byte UTF8_BOM_1;
public static final byte UTF8_BOM_2;
public static final byte UTF8_BOM_3;
private final com.fasterxml.jackson.core.io.IOContext _context;
private final java.io.InputStream _in;
private final byte[] _inputBuffer;
private int _inputPtr;
private int _inputEnd;
private final boolean _bufferRecyclable;
private boolean _bigEndian;
private int _bytesPerChar;
public void <init>(com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)
{
byte[] v3;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
com.fasterxml.jackson.core.io.IOContext v1;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: java.io.InputStream;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context> = v1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in> = v2;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.io.IOContext: byte[] allocReadIOBuffer()>();
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer> = v3;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = 0;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd> = 0;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bufferRecyclable> = 1;
return;
}
public void <init>(com.fasterxml.jackson.core.io.IOContext, byte[], int, int)
{
byte[] v2;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
com.fasterxml.jackson.core.io.IOContext v1;
int v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context> = v1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in> = null;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer> = v2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = v3;
v5 = v3 + v4;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd> = v5;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bufferRecyclable> = 0;
return;
}
public com.fasterxml.jackson.core.JsonEncoding detectEncoding() throws java.io.IOException
{
byte[] v14, v21, v3, v32, v37, v7;
byte v10, v17, v24, v34, v40, v5;
boolean v1, v2, v27, v28, v30, v31, v43, v46, v48;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
short v11, v18, v25, v35, v41;
com.fasterxml.jackson.core.JsonEncoding v44, v47, v49;
int v12, v13, v15, v16, v19, v20, v22, v23, v26, v29, v33, v36, v38, v39, v4, v42, v45, v6, v8, v9;
java.lang.RuntimeException v50;
com.fasterxml.jackson.core.io.IOContext v51;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 = 0;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean ensureLoaded(int)>(4);
if v2 == 0 goto label03;
v3 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v4 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v5 = v3[v4];
v6 = v5 << 24;
v7 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v9 = v8 + 1;
v10 = v7[v9];
v11 = v10 & 255;
v12 = v11 << 16;
v13 = v6 | v12;
v14 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v15 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v16 = v15 + 2;
v17 = v14[v16];
v18 = v17 & 255;
v19 = v18 << 8;
v20 = v13 | v19;
v21 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v22 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v23 = v22 + 3;
v24 = v21[v23];
v25 = v24 & 255;
v26 = v20 | v25;
v27 = specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean handleBOM(int)>(v26);
if v27 == 0 goto label01;
v1 = 1;
goto label04;
label01:
v28 = specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF32(int)>(v26);
if v28 == 0 goto label02;
v1 = 1;
goto label04;
label02:
v29 = v26 >>> 16;
v30 = specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF16(int)>(v29);
if v30 == 0 goto label04;
v1 = 1;
goto label04;
label03:
v31 = virtualinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean ensureLoaded(int)>(2);
if v31 == 0 goto label04;
v32 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v33 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v34 = v32[v33];
v35 = v34 & 255;
v36 = v35 << 8;
v37 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v38 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v39 = v38 + 1;
v40 = v37[v39];
v41 = v40 & 255;
v42 = v36 | v41;
v43 = specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF16(int)>(v42);
if v43 == 0 goto label04;
v1 = 1;
label04:
if v1 != 0 goto label05;
v44 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
goto label14;
label05:
v45 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar>;
tableswitch(v45)
{
case 1: goto label06;
case 2: goto label07;
case 3: goto label13;
case 4: goto label10;
default: goto label13;
};
label06:
v44 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
goto label14;
label07:
v46 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian>;
if v46 == 0 goto label08;
v47 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF16_BE>;
goto label09;
label08:
v47 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF16_LE>;
label09:
v44 = v47;
goto label14;
label10:
v48 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian>;
if v48 == 0 goto label11;
v49 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF32_BE>;
goto label12;
label11:
v49 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF32_LE>;
label12:
v44 = v49;
goto label14;
label13:
v50 = new java.lang.RuntimeException;
specialinvoke v50.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");
throw v50;
label14:
v51 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
virtualinvoke v51.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(v44);
return v44;
}
public static int skipUTF8BOM(java.io.DataInput) throws java.io.IOException
{
java.io.IOException v3, v7;
int v1, v10, v2, v6;
java.io.DataInput v0;
java.lang.String v4, v5, v8, v9;
v0 := @parameter0: java.io.DataInput;
v1 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
if v1 == 239 goto label1;
return v1;
label1:
v2 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
if v2 == 187 goto label2;
v3 = new java.io.IOException;
v4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v2);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected byte 0x\u0001 following 0xEF; should get 0xBB as part of UTF-8 BOM");
specialinvoke v3.<java.io.IOException: void <init>(java.lang.String)>(v5);
throw v3;
label2:
v6 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
if v6 == 191 goto label3;
v7 = new java.io.IOException;
v8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v6);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected byte 0x\u0001 following 0xEF 0xBB; should get 0xBF as part of UTF-8 BOM");
specialinvoke v7.<java.io.IOException: void <init>(java.lang.String)>(v9);
throw v7;
label3:
v10 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
return v10;
}
public java.io.Reader constructReader() throws java.io.IOException
{
byte[] v13, v21, v6;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
java.io.ByteArrayInputStream v5;
com.fasterxml.jackson.core.JsonEncoding v2, v25;
int v10, v14, v15, v22, v23, v3, v7, v8, v9;
java.lang.String v17;
boolean v26;
java.lang.RuntimeException v27;
java.io.InputStreamReader v16;
com.fasterxml.jackson.core.io.UTF32Reader v18;
com.fasterxml.jackson.core.io.IOContext v1, v12, v19, v24;
com.fasterxml.jackson.core.io.MergedStream v11;
java.io.InputStream v20, v4;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.JsonEncoding getEncoding()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonEncoding: int bits()>();
lookupswitch(v3)
{
case 8: goto label1;
case 16: goto label1;
case 32: goto label4;
default: goto label5;
};
label1:
v4 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;
if v4 != null goto label2;
v5 = new java.io.ByteArrayInputStream;
v6 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v8 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
specialinvoke v5.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(v6, v7, v8);
v4 = v5;
goto label3;
label2:
v9 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v10 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
if v9 >= v10 goto label3;
v11 = new com.fasterxml.jackson.core.io.MergedStream;
v12 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
v13 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v14 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v15 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
specialinvoke v11.<com.fasterxml.jackson.core.io.MergedStream: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int)>(v12, v4, v13, v14, v15);
v4 = v11;
label3:
v16 = new java.io.InputStreamReader;
v17 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();
specialinvoke v16.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(v4, v17);
return v16;
label4:
v18 = new com.fasterxml.jackson.core.io.UTF32Reader;
v19 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
v20 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;
v21 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v22 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v23 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
v24 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
v25 = virtualinvoke v24.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.JsonEncoding getEncoding()>();
v26 = virtualinvoke v25.<com.fasterxml.jackson.core.JsonEncoding: boolean isBigEndian()>();
specialinvoke v18.<com.fasterxml.jackson.core.io.UTF32Reader: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean)>(v19, v20, v21, v22, v23, v26);
return v18;
label5:
v27 = new java.lang.RuntimeException;
specialinvoke v27.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");
throw v27;
}
public com.fasterxml.jackson.core.JsonParser constructParser(int, com.fasterxml.jackson.core.ObjectCodec, com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer, com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, int) throws java.io.IOException
{
byte[] v19;
com.fasterxml.jackson.core.json.ReaderBasedJsonParser v23;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v15, v3;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v26, v4;
com.fasterxml.jackson.core.ObjectCodec v2;
com.fasterxml.jackson.core.JsonFactory$Feature v13, v7;
com.fasterxml.jackson.core.JsonEncoding v12, v9;
int v1, v10, v11, v20, v21, v5, v6;
boolean v14, v22, v8;
java.io.Reader v25;
com.fasterxml.jackson.core.json.UTF8StreamJsonParser v16;
com.fasterxml.jackson.core.io.IOContext v17, v24;
java.io.InputStream v18;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.ObjectCodec;
v3 := @parameter2: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v4 := @parameter3: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
v5 := @parameter4: int;
v6 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v7 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CHARSET_DETECTION>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v5);
if v8 == 0 goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.JsonEncoding detectEncoding()>();
goto label2;
label1:
v9 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
label2:
v10 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v11 = v10 - v6;
v12 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v9 != v12 goto label3;
v13 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v5);
if v14 == 0 goto label3;
v15 = virtualinvoke v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>(v5);
v16 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
v17 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
v18 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;
v19 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v20 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v21 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
v22 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bufferRecyclable>;
specialinvoke v16.<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,int,boolean)>(v17, v1, v18, v2, v15, v19, v20, v21, v11, v22);
return v16;
label3:
v23 = new com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
v24 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.io.IOContext _context>;
v25 = virtualinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.Reader constructReader()>();
v26 = virtualinvoke v4.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>(v5);
specialinvoke v23.<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>(v24, v1, v25, v2, v26);
return v23;
}
public static com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
{
byte v12, v3, v7;
boolean v1, v10, v15, v5;
com.fasterxml.jackson.core.format.InputAccessor v0;
int v13, v17, v19, v23, v28, v4, v8;
com.fasterxml.jackson.core.format.MatchStrength v11, v14, v16, v18, v2, v20, v21, v22, v24, v25, v26, v27, v29, v30, v31, v32, v33, v34, v6, v9;
v0 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v1 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v1 != 0 goto label01;
v2 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v2;
label01:
v3 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v4 = (int) -17;
if v3 != v4 goto label07;
v5 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v5 != 0 goto label02;
v6 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v6;
label02:
v7 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v8 = (int) -69;
if v7 == v8 goto label03;
v9 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v9;
label03:
v10 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v10 != 0 goto label04;
v11 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v11;
label04:
v12 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v13 = (int) -65;
if v12 == v13 goto label05;
v14 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v14;
label05:
v15 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v15 != 0 goto label06;
v16 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v16;
label06:
v3 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
label07:
v17 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte)>(v0, v3);
if v17 >= 0 goto label08;
v18 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v18;
label08:
if v17 != 123 goto label12;
v19 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(com.fasterxml.jackson.core.format.InputAccessor)>(v0);
if v19 >= 0 goto label09;
v20 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v20;
label09:
if v19 == 34 goto label10;
if v19 != 125 goto label11;
label10:
v21 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;
return v21;
label11:
v22 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v22;
label12:
if v17 != 91 goto label16;
v23 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(com.fasterxml.jackson.core.format.InputAccessor)>(v0);
if v23 >= 0 goto label13;
v24 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v24;
label13:
if v23 == 93 goto label14;
if v23 != 91 goto label15;
label14:
v25 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;
return v25;
label15:
v26 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;
return v26;
label16:
v27 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH>;
if v17 != 34 goto label17;
return v27;
label17:
if v17 > 57 goto label18;
if v17 < 48 goto label18;
return v27;
label18:
if v17 != 45 goto label22;
v28 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(com.fasterxml.jackson.core.format.InputAccessor)>(v0);
if v28 >= 0 goto label19;
v29 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v29;
label19:
if v28 > 57 goto label20;
if v28 < 48 goto label20;
v30 = v27;
goto label21;
label20:
v30 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
label21:
return v30;
label22:
if v17 != 110 goto label23;
v31 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength)>(v0, "ull", v27);
return v31;
label23:
if v17 != 116 goto label24;
v32 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength)>(v0, "rue", v27);
return v32;
label24:
if v17 != 102 goto label25;
v33 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength)>(v0, "alse", v27);
return v33;
label25:
v34 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v34;
}
private static com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength) throws java.io.IOException
{
char v8;
com.fasterxml.jackson.core.format.InputAccessor v0;
com.fasterxml.jackson.core.format.MatchStrength v2, v6, v9;
byte v7;
int v3, v4;
java.lang.String v1;
boolean v5;
v0 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: com.fasterxml.jackson.core.format.MatchStrength;
v3 = 0;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
label1:
if v3 >= v4 goto label4;
v5 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v5 != 0 goto label2;
v6 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v6;
label2:
v7 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v8 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v3);
if v7 == v8 goto label3;
v9 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v9;
label3:
v3 = v3 + 1;
goto label1;
label4:
return v2;
}
private static int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
{
byte v3;
int v2, v4;
com.fasterxml.jackson.core.format.InputAccessor v0;
boolean v1;
v0 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v1 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v1 != 0 goto label1;
v2 = (int) -1;
return v2;
label1:
v3 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v4 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte)>(v0, v3);
return v4;
}
private static int skipSpace(com.fasterxml.jackson.core.format.InputAccessor, byte) throws java.io.IOException
{
short v2;
byte v1;
int v4;
com.fasterxml.jackson.core.format.InputAccessor v0;
boolean v3;
v0 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v1 := @parameter1: byte;
label1:
v2 = v1 & 255;
if v2 == 32 goto label2;
if v2 == 13 goto label2;
if v2 == 10 goto label2;
if v2 == 9 goto label2;
return v2;
label2:
v3 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v3 != 0 goto label3;
v4 = (int) -1;
return v4;
label3:
v1 = interfaceinvoke v0.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
goto label1;
}
private boolean handleBOM(int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
int v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: int;
lookupswitch(v1)
{
case -16842752: goto label4;
case -131072: goto label2;
case 65279: goto label1;
case 65534: goto label3;
default: goto label5;
};
label1:
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
v2 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v3 = v2 + 4;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = v3;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 4;
return 1;
label2:
v4 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v5 = v4 + 4;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = v5;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 4;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;
return 1;
label3:
specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");
goto label5;
label4:
specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");
label5:
v6 = v1 >>> 16;
v7 = (int) 65279;
if v6 != v7 goto label6;
v8 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v9 = v8 + 2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = v9;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
return 1;
label6:
v10 = (int) 65534;
if v6 != v10 goto label7;
v11 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v12 = v11 + 2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = v12;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;
return 1;
label7:
v13 = v1 >>> 8;
if v13 != 15711167 goto label8;
v14 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v15 = v14 + 3;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = v15;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
return 1;
label8:
return 0;
}
private boolean checkUTF32(int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: int;
v2 = v1 >> 8;
if v2 != 0 goto label1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
goto label5;
label1:
v3 = v1 & 16777215;
if v3 != 0 goto label2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;
goto label5;
label2:
v4 = v1 & -16711681;
if v4 != 0 goto label3;
specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");
goto label5;
label3:
v5 = v1 & -65281;
if v5 != 0 goto label4;
specialinvoke v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");
goto label5;
label4:
return 0;
label5:
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 4;
return 1;
}
private boolean checkUTF16(int)
{
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
int v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: int;
v2 = (int) 65280;
v3 = v1 & v2;
if v3 != 0 goto label1;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;
goto label3;
label1:
v4 = v1 & 255;
if v4 != 0 goto label2;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;
goto label3;
label2:
return 0;
label3:
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 2;
return 1;
}
private void reportWeirdUCS4(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
java.io.CharConversionException v2;
java.lang.String v1, v3;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: java.lang.String;
v2 = new java.io.CharConversionException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unsupported UCS-4 endianness (\u0001) detected");
specialinvoke v2.<java.io.CharConversionException: void <init>(java.lang.String)>(v3);
throw v2;
}
protected boolean ensureLoaded(int) throws java.io.IOException
{
byte[] v11, v9;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v0;
int v1, v10, v12, v13, v14, v15, v16, v2, v3, v4, v6, v7;
java.io.InputStream v5, v8;
v0 := @this: com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
v3 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;
v4 = v2 - v3;
label1:
if v4 >= v1 goto label5;
v5 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;
if v5 != null goto label2;
v6 = (int) -1;
v7 = v6;
goto label3;
label2:
v8 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;
v9 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v10 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
v11 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;
v12 = lengthof v11;
v13 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
v14 = v12 - v13;
v7 = virtualinvoke v8.<java.io.InputStream: int read(byte[],int,int)>(v9, v10, v14);
label3:
if v7 >= 1 goto label4;
return 0;
label4:
v15 = v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;
v16 = v15 + v7;
v0.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd> = v16;
v4 = v4 + v7;
goto label1;
label5:
return 1;
}
}