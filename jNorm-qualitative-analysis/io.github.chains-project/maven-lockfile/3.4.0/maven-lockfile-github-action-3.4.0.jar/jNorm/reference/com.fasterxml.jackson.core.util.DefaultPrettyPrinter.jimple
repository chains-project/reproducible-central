public class com.fasterxml.jackson.core.util.DefaultPrettyPrinter extends java.lang.Object implements com.fasterxml.jackson.core.PrettyPrinter, com.fasterxml.jackson.core.util.Instantiatable, java.io.Serializable
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR;
protected com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter;
protected com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter;
protected final com.fasterxml.jackson.core.SerializableString _rootSeparator;
protected boolean _spacesInObjectEntries;
protected transient int _nesting;
protected com.fasterxml.jackson.core.util.Separators _separators;
protected java.lang.String _objectFieldValueSeparatorWithSpaces;
public void <init>()
{
com.fasterxml.jackson.core.io.SerializedString v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR>;
specialinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.SerializableString)>(v1);
return;
}
public void <init>(java.lang.String)
{
com.fasterxml.jackson.core.io.SerializedString v2;
java.lang.String v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = new com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v2.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(v1);
label2:
specialinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.SerializableString)>(v2);
return;
}
public void <init>(com.fasterxml.jackson.core.SerializableString)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter v2;
com.fasterxml.jackson.core.SerializableString v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
com.fasterxml.jackson.core.util.Separators v4;
com.fasterxml.jackson.core.util.DefaultIndenter v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter> = v2;
v3 = <com.fasterxml.jackson.core.util.DefaultIndenter: com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter> = v3;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries> = 1;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator> = v1;
v4 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators DEFAULT_SEPARATORS>;
virtualinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators)>(v4);
return;
}
public void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)
{
com.fasterxml.jackson.core.SerializableString v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v1;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v2 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator>;
specialinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString)>(v1, v2);
return;
}
public void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter, com.fasterxml.jackson.core.SerializableString)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v5, v6;
com.fasterxml.jackson.core.SerializableString v2;
com.fasterxml.jackson.core.util.DefaultIndenter v4;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter v3;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v1;
com.fasterxml.jackson.core.util.Separators v9;
int v8;
java.lang.String v10;
boolean v7;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v2 := @parameter1: com.fasterxml.jackson.core.SerializableString;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter> = v3;
v4 = <com.fasterxml.jackson.core.util.DefaultIndenter: com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter> = v4;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries> = 1;
v5 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter> = v5;
v6 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter> = v6;
v7 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries> = v7;
v8 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting> = v8;
v9 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators _separators>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators _separators> = v9;
v10 = v1.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: java.lang.String _objectFieldValueSeparatorWithSpaces>;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: java.lang.String _objectFieldValueSeparatorWithSpaces> = v10;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator> = v2;
return;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(com.fasterxml.jackson.core.SerializableString)
{
com.fasterxml.jackson.core.SerializableString v1, v2, v3;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v5;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator>;
if v2 == v1 goto label1;
if v1 == null goto label2;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator>;
v4 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
if v4 == 0 goto label2;
label1:
return v0;
label2:
v5 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
specialinvoke v5.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString)>(v0, v1);
return v5;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(java.lang.String)
{
com.fasterxml.jackson.core.io.SerializedString v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = new com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v2.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(v1);
label2:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(com.fasterxml.jackson.core.SerializableString)>(v2);
return v3;
}
public void indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v1, v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter;
if v1 != null goto label1;
v2 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance>;
goto label2;
label1:
v2 = v1;
label2:
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter> = v2;
return;
}
public void indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v1, v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter;
if v1 != null goto label1;
v2 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance>;
goto label2;
label1:
v2 = v1;
label2:
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter> = v2;
return;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withArrayIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v1, v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter;
if v1 != null goto label1;
v1 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance>;
label1:
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
if v2 != v1 goto label2;
return v0;
label2:
v3 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
specialinvoke v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)>(v0);
v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter> = v1;
return v3;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withObjectIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v1, v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter;
if v1 != null goto label1;
v1 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance>;
label1:
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
if v2 != v1 goto label2;
return v0;
label2:
v3 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
specialinvoke v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)>(v0);
v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter> = v1;
return v3;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSpacesInObjectEntries()
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v1;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter _withSpaces(boolean)>(1);
return v1;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withoutSpacesInObjectEntries()
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v1;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter _withSpaces(boolean)>(0);
return v1;
}
protected com.fasterxml.jackson.core.util.DefaultPrettyPrinter _withSpaces(boolean)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v3;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: boolean;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries>;
if v2 != v1 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
specialinvoke v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)>(v0);
v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries> = v1;
return v3;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators)
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
com.fasterxml.jackson.core.util.Separators v1;
char v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.util.Separators;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators _separators> = v1;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.util.Separators: char getObjectFieldValueSeparator()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (char)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" \u0001 ");
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: java.lang.String _objectFieldValueSeparatorWithSpaces> = v3;
return v0;
}
public com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance()
{
java.lang.IllegalStateException v2;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0, v6;
java.lang.Class v1, v3;
java.lang.String v4, v5;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v1 == class "Lcom/fasterxml/jackson/core/util/DefaultPrettyPrinter;" goto label1;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed `createInstance()`: \u0001 does not override method; it has to");
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v2;
label1:
v6 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
specialinvoke v6.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)>(v0);
return v6;
}
public void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.SerializableString v2, v3;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.SerializableString _rootSeparator>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(com.fasterxml.jackson.core.SerializableString)>(v3);
label1:
return;
}
public void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v2;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
int v4, v5;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(123);
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
v3 = interfaceinvoke v2.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: boolean isInline()>();
if v3 != 0 goto label1;
v4 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
v5 = v4 + 1;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting> = v5;
label1:
return;
}
public void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v2;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
int v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
interfaceinvoke v2.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(v1, v3);
return;
}
public void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
com.fasterxml.jackson.core.util.Separators v4;
char v5;
java.lang.String v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: boolean _spacesInObjectEntries>;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: java.lang.String _objectFieldValueSeparatorWithSpaces>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(java.lang.String)>(v3);
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators _separators>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.util.Separators: char getObjectFieldValueSeparator()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(v5);
label2:
return;
}
public void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v4;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
com.fasterxml.jackson.core.util.Separators v2;
int v5;
char v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators _separators>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.Separators: char getObjectEntrySeparator()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(v3);
v4 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
v5 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
interfaceinvoke v4.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(v1, v5);
return;
}
public void writeEndObject(com.fasterxml.jackson.core.JsonGenerator, int) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v3, v7;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
int v2, v5, v6, v8;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
v4 = interfaceinvoke v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: boolean isInline()>();
if v4 != 0 goto label1;
v5 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
v6 = v5 - 1;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting> = v6;
label1:
if v2 <= 0 goto label2;
v7 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter>;
v8 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
interfaceinvoke v7.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(v1, v8);
goto label3;
label2:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(32);
label3:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(125);
return;
}
public void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v2;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
int v4, v5;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
v3 = interfaceinvoke v2.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: boolean isInline()>();
if v3 != 0 goto label1;
v4 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
v5 = v4 + 1;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting> = v5;
label1:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(91);
return;
}
public void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v2;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
int v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
interfaceinvoke v2.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(v1, v3);
return;
}
public void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v4;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
com.fasterxml.jackson.core.util.Separators v2;
int v5;
char v3;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.Separators _separators>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.Separators: char getArrayValueSeparator()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(v3);
v4 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
v5 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
interfaceinvoke v4.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(v1, v5);
return;
}
public void writeEndArray(com.fasterxml.jackson.core.JsonGenerator, int) throws java.io.IOException
{
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter v3, v7;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.util.DefaultPrettyPrinter v0;
int v2, v5, v6, v8;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
v4 = interfaceinvoke v3.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: boolean isInline()>();
if v4 != 0 goto label1;
v5 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
v6 = v5 - 1;
v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting> = v6;
label1:
if v2 <= 0 goto label2;
v7 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter>;
v8 = v0.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: int _nesting>;
interfaceinvoke v7.<com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(v1, v8);
goto label3;
label2:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(32);
label3:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(93);
return;
}
static void <clinit>()
{
com.fasterxml.jackson.core.io.SerializedString v0;
v0 = new com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v0.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(" ");
<com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR> = v0;
return;
}
}