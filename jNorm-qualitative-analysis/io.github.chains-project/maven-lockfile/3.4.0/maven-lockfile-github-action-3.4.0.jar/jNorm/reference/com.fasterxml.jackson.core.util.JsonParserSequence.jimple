public class com.fasterxml.jackson.core.util.JsonParserSequence extends com.fasterxml.jackson.core.util.JsonParserDelegate
{
protected final com.fasterxml.jackson.core.JsonParser[] _parsers;
protected final boolean _checkForExistingToken;
protected int _nextParserIndex;
protected boolean _hasToken;
protected void <init>(com.fasterxml.jackson.core.JsonParser[])
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser[] v1;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser[];
specialinvoke v0.<com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(boolean,com.fasterxml.jackson.core.JsonParser[])>(0, v1);
return;
}
protected void <init>(boolean, com.fasterxml.jackson.core.JsonParser[])
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v3, v4;
com.fasterxml.jackson.core.JsonParser[] v2;
boolean v1, v5, v6;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 := @parameter0: boolean;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser[];
v3 = v2[0];
specialinvoke v0.<com.fasterxml.jackson.core.util.JsonParserDelegate: void <init>(com.fasterxml.jackson.core.JsonParser)>(v3);
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean _checkForExistingToken> = v1;
if v1 == 0 goto label1;
v4 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonParser: boolean hasCurrentToken()>();
if v5 == 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean _hasToken> = v6;
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers> = v2;
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex> = 1;
return;
}
public static com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)
{
com.fasterxml.jackson.core.util.JsonParserSequence v10, v5;
java.lang.Object[] v13;
com.fasterxml.jackson.core.JsonParser v1, v2;
java.util.ArrayList v7;
com.fasterxml.jackson.core.JsonParser[] v12, v6;
int v11;
boolean v0, v3, v4, v8, v9;
v0 := @parameter0: boolean;
v1 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v3 = v1 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;
if v3 != 0 goto label1;
v4 = v2 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;
if v4 != 0 goto label1;
v5 = new com.fasterxml.jackson.core.util.JsonParserSequence;
v6 = newarray (com.fasterxml.jackson.core.JsonParser)[2];
v6[0] = v1;
v6[1] = v2;
specialinvoke v5.<com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(boolean,com.fasterxml.jackson.core.JsonParser[])>(v0, v6);
return v5;
label1:
v7 = new java.util.ArrayList;
specialinvoke v7.<java.util.ArrayList: void <init>()>();
v8 = v1 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;
if v8 == 0 goto label2;
virtualinvoke v1.<com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>(v7);
goto label3;
label2:
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>(v1);
label3:
v9 = v2 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;
if v9 == 0 goto label4;
virtualinvoke v2.<com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>(v7);
goto label5;
label4:
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>(v2);
label5:
v10 = new com.fasterxml.jackson.core.util.JsonParserSequence;
v11 = virtualinvoke v7.<java.util.ArrayList: int size()>();
v12 = newarray (com.fasterxml.jackson.core.JsonParser)[v11];
v13 = virtualinvoke v7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(v12);
specialinvoke v10.<com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(boolean,com.fasterxml.jackson.core.JsonParser[])>(v0, v13);
return v10;
}
public static com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonParser)
{
com.fasterxml.jackson.core.util.JsonParserSequence v2;
com.fasterxml.jackson.core.JsonParser v0, v1;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v2 = staticinvoke <com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)>(0, v0, v1);
return v2;
}
protected void addFlattenedActiveParsers(java.util.List)
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v7;
java.util.List v1;
com.fasterxml.jackson.core.JsonParser[] v4, v6;
int v2, v3, v5;
boolean v8;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 := @parameter0: java.util.List;
v2 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;
v3 = v2 - 1;
v4 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v5 = lengthof v4;
label1:
if v3 >= v5 goto label4;
v6 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v7 = v6[v3];
v8 = v7 instanceof com.fasterxml.jackson.core.util.JsonParserSequence;
if v8 == 0 goto label2;
virtualinvoke v7.<com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>(v1);
goto label3;
label2:
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v7);
label3:
v3 = v3 + 1;
goto label1;
label4:
return;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
label1:
v1 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void close()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean switchToNext()>();
if v2 != 0 goto label1;
return;
}
public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v1, v3, v5;
com.fasterxml.jackson.core.JsonToken v4, v6, v7;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
if v1 != null goto label1;
return null;
label1:
v2 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean _hasToken>;
if v2 == 0 goto label2;
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean _hasToken> = 0;
v3 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
return v4;
label2:
v5 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v6 != null goto label3;
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonToken switchAndReturnNext()>();
return v7;
label3:
return v6;
}
public com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v1, v4;
int v7;
com.fasterxml.jackson.core.JsonToken v2, v3, v5, v6, v8;
boolean v10, v9;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v2 == v3 goto label1;
v4 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v5 == v6 goto label1;
return v0;
label1:
v7 = 1;
label2:
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v8 != null goto label3;
return v0;
label3:
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonToken: boolean isStructStart()>();
if v9 == 0 goto label4;
v7 = v7 + 1;
goto label2;
label4:
v10 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonToken: boolean isStructEnd()>();
if v10 == 0 goto label2;
v7 = v7 - 1;
if v7 != 0 goto label2;
return v0;
}
public int containedParsersCount()
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
int v2;
com.fasterxml.jackson.core.JsonParser[] v1;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v2 = lengthof v1;
return v2;
}
protected boolean switchToNext()
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v7;
com.fasterxml.jackson.core.JsonParser[] v2, v4;
int v1, v3, v5, v6;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
v1 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;
v2 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v3 = lengthof v2;
if v1 >= v3 goto label1;
v4 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v5 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex> = v6;
v7 = v4[v5];
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate> = v7;
return 1;
label1:
return 0;
}
protected com.fasterxml.jackson.core.JsonToken switchAndReturnNext() throws java.io.IOException
{
com.fasterxml.jackson.core.util.JsonParserSequence v0;
com.fasterxml.jackson.core.JsonParser v11, v13, v7, v9;
com.fasterxml.jackson.core.JsonParser[] v2, v4;
int v1, v3, v5, v6;
com.fasterxml.jackson.core.JsonToken v12, v14;
boolean v10, v8;
v0 := @this: com.fasterxml.jackson.core.util.JsonParserSequence;
label1:
v1 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;
v2 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v3 = lengthof v2;
if v1 >= v3 goto label3;
v4 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser[] _parsers>;
v5 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex> = v6;
v7 = v4[v5];
v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate> = v7;
v8 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: boolean _checkForExistingToken>;
if v8 == 0 goto label2;
v9 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.JsonParser: boolean hasCurrentToken()>();
if v10 == 0 goto label2;
v11 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();
return v12;
label2:
v13 = v0.<com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonParser delegate>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v14 == null goto label1;
return v14;
label3:
return null;
}
}