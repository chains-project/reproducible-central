public abstract class com.fasterxml.jackson.databind.DeserializationContext extends com.fasterxml.jackson.databind.DatabindContext implements java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.deser.DeserializerCache _cache;
protected final com.fasterxml.jackson.databind.deser.DeserializerFactory _factory;
protected final com.fasterxml.jackson.databind.DeserializationConfig _config;
protected final int _featureFlags;
protected final com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities;
protected final java.lang.Class _view;
protected transient com.fasterxml.jackson.core.JsonParser _parser;
protected final com.fasterxml.jackson.databind.InjectableValues _injectableValues;
protected transient com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders;
protected transient com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer;
protected transient java.text.DateFormat _dateFormat;
protected transient com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes;
protected com.fasterxml.jackson.databind.util.LinkedNode _currentType;
protected void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.deser.DeserializerFactory v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DeserializerFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)>(v1, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.deser.DeserializerCache)
{
com.fasterxml.jackson.databind.deser.DeserializerCache v2, v4;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.deser.DeserializerFactory v1;
java.lang.NullPointerException v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerCache;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot pass null DeserializerFactory");
throw v3;
label1:
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory> = v1;
if v2 != null goto label2;
v4 = new com.fasterxml.jackson.databind.deser.DeserializerCache;
specialinvoke v4.<com.fasterxml.jackson.databind.deser.DeserializerCache: void <init>()>();
v2 = v4;
label2:
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache> = v2;
v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags> = 0;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory)
{
com.fasterxml.jackson.databind.DeserializationContext v0, v1;
com.fasterxml.jackson.databind.InjectableValues v9;
com.fasterxml.jackson.core.JsonParser v8;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.deser.DeserializerCache v3;
int v5;
java.lang.Class v7;
com.fasterxml.jackson.core.util.JacksonFeatureSet v6;
com.fasterxml.jackson.databind.cfg.ContextAttributes v10;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v3 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache> = v3;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory> = v2;
v4 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config> = v4;
v5 = v1.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags> = v5;
v6 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities> = v6;
v7 = v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view> = v7;
v8 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser> = v8;
v9 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = v9;
v10 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = v10;
return;
}
protected void <init>(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.InjectableValues)
{
com.fasterxml.jackson.databind.DeserializationContext v0, v1;
com.fasterxml.jackson.databind.InjectableValues v4;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.deser.DeserializerFactory v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.deser.DeserializerCache v5;
int v8;
java.lang.Class v9;
com.fasterxml.jackson.core.util.JacksonFeatureSet v7;
com.fasterxml.jackson.databind.cfg.ContextAttributes v10;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig;
v3 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v4 := @parameter3: com.fasterxml.jackson.databind.InjectableValues;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v5 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache> = v5;
v6 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory> = v6;
if v3 != null goto label1;
v7 = null;
goto label2;
label1:
v7 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities()>();
label2:
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities> = v7;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config> = v2;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: int getDeserializationFeatures()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags> = v8;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: java.lang.Class getActiveView()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view> = v9;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser> = v3;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = v4;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = v10;
return;
}
protected void <init>(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.deser.DeserializerCache v3;
com.fasterxml.jackson.databind.DeserializationContext v0, v1;
int v5;
com.fasterxml.jackson.databind.deser.DeserializerFactory v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v3 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache> = v3;
v4 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory> = v4;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config> = v2;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: int getDeserializationFeatures()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags> = v5;
v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = null;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.DeserializationContext v0, v1;
com.fasterxml.jackson.databind.deser.DeserializerFactory v3;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.deser.DeserializerCache v2;
int v5;
java.lang.Class v7;
com.fasterxml.jackson.core.util.JacksonFeatureSet v6;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
specialinvoke v0.<com.fasterxml.jackson.databind.DatabindContext: void <init>()>();
v2 = new com.fasterxml.jackson.databind.deser.DeserializerCache;
specialinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerCache: void <init>()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache> = v2;
v3 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory> = v3;
v4 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config> = v4;
v5 = v1.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags> = v5;
v6 = v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities> = v6;
v7 = v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view>;
v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view> = v7;
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = null;
return;
}
public com.fasterxml.jackson.databind.DeserializationConfig getConfig()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
return v1;
}
public final java.lang.Class getActiveView()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class _view>;
return v1;
}
public final boolean canOverrideAccessModifiers()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: boolean canOverrideAccessModifiers()>();
return v2;
}
public final boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.MapperFeature v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v1);
return v3;
}
public final boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.cfg.DatatypeFeature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.DatatypeFeature;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v1);
return v3;
}
public final com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.cfg.DatatypeFeatures v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures()>();
return v2;
}
public final com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(v1);
return v3;
}
public final com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
return v2;
}
public final com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.type.TypeFactory v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1, v6;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(v2);
if v3 == 0 goto label1;
return v1;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean)>(v1, v2, 0);
return v6;
}
public java.util.Locale getLocale()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.util.Locale v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: java.util.Locale getLocale()>();
return v2;
}
public java.util.TimeZone getTimeZone()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.util.TimeZone v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: java.util.TimeZone getTimeZone()>();
return v2;
}
public java.lang.Object getAttribute(java.lang.Object)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object v1, v3;
com.fasterxml.jackson.databind.cfg.ContextAttributes v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ContextAttributes: java.lang.Object getAttribute(java.lang.Object)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.DeserializationContext setAttribute(java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.cfg.ContextAttributes v3, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.ContextAttributes: com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object)>(v1, v2);
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = v4;
return v0;
}
public com.fasterxml.jackson.databind.JavaType getContextualType()
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object v3;
com.fasterxml.jackson.databind.util.LinkedNode v1, v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
label1:
return v3;
}
public com.fasterxml.jackson.databind.deser.DeserializerFactory getFactory()
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.deser.DeserializerFactory v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
return v1;
}
public final boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
int v2, v3, v4;
com.fasterxml.jackson.databind.DeserializationFeature v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public final boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)
{
com.fasterxml.jackson.core.StreamReadCapability v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.util.JacksonFeatureSet v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.StreamReadCapability;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.JacksonFeatureSet: boolean isEnabled(com.fasterxml.jackson.core.util.JacksonFeature)>(v1);
return v3;
}
public final int getDeserializationFeatures()
{
int v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags>;
return v1;
}
public final boolean hasDeserializationFeatures(int)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
int v1, v2, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags>;
v3 = v2 & v1;
if v3 != v1 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public final boolean hasSomeOfFeatures(int)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
int v1, v2, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: int _featureFlags>;
v3 = v2 & v1;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public final com.fasterxml.jackson.core.JsonParser getParser()
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
return v1;
}
public final java.lang.Object findInjectableValue(java.lang.Object, com.fasterxml.jackson.databind.BeanProperty, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.InjectableValues v4, v9;
java.lang.Object[] v6;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Class v5;
java.lang.Object v1, v10, v3, v8;
java.lang.String v7;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
if v4 != null goto label1;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class classOf(java.lang.Object)>(v1);
v6 = newarray (java.lang.Object)[1];
v6[0] = v1;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No \'injectableValues\' configured, cannot inject value with id [%s]", v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v5, v7);
return v8;
label1:
v9 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.InjectableValues: java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)>(v1, v0, v2, v3);
return v10;
}
public final com.fasterxml.jackson.core.Base64Variant getBase64Variant()
{
com.fasterxml.jackson.core.Base64Variant v2;
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
return v2;
}
public final com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
return v2;
}
public com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType, java.lang.Class, com.fasterxml.jackson.databind.cfg.CoercionInputShape)
{
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v3;
java.lang.Class v2;
com.fasterxml.jackson.databind.cfg.CoercionAction v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.type.LogicalType;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.cfg.CoercionInputShape;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v1, v2, v3);
return v5;
}
public com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType, java.lang.Class, com.fasterxml.jackson.databind.cfg.CoercionAction)
{
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.cfg.CoercionAction v3, v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.type.LogicalType;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.cfg.CoercionAction;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction)>(v1, v2, v3);
return v5;
}
public com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.util.TokenBuffer v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = new com.fasterxml.jackson.databind.util.TokenBuffer;
specialinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v0);
return v2;
}
public final com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering()
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.util.TokenBuffer v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.util.TokenBuffer bufferAsCopyOfValue(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.util.TokenBuffer v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>(v1);
return v2;
}
public boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType, java.util.concurrent.atomic.AtomicReference)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.RuntimeException v7;
com.fasterxml.jackson.databind.DatabindException v6;
java.util.concurrent.atomic.AtomicReference v2;
com.fasterxml.jackson.databind.deser.DeserializerFactory v4;
com.fasterxml.jackson.databind.deser.DeserializerCache v3;
com.fasterxml.jackson.databind.JavaType v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.util.concurrent.atomic.AtomicReference;
label1:
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.DeserializerCache: boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v0, v4, v1);
label2:
return v5;
label3:
v6 := @caughtexception;
if v2 == null goto label6;
virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v6);
goto label6;
label4:
v7 := @caughtexception;
if v2 != null goto label5;
throw v7;
label5:
virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v7);
label6:
return 0;
catch com.fasterxml.jackson.databind.DatabindException from label1 to label2 with label3;
catch java.lang.RuntimeException from label1 to label2 with label4;
}
public final com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v3;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.JsonDeserializer v5;
com.fasterxml.jackson.databind.deser.DeserializerFactory v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v0, v4, v1);
if v5 == null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v5, v2, v1);
label1:
return v5;
}
public final com.fasterxml.jackson.databind.JsonDeserializer findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v2;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.JsonDeserializer v4;
com.fasterxml.jackson.databind.deser.DeserializerFactory v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v0, v3, v1);
return v4;
}
public final com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v8, v9;
com.fasterxml.jackson.databind.deser.DeserializerFactory v3, v6;
com.fasterxml.jackson.databind.DeserializationConfig v7;
com.fasterxml.jackson.databind.deser.DeserializerCache v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer v10;
com.fasterxml.jackson.databind.JsonDeserializer v4, v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v0, v3, v1);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v4, null, v1);
v6 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)>(v7, v1);
if v8 == null goto label2;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(null);
v10 = new com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer;
specialinvoke v10.<com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>(v9, v5);
return v10;
label2:
return v5;
}
public final com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.IllegalArgumentException v6;
com.fasterxml.jackson.databind.deser.DeserializerFactory v4;
com.fasterxml.jackson.databind.deser.DeserializerCache v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.KeyDeserializer v5;
java.lang.String v7;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
label1:
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerCache _cache>;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.deser.DeserializerFactory _factory>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v0, v4, v1);
label2:
goto label4;
label3:
v6 := @caughtexception;
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v6);
virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v1, v7);
v5 = null;
label4:
v8 = v5 instanceof com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;
if v8 == 0 goto label5;
v5 = interfaceinvoke v5.<com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer: com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>(v0, v2);
label5:
return v5;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public abstract com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object, com.fasterxml.jackson.'annotation'.ObjectIdGenerator, com.fasterxml.jackson.'annotation'.ObjectIdResolver);
public abstract void checkUnresolvedObjectId() throws com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
public final com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v2 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
label2:
return v2;
}
public java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.type.TypeFactory v2;
java.lang.Class v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>(v1);
return v3;
}
public final com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer()
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.util.ObjectBuffer v1, v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer>;
if v1 != null goto label1;
v2 = new com.fasterxml.jackson.databind.util.ObjectBuffer;
specialinvoke v2.<com.fasterxml.jackson.databind.util.ObjectBuffer: void <init>()>();
v1 = v2;
goto label2;
label1:
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer> = null;
label2:
return v1;
}
public final void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
int v3, v5;
com.fasterxml.jackson.databind.util.ObjectBuffer v1, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.util.ObjectBuffer;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer>;
if v2 == null goto label1;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.ObjectBuffer: int initialCapacity()>();
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.util.ObjectBuffer: int initialCapacity()>();
if v3 < v5 goto label2;
label1:
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer> = v1;
label2:
return;
}
public final com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders()
{
com.fasterxml.jackson.databind.util.ArrayBuilders v1, v2, v3;
com.fasterxml.jackson.databind.DeserializationContext v0;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders>;
if v1 != null goto label1;
v2 = new com.fasterxml.jackson.databind.util.ArrayBuilders;
specialinvoke v2.<com.fasterxml.jackson.databind.util.ArrayBuilders: void <init>()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders> = v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders>;
return v3;
}
public abstract com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException;
public abstract com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException;
public com.fasterxml.jackson.databind.JsonDeserializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v9;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.JsonDeserializer v1;
com.fasterxml.jackson.databind.util.LinkedNode v10, v11, v5, v6, v7, v8;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = v1 instanceof com.fasterxml.jackson.databind.deser.ContextualDeserializer;
if v4 == 0 goto label4;
v5 = new com.fasterxml.jackson.databind.util.LinkedNode;
v6 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
specialinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode)>(v3, v6);
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType> = v5;
label1:
v1 = interfaceinvoke v1.<com.fasterxml.jackson.databind.deser.ContextualDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>(v0, v2);
label2:
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType> = v8;
goto label4;
label3:
v9 := @caughtexception;
v10 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType> = v11;
throw v9;
label4:
return v1;
catch java.lang.Throwable from label1 to label2 with label3;
}
public com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v9;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.JsonDeserializer v1;
com.fasterxml.jackson.databind.util.LinkedNode v10, v11, v5, v6, v7, v8;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = v1 instanceof com.fasterxml.jackson.databind.deser.ContextualDeserializer;
if v4 == 0 goto label4;
v5 = new com.fasterxml.jackson.databind.util.LinkedNode;
v6 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
specialinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode)>(v3, v6);
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType> = v5;
label1:
v1 = interfaceinvoke v1.<com.fasterxml.jackson.databind.deser.ContextualDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>(v0, v2);
label2:
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType> = v8;
goto label4;
label3:
v9 := @caughtexception;
v10 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.LinkedNode _currentType> = v11;
throw v9;
label4:
return v1;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.util.Date parseDate(java.lang.String) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v6;
java.util.Date v3;
java.lang.IllegalArgumentException v5;
java.lang.String v1, v7, v8;
java.text.ParseException v4;
java.text.DateFormat v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.text.DateFormat _getDateFormat()>();
v3 = virtualinvoke v2.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v4);
v6[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to parse Date value \'%s\': %s", v6);
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v5;
catch java.text.ParseException from label1 to label2 with label3;
}
public java.util.Calendar constructCalendar(java.util.Date)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.util.Calendar v3;
java.util.Date v1;
java.util.TimeZone v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.util.Date;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.util.TimeZone getTimeZone()>();
v3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(v2);
virtualinvoke v3.<java.util.Calendar: void setTime(java.util.Date)>(v1);
return v3;
}
public java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v3;
java.lang.Object v4;
com.fasterxml.jackson.databind.JsonDeserializer v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v3, v1);
return v4;
}
public java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.type.TypeFactory v3;
java.lang.Class v2;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v6, v7;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v4, v5;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)>(v2);
if v3 != null goto label1;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v2);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not find JsonDeserializer for type \u0001");
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v5);
return v6;
label1:
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v0);
return v7;
}
public java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.BeanProperty, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Class v3;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v5);
return v6;
}
public java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Object v10, v9;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v6, v7, v8;
com.fasterxml.jackson.databind.JsonDeserializer v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v3, v2);
if v4 != null goto label1;
v5 = newarray (java.lang.Object)[2];
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v3);
v5[0] = v6;
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named)>(v2);
v5[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find JsonDeserializer for type %s (via property %s)", v5);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v3, v8);
return v9;
label1:
v10 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v0);
return v10;
}
public com.fasterxml.jackson.databind.JsonNode readTree(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.DeserializationConfig v8;
com.fasterxml.jackson.databind.node.NullNode v7;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3, v6;
com.fasterxml.jackson.databind.JsonNode v4;
java.lang.Object v11;
com.fasterxml.jackson.core.JsonToken v2, v5;
com.fasterxml.jackson.databind.JavaType v9;
com.fasterxml.jackson.databind.JsonDeserializer v10;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v2 != null goto label1;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.JsonNode missingNode()>();
return v4;
label1:
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v2 != v5 goto label2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v7;
label2:
v8 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/JsonNode;");
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)>(v9);
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v0);
return v11;
}
public java.lang.Object readTreeAsValue(com.fasterxml.jackson.databind.JsonNode, java.lang.Class) throws java.io.IOException
{
java.lang.Throwable v5;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.JsonNode v1;
java.lang.Class v2;
java.lang.Object v4;
com.fasterxml.jackson.databind.node.TreeTraversingParser v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonNode;
v2 := @parameter1: java.lang.Class;
if v1 != null goto label1;
return null;
label1:
v3 = specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.TreeTraversingParser _treeAsTokens(com.fasterxml.jackson.databind.JsonNode)>(v1);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)>(v3, v2);
label3:
if v3 == null goto label4;
virtualinvoke v3.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void close()>();
label4:
return v4;
label5:
v5 := @caughtexception;
throw v5;
catch java.lang.Throwable from label2 to label3 with label5;
}
public java.lang.Object readTreeAsValue(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
java.lang.Throwable v5;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.JsonNode v1;
java.lang.Object v4;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.node.TreeTraversingParser v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonNode;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
if v1 != null goto label1;
return null;
label1:
v3 = specialinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.TreeTraversingParser _treeAsTokens(com.fasterxml.jackson.databind.JsonNode)>(v1);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v3, v2);
label3:
if v3 == null goto label4;
virtualinvoke v3.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void close()>();
label4:
return v4;
label5:
v5 := @caughtexception;
throw v5;
catch java.lang.Throwable from label2 to label3 with label5;
}
private com.fasterxml.jackson.databind.node.TreeTraversingParser _treeAsTokens(com.fasterxml.jackson.databind.JsonNode) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v2, v4;
com.fasterxml.jackson.core.ObjectCodec v3;
com.fasterxml.jackson.databind.JsonNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonNode;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.ObjectCodec getCodec()>();
label2:
v5 = new com.fasterxml.jackson.databind.node.TreeTraversingParser;
specialinvoke v5.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec)>(v1, v3);
virtualinvoke v5.<com.fasterxml.jackson.databind.node.TreeTraversingParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
return v5;
}
public boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Object, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException v13;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1, v12;
java.util.Collection v11;
com.fasterxml.jackson.databind.DeserializationFeature v9;
com.fasterxml.jackson.databind.DeserializationConfig v5;
java.lang.Object v3, v7;
java.lang.String v4;
com.fasterxml.jackson.databind.JsonDeserializer v2;
com.fasterxml.jackson.databind.util.LinkedNode v6;
boolean v10, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.String;
v5 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v6 == null goto label3;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: boolean handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String)>(v0, v1, v2, v3, v4);
if v8 == 0 goto label2;
return 1;
label2:
v6 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label3:
v9 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v9);
if v10 != 0 goto label4;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
return 1;
label4:
if v2 != null goto label5;
v11 = null;
goto label6;
label5:
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonDeserializer: java.util.Collection getKnownPropertyNames()>();
label6:
v12 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v13 = staticinvoke <com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)>(v12, v3, v4, v11);
throw v13;
}
public transient java.lang.Object handleWeirdKey(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object[]) throws java.io.IOException
{
java.lang.Object[] v12, v4;
com.fasterxml.jackson.databind.DeserializationConfig v6;
java.lang.String v13, v14, v15, v2, v3, v5;
com.fasterxml.jackson.databind.util.LinkedNode v7;
boolean v11;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1;
java.lang.Object v10, v8, v9;
com.fasterxml.jackson.databind.JsonMappingException v16, v17;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v7 == null goto label5;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleWeirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String)>(v0, v1, v2, v5);
v10 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v9 == v10 goto label4;
if v9 == null goto label2;
v11 = virtualinvoke v1.<java.lang.Class: boolean isInstance(java.lang.Object)>(v9);
if v11 == 0 goto label3;
label2:
return v9;
label3:
v12 = newarray (java.lang.Object)[2];
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v12[0] = v13;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v9);
v12[1] = v14;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleWeirdStringValue() for type %s returned value of type %s", v12);
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>(v2, v1, v15);
throw v16;
label4:
v7 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label5:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)>(v1, v2, v5);
throw v17;
}
public transient java.lang.Object handleWeirdStringValue(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object[]) throws java.io.IOException
{
java.lang.Object[] v12, v4;
com.fasterxml.jackson.databind.DeserializationConfig v6;
java.lang.String v13, v14, v15, v2, v3, v5;
com.fasterxml.jackson.databind.util.LinkedNode v7;
boolean v11;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1;
java.lang.Object v10, v8, v9;
com.fasterxml.jackson.databind.JsonMappingException v16, v17;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v7 == null goto label4;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleWeirdStringValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String)>(v0, v1, v2, v5);
v10 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v9 == v10 goto label3;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean _isCompatible(java.lang.Class,java.lang.Object)>(v1, v9);
if v11 == 0 goto label2;
return v9;
label2:
v12 = newarray (java.lang.Object)[2];
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v12[0] = v13;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v9);
v12[1] = v14;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleWeirdStringValue() for type %s returned value of type %s", v12);
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>(v2, v1, v15);
throw v16;
label3:
v7 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label4:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>(v2, v1, v5);
throw v17;
}
public transient java.lang.Object handleWeirdNumberValue(java.lang.Class, java.lang.Number, java.lang.String, java.lang.Object[]) throws java.io.IOException
{
java.lang.Object[] v12, v4;
com.fasterxml.jackson.databind.DeserializationConfig v6;
java.lang.String v13, v14, v15, v3, v5;
java.lang.Number v2;
com.fasterxml.jackson.databind.util.LinkedNode v7;
boolean v11;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1;
java.lang.Object v10, v8, v9;
com.fasterxml.jackson.databind.JsonMappingException v16, v17;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Number;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v7 == null goto label4;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleWeirdNumberValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Number,java.lang.String)>(v0, v1, v2, v5);
v10 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v9 == v10 goto label3;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean _isCompatible(java.lang.Class,java.lang.Object)>(v1, v9);
if v11 == 0 goto label2;
return v9;
label2:
v12 = newarray (java.lang.Object)[2];
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v12[0] = v13;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v9);
v12[1] = v14;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleWeirdNumberValue() for type %s returned value of type %s", v12);
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String)>(v2, v1, v15);
throw v16;
label3:
v7 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label4:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String)>(v2, v1, v5);
throw v17;
}
public java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType, java.lang.Object, com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
java.lang.Object[] v11;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v12, v13, v14;
com.fasterxml.jackson.databind.util.LinkedNode v5;
boolean v10;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v3;
java.lang.Class v6;
java.lang.Object v2, v7, v8, v9;
com.fasterxml.jackson.databind.JsonMappingException v15, v16;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
label1:
if v5 == null goto label5;
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser)>(v0, v1, v2, v3);
v9 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v8 == v9 goto label4;
if v8 == null goto label2;
v10 = virtualinvoke v6.<java.lang.Class: boolean isInstance(java.lang.Object)>(v8);
if v10 == 0 goto label3;
label2:
return v8;
label3:
v11 = newarray (java.lang.Object)[2];
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v11[0] = v12;
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v8);
v11[1] = v13;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleWeirdNativeValue() for type %s returned value of type %s", v11);
v15 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v3, v14);
throw v15;
label4:
v5 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label5:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdNativeValueException(java.lang.Object,java.lang.Class)>(v2, v6);
throw v16;
}
public transient java.lang.Object handleMissingInstantiator(java.lang.Class, com.fasterxml.jackson.databind.deser.ValueInstantiator, com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Object[]) throws java.io.IOException
{
com.fasterxml.jackson.databind.util.LinkedNode v8;
boolean v12, v22;
java.lang.Object[] v14, v18, v23, v27, v30, v5;
com.fasterxml.jackson.databind.DeserializationConfig v7;
com.fasterxml.jackson.databind.JavaType v13;
java.lang.String v15, v16, v17, v19, v20, v24, v25, v28, v29, v4, v6;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.deser.ValueInstantiator v2;
java.lang.Class v1;
java.lang.Object v10, v11, v21, v26, v31, v9;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.ValueInstantiator;
v3 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object[];
if v3 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v4, v5);
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label2:
if v8 == null goto label5;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v0, v1, v2, v3, v6);
v11 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v10 == v11 goto label4;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean _isCompatible(java.lang.Class,java.lang.Object)>(v1, v10);
if v12 == 0 goto label3;
return v10;
label3:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v14 = newarray (java.lang.Object)[2];
v15 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v14[0] = v15;
v16 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v10);
v14[1] = v16;
v17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleMissingInstantiator() for type %s returned value of type %s", v14);
virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v13, v17);
label4:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label2;
label5:
if v2 != null goto label6;
v18 = newarray (java.lang.Object)[2];
v19 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v18[0] = v19;
v18[1] = v6;
v20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot construct instance of %s: %s", v18);
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v1, v20);
return v21;
label6:
v22 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canInstantiate()>();
if v22 != 0 goto label7;
v23 = newarray (java.lang.Object)[2];
v24 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v23[0] = v24;
v23[1] = v6;
v25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot construct instance of %s (no Creators, like default constructor, exist): %s", v23);
v26 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v1, v25);
return v26;
label7:
v27 = newarray (java.lang.Object)[2];
v28 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v27[0] = v28;
v27[1] = v6;
v29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot construct instance of %s (although at least one Creator exists): %s", v27);
v30 = newarray (java.lang.Object)[0];
v31 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v1, v29, v30);
return v31;
}
public java.lang.Object handleInstantiationProblem(java.lang.Class, java.lang.Object, java.lang.Throwable) throws java.io.IOException
{
java.lang.Throwable v3;
java.lang.Object[] v11;
com.fasterxml.jackson.databind.DeserializationFeature v15;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.JavaType v10;
java.lang.String v12, v13, v14;
com.fasterxml.jackson.databind.util.LinkedNode v5;
boolean v16, v9;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1;
java.lang.Object v2, v6, v7, v8;
com.fasterxml.jackson.databind.JsonMappingException v17;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Throwable;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v5 == null goto label4;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleInstantiationProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,java.lang.Throwable)>(v0, v1, v2, v3);
v8 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v7 == v8 goto label3;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean _isCompatible(java.lang.Class,java.lang.Object)>(v1, v7);
if v9 == 0 goto label2;
return v7;
label2:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v11 = newarray (java.lang.Object)[2];
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v11[0] = v12;
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(v7);
v11[1] = v13;
v14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleInstantiationProblem() for type %s returned value of type %s", v11);
virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v10, v14);
label3:
v5 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label4:
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfIOE(java.lang.Throwable)>(v3);
v15 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS>;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v15);
if v16 != 0 goto label5;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfRTE(java.lang.Throwable)>(v3);
label5:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>(v1, v3);
throw v17;
}
public java.lang.Object handleUnexpectedToken(java.lang.Class, com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v2;
java.lang.Class v1;
java.lang.Object v6;
com.fasterxml.jackson.core.JsonToken v4;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5 = newarray (java.lang.Object)[0];
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v3, v4, v2, null, v5);
return v6;
}
public transient java.lang.Object handleUnexpectedToken(java.lang.Class, com.fasterxml.jackson.core.JsonToken, com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Object[]) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v3;
java.lang.Class v1;
java.lang.Object v7;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JavaType v6;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object[];
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v6, v2, v3, v4, v5);
return v7;
}
public java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v2;
java.lang.Object v5;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = newarray (java.lang.Object)[0];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v1, v3, v2, null, v4);
return v5;
}
public transient java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.JsonToken, com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Object[]) throws java.io.IOException
{
java.lang.Object[] v14, v19, v20, v23, v5;
com.fasterxml.jackson.databind.DeserializationConfig v7;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v15, v16, v17, v18, v21, v4, v6;
com.fasterxml.jackson.databind.util.LinkedNode v8;
boolean v13, v22;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v3;
java.lang.Class v12;
java.lang.Object v10, v11, v9;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: com.fasterxml.jackson.core.JsonParser;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object[];
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v4, v5);
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v8 == null goto label4;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v0, v1, v2, v3, v6);
v11 = <com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: java.lang.Object NOT_HANDLED>;
if v10 == v11 goto label3;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean _isCompatible(java.lang.Class,java.lang.Object)>(v12, v10);
if v13 == 0 goto label2;
return v10;
label2:
v14 = newarray (java.lang.Object)[2];
v15 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
v14[0] = v15;
v16 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(v10);
v14[1] = v16;
v17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DeserializationProblemHandler.handleUnexpectedToken() for type %s returned value of type %s", v14);
virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v1, v17);
label3:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label4:
if v6 != null goto label6;
v18 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
if v2 != null goto label5;
v19 = newarray (java.lang.Object)[1];
v19[0] = v18;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected end-of-input when trying read value of type %s", v19);
goto label6;
label5:
v20 = newarray (java.lang.Object)[3];
v20[0] = v18;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _shapeForToken(com.fasterxml.jackson.core.JsonToken)>(v2);
v20[1] = v21;
v20[2] = v2;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize value of type %s from %s (token `JsonToken.%s`)", v20);
label6:
if v2 == null goto label7;
v22 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: boolean isScalarValue()>();
if v22 == 0 goto label7;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
label7:
v23 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object[])>(v1, v6, v23);
return null;
}
public com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType, java.lang.String, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v15;
com.fasterxml.jackson.databind.DeserializationConfig v5;
com.fasterxml.jackson.databind.JavaType v1, v8;
java.lang.String v12, v13, v2, v4;
com.fasterxml.jackson.databind.util.LinkedNode v6;
boolean v11, v16, v9;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v3;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v10;
java.lang.Object v7;
com.fasterxml.jackson.databind.JsonMappingException v14, v17;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v4 := @parameter3: java.lang.String;
v5 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v6 == null goto label5;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)>(v0, v1, v2, v3, v4);
if v8 == null goto label4;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Void;");
if v9 == 0 goto label2;
return null;
label2:
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(v10);
if v11 == 0 goto label3;
return v8;
label3:
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v8);
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("problem handler tried to resolve into non-subtype: \u0001");
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(v1, v2, v13);
throw v14;
label4:
v6 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label5:
v15 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_INVALID_SUBTYPE>;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v15);
if v16 != 0 goto label6;
return null;
label6:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(v1, v2, v4);
throw v17;
}
public com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.DeserializationConfig v4;
java.lang.Class v9;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v1, v7;
com.fasterxml.jackson.databind.JsonMappingException v13, v14;
java.lang.String v11, v12, v3;
com.fasterxml.jackson.databind.util.LinkedNode v5;
boolean v10, v8;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers()>();
label1:
if v5 == null goto label5;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.deser.DeserializationProblemHandler: com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)>(v0, v1, v2, v3);
if v7 == null goto label4;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Void;");
if v8 == 0 goto label2;
return null;
label2:
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v10 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(v9);
if v10 == 0 goto label3;
return v7;
label3:
v11 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v7);
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("problem handler tried to resolve into non-subtype: \u0001");
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(v1, null, v12);
throw v13;
label4:
v5 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label5:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v1, v3);
throw v14;
}
public void handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v6;
com.fasterxml.jackson.core.JsonParser v9;
com.fasterxml.jackson.databind.MapperFeature v2;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v10;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v5;
java.lang.String v7, v8;
com.fasterxml.jackson.databind.JsonDeserializer v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature IGNORE_MERGE_FOR_UNMERGEABLE>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v2);
if v3 != 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v4);
v6 = newarray (java.lang.Object)[1];
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v5);
v6[0] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid configuration: values of type %s cannot be merged", v6);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v10 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v9, v8, v5);
throw v10;
label1:
return;
}
protected boolean _isCompatible(java.lang.Class, java.lang.Object)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Class v1, v5;
java.lang.Object v2;
boolean v3, v4, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Object;
if v2 == null goto label1;
v3 = virtualinvoke v1.<java.lang.Class: boolean isInstance(java.lang.Object)>(v2);
if v3 == 0 goto label2;
label1:
return 1;
label2:
v4 = virtualinvoke v1.<java.lang.Class: boolean isPrimitive()>();
if v4 == 0 goto label3;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>(v1);
v6 = virtualinvoke v5.<java.lang.Class: boolean isInstance(java.lang.Object)>(v2);
if v6 == 0 goto label3;
v7 = 1;
goto label4;
label3:
v7 = 0;
label4:
return v7;
}
public transient void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer, com.fasterxml.jackson.core.JsonToken, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v6;
java.lang.Class v7;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JsonMappingException v8;
java.lang.String v3, v5;
com.fasterxml.jackson.databind.JsonDeserializer v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v6, v7, v2, v5);
throw v8;
}
public transient void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.JsonToken, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.JsonMappingException v7;
java.lang.String v3, v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v6, v1, v2, v5);
throw v7;
}
public transient void reportWrongTokenException(java.lang.Class, com.fasterxml.jackson.core.JsonToken, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v6;
java.lang.Class v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JsonMappingException v7;
java.lang.String v3, v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v6, v1, v2, v5);
throw v7;
}
public java.lang.Object reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3, v8;
com.fasterxml.jackson.databind.PropertyName v5;
java.lang.Object v2, v9;
java.lang.String v4, v6;
com.fasterxml.jackson.databind.deser.SettableBeanProperty v7;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader;
v2 := @parameter1: java.lang.Object;
v3 = newarray (java.lang.Object)[2];
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(v2);
v3[0] = v4;
v5 = v1.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: com.fasterxml.jackson.databind.PropertyName propertyName>;
v3[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No Object Id found for an instance of %s, to assign to property \'%s\'", v3);
v7 = v1.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty>;
v8 = newarray (java.lang.Object)[0];
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object[])>(v7, v6, v8);
return v9;
}
public transient java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.databind.exc.MismatchedInputException v7;
java.lang.Class v6;
java.lang.String v2, v4;
com.fasterxml.jackson.databind.JsonDeserializer v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v5, v6, v4);
throw v7;
}
public transient java.lang.Object reportInputMismatch(java.lang.Class, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.databind.exc.MismatchedInputException v6;
java.lang.Class v1;
java.lang.String v2, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v5, v1, v4);
throw v6;
}
public transient java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.databind.exc.MismatchedInputException v6;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v5, v1, v4);
throw v6;
}
public transient java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.databind.exc.MismatchedInputException v7;
com.fasterxml.jackson.databind.BeanProperty v1;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v8;
java.lang.Class v9;
com.fasterxml.jackson.databind.JavaType v5;
java.lang.String v10, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
if v1 != null goto label1;
v5 = null;
goto label2;
label1:
v5 = interfaceinvoke v1.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.JavaType getType()>();
label2:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v6, v5, v4);
if v1 == null goto label3;
v8 = interfaceinvoke v1.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v8 == null goto label3;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getDeclaringClass()>();
v10 = interfaceinvoke v1.<com.fasterxml.jackson.databind.BeanProperty: java.lang.String getName()>();
virtualinvoke v7.<com.fasterxml.jackson.databind.exc.MismatchedInputException: void prependPath(java.lang.Object,java.lang.String)>(v9, v10);
label3:
throw v7;
}
public transient java.lang.Object reportPropertyInputMismatch(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.databind.exc.MismatchedInputException v7;
java.lang.Class v1;
java.lang.String v2, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v6, v1, v5);
if v2 == null goto label1;
virtualinvoke v7.<com.fasterxml.jackson.databind.exc.MismatchedInputException: void prependPath(java.lang.Object,java.lang.String)>(v1, v2);
label1:
throw v7;
}
public transient java.lang.Object reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
java.lang.Class v5;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2, v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportPropertyInputMismatch(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v5, v2, v3, v4);
return v6;
}
public transient java.lang.Object reportBadCoercion(com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.exc.InvalidFormatException v8;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v7;
java.lang.Class v2;
java.lang.Object v3;
java.lang.String v4, v6;
com.fasterxml.jackson.databind.JsonDeserializer v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object[];
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v4, v5);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v7, v6, v3, v2);
throw v8;
}
public java.lang.Object reportTrailingTokens(java.lang.Class, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonToken) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.exc.MismatchedInputException v7;
java.lang.Class v1;
com.fasterxml.jackson.core.JsonToken v3;
java.lang.String v5, v6;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken;
v4 = newarray (java.lang.Object)[2];
v4[0] = v3;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v4[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Trailing token (of type %s) found after value (bound as %s): not allowed as per `DeserializationFeature.FAIL_ON_TRAILING_TOKENS`", v4);
v7 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v2, v1, v6);
throw v7;
}
public transient void reportWrongTokenException(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonToken, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JsonMappingException v6;
java.lang.String v3, v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v2, v5);
throw v6;
}
public void reportUnknownProperty(java.lang.Object, java.lang.String, com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException v8;
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v7;
java.util.Collection v6;
com.fasterxml.jackson.databind.DeserializationFeature v4;
java.lang.Object v1;
java.lang.String v2;
com.fasterxml.jackson.databind.JsonDeserializer v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v4);
if v5 == 0 goto label3;
if v3 != null goto label1;
v6 = null;
goto label2;
label1:
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.util.Collection getKnownPropertyNames()>();
label2:
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v8 = staticinvoke <com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)>(v7, v1, v2, v6);
throw v8;
label3:
return;
}
public transient void reportMissingContent(java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.exc.MismatchedInputException v5;
com.fasterxml.jackson.databind.JavaType v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v4 = null;
v5 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v3, v4, "No content to map due to end-of-input");
throw v5;
}
public transient java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3, v7;
com.fasterxml.jackson.core.JsonParser v9;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v10;
com.fasterxml.jackson.databind.BeanDescription v1;
java.lang.Class v5;
java.lang.String v2, v4, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v5);
v7 = newarray (java.lang.Object)[2];
v7[0] = v6;
v7[1] = v4;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid type definition for type %s: %s", v7);
v9 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v10 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)>(v9, v8, v1, null);
throw v10;
}
public transient java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4, v9;
com.fasterxml.jackson.core.JsonParser v11;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v12;
com.fasterxml.jackson.databind.BeanDescription v1;
java.lang.Class v7;
java.lang.String v10, v3, v5, v6, v8;
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v3, v4);
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named)>(v2);
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v7);
v9 = newarray (java.lang.Object)[3];
v9[0] = v6;
v9[1] = v8;
v9[2] = v5;
v10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid definition for property %s (of type %s): %s", v9);
v11 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v12 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)>(v11, v10, v1, v2);
throw v12;
}
public java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.exc.InvalidDefinitionException v4;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v4 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidDefinitionException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v3, v2, v1);
throw v4;
}
public java.lang.Object reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.databind.JsonDeserializer v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: void handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer)>(v1);
return null;
}
public com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.JsonToken, java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v9;
com.fasterxml.jackson.core.JsonToken v3, v6;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v4, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken;
v4 := @parameter3: java.lang.String;
v5 = newarray (java.lang.Object)[2];
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5[0] = v6;
v5[1] = v3;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected token (%s), expected %s", v5);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(v7, v4);
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v1, v2, v8);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser, java.lang.Class, com.fasterxml.jackson.core.JsonToken, java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v9;
java.lang.Class v2;
com.fasterxml.jackson.core.JsonToken v3, v6;
java.lang.String v4, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken;
v4 := @parameter3: java.lang.String;
v5 = newarray (java.lang.Object)[2];
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5[0] = v6;
v5[1] = v3;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected token (%s), expected %s", v5);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(v7, v4);
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v1, v2, v8);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonToken, java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.JsonMappingException v5;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.String;
v4 = null;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v4, v2, v3);
return v5;
}
public com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class, java.lang.String, java.lang.String)
{
com.fasterxml.jackson.databind.exc.InvalidFormatException v9;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v4;
java.lang.Class v1;
java.lang.String v2, v3, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v5 = newarray (java.lang.Object)[3];
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v5[0] = v6;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _quotedString(java.lang.String)>(v2);
v5[1] = v7;
v5[2] = v3;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize Map key of type %s from String %s: %s", v5);
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v4, v8, v2, v1);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String, java.lang.Class, java.lang.String)
{
com.fasterxml.jackson.databind.exc.InvalidFormatException v9;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v8;
java.lang.Class v2;
java.lang.String v1, v3, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.String;
v4 = newarray (java.lang.Object)[3];
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v2);
v4[0] = v5;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _quotedString(java.lang.String)>(v1);
v4[1] = v6;
v4[2] = v3;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize value of type %s from String %s: %s", v4);
v8 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v8, v7, v1, v2);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number, java.lang.Class, java.lang.String)
{
com.fasterxml.jackson.databind.exc.InvalidFormatException v9;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v4;
java.lang.Class v2;
java.lang.String v3, v6, v7, v8;
java.lang.Number v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Number;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v5 = newarray (java.lang.Object)[3];
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v2);
v5[0] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v1);
v5[1] = v7;
v5[2] = v3;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize value of type %s from number %s: %s", v5);
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v4, v8, v1, v2);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException weirdNativeValueException(java.lang.Object, java.lang.Class)
{
com.fasterxml.jackson.databind.exc.InvalidFormatException v8;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v3;
java.lang.Class v2;
java.lang.Object v1;
java.lang.String v5, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v4 = newarray (java.lang.Object)[2];
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v2);
v4[0] = v5;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(v1);
v4[1] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize value of type %s from native value (`JsonToken.VALUE_EMBEDDED_OBJECT`) of type %s: incompatible types", v4);
v8 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v3, v7, v1, v2);
return v8;
}
public com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class, java.lang.Throwable)
{
java.lang.Throwable v2;
com.fasterxml.jackson.databind.exc.ValueInstantiationException v11;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v6;
com.fasterxml.jackson.core.JsonParser v9;
java.lang.Class v1, v5;
com.fasterxml.jackson.databind.JavaType v10;
java.lang.String v3, v4, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Throwable;
if v2 != null goto label1;
v3 = "N/A";
goto label2;
label1:
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v2);
v3 = v4;
if v4 != null goto label2;
v5 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v5);
label2:
v6 = newarray (java.lang.Object)[2];
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v6[0] = v7;
v6[1] = v3;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot construct instance of %s, problem: %s", v6);
v9 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v11 = staticinvoke <com.fasterxml.jackson.databind.exc.ValueInstantiationException: com.fasterxml.jackson.databind.exc.ValueInstantiationException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.Throwable)>(v9, v8, v10, v2);
return v11;
}
public com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class, java.lang.String)
{
com.fasterxml.jackson.databind.exc.ValueInstantiationException v8;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v7;
java.lang.String v2, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v4 = newarray (java.lang.Object)[2];
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v4[0] = v5;
v4[1] = v2;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot construct instance of %s: %s", v4);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v1);
v8 = staticinvoke <com.fasterxml.jackson.databind.exc.ValueInstantiationException: com.fasterxml.jackson.databind.exc.ValueInstantiationException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v3, v6, v7);
return v8;
}
public com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v7;
com.fasterxml.jackson.databind.exc.InvalidTypeIdException v9;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2, v3, v5, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = newarray (java.lang.Object)[2];
v4[0] = v2;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
v4[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not resolve type id \'%s\' as a subtype of %s", v4);
v7 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(v6, v3);
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidTypeIdException: com.fasterxml.jackson.databind.exc.InvalidTypeIdException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v7, v8, v1, v2);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException missingTypeIdException(com.fasterxml.jackson.databind.JavaType, java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v3;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.databind.exc.InvalidTypeIdException v7;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2, v4, v6;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not resolve subtype of %s", v3);
v5 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(v4, v2);
v7 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidTypeIdException: com.fasterxml.jackson.databind.exc.InvalidTypeIdException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v5, v6, v1, null);
return v7;
}
public com.fasterxml.jackson.databind.JsonMappingException unknownTypeException(com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v8;
com.fasterxml.jackson.databind.exc.MismatchedInputException v9;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v2, v3, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = newarray (java.lang.Object)[2];
v4[0] = v2;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
v4[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not resolve type id \'%s\' into a subtype of %s", v4);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(v6, v3);
v8 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v9 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v8, v1, v7);
return v9;
}
public com.fasterxml.jackson.databind.JsonMappingException endOfInputException(java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.exc.MismatchedInputException v5;
java.lang.Class v1;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v3 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected end-of-input when trying to deserialize a \u0001");
v5 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String)>(v2, v1, v4);
return v5;
}
public transient void reportMappingException(java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.JsonMappingException v5;
java.lang.String v1, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v1, v2);
v5 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v3, v4);
throw v5;
}
public com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.JsonMappingException v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v2, v1);
return v3;
}
public transient com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String, java.lang.Object[])
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.JsonMappingException v5;
java.lang.String v1, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String _format(java.lang.String,java.lang.Object[])>(v1, v2);
v5 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v3, v4);
return v5;
}
public com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
com.fasterxml.jackson.core.JsonParser v2;
java.lang.Class v1;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.JsonMappingException v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class, com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v3;
java.lang.Class v1;
com.fasterxml.jackson.core.JsonToken v2;
com.fasterxml.jackson.databind.JsonMappingException v7;
java.lang.String v5, v6;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser _parser>;
v4 = newarray (java.lang.Object)[2];
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v1);
v4[0] = v5;
v4[1] = v2;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize instance of %s out of %s token", v4);
v7 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(v3, v6);
return v7;
}
protected java.text.DateFormat getDateFormat()
{
com.fasterxml.jackson.databind.DeserializationContext v0;
java.text.DateFormat v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationContext: java.text.DateFormat _getDateFormat()>();
return v1;
}
protected java.text.DateFormat _getDateFormat()
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.databind.DeserializationContext v0;
java.lang.Object v5;
java.text.DateFormat v1, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 = v0.<com.fasterxml.jackson.databind.DeserializationContext: java.text.DateFormat _dateFormat>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.DeserializationContext: java.text.DateFormat _dateFormat>;
return v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: java.text.DateFormat getDateFormat()>();
v5 = virtualinvoke v4.<java.text.DateFormat: java.lang.Object clone()>();
v0.<com.fasterxml.jackson.databind.DeserializationContext: java.text.DateFormat _dateFormat> = v5;
return v5;
}
protected java.lang.String _shapeForToken(com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.databind.DeserializationContext v0;
int[] v2;
int v3, v4;
com.fasterxml.jackson.core.JsonToken v1;
v0 := @this: com.fasterxml.jackson.databind.DeserializationContext;
v1 := @parameter0: com.fasterxml.jackson.core.JsonToken;
if v1 == null goto label10;
v2 = <com.fasterxml.jackson.databind.DeserializationContext$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v4 = v2[v3];
tableswitch(v4)
{
case 1: goto label01;
case 2: goto label01;
case 3: goto label01;
case 4: goto label02;
case 5: goto label02;
case 6: goto label03;
case 7: goto label03;
case 8: goto label04;
case 9: goto label05;
case 10: goto label06;
case 11: goto label07;
case 12: goto label08;
case 13: goto label09;
default: goto label09;
};
label01:
return "Object value";
label02:
return "Array value";
label03:
return "Boolean value";
label04:
return "Embedded Object";
label05:
return "Floating-point value";
label06:
return "Integer value";
label07:
return "String value";
label08:
return "Null value";
label09:
return "[Unavailable value]";
label10:
return "<end of input>";
}
}