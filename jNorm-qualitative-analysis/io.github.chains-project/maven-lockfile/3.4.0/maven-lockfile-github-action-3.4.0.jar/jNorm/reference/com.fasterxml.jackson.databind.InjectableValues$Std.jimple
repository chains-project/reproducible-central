public class com.fasterxml.jackson.databind.InjectableValues$Std extends com.fasterxml.jackson.databind.InjectableValues implements java.io.Serializable
{
private static final long serialVersionUID;
protected final java.util.Map _values;
public void <init>()
{
com.fasterxml.jackson.databind.InjectableValues$Std v0;
java.util.HashMap v1;
v0 := @this: com.fasterxml.jackson.databind.InjectableValues$Std;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
specialinvoke v0.<com.fasterxml.jackson.databind.InjectableValues$Std: void <init>(java.util.Map)>(v1);
return;
}
public void <init>(java.util.Map)
{
com.fasterxml.jackson.databind.InjectableValues$Std v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.InjectableValues$Std;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<com.fasterxml.jackson.databind.InjectableValues: void <init>()>();
v0.<com.fasterxml.jackson.databind.InjectableValues$Std: java.util.Map _values> = v1;
return;
}
public com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.String, java.lang.Object)
{
java.util.Map v3;
com.fasterxml.jackson.databind.InjectableValues$Std v0;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.InjectableValues$Std;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.InjectableValues$Std: java.util.Map _values>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.Class, java.lang.Object)
{
java.util.Map v3;
com.fasterxml.jackson.databind.InjectableValues$Std v0;
java.lang.Class v1;
java.lang.Object v2;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.InjectableValues$Std;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.InjectableValues$Std: java.util.Map _values>;
v4 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v2);
return v0;
}
public java.lang.Object findInjectableValue(java.lang.Object, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v7;
com.fasterxml.jackson.databind.InjectableValues$Std v0;
java.util.Map v10, v12;
java.lang.String v15, v16, v8, v9;
boolean v13, v5;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.databind.BeanProperty v3;
java.lang.IllegalArgumentException v14;
java.lang.Class v6;
java.lang.Object v1, v11, v4;
v0 := @this: com.fasterxml.jackson.databind.InjectableValues$Std;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 := @parameter3: java.lang.Object;
v5 = v1 instanceof java.lang.String;
if v5 != 0 goto label1;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class classOf(java.lang.Object)>(v1);
v7 = newarray (java.lang.Object)[1];
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(v1);
v7[0] = v8;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unrecognized inject value id type (%s), expecting String", v7);
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v6, v9);
label1:
v10 = v0.<com.fasterxml.jackson.databind.InjectableValues$Std: java.util.Map _values>;
v11 = interfaceinvoke v10.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v11 != null goto label2;
v12 = v0.<com.fasterxml.jackson.databind.InjectableValues$Std: java.util.Map _values>;
v13 = interfaceinvoke v12.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
if v13 != 0 goto label2;
v14 = new java.lang.IllegalArgumentException;
v15 = interfaceinvoke v3.<com.fasterxml.jackson.databind.BeanProperty: java.lang.String getName()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No injectable id with value \'\u0001\' found (for property \'\u0001\')");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v14;
label2:
return v11;
}
}