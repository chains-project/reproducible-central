public abstract class com.fasterxml.jackson.databind.JsonSerializer extends java.lang.Object implements com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable
{
public void <init>()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.JsonSerializer v0;
com.fasterxml.jackson.databind.util.NameTransformer v1;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
return v0;
}
public com.fasterxml.jackson.databind.JsonSerializer replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.JsonSerializer v0, v1;
java.lang.UnsupportedOperationException v2;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object)
{
com.fasterxml.jackson.databind.JsonSerializer v0;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: java.lang.Object;
return v0;
}
public abstract void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
java.lang.Object[] v6;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.JsonSerializer v0;
java.lang.Class v5, v8;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v10, v7, v9;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonSerializer: java.lang.Class handledType()>();
if v5 != null goto label1;
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
label1:
v6 = newarray (java.lang.Object)[2];
v7 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v6[0] = v7;
v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v6[1] = v9;
v10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Type id handling not implemented for type %s (by serializer of type %s)", v6);
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v5, v10);
return;
}
public java.lang.Class handledType()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
return null;
}
public boolean isEmpty(java.lang.Object)
{
com.fasterxml.jackson.databind.JsonSerializer v0;
java.lang.Object v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(null, v1);
return v2;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
{
com.fasterxml.jackson.databind.JsonSerializer v0;
java.lang.Object v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean usesObjectId()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
return 0;
}
public boolean isUnwrappingSerializer()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
return 0;
}
public com.fasterxml.jackson.databind.JsonSerializer getDelegatee()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
return null;
}
public java.util.Iterator properties()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
java.util.Iterator v1;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.util.Iterator emptyIterator()>();
return v1;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.JsonSerializer v0;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.JsonSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
return;
}
}