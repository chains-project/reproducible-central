public class com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder extends com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder implements java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor;
protected final com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator;
public void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)
{
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator v2;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v1;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v2 = <com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;
specialinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v1, v2);
return;
}
public void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v2;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0;
java.lang.Object v3, v4;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: void <init>()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: java.lang.Object _requireNonNull(java.lang.Object,java.lang.String)>(v1, "Can not pass `null` DefaultTyping");
v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor> = v3;
v4 = staticinvoke <com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: java.lang.Object _requireNonNull(java.lang.Object,java.lang.String)>(v2, "Can not pass `null` PolymorphicTypeValidator");
v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder, java.lang.Class)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v4;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0, v1;
java.lang.Class v2;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder,java.lang.Class)>(v1, v2);
v3 = v1.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor>;
v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor> = v3;
v4 = v1.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator>;
v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator> = v4;
return;
}
private static java.lang.Object _requireNonNull(java.lang.Object, java.lang.String)
{
java.lang.Object v0;
java.lang.String v1;
java.lang.NullPointerException v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String;
if v0 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v1);
throw v2;
label1:
return v0;
}
public static com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder construct(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v0;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v2;
v0 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v1 := @parameter1: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v2 = new com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
specialinvoke v2.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v0, v1);
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder withDefaultImpl(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0, v3;
java.lang.Class v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: java.lang.Class _defaultImpl>;
if v2 != v1 goto label1;
return v0;
label1:
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String)>(class "Lcom/fasterxml/jackson/databind/ObjectMapper$DefaultTypeResolverBuilder;", v0, "withDefaultImpl");
v3 = new com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
specialinvoke v3.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder,java.lang.Class)>(v0, v1);
return v3;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig)
{
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v2;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator>;
return v2;
}
public com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0;
java.util.Collection v3;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v5;
com.fasterxml.jackson.databind.JavaType v2;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: java.util.Collection;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: boolean useForType(com.fasterxml.jackson.databind.JavaType)>(v2);
if v4 == 0 goto label1;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(v1, v2, v3);
goto label2;
label1:
v5 = null;
label2:
return v5;
}
public com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection)
{
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0;
java.util.Collection v3;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.JavaType v2;
boolean v4;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: java.util.Collection;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: boolean useForType(com.fasterxml.jackson.databind.JavaType)>(v2);
if v4 == 0 goto label1;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(v1, v2, v3);
goto label2;
label1:
v5 = null;
label2:
return v5;
}
public boolean useForType(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v0;
int[] v3;
int v5, v6;
com.fasterxml.jackson.databind.JavaType v1;
boolean v10, v13, v14, v15, v16, v17, v2, v20, v21, v22, v7, v8, v9;
java.lang.Class v11, v12, v18, v19;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();
if v2 == 0 goto label01;
return 0;
label01:
v3 = <com.fasterxml.jackson.databind.ObjectMapper$3: int[] $SwitchMap$com$fasterxml$jackson$databind$ObjectMapper$DefaultTyping>;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping: int ordinal()>();
v6 = v3[v5];
tableswitch(v6)
{
case 1: goto label02;
case 2: goto label03;
case 3: goto label08;
case 4: goto label13;
case 5: goto label14;
default: goto label14;
};
label02:
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();
if v7 == 0 goto label03;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
goto label02;
label03:
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v8 == 0 goto label04;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getReferencedType()>();
goto label03;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v9 != 0 goto label05;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isConcrete()>();
if v10 != 0 goto label06;
v11 = class "Lcom/fasterxml/jackson/core/TreeNode;";
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v13 = virtualinvoke v11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v12);
if v13 != 0 goto label06;
label05:
v14 = 1;
goto label07;
label06:
v14 = 0;
label07:
return v14;
label08:
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();
if v15 == 0 goto label09;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
goto label08;
label09:
v16 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v16 == 0 goto label10;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getReferencedType()>();
goto label09;
label10:
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();
if v17 != 0 goto label11;
v18 = class "Lcom/fasterxml/jackson/core/TreeNode;";
v19 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v20 = virtualinvoke v18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v19);
if v20 != 0 goto label11;
v21 = 1;
goto label12;
label11:
v21 = 0;
label12:
return v21;
label13:
return 1;
label14:
v22 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
return v22;
}
}