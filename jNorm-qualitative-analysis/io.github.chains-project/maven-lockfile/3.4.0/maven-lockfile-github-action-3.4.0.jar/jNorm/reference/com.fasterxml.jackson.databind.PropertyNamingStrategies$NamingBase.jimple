public abstract class com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase extends com.fasterxml.jackson.databind.PropertyNamingStrategy
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase v0;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase;
specialinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategy: void <init>()>();
return;
}
public java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedField, java.lang.String)
{
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.introspect.AnnotatedField v2;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v2;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v2;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedParameter, java.lang.String)
{
com.fasterxml.jackson.databind.introspect.AnnotatedParameter v2;
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public abstract java.lang.String translate(java.lang.String);
protected java.lang.String translateLowerCaseWithSeparator(java.lang.String, char)
{
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase v0;
char v10, v11, v2;
int v12, v13, v4, v6, v7, v8, v9;
java.lang.StringBuilder v5;
java.lang.String v1, v14;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: char;
if v1 == null goto label1;
v3 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
return v1;
label2:
v4 = virtualinvoke v1.<java.lang.String: int length()>();
v5 = new java.lang.StringBuilder;
v6 = v4 >> 1;
v7 = v4 + v6;
specialinvoke v5.<java.lang.StringBuilder: void <init>(int)>(v7);
v8 = 0;
v9 = 0;
label3:
if v9 >= v4 goto label8;
v10 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v9);
v11 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v10);
if v11 != v10 goto label5;
if v8 <= 1 goto label4;
v12 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
v13 = v12 - 1;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(v13, v2);
label4:
v8 = 0;
goto label7;
label5:
if v8 != 0 goto label6;
if v9 <= 0 goto label6;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v2);
label6:
v8 = v8 + 1;
label7:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v11);
v9 = v9 + 1;
goto label3;
label8:
v14 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
return v14;
}
}