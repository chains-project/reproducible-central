public abstract class com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase extends com.fasterxml.jackson.databind.PropertyNamingStrategy
{
public void <init>()
{
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase v0;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase;
specialinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategy: void <init>()>();
return;
}
public java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedField, java.lang.String)
{
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.introspect.AnnotatedField v2;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v2;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String)
{
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v2;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedParameter, java.lang.String)
{
com.fasterxml.jackson.databind.introspect.AnnotatedParameter v2;
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(v3);
return v4;
}
public abstract java.lang.String translate(java.lang.String);
protected static java.lang.String translateLowerCaseWithSeparator(java.lang.String, char)
{
char v1, v8, v9;
int v10, v11, v2, v4, v5, v6, v7;
java.lang.StringBuilder v3;
java.lang.String v0, v12;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: char;
if v0 != null goto label1;
return v0;
label1:
v2 = virtualinvoke v0.<java.lang.String: int length()>();
if v2 != 0 goto label2;
return v0;
label2:
v3 = new java.lang.StringBuilder;
v4 = v2 >> 1;
v5 = v2 + v4;
specialinvoke v3.<java.lang.StringBuilder: void <init>(int)>(v5);
v6 = 0;
v7 = 0;
label3:
if v7 >= v2 goto label8;
v8 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v7);
v9 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v8);
if v9 != v8 goto label5;
if v6 <= 1 goto label4;
v10 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
v11 = v10 - 1;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(v11, v1);
label4:
v6 = 0;
goto label7;
label5:
if v6 != 0 goto label6;
if v7 <= 0 goto label6;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v1);
label6:
v6 = v6 + 1;
label7:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v9);
v7 = v7 + 1;
goto label3;
label8:
v12 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v12;
}
}