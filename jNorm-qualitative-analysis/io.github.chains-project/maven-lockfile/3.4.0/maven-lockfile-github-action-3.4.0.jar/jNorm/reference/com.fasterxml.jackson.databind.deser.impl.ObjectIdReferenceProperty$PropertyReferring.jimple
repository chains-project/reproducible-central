public final class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring extends com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring
{
private final com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent;
public final java.lang.Object _pojo;
public void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty, com.fasterxml.jackson.databind.deser.UnresolvedForwardReference, java.lang.Class, java.lang.Object)
{
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring v0;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v2;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty v1;
java.lang.Class v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v3 := @parameter2: java.lang.Class;
v4 := @parameter3: java.lang.Object;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)>(v2, v3);
v0.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent> = v1;
v0.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring: java.lang.Object _pojo> = v4;
return;
}
public void handleResolvedForwardReference(java.lang.Object, java.lang.Object) throws java.io.IOException
{
java.lang.IllegalArgumentException v4;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring v0;
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty v6;
java.lang.Object v1, v2, v7;
java.lang.String v5;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring: boolean hasId(java.lang.Object)>(v1);
if v3 != 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to resolve a forward reference with id [\u0001] that wasn\'t previously seen as unresolved.");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v0.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent>;
v7 = v0.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring: java.lang.Object _pojo>;
virtualinvoke v6.<com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty: void set(java.lang.Object,java.lang.Object)>(v7, v2);
return;
}
}