abstract class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer extends com.fasterxml.jackson.databind.deser.std.StdDeserializer implements com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
protected final java.lang.Boolean _supportsUpdates;
protected final boolean _mergeArrays;
protected final boolean _mergeObjects;
public void <init>(java.lang.Class, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
java.lang.Boolean v2;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Boolean _supportsUpdates> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeArrays> = 1;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeObjects> = 1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer, boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0, v1;
java.lang.Boolean v4;
boolean v2, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.StdDeserializer)>(v1);
v4 = v1.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Boolean _supportsUpdates>;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Boolean _supportsUpdates> = v4;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeArrays> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeObjects> = v3;
return;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Untyped>;
return v1;
}
public boolean isCachable()
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
return 1;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.DeserializationConfig v1;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Boolean _supportsUpdates>;
return v2;
}
public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.DeserializationConfig v3;
java.lang.Boolean v4, v5, v6;
com.fasterxml.jackson.databind.JsonDeserializer v11;
boolean v10, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: java.lang.Boolean getDefaultMergeable(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/node/ArrayNode;");
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: java.lang.Boolean getDefaultMergeable(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/node/ObjectNode;");
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: java.lang.Boolean getDefaultMergeable(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/JsonNode;");
v7 = staticinvoke <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _shouldMerge(java.lang.Boolean,java.lang.Boolean)>(v4, v6);
v8 = staticinvoke <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _shouldMerge(java.lang.Boolean,java.lang.Boolean)>(v5, v6);
v9 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeArrays>;
if v7 != v9 goto label1;
v10 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeObjects>;
if v8 == v10 goto label2;
label1:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean)>(v7, v8);
return v11;
label2:
return v0;
}
private static boolean _shouldMerge(java.lang.Boolean, java.lang.Boolean)
{
java.lang.Boolean v0, v1;
boolean v2, v3;
v0 := @parameter0: java.lang.Boolean;
v1 := @parameter1: java.lang.Boolean;
if v0 == null goto label1;
v2 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
return v2;
label1:
if v1 == null goto label2;
v3 = virtualinvoke v1.<java.lang.Boolean: boolean booleanValue()>();
return v3;
label2:
return 1;
}
protected abstract com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean, boolean);
protected void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.JsonNodeFactory, java.lang.String, com.fasterxml.jackson.databind.node.ObjectNode, com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JsonNode) throws java.io.IOException
{
com.fasterxml.jackson.core.StreamReadCapability v11;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v10;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.DeserializationFeature v8;
com.fasterxml.jackson.databind.node.ObjectNode v5;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.ArrayNode v14;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
com.fasterxml.jackson.databind.JsonNode v6, v7;
java.lang.String v4;
boolean v12, v13, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: com.fasterxml.jackson.databind.node.ObjectNode;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonNode;
v7 := @parameter6: com.fasterxml.jackson.databind.JsonNode;
v8 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_READING_DUP_TREE_KEY>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v8);
if v9 == 0 goto label1;
v10 = newarray (java.lang.Object)[1];
v10[0] = v4;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(class "Lcom/fasterxml/jackson/databind/JsonNode;", "Duplicate field \'%s\' for `ObjectNode`: not allowed when `DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY` enabled", v10);
label1:
v11 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v11);
if v12 == 0 goto label3;
v13 = virtualinvoke v6.<com.fasterxml.jackson.databind.JsonNode: boolean isArray()>();
if v13 == 0 goto label2;
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v7);
virtualinvoke v5.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v4, v6);
goto label3;
label2:
v14 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
virtualinvoke v14.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v6);
virtualinvoke v14.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v7);
virtualinvoke v5.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v4, v14);
label3:
return;
}
protected final com.fasterxml.jackson.databind.node.ObjectNode _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.JsonNodeFactory, com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ObjectNode v5, v9;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.ArrayNode v11;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v4;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
int v8;
com.fasterxml.jackson.databind.JsonNode v10, v12;
com.fasterxml.jackson.core.JsonToken v7;
java.lang.String v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label1:
if v6 == null goto label8;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v7 != null goto label2;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label2:
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonToken: int id()>();
lookupswitch(v8)
{
case 1: goto label3;
case 3: goto label4;
default: goto label5;
};
label3:
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v3, v4, v9);
goto label6;
label4:
v11 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v3, v4, v11);
goto label6;
label5:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label6:
v12 = virtualinvoke v5.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v6, v10);
if v12 == null goto label7;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)>(v1, v2, v3, v6, v5, v12, v10);
label7:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label1;
label8:
return v5;
}
protected final com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.ObjectNode, com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.ObjectNode v21, v3;
int v20;
com.fasterxml.jackson.databind.JsonNode v12, v16, v22;
com.fasterxml.jackson.core.JsonToken v11, v14, v18, v7;
java.lang.String v24, v6;
boolean v13, v15, v17, v19, v26, v5, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.ArrayNode v23;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v4;
com.fasterxml.jackson.databind.node.JsonNodeFactory v10;
java.lang.Object v9;
com.fasterxml.jackson.databind.cfg.JsonNodeFeature v25;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.ObjectNode;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v5 == 0 goto label01;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label03;
label01:
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v7);
if v8 != 0 goto label02;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v9;
label02:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label03:
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
label04:
if v6 == null goto label18;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v12 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(v6);
if v12 == null goto label06;
v13 = v12 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v13 == 0 goto label05;
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v11 != v14 goto label06;
v15 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeObjects>;
if v15 == 0 goto label06;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack)>(v1, v2, v12, v4);
if v16 == v12 goto label17;
virtualinvoke v3.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v6, v16);
goto label17;
label05:
v17 = v12 instanceof com.fasterxml.jackson.databind.node.ArrayNode;
if v17 == 0 goto label06;
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v11 != v18 goto label06;
v19 = v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: boolean _mergeArrays>;
if v19 == 0 goto label06;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v10, v4, v12);
goto label17;
label06:
if v11 != null goto label07;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label07:
v20 = virtualinvoke v11.<com.fasterxml.jackson.core.JsonToken: int id()>();
tableswitch(v20)
{
case 1: goto label08;
case 2: goto label15;
case 3: goto label09;
case 4: goto label15;
case 5: goto label15;
case 6: goto label10;
case 7: goto label11;
case 8: goto label15;
case 9: goto label12;
case 10: goto label13;
case 11: goto label14;
default: goto label15;
};
label08:
v21 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v10, v4, v21);
goto label16;
label09:
v23 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v10, v4, v23);
goto label16;
label10:
v24 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v22 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)>(v24);
goto label16;
label11:
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v2, v10);
goto label16;
label12:
v22 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(1);
goto label16;
label13:
v22 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(0);
goto label16;
label14:
v25 = <com.fasterxml.jackson.databind.cfg.JsonNodeFeature: com.fasterxml.jackson.databind.cfg.JsonNodeFeature READ_NULL_PROPERTIES>;
v26 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v25);
if v26 == 0 goto label17;
v22 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label16;
label15:
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _deserializeRareScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label16:
virtualinvoke v3.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v6, v22);
label17:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label04;
label18:
return v3;
}
protected final com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.JsonNodeFactory, com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack, com.fasterxml.jackson.databind.node.ContainerNode) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.NullNode v31;
com.fasterxml.jackson.databind.JsonNode v15, v17, v19, v22, v27, v28, v32;
boolean v10, v21;
com.fasterxml.jackson.databind.node.TextNode v26;
com.fasterxml.jackson.databind.node.ArrayNode v16;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v4;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
com.fasterxml.jackson.databind.cfg.JsonNodeFeature v20;
com.fasterxml.jackson.databind.node.ObjectNode v14;
int v13, v24, v7, v8, v9;
com.fasterxml.jackson.databind.node.ContainerNode v5, v6;
com.fasterxml.jackson.core.JsonToken v12, v23;
java.lang.String v11, v18, v25;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.BooleanNode v29, v30;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
v5 := @parameter4: com.fasterxml.jackson.databind.node.ContainerNode;
v6 = v5;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: int getDeserializationFeatures()>();
v8 = <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: int F_MASK_INT_COERCIONS>;
v9 = v7 & v8;
label01:
v10 = v6 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v10 == 0 goto label17;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
label02:
if v11 == null goto label28;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v12 != null goto label03;
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label03:
v13 = virtualinvoke v12.<com.fasterxml.jackson.core.JsonToken: int id()>();
tableswitch(v13)
{
case 1: goto label04;
case 2: goto label14;
case 3: goto label06;
case 4: goto label14;
case 5: goto label14;
case 6: goto label08;
case 7: goto label09;
case 8: goto label10;
case 9: goto label11;
case 10: goto label12;
case 11: goto label13;
default: goto label14;
};
label04:
v14 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v15 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v11, v14);
if v15 == null goto label05;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)>(v1, v2, v3, v11, v6, v15, v14);
label05:
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void push(com.fasterxml.jackson.databind.node.ContainerNode)>(v6);
v6 = v14;
goto label16;
label06:
v16 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
v17 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v11, v16);
if v17 == null goto label07;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)>(v1, v2, v3, v11, v6, v17, v16);
label07:
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void push(com.fasterxml.jackson.databind.node.ContainerNode)>(v6);
v6 = v16;
goto label29;
label08:
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)>(v18);
goto label15;
label09:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,int,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v9, v3);
goto label15;
label10:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v2, v3);
goto label15;
label11:
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(1);
goto label15;
label12:
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(0);
goto label15;
label13:
v20 = <com.fasterxml.jackson.databind.cfg.JsonNodeFeature: com.fasterxml.jackson.databind.cfg.JsonNodeFeature READ_NULL_PROPERTIES>;
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v20);
if v21 == 0 goto label16;
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label15;
label14:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _deserializeRareScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label15:
v22 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v11, v19);
if v22 == null goto label16;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)>(v1, v2, v3, v11, v6, v22, v19);
label16:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label02;
label17:
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v23 != null goto label18;
v23 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label18:
v24 = virtualinvoke v23.<com.fasterxml.jackson.core.JsonToken: int id()>();
tableswitch(v24)
{
case 1: goto label19;
case 2: goto label27;
case 3: goto label20;
case 4: goto label28;
case 5: goto label27;
case 6: goto label21;
case 7: goto label22;
case 8: goto label23;
case 9: goto label24;
case 10: goto label25;
case 11: goto label26;
default: goto label27;
};
label19:
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void push(com.fasterxml.jackson.databind.node.ContainerNode)>(v6);
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v6);
goto label29;
label20:
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void push(com.fasterxml.jackson.databind.node.ContainerNode)>(v6);
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v6);
goto label29;
label21:
v25 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v26 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)>(v25);
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v26);
goto label17;
label22:
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,int,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v9, v3);
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v27);
goto label17;
label23:
v28 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v2, v3);
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v28);
goto label17;
label24:
v29 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(1);
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v29);
goto label17;
label25:
v30 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(0);
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v30);
goto label17;
label26:
v31 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v31);
goto label17;
label27:
v32 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _deserializeRareScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v6.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode)>(v32);
goto label17;
label28:
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: com.fasterxml.jackson.databind.node.ContainerNode popOrNull()>();
label29:
if v6 != null goto label01;
return v5;
}
protected final com.fasterxml.jackson.databind.JsonNode _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.ObjectNode v5;
com.fasterxml.jackson.databind.node.NullNode v12;
int v4;
com.fasterxml.jackson.databind.JsonNode v13, v8, v9;
java.lang.String v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.TextNode v7;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
com.fasterxml.jackson.databind.node.BooleanNode v10, v11;
java.lang.Class v14;
java.lang.Object v15;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 2: goto label1;
case 3: goto label9;
case 4: goto label9;
case 5: goto label9;
case 6: goto label2;
case 7: goto label3;
case 8: goto label4;
case 9: goto label5;
case 10: goto label6;
case 11: goto label7;
case 12: goto label8;
default: goto label9;
};
label1:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
return v5;
label2:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)>(v6);
return v7;
label3:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v2, v3);
return v8;
label4:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v2, v3);
return v9;
label5:
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(1);
return v10;
label6:
v11 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(0);
return v11;
label7:
v12 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v12;
label8:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v13;
label9:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Class handledType()>();
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v14, v1);
return v15;
}
protected final com.fasterxml.jackson.databind.JsonNode _deserializeRareScalar(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ObjectNode v5;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v4, v6;
int v3;
com.fasterxml.jackson.databind.JsonNode v7, v8;
java.lang.Class v9;
java.lang.Object v10;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
lookupswitch(v3)
{
case 2: goto label1;
case 8: goto label2;
case 12: goto label3;
default: goto label4;
};
label1:
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
return v5;
label2:
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1, v2, v6);
return v7;
label3:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v8;
label4:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Class handledType()>();
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v9, v1);
return v10;
}
protected final com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser, int, com.fasterxml.jackson.databind.node.JsonNodeFactory) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v10, v11, v14;
long v15, v8;
com.fasterxml.jackson.databind.DeserializationFeature v4;
int v12, v2;
java.math.BigInteger v17, v6;
boolean v5;
com.fasterxml.jackson.databind.node.NumericNode v13, v16, v9;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ValueNode v18, v7;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.databind.node.JsonNodeFactory;
if v2 == 0 goto label2;
v4 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationFeature: boolean enabledIn(int)>(v2);
if v5 == 0 goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger)>(v6);
return v7;
label1:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>(v8);
return v9;
label2:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
v11 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
if v10 != v11 goto label3;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(int)>(v12);
return v13;
label3:
v14 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
if v10 != v14 goto label4;
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
v16 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>(v15);
return v16;
label4:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();
v18 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger)>(v17);
return v18;
}
protected final com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.JsonNodeFactory) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v12, v15, v9;
long v16;
com.fasterxml.jackson.databind.DeserializationFeature v10, v7;
int v13, v4, v5, v6;
java.math.BigInteger v18;
boolean v11, v8;
com.fasterxml.jackson.databind.node.NumericNode v14, v17;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ValueNode v19;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: int getDeserializationFeatures()>();
v5 = <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: int F_MASK_INT_COERCIONS>;
v6 = v4 & v5;
if v6 == 0 goto label3;
v7 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.DeserializationFeature: boolean enabledIn(int)>(v4);
if v8 == 0 goto label1;
v9 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER>;
goto label4;
label1:
v10 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.DeserializationFeature: boolean enabledIn(int)>(v4);
if v11 == 0 goto label2;
v9 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
goto label4;
label2:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
goto label4;
label3:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
label4:
v12 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
if v9 != v12 goto label5;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v14 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(int)>(v13);
return v14;
label5:
v15 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
if v9 != v15 goto label6;
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
v17 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>(v16);
return v17;
label6:
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger)>(v18);
return v19;
}
protected final com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.JsonNodeFactory) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v15, v4, v5;
com.fasterxml.jackson.databind.DeserializationFeature v8;
java.math.BigDecimal v13, v6;
com.fasterxml.jackson.databind.JsonNode v14, v7;
boolean v10, v9;
double v11, v18;
com.fasterxml.jackson.databind.node.NumericNode v12, v17, v19;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
float v16;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
v5 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL>;
if v4 != v5 goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.math.BigDecimal)>(v2, v3, v6);
return v7;
label1:
v8 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v8);
if v9 == 0 goto label3;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isNaN()>();
if v10 == 0 goto label2;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
v12 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(double)>(v11);
return v12;
label2:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _fromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.math.BigDecimal)>(v2, v3, v13);
return v14;
label3:
v15 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType FLOAT>;
if v4 != v15 goto label4;
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();
v17 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(float)>(v16);
return v17;
label4:
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode numberNode(double)>(v18);
return v19;
}
protected final com.fasterxml.jackson.databind.JsonNode _fromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.JsonNodeFactory, java.math.BigDecimal)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.cfg.DatatypeFeatures v4;
com.fasterxml.jackson.databind.node.ValueNode v10;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
java.math.BigDecimal v3;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
java.lang.ArithmeticException v9;
com.fasterxml.jackson.databind.cfg.JsonNodeFeature v5, v7;
boolean v6, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v3 := @parameter2: java.math.BigDecimal;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures()>();
v5 = <com.fasterxml.jackson.databind.cfg.JsonNodeFeature: com.fasterxml.jackson.databind.cfg.JsonNodeFeature STRIP_TRAILING_BIGDECIMAL_ZEROES>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.cfg.DatatypeFeatures: boolean isExplicitlySet(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v5);
if v6 == 0 goto label1;
v7 = <com.fasterxml.jackson.databind.cfg.JsonNodeFeature: com.fasterxml.jackson.databind.cfg.JsonNodeFeature STRIP_TRAILING_BIGDECIMAL_ZEROES>;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.cfg.DatatypeFeatures: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v7);
goto label2;
label1:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: boolean willStripTrailingBigDecimalZeroes()>();
label2:
if v8 == 0 goto label6;
label3:
v3 = virtualinvoke v3.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();
label4:
goto label6;
label5:
v9 := @caughtexception;
label6:
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal)>(v3);
return v10;
catch java.lang.ArithmeticException from label3 to label4 with label5;
}
protected final com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ValueNode v11, v9;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer v0;
com.fasterxml.jackson.databind.node.NullNode v5;
com.fasterxml.jackson.databind.node.JsonNodeFactory v3;
java.lang.Class v6;
java.lang.Object v4;
boolean v10, v8;
com.fasterxml.jackson.databind.node.BinaryNode v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
if v4 != null goto label1;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v5;
label1:
v6 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
if v6 != class "[B" goto label2;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[])>(v4);
return v7;
label2:
v8 = v4 instanceof com.fasterxml.jackson.databind.util.RawValue;
if v8 == 0 goto label3;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue)>(v4);
return v9;
label3:
v10 = v4 instanceof com.fasterxml.jackson.databind.JsonNode;
if v10 == 0 goto label4;
return v4;
label4:
v11 = virtualinvoke v3.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object)>(v4);
return v11;
}
}