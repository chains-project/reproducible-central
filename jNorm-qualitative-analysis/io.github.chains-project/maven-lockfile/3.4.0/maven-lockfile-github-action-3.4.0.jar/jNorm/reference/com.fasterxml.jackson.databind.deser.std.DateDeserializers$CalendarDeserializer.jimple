public class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer extends com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer
{
protected final java.lang.reflect.Constructor _defaultCtor;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/Calendar;");
v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.reflect.Constructor _defaultCtor> = null;
return;
}
public void <init>(java.lang.Class)
{
java.lang.Class v1;
java.lang.reflect.Constructor v2;
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: void <init>(java.lang.Class)>(v1);
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>(v1, 0);
v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.reflect.Constructor _defaultCtor> = v2;
return;
}
public void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer, java.text.DateFormat, java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer v0, v1;
java.lang.String v3;
java.lang.reflect.Constructor v4;
java.text.DateFormat v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
v2 := @parameter1: java.text.DateFormat;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String)>(v1, v2, v3);
v4 = v1.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.reflect.Constructor _defaultCtor>;
v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.reflect.Constructor _defaultCtor> = v4;
return;
}
protected com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat, java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer v0, v3;
java.lang.String v2;
java.text.DateFormat v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
v1 := @parameter0: java.text.DateFormat;
v2 := @parameter1: java.lang.String;
v3 = new com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String)>(v0, v1, v2);
return v3;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.GregorianCalendar v2;
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = new java.util.GregorianCalendar;
specialinvoke v2.<java.util.GregorianCalendar: void <init>()>();
virtualinvoke v2.<java.util.GregorianCalendar: void setTimeInMillis(long)>(0L);
return v2;
}
public java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v7;
com.fasterxml.jackson.core.JsonParser v1;
java.util.Date v3;
java.util.TimeZone v10;
long v9;
java.lang.reflect.Constructor v4, v6;
java.lang.Exception v11;
java.util.Calendar v5;
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer v0;
java.lang.Class v12;
java.lang.Object v13, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
if v3 != null goto label1;
return null;
label1:
v4 = v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.reflect.Constructor _defaultCtor>;
if v4 != null goto label2;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.util.Calendar constructCalendar(java.util.Date)>(v3);
return v5;
label2:
v6 = v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.reflect.Constructor _defaultCtor>;
v7 = newarray (java.lang.Object)[0];
v8 = virtualinvoke v6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v7);
v9 = virtualinvoke v3.<java.util.Date: long getTime()>();
virtualinvoke v8.<java.util.Calendar: void setTimeInMillis(long)>(v9);
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.util.TimeZone getTimeZone()>();
if v10 == null goto label3;
virtualinvoke v8.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(v10);
label3:
return v8;
label4:
v11 := @caughtexception;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.Class handledType()>();
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>(v12, v3, v11);
return v13;
catch java.lang.Exception from label2 to label3 with label4;
}
}