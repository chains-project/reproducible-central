public abstract class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
public static java.lang.Class[] types()
{
java.lang.Class[] v0;
v0 = newarray (java.lang.Class)[14];
v0[0] = class "Ljava/io/File;";
v0[1] = class "Ljava/net/URL;";
v0[2] = class "Ljava/net/URI;";
v0[3] = class "Ljava/lang/Class;";
v0[4] = class "Lcom/fasterxml/jackson/databind/JavaType;";
v0[5] = class "Ljava/util/Currency;";
v0[6] = class "Ljava/util/regex/Pattern;";
v0[7] = class "Ljava/util/Locale;";
v0[8] = class "Ljava/nio/charset/Charset;";
v0[9] = class "Ljava/util/TimeZone;";
v0[10] = class "Ljava/net/InetAddress;";
v0[11] = class "Ljava/net/InetSocketAddress;";
v0[12] = class "Ljava/lang/StringBuilder;";
v0[13] = class "Ljava/lang/StringBuffer;";
return v0;
}
protected void <init>(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(v1);
return;
}
public static com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class)
{
byte v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std v4;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer v2;
java.lang.Class v0;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBufferDeserializer v3;
v0 := @parameter0: java.lang.Class;
if v0 != class "Ljava/io/File;" goto label01;
v1 = 1;
goto label15;
label01:
if v0 != class "Ljava/net/URL;" goto label02;
v1 = 2;
goto label15;
label02:
if v0 != class "Ljava/net/URI;" goto label03;
v1 = 3;
goto label15;
label03:
if v0 != class "Ljava/lang/Class;" goto label04;
v1 = 4;
goto label15;
label04:
if v0 != class "Lcom/fasterxml/jackson/databind/JavaType;" goto label05;
v1 = 5;
goto label15;
label05:
if v0 != class "Ljava/util/Currency;" goto label06;
v1 = 6;
goto label15;
label06:
if v0 != class "Ljava/util/regex/Pattern;" goto label07;
v1 = 7;
goto label15;
label07:
if v0 != class "Ljava/util/Locale;" goto label08;
v1 = 8;
goto label15;
label08:
if v0 != class "Ljava/nio/charset/Charset;" goto label09;
v1 = 9;
goto label15;
label09:
if v0 != class "Ljava/util/TimeZone;" goto label10;
v1 = 10;
goto label15;
label10:
if v0 != class "Ljava/net/InetAddress;" goto label11;
v1 = 11;
goto label15;
label11:
if v0 != class "Ljava/net/InetSocketAddress;" goto label12;
v1 = 12;
goto label15;
label12:
if v0 != class "Ljava/lang/StringBuilder;" goto label13;
v2 = new com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer;
specialinvoke v2.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer: void <init>()>();
return v2;
label13:
if v0 != class "Ljava/lang/StringBuffer;" goto label14;
v3 = new com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBufferDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBufferDeserializer: void <init>()>();
return v3;
label14:
return null;
label15:
v4 = new com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;
specialinvoke v4.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: void <init>(java.lang.Class,int)>(v0, v1);
return v4;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType OtherScalar>;
return v1;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonToken v4, v5;
java.lang.String v11, v16, v17, v3;
boolean v10, v12, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
java.lang.Exception v15;
java.lang.Class v18, v7;
java.lang.Object v13, v14, v6, v9;
com.fasterxml.jackson.databind.JsonMappingException v19, v20;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();
if v3 != null goto label2;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v4 == v5 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>(v1, v2, v4);
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v7);
label2:
v8 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v8 == 0 goto label3;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v9;
label3:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: boolean _shouldTrim()>();
if v10 == 0 goto label4;
v11 = v3;
v3 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
if v3 == v11 goto label4;
v12 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v12 == 0 goto label4;
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v13;
label4:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v3, v2);
label5:
return v14;
label6:
v15 := @caughtexception;
v16 = "not a valid textual representation";
v17 = virtualinvoke v15.<java.lang.Exception: java.lang.String getMessage()>();
if v17 == null goto label7;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("not a valid textual representation, problem: \u0001");
label7:
v18 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>(v3, v18, v16);
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException withCause(java.lang.Throwable)>(v15);
throw v20;
catch java.lang.IllegalArgumentException from label4 to label5 with label6;
catch java.net.MalformedURLException from label4 to label5 with label6;
}
protected abstract java.lang.Object _deserialize(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
protected boolean _shouldTrim()
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
return 1;
}
protected java.lang.Object _deserializeFromOther(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
java.lang.Class v12, v8, v9;
java.lang.Object v11, v13, v5, v7;
com.fasterxml.jackson.core.JsonToken v3, v4, v6;
boolean v10;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken;
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v3 != v4 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label1:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v3 != v6 goto label4;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
if v7 != null goto label2;
return null;
label2:
v8 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;
v9 = virtualinvoke v7.<java.lang.Object: java.lang.Class getClass()>();
v10 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v9);
if v10 == 0 goto label3;
return v7;
label3:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)>(v7, v2);
return v11;
label4:
v12 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v12, v1);
return v13;
}
protected java.lang.Object _deserializeEmbedded(java.lang.Object, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v3;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
java.lang.Class v4, v6;
java.lang.Object v1;
java.lang.String v5, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v3[0] = v5;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v3[1] = v7;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Don\'t know how to convert embedded Object of type %s into %s", v3);
return null;
}
protected final java.lang.Object _deserializeFromEmptyString() throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
return null;
}
protected java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.type.LogicalType v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v7;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v4;
com.fasterxml.jackson.databind.cfg.CoercionAction v11, v5, v6, v9;
java.lang.Class v3;
java.lang.Object v10, v12, v13;
java.lang.String v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v3 = v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;
v4 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v2, v3, v4);
v6 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v5 != v6 goto label1;
v7 = newarray (java.lang.Object)[1];
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.String _coercedTypeDesc()>();
v7[0] = v8;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce empty String (\"\") to %s (but could if enabling coercion using `CoercionConfig`)", v7);
label1:
v9 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v5 != v9 goto label2;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v10;
label2:
v11 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v5 != v11 goto label3;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v12;
label3:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v13;
}
protected java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v2;
}
}