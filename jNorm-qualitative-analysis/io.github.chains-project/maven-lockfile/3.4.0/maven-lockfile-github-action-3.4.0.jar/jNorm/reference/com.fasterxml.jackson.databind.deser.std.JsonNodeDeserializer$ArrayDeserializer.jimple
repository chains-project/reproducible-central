final class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer extends com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer
{
private static final long serialVersionUID;
protected static final com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance;
protected void <init>()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0;
java.lang.Boolean v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
v1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>(class "Lcom/fasterxml/jackson/databind/node/ArrayNode;", v1);
return;
}
public static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0;
v0 = <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance>;
return v0;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer, boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0, v1;
boolean v2, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer,boolean,boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0, v3;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer,boolean,boolean)>(v0, v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ArrayNode v5;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v6;
com.fasterxml.jackson.databind.node.JsonNodeFactory v4;
java.lang.Object v7;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
v6 = new com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v6.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void <init>()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v4, v6, v5);
return v5;
label1:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Lcom/fasterxml/jackson/databind/node/ArrayNode;", v1);
return v7;
}
public com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.ArrayNode) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ArrayNode v3;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v6;
com.fasterxml.jackson.databind.node.JsonNodeFactory v5;
java.lang.Object v7;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.node.ArrayNode;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v6 = new com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v6.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void <init>()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v5, v6, v3);
return v3;
label1:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Lcom/fasterxml/jackson/databind/node/ArrayNode;", v1);
return v7;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v0;
v0 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance> = v0;
return;
}
}