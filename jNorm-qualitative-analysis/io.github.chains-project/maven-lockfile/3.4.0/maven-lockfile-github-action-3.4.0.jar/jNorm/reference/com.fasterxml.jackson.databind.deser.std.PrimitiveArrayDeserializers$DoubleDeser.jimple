final class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser extends com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(java.lang.Class)>(class "[D");
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser, com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0, v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.NullValueProvider;
v3 := @parameter2: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0, v3;
com.fasterxml.jackson.databind.deser.NullValueProvider v1;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.NullValueProvider;
v2 := @parameter1: java.lang.Boolean;
v3 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v0, v1, v2);
return v3;
}
protected double[] _constructEmpty()
{
double[] v1;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v1 = newarray (double)[0];
return v1;
}
public double[] deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder v6;
int v15, v16, v18, v19, v8;
com.fasterxml.jackson.core.JsonToken v10, v11, v9;
boolean v3;
double v14;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v12, v13;
java.lang.Exception v17;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0;
com.fasterxml.jackson.databind.util.ArrayBuilders v5;
java.lang.Object v21, v4, v7;
com.fasterxml.jackson.databind.JsonMappingException v20;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v3 != 0 goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
label1:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.ArrayBuilders: com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder: java.lang.Object resetAndStart()>();
v8 = 0;
label2:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v9 == v10 goto label6;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v9 != v11 goto label3;
v12 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
if v12 == null goto label3;
v13 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
interfaceinvoke v13.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label2;
label3:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v15 = lengthof v7;
if v8 < v15 goto label4;
virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>(v7, v8);
v8 = 0;
label4:
v16 = v8;
v8 = v8 + 1;
v7[v16] = v14;
goto label2;
label5:
v17 := @caughtexception;
v18 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder: int bufferedSize()>();
v19 = v18 + v8;
v20 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>(v17, v7, v19);
throw v20;
label6:
v21 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>(v7, v8);
return v21;
catch java.lang.Exception from label2 to label5 with label5;
}
protected double[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
double[] v3;
double v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = newarray (double)[1];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v3[0] = v4;
return v3;
}
protected double[] _concat(double[], double[])
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser v0;
double[] v1, v2, v6;
int v3, v4, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser;
v1 := @parameter0: double[];
v2 := @parameter1: double[];
v3 = lengthof v1;
v4 = lengthof v2;
v5 = v3 + v4;
v6 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(v1, v5);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v6, v3, v4);
return v6;
}
}