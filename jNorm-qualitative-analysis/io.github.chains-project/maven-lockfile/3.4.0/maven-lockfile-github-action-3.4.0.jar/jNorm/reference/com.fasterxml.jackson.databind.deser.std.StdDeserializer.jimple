public abstract class com.fasterxml.jackson.databind.deser.std.StdDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer implements java.io.Serializable, com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable
{
private static final long serialVersionUID;
protected static final int F_MASK_INT_COERCIONS;
protected static final int F_MASK_ACCEPT_ARRAYS;
protected final java.lang.Class _valueClass;
protected final com.fasterxml.jackson.databind.JavaType _valueType;
protected void <init>(java.lang.Class)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass> = v1;
v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
if v1 != null goto label1;
v2 = class "Ljava/lang/Object;";
goto label2;
label1:
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
label2:
v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.StdDeserializer)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0, v1;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
v2 = v1.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass> = v2;
v3 = v1.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType> = v3;
return;
}
public java.lang.Class handledType()
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
return v1;
}
public final java.lang.Class getValueClass()
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
return v1;
}
public com.fasterxml.jackson.databind.JavaType getValueType()
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType>;
return v1;
}
public com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v2, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType _valueType>;
return v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v4);
return v5;
}
public com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
return null;
}
protected boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.JsonDeserializer v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(v1);
return v2;
}
protected boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.KeyDeserializer v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.KeyDeserializer;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(v1);
return v2;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
protected java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v19;
com.fasterxml.jackson.databind.cfg.CoercionAction v3, v6;
com.fasterxml.jackson.databind.DeserializationFeature v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int[] v9;
int v10, v11;
com.fasterxml.jackson.core.JsonToken v15, v16, v18, v7, v8;
com.fasterxml.jackson.databind.JavaType v17;
boolean v5;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v12, v13, v14, v20;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v4 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v4);
if v5 != 0 goto label1;
v6 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v3 == v6 goto label6;
label1:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v7 != v8 goto label4;
v9 = <com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();
v11 = v9[v10];
tableswitch(v11)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label3;
default: goto label6;
};
label2:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v12;
label3:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v13;
label4:
if v5 == 0 goto label6;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v16 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v15 == v16 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label5:
return v14;
label6:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v19 = newarray (java.lang.Object)[0];
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v17, v18, v1, null, v19);
return v20;
}
protected java.lang.Object _deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.DeserializationFeature v5;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Object v10, v12;
com.fasterxml.jackson.core.JsonToken v3, v7, v8;
com.fasterxml.jackson.databind.JavaType v11, v9;
boolean v4, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label2;
v5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v5);
if v6 == 0 goto label2;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v7 != v8 goto label1;
return null;
label1:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v9, v1);
return v10;
label2:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v11, v1);
return v12;
}
protected java.lang.Object _deserializeFromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
boolean v13, v18, v25, v32, v39, v42, v6, v8;
java.lang.Object[] v45;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v10, v20, v27, v34;
long v30;
com.fasterxml.jackson.databind.cfg.CoercionAction v11, v15, v16, v21, v22, v28, v29, v35, v36;
int v23;
java.lang.String v37, v38, v41, v5;
com.fasterxml.jackson.databind.type.LogicalType v14, v19, v26, v33, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1, v44;
com.fasterxml.jackson.databind.deser.ValueInstantiator v3;
java.lang.Class v4;
java.lang.Object v12, v17, v24, v31, v40, v43, v46, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();
if v3 == null goto label1;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromString()>();
if v6 == 0 goto label1;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v5);
return v7;
label1:
v8 = virtualinvoke v5.<java.lang.String: boolean isEmpty()>();
if v8 == 0 goto label2;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v10 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v9, v4, v10);
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.String)>(v1, v2, v11, v4, "empty String (\"\")");
return v12;
label2:
v13 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isBlank(java.lang.String)>(v5);
if v13 == 0 goto label3;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v15 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction)>(v14, v4, v15);
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.String)>(v1, v2, v16, v4, "blank String (all whitespace)");
return v17;
label3:
if v3 == null goto label7;
v5 = virtualinvoke v5.<java.lang.String: java.lang.String trim()>();
v18 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromInt()>();
if v18 == 0 goto label4;
v19 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v20 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v19, class "Ljava/lang/Integer;", v20);
v22 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;
if v21 != v22 goto label4;
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v5);
v24 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int)>(v2, v23);
return v24;
label4:
v25 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromLong()>();
if v25 == 0 goto label5;
v26 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v27 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;
v28 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v26, class "Ljava/lang/Long;", v27);
v29 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;
if v28 != v29 goto label5;
v30 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v5);
v31 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long)>(v2, v30);
return v31;
label5:
v32 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromBoolean()>();
if v32 == 0 goto label7;
v33 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>;
v34 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;
v35 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v33, class "Ljava/lang/Boolean;", v34);
v36 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;
if v35 != v36 goto label7;
v37 = virtualinvoke v5.<java.lang.String: java.lang.String trim()>();
v38 = "true";
v39 = virtualinvoke v38.<java.lang.String: boolean equals(java.lang.Object)>(v37);
if v39 == 0 goto label6;
v40 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)>(v2, 1);
return v40;
label6:
v41 = "false";
v42 = virtualinvoke v41.<java.lang.String: boolean equals(java.lang.Object)>(v37);
if v42 == 0 goto label7;
v43 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)>(v2, 0);
return v43;
label7:
v44 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v45 = newarray (java.lang.Object)[1];
v45[0] = v5;
v46 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v4, v3, v44, "no String-argument constructor/factory method to deserialize from String value (\'%s\')", v45);
return v46;
}
protected java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.cfg.CoercionAction, java.lang.Class, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionAction v3;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int[] v6;
int v7, v8;
java.lang.Class v4;
java.lang.Object v9;
java.lang.String v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.cfg.CoercionAction;
v4 := @parameter3: java.lang.Class;
v5 := @parameter4: java.lang.String;
v6 = <com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();
v8 = v6[v7];
tableswitch(v8)
{
case 1: goto label1;
case 2: goto label3;
case 3: goto label3;
case 4: goto label2;
default: goto label3;
};
label1:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v9;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v2, v3, v4, "", "empty String (\"\")");
label3:
return null;
}
protected java.lang.Object _deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v5, v6;
com.fasterxml.jackson.core.JsonToken v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v6;
}
protected final boolean _parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.core.JsonParser v2;
java.lang.Class v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v2, v1);
return v4;
}
protected final boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v10;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
boolean v11, v15, v16, v19, v27, v28, v29, v34, v8;
java.lang.Object[] v31;
com.fasterxml.jackson.databind.cfg.CoercionAction v22, v23, v24;
int v26, v3;
java.lang.Boolean v33, v5, v7;
com.fasterxml.jackson.core.JsonToken v12, v13;
java.lang.String v25, v4;
com.fasterxml.jackson.databind.type.LogicalType v20;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v17, v21, v30, v6, v9;
java.lang.Object v14, v18, v32;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label06;
case 2: goto label09;
case 3: goto label07;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label02;
case 8: goto label09;
case 9: goto label03;
case 10: goto label04;
case 11: goto label05;
default: goto label09;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v5 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v6 = <java.lang.Boolean: java.lang.Class TYPE>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Boolean _coerceBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v6);
v8 = virtualinvoke v5.<java.lang.Boolean: boolean equals(java.lang.Object)>(v7);
return v8;
label03:
return 1;
label04:
return 0;
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label06:
v9 = <java.lang.Boolean: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v9);
goto label10;
label07:
v10 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v10);
if v11 == 0 goto label09;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v12 != v13 goto label08;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v15 = virtualinvoke v14.<java.lang.Boolean: boolean booleanValue()>();
return v15;
label08:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label09:
v17 = <java.lang.Boolean: java.lang.Class TYPE>;
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v17, v1);
v19 = virtualinvoke v18.<java.lang.Boolean: boolean booleanValue()>();
return v19;
label10:
v20 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>;
v21 = <java.lang.Boolean: java.lang.Class TYPE>;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v20, v21);
v23 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v22 != v23 goto label11;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label11:
v24 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v22 != v24 goto label12;
return 0;
label12:
v25 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v26 = virtualinvoke v25.<java.lang.String: int length()>();
if v26 != 4 goto label13;
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isTrue(java.lang.String)>(v25);
if v27 == 0 goto label14;
return 1;
label13:
if v26 != 5 goto label14;
v28 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isFalse(java.lang.String)>(v25);
if v28 == 0 goto label14;
return 0;
label14:
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v25);
if v29 == 0 goto label15;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v25);
return 0;
label15:
v30 = <java.lang.Boolean: java.lang.Class TYPE>;
v31 = newarray (java.lang.Object)[0];
v32 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v30, v25, "only \"true\"/\"True\"/\"TRUE\" or \"false\"/\"False\"/\"FALSE\" recognized", v31);
v33 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v34 = virtualinvoke v33.<java.lang.Boolean: boolean equals(java.lang.Object)>(v32);
return v34;
}
protected boolean _isTrue(java.lang.String)
{
char v2;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v3, v5, v7;
boolean v4, v6, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
if v2 != 116 goto label1;
v3 = "true";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
return v4;
label1:
if v2 != 84 goto label5;
v5 = "TRUE";
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v6 != 0 goto label2;
v7 = "True";
v8 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v8 == 0 goto label3;
label2:
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
return v9;
label5:
return 0;
}
protected boolean _isFalse(java.lang.String)
{
char v2;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v3, v5, v7;
boolean v4, v6, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
if v2 != 102 goto label1;
v3 = "false";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
return v4;
label1:
if v2 != 70 goto label5;
v5 = "FALSE";
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v6 != 0 goto label2;
v7 = "False";
v8 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v8 == 0 goto label3;
label2:
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
return v9;
label5:
return 0;
}
protected final java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
java.lang.Object[] v23;
com.fasterxml.jackson.databind.cfg.CoercionAction v12, v13, v14;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v17, v4;
java.lang.Boolean v15, v19, v21, v6, v7, v8;
java.lang.String v16, v5;
boolean v18, v20, v22;
com.fasterxml.jackson.databind.type.LogicalType v11;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v3;
java.lang.Object v10, v24, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 1: goto label06;
case 2: goto label08;
case 3: goto label07;
case 4: goto label08;
case 5: goto label08;
case 6: goto label01;
case 7: goto label02;
case 8: goto label08;
case 9: goto label03;
case 10: goto label04;
case 11: goto label05;
default: goto label08;
};
label01:
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label09;
label02:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Boolean _coerceBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v3);
return v6;
label03:
v7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
return v7;
label04:
v8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return v8;
label05:
return null;
label06:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v3);
goto label09;
label07:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v9;
label08:
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v3, v1);
return v10;
label09:
v11 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v5, v11, v3);
v13 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v12 != v13 goto label10;
return null;
label10:
v14 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v12 != v14 goto label11;
v15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return v15;
label11:
v16 = virtualinvoke v5.<java.lang.String: java.lang.String trim()>();
v17 = virtualinvoke v16.<java.lang.String: int length()>();
if v17 != 4 goto label12;
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isTrue(java.lang.String)>(v16);
if v18 == 0 goto label13;
v19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
return v19;
label12:
if v17 != 5 goto label13;
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isFalse(java.lang.String)>(v16);
if v20 == 0 goto label13;
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return v21;
label13:
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v16);
if v22 == 0 goto label14;
return null;
label14:
v23 = newarray (java.lang.Object)[0];
v24 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v3, v16, "only \"true\" or \"false\" recognized", v23);
return v24;
}
protected final byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
byte v10, v17, v18, v22, v35, v40, v9;
boolean v13, v29, v36;
java.lang.Object[] v33, v38;
com.fasterxml.jackson.databind.cfg.CoercionAction v25, v26, v27, v6, v7, v8;
int v3, v30;
com.fasterxml.jackson.core.JsonToken v14, v15;
com.fasterxml.jackson.databind.JavaType v20;
java.lang.String v28, v4;
com.fasterxml.jackson.databind.type.LogicalType v23;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v31;
java.lang.Class v11, v19, v24, v32, v37, v5;
java.lang.Object v16, v21, v34, v39;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label07;
case 2: goto label10;
case 3: goto label08;
case 4: goto label10;
case 5: goto label10;
case 6: goto label01;
case 7: goto label05;
case 8: goto label02;
case 9: goto label10;
case 10: goto label10;
case 11: goto label06;
default: goto label10;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label11;
label02:
v5 = <java.lang.Byte: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
return 0;
label03:
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v8 goto label04;
return 0;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
return v9;
label05:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
return v10;
label06:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label07:
v11 = <java.lang.Byte: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v11);
goto label11;
label08:
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label10;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v14 != v15 goto label09;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v17 = virtualinvoke v16.<java.lang.Byte: byte byteValue()>();
return v17;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v18;
label10:
v19 = <java.lang.Byte: java.lang.Class TYPE>;
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v19);
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v20, v1);
v22 = virtualinvoke v21.<java.lang.Byte: byte byteValue()>();
return v22;
label11:
v23 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v24 = <java.lang.Byte: java.lang.Class TYPE>;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v23, v24);
v26 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v25 != v26 goto label12;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label12:
v27 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v25 != v27 goto label13;
return 0;
label13:
v28 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v28);
if v29 == 0 goto label14;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v28);
return 0;
label14:
v30 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v28);
label15:
goto label17;
label16:
v31 := @caughtexception;
v32 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v33 = newarray (java.lang.Object)[0];
v34 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v32, v28, "not a valid `byte` value", v33);
v35 = virtualinvoke v34.<java.lang.Byte: byte byteValue()>();
return v35;
label17:
v36 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _byteOverflow(int)>(v30);
if v36 == 0 goto label18;
v37 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v38 = newarray (java.lang.Object)[0];
v39 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v37, v28, "overflow, value cannot be represented as 8-bit value", v38);
v40 = virtualinvoke v39.<java.lang.Byte: byte byteValue()>();
return v40;
label18:
return v30;
catch java.lang.IllegalArgumentException from label14 to label15 with label16;
}
protected final short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
boolean v13, v29, v36;
java.lang.Object[] v33, v38;
com.fasterxml.jackson.databind.cfg.CoercionAction v25, v26, v27, v6, v7, v8;
short v10, v17, v18, v22, v35, v40, v9;
int v3, v30;
com.fasterxml.jackson.core.JsonToken v14, v15;
com.fasterxml.jackson.databind.JavaType v20;
java.lang.String v28, v4;
com.fasterxml.jackson.databind.type.LogicalType v23;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v31;
java.lang.Class v11, v19, v24, v32, v37, v5;
java.lang.Object v16, v21, v34, v39;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label07;
case 2: goto label10;
case 3: goto label08;
case 4: goto label10;
case 5: goto label10;
case 6: goto label01;
case 7: goto label05;
case 8: goto label02;
case 9: goto label10;
case 10: goto label10;
case 11: goto label06;
default: goto label10;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label11;
label02:
v5 = <java.lang.Short: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
return 0;
label03:
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v8 goto label04;
return 0;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: short getShortValue()>();
return v9;
label05:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: short getShortValue()>();
return v10;
label06:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label07:
v11 = <java.lang.Short: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v11);
goto label11;
label08:
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label10;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v14 != v15 goto label09;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v17 = virtualinvoke v16.<java.lang.Short: short shortValue()>();
return v17;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v18;
label10:
v19 = <java.lang.Short: java.lang.Class TYPE>;
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v19);
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v20, v1);
v22 = virtualinvoke v21.<java.lang.Short: short shortValue()>();
return v22;
label11:
v23 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v24 = <java.lang.Short: java.lang.Class TYPE>;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v23, v24);
v26 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v25 != v26 goto label12;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label12:
v27 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v25 != v27 goto label13;
return 0;
label13:
v28 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v28);
if v29 == 0 goto label14;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v28);
return 0;
label14:
v30 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v28);
label15:
goto label17;
label16:
v31 := @caughtexception;
v32 = <java.lang.Short: java.lang.Class TYPE>;
v33 = newarray (java.lang.Object)[0];
v34 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v32, v28, "not a valid `short` value", v33);
v35 = virtualinvoke v34.<java.lang.Short: short shortValue()>();
return v35;
label17:
v36 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _shortOverflow(int)>(v30);
if v36 == 0 goto label18;
v37 = <java.lang.Short: java.lang.Class TYPE>;
v38 = newarray (java.lang.Object)[0];
v39 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v37, v28, "overflow, value cannot be represented as 16-bit value", v38);
v40 = virtualinvoke v39.<java.lang.Short: short shortValue()>();
return v40;
label18:
return v30;
catch java.lang.IllegalArgumentException from label14 to label15 with label16;
}
protected final int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.cfg.CoercionAction v24, v25, v26, v6, v7, v8;
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v10, v17, v18, v21, v29, v3, v9;
com.fasterxml.jackson.core.JsonToken v14, v15;
java.lang.String v27, v4;
boolean v13, v28;
com.fasterxml.jackson.databind.type.LogicalType v22;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v11, v19, v23, v5;
java.lang.Object v16, v20;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label07;
case 2: goto label10;
case 3: goto label08;
case 4: goto label10;
case 5: goto label10;
case 6: goto label01;
case 7: goto label05;
case 8: goto label02;
case 9: goto label10;
case 10: goto label10;
case 11: goto label06;
default: goto label10;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label11;
label02:
v5 = <java.lang.Integer: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
return 0;
label03:
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v8 goto label04;
return 0;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getValueAsInt()>();
return v9;
label05:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
return v10;
label06:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label07:
v11 = <java.lang.Integer: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v11);
goto label11;
label08:
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label10;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v14 != v15 goto label09;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v17 = virtualinvoke v16.<java.lang.Integer: int intValue()>();
return v17;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v18;
label10:
v19 = <java.lang.Integer: java.lang.Class TYPE>;
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v19, v1);
v21 = virtualinvoke v20.<java.lang.Number: int intValue()>();
return v21;
label11:
v22 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v23 = <java.lang.Integer: java.lang.Class TYPE>;
v24 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v22, v23);
v25 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v24 != v25 goto label12;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0;
label12:
v26 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v24 != v26 goto label13;
return 0;
label13:
v27 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v28 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v27);
if v28 == 0 goto label14;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v27);
return 0;
label14:
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v27);
return v29;
}
protected final int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
java.lang.Object[] v16, v7;
long v4;
java.lang.Integer v8, v9;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v12, v13, v19, v3;
java.lang.String v2;
java.lang.Number v11, v18;
boolean v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.IllegalArgumentException v14;
java.lang.Class v15, v6;
java.lang.Object v10, v17;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
label1:
v3 = virtualinvoke v2.<java.lang.String: int length()>();
if v3 <= 9 goto label4;
v4 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _intOverflow(long)>(v4);
if v5 == 0 goto label3;
v6 = <java.lang.Integer: java.lang.Class TYPE>;
v7 = newarray (java.lang.Object)[3];
v7[0] = v2;
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);
v7[1] = v8;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);
v7[2] = v9;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v6, v2, "Overflow: numeric value (%s) out of range of int (%d -%d)", v7);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v10);
v12 = virtualinvoke v11.<java.lang.Number: int intValue()>();
label2:
return v12;
label3:
return v4;
label4:
v13 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v2);
label5:
return v13;
label6:
v14 := @caughtexception;
v15 = <java.lang.Integer: java.lang.Class TYPE>;
v16 = newarray (java.lang.Object)[0];
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v15, v2, "not a valid `int` value", v16);
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v17);
v19 = virtualinvoke v18.<java.lang.Number: int intValue()>();
return v19;
catch java.lang.IllegalArgumentException from label1 to label2 with label6;
catch java.lang.IllegalArgumentException from label4 to label5 with label6;
}
protected final java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.cfg.CoercionAction v19, v20, v22, v6, v7, v9;
java.lang.Integer v12, v14, v27;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v11, v13, v4;
com.fasterxml.jackson.databind.JavaType v17;
java.lang.String v24, v5;
boolean v25;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v3;
java.lang.Object v10, v15, v16, v18, v21, v23, v26, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 1: goto label07;
case 2: goto label09;
case 3: goto label08;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label05;
case 8: goto label02;
case 9: goto label09;
case 10: goto label09;
case 11: goto label06;
default: goto label09;
};
label01:
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v3);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v8;
label03:
v9 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v9 goto label04;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v10;
label04:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getValueAsInt()>();
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
return v12;
label05:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v13);
return v14;
label06:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v15;
label07:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v3);
goto label10;
label08:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label09:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v17, v1);
return v18;
label10:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v5);
v20 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v19 != v20 goto label11;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v21;
label11:
v22 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v19 != v22 goto label12;
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v23;
label12:
v24 = virtualinvoke v5.<java.lang.String: java.lang.String trim()>();
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v24);
if v25 == 0 goto label13;
v26 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v26;
label13:
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Integer _parseInteger(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v24);
return v27;
}
protected final java.lang.Integer _parseInteger(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
java.lang.Object[] v14, v6;
long v4;
java.lang.Integer v10, v12, v7, v8;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v11, v3;
java.lang.String v2;
boolean v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.IllegalArgumentException v13;
java.lang.Object v15, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
label1:
v3 = virtualinvoke v2.<java.lang.String: int length()>();
if v3 <= 9 goto label5;
v4 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _intOverflow(long)>(v4);
if v5 == 0 goto label3;
v6 = newarray (java.lang.Object)[3];
v6[0] = v2;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);
v6[1] = v7;
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);
v6[2] = v8;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(class "Ljava/lang/Integer;", v2, "Overflow: numeric value (%s) out of range of `java.lang.Integer` (%d -%d)", v6);
label2:
return v9;
label3:
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
label4:
return v10;
label5:
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v2);
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
label6:
return v12;
label7:
v13 := @caughtexception;
v14 = newarray (java.lang.Object)[0];
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(class "Ljava/lang/Integer;", v2, "not a valid `java.lang.Integer` value", v14);
return v15;
catch java.lang.IllegalArgumentException from label1 to label2 with label7;
catch java.lang.IllegalArgumentException from label3 to label4 with label7;
catch java.lang.IllegalArgumentException from label5 to label6 with label7;
}
protected final long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
long v10, v17, v18, v21, v29, v9;
com.fasterxml.jackson.databind.cfg.CoercionAction v24, v25, v26, v6, v7, v8;
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v3;
com.fasterxml.jackson.core.JsonToken v14, v15;
java.lang.String v27, v4;
boolean v13, v28;
com.fasterxml.jackson.databind.type.LogicalType v22;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v11, v19, v23, v5;
java.lang.Object v16, v20;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label07;
case 2: goto label10;
case 3: goto label08;
case 4: goto label10;
case 5: goto label10;
case 6: goto label01;
case 7: goto label05;
case 8: goto label02;
case 9: goto label10;
case 10: goto label10;
case 11: goto label06;
default: goto label10;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label11;
label02:
v5 = <java.lang.Long: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
return 0L;
label03:
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v8 goto label04;
return 0L;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getValueAsLong()>();
return v9;
label05:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
return v10;
label06:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0L;
label07:
v11 = <java.lang.Long: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v11);
goto label11;
label08:
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label10;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v14 != v15 goto label09;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v17 = virtualinvoke v16.<java.lang.Long: long longValue()>();
return v17;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v18;
label10:
v19 = <java.lang.Long: java.lang.Class TYPE>;
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v19, v1);
v21 = virtualinvoke v20.<java.lang.Number: long longValue()>();
return v21;
label11:
v22 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v23 = <java.lang.Long: java.lang.Class TYPE>;
v24 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v22, v23);
v25 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v24 != v25 goto label12;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0L;
label12:
v26 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v24 != v26 goto label13;
return 0L;
label13:
v27 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v28 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v27);
if v28 == 0 goto label14;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v27);
return 0L;
label14:
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v27);
return v29;
}
protected final long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v6;
long v3, v9;
java.lang.IllegalArgumentException v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v5;
java.lang.Object v7;
java.lang.String v2;
java.lang.Number v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
label1:
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = <java.lang.Long: java.lang.Class TYPE>;
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v5, v2, "not a valid `long` value", v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v7);
v9 = virtualinvoke v8.<java.lang.Number: long longValue()>();
return v9;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected final java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
long v11, v14;
com.fasterxml.jackson.databind.cfg.CoercionAction v19, v20, v22, v6, v7, v9;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Long v12, v15, v27;
int v4;
com.fasterxml.jackson.databind.JavaType v17;
java.lang.String v24, v5;
boolean v25;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v3;
java.lang.Object v10, v13, v16, v18, v21, v23, v26, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 1: goto label07;
case 2: goto label09;
case 3: goto label08;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label06;
case 8: goto label02;
case 9: goto label09;
case 10: goto label09;
case 11: goto label05;
default: goto label09;
};
label01:
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v3);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v8;
label03:
v9 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v9 goto label04;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v10;
label04:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getValueAsLong()>();
v12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v11);
return v12;
label05:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v13;
label06:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
v15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v14);
return v15;
label07:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v3);
goto label10;
label08:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label09:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v17, v1);
return v18;
label10:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v5);
v20 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v19 != v20 goto label11;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v21;
label11:
v22 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v19 != v22 goto label12;
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v23;
label12:
v24 = virtualinvoke v5.<java.lang.String: java.lang.String trim()>();
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v24);
if v25 == 0 goto label13;
v26 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v26;
label13:
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Long _parseLong(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v24);
return v27;
}
protected final java.lang.Long _parseLong(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v6;
long v3;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Long v4;
java.lang.Object v7;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
label1:
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v2);
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(class "Ljava/lang/Long;", v2, "not a valid `java.lang.Long` value", v6);
return v7;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected final float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Float v21;
com.fasterxml.jackson.databind.cfg.CoercionAction v25, v26, v27, v6, v7, v8;
com.fasterxml.jackson.databind.DeserializationFeature v11;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v3;
com.fasterxml.jackson.core.JsonToken v13, v14;
java.lang.String v28, v4;
boolean v12, v29;
com.fasterxml.jackson.databind.type.LogicalType v23;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
float v16, v17, v20, v22, v30, v9;
java.lang.Class v10, v18, v24, v5;
java.lang.Object v15, v19;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label06;
case 2: goto label09;
case 3: goto label07;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label02;
case 8: goto label04;
case 9: goto label09;
case 10: goto label09;
case 11: goto label05;
default: goto label09;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v5 = <java.lang.Float: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToFloatCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
return 0.0F;
label03:
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v8 goto label04;
return 0.0F;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();
return v9;
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0.0F;
label06:
v10 = <java.lang.Float: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v10);
goto label10;
label07:
v11 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v11);
if v12 == 0 goto label09;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v13 != v14 goto label08;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v16 = virtualinvoke v15.<java.lang.Float: float floatValue()>();
return v16;
label08:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v17;
label09:
v18 = <java.lang.Float: java.lang.Class TYPE>;
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v18, v1);
v20 = virtualinvoke v19.<java.lang.Number: float floatValue()>();
return v20;
label10:
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Float _checkFloatSpecialValue(java.lang.String)>(v4);
if v21 == null goto label11;
v22 = virtualinvoke v21.<java.lang.Float: float floatValue()>();
return v22;
label11:
v23 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v24 = <java.lang.Float: java.lang.Class TYPE>;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v23, v24);
v26 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v25 != v26 goto label12;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0.0F;
label12:
v27 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v25 != v27 goto label13;
return 0.0F;
label13:
v28 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v28);
if v29 == 0 goto label14;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v28);
return 0.0F;
label14:
v30 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v28);
return v30;
}
protected final float _parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v6;
java.lang.IllegalArgumentException v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
float v3, v9;
java.lang.Class v5;
java.lang.Object v7;
java.lang.String v2;
java.lang.Number v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
label1:
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: float parseFloat(java.lang.String)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = <java.lang.Float: java.lang.Class TYPE>;
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v5, v2, "not a valid `float` value", v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v7);
v9 = virtualinvoke v8.<java.lang.Number: float floatValue()>();
return v9;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected final float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v9;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v7;
com.fasterxml.jackson.core.StreamReadFeature v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
float v12, v6;
java.lang.Class v8;
java.lang.Object v10;
java.lang.String v3;
java.lang.Number v11;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
label1:
v4 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_DOUBLE_PARSER>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: float parseFloat(java.lang.String,boolean)>(v3, v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = <java.lang.Float: java.lang.Class TYPE>;
v9 = newarray (java.lang.Object)[0];
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v8, v3, "not a valid `float` value", v9);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v10);
v12 = virtualinvoke v11.<java.lang.Number: float floatValue()>();
return v12;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected java.lang.Float _checkFloatSpecialValue(java.lang.String)
{
java.lang.Float v5, v7, v9;
char v3;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1;
boolean v2, v4, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 != 0 goto label4;
v3 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
lookupswitch(v3)
{
case 45: goto label3;
case 73: goto label1;
case 78: goto label2;
default: goto label4;
};
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isPosInf(java.lang.String)>(v1);
if v4 == 0 goto label4;
v5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#InfinityF);
return v5;
label2:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNaN(java.lang.String)>(v1);
if v6 == 0 goto label4;
v7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#NaNF);
return v7;
label3:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNegInf(java.lang.String)>(v1);
if v8 == 0 goto label4;
v9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#-InfinityF);
return v9;
label4:
return null;
}
protected final double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Double v21;
com.fasterxml.jackson.databind.cfg.CoercionAction v25, v26, v27, v6, v7, v8;
com.fasterxml.jackson.databind.DeserializationFeature v11;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v3;
com.fasterxml.jackson.core.JsonToken v13, v14;
java.lang.String v28, v4;
boolean v12, v29;
double v16, v17, v20, v22, v30, v9;
com.fasterxml.jackson.databind.type.LogicalType v23;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v10, v18, v24, v5;
java.lang.Object v15, v19;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label06;
case 2: goto label09;
case 3: goto label07;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label02;
case 8: goto label04;
case 9: goto label09;
case 10: goto label09;
case 11: goto label05;
default: goto label09;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v5 = <java.lang.Double: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToFloatCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
return 0.0;
label03:
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v8 goto label04;
return 0.0;
label04:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
return v9;
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0.0;
label06:
v10 = <java.lang.Double: java.lang.Class TYPE>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v10);
goto label10;
label07:
v11 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v11);
if v12 == 0 goto label09;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v13 != v14 goto label08;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v16 = virtualinvoke v15.<java.lang.Double: double doubleValue()>();
return v16;
label08:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v17;
label09:
v18 = <java.lang.Double: java.lang.Class TYPE>;
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v18, v1);
v20 = virtualinvoke v19.<java.lang.Number: double doubleValue()>();
return v20;
label10:
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Double _checkDoubleSpecialValue(java.lang.String)>(v4);
if v21 == null goto label11;
v22 = virtualinvoke v21.<java.lang.Double: double doubleValue()>();
return v22;
label11:
v23 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v24 = <java.lang.Double: java.lang.Class TYPE>;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v2, v4, v23, v24);
v26 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v25 != v26 goto label12;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return 0.0;
label12:
v27 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v25 != v27 goto label13;
return 0.0;
label13:
v28 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v28);
if v29 == 0 goto label14;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v28);
return 0.0;
label14:
v30 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v28);
return v30;
}
protected final double _parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v6;
java.lang.IllegalArgumentException v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v5;
java.lang.Object v7;
java.lang.String v2;
java.lang.Number v8;
double v3, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
label1:
v3 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDouble(java.lang.String)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = <java.lang.Double: java.lang.Class TYPE>;
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v5, v2, "not a valid `double` value (as String to convert)", v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v7);
v9 = virtualinvoke v8.<java.lang.Number: double doubleValue()>();
return v9;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected final double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v9;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v7;
com.fasterxml.jackson.core.StreamReadFeature v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v8;
java.lang.Object v10;
java.lang.String v3;
java.lang.Number v11;
boolean v5;
double v12, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
label1:
v4 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_DOUBLE_PARSER>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDouble(java.lang.String,boolean)>(v3, v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = <java.lang.Double: java.lang.Class TYPE>;
v9 = newarray (java.lang.Object)[0];
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v8, v3, "not a valid `double` value (as String to convert)", v9);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(v10);
v12 = virtualinvoke v11.<java.lang.Number: double doubleValue()>();
return v12;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected static final double _parseDouble(java.lang.String) throws java.lang.NumberFormatException
{
java.lang.String v0;
double v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDouble(java.lang.String,boolean)>(v0, 0);
return v1;
}
protected static final double _parseDouble(java.lang.String, boolean) throws java.lang.NumberFormatException
{
java.lang.String v0;
boolean v1;
double v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String,boolean)>(v0, v1);
return v2;
}
protected java.lang.Double _checkDoubleSpecialValue(java.lang.String)
{
java.lang.Double v5, v7, v9;
char v3;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1;
boolean v2, v4, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 != 0 goto label4;
v3 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
lookupswitch(v3)
{
case 45: goto label3;
case 73: goto label1;
case 78: goto label2;
default: goto label4;
};
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isPosInf(java.lang.String)>(v1);
if v4 == 0 goto label4;
v5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);
return v5;
label2:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNaN(java.lang.String)>(v1);
if v6 == 0 goto label4;
v7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);
return v7;
label3:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNegInf(java.lang.String)>(v1);
if v8 == 0 goto label4;
v9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#-Infinity);
return v9;
label4:
return null;
}
protected java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v9;
java.util.Date v11, v14, v18;
long v5;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v3;
java.lang.String v17, v4;
java.lang.Number v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.exc.StreamReadException v6;
java.lang.Class v13, v15, v7;
java.lang.Object v10, v12, v16;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label07;
case 2: goto label09;
case 3: goto label08;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label02;
case 8: goto label09;
case 9: goto label09;
case 10: goto label09;
case 11: goto label06;
default: goto label09;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
label03:
goto label05;
label04:
v6 := @caughtexception;
v7 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v9 = newarray (java.lang.Object)[0];
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[])>(v7, v8, "not a valid 64-bit `long` for creating `java.util.Date`", v9);
v5 = virtualinvoke v10.<java.lang.Number: long longValue()>();
label05:
v11 = new java.util.Date;
specialinvoke v11.<java.util.Date: void <init>(long)>(v5);
return v11;
label06:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v12;
label07:
v13 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v13);
goto label10;
label08:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v14;
label09:
v15 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v15, v1);
return v16;
label10:
v17 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v17, v2);
return v18;
catch com.fasterxml.jackson.core.exc.StreamReadException from label02 to label03 with label04;
}
protected java.util.Date _parseDateFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v19;
java.util.Date v16;
com.fasterxml.jackson.databind.cfg.CoercionAction v3, v6;
com.fasterxml.jackson.databind.DeserializationFeature v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int[] v9;
int v10, v11;
com.fasterxml.jackson.core.JsonToken v14, v18, v7, v8;
boolean v5;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v17;
java.lang.Object v12, v13, v15, v20;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v4 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v4);
if v5 != 0 goto label1;
v6 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v3 == v6 goto label6;
label1:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v7 != v8 goto label4;
v9 = <com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();
v11 = v9[v10];
tableswitch(v11)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label3;
default: goto label6;
};
label2:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v12;
label3:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v13;
label4:
if v5 == 0 goto label6;
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v7 != v14 goto label5;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v15;
label5:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label6:
v17 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v19 = newarray (java.lang.Object)[0];
v20 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v17, v18, v1, null, v19);
return v20;
}
protected java.util.Date _parseDate(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v13;
java.util.Date v10, v8;
com.fasterxml.jackson.databind.cfg.CoercionAction v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int[] v5;
int v6, v7;
java.lang.String v1, v14;
boolean v3, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.IllegalArgumentException v11;
java.lang.Class v12;
java.lang.Object v15;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
label1:
v3 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label5;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v1);
v5 = <com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();
v7 = v5[v6];
tableswitch(v7)
{
case 1: goto label2;
case 2: goto label4;
case 3: goto label4;
default: goto label4;
};
label2:
v8 = new java.util.Date;
specialinvoke v8.<java.util.Date: void <init>(long)>(0L);
label3:
return v8;
label4:
return null;
label5:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v1);
if v9 == 0 goto label7;
label6:
return null;
label7:
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.util.Date parseDate(java.lang.String)>(v1);
label8:
return v10;
label9:
v11 := @caughtexception;
v12 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v13 = newarray (java.lang.Object)[1];
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v11);
v13[0] = v14;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v12, v1, "not a valid representation (error: %s)", v13);
return v15;
catch java.lang.IllegalArgumentException from label1 to label3 with label9;
catch java.lang.IllegalArgumentException from label5 to label6 with label9;
catch java.lang.IllegalArgumentException from label7 to label8 with label9;
}
protected final java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider v3;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.NullValueProvider)>(v1, v2, v3);
return v4;
}
protected final java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.NullValueProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.cfg.CoercionAction v14, v16, v4;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v5;
com.fasterxml.jackson.core.JsonToken v17;
com.fasterxml.jackson.databind.JavaType v20;
java.lang.String v10, v11, v13, v19, v6;
boolean v18, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v3;
com.fasterxml.jackson.core.Base64Variant v9;
java.lang.Class v12;
java.lang.Object v15, v21, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.deser.NullValueProvider;
v4 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v5)
{
case 1: goto label05;
case 2: goto label09;
case 3: goto label09;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label06;
case 8: goto label07;
case 9: goto label08;
case 10: goto label08;
case 11: goto label09;
case 12: goto label02;
default: goto label09;
};
label01:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v6;
label02:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
v8 = v7 instanceof byte[];
if v8 == 0 goto label03;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.Base64Variant: java.lang.String encode(byte[],boolean)>(v7, 0);
return v10;
label03:
if v7 != null goto label04;
return null;
label04:
v11 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
return v11;
label05:
v12 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v12);
return v13;
label06:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/lang/String;");
goto label09;
label07:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/lang/String;");
goto label09;
label08:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkBooleanToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/lang/String;");
label09:
v14 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v4 != v14 goto label10;
v15 = interfaceinvoke v3.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v15;
label10:
v16 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v4 != v16 goto label11;
return "";
label11:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v18 = virtualinvoke v17.<com.fasterxml.jackson.core.JsonToken: boolean isScalarValue()>();
if v18 == 0 goto label12;
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();
if v19 == null goto label12;
return v19;
label12:
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v20, v1);
return v21;
}
protected boolean _hasTextualNull(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = "null";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
return v3;
}
protected final boolean _isNegInf(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v2, v4;
boolean v3, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = "-Infinity";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 != 0 goto label1;
v4 = "-INF";
v5 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v5 == 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
protected final boolean _isPosInf(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v2, v4;
boolean v3, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = "Infinity";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 != 0 goto label1;
v4 = "INF";
v5 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v5 == 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
protected final boolean _isNaN(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = "NaN";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
return v3;
}
protected static final boolean _isBlank(java.lang.String)
{
int v1, v2;
char v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
v2 = 0;
label1:
if v2 >= v1 goto label3;
v3 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v2);
if v3 <= 32 goto label2;
return 0;
label2:
v2 = v2 + 1;
goto label1;
label3:
return 1;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v3;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Class v4;
com.fasterxml.jackson.databind.cfg.CoercionAction v5;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(v1, v2, v3, v4);
return v5;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String, com.fasterxml.jackson.databind.type.LogicalType, java.lang.Class) throws java.io.IOException
{
java.lang.Object[] v19;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v16, v6;
com.fasterxml.jackson.databind.cfg.CoercionAction v10, v11, v12, v15, v17, v18, v7, v8;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v2, v20;
boolean v14, v5, v9;
com.fasterxml.jackson.core.StreamReadCapability v13;
com.fasterxml.jackson.databind.type.LogicalType v3;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Class v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.databind.type.LogicalType;
v4 := @parameter3: java.lang.Class;
v5 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v5 == 0 goto label1;
v6 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v3, v4, v6);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v1, v7, v4, v2, "empty String (\"\")");
return v8;
label1:
v9 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isBlank(java.lang.String)>(v2);
if v9 == 0 goto label2;
v10 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction)>(v3, v4, v10);
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v1, v11, v4, v2, "blank String (all whitespace)");
return v12;
label2:
v13 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS>;
v14 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v13);
if v14 == 0 goto label3;
v15 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;
return v15;
label3:
v16 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v3, v4, v16);
v18 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v17 != v18 goto label4;
v19 = newarray (java.lang.Object)[2];
v19[0] = v2;
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();
v19[1] = v20;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce String value (\"%s\") to %s (but might if coercion using `CoercionConfig` was enabled)", v19);
label4:
return v17;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.type.LogicalType v4;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v5;
com.fasterxml.jackson.databind.cfg.CoercionAction v11, v6, v7;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v3;
java.lang.String v10, v9;
java.lang.Number v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v5 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape Float>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v4, v3, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v6 != v7 goto label1;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Floating-point value (\u0001)");
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v2, v6, v3, v8, v10);
return v11;
label1:
return v6;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToStringCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v5;
java.lang.Class v3;
com.fasterxml.jackson.databind.cfg.CoercionAction v6;
java.lang.Number v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v5 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v1, v2, v3, v4, v5);
return v6;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToStringCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v5;
java.lang.Class v3;
com.fasterxml.jackson.databind.cfg.CoercionAction v6;
java.lang.Number v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v5 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape Float>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v1, v2, v3, v4, v5);
return v6;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkBooleanToStringCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v6;
com.fasterxml.jackson.databind.cfg.CoercionAction v7;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Boolean v5;
java.lang.Class v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean getBooleanValue()>();
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v4);
v6 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape Boolean>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v1, v2, v3, v5, v6);
return v7;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkToStringCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class, java.lang.Object, com.fasterxml.jackson.databind.cfg.CoercionInputShape) throws java.io.IOException
{
com.fasterxml.jackson.databind.type.LogicalType v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v5;
com.fasterxml.jackson.databind.cfg.CoercionAction v12, v7, v8;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v3;
java.lang.Object v4;
java.lang.String v10, v11, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: com.fasterxml.jackson.databind.cfg.CoercionInputShape;
v6 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Textual>;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v6, v3, v5);
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v7 != v8 goto label1;
v9 = virtualinvoke v5.<com.fasterxml.jackson.databind.cfg.CoercionInputShape: java.lang.String name()>();
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 value (\u0001)");
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v2, v7, v3, v4, v11);
return v12;
label1:
return v7;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToFloatCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.type.LogicalType v4;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v5;
com.fasterxml.jackson.databind.cfg.CoercionAction v11, v6, v7;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v3;
java.lang.String v10, v9;
java.lang.Number v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Float>;
v5 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v4, v3, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v6 != v7 goto label1;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Integer value (\u0001)");
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v2, v6, v3, v8, v10);
return v11;
label1:
return v6;
}
protected java.lang.Boolean _coerceBooleanFromInt(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser$NumberType v15, v16;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v5;
com.fasterxml.jackson.databind.cfg.CoercionAction v6;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int[] v7;
int v17, v8, v9;
java.lang.Boolean v13, v14, v19, v24;
java.lang.String v11, v12, v20, v21;
java.lang.Number v10;
boolean v18, v22, v23;
com.fasterxml.jackson.databind.type.LogicalType v4;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Class;
v4 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>;
v5 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v4, v3, v5);
v7 = <com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();
v9 = v7[v8];
tableswitch(v9)
{
case 1: goto label3;
case 2: goto label2;
case 3: goto label4;
case 4: goto label1;
default: goto label4;
};
label1:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Integer value (\u0001)");
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(v2, v6, v3, v10, v12);
v13 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v13;
label2:
return null;
label3:
v14 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v14;
label4:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();
v16 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
if v15 != v16 goto label7;
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
if v17 == 0 goto label5;
v18 = 1;
goto label6;
label5:
v18 = 0;
label6:
v19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v18);
return v19;
label7:
v20 = "0";
v21 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v22 = virtualinvoke v20.<java.lang.String: boolean equals(java.lang.Object)>(v21);
if v22 != 0 goto label8;
v23 = 1;
goto label9;
label8:
v23 = 0;
label9:
v24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v23);
return v24;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.cfg.CoercionAction, java.lang.Class, java.lang.Object, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v7;
com.fasterxml.jackson.databind.cfg.CoercionAction v2, v6;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v3;
java.lang.Object v4;
java.lang.String v5, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.cfg.CoercionAction;
v3 := @parameter2: java.lang.Class;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: java.lang.String;
v6 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v2 != v6 goto label1;
v7 = newarray (java.lang.Object)[2];
v7[0] = v5;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc(java.lang.Class)>(v3);
v7[1] = v8;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadCoercion(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(v0, v3, v4, "Cannot coerce %s to %s (but could if coercion was enabled using `CoercionConfig`)", v7);
label1:
return v2;
}
protected boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v4, v6;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.String v2;
boolean v3, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(v2);
if v3 == 0 goto label2;
v4 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v4);
if v5 != 0 goto label1;
v6 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(v1, 1, v6, "String \"null\"");
label1:
return 1;
label2:
return 0;
}
protected java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
long v8;
com.fasterxml.jackson.databind.DeserializationFeature v3, v6;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Long v9;
java.math.BigInteger v5;
java.lang.Number v10;
boolean v4, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();
return v5;
label1:
v6 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v6);
if v7 == 0 goto label2;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
v9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v8);
return v9;
label2:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v10;
}
protected final void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v4;
java.lang.String v5;
com.fasterxml.jackson.databind.DeserializationFeature v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v2);
if v3 == 0 goto label1;
v4 = newarray (java.lang.Object)[1];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();
v4[0] = v5;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce `null` to %s (disable `DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES` to allow)", v4);
label1:
return;
}
protected final void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v11;
com.fasterxml.jackson.databind.DeserializationFeature v7;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Enum v5;
java.lang.String v10, v2;
boolean v4, v6, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 != 0 goto label1;
v5 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v6 = 1;
goto label3;
label1:
v7 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v7);
if v8 == 0 goto label2;
v5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;
v6 = 0;
goto label3;
label2:
return;
label3:
v9 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v9 == 0 goto label4;
v10 = "empty String (\"\")";
goto label5;
label4:
v11 = newarray (java.lang.Object)[1];
v11[0] = v2;
v10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("String \"%s\"", v11);
label5:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(v1, v6, v5, v10);
return;
}
protected void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext, boolean, java.lang.Enum, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v6;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Enum v3;
java.lang.Class v8;
java.lang.String v10, v4, v5, v7, v9;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.Enum;
v4 := @parameter3: java.lang.String;
if v2 == 0 goto label1;
v5 = "enable";
goto label2;
label1:
v5 = "disable";
label2:
v6 = newarray (java.lang.Object)[5];
v6[0] = v4;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();
v6[1] = v7;
v6[2] = v5;
v8 = virtualinvoke v3.<java.lang.Enum: java.lang.Class getDeclaringClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getSimpleName()>();
v6[3] = v9;
v10 = virtualinvoke v3.<java.lang.Enum: java.lang.String name()>();
v6[4] = v10;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce %s to Null value as %s (%s `%s.%s` to allow)", v6);
return;
}
protected java.lang.String _coercedTypeDesc()
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v8;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v10, v7, v9;
boolean v2, v3, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType()>();
if v1 == null goto label4;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();
if v2 != 0 goto label4;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v3 != 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v4 == 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
v6 = v5;
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v1);
goto label5;
label4:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isCollectionMapOrArray(java.lang.Class)>(v8);
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v8);
label5:
if v6 == 0 goto label6;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("element of \u0001");
return v9;
label6:
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 value");
return v10;
}
protected java.lang.String _coercedTypeDesc(java.lang.Class)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v1;
java.lang.String v2, v4, v5;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(v1);
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isCollectionMapOrArray(java.lang.Class)>(v1);
if v3 == 0 goto label1;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("element of \u0001");
return v4;
label1:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 value");
return v5;
}
protected boolean _parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.String v3, v4;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)>(v2, v1);
v3 = "0";
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 != 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
protected void _verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v5;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Class v7;
java.lang.String v2, v6, v8, v9;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 != 0 goto label1;
v5 = newarray (java.lang.Object)[4];
v5[0] = v2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();
v5[1] = v6;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.MapperFeature: java.lang.Class getDeclaringClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getSimpleName()>();
v5[2] = v8;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.MapperFeature: java.lang.String name()>();
v5[3] = v9;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce String \"%s\" to %s (enable `%s.%s` to allow)", v5);
label1:
return;
}
protected java.lang.Object _coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.DeserializationFeature v7;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Enum v5;
java.lang.Object v9;
boolean v2, v4, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: boolean;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 != 0 goto label1;
v5 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v6 = 1;
goto label3;
label1:
if v2 == 0 goto label2;
v7 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v7);
if v8 == 0 goto label2;
v5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;
v6 = 0;
goto label3;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v9;
label3:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(v1, v6, v5, "empty String (\"\")");
return null;
}
protected void _failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v4;
java.lang.String v3, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v5 = newarray (java.lang.Object)[2];
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();
v5[0] = v6;
v5[1] = v3;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v4, "Cannot coerce a floating-point value (\'%s\') into %s (enable `DeserializationFeature.ACCEPT_FLOAT_AS_INT` to allow)", v5);
return;
}
protected final void _verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v7;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v3, v8;
java.lang.String v2, v6;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 != 0 goto label3;
v5 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v5 == 0 goto label1;
v6 = "empty String (\"\")";
goto label2;
label1:
v7 = newarray (java.lang.Object)[1];
v7[0] = v2;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("String \"%s\"", v7);
label2:
v8 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(v1, 1, v8, v6);
label3:
return;
}
protected void _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v6;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Class v8;
java.lang.String v10, v5, v7, v9;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 != 0 goto label1;
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v6 = newarray (java.lang.Object)[4];
v6[0] = v5;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();
v6[1] = v7;
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.MapperFeature: java.lang.Class getDeclaringClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getSimpleName()>();
v6[2] = v9;
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.MapperFeature: java.lang.String name()>();
v6[3] = v10;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce Number (%s) to %s (enable `%s.%s` to allow)", v6);
label1:
return;
}
protected java.lang.Object _coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v3;
}
protected java.lang.Object _coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.MapperFeature v3, v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object v6;
boolean v2, v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: boolean;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 != 0 goto label1;
v5 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(v1, 1, v5, "String \"null\"");
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v6;
}
protected boolean _isEmptyOrTextualNull(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.String v1, v3;
boolean v2, v4, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = "null";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v4 == 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
protected com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.JsonDeserializer v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3);
return v4;
}
protected final boolean _isIntNumber(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v2, v4;
char v3, v5;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
if v2 <= 0 goto label8;
v3 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
if v3 == 45 goto label1;
if v3 != 43 goto label3;
label1:
if v2 != 1 goto label2;
return 0;
label2:
v4 = 1;
goto label4;
label3:
v4 = 0;
label4:
if v4 >= v2 goto label7;
v5 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v4);
if v5 > 57 goto label5;
if v5 >= 48 goto label6;
label5:
return 0;
label6:
v4 = v4 + 1;
goto label4;
label7:
return 1;
label8:
return 0;
}
protected com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.util.Converter v9;
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer v12;
com.fasterxml.jackson.databind.type.TypeFactory v10;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v6, v8;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v11;
com.fasterxml.jackson.databind.JsonDeserializer v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>(v4, v2);
if v5 == 0 goto label2;
v6 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v6 == null goto label2;
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v6);
if v7 == null goto label2;
v8 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v8, v7);
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v11 = interfaceinvoke v9.<com.fasterxml.jackson.databind.util.Converter: com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory)>(v10);
if v3 != null goto label1;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v11, v2);
label1:
v12 = new com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
specialinvoke v12.<com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>(v9, v11, v3);
return v12;
label2:
return v3;
}
protected com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, java.lang.Class)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Class v3;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: java.lang.Class;
if v2 == null goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v5 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.'annotation'.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v4, v3);
return v5;
label1:
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(v3);
return v6;
}
protected java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, java.lang.Class, com.fasterxml.jackson.'annotation'.JsonFormat$Feature)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v4;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Boolean v6;
java.lang.Class v3;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: java.lang.Class;
v4 := @parameter3: com.fasterxml.jackson.'annotation'.JsonFormat$Feature;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v3);
if v5 == null goto label1;
v6 = virtualinvoke v5.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v4);
return v6;
label1:
return null;
}
protected final com.fasterxml.jackson.databind.deser.NullValueProvider findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.SettableBeanProperty, com.fasterxml.jackson.databind.PropertyMetadata) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v6;
com.fasterxml.jackson.databind.JsonDeserializer v5;
com.fasterxml.jackson.databind.deser.SettableBeanProperty v2;
com.fasterxml.jackson.'annotation'.Nulls v4;
com.fasterxml.jackson.databind.PropertyMetadata v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.SettableBeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.PropertyMetadata;
if v2 == null goto label1;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.PropertyMetadata: com.fasterxml.jackson.'annotation'.Nulls getValueNulls()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.'annotation'.Nulls,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v4, v5);
return v6;
label1:
return null;
}
protected com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.JavaType v12, v13, v9;
com.fasterxml.jackson.databind.JsonDeserializer v3;
boolean v10;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider v6;
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider v11, v14;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.deser.NullValueProvider v15;
java.lang.Class v8;
com.fasterxml.jackson.'annotation'.Nulls v4, v5, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.'annotation'.Nulls findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
v5 = <com.fasterxml.jackson.'annotation'.Nulls: com.fasterxml.jackson.'annotation'.Nulls SKIP>;
if v4 != v5 goto label1;
v6 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper()>();
return v6;
label1:
v7 = <com.fasterxml.jackson.'annotation'.Nulls: com.fasterxml.jackson.'annotation'.Nulls FAIL>;
if v4 != v7 goto label4;
if v2 != null goto label3;
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v8);
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v10 == 0 goto label2;
v9 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
label2:
v11 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(com.fasterxml.jackson.databind.JavaType)>(v9);
return v11;
label3:
v12 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.JavaType getType()>();
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v14 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>(v2, v13);
return v14;
label4:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.'annotation'.Nulls,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v4, v3);
if v15 == null goto label5;
return v15;
label5:
return v3;
}
protected com.fasterxml.jackson.'annotation'.Nulls findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.'annotation'.JsonSetter$Value v6;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.PropertyMetadata v3;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationConfig v5;
com.fasterxml.jackson.'annotation'.Nulls v4, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
if v2 == null goto label1;
v3 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.PropertyMetadata getMetadata()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.PropertyMetadata: com.fasterxml.jackson.'annotation'.Nulls getContentNulls()>();
return v4;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.'annotation'.JsonSetter$Value getDefaultSetterInfo()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.'annotation'.JsonSetter$Value: com.fasterxml.jackson.'annotation'.Nulls getContentNulls()>();
return v7;
}
protected final com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.'annotation'.Nulls, com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v15;
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider v24;
com.fasterxml.jackson.databind.util.AccessPattern v18, v19, v21;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.JavaType v14, v7;
java.lang.String v16;
com.fasterxml.jackson.databind.JsonDeserializer v4;
boolean v11, v13;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider v20, v23, v26;
com.fasterxml.jackson.databind.deser.ValueInstantiator v12;
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider v8, v9;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Class v6;
java.lang.Object v17, v22;
com.fasterxml.jackson.'annotation'.Nulls v10, v25, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.Nulls;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonDeserializer;
v5 = <com.fasterxml.jackson.'annotation'.Nulls: com.fasterxml.jackson.'annotation'.Nulls FAIL>;
if v3 != v5 goto label04;
if v2 != null goto label03;
if v4 != null goto label01;
v6 = class "Ljava/lang/Object;";
goto label02;
label01:
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();
label02:
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(v6);
v8 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(com.fasterxml.jackson.databind.JavaType)>(v7);
return v8;
label03:
v9 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty)>(v2);
return v9;
label04:
v10 = <com.fasterxml.jackson.'annotation'.Nulls: com.fasterxml.jackson.'annotation'.Nulls AS_EMPTY>;
if v3 != v10 goto label11;
if v4 != null goto label05;
return null;
label05:
v11 = v4 instanceof com.fasterxml.jackson.databind.deser.BeanDeserializerBase;
if v11 == 0 goto label08;
v12 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDefault()>();
if v13 != 0 goto label08;
if v2 != null goto label06;
v14 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.JavaType getValueType()>();
goto label07;
label06:
v14 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.JavaType getType()>();
label07:
v15 = newarray (java.lang.Object)[1];
v15[0] = v14;
v16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot create empty instance of %s, no default Creator", v15);
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v14, v16);
return v17;
label08:
v18 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern()>();
v19 = <com.fasterxml.jackson.databind.util.AccessPattern: com.fasterxml.jackson.databind.util.AccessPattern ALWAYS_NULL>;
if v18 != v19 goto label09;
v20 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller()>();
return v20;
label09:
v21 = <com.fasterxml.jackson.databind.util.AccessPattern: com.fasterxml.jackson.databind.util.AccessPattern CONSTANT>;
if v18 != v21 goto label10;
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
v23 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider forValue(java.lang.Object)>(v22);
return v23;
label10:
v24 = new com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider;
specialinvoke v24.<com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider: void <init>(com.fasterxml.jackson.databind.JsonDeserializer)>(v4);
return v24;
label11:
v25 = <com.fasterxml.jackson.'annotation'.Nulls: com.fasterxml.jackson.'annotation'.Nulls SKIP>;
if v3 != v25 goto label12;
v26 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper()>();
return v26;
label12:
return null;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v4;
java.lang.Class v3;
com.fasterxml.jackson.databind.cfg.CoercionAction v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v4 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v2, v3, v4);
return v5;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v4;
java.lang.Class v3;
com.fasterxml.jackson.databind.cfg.CoercionAction v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v4 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyArray>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v2, v3, v4);
return v5;
}
protected com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromBlankString(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Class v3;
com.fasterxml.jackson.databind.cfg.CoercionAction v4, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v4 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction)>(v2, v3, v4);
return v5;
}
protected void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v3;
java.lang.String v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.String;
if v3 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
label1:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String)>(v1, v0, v3, v4);
if v5 == 0 goto label2;
return;
label2:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
return;
}
protected void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v5;
com.fasterxml.jackson.core.JsonToken v3;
java.lang.String v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
v4 = newarray (java.lang.Object)[1];
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v4[0] = v6;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v0, v3, "Attempted to unwrap \'%s\' value from an array (with `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS`) but it contains more than one value", v4);
return;
}
protected java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v10, v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Class v4;
java.lang.Object v11;
com.fasterxml.jackson.core.JsonToken v6, v9;
com.fasterxml.jackson.databind.JavaType v8;
java.lang.String v5, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = newarray (java.lang.Object)[3];
v4 = v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v4);
v3[0] = v5;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v3[1] = v6;
v3[2] = "DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS";
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize instance of %s out of %s token: nested Arrays not allowed with %s", v3);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v10 = newarray (java.lang.Object)[0];
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v8, v9, v1, v7, v10);
return v11;
}
protected void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonToken v3, v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v3 == v4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label1:
return;
}
protected static final boolean _neitherNull(java.lang.Object, java.lang.Object)
{
java.lang.Object v0, v1;
boolean v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
if v0 == null goto label1;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
protected final boolean _byteOverflow(int)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v1, v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: int;
v2 = (int) -128;
if v1 < v2 goto label1;
if v1 <= 255 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
protected final boolean _shortOverflow(int)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
int v1, v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: int;
v2 = (int) -32768;
if v1 < v2 goto label1;
if v1 <= 32767 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
protected final boolean _intOverflow(long)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
byte v2, v3;
long v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: long;
v2 = v1 cmp -2147483648L;
if v2 < 0 goto label1;
v3 = v1 cmp 2147483647L;
if v3 <= 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
protected java.lang.Number _nonNullNumber(java.lang.Number)
{
com.fasterxml.jackson.databind.deser.std.StdDeserializer v0;
java.lang.Number v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdDeserializer;
v1 := @parameter0: java.lang.Number;
if v1 != null goto label1;
v1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
label1:
return v1;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.DeserializationFeature v0, v2, v5, v7;
int v1, v3, v4, v6, v8, v9;
v0 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();
v2 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();
v4 = v1 | v3;
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: int F_MASK_INT_COERCIONS> = v4;
v5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();
v7 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();
v9 = v6 | v8;
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: int F_MASK_ACCEPT_ARRAYS> = v9;
return;
}
}