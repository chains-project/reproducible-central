final class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR extends com.fasterxml.jackson.databind.deser.std.StdDeserializer
{
private static final long serialVersionUID;
protected static final java.lang.Object[] NO_OBJECTS;
public static final com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR std;
protected final boolean _nonMerging;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: void <init>(boolean)>(0);
return;
}
protected void <init>(boolean)
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Object;");
v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: boolean _nonMerging> = v1;
return;
}
public static com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR instance(boolean)
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v1, v2;
boolean v0;
v0 := @parameter0: boolean;
if v0 == 0 goto label1;
v1 = new com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
specialinvoke v1.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: void <init>(boolean)>(1);
return v1;
label1:
v2 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR std>;
return v2;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Untyped>;
return v1;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
java.lang.Boolean v3;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: boolean _nonMerging>;
if v2 == 0 goto label1;
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v17;
java.math.BigDecimal v19;
java.util.Map v8;
int v13, v3;
java.lang.Boolean v21, v22;
com.fasterxml.jackson.databind.JavaType v24;
java.lang.String v12;
java.lang.Number v16, v20;
boolean v14, v18, v5;
com.fasterxml.jackson.core.StreamReadCapability v4;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope v10, v6;
java.lang.Object v11, v15, v23, v25, v7, v9;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label01;
case 2: goto label02;
case 3: goto label04;
case 4: goto label14;
case 5: goto label03;
case 6: goto label05;
case 7: goto label06;
case 8: goto label08;
case 9: goto label10;
case 10: goto label11;
case 11: goto label12;
case 12: goto label13;
default: goto label14;
};
label01:
v4 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootObjectScope(boolean)>(v5);
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope)>(v1, v2, v6);
return v7;
label02:
v8 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: java.util.Map emptyMap()>();
return v8;
label03:
v9 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v9;
label04:
v10 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootArrayScope()>();
v11 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope)>(v1, v2, v10);
return v11;
label05:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v12;
label06:
v13 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: int F_MASK_INT_COERCIONS>;
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean hasSomeOfFeatures(int)>(v13);
if v14 == 0 goto label07;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v15;
label07:
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v16;
label08:
v17 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v17);
if v18 == 0 goto label09;
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
return v19;
label09:
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v20;
label10:
v21 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v21;
label11:
v22 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v22;
label12:
return null;
label13:
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v23;
label14:
v24 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v25 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v24, v1);
return v25;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
int v4, v6;
java.lang.Object v5, v7;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label1;
case 4: goto label2;
case 5: goto label1;
default: goto label2;
};
label1:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label2:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int)>(v1, v2, v6);
return v7;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException
{
int v6;
com.fasterxml.jackson.core.JsonToken v14, v15, v18, v19, v7, v8;
java.lang.String v10, v13;
boolean v16, v4, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v11, v12, v17, v20, v3, v5;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: boolean _nonMerging>;
if v4 == 0 goto label01;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label01:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v6)
{
case 1: goto label03;
case 2: goto label02;
case 3: goto label09;
case 4: goto label02;
case 5: goto label04;
default: goto label12;
};
label02:
return v3;
label03:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v7 != v8 goto label04;
return v3;
label04:
v9 = v3 instanceof java.util.Map;
if v9 == 0 goto label12;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label05:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v11 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v10);
if v11 == null goto label06;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v11);
goto label07;
label06:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label07:
if v12 == v11 goto label08;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v12);
label08:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
v10 = v13;
if v13 != null goto label05;
return v3;
label09:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v14 != v15 goto label10;
return v3;
label10:
v16 = v3 instanceof java.util.Collection;
if v16 == 0 goto label12;
label11:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
interfaceinvoke v3.<java.util.Collection: boolean add(java.lang.Object)>(v17);
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v18 != v19 goto label11;
return v3;
label12:
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v20;
}
private java.lang.Object _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.core.StreamReadCapability v3;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope v12, v5, v9;
int v13, v8;
java.lang.Object v10, v11, v14;
com.fasterxml.jackson.core.JsonToken v7;
java.lang.String v6;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v3);
v5 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootObjectScope(boolean)>(v4);
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label1:
if v6 == null goto label8;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v7 != null goto label2;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label2:
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonToken: int id()>();
tableswitch(v8)
{
case 1: goto label3;
case 2: goto label4;
case 3: goto label5;
default: goto label6;
};
label3:
v9 = virtualinvoke v5.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject()>();
v10 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope)>(v1, v2, v9);
goto label7;
label4:
v11 = virtualinvoke v5.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: java.lang.Object finishRootObject()>();
return v11;
label5:
v12 = virtualinvoke v5.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray()>();
v10 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope)>(v1, v2, v12);
goto label7;
label6:
v13 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonToken: int id()>();
v10 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int)>(v1, v2, v13);
label7:
virtualinvoke v5.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: void putValue(java.lang.String,java.lang.Object)>(v6, v10);
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label1;
label8:
v14 = virtualinvoke v5.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: java.lang.Object finishRootObject()>();
return v14;
}
private java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v15, v26, v6;
int v12, v22, v4;
com.fasterxml.jackson.core.JsonToken v11, v21;
com.fasterxml.jackson.databind.JavaType v18, v29;
java.lang.String v10;
java.lang.Number v17, v28;
boolean v16, v27, v5, v7, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope v3, v8;
java.lang.Object v13, v14, v19, v20, v23, v24, v25, v30;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope;
v4 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: int F_MASK_INT_COERCIONS>;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean hasSomeOfFeatures(int)>(v4);
v6 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY>;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v6);
v8 = v3;
label01:
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: boolean isObject()>();
if v9 == 0 goto label22;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
label02:
if v10 == null goto label20;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v11 != null goto label03;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label03:
v12 = virtualinvoke v11.<com.fasterxml.jackson.core.JsonToken: int id()>();
tableswitch(v12)
{
case 1: goto label04;
case 2: goto label17;
case 3: goto label05;
case 4: goto label17;
case 5: goto label17;
case 6: goto label06;
case 7: goto label07;
case 8: goto label10;
case 9: goto label13;
case 10: goto label14;
case 11: goto label15;
case 12: goto label16;
default: goto label17;
};
label04:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject(java.lang.String)>(v10);
goto label19;
label05:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray(java.lang.String)>(v10);
goto label01;
label06:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label18;
label07:
if v5 == 0 goto label08;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label09;
label08:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
label09:
v13 = v14;
goto label18;
label10:
v15 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v15);
if v16 == 0 goto label11;
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
goto label12;
label11:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
label12:
v13 = v17;
goto label18;
label13:
v13 = <java.lang.Boolean: java.lang.Boolean TRUE>;
goto label18;
label14:
v13 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label18;
label15:
v13 = null;
goto label18;
label16:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
goto label18;
label17:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v18, v1);
return v19;
label18:
virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: void putValue(java.lang.String,java.lang.Object)>(v10, v13);
label19:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label02;
label20:
if v8 != v3 goto label21;
v20 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: java.lang.Object finishRootObject()>();
return v20;
label21:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope finishBranchObject()>();
goto label01;
label22:
v21 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v21 != null goto label23;
v21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
label23:
v22 = virtualinvoke v21.<com.fasterxml.jackson.core.JsonToken: int id()>();
tableswitch(v22)
{
case 1: goto label24;
case 2: goto label39;
case 3: goto label25;
case 4: goto label26;
case 5: goto label39;
case 6: goto label28;
case 7: goto label29;
case 8: goto label32;
case 9: goto label35;
case 10: goto label36;
case 11: goto label37;
case 12: goto label38;
default: goto label39;
};
label24:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject()>();
goto label01;
label25:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray()>();
goto label01;
label26:
if v8 != v3 goto label27;
v23 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: java.lang.Object finishRootArray(boolean)>(v7);
return v23;
label27:
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope finishBranchArray(boolean)>(v7);
goto label01;
label28:
v24 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label40;
label29:
if v5 == 0 goto label30;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
goto label31;
label30:
v25 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
label31:
v24 = v25;
goto label40;
label32:
v26 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v27 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v26);
if v27 == 0 goto label33;
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
goto label34;
label33:
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
label34:
v24 = v28;
goto label40;
label35:
v24 = <java.lang.Boolean: java.lang.Boolean TRUE>;
goto label40;
label36:
v24 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label40;
label37:
v24 = null;
goto label40;
label38:
v24 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
goto label40;
label39:
v29 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v30 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v29, v1);
return v30;
label40:
virtualinvoke v8.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope: void addValue(java.lang.Object)>(v24);
goto label22;
}
private java.lang.Object _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, int) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v5, v9;
java.math.BigDecimal v11;
int v3;
java.lang.Boolean v13, v14;
java.math.BigInteger v7;
com.fasterxml.jackson.databind.JavaType v16;
java.lang.String v4;
java.lang.Number v12, v8;
boolean v10, v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v15, v17;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: int;
tableswitch(v3)
{
case 6: goto label01;
case 7: goto label02;
case 8: goto label04;
case 9: goto label06;
case 10: goto label07;
case 11: goto label09;
case 12: goto label08;
default: goto label10;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v4;
label02:
v5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v5);
if v6 == 0 goto label03;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();
return v7;
label03:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v8;
label04:
v9 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v9);
if v10 == 0 goto label05;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
return v11;
label05:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v12;
label06:
v13 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v13;
label07:
v14 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v14;
label08:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v15;
label09:
return null;
label10:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v16, v1);
return v17;
}
protected java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map, java.lang.String, java.lang.Object, java.lang.Object, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.StreamReadCapability v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.Map v3;
java.lang.Object v10, v11, v5, v6;
java.lang.String v4, v7;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: java.lang.String;
v8 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v8);
if v9 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object)>(v3, v4, v5, v6);
label1:
if v7 == null goto label3;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v11 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v10);
if v11 == null goto label2;
if v9 == 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object)>(v3, v7, v11, v10);
label2:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label1;
label3:
return v3;
}
private void _squashDups(java.util.Map, java.lang.String, java.lang.Object, java.lang.Object)
{
java.util.Map v1;
java.lang.Object v3, v4;
java.lang.String v2;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v0;
boolean v5;
java.util.ArrayList v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 = v3 instanceof java.util.List;
if v5 == 0 goto label1;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
goto label2;
label1:
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>()>();
virtualinvoke v6.<java.util.ArrayList: boolean add(java.lang.Object)>(v3);
virtualinvoke v6.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v6);
label2:
return;
}
static void <clinit>()
{
java.lang.Object[] v0;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR v1;
v0 = newarray (java.lang.Object)[0];
<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: java.lang.Object[] NO_OBJECTS> = v0;
v1 = new com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR;
specialinvoke v1.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR std> = v1;
return;
}
}