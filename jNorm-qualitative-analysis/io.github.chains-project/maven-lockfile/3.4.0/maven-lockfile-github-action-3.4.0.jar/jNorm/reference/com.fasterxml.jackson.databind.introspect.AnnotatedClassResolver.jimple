public class com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver extends java.lang.Object
{
private static final com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS;
private static final java.lang.Class CLS_OBJECT;
private static final java.lang.Class CLS_ENUM;
private static final java.lang.Class CLS_LIST;
private static final java.lang.Class CLS_MAP;
private final com.fasterxml.jackson.databind.cfg.MapperConfig _config;
private final com.fasterxml.jackson.databind.AnnotationIntrospector _intr;
private final com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver;
private final com.fasterxml.jackson.databind.type.TypeBindings _bindings;
private final com.fasterxml.jackson.databind.JavaType _type;
private final java.lang.Class _class;
private final java.lang.Class _primaryMixin;
private final boolean _collectAnnotations;
void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v10, v7;
com.fasterxml.jackson.databind.type.TypeBindings v5;
com.fasterxml.jackson.databind.JavaType v13, v2;
boolean v12, v14, v15, v6;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v11, v4, v8, v9;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.cfg.MapperConfig _config> = v1;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type> = v2;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class> = v4;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver> = v3;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.type.TypeBindings _bindings> = v5;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isAnnotationProcessingEnabled()>();
if v6 == 0 goto label1;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
goto label2;
label1:
v7 = null;
label2:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr> = v7;
if v3 != null goto label3;
v8 = null;
goto label4;
label3:
v9 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v8 = interfaceinvoke v3.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(v9);
label4:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin> = v8;
v10 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
if v10 == null goto label6;
v11 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isJDKClass(java.lang.Class)>(v11);
if v12 == 0 goto label5;
v13 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v14 != 0 goto label6;
label5:
v15 = 1;
goto label7;
label6:
v15 = 0;
label7:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations> = v15;
return;
}
void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v6, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
com.fasterxml.jackson.databind.type.TypeBindings v4;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v2, v7, v8;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v3;
boolean v10, v5;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.cfg.MapperConfig _config> = v1;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type> = null;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class> = v2;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver> = v3;
v4 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.type.TypeBindings _bindings> = v4;
if v1 != null goto label1;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr> = null;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin> = null;
goto label6;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isAnnotationProcessingEnabled()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
goto label3;
label2:
v6 = null;
label3:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr> = v6;
if v3 != null goto label4;
v7 = null;
goto label5;
label4:
v8 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v7 = interfaceinvoke v3.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(v8);
label5:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin> = v7;
label6:
v9 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
if v9 == null goto label7;
v10 = 1;
goto label8;
label7:
v10 = 0;
label8:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations> = v10;
return;
}
public static com.fasterxml.jackson.databind.introspect.AnnotatedClass resolve(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
{
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v8;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v7, v9;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v4, v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v2;
boolean v3, v5;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v4);
if v5 == 0 goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v6);
return v7;
label1:
v8 = new com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
specialinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(v0, v1, v2);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveFully()>();
return v9;
}
public static com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(v0, v1, v0);
return v2;
}
public static com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
{
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v8;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v7, v9;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v4, v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v2;
boolean v3, v5;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v4);
if v5 == 0 goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v6);
return v7;
label1:
v8 = new com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
specialinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(v0, v1, v2);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes()>();
return v9;
}
public static com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
{
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v6;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v5, v7;
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v2;
boolean v3, v4;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v3 = virtualinvoke v1.<java.lang.Class: boolean isArray()>();
if v3 == 0 goto label1;
v4 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v1);
if v4 == 0 goto label1;
v5 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v1);
return v5;
label1:
v6 = new com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
specialinvoke v6.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(v0, v1, v2);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes()>();
return v7;
}
private static boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1, v2;
boolean v3;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
if v0 == null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.cfg.MapperConfig: java.lang.Class findMixInClassFor(java.lang.Class)>(v1);
if v2 != null goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
static com.fasterxml.jackson.databind.introspect.AnnotatedClass createPrimordial(java.lang.Class)
{
java.lang.Class v0;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v1;
v0 := @parameter0: java.lang.Class;
v1 = new com.fasterxml.jackson.databind.introspect.AnnotatedClass;
specialinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(java.lang.Class)>(v0);
return v1;
}
static com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.cfg.MapperConfig v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
v0 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v1 := @parameter1: java.lang.Class;
v2 = new com.fasterxml.jackson.databind.introspect.AnnotatedClass;
specialinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(java.lang.Class)>(v1);
return v2;
}
com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveFully()
{
com.fasterxml.jackson.databind.AnnotationIntrospector v14;
java.util.ArrayList v1;
com.fasterxml.jackson.databind.util.Annotations v12;
com.fasterxml.jackson.databind.type.TypeFactory v17;
com.fasterxml.jackson.databind.type.TypeBindings v13;
com.fasterxml.jackson.databind.JavaType v2, v4, v6, v7, v9;
boolean v18, v3, v5;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v8;
com.fasterxml.jackson.databind.cfg.MapperConfig v16;
java.lang.Class v10, v11;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v15;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>(int)>(8);
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");
if v3 != 0 goto label2;
v4 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: boolean isInterface()>();
if v5 == 0 goto label1;
v6 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type>;
staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void _addSuperInterfaces(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean)>(v6, v1, 0);
goto label2;
label1:
v7 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type>;
staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean)>(v7, v1, 0);
label2:
v8 = new com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v9 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.JavaType _type>;
v10 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v11 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin>;
v12 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List)>(v1);
v13 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v14 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v15 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v16 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.cfg.MapperConfig _config>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v18 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations>;
specialinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,boolean)>(v9, v10, v1, v11, v12, v13, v14, v15, v17, v18);
return v8;
}
com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes()
{
com.fasterxml.jackson.databind.AnnotationIntrospector v7;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
com.fasterxml.jackson.databind.util.Annotations v5;
java.util.List v1;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
com.fasterxml.jackson.databind.type.TypeFactory v10;
com.fasterxml.jackson.databind.type.TypeBindings v6;
com.fasterxml.jackson.databind.cfg.MapperConfig v9;
java.lang.Class v3, v4;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v8;
boolean v11;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v2 = new com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v4 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin>;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List)>(v1);
v6 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v7 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v8 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v9 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.cfg.MapperConfig _config>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v11 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations>;
specialinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,boolean)>(null, v3, v1, v4, v5, v6, v7, v8, v10, v11);
return v2;
}
private static void _addSuperTypes(com.fasterxml.jackson.databind.JavaType, java.util.List, boolean)
{
java.util.Iterator v8;
java.util.List v1, v7;
java.lang.Class v3, v4, v5;
java.lang.Object v10;
com.fasterxml.jackson.databind.JavaType v0, v11;
boolean v2, v6, v9;
v0 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter1: java.util.List;
v2 := @parameter2: boolean;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_OBJECT>;
if v3 == v4 goto label1;
v5 = <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_ENUM>;
if v3 != v5 goto label2;
label1:
return;
label2:
if v2 == 0 goto label4;
v6 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _contains(java.util.List,java.lang.Class)>(v1, v3);
if v6 == 0 goto label3;
return;
label3:
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v0);
label4:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: java.util.List getInterfaces()>();
v8 = interfaceinvoke v7.<java.util.List: java.util.Iterator iterator()>();
label5:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label6;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void _addSuperInterfaces(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean)>(v10, v1, 1);
goto label5;
label6:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getSuperClass()>();
if v11 == null goto label7;
staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean)>(v11, v1, 1);
label7:
return;
}
private static void _addSuperInterfaces(com.fasterxml.jackson.databind.JavaType, java.util.List, boolean)
{
java.util.Iterator v8;
java.util.List v1, v7;
java.lang.Class v3, v5, v6;
java.lang.Object v10;
com.fasterxml.jackson.databind.JavaType v0;
boolean v2, v4, v9;
v0 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter1: java.util.List;
v2 := @parameter2: boolean;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v2 == 0 goto label3;
v4 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _contains(java.util.List,java.lang.Class)>(v1, v3);
if v4 == 0 goto label1;
return;
label1:
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v0);
v5 = <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_LIST>;
if v3 == v5 goto label2;
v6 = <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_MAP>;
if v3 != v6 goto label3;
label2:
return;
label3:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.JavaType: java.util.List getInterfaces()>();
v8 = interfaceinvoke v7.<java.util.List: java.util.Iterator iterator()>();
label4:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label5;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: void _addSuperInterfaces(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean)>(v10, v1, 1);
goto label4;
label5:
return;
}
private static boolean _contains(java.util.List, java.lang.Class)
{
java.util.List v0;
int v2, v3;
java.lang.Class v1, v5;
java.lang.Object v4;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.Class;
v2 = 0;
v3 = interfaceinvoke v0.<java.util.List: int size()>();
label1:
if v2 >= v3 goto label3;
v4 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(v2);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v5 != v1 goto label2;
return 1;
label2:
v2 = v2 + 1;
goto label1;
label3:
return 0;
}
private com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
boolean v10, v11, v17, v21, v26, v6, v8, v9;
java.util.List v1;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v24, v29, v4, v5, v7;
java.lang.'annotation'.Annotation[] v19, v28;
com.fasterxml.jackson.databind.util.Annotations v12, v3, v31;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v13;
java.util.Iterator v20;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
java.lang.Class v14, v15, v16, v18, v23, v25, v27, v30;
java.lang.Object v22;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 := @parameter0: java.util.List;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
if v2 != null goto label01;
v3 = <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS>;
return v3;
label01:
v4 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
if v4 == null goto label03;
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v6 = v5 instanceof com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
if v6 == 0 goto label02;
v7 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: boolean hasMixIns()>();
if v8 == 0 goto label03;
label02:
v9 = 1;
goto label04;
label03:
v9 = 0;
label04:
v10 = v9;
if v9 != 0 goto label05;
v11 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations>;
if v11 != 0 goto label05;
v12 = <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS>;
return v12;
label05:
v13 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector()>();
v14 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin>;
if v14 == null goto label06;
v15 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v16 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _primaryMixin>;
v13 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class)>(v13, v15, v16);
label06:
v17 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations>;
if v17 == 0 goto label07;
v18 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class _class>;
v19 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v18);
v13 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v13, v19);
label07:
v20 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label08:
v21 = interfaceinvoke v20.<java.util.Iterator: boolean hasNext()>();
if v21 == 0 goto label10;
v22 = interfaceinvoke v20.<java.util.Iterator: java.lang.Object next()>();
if v10 == 0 goto label09;
v23 = virtualinvoke v22.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v24 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v25 = interfaceinvoke v24.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(v23);
v13 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class)>(v13, v23, v25);
label09:
v26 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: boolean _collectAnnotations>;
if v26 == 0 goto label08;
v27 = virtualinvoke v22.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v28 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v27);
v13 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v13, v28);
goto label08;
label10:
if v10 == 0 goto label11;
v29 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v30 = interfaceinvoke v29.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(class "Ljava/lang/Object;");
v13 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class)>(v13, class "Ljava/lang/Object;", v30);
label11:
v31 = virtualinvoke v13.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.util.Annotations asAnnotations()>();
return v31;
}
private com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.Class, java.lang.Class)
{
java.util.Iterator v6;
java.lang.'annotation'.Annotation[] v4, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
java.util.List v5;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1;
java.lang.Class v2, v3;
java.lang.Object v8;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.lang.Class;
if v3 == null goto label2;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v3);
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v1, v4);
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List findSuperClasses(java.lang.Class,java.lang.Class,boolean)>(v3, v2, 0);
v6 = interfaceinvoke v5.<java.util.List: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label2;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v8);
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v1, v9);
goto label1;
label2:
return v1;
}
private com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.'annotation'.Annotation[])
{
com.fasterxml.jackson.databind.AnnotationIntrospector v7;
java.lang.'annotation'.Annotation[] v2;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1;
int v3, v4;
java.lang.'annotation'.Annotation v5;
boolean v6, v8;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
if v2 == null goto label3;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: boolean isPresent(java.lang.'annotation'.Annotation)>(v5);
if v6 != 0 goto label2;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v5);
v7 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v5);
if v8 == 0 goto label2;
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v1, v5);
label2:
v4 = v4 + 1;
goto label1;
label3:
return v1;
}
private com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector, java.lang.'annotation'.Annotation)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v11;
java.lang.'annotation'.Annotation[] v4;
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver v0;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v1;
int v5, v6;
java.lang.'annotation'.Annotation v2, v7;
java.lang.Class v3;
boolean v10, v12, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationCollector;
v2 := @parameter1: java.lang.'annotation'.Annotation;
v3 = interfaceinvoke v2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.'annotation'.Annotation[] findClassAnnotations(java.lang.Class)>(v3);
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label3;
v7 = v4[v6];
v8 = v7 instanceof java.lang.'annotation'.Target;
if v8 != 0 goto label2;
v9 = v7 instanceof java.lang.'annotation'.Retention;
if v9 != 0 goto label2;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: boolean isPresent(java.lang.'annotation'.Annotation)>(v7);
if v10 != 0 goto label2;
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.'annotation'.Annotation)>(v7);
v11 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.AnnotationIntrospector: boolean isAnnotationBundle(java.lang.'annotation'.Annotation)>(v7);
if v12 == 0 goto label2;
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>(v1, v7);
label2:
v6 = v6 + 1;
goto label1;
label3:
return v1;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.util.Annotations v0;
v0 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.util.Annotations emptyAnnotations()>();
<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS> = v0;
<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_OBJECT> = class "Ljava/lang/Object;";
<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_ENUM> = class "Ljava/lang/Enum;";
<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_LIST> = class "Ljava/util/List;";
<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: java.lang.Class CLS_MAP> = class "Ljava/util/Map;";
return;
}
}