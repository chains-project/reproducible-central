public final class com.fasterxml.jackson.databind.introspect.AnnotatedField extends com.fasterxml.jackson.databind.introspect.AnnotatedMember implements java.io.Serializable
{
private static final long serialVersionUID;
protected final transient java.lang.reflect.Field _field;
protected com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization;
public void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, java.lang.reflect.Field, com.fasterxml.jackson.databind.introspect.AnnotationMap)
{
com.fasterxml.jackson.databind.introspect.AnnotationMap v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter1: java.lang.reflect.Field;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotationMap;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap)>(v1, v3);
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field> = v2;
return;
}
public com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
{
com.fasterxml.jackson.databind.introspect.AnnotationMap v1;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v3;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0, v2;
java.lang.reflect.Field v4;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;
v2 = new com.fasterxml.jackson.databind.introspect.AnnotatedField;
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext>;
v4 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
specialinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedField: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)>(v3, v4, v1);
return v2;
}
protected void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization)
{
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap)>(null, null);
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field> = null;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization> = v1;
return;
}
public java.lang.reflect.Field getAnnotated()
{
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
return v1;
}
public int getModifiers()
{
int v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v2 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
return v2;
}
public java.lang.String getName()
{
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.String v2;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.String getName()>();
return v2;
}
public java.lang.Class getRawType()
{
java.lang.Class v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.Class getType()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType getType()
{
java.lang.reflect.Type v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext>;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v3 = virtualinvoke v2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
v4 = interfaceinvoke v1.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext: com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type)>(v3);
return v4;
}
public java.lang.Class getDeclaringClass()
{
java.lang.Class v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
return v2;
}
public java.lang.reflect.Member getMember()
{
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
return v1;
}
public void setValue(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException
{
java.lang.IllegalAccessException v4;
java.lang.IllegalArgumentException v5;
java.lang.reflect.Field v3;
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.String v6, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
virtualinvoke v3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(v1, v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String getFullName()>();
v7 = virtualinvoke v4.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to setValue() for field \u0001: \u0001");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v8, v4);
throw v5;
label4:
return;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
}
public java.lang.Object getValue(java.lang.Object) throws java.lang.IllegalArgumentException
{
java.lang.IllegalAccessException v4;
java.lang.IllegalArgumentException v5;
java.lang.reflect.Field v2;
java.lang.Object v1, v3;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.String v6, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v3 = virtualinvoke v2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String getFullName()>();
v7 = virtualinvoke v4.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to getValue() for field \u0001: \u0001");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v8, v4);
throw v5;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
}
public int getAnnotationCount()
{
int v2;
com.fasterxml.jackson.databind.introspect.AnnotationMap v1;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotationMap: int size()>();
return v2;
}
public boolean isTransient()
{
int v1;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: int getModifiers()>();
v2 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(v1);
return v2;
}
public int hashCode()
{
int v3;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.String v2;
java.lang.reflect.Field v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.String getName()>();
v3 = virtualinvoke v2.<java.lang.String: int hashCode()>();
return v3;
}
public boolean equals(java.lang.Object)
{
java.lang.reflect.Field v4, v5, v7, v8;
java.lang.Class v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
boolean v3, v6, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class)>(v1, v2);
if v3 != 0 goto label2;
return 0;
label2:
v4 = v1.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
if v4 != null goto label5;
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
if v5 != null goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
label5:
v7 = v1.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v8 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
v9 = virtualinvoke v7.<java.lang.reflect.Field: boolean equals(java.lang.Object)>(v8);
return v9;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.introspect.AnnotatedField v0;
java.lang.String v1, v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String getFullName()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[field \u0001]");
return v2;
}
java.lang.Object writeReplace()
{
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0, v1;
java.lang.reflect.Field v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = new com.fasterxml.jackson.databind.introspect.AnnotatedField;
v2 = new com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization;
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.reflect.Field _field>;
specialinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization: void <init>(java.lang.reflect.Field)>(v3);
specialinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedField: void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization)>(v2);
return v1;
}
java.lang.Object readResolve()
{
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization v1, v10, v3;
java.lang.IllegalArgumentException v9;
java.lang.reflect.Field v5;
java.lang.Exception v8;
java.lang.Class v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v0, v7;
java.lang.String v11, v12, v13, v4;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedField;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization>;
v2 = v1.<com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization: java.lang.Class clazz>;
label1:
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization>;
v4 = v3.<com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization: java.lang.String name>;
v5 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(v4);
v6 = virtualinvoke v5.<java.lang.reflect.Field: boolean isAccessible()>();
if v6 != 0 goto label2;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>(v5, 0);
label2:
v7 = new com.fasterxml.jackson.databind.introspect.AnnotatedField;
specialinvoke v7.<com.fasterxml.jackson.databind.introspect.AnnotatedField: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)>(null, v5, null);
label3:
return v7;
label4:
v8 := @caughtexception;
v9 = new java.lang.IllegalArgumentException;
v10 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization>;
v11 = v10.<com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization: java.lang.String name>;
v12 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v11, v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not find method \'\u0001\' from Class \'\u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v13);
throw v9;
catch java.lang.Exception from label1 to label3 with label4;
}
}