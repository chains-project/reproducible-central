public class com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty extends java.lang.Object implements com.fasterxml.jackson.databind.introspect.TypeResolutionContext
{
private final com.fasterxml.jackson.databind.type.TypeFactory _typeFactory;
public void <init>(com.fasterxml.jackson.databind.type.TypeFactory)
{
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty v0;
com.fasterxml.jackson.databind.type.TypeFactory v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = v1;
return;
}
public com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type)
{
com.fasterxml.jackson.databind.type.TypeFactory v2;
java.lang.reflect.Type v1;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty;
v1 := @parameter0: java.lang.reflect.Type;
v2 = v0.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
return v3;
}
}