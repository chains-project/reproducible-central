public class com.fasterxml.jackson.databind.jsonschema.JsonSchema extends java.lang.Object
{
private final com.fasterxml.jackson.databind.node.ObjectNode schema;
public void <init>(com.fasterxml.jackson.databind.node.ObjectNode)
{
com.fasterxml.jackson.databind.jsonschema.JsonSchema v0;
com.fasterxml.jackson.databind.node.ObjectNode v1;
v0 := @this: com.fasterxml.jackson.databind.jsonschema.JsonSchema;
v1 := @parameter0: com.fasterxml.jackson.databind.node.ObjectNode;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema> = v1;
return;
}
public com.fasterxml.jackson.databind.node.ObjectNode getSchemaNode()
{
com.fasterxml.jackson.databind.jsonschema.JsonSchema v0;
com.fasterxml.jackson.databind.node.ObjectNode v1;
v0 := @this: com.fasterxml.jackson.databind.jsonschema.JsonSchema;
v1 = v0.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
return v1;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.jsonschema.JsonSchema v0;
java.lang.String v2;
com.fasterxml.jackson.databind.node.ObjectNode v1;
v0 := @this: com.fasterxml.jackson.databind.jsonschema.JsonSchema;
v1 = v0.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.ObjectNode: java.lang.String toString()>();
return v2;
}
public int hashCode()
{
int v2;
com.fasterxml.jackson.databind.jsonschema.JsonSchema v0;
com.fasterxml.jackson.databind.node.ObjectNode v1;
v0 := @this: com.fasterxml.jackson.databind.jsonschema.JsonSchema;
v1 = v0.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.ObjectNode: int hashCode()>();
return v2;
}
public boolean equals(java.lang.Object)
{
com.fasterxml.jackson.databind.node.ObjectNode v3, v4, v6, v7;
com.fasterxml.jackson.databind.jsonschema.JsonSchema v0;
java.lang.Object v1;
boolean v2, v5, v8;
v0 := @this: com.fasterxml.jackson.databind.jsonschema.JsonSchema;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.jsonschema.JsonSchema;
if v2 != 0 goto label3;
return 0;
label3:
v3 = v0.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
if v3 != null goto label6;
v4 = v1.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
if v4 != null goto label4;
v5 = 1;
goto label5;
label4:
v5 = 0;
label5:
return v5;
label6:
v6 = v0.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
v7 = v1.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.node.ObjectNode schema>;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>(v7);
return v8;
}
public static com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode()
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v0;
com.fasterxml.jackson.databind.node.ObjectNode v1;
v0 = <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.JsonNodeFactory instance>;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
virtualinvoke v1.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String)>("type", "any");
return v1;
}
}