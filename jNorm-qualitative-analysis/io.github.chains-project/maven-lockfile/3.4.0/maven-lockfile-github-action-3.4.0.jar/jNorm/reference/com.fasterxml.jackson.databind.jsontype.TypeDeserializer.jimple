public abstract class com.fasterxml.jackson.databind.jsontype.TypeDeserializer extends java.lang.Object
{
public void <init>()
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
public abstract com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion();
public abstract java.lang.String getPropertyName();
public abstract com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver();
public abstract java.lang.Class getDefaultImpl();
public boolean hasDefaultImpl()
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v0;
java.lang.Class v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Class getDefaultImpl()>();
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public abstract java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
public abstract java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
public abstract java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
public abstract java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
public static java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.core.JsonParser v0;
java.lang.Class v3;
java.lang.Object v4;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v0, v1, v3);
return v4;
}
public static java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
{
java.lang.Double v14;
java.lang.Integer v11;
int[] v4;
int v10, v5, v6;
java.lang.Boolean v16, v18;
com.fasterxml.jackson.core.JsonToken v3;
java.lang.String v8;
boolean v12, v15, v17, v7, v9;
double v13;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.core.JsonParser v0;
java.lang.Class v2;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter2: java.lang.Class;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v3 != null goto label1;
return null;
label1:
v4 = <com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
v6 = v4[v5];
tableswitch(v6)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
case 4: goto label5;
case 5: goto label6;
default: goto label7;
};
label2:
v7 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/String;");
if v7 == 0 goto label7;
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v8;
label3:
v9 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Integer;");
if v9 == 0 goto label7;
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v10);
return v11;
label4:
v12 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Double;");
if v12 == 0 goto label7;
v13 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
v14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v13);
return v14;
label5:
v15 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Boolean;");
if v15 == 0 goto label7;
v16 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v16;
label6:
v17 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Boolean;");
if v17 == 0 goto label7;
v18 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v18;
label7:
return null;
}
}