public class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer extends com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase implements java.io.Serializable
{
private static final long serialVersionUID;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String, boolean, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
com.fasterxml.jackson.databind.JavaType v1, v5;
java.lang.String v3;
boolean v4;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v5);
return;
}
public void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0, v1;
com.fasterxml.jackson.databind.BeanProperty v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
return;
}
public com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0, v3;
com.fasterxml.jackson.databind.BeanProperty v1, v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.BeanProperty _property>;
if v1 != v2 goto label1;
v3 = v0;
goto label2;
label1:
v3 = new com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>(v0, v1);
label2:
return v3;
}
public com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
{
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_ARRAY>;
return v1;
}
public java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
public java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
public java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
public java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
protected java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v24;
com.fasterxml.jackson.core.JsonToken v11, v16, v17, v20, v21, v23;
com.fasterxml.jackson.databind.JavaType v22;
java.lang.String v14, v7;
com.fasterxml.jackson.databind.JsonDeserializer v8;
boolean v10, v12, v3, v6, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1, v15;
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
java.lang.Object v18, v19, v4, v5;
com.fasterxml.jackson.databind.util.TokenBuffer v13;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean canReadTypeId()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getTypeId()>();
if v4 == null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v4);
return v5;
label1:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v7);
v9 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: boolean _typeIdVisible>;
if v9 == 0 goto label2;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: boolean _usesExternalId()>();
if v10 != 0 goto label2;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v11);
if v12 == 0 goto label2;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser)>(v1);
virtualinvoke v13.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();
v14 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.String _typePropertyName>;
virtualinvoke v13.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>(v14);
virtualinvoke v13.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>(v7);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
v15 = virtualinvoke v13.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser)>(v1);
v1 = staticinvoke <com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)>(0, v15, v1);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
label2:
if v6 == 0 goto label3;
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v16 != v17 goto label3;
v18 = virtualinvoke v8.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v18;
label3:
v19 = virtualinvoke v8.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
if v6 == 0 goto label4;
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v20 == v21 goto label4;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.JavaType baseType()>();
v23 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
v24 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v22, v23, "expected closing `JsonToken.END_ARRAY` after type information and deserialized value", v24);
label4:
return v19;
}
protected java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v11, v18;
com.fasterxml.jackson.core.JsonToken v12, v13, v17, v8;
com.fasterxml.jackson.databind.JavaType v16, v4, v7;
java.lang.String v10, v15, v19, v6, v9;
boolean v14, v3;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v5;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v3 != 0 goto label2;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.JavaType _defaultImpl>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v6 = interfaceinvoke v5.<com.fasterxml.jackson.databind.jsontype.TypeIdResolver: java.lang.String idFromBaseType()>();
return v6;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.JavaType baseType()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.String baseTypeName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("need Array value to contain `As.WRAPPER_ARRAY` type information for class \u0001");
v11 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v7, v8, v10, v11);
return null;
label2:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v12 == v13 goto label3;
if v12 == null goto label4;
v14 = virtualinvoke v12.<com.fasterxml.jackson.core.JsonToken: boolean isScalarValue()>();
if v14 == 0 goto label4;
label3:
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
return v15;
label4:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.JavaType baseType()>();
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v18 = newarray (java.lang.Object)[1];
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.String baseTypeName()>();
v18[0] = v19;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v16, v17, "need String, Number of Boolean value that contains type id (for subtype of %s)", v18);
return null;
}
protected boolean _usesExternalId()
{
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
return 0;
}
}