public class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer extends com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase implements java.io.Serializable
{
private static final long serialVersionUID;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String, boolean, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
com.fasterxml.jackson.databind.JavaType v1, v5;
java.lang.String v3;
boolean v4;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v5);
return;
}
protected void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0, v1;
com.fasterxml.jackson.databind.BeanProperty v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
return;
}
public com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.BeanProperty v1, v2;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0, v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: com.fasterxml.jackson.databind.BeanProperty _property>;
if v1 != v2 goto label1;
v3 = v0;
goto label2;
label1:
v3 = new com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>(v0, v1);
label2:
return v3;
}
public com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_OBJECT>;
return v1;
}
public java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
public java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
public java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
public java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v3;
}
protected java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.JsonDeserializer v22;
boolean v23, v25, v3;
java.lang.Object[] v14, v20, v34;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer v0;
com.fasterxml.jackson.core.JsonToken v11, v15, v17, v24, v30, v31, v33, v6, v7, v8, v9;
com.fasterxml.jackson.databind.JavaType v10, v16, v32;
java.lang.String v12, v13, v18, v19, v21, v27;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1, v28;
java.lang.Object v29, v4, v5;
com.fasterxml.jackson.databind.util.TokenBuffer v26;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean canReadTypeId()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getTypeId()>();
if v4 == null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v4);
return v5;
label1:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v6 != v7 goto label2;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v8 == v9 goto label3;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: com.fasterxml.jackson.databind.JavaType baseType()>();
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String baseTypeName()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("need JSON String that contains type id (for subtype of \u0001)");
v14 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v10, v11, v13, v14);
goto label3;
label2:
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v6 == v15 goto label3;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: com.fasterxml.jackson.databind.JavaType baseType()>();
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String baseTypeName()>();
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("need JSON Object to contain As.WRAPPER_OBJECT type information for class \u0001");
v20 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v16, v17, v19, v20);
label3:
v21 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v21);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v23 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: boolean _typeIdVisible>;
if v23 == 0 goto label4;
v24 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v25 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v24);
if v25 == 0 goto label4;
v26 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser)>(v1);
virtualinvoke v26.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();
v27 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String _typePropertyName>;
virtualinvoke v26.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>(v27);
virtualinvoke v26.<com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>(v21);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
v28 = virtualinvoke v26.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser)>(v1);
v1 = staticinvoke <com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)>(0, v28, v1);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
label4:
v29 = virtualinvoke v22.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v30 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v31 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v30 == v31 goto label5;
v32 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: com.fasterxml.jackson.databind.JavaType baseType()>();
v33 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
v34 = newarray (java.lang.Object)[0];
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v32, v33, "expected closing END_OBJECT after type information and deserialized value", v34);
label5:
return v29;
}
}