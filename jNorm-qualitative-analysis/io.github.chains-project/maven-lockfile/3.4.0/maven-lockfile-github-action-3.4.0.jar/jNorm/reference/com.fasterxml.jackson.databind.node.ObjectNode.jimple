public class com.fasterxml.jackson.databind.node.ObjectNode extends com.fasterxml.jackson.databind.node.ContainerNode implements java.io.Serializable
{
private static final long serialVersionUID;
protected final java.util.Map _children;
public void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
{
java.util.LinkedHashMap v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1);
v2 = new java.util.LinkedHashMap;
specialinvoke v2.<java.util.LinkedHashMap: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children> = v2;
return;
}
public void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory, java.util.Map)
{
com.fasterxml.jackson.databind.node.JsonNodeFactory v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v2;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1);
v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children> = v2;
return;
}
protected com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer)
{
com.fasterxml.jackson.core.JsonPointer v1;
com.fasterxml.jackson.databind.JsonNode v3;
java.lang.String v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonPointer: java.lang.String getMatchingProperty()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.node.ObjectNode deepCopy()
{
java.util.Iterator v5;
java.util.Set v4;
com.fasterxml.jackson.databind.node.ObjectNode v0, v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
java.util.Map v3, v8;
com.fasterxml.jackson.databind.JsonNode v11;
java.lang.Object v10, v7, v9;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = new com.fasterxml.jackson.databind.node.ObjectNode;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>;
specialinvoke v1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v2);
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = v1.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v9 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v10 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode deepCopy()>();
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v11);
goto label1;
label2:
return v1;
}
public com.fasterxml.jackson.databind.node.ObjectNode 'with'(java.lang.String)
{
java.lang.UnsupportedOperationException v7;
com.fasterxml.jackson.databind.node.ObjectNode v0, v11, v3;
com.fasterxml.jackson.core.JsonPointer v2;
java.util.Map v12, v4;
com.fasterxml.jackson.databind.JsonNode v13;
java.lang.Class v8;
java.lang.Object v5;
java.lang.String v1, v10, v9;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.core.JsonPointer _jsonPointerIfValid(java.lang.String)>(v1);
if v2 == null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer)>(v2);
return v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v5 == null goto label3;
v6 = v5 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v6 == 0 goto label2;
return v13;
label2:
v7 = new java.lang.UnsupportedOperationException;
v8 = virtualinvoke v5.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Property \'\u0001\' has value that is not of type `ObjectNode` (but `\u0001`)");
specialinvoke v7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v10);
throw v7;
label3:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v12 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v11);
return v11;
}
public com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String)
{
java.lang.UnsupportedOperationException v7;
com.fasterxml.jackson.databind.node.ObjectNode v0;
com.fasterxml.jackson.databind.node.ArrayNode v11, v3;
com.fasterxml.jackson.core.JsonPointer v2;
java.util.Map v12, v4;
com.fasterxml.jackson.databind.JsonNode v13;
java.lang.Class v8;
java.lang.Object v5;
java.lang.String v1, v10, v9;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.core.JsonPointer _jsonPointerIfValid(java.lang.String)>(v1);
if v2 == null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer)>(v2);
return v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v5 == null goto label3;
v6 = v5 instanceof com.fasterxml.jackson.databind.node.ArrayNode;
if v6 == 0 goto label2;
return v13;
label2:
v7 = new java.lang.UnsupportedOperationException;
v8 = virtualinvoke v5.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Property \'\u0001\' has value that is not of type `ArrayNode` (but `\u0001`)");
specialinvoke v7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v10);
throw v7;
label3:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
v12 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v11);
return v11;
}
protected com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer, com.fasterxml.jackson.core.JsonPointer, com.fasterxml.jackson.databind.JsonNode$OverwriteMode, boolean)
{
com.fasterxml.jackson.databind.node.ObjectNode v0, v10, v9;
com.fasterxml.jackson.core.JsonPointer v1, v2, v8;
com.fasterxml.jackson.databind.JsonNode$OverwriteMode v3;
com.fasterxml.jackson.databind.JsonNode v6;
boolean v4, v5, v7;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
v2 := @parameter1: com.fasterxml.jackson.core.JsonPointer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
v4 := @parameter3: boolean;
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonPointer: boolean matches()>();
if v5 == 0 goto label1;
return v0;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer)>(v2);
if v6 == null goto label3;
v7 = v6 instanceof com.fasterxml.jackson.databind.node.BaseJsonNode;
if v7 == 0 goto label3;
v8 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer tail()>();
v9 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.BaseJsonNode: com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean)>(v1, v8, v3, v4);
if v9 == null goto label2;
return v9;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: void _withXxxVerifyReplace(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean,com.fasterxml.jackson.databind.JsonNode)>(v1, v2, v3, v4, v6);
label3:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean)>(v2, v4);
return v10;
}
protected com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer, com.fasterxml.jackson.core.JsonPointer, com.fasterxml.jackson.databind.JsonNode$OverwriteMode, boolean)
{
com.fasterxml.jackson.databind.node.ObjectNode v0;
com.fasterxml.jackson.databind.node.ArrayNode v10, v9;
com.fasterxml.jackson.core.JsonPointer v1, v2, v8;
com.fasterxml.jackson.databind.JsonNode$OverwriteMode v3;
com.fasterxml.jackson.databind.JsonNode v6;
boolean v4, v5, v7;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
v2 := @parameter1: com.fasterxml.jackson.core.JsonPointer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
v4 := @parameter3: boolean;
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonPointer: boolean matches()>();
if v5 == 0 goto label1;
return null;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer)>(v2);
if v6 == null goto label3;
v7 = v6 instanceof com.fasterxml.jackson.databind.node.BaseJsonNode;
if v7 == 0 goto label3;
v8 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer tail()>();
v9 = virtualinvoke v6.<com.fasterxml.jackson.databind.node.BaseJsonNode: com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean)>(v1, v8, v3, v4);
if v9 == null goto label2;
return v9;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: void _withXxxVerifyReplace(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean,com.fasterxml.jackson.databind.JsonNode)>(v1, v2, v3, v4, v6);
label3:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean)>(v2, v4);
return v10;
}
protected com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailProperty(com.fasterxml.jackson.core.JsonPointer, boolean)
{
com.fasterxml.jackson.databind.node.ObjectNode v0, v10, v11, v6, v9;
com.fasterxml.jackson.databind.node.ArrayNode v8;
com.fasterxml.jackson.core.JsonPointer v1, v4;
java.lang.String v3;
boolean v2, v5, v7;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonPointer: java.lang.String getMatchingProperty()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer tail()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonPointer: boolean matches()>();
if v5 == 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String)>(v3);
return v6;
label1:
if v2 == 0 goto label2;
v7 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonPointer: boolean mayMatchElement()>();
if v7 == 0 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)>(v3);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailElement(com.fasterxml.jackson.core.JsonPointer,boolean)>(v4, v2);
return v9;
label2:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String)>(v3);
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean)>(v4, v2);
return v11;
}
protected com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailProperty(com.fasterxml.jackson.core.JsonPointer, boolean)
{
com.fasterxml.jackson.databind.node.ObjectNode v0, v10;
com.fasterxml.jackson.databind.node.ArrayNode v11, v6, v8, v9;
com.fasterxml.jackson.core.JsonPointer v1, v4;
java.lang.String v3;
boolean v2, v5, v7;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonPointer: java.lang.String getMatchingProperty()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer tail()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonPointer: boolean matches()>();
if v5 == 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)>(v3);
return v6;
label1:
if v2 == 0 goto label2;
v7 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonPointer: boolean mayMatchElement()>();
if v7 == 0 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)>(v3);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailElement(com.fasterxml.jackson.core.JsonPointer,boolean)>(v4, v2);
return v9;
label2:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String)>(v3);
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean)>(v4, v2);
return v11;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
{
java.util.Map v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: boolean isEmpty()>();
return v3;
}
public com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
{
com.fasterxml.jackson.databind.node.ObjectNode v0;
com.fasterxml.jackson.databind.node.JsonNodeType v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = <com.fasterxml.jackson.databind.node.JsonNodeType: com.fasterxml.jackson.databind.node.JsonNodeType OBJECT>;
return v1;
}
public final boolean isObject()
{
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
return 1;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
return v1;
}
public int size()
{
int v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
return v2;
}
public boolean isEmpty()
{
com.fasterxml.jackson.databind.node.ObjectNode v0;
boolean v2;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
return v2;
}
public java.util.Iterator elements()
{
java.util.Iterator v3;
java.util.Collection v2;
java.util.Map v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Collection values()>();
v3 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
return v3;
}
public com.fasterxml.jackson.databind.JsonNode get(int)
{
int v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: int;
return null;
}
public com.fasterxml.jackson.databind.JsonNode get(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.util.Iterator fieldNames()
{
java.util.Iterator v3;
java.util.Map v1;
java.util.Set v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
return v3;
}
public com.fasterxml.jackson.databind.JsonNode path(int)
{
int v1;
com.fasterxml.jackson.databind.node.MissingNode v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: int;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode getInstance()>();
return v2;
}
public com.fasterxml.jackson.databind.JsonNode path(java.lang.String)
{
java.util.Map v2;
com.fasterxml.jackson.databind.node.MissingNode v4;
java.lang.Object v3;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
return v3;
label1:
v4 = staticinvoke <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode getInstance()>();
return v4;
}
public com.fasterxml.jackson.databind.JsonNode required(java.lang.String)
{
java.lang.Object[] v4;
java.util.Map v2;
java.lang.Object v3, v5;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
return v3;
label1:
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[])>("No value for property \'%s\' of `ObjectNode`", v4);
return v5;
}
public java.util.Iterator fields()
{
java.util.Iterator v3;
java.util.Map v1;
java.util.Set v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
return v3;
}
public java.util.Set properties()
{
java.util.Set v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
return v2;
}
public boolean equals(java.util.Comparator, com.fasterxml.jackson.databind.JsonNode)
{
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v4, v5;
int v6, v7;
com.fasterxml.jackson.databind.JsonNode v2;
boolean v10, v15, v3;
java.util.Iterator v9;
java.util.Set v8;
java.lang.Object v11, v12, v13, v14;
java.util.Comparator v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.util.Comparator;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
v3 = v2 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v3 != 0 goto label1;
return 0;
label1:
v4 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v5 = v2.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v6 = interfaceinvoke v4.<java.util.Map: int size()>();
v7 = interfaceinvoke v5.<java.util.Map: int size()>();
if v7 == v6 goto label2;
return 0;
label2:
v8 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
v9 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
label3:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label5;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getKey()>();
v13 = interfaceinvoke v5.<java.util.Map: java.lang.Object get(java.lang.Object)>(v12);
if v13 == null goto label4;
v14 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
v15 = virtualinvoke v14.<com.fasterxml.jackson.databind.JsonNode: boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode)>(v1, v13);
if v15 != 0 goto label3;
label4:
return 0;
label5:
return 1;
}
public com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String)
{
java.util.Iterator v4;
java.util.Set v3;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v2;
com.fasterxml.jackson.databind.JsonNode v11;
java.lang.Object v10, v6, v7, v9;
java.lang.String v1;
boolean v5, v8;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label2;
v9 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
return v9;
label2:
v10 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String)>(v1);
if v11 == null goto label1;
return v11;
label3:
return null;
}
public java.util.List findValues(java.lang.String, java.util.List)
{
java.util.Iterator v5;
java.util.Set v4;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.ArrayList v10;
java.util.List v2;
java.util.Map v3;
java.lang.Object v11, v12, v7, v8;
java.lang.String v1;
boolean v6, v9;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label4;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label3;
if v2 != null goto label2;
v10 = new java.util.ArrayList;
specialinvoke v10.<java.util.ArrayList: void <init>()>();
v2 = v10;
label2:
v11 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v11);
goto label1;
label3:
v12 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
v2 = virtualinvoke v12.<com.fasterxml.jackson.databind.JsonNode: java.util.List findValues(java.lang.String,java.util.List)>(v1, v2);
goto label1;
label4:
return v2;
}
public java.util.List findValuesAsText(java.lang.String, java.util.List)
{
java.util.Iterator v5;
java.util.Set v4;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.ArrayList v10;
java.util.List v2;
java.util.Map v3;
java.lang.Object v11, v13, v7, v8;
java.lang.String v1, v12;
boolean v6, v9;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label4;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label3;
if v2 != null goto label2;
v10 = new java.util.ArrayList;
specialinvoke v10.<java.util.ArrayList: void <init>()>();
v2 = v10;
label2:
v11 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v12);
goto label1;
label3:
v13 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
v2 = virtualinvoke v13.<com.fasterxml.jackson.databind.JsonNode: java.util.List findValuesAsText(java.lang.String,java.util.List)>(v1, v2);
goto label1;
label4:
return v2;
}
public com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String)
{
java.util.Iterator v4;
java.util.Set v3;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v2;
com.fasterxml.jackson.databind.JsonNode v10;
java.lang.Object v6, v7, v9;
java.lang.String v1;
boolean v5, v8;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label2;
return v0;
label2:
v9 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String)>(v1);
if v10 == null goto label1;
return v10;
label3:
return null;
}
public java.util.List findParents(java.lang.String, java.util.List)
{
java.util.Iterator v5;
java.util.Set v4;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.ArrayList v10;
java.util.List v2;
java.util.Map v3;
java.lang.Object v11, v7, v8;
java.lang.String v1;
boolean v6, v9;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label4;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label3;
if v2 != null goto label2;
v10 = new java.util.ArrayList;
specialinvoke v10.<java.util.ArrayList: void <init>()>();
v2 = v10;
label2:
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v0);
goto label1;
label3:
v11 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
v2 = virtualinvoke v11.<com.fasterxml.jackson.databind.JsonNode: java.util.List findParents(java.lang.String,java.util.List)>(v1, v2);
goto label1;
label4:
return v2;
}
public void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v11;
com.fasterxml.jackson.databind.SerializerProvider v2;
boolean v10, v14, v4, v5, v6, v8, v9;
java.util.Iterator v13;
java.util.Set v12;
com.fasterxml.jackson.databind.SerializationFeature v3;
java.lang.Object v15, v16, v17;
com.fasterxml.jackson.databind.cfg.JsonNodeFeature v7;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
if v2 == null goto label6;
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v6 = v5;
v7 = <com.fasterxml.jackson.databind.cfg.JsonNodeFeature: com.fasterxml.jackson.databind.cfg.JsonNodeFeature WRITE_NULL_PROPERTIES>;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v7);
if v8 != 0 goto label3;
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
v10 = v9;
if v6 != 0 goto label5;
if v9 == 0 goto label6;
label5:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object)>(v0);
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: void serializeFilteredContents(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean,boolean)>(v1, v2, v6, v10);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
return;
label6:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object)>(v0);
v11 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v12 = interfaceinvoke v11.<java.util.Map: java.util.Set entrySet()>();
v13 = interfaceinvoke v12.<java.util.Set: java.util.Iterator iterator()>();
label7:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label8;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = interfaceinvoke v15.<java.util.Map$Entry: java.lang.Object getValue()>();
v17 = interfaceinvoke v15.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v17);
virtualinvoke v16.<com.fasterxml.jackson.databind.JsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
goto label7;
label8:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
return;
}
public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
java.util.Map v15;
com.fasterxml.jackson.core.JsonToken v12;
com.fasterxml.jackson.databind.SerializerProvider v2;
boolean v10, v11, v18, v4, v5, v7, v8;
java.util.Iterator v17;
java.util.Set v16;
com.fasterxml.jackson.core.type.WritableTypeId v13, v14;
com.fasterxml.jackson.databind.SerializationFeature v6;
java.lang.Object v19, v20, v21;
com.fasterxml.jackson.databind.cfg.JsonNodeFeature v9;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 = 0;
v5 = 0;
if v2 == null goto label5;
v6 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v6);
if v7 != 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
v4 = v8;
v9 = <com.fasterxml.jackson.databind.cfg.JsonNodeFeature: com.fasterxml.jackson.databind.cfg.JsonNodeFeature WRITE_NULL_PROPERTIES>;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v9);
if v10 != 0 goto label3;
v11 = 1;
goto label4;
label3:
v11 = 0;
label4:
v5 = v11;
label5:
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v0, v12);
v14 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v1, v13);
if v4 != 0 goto label6;
if v5 == 0 goto label7;
label6:
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: void serializeFilteredContents(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean,boolean)>(v1, v2, v4, v5);
goto label9;
label7:
v15 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v16 = interfaceinvoke v15.<java.util.Map: java.util.Set entrySet()>();
v17 = interfaceinvoke v16.<java.util.Set: java.util.Iterator iterator()>();
label8:
v18 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v18 == 0 goto label9;
v19 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v20 = interfaceinvoke v19.<java.util.Map$Entry: java.lang.Object getValue()>();
v21 = interfaceinvoke v19.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v21);
virtualinvoke v20.<com.fasterxml.jackson.databind.JsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
goto label8;
label9:
virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v1, v14);
return;
}
protected void serializeFilteredContents(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, boolean, boolean) throws java.io.IOException
{
java.util.Iterator v7;
com.fasterxml.jackson.core.JsonGenerator v1;
java.util.Set v6;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v5;
java.lang.Object v10, v14, v9;
com.fasterxml.jackson.databind.SerializerProvider v2;
boolean v11, v12, v13, v3, v4, v8;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
v5 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v6 = interfaceinvoke v5.<java.util.Map: java.util.Set entrySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label4;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
if v3 == 0 goto label2;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isArray()>();
if v11 == 0 goto label2;
v12 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider)>(v2);
if v12 != 0 goto label1;
label2:
if v4 == 0 goto label3;
v13 = virtualinvoke v10.<com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isNull()>();
if v13 != 0 goto label1;
label3:
v14 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v14);
virtualinvoke v10.<com.fasterxml.jackson.databind.node.BaseJsonNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
goto label1;
label4:
return;
}
public com.fasterxml.jackson.databind.JsonNode set(java.lang.String, com.fasterxml.jackson.databind.JsonNode)
{
java.util.Map v3;
com.fasterxml.jackson.databind.JsonNode v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
if v2 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
label1:
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map)
{
java.util.Iterator v3;
java.util.Set v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v1, v7;
java.lang.Object v5, v6, v8;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
if v6 != null goto label2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
label2:
v7 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v8 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v8, v6);
goto label1;
label3:
return v0;
}
public com.fasterxml.jackson.databind.JsonNode setAll(com.fasterxml.jackson.databind.node.ObjectNode)
{
java.util.Map v2, v3;
com.fasterxml.jackson.databind.node.ObjectNode v0, v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.databind.node.ObjectNode;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = v1.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v2.<java.util.Map: void putAll(java.util.Map)>(v3);
return v0;
}
public com.fasterxml.jackson.databind.JsonNode replace(java.lang.String, com.fasterxml.jackson.databind.JsonNode)
{
java.util.Map v3;
com.fasterxml.jackson.databind.JsonNode v2;
java.lang.Object v4;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
if v2 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
label1:
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode without(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v2;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.JsonNode without(java.util.Collection)
{
java.util.Collection v1;
java.util.Map v2;
java.util.Set v3;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke v3.<java.util.Set: boolean removeAll(java.util.Collection)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.JsonNode put(java.lang.String, com.fasterxml.jackson.databind.JsonNode)
{
java.util.Map v3;
com.fasterxml.jackson.databind.JsonNode v2;
java.lang.Object v4;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
if v2 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
label1:
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode putIfAbsent(java.lang.String, com.fasterxml.jackson.databind.JsonNode)
{
java.util.Map v3;
com.fasterxml.jackson.databind.JsonNode v2;
java.lang.Object v4;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
if v2 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
label1:
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode remove(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.node.ObjectNode remove(java.util.Collection)
{
java.util.Collection v1;
java.util.Map v2;
java.util.Set v3;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke v3.<java.util.Set: boolean removeAll(java.util.Collection)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.node.ObjectNode removeAll()
{
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v1.<java.util.Map: void clear()>();
return v0;
}
public com.fasterxml.jackson.databind.JsonNode putAll(java.util.Map)
{
com.fasterxml.jackson.databind.JsonNode v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.util.Map;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.JsonNode putAll(com.fasterxml.jackson.databind.node.ObjectNode)
{
com.fasterxml.jackson.databind.JsonNode v2;
com.fasterxml.jackson.databind.node.ObjectNode v0, v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.databind.node.ObjectNode;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode setAll(com.fasterxml.jackson.databind.node.ObjectNode)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection)
{
java.util.Collection v1;
java.util.Map v2;
java.util.Set v3;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.util.Collection;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke v3.<java.util.Set: boolean retainAll(java.util.Collection)>(v1);
return v0;
}
public transient com.fasterxml.jackson.databind.node.ObjectNode retain(java.lang.String[])
{
java.util.List v2;
java.lang.String[] v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String[];
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection)>(v2);
return v3;
}
public com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)
{
com.fasterxml.jackson.databind.node.ArrayNode v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v2);
return v2;
}
public com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v2;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v2);
return v2;
}
public com.fasterxml.jackson.databind.node.ObjectNode putPOJO(java.lang.String, java.lang.Object)
{
java.lang.Object v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode putRawValue(java.lang.String, com.fasterxml.jackson.databind.util.RawValue)
{
java.lang.String v1;
com.fasterxml.jackson.databind.util.RawValue v2;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.util.RawValue;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode putNull(java.lang.String)
{
com.fasterxml.jackson.databind.node.NullNode v3;
java.util.Map v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v3);
return v0;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, short)
{
com.fasterxml.jackson.databind.node.NumericNode v3;
short v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: short;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(short)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Short)
{
short v4;
java.lang.Short v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v5;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Short;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Short: short shortValue()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(short)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v5;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, int)
{
com.fasterxml.jackson.databind.node.NumericNode v3;
int v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(int)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Integer)
{
int v4;
java.lang.String v1;
java.lang.Integer v2;
com.fasterxml.jackson.databind.node.ObjectNode v0, v5;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Integer;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Integer: int intValue()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(int)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v5;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, long)
{
com.fasterxml.jackson.databind.node.NumericNode v3;
long v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Long)
{
java.lang.Long v2;
long v4;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v5;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Long;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Long: long longValue()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v5;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, float)
{
com.fasterxml.jackson.databind.node.NumericNode v3;
float v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: float;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(float)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Float)
{
java.lang.Float v2;
float v4;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v5;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Float;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Float: float floatValue()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(float)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v5;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, double)
{
com.fasterxml.jackson.databind.node.NumericNode v3;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
double v2;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: double;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(double)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Double)
{
java.lang.Double v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v5;
com.fasterxml.jackson.databind.node.ValueNode v3;
double v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Double;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Double: double doubleValue()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NumericNode numberNode(double)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v5;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.math.BigDecimal)
{
java.math.BigDecimal v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.math.BigDecimal;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal)>(v2);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.math.BigInteger)
{
java.math.BigInteger v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.math.BigInteger;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger)>(v2);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.String)
{
java.lang.String v1, v2;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)>(v2);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, boolean)
{
com.fasterxml.jackson.databind.node.BooleanNode v3;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(v2);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Boolean)
{
java.lang.Boolean v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v5;
boolean v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Boolean;
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v4 = virtualinvoke v2.<java.lang.Boolean: boolean booleanValue()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v5;
}
public com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, byte[])
{
byte[] v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0, v4;
com.fasterxml.jackson.databind.node.ValueNode v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: byte[];
if v2 != null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[])>(v2);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v1, v3);
return v4;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
boolean v2, v3;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v2 == 0 goto label3;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ObjectNode: boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode)>(v1);
return v3;
label3:
return 0;
}
protected boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode)
{
java.util.Map v2, v3;
com.fasterxml.jackson.databind.node.ObjectNode v0, v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: com.fasterxml.jackson.databind.node.ObjectNode;
v2 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v3 = v1.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v4 = interfaceinvoke v2.<java.util.Map: boolean equals(java.lang.Object)>(v3);
return v4;
}
public int hashCode()
{
int v2;
com.fasterxml.jackson.databind.node.ObjectNode v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
v2 = interfaceinvoke v1.<java.util.Map: int hashCode()>();
return v2;
}
protected com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String, com.fasterxml.jackson.databind.JsonNode)
{
java.util.Map v3;
com.fasterxml.jackson.databind.JsonNode v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ObjectNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ObjectNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
v3 = v0.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
}