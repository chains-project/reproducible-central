public abstract class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider extends com.fasterxml.jackson.databind.SerializerProvider implements java.io.Serializable
{
private static final long serialVersionUID;
protected transient java.util.Map _seenObjectIds;
protected transient java.util.ArrayList _objectIdGenerators;
protected transient com.fasterxml.jackson.core.JsonGenerator _generator;
protected void <init>()
{
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
specialinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: void <init>()>();
return;
}
protected void <init>(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.SerializerFactory)
{
com.fasterxml.jackson.databind.ser.SerializerFactory v3;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;
v3 := @parameter2: com.fasterxml.jackson.databind.ser.SerializerFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>(v1, v2, v3);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
{
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
specialinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: void <init>(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
return;
}
public abstract com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.SerializerFactory);
public com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy()
{
java.lang.IllegalStateException v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DefaultSerializerProvider sub-class not overriding copy()");
throw v1;
}
public com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v15, v18, v19;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v17, v21;
com.fasterxml.jackson.databind.JavaType v12, v5;
java.lang.String v13, v14, v7, v8;
boolean v11, v20, v3, v4, v9;
com.fasterxml.jackson.databind.cfg.HandlerInstantiator v16;
com.fasterxml.jackson.databind.introspect.Annotated v1;
java.lang.Class v10, v6;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label1;
return null;
label1:
v3 = v2 instanceof com.fasterxml.jackson.databind.JsonSerializer;
if v3 != 0 goto label8;
v4 = v2 instanceof java.lang.Class;
if v4 != 0 goto label2;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.Annotated: com.fasterxml.jackson.databind.JavaType getType()>();
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector returned serializer definition of type \u0001; expected type JsonSerializer or Class<JsonSerializer> instead");
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v5, v8);
label2:
if v2 == class "Lcom/fasterxml/jackson/databind/JsonSerializer$None;" goto label3;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(v2);
if v9 == 0 goto label4;
label3:
return null;
label4:
v10 = class "Lcom/fasterxml/jackson/databind/JsonSerializer;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v2);
if v11 != 0 goto label5;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.Annotated: com.fasterxml.jackson.databind.JavaType getType()>();
v13 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector returned Class \u0001; expected Class<JsonSerializer>");
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v12, v14);
label5:
v15 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();
if v16 != null goto label6;
v17 = null;
goto label7;
label6:
v18 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.cfg.HandlerInstantiator: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(v18, v1, v2);
label7:
v2 = v17;
if v17 != null goto label8;
v19 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(v17, v20);
label8:
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer)>(v2);
return v21;
}
public java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.Class)
{
com.fasterxml.jackson.databind.SerializationConfig v3, v6, v8;
com.fasterxml.jackson.databind.cfg.HandlerInstantiator v4;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
java.lang.Class v2;
java.lang.Object v5, v7;
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v1;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v2 := @parameter1: java.lang.Class;
if v2 != null goto label1;
return null;
label1:
v3 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();
if v4 != null goto label2;
v5 = null;
goto label3;
label2:
v6 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.cfg.HandlerInstantiator: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(v6, v1, v2);
label3:
v7 = v5;
if v5 != null goto label4;
v8 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(v2, v9);
label4:
return v7;
}
public boolean includeFilterSuppressNulls(java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Object[] v4;
java.lang.Exception v3;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
java.lang.Class v11, v5, v7;
java.lang.Object v1;
java.lang.String v10, v6, v8, v9;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
return 1;
label1:
v2 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(null);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = newarray (java.lang.Object)[3];
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v4[0] = v6;
v7 = virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v4[1] = v8;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v3);
v4[2] = v9;
v10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Problem determining whether filter of type \'%s\' should filter out `null` values: (%s) %s", v4);
v11 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String,java.lang.Throwable)>(v11, v10, v3);
return 0;
catch java.lang.Exception from label1 to label2 with label3;
}
public com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object, com.fasterxml.jackson.'annotation'.ObjectIdGenerator)
{
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
java.util.ArrayList v11, v13, v16, v8, v9;
com.fasterxml.jackson.databind.ser.impl.WritableObjectId v17;
java.util.Map v18, v3, v4, v5;
int v10, v12;
boolean v15;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator v2, v7;
java.lang.Object v1, v14, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.'annotation'.ObjectIdGenerator;
v3 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds>;
if v3 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _createObjectIdMap()>();
v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds> = v4;
goto label2;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds>;
v6 = interfaceinvoke v5.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v6 == null goto label2;
return v6;
label2:
v7 = null;
v8 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;
if v8 != null goto label3;
v9 = new java.util.ArrayList;
specialinvoke v9.<java.util.ArrayList: void <init>(int)>(8);
v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators> = v9;
goto label6;
label3:
v10 = 0;
v11 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;
v12 = virtualinvoke v11.<java.util.ArrayList: int size()>();
label4:
if v10 >= v12 goto label6;
v13 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;
v14 = virtualinvoke v13.<java.util.ArrayList: java.lang.Object get(int)>(v10);
v15 = virtualinvoke v14.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator: boolean canUseFor(com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>(v2);
if v15 == 0 goto label5;
v7 = v14;
goto label6;
label5:
v10 = v10 + 1;
goto label4;
label6:
if v7 != null goto label7;
v7 = virtualinvoke v2.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator: com.fasterxml.jackson.'annotation'.ObjectIdGenerator newForSerialization(java.lang.Object)>(v0);
v16 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;
virtualinvoke v16.<java.util.ArrayList: boolean add(java.lang.Object)>(v7);
label7:
v17 = new com.fasterxml.jackson.databind.ser.impl.WritableObjectId;
specialinvoke v17.<com.fasterxml.jackson.databind.ser.impl.WritableObjectId: void <init>(com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>(v7);
v18 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds>;
interfaceinvoke v18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v17);
return v17;
}
protected java.util.Map _createObjectIdMap()
{
java.util.IdentityHashMap v4;
com.fasterxml.jackson.databind.SerializationFeature v1;
java.util.HashMap v3;
boolean v2;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature USE_EQUALITY_FOR_OBJECT_ID>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
if v2 == 0 goto label1;
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
return v3;
label1:
v4 = new java.util.IdentityHashMap;
specialinvoke v4.<java.util.IdentityHashMap: void <init>()>();
return v4;
}
public boolean hasSerializerFor(java.lang.Class, java.util.concurrent.atomic.AtomicReference)
{
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.RuntimeException v9;
java.util.concurrent.atomic.AtomicReference v2;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v6;
com.fasterxml.jackson.databind.SerializationFeature v4;
java.lang.Class v1;
com.fasterxml.jackson.databind.JsonMappingException v8;
boolean v5, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.concurrent.atomic.AtomicReference;
if v1 != class "Ljava/lang/Object;" goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 != 0 goto label1;
return 1;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class)>(v1);
if v6 == null goto label2;
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
return v7;
label4:
v8 := @caughtexception;
if v2 == null goto label7;
virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v8);
goto label7;
label5:
v9 := @caughtexception;
if v2 != null goto label6;
throw v9;
label6:
virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v9);
label7:
return 0;
catch com.fasterxml.jackson.databind.JsonMappingException from label1 to label3 with label4;
catch java.lang.RuntimeException from label1 to label3 with label5;
}
public com.fasterxml.jackson.core.JsonGenerator getGenerator()
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator>;
return v1;
}
public void serializeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.PropertyName v11, v6;
com.fasterxml.jackson.databind.SerializationConfig v10, v5, v7;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.SerializationFeature v8;
java.lang.Class v3;
java.lang.Object v2;
boolean v12, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = v1;
if v2 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v1);
return;
label1:
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v3, 1, null);
v5 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName getFullRootName()>();
if v6 != null goto label2;
v7 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v8 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v9 = virtualinvoke v7.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v8);
if v9 == 0 goto label3;
v10 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class)>(v3);
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName)>(v1, v2, v4, v11);
return;
label2:
v12 = virtualinvoke v6.<com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();
if v12 != 0 goto label3;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName)>(v1, v2, v4, v6);
return;
label3:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v4);
return;
}
public void serializeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.SerializationConfig v10, v13, v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v7;
com.fasterxml.jackson.databind.JavaType v3;
boolean v12, v15, v6;
com.fasterxml.jackson.databind.PropertyName v14, v9;
com.fasterxml.jackson.databind.SerializationFeature v11;
java.lang.Class v4, v5;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = v1;
if v2 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v1);
return;
label1:
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v5);
if v6 != 0 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v2, v3);
label2:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v3, 1, null);
v8 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName getFullRootName()>();
if v9 != null goto label3;
v10 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v11 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v12 = virtualinvoke v10.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v11);
if v12 == 0 goto label4;
v13 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType)>(v3);
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName)>(v1, v2, v7, v14);
return;
label3:
v15 = virtualinvoke v9.<com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();
if v15 != 0 goto label4;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName)>(v1, v2, v7, v9);
return;
label4:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v7);
return;
}
public void serializeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.SerializationConfig v10, v13, v16, v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v3;
boolean v12, v17, v7;
com.fasterxml.jackson.databind.PropertyName v15, v9;
com.fasterxml.jackson.databind.SerializationFeature v11;
java.lang.Class v14, v5, v6;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = v1;
if v2 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v1);
return;
label1:
if v3 == null goto label2;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v7 != 0 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v2, v3);
label2:
if v4 != null goto label3;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v3, 1, null);
label3:
v8 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName getFullRootName()>();
if v9 != null goto label6;
v10 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v11 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v12 = virtualinvoke v10.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v11);
if v12 == 0 goto label7;
if v3 != null goto label4;
v13 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v14 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v15 = virtualinvoke v13.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class)>(v14);
goto label5;
label4:
v16 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v15 = virtualinvoke v16.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType)>(v3);
label5:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName)>(v1, v2, v4, v15);
return;
label6:
v17 = virtualinvoke v9.<com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();
if v17 != 0 goto label7;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName)>(v1, v2, v4, v9);
return;
label7:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v4);
return;
}
public void serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.SerializableString v20;
com.fasterxml.jackson.databind.SerializationConfig v11, v13, v16, v19;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v22;
boolean v15, v21, v8, v9;
com.fasterxml.jackson.databind.PropertyName v12, v18;
java.io.IOException v24;
java.lang.Exception v23;
com.fasterxml.jackson.databind.SerializationFeature v14;
java.lang.Class v10, v17, v6, v7;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = v1;
if v2 != null goto label01;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v1);
return;
label01:
if v3 == null goto label02;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v7);
if v8 != 0 goto label02;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v2, v3);
label02:
if v4 != null goto label04;
if v3 == null goto label03;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v9 == 0 goto label03;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v3, null);
goto label04;
label03:
v10 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v10, null);
label04:
v11 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName getFullRootName()>();
if v12 != null goto label05;
v13 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v14 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v15 = virtualinvoke v13.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v14);
if v15 == 0 goto label07;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
v16 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v17 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v18 = virtualinvoke v16.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class)>(v17);
v19 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v20 = virtualinvoke v18.<com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig)>(v19);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>(v20);
goto label07;
label05:
v21 = virtualinvoke v12.<com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();
if v21 == 0 goto label06;
v15 = 0;
goto label07;
label06:
v15 = 1;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
v22 = virtualinvoke v12.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v22);
label07:
virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v2, v1, v0, v5);
if v15 == 0 goto label10;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
label08:
goto label10;
label09:
v23 := @caughtexception;
v24 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(v1, v23);
throw v24;
label10:
return;
catch java.lang.Exception from label07 to label08 with label09;
}
private final void _serialize(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.PropertyName) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.PropertyName v4;
com.fasterxml.jackson.core.SerializableString v6;
com.fasterxml.jackson.databind.SerializationConfig v5;
java.io.IOException v8;
java.lang.Exception v7;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.PropertyName;
label1:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
v5 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig)>(v5);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>(v6);
virtualinvoke v3.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v1, v0);
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
label2:
goto label4;
label3:
v7 := @caughtexception;
v8 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(v1, v7);
throw v8;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private final void _serialize(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.io.IOException v5;
java.lang.Object v2;
java.lang.Exception v4;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
label1:
virtualinvoke v3.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v1, v0);
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(v1, v4);
throw v5;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
protected void _serializeNull(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.JsonSerializer v2;
java.io.IOException v4;
java.lang.Exception v3;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();
label1:
virtualinvoke v2.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v1, v0);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(v1, v3);
throw v4;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator, java.lang.Exception)
{
com.fasterxml.jackson.core.JsonGenerator v1;
java.lang.Exception v2;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
java.lang.Class v5;
com.fasterxml.jackson.databind.JsonMappingException v7;
java.lang.String v4, v6;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Exception;
v3 = v2 instanceof java.io.IOException;
if v3 == 0 goto label1;
return v2;
label1:
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v2);
if v4 != null goto label2;
v5 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[no message for \u0001]");
label2:
v7 = new com.fasterxml.jackson.databind.JsonMappingException;
specialinvoke v7.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable)>(v1, v4, v2);
return v7;
}
public int cachedSerializersCount()
{
int v2;
com.fasterxml.jackson.databind.ser.SerializerCache v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.SerializerCache: int size()>();
return v2;
}
public void flushCachedSerializers()
{
com.fasterxml.jackson.databind.ser.SerializerCache v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 = v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;
virtualinvoke v1.<com.fasterxml.jackson.databind.ser.SerializerCache: void flush()>();
return;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.IllegalArgumentException v3;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v2;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A class must be provided");
throw v3;
label1:
interfaceinvoke v2.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: void setProvider(com.fasterxml.jackson.databind.SerializerProvider)>(v0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, null);
virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)>(v2, v1);
return;
}
public com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.IllegalArgumentException v6;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v0;
com.fasterxml.jackson.databind.jsonschema.JsonSchema v9;
com.fasterxml.jackson.databind.JsonSerializer v2;
com.fasterxml.jackson.databind.JsonNode v4;
java.lang.Class v1;
java.lang.String v7, v8;
boolean v3, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v1, null);
v3 = v2 instanceof com.fasterxml.jackson.databind.jsonschema.SchemaAware;
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<com.fasterxml.jackson.databind.jsonschema.SchemaAware: com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)>(v0, null);
goto label2;
label1:
v4 = staticinvoke <com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode()>();
label2:
v5 = v4 instanceof com.fasterxml.jackson.databind.node.ObjectNode;
if v5 != 0 goto label3;
v6 = new java.lang.IllegalArgumentException;
v7 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class \u0001 would not be serialized as a JSON object and therefore has no schema");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v6;
label3:
v9 = new com.fasterxml.jackson.databind.jsonschema.JsonSchema;
specialinvoke v9.<com.fasterxml.jackson.databind.jsonschema.JsonSchema: void <init>(com.fasterxml.jackson.databind.node.ObjectNode)>(v4);
return v9;
}
}