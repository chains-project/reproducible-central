public abstract class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap extends java.lang.Object
{
protected final boolean _resetWhenFull;
protected void <init>(boolean)
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: boolean _resetWhenFull> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: boolean _resetWhenFull>;
v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: boolean _resetWhenFull> = v2;
return;
}
public abstract com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class);
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v6;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v5 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v4);
specialinvoke v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v4, v6);
return v5;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v7;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v5 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v6, v4);
specialinvoke v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v4, v7);
return v5;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v6;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v5 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v4);
specialinvoke v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v4, v6);
return v5;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v7;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v6;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v5 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v6, v4);
specialinvoke v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v4, v7);
return v5;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v5;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v1, 0, null);
v4 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v3);
specialinvoke v4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v3, v5);
return v4;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v6;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Class v5;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty)>(v1, 0, null);
v4 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v5, v3);
specialinvoke v4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v3, v6);
return v4;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.BeanProperty v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v6;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanProperty;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v1, v3);
v5 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v4);
specialinvoke v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v4, v6);
return v5;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(java.lang.Class, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v4;
com.fasterxml.jackson.databind.JsonSerializer v2;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonSerializer;
v3 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2);
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v2, v4);
return v3;
}
public final com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v0, v5;
com.fasterxml.jackson.databind.JsonSerializer v2;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonSerializer;
v3 = new com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v4, v2);
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>(v2, v5);
return v3;
}
public abstract com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class, com.fasterxml.jackson.databind.JsonSerializer);
public static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty v0;
v0 = <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_PROPERTIES>;
return v0;
}
public static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForRootValues()
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty v0;
v0 = <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_ROOT_VALUES>;
return v0;
}
}