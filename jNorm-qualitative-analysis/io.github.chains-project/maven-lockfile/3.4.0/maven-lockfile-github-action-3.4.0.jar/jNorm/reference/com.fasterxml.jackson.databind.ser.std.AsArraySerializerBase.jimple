public abstract class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase extends com.fasterxml.jackson.databind.ser.ContainerSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
protected final com.fasterxml.jackson.databind.JavaType _elementType;
protected final com.fasterxml.jackson.databind.BeanProperty _property;
protected final boolean _staticTyping;
protected final java.lang.Boolean _unwrapSingle;
protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;
protected final com.fasterxml.jackson.databind.JsonSerializer _elementSerializer;
protected com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.JsonSerializer v5;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
boolean v3;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: boolean;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(v1, v2, v3, v4, null, v5, null);
return;
}
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.BeanProperty v5;
com.fasterxml.jackson.databind.JsonSerializer v6;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
boolean v3;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: boolean;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.BeanProperty;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(v1, v2, v3, v4, v5, v6, null);
return;
}
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, java.lang.Boolean)
{
com.fasterxml.jackson.databind.BeanProperty v5;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v10;
com.fasterxml.jackson.databind.JsonSerializer v6;
java.lang.Boolean v7;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
boolean v3, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: boolean;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.BeanProperty;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v7 := @parameter6: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(v1, 0);
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType> = v2;
if v3 != 0 goto label1;
if v2 == null goto label2;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();
if v8 == 0 goto label2;
label1:
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping> = v9;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v4;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v5;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = v6;
v10 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v10;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: java.lang.Boolean _unwrapSingle> = v7;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.lang.Boolean)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v8;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Boolean v5;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0, v1;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer)>(v1);
v6 = v1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType> = v6;
v7 = v1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping>;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping> = v7;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v3;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer> = v4;
v8 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v8;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: java.lang.Boolean _unwrapSingle> = v5;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Boolean v5;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0, v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 = v1.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: java.lang.Boolean _unwrapSingle>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(v1, v2, v3, v4, v5);
return;
}
public final com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.BeanProperty v1;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Boolean v4;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0, v5;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: java.lang.Boolean _unwrapSingle>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(v1, v2, v3, v4);
return v5;
}
public abstract com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.lang.Boolean);
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v6;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v10;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v20, v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v7;
com.fasterxml.jackson.databind.JsonSerializer v12, v18, v4;
java.lang.Boolean v21, v5;
com.fasterxml.jackson.databind.JavaType v13, v15, v17;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0, v23;
boolean v14, v16, v22;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v11;
com.fasterxml.jackson.databind.BeanProperty v19, v2;
java.lang.Class v9;
java.lang.Object v8;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v3 == null goto label1;
v3 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)>(v2);
label1:
v4 = null;
v5 = null;
if v2 == null goto label2;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v7 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
if v7 == null goto label2;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v7);
if v8 == null goto label2;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v7, v8);
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: java.lang.Class handledType()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v9);
if v10 == null goto label3;
v11 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v5 = virtualinvoke v10.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v11);
label3:
if v4 != null goto label4;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
label4:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v4);
if v12 != null goto label5;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
if v13 == null goto label5;
v14 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean _staticTyping>;
if v14 == 0 goto label5;
v15 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v16 != 0 goto label5;
v17 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v17, v2);
label5:
v18 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
if v12 != v18 goto label6;
v19 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
if v2 != v19 goto label6;
v20 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v20 != v3 goto label6;
v21 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: java.lang.Boolean _unwrapSingle>;
v22 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v21, v5);
if v22 != 0 goto label7;
label6:
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(v2, v3, v12, v5);
return v23;
label7:
return v0;
}
public com.fasterxml.jackson.databind.JavaType getContentType()
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer getContentSerializer()
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
return v1;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.SerializationFeature v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 == 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: boolean hasSingleElement(java.lang.Object)>(v1);
if v6 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
return;
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
return;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
protected abstract void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.node.ObjectNode v3;
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.JsonSerializer v4, v6, v8;
com.fasterxml.jackson.databind.JsonNode v5;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
if v4 == null goto label3;
v5 = null;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
v7 = v6 instanceof com.fasterxml.jackson.databind.jsonschema.SchemaAware;
if v7 == 0 goto label1;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
v5 = interfaceinvoke v8.<com.fasterxml.jackson.databind.jsonschema.SchemaAware: com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)>(v1, null);
label1:
if v5 != null goto label2;
v5 = staticinvoke <com.fasterxml.jackson.databind.jsonschema.JsonSchema: com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode()>();
label2:
virtualinvoke v3.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>("items", v5);
label3:
return v3;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v7;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v2, v4, v6, v8;
com.fasterxml.jackson.databind.SerializerProvider v5;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
if v4 == null goto label1;
v5 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.SerializerProvider getProvider()>();
v6 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v3 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v6, v7);
label1:
v8 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JavaType _elementType>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v8);
return;
}
protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1, v6, v7;
com.fasterxml.jackson.databind.JsonSerializer v8;
java.lang.Class v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3, v4);
v6 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
if v1 == v6 goto label1;
v7 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v7;
label1:
v8 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v8;
}
protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1, v6, v7;
com.fasterxml.jackson.databind.JsonSerializer v8;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3, v4);
v6 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
if v1 == v6 goto label1;
v7 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v7;
label1:
v8 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v8;
}
}