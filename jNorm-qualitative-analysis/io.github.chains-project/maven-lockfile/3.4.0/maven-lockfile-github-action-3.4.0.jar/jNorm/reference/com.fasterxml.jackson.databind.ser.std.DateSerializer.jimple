public class com.fasterxml.jackson.databind.ser.std.DateSerializer extends com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase
{
public static final com.fasterxml.jackson.databind.ser.std.DateSerializer instance;
public void <init>()
{
com.fasterxml.jackson.databind.ser.std.DateSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.DateSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.DateSerializer: void <init>(java.lang.Boolean,java.text.DateFormat)>(null, null);
return;
}
public void <init>(java.lang.Boolean, java.text.DateFormat)
{
java.lang.Boolean v1;
com.fasterxml.jackson.databind.ser.std.DateSerializer v0;
java.text.DateFormat v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.DateSerializer;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.text.DateFormat;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase: void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat)>(class "Ljava/util/Date;", v1, v2);
return;
}
public com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(java.lang.Boolean, java.text.DateFormat)
{
com.fasterxml.jackson.databind.ser.std.DateSerializer v0, v3;
java.lang.Boolean v1;
java.text.DateFormat v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.DateSerializer;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.text.DateFormat;
v3 = new com.fasterxml.jackson.databind.ser.std.DateSerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.DateSerializer: void <init>(java.lang.Boolean,java.text.DateFormat)>(v1, v2);
return v3;
}
protected long _timestamp(java.util.Date)
{
long v2;
com.fasterxml.jackson.databind.ser.std.DateSerializer v0;
java.util.Date v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.DateSerializer;
v1 := @parameter0: java.util.Date;
if v1 != null goto label1;
v2 = 0L;
goto label2;
label1:
v2 = virtualinvoke v1.<java.util.Date: long getTime()>();
label2:
return v2;
}
public void serialize(java.util.Date, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.ser.std.DateSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Date v1;
long v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.DateSerializer;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.DateSerializer: boolean _asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.DateSerializer: long _timestamp(java.util.Date)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(v5);
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.DateSerializer: void _serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
return;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.std.DateSerializer v0;
v0 = new com.fasterxml.jackson.databind.ser.std.DateSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.DateSerializer: void <init>()>();
<com.fasterxml.jackson.databind.ser.std.DateSerializer: com.fasterxml.jackson.databind.ser.std.DateSerializer instance> = v0;
return;
}
}