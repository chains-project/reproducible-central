public class com.fasterxml.jackson.databind.ser.std.SerializableSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{
public static final com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance;
protected void <init>()
{
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.SerializableSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/JsonSerializable;");
return;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JsonSerializable)
{
com.fasterxml.jackson.databind.JsonSerializable v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v0;
boolean v3, v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.SerializableSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonSerializable;
v3 = v2 instanceof com.fasterxml.jackson.databind.JsonSerializable$Base;
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonSerializable$Base: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
return v4;
label1:
return 0;
}
public void serialize(com.fasterxml.jackson.databind.JsonSerializable, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.JsonSerializable v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.SerializableSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializable;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
interfaceinvoke v1.<com.fasterxml.jackson.databind.JsonSerializable: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v3);
return;
}
public final void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.JsonSerializable v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.SerializableSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializable;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
interfaceinvoke v1.<com.fasterxml.jackson.databind.JsonSerializable: void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v2, v3, v4);
return;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v0;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.SerializableSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
return;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v0;
v0 = new com.fasterxml.jackson.databind.ser.std.SerializableSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.SerializableSerializer: void <init>()>();
<com.fasterxml.jackson.databind.ser.std.SerializableSerializer: com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance> = v0;
return;
}
}