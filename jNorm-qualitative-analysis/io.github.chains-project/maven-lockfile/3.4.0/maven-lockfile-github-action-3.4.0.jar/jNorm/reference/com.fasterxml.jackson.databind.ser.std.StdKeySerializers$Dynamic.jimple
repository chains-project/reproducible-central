public class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{
protected transient com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
public void <init>()
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/String;", 0);
v1 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v1;
return;
}
java.lang.Object readResolve()
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
v1 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v1;
return v0;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v5;
com.fasterxml.jackson.databind.JsonSerializer v6;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v0;
java.lang.Class v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v5 = v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v4);
if v6 != null goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>(v5, v4, v3);
label1:
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
return;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v0;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
return;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v6;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1, v5, v7, v8;
com.fasterxml.jackson.databind.JsonSerializer v9;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
if v2 != class "Ljava/lang/Object;" goto label1;
v4 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v4.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, v2);
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v2, v4);
v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v5;
return v4;
label1:
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3, null);
v7 = v6.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
if v1 == v7 goto label2;
v8 = v6.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v8;
label2:
v9 = v6.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v9;
}
}