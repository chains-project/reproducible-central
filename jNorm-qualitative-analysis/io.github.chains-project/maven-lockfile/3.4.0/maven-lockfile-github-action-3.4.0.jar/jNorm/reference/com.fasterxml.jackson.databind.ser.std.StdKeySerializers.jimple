public abstract class com.fasterxml.jackson.databind.ser.std.StdKeySerializers extends java.lang.Object
{
protected static final com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER;
protected static final com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER;
public void <init>()
{
com.fasterxml.jackson.databind.ser.std.StdKeySerializers v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdKeySerializers;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class, boolean)
{
com.fasterxml.jackson.databind.SerializationConfig v0;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default v11, v12, v15, v18, v19, v20, v21, v6, v7;
com.fasterxml.jackson.databind.JsonSerializer v4;
boolean v10, v14, v17, v2, v5, v8;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v3;
java.lang.Class v1, v13, v16, v9;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: boolean;
if v1 == null goto label01;
if v1 != class "Ljava/lang/Object;" goto label02;
label01:
v3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void <init>()>();
return v3;
label02:
if v1 != class "Ljava/lang/String;" goto label03;
v4 = <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER>;
return v4;
label03:
v5 = virtualinvoke v1.<java.lang.Class: boolean isPrimitive()>();
if v5 == 0 goto label04;
v1 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>(v1);
label04:
if v1 != class "Ljava/lang/Integer;" goto label05;
v6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v6.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(5, v1);
return v6;
label05:
if v1 != class "Ljava/lang/Long;" goto label06;
v7 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v7.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(6, v1);
return v7;
label06:
v8 = virtualinvoke v1.<java.lang.Class: boolean isPrimitive()>();
if v8 != 0 goto label07;
v9 = class "Ljava/lang/Number;";
v10 = virtualinvoke v9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v10 == 0 goto label08;
label07:
v11 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v11.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, v1);
return v11;
label08:
if v1 != class "Ljava/lang/Class;" goto label09;
v12 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v12.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(3, v1);
return v12;
label09:
v13 = class "Ljava/util/Date;";
v14 = virtualinvoke v13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v14 == 0 goto label10;
v15 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v15.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(1, v1);
return v15;
label10:
v16 = class "Ljava/util/Calendar;";
v17 = virtualinvoke v16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v17 == 0 goto label11;
v18 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v18.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(2, v1);
return v18;
label11:
if v1 != class "Ljava/util/UUID;" goto label12;
v19 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v19.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, v1);
return v19;
label12:
if v1 != class "[B" goto label13;
v20 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v20.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(7, v1);
return v20;
label13:
if v2 == 0 goto label14;
v21 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v21.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, v1);
return v21;
label14:
return null;
}
public static com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default v6;
com.fasterxml.jackson.databind.util.EnumValues v4;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v2;
com.fasterxml.jackson.databind.SerializationConfig v0;
java.lang.Class v1;
boolean v3;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer v5;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v1 := @parameter1: java.lang.Class;
if v1 == null goto label2;
if v1 != class "Ljava/lang/Enum;" goto label1;
v2 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void <init>()>();
return v2;
label1:
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v1);
if v3 == 0 goto label2;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v1);
v5 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues)>(v1, v4);
return v5;
label2:
v6 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v6.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, v1);
return v6;
}
public static com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedClass)
{
com.fasterxml.jackson.databind.SerializationConfig v0;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer v7;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default v8;
com.fasterxml.jackson.databind.util.EnumValues v5, v6;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic v3;
java.lang.Class v1;
boolean v4;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
if v1 == null goto label2;
if v1 != class "Ljava/lang/Enum;" goto label1;
v3 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void <init>()>();
return v3;
label1:
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v1);
if v4 == 0 goto label2;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v0, v1);
v6 = staticinvoke <com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues constructEnumNamingStrategyValues(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v0, v1, v2);
v7 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues,com.fasterxml.jackson.databind.util.EnumValues)>(v1, v5, v6);
return v7;
label2:
v8 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;
specialinvoke v8.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, v1);
return v8;
}
public static com.fasterxml.jackson.databind.JsonSerializer getDefault()
{
com.fasterxml.jackson.databind.JsonSerializer v0;
v0 = <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER>;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.std.StdKeySerializer v0;
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer v1;
v0 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdKeySerializer: void <init>()>();
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER> = v0;
v1 = new com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer: void <init>()>();
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER> = v1;
return;
}
}