public class com.fasterxml.jackson.databind.type.ResolvedRecursiveType extends com.fasterxml.jackson.databind.type.IdentityEqualityType
{
private static final long serialVersionUID;
protected com.fasterxml.jackson.databind.JavaType _referencedType;
public void <init>(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
specialinvoke v0.<com.fasterxml.jackson.databind.type.IdentityEqualityType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)>(v1, v2, null, null, 0, null, null, 0);
return;
}
public void setReference(com.fasterxml.jackson.databind.JavaType)
{
java.lang.IllegalStateException v3;
com.fasterxml.jackson.databind.JavaType v1, v2, v4;
java.lang.String v5;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
if v2 == null goto label1;
v3 = new java.lang.IllegalStateException;
v4 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v4, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to re-set self reference; old value = \u0001, new = \u0001");
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType> = v1;
return;
}
public com.fasterxml.jackson.databind.JavaType getSuperClass()
{
com.fasterxml.jackson.databind.JavaType v1, v2, v3, v4;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getSuperClass()>();
return v3;
label1:
v4 = specialinvoke v0.<com.fasterxml.jackson.databind.type.IdentityEqualityType: com.fasterxml.jackson.databind.JavaType getSuperClass()>();
return v4;
}
public com.fasterxml.jackson.databind.JavaType getSelfReferencedType()
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
return v1;
}
public com.fasterxml.jackson.databind.type.TypeBindings getBindings()
{
com.fasterxml.jackson.databind.type.TypeBindings v3, v4;
com.fasterxml.jackson.databind.JavaType v1, v2;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
return v3;
label1:
v4 = specialinvoke v0.<com.fasterxml.jackson.databind.type.IdentityEqualityType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
return v4;
}
public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
{
java.lang.StringBuilder v1, v4, v5;
com.fasterxml.jackson.databind.JavaType v2, v3;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.StringBuilder;
v2 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>(v1);
return v4;
label1:
v5 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");
return v5;
}
public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
{
java.lang.StringBuilder v1, v4;
com.fasterxml.jackson.databind.JavaType v2, v3;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.StringBuilder;
v2 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>(v1);
return v4;
label1:
return v1;
}
public com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
return v0;
}
public com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Object;
return v0;
}
public com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Object;
return v0;
}
public com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Object;
return v0;
}
public com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Object;
return v0;
}
public com.fasterxml.jackson.databind.JavaType withStaticTyping()
{
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
return v0;
}
protected com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Class;
return v0;
}
public com.fasterxml.jackson.databind.JavaType refine(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeBindings v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
return null;
}
public boolean isContainerType()
{
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
return 0;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.type.ResolvedRecursiveType v0;
java.lang.Class v3;
java.lang.StringBuilder v6, v7;
com.fasterxml.jackson.databind.JavaType v1, v2;
java.lang.String v4, v5;
v0 := @this: com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
specialinvoke v6.<java.lang.StringBuilder: void <init>(int)>(40);
v1 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
if v1 != null goto label1;
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNRESOLVED");
goto label2;
label1:
v2 = v0.<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: com.fasterxml.jackson.databind.JavaType _referencedType>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
label2:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String ()>() <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[recursive type; ");
return v5;
}
}