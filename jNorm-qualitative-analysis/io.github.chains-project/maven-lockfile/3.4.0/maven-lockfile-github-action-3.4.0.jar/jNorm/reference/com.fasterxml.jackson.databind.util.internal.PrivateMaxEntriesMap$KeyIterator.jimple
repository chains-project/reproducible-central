final class com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator extends java.lang.Object implements java.util.Iterator
{
final java.util.Iterator iterator;
java.lang.Object current;
final com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0;
void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1, v2;
java.util.Iterator v5;
java.util.Set v4;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator v0;
java.util.concurrent.ConcurrentMap v3;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator;
v1 := @parameter0: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v3 = v2.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.util.concurrent.ConcurrentMap data>;
v4 = interfaceinvoke v3.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.util.Iterator iterator> = v5;
return;
}
public boolean hasNext()
{
java.util.Iterator v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.util.Iterator iterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.lang.Object next()
{
java.util.Iterator v1;
java.lang.Object v2, v3;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator v0;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.util.Iterator iterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.lang.Object current> = v2;
v3 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.lang.Object current>;
return v3;
}
public void remove()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v3;
java.lang.Object v1, v4;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.lang.Object current>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void checkState(boolean)>(v2);
v3 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v4 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.lang.Object current>;
virtualinvoke v3.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.lang.Object remove(java.lang.Object)>(v4);
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: java.lang.Object current> = null;
return;
}
}