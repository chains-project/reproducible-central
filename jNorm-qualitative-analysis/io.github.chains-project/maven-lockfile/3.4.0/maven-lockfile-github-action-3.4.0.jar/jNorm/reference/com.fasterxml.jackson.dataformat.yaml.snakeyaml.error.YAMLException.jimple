public class com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException extends com.fasterxml.jackson.dataformat.yaml.JacksonYAMLParseException
{
private static final long serialVersionUID;
public void <init>(com.fasterxml.jackson.core.JsonParser, org.yaml.snakeyaml.error.YAMLException)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException v0;
java.lang.String v3;
org.yaml.snakeyaml.error.YAMLException v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: org.yaml.snakeyaml.error.YAMLException;
v3 = virtualinvoke v2.<org.yaml.snakeyaml.error.YAMLException: java.lang.String getMessage()>();
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.JacksonYAMLParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Exception)>(v1, v3, v2);
return;
}
public static com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException 'from'(com.fasterxml.jackson.core.JsonParser, org.yaml.snakeyaml.error.YAMLException)
{
com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException v2;
com.fasterxml.jackson.core.JsonParser v0;
org.yaml.snakeyaml.error.YAMLException v1;
v0 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v1 := @parameter1: org.yaml.snakeyaml.error.YAMLException;
v2 = new com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException;
specialinvoke v2.<com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException: void <init>(com.fasterxml.jackson.core.JsonParser,org.yaml.snakeyaml.error.YAMLException)>(v0, v1);
return v2;
}
}