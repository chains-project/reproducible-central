public class com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer INSTANCE;
private void <init>()
{
com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(class "Ljava/util/stream/DoubleStream;");
return;
}
public void serialize(java.util.stream.DoubleStream, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.lang.Throwable v5;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer v0;
java.io.IOException v7;
java.util.function.DoubleConsumer v4;
java.util.stream.DoubleStream v1;
com.fasterxml.jackson.datatype.jdk8.WrappedIOException v6;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer;
v1 := @parameter0: java.util.stream.DoubleStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();
v4 = staticinvoke <com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer$lambda_serialize_0__44: java.util.function.DoubleConsumer bootstrap$(com.fasterxml.jackson.core.JsonGenerator)>(v2);
interfaceinvoke v1.<java.util.stream.DoubleStream: void forEachOrdered(java.util.function.DoubleConsumer)>(v4);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
label2:
interfaceinvoke v1.<java.util.stream.DoubleStream: void close()>();
goto label5;
label3:
v5 := @caughtexception;
throw v5;
label4:
v6 := @caughtexception;
v7 = virtualinvoke v6.<com.fasterxml.jackson.datatype.jdk8.WrappedIOException: java.io.IOException getCause()>();
throw v7;
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch com.fasterxml.jackson.datatype.jdk8.WrappedIOException from label1 to label4 with label4;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer v0;
v0 = new com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer: void <init>()>();
<com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer: com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer INSTANCE> = v0;
return;
}
}