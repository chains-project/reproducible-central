public class com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers extends com.fasterxml.jackson.databind.ser.Serializers$Base implements java.io.Serializable
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers v0;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.Serializers$Base: void <init>()>();
return;
}
public com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.type.ReferenceType, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.datatype.jdk8.OptionalSerializer v12;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.MapperFeature v9;
com.fasterxml.jackson.databind.JsonSerializer v5;
com.fasterxml.jackson.databind.BeanDescription v3;
boolean v10, v11, v14, v17, v20, v8;
com.fasterxml.jackson.datatype.jdk8.OptionalIntSerializer v15;
com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers v0;
com.fasterxml.jackson.datatype.jdk8.OptionalDoubleSerializer v21;
com.fasterxml.jackson.databind.type.ReferenceType v2;
com.fasterxml.jackson.datatype.jdk8.OptionalLongSerializer v18;
java.lang.Class v13, v16, v19, v6, v7;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.type.ReferenceType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.ReferenceType: java.lang.Class getRawClass()>();
v7 = class "Ljava/util/Optional;";
v8 = virtualinvoke v7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v8 == 0 goto label3;
if v4 != null goto label1;
v9 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v9);
if v10 == 0 goto label1;
v11 = 1;
goto label2;
label1:
v11 = 0;
label2:
v12 = new com.fasterxml.jackson.datatype.jdk8.OptionalSerializer;
specialinvoke v12.<com.fasterxml.jackson.datatype.jdk8.OptionalSerializer: void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v2, v11, v4, v5);
return v12;
label3:
v13 = class "Ljava/util/OptionalInt;";
v14 = virtualinvoke v13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v14 == 0 goto label4;
v15 = <com.fasterxml.jackson.datatype.jdk8.OptionalIntSerializer: com.fasterxml.jackson.datatype.jdk8.OptionalIntSerializer INSTANCE>;
return v15;
label4:
v16 = class "Ljava/util/OptionalLong;";
v17 = virtualinvoke v16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v17 == 0 goto label5;
v18 = <com.fasterxml.jackson.datatype.jdk8.OptionalLongSerializer: com.fasterxml.jackson.datatype.jdk8.OptionalLongSerializer INSTANCE>;
return v18;
label5:
v19 = class "Ljava/util/OptionalDouble;";
v20 = virtualinvoke v19.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v6);
if v20 == 0 goto label6;
v21 = <com.fasterxml.jackson.datatype.jdk8.OptionalDoubleSerializer: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleSerializer INSTANCE>;
return v21;
label6:
return null;
}
public com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.datatype.jdk8.IntStreamSerializer v10;
com.fasterxml.jackson.datatype.jdk8.StreamSerializer v20;
com.fasterxml.jackson.databind.type.TypeFactory v16, v21;
int v18;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v19, v2, v23;
com.fasterxml.jackson.datatype.jdk8.LongStreamSerializer v7;
boolean v12, v15, v6, v9;
com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers v0;
com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer v13;
com.fasterxml.jackson.databind.JavaType[] v17, v22;
java.lang.Class v11, v14, v4, v5, v8;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.Jdk8Serializers;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = class "Ljava/util/stream/LongStream;";
v6 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v4);
if v6 == 0 goto label1;
v7 = <com.fasterxml.jackson.datatype.jdk8.LongStreamSerializer: com.fasterxml.jackson.datatype.jdk8.LongStreamSerializer INSTANCE>;
return v7;
label1:
v8 = class "Ljava/util/stream/IntStream;";
v9 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v4);
if v9 == 0 goto label2;
v10 = <com.fasterxml.jackson.datatype.jdk8.IntStreamSerializer: com.fasterxml.jackson.datatype.jdk8.IntStreamSerializer INSTANCE>;
return v10;
label2:
v11 = class "Ljava/util/stream/DoubleStream;";
v12 = virtualinvoke v11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v4);
if v12 == 0 goto label3;
v13 = <com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer: com.fasterxml.jackson.datatype.jdk8.DoubleStreamSerializer INSTANCE>;
return v13;
label3:
v14 = class "Ljava/util/stream/Stream;";
v15 = virtualinvoke v14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v4);
if v15 == 0 goto label7;
v16 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v2, class "Ljava/util/stream/Stream;");
if v17 == null goto label4;
v18 = lengthof v17;
if v18 == 1 goto label5;
label4:
v19 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
goto label6;
label5:
v19 = v17[0];
label6:
v20 = new com.fasterxml.jackson.datatype.jdk8.StreamSerializer;
v21 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v22 = newarray (com.fasterxml.jackson.databind.JavaType)[1];
v22[0] = v19;
v23 = virtualinvoke v21.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(class "Ljava/util/stream/Stream;", v22);
specialinvoke v20.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v23, v19);
return v20;
label7:
return null;
}
}