public class com.fasterxml.jackson.datatype.jdk8.StreamSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
private static final long serialVersionUID;
private final com.fasterxml.jackson.databind.JavaType elemType;
private final transient com.fasterxml.jackson.databind.JsonSerializer elemSerializer;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.datatype.jdk8.StreamSerializer v0;
com.fasterxml.jackson.databind.JavaType v1, v2;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.StreamSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, null);
return;
}
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.datatype.jdk8.StreamSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v1, v2;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.StreamSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JavaType elemType> = v2;
v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JsonSerializer elemSerializer> = v3;
return;
}
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.MapperFeature v5;
com.fasterxml.jackson.datatype.jdk8.StreamSerializer v0, v9;
com.fasterxml.jackson.databind.type.TypeFactory v10;
com.fasterxml.jackson.databind.JsonSerializer v16;
com.fasterxml.jackson.databind.JavaType v12, v13, v14, v15, v3, v7;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4, v6, v8;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JavaType[] v11;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.StreamSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JavaType elemType>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");
if v4 != 0 goto label2;
v5 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v5);
if v6 != 0 goto label1;
v7 = v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JavaType elemType>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();
if v8 == 0 goto label2;
label1:
v9 = new com.fasterxml.jackson.datatype.jdk8.StreamSerializer;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v11 = newarray (com.fasterxml.jackson.databind.JavaType)[1];
v12 = v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JavaType elemType>;
v11[0] = v12;
v13 = virtualinvoke v10.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>(class "Ljava/util/stream/Stream;", v11);
v14 = v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JavaType elemType>;
v15 = v0.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: com.fasterxml.jackson.databind.JavaType elemType>;
v16 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v15, v2);
specialinvoke v9.<com.fasterxml.jackson.datatype.jdk8.StreamSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v13, v14, v16);
return v9;
label2:
return v0;
}
public void serialize(java.util.stream.Stream, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.lang.Throwable v5;
com.fasterxml.jackson.core.JsonGenerator v2;
java.io.IOException v7;
java.util.function.Consumer v4;
com.fasterxml.jackson.datatype.jdk8.StreamSerializer v0;
java.util.stream.Stream v1;
com.fasterxml.jackson.datatype.jdk8.WrappedIOException v6;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.StreamSerializer;
v1 := @parameter0: java.util.stream.Stream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();
v4 = staticinvoke <com.fasterxml.jackson.datatype.jdk8.StreamSerializer$lambda_serialize_0__41: java.util.function.Consumer bootstrap$(com.fasterxml.jackson.datatype.jdk8.StreamSerializer,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.core.JsonGenerator)>(v0, v3, v2);
interfaceinvoke v1.<java.util.stream.Stream: void forEachOrdered(java.util.function.Consumer)>(v4);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
label2:
interfaceinvoke v1.<java.util.stream.Stream: void close()>();
goto label5;
label3:
v5 := @caughtexception;
throw v5;
label4:
v6 := @caughtexception;
v7 = virtualinvoke v6.<com.fasterxml.jackson.datatype.jdk8.WrappedIOException: java.io.IOException getCause()>();
throw v7;
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch com.fasterxml.jackson.datatype.jdk8.WrappedIOException from label1 to label4 with label4;
}
}