public class com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase
{
private static final long serialVersionUID;
protected static final java.util.regex.Pattern ISO8601_COLONLESS_OFFSET_REGEX;
public static final com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer INSTANT;
public static final com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer OFFSET_DATE_TIME;
public static final com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer ZONED_DATE_TIME;
protected final java.util.function.Function fromMilliseconds;
protected final java.util.function.Function fromNanoseconds;
protected final java.util.function.Function parsedToValue;
protected final java.util.function.BiFunction adjust;
protected final boolean replaceZeroOffsetAsZ;
protected final java.lang.Boolean _adjustToContextTZOverride;
protected void <init>(java.lang.Class, java.time.format.DateTimeFormatter, java.util.function.Function, java.util.function.Function, java.util.function.Function, java.util.function.BiFunction, boolean)
{
java.util.function.BiFunction v6, v8;
java.util.function.Function v3, v4, v5;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
java.time.format.DateTimeFormatter v2;
java.lang.Class v1;
boolean v7;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 := @parameter2: java.util.function.Function;
v4 := @parameter3: java.util.function.Function;
v5 := @parameter4: java.util.function.Function;
v6 := @parameter5: java.util.function.BiFunction;
v7 := @parameter6: boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(v1, v2);
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue> = v3;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds> = v4;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds> = v5;
if v6 != null goto label1;
v8 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_new_7__27: java.util.function.BiFunction bootstrap$()>();
goto label2;
label1:
v8 = v6;
label2:
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust> = v8;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean replaceZeroOffsetAsZ> = v7;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride> = null;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer, java.time.format.DateTimeFormatter)
{
java.util.function.BiFunction v7;
java.util.function.Function v4, v5, v6;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0, v1;
java.time.format.DateTimeFormatter v2, v8, v9;
java.lang.Boolean v11;
java.lang.Class v3;
boolean v10;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 = virtualinvoke v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Class handledType()>();
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(v3, v2);
v4 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue> = v4;
v5 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds> = v5;
v6 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds> = v6;
v7 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust> = v7;
v8 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v9 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
if v8 != v9 goto label1;
v10 = 1;
goto label2;
label1:
v10 = 0;
label2:
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean replaceZeroOffsetAsZ> = v10;
v11 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride> = v11;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer, java.lang.Boolean)
{
java.util.function.BiFunction v8;
java.util.function.Function v5, v6, v7;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0, v1;
java.time.format.DateTimeFormatter v4;
java.lang.Boolean v2;
java.lang.Class v3;
boolean v9;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v2 := @parameter1: java.lang.Boolean;
v3 = virtualinvoke v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Class handledType()>();
v4 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(v3, v4);
v5 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue> = v5;
v6 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds> = v6;
v7 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds> = v7;
v8 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust> = v8;
v9 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean replaceZeroOffsetAsZ>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean replaceZeroOffsetAsZ> = v9;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride> = v2;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer, java.time.format.DateTimeFormatter, java.lang.Boolean)
{
java.util.function.BiFunction v8;
java.util.function.Function v5, v6, v7;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0, v1;
java.time.format.DateTimeFormatter v10, v2, v9;
java.lang.Boolean v12, v3;
java.lang.Class v4;
boolean v11;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 := @parameter2: java.lang.Boolean;
v4 = virtualinvoke v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Class handledType()>();
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter,java.lang.Boolean)>(v4, v2, v3);
v5 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue> = v5;
v6 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds> = v6;
v7 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds> = v7;
v8 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust> = v8;
v9 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v10 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
if v9 != v10 goto label1;
v11 = 1;
goto label2;
label1:
v11 = 0;
label2:
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean replaceZeroOffsetAsZ> = v11;
v12 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride> = v12;
return;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer withDateFormat(java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v1, v2;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0, v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
v2 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
specialinvoke v3.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer,java.time.format.DateTimeFormatter)>(v0, v1);
return v3;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer withLeniency(java.lang.Boolean)
{
java.time.format.DateTimeFormatter v3;
java.lang.Boolean v1;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0, v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: java.lang.Boolean;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v3 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer,java.time.format.DateTimeFormatter,java.lang.Boolean)>(v0, v3, v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v1;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
return v0;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase _withFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.'annotation'.JsonFormat$Value)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v3;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0, v9;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase v4;
java.lang.Boolean v6, v7;
boolean v8;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.JsonFormat$Value;
v4 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase _withFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(v1, v2, v3);
v5 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v5);
v7 = v4.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride>;
v8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v6, v7);
if v8 != 0 goto label1;
v9 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
specialinvoke v9.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer,java.lang.Boolean)>(v4, v6);
return v9;
label1:
return v4;
}
public java.time.temporal.Temporal deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
long v6;
java.math.BigDecimal v4;
int v3;
com.fasterxml.jackson.core.JsonToken v16, v17, v18;
java.lang.String v11, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
com.fasterxml.jackson.core.JsonToken[] v15;
java.lang.Class v10;
java.lang.Object v13, v14, v19;
java.time.temporal.Temporal v12, v5, v7, v9;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label4;
case 2: goto label7;
case 3: goto label6;
case 4: goto label7;
case 5: goto label7;
case 6: goto label3;
case 7: goto label2;
case 8: goto label1;
case 9: goto label7;
case 10: goto label7;
case 11: goto label7;
case 12: goto label5;
default: goto label7;
};
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.temporal.Temporal _fromDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal)>(v2, v4);
return v5;
label2:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: long getLongValue()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.temporal.Temporal _fromLong(com.fasterxml.jackson.databind.DeserializationContext,long)>(v2, v6);
return v7;
label3:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.temporal.Temporal _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v8);
return v9;
label4:
v10 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Class handledType()>();
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v10);
v12 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.temporal.Temporal _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v11);
return v12;
label5:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v13;
label6:
v14 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v14;
label7:
v15 = newarray (com.fasterxml.jackson.core.JsonToken)[3];
v16 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v15[0] = v16;
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v15[1] = v17;
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v15[2] = v18;
v19 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken[])>(v2, v1, v15);
return v19;
}
protected boolean shouldAdjustToContextTimezone(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Boolean v2, v3;
com.fasterxml.jackson.databind.DeserializationFeature v5;
boolean v4;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Boolean _adjustToContextTZOverride>;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
goto label2;
label1:
v5 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature ADJUST_DATES_TO_CONTEXT_TIME_ZONE>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v5);
label2:
return v4;
}
protected int _countPeriods(java.lang.String)
{
int v2, v3, v4, v6;
char v5;
java.lang.String v1;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: java.lang.String;
v2 = 0;
v3 = 0;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
label1:
if v3 >= v4 goto label5;
v5 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v3);
if v5 < 48 goto label2;
if v5 <= 57 goto label4;
label2:
if v5 != 46 goto label3;
v2 = v2 + 1;
goto label4;
label3:
v6 = (int) -1;
return v6;
label4:
v3 = v3 + 1;
goto label1;
label5:
return v2;
}
protected java.time.temporal.Temporal _fromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
java.util.function.BiFunction v28;
java.math.BigDecimal v16;
java.time.DateTimeException v31;
boolean v27;
java.time.ZoneId v29;
java.time.temporal.Temporal v15, v17;
long v14;
java.util.function.Function v25;
java.time.temporal.TemporalAccessor v24;
int v13, v5;
java.lang.String v3, v4;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.NumberFormatException v18;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
java.time.format.DateTimeFormatter v10, v11, v12, v19, v20, v21, v22, v23, v7, v8, v9;
java.lang.Object v26, v30, v6;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label01;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Object _fromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v4);
return v6;
label01:
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v8 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
if v7 == v8 goto label02;
v9 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v10 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_OFFSET_DATE_TIME>;
if v9 == v10 goto label02;
v11 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v12 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_ZONED_DATE_TIME>;
if v11 != v12 goto label09;
label02:
v13 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: int _countPeriods(java.lang.String)>(v4);
if v13 < 0 goto label08;
label03:
if v13 != 0 goto label05;
v14 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v4);
v15 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.temporal.Temporal _fromLong(com.fasterxml.jackson.databind.DeserializationContext,long)>(v2, v14);
label04:
return v15;
label05:
if v13 != 1 goto label08;
v16 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(java.lang.String)>(v4);
v17 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.temporal.Temporal _fromDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal)>(v2, v16);
label06:
return v17;
label07:
v18 := @caughtexception;
label08:
v4 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.String replaceZeroOffsetAsZIfNecessary(java.lang.String)>(v4);
label09:
v19 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v20 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_OFFSET_DATE_TIME>;
if v19 == v20 goto label10;
v21 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v22 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_ZONED_DATE_TIME>;
if v21 != v22 goto label11;
label10:
v4 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.String addInColonToOffsetIfMissing(java.lang.String)>(v4);
label11:
v23 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.format.DateTimeFormatter _formatter>;
v24 = virtualinvoke v23.<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>(v4);
v25 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function parsedToValue>;
v26 = interfaceinvoke v25.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v24);
v27 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean shouldAdjustToContextTimezone(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
if v27 == 0 goto label14;
v28 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.BiFunction adjust>;
v29 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.ZoneId getZone(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v30 = interfaceinvoke v28.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v26, v29);
label12:
return v30;
label13:
v31 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.time.DateTimeException,java.lang.String)>(v2, v31, v4);
label14:
return v26;
catch java.lang.NumberFormatException from label03 to label04 with label07;
catch java.lang.NumberFormatException from label05 to label06 with label07;
catch java.time.DateTimeException from label11 to label12 with label13;
}
protected java.time.temporal.Temporal _fromLong(com.fasterxml.jackson.databind.DeserializationContext, long)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$FromDecimalArguments v6;
long v2;
java.util.function.Function v5, v9;
com.fasterxml.jackson.databind.DeserializationFeature v3;
java.time.ZoneId v11, v7;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
java.lang.Object v12, v8;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$FromIntegerArguments v10;
boolean v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: long;
v3 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v3);
if v4 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds>;
v6 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$FromDecimalArguments;
v7 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.ZoneId getZone(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
specialinvoke v6.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$FromDecimalArguments: void <init>(long,int,java.time.ZoneId)>(v2, 0, v7);
v8 = interfaceinvoke v5.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v6);
return v8;
label1:
v9 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromMilliseconds>;
v10 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$FromIntegerArguments;
v11 = specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.time.ZoneId getZone(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
specialinvoke v10.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$FromIntegerArguments: void <init>(long,java.time.ZoneId)>(v2, v11);
v12 = interfaceinvoke v9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v10);
return v12;
}
protected java.time.temporal.Temporal _fromDecimal(com.fasterxml.jackson.databind.DeserializationContext, java.math.BigDecimal)
{
java.math.BigDecimal v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.function.BiFunction v3;
java.lang.Object v4, v6;
java.util.function.Function v5;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.math.BigDecimal;
v3 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda__fromDecimal_8__28: java.util.function.BiFunction bootstrap$(com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer,com.fasterxml.jackson.databind.DeserializationContext)>(v0, v1);
v4 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.DecimalUtils: java.lang.Object extractSecondsAndNanos(java.math.BigDecimal,java.util.function.BiFunction)>(v2, v3);
v5 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.function.Function fromNanoseconds>;
v6 = interfaceinvoke v5.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v4);
return v6;
}
private java.time.ZoneId getZone(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.TimeZone v4;
java.lang.Class v2;
java.time.ZoneId v3, v5;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.Class _valueClass>;
if v2 != class "Ljava/time/Instant;" goto label1;
v3 = null;
goto label2;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.util.TimeZone getTimeZone()>();
v5 = virtualinvoke v4.<java.util.TimeZone: java.time.ZoneId toZoneId()>();
v3 = virtualinvoke v5.<java.time.ZoneId: java.time.ZoneId normalized()>();
label2:
return v3;
}
private java.lang.String replaceZeroOffsetAsZIfNecessary(java.lang.String)
{
java.lang.String v1, v3;
boolean v2;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: boolean replaceZeroOffsetAsZ>;
if v2 == 0 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.lang.String replaceZeroOffsetAsZ(java.lang.String)>(v1);
return v3;
label1:
return v1;
}
private static java.lang.String replaceZeroOffsetAsZ(java.lang.String)
{
int v1, v2, v3, v4;
java.lang.String v0, v10, v12, v13, v6, v7, v9;
boolean v11, v5, v8;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int lastIndexOf(int)>(43);
if v1 >= 0 goto label01;
return v0;
label01:
v2 = v1 + 1;
v3 = virtualinvoke v0.<java.lang.String: int length()>();
v4 = v3 - v2;
tableswitch(v4)
{
case 2: goto label02;
case 3: goto label11;
case 4: goto label05;
case 5: goto label08;
default: goto label11;
};
label02:
v5 = virtualinvoke v0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(v2, "00", 0, v4);
if v5 == 0 goto label03;
v6 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v1);
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001Z");
goto label04;
label03:
v7 = v0;
label04:
return v7;
label05:
v8 = virtualinvoke v0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(v2, "0000", 0, v4);
if v8 == 0 goto label06;
v9 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v1);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001Z");
goto label07;
label06:
v10 = v0;
label07:
return v10;
label08:
v11 = virtualinvoke v0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(v2, "00:00", 0, v4);
if v11 == 0 goto label09;
v12 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v1);
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001Z");
goto label10;
label09:
v13 = v0;
label10:
return v13;
label11:
return v0;
}
private java.lang.String addInColonToOffsetIfMissing(java.lang.String)
{
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v0;
java.util.regex.Matcher v3;
java.lang.StringBuilder v5;
java.lang.String v1, v6, v7, v8;
java.util.regex.Pattern v2;
boolean v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v1 := @parameter0: java.lang.String;
v2 = <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.regex.Pattern ISO8601_COLONLESS_OFFSET_REGEX>;
v3 = virtualinvoke v2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v1);
v4 = virtualinvoke v3.<java.util.regex.Matcher: boolean find()>();
if v4 == 0 goto label1;
v5 = new java.lang.StringBuilder;
v6 = virtualinvoke v3.<java.util.regex.Matcher: java.lang.String group(int)>(0);
specialinvoke v5.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(3, ":");
v7 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
v8 = virtualinvoke v3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(v7);
return v8;
label1:
return v1;
}
static void <clinit>()
{
java.util.function.BiFunction v11, v17;
java.util.function.Function v10, v14, v15, v16, v3, v4, v5, v8, v9;
com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer v1, v12, v6;
java.time.format.DateTimeFormatter v13, v2, v7;
java.util.regex.Pattern v0;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[+-][0-9]{4}(?=\\[|$)");
<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: java.util.regex.Pattern ISO8601_COLONLESS_OFFSET_REGEX> = v0;
v1 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v2 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v3 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$from__29: java.util.function.Function bootstrap$()>();
v4 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_0__30: java.util.function.Function bootstrap$()>();
v5 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_1__31: java.util.function.Function bootstrap$()>();
specialinvoke v1.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: void <init>(java.lang.Class,java.time.format.DateTimeFormatter,java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BiFunction,boolean)>(class "Ljava/time/Instant;", v2, v3, v4, v5, null, 1);
<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer INSTANT> = v1;
v6 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v7 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_OFFSET_DATE_TIME>;
v8 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$from__32: java.util.function.Function bootstrap$()>();
v9 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_2__33: java.util.function.Function bootstrap$()>();
v10 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_3__34: java.util.function.Function bootstrap$()>();
v11 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_4__35: java.util.function.BiFunction bootstrap$()>();
specialinvoke v6.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: void <init>(java.lang.Class,java.time.format.DateTimeFormatter,java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BiFunction,boolean)>(class "Ljava/time/OffsetDateTime;", v7, v8, v9, v10, v11, 1);
<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer OFFSET_DATE_TIME> = v6;
v12 = new com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
v13 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_ZONED_DATE_TIME>;
v14 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$from__36: java.util.function.Function bootstrap$()>();
v15 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_5__37: java.util.function.Function bootstrap$()>();
v16 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$lambda_static_6__38: java.util.function.Function bootstrap$()>();
v17 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer$withZoneSameInstant__39: java.util.function.BiFunction bootstrap$()>();
specialinvoke v12.<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: void <init>(java.lang.Class,java.time.format.DateTimeFormatter,java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.BiFunction,boolean)>(class "Ljava/time/ZonedDateTime;", v13, v14, v15, v16, v17, 0);
<com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer ZONED_DATE_TIME> = v12;
return;
}
}