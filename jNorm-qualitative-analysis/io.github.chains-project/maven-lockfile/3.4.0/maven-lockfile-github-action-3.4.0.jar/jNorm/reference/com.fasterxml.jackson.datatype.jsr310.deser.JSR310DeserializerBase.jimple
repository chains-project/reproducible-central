abstract class com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
private static final long serialVersionUID;
protected final boolean _isLenient;
protected void <init>(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient> = 1;
return;
}
protected void <init>(java.lang.Class, java.lang.Boolean)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.lang.Boolean v2, v3;
java.lang.Class v1;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(v1);
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean equals(java.lang.Object)>(v2);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient> = v5;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0, v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer)>(v1);
v2 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient> = v2;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase, java.lang.Boolean)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0, v1;
java.lang.Boolean v2, v3;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer)>(v1);
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean equals(java.lang.Object)>(v2);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient> = v5;
return;
}
protected abstract com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase withLeniency(java.lang.Boolean);
protected boolean isLenient()
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient>;
return v1;
}
protected java.lang.Object _fromEmptyString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
com.fasterxml.jackson.databind.cfg.CoercionAction v4;
int[] v5;
int v6, v7;
java.lang.Object v11, v8;
com.fasterxml.jackson.core.JsonToken v10;
java.lang.String v3;
boolean v9;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v3);
v5 = <com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();
v7 = v5[v6];
tableswitch(v7)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label2;
default: goto label2;
};
label1:
v8 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v8;
label2:
v9 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isLenient>;
if v9 != 0 goto label3;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v11 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Object _failForNotLenient(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>(v1, v2, v10);
return v11;
label3:
return null;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType DateTime>;
return v1;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
protected boolean _isValidTimestampString(java.lang.String)
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
char v3;
java.lang.String v1;
boolean v2, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: boolean _isIntNumber(java.lang.String)>(v1);
if v2 == 0 goto label3;
v3 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
if v3 != 45 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
v5 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: boolean inLongRange(java.lang.String,boolean)>(v1, v4);
if v5 == 0 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
}
protected java.lang.Object _reportWrongToken(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonToken, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v4;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.lang.Class v6;
com.fasterxml.jackson.core.JsonToken v2;
java.lang.String v3, v5, v7;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.String;
v4 = newarray (java.lang.Object)[3];
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: java.lang.String name()>();
v4[0] = v5;
v4[1] = v3;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v4[2] = v7;
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(v0, v2, "Expected %s for \'%s\' of %s value", v4);
return null;
}
protected transient java.lang.Object _reportWrongToken(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonToken[]) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.util.List v7;
com.fasterxml.jackson.core.JsonToken[] v3;
java.lang.Class v4, v9;
java.lang.Object v11;
com.fasterxml.jackson.core.JsonToken v6;
java.lang.String v10, v8;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken[];
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v5 = newarray (java.lang.Object)[3];
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();
v5[0] = v6;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
v8 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
v5[1] = v8;
v9 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v10 = virtualinvoke v9.<java.lang.Class: java.lang.String getName()>();
v5[2] = v10;
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v4, "Unexpected token (%s), expected one of %s for %s value", v5);
return v11;
}
protected java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext, java.time.DateTimeException, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v14;
java.lang.Object[] v5;
java.lang.String v10, v3, v7, v9;
java.time.DateTimeException v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.io.IOException v13;
java.lang.Class v4, v6, v8;
java.lang.Object v11;
com.fasterxml.jackson.databind.JsonMappingException v12, v15;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.time.DateTimeException;
v3 := @parameter2: java.lang.String;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v5 = newarray (java.lang.Object)[3];
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v5[0] = v7;
v8 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v5[1] = v9;
v10 = virtualinvoke v2.<java.time.DateTimeException: java.lang.String getMessage()>();
v5[2] = v10;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v4, v3, "Failed to deserialize %s: (%s) %s", v5);
label2:
return v11;
label3:
v12 := @caughtexception;
virtualinvoke v12.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.Throwable initCause(java.lang.Throwable)>(v2);
throw v12;
label4:
v13 := @caughtexception;
v14 = virtualinvoke v13.<java.io.IOException: java.lang.Throwable getCause()>();
if null != v14 goto label5;
virtualinvoke v13.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(v2);
label5:
v15 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v13);
throw v15;
catch com.fasterxml.jackson.databind.JsonMappingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
protected transient java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Object[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.io.IOException v9;
java.lang.Class v5;
java.lang.Object v7;
com.fasterxml.jackson.core.JsonToken v6;
com.fasterxml.jackson.databind.JsonMappingException v10, v8;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v6 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v5, v6, v2, v3, v4);
label2:
return v7;
label3:
v8 := @caughtexception;
throw v8;
label4:
v9 := @caughtexception;
v10 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v9);
throw v10;
catch com.fasterxml.jackson.databind.JsonMappingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
protected transient java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.JsonToken[]) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v4;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.util.List v6;
com.fasterxml.jackson.core.JsonToken[] v3;
java.lang.Class v7;
java.lang.Object v9;
com.fasterxml.jackson.core.JsonToken v5;
java.lang.String v8;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken[];
v4 = newarray (java.lang.Object)[3];
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4[0] = v5;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
v4[1] = v6;
v7 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v4[2] = v8;
v9 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v1, v2, "Unexpected token (%s), expected one of %s for %s value", v4);
return v9;
}
protected java.lang.Object _failForNotLenient(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v5;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.lang.Class v4, v6;
java.lang.Object v9;
com.fasterxml.jackson.core.JsonToken v3, v8;
java.lang.String v7;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.core.JsonToken;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v5 = newarray (java.lang.Object)[2];
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: java.lang.Class handledType()>();
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(v6);
v5[0] = v7;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v5[1] = v8;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v4, v3, v1, "Cannot deserialize instance of %s out of %s token: not allowed because \'strict\' mode set for property or type (enable \'lenient\' handling to allow)", v5);
return v9;
}
protected java.time.DateTimeException _peelDTE(java.time.DateTimeException)
{
java.lang.Throwable v2;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase v0;
java.time.DateTimeException v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase;
v1 := @parameter0: java.time.DateTimeException;
label1:
v2 = virtualinvoke v1.<java.time.DateTimeException: java.lang.Throwable getCause()>();
if v2 == null goto label2;
v3 = v2 instanceof java.time.DateTimeException;
if v3 != 0 goto label1;
label2:
return v2;
}
}