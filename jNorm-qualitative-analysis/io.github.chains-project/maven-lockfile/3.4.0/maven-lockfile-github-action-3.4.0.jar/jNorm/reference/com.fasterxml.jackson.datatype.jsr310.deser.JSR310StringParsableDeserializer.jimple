public class com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase implements com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
private static final long serialVersionUID;
protected static final int TYPE_PERIOD;
protected static final int TYPE_ZONE_ID;
protected static final int TYPE_ZONE_OFFSET;
public static final com.fasterxml.jackson.databind.JsonDeserializer PERIOD;
public static final com.fasterxml.jackson.databind.JsonDeserializer ZONE_ID;
public static final com.fasterxml.jackson.databind.JsonDeserializer ZONE_OFFSET;
protected final int _typeSelector;
protected void <init>(java.lang.Class, int)
{
int v2;
java.lang.Class v1;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: int;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: int _typeSelector> = v2;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer, java.lang.Boolean)
{
int v3;
java.lang.Boolean v2;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase,java.lang.Boolean)>(v1, v2);
v3 = v1.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: int _typeSelector>;
v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: int _typeSelector> = v3;
return;
}
protected static com.fasterxml.jackson.databind.JsonDeserializer createDeserializer(java.lang.Class, int)
{
int v1;
java.lang.Class v0;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: int;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: void <init>(java.lang.Class,int)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer withLeniency(java.lang.Boolean)
{
java.lang.Boolean v1, v3;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0, v6;
boolean v2, v4, v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: java.lang.Boolean;
v2 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: boolean _isLenient>;
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean equals(java.lang.Object)>(v1);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
if v2 != v5 goto label3;
return v0;
label3:
v6 = new com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
specialinvoke v6.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer,java.lang.Boolean)>(v0, v1);
return v6;
}
public com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v4;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0, v5;
java.lang.Boolean v7;
java.lang.Class v3;
boolean v6;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Class handledType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v3);
v5 = v0;
if v4 == null goto label1;
v6 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasLenient()>();
if v6 == 0 goto label1;
v7 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getLenient()>();
if v7 == null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer withLeniency(java.lang.Boolean)>(v7);
label1:
return v5;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0;
com.fasterxml.jackson.core.JsonToken v11, v17, v3;
java.lang.String v5, v9;
boolean v12, v14, v4, v7;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v16, v8;
java.lang.Object v10, v13, v15, v6;
com.fasterxml.jackson.databind.JsonMappingException v18;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v5);
return v6;
label1:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v7 == 0 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Class handledType()>();
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v8);
v10 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v9);
return v10;
label2:
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v11);
if v12 == 0 goto label3;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v13;
label3:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v14 == 0 goto label4;
v15 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v15;
label4:
v16 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Class handledType()>();
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v16, v17, null);
throw v18;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0;
java.lang.Object v6, v7;
com.fasterxml.jackson.core.JsonToken v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();
if v4 == null goto label1;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonToken: boolean isScalarValue()>();
if v5 == 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v6;
label1:
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v7;
}
protected java.lang.Object _fromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
java.lang.Object[] v11;
com.fasterxml.jackson.databind.cfg.CoercionInputShape v8;
com.fasterxml.jackson.databind.cfg.CoercionAction v10, v16, v9;
com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer v0;
int v18, v5;
com.fasterxml.jackson.core.JsonToken v14;
java.lang.String v12, v3, v4;
java.time.ZoneOffset v21;
java.time.DateTimeException v22;
boolean v13;
java.time.Period v19;
com.fasterxml.jackson.databind.type.LogicalType v6;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.time.ZoneId v20;
java.lang.Class v7;
java.lang.Object v15, v17, v23;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label04;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.type.LogicalType logicalType()>();
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Class _valueClass>;
v8 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(v6, v7, v8);
v10 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;
if v9 != v10 goto label01;
v11 = newarray (java.lang.Object)[1];
v12 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.String _coercedTypeDesc()>();
v11[0] = v12;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot coerce empty String (\"\") to %s (but could if enabling coercion using `CoercionConfig`)", v11);
label01:
v13 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: boolean isLenient()>();
if v13 != 0 goto label02;
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v15 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object _failForNotLenient(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>(v1, v2, v14);
return v15;
label02:
v16 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v9 != v16 goto label03;
v17 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v17;
label03:
return null;
label04:
v18 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: int _typeSelector>;
tableswitch(v18)
{
case 1: goto label05;
case 2: goto label07;
case 3: goto label09;
default: goto label12;
};
label05:
v19 = staticinvoke <java.time.Period: java.time.Period parse(java.lang.CharSequence)>(v4);
label06:
return v19;
label07:
v20 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(v4);
label08:
return v20;
label09:
v21 = staticinvoke <java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>(v4);
label10:
return v21;
label11:
v22 := @caughtexception;
v23 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.time.DateTimeException,java.lang.String)>(v2, v22, v4);
return v23;
label12:
staticinvoke <com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();
return null;
catch java.time.DateTimeException from label04 to label06 with label11;
catch java.time.DateTimeException from label07 to label08 with label11;
catch java.time.DateTimeException from label09 to label10 with label11;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.JsonDeserializer v0, v1, v2;
v0 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createDeserializer(java.lang.Class,int)>(class "Ljava/time/Period;", 1);
<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.JsonDeserializer PERIOD> = v0;
v1 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createDeserializer(java.lang.Class,int)>(class "Ljava/time/ZoneId;", 2);
<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.JsonDeserializer ZONE_ID> = v1;
v2 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.JsonDeserializer createDeserializer(java.lang.Class,int)>(class "Ljava/time/ZoneOffset;", 3);
<com.fasterxml.jackson.datatype.jsr310.deser.JSR310StringParsableDeserializer: com.fasterxml.jackson.databind.JsonDeserializer ZONE_OFFSET> = v2;
return;
}
}