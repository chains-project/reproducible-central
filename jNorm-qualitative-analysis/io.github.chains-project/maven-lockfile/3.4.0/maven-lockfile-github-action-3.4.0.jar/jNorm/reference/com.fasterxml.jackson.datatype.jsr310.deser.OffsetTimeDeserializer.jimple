public class com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_OFFSET_TIME>;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return;
}
protected void <init>(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(class "Ljava/time/OffsetTime;", v1);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer, java.lang.Boolean)
{
java.lang.Boolean v2;
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase,java.lang.Boolean)>(v1, v2);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer withDateFormat(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0, v2;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer withLeniency(java.lang.Boolean)
{
java.lang.Boolean v1;
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0, v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: java.lang.Boolean;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer,java.lang.Boolean)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
return v0;
}
public java.time.OffsetTime deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v25, v46;
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0;
java.time.ZoneOffset v51;
boolean v11, v13, v16, v26, v4, v47, v7;
java.time.OffsetTime v10, v27, v52, v6;
com.fasterxml.jackson.databind.JsonMappingException v19, v58;
java.lang.Object[] v31;
int v32, v33, v34, v35, v40, v41;
com.fasterxml.jackson.core.JsonToken v12, v15, v18, v20, v21, v22, v23, v24, v28, v29, v3, v36, v37, v38, v39, v42, v43, v44, v45, v48, v49, v53, v54, v55, v57;
java.lang.String v5, v50, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v17, v30, v56, v8;
java.lang.Object v14;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label01;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.time.OffsetTime _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v5);
return v6;
label01:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v7 == 0 goto label02;
v8 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Class handledType()>();
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v8);
v10 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.time.OffsetTime _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v9);
return v10;
label02:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v11 != 0 goto label05;
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v12);
if v13 == 0 goto label03;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v14;
label03:
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v15);
if v16 == 0 goto label04;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: void _throwNoNumericTimestampNeedTimeZone(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label04:
v17 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Class handledType()>();
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v17, v18, "Expected array or string.");
throw v19;
label05:
v20 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v20 == v21 goto label10;
v22 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v20 != v22 goto label06;
return null;
label06:
v23 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v20 == v23 goto label07;
v24 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v20 != v24 goto label09;
label07:
v25 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v26 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v25);
if v26 == 0 goto label09;
v27 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.time.OffsetTime deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v29 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v28 == v29 goto label08;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label08:
return v27;
label09:
v30 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Class handledType()>();
v31 = newarray (java.lang.Object)[1];
v31[0] = v20;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v30, "Unexpected token (%s) within Array, expected VALUE_NUMBER_INT", v31);
label10:
v32 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v33 = (int) -1;
v34 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int nextIntValue(int)>(v33);
v35 = (int) -1;
if v34 != v35 goto label13;
v36 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();
v37 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v36 != v37 goto label11;
return null;
label11:
v38 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v36 == v38 goto label12;
v39 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Object _reportWrongToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v2, v39, "minutes");
label12:
v34 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
label13:
v40 = 0;
v41 = 0;
v42 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v43 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v42 != v43 goto label15;
v41 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v44 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v45 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v44 != v45 goto label15;
v40 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
if v40 >= 1000 goto label14;
v46 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v47 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v46);
if v47 != 0 goto label14;
v40 = v40 * 1000000;
label14:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
label15:
v48 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>();
v49 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v48 != v49 goto label17;
v50 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v51 = staticinvoke <java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>(v50);
v52 = staticinvoke <java.time.OffsetTime: java.time.OffsetTime of(int,int,int,int,java.time.ZoneOffset)>(v32, v34, v41, v40, v51);
v53 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v54 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v53 == v54 goto label16;
v55 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Object _reportWrongToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v2, v55, "timezone");
label16:
return v52;
label17:
v56 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Class handledType()>();
v57 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v58 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v56, v57, "Expected string for TimeZone after numeric values");
throw v58;
}
protected java.time.OffsetTime _fromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
java.time.OffsetTime v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.time.format.DateTimeFormatter v7;
int v5;
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0;
java.lang.Object v10, v6;
java.lang.String v3, v4;
java.time.DateTimeException v9;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Object _fromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v4);
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.time.format.DateTimeFormatter _formatter>;
v8 = staticinvoke <java.time.OffsetTime: java.time.OffsetTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v4, v7);
label2:
return v8;
label3:
v9 := @caughtexception;
v10 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.time.DateTimeException,java.lang.String)>(v2, v9, v4);
return v10;
catch java.time.DateTimeException from label1 to label2 with label3;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer v0;
v0 = new com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.OffsetTimeDeserializer INSTANCE> = v0;
return;
}
}