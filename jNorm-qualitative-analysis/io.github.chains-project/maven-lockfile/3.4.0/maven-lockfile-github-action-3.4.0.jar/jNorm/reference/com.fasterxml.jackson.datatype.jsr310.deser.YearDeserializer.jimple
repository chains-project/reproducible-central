public class com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer INSTANCE;
public void <init>()
{
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: void <init>(java.time.format.DateTimeFormatter)>(null);
return;
}
public void <init>(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(class "Ljava/time/Year;", v1);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer, java.lang.Boolean)
{
java.lang.Boolean v2;
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase,java.lang.Boolean)>(v1, v2);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer withDateFormat(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0, v2;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer withLeniency(java.lang.Boolean)
{
java.lang.Boolean v1;
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0, v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: java.lang.Boolean;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer,java.lang.Boolean)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v1;
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
return v0;
}
public java.time.Year deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
int v12;
com.fasterxml.jackson.core.JsonToken v11, v14, v16, v20, v21, v3, v4, v7;
java.lang.String v5, v9;
boolean v17;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.JsonToken[] v19;
java.time.Year v10, v13, v6;
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
java.lang.Class v8;
java.lang.Object v15, v18, v22;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v3 != v4 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.time.Year _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v5);
return v6;
label1:
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v3 != v7 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.lang.Class handledType()>();
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v8);
v10 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.time.Year _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v9);
return v10;
label2:
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v3 != v11 goto label3;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v13 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.time.Year _fromNumber(com.fasterxml.jackson.databind.DeserializationContext,int)>(v2, v12);
return v13;
label3:
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v3 != v14 goto label4;
v15 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v15;
label4:
v16 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v16);
if v17 == 0 goto label5;
v18 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v18;
label5:
v19 = newarray (com.fasterxml.jackson.core.JsonToken)[2];
v20 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v19[0] = v20;
v21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v19[1] = v21;
v22 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken[])>(v2, v1, v19);
return v22;
}
protected java.time.Year _fromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
int v10, v5;
java.lang.String v3, v4;
java.time.DateTimeException v16;
boolean v8, v9;
com.fasterxml.jackson.core.StreamReadCapability v7;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.time.Year v11, v13, v15;
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
java.time.format.DateTimeFormatter v12, v14;
java.lang.Object v17, v6;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.lang.Object _fromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v4);
return v6;
label1:
v7 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS>;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v7);
if v8 == 0 goto label2;
v9 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: boolean _isValidTimestampString(java.lang.String)>(v4);
if v9 == 0 goto label2;
v10 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v4);
v11 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.time.Year _fromNumber(com.fasterxml.jackson.databind.DeserializationContext,int)>(v2, v10);
return v11;
label2:
v12 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.time.format.DateTimeFormatter _formatter>;
if v12 != null goto label4;
v13 = staticinvoke <java.time.Year: java.time.Year parse(java.lang.CharSequence)>(v4);
label3:
return v13;
label4:
v14 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.time.format.DateTimeFormatter _formatter>;
v15 = staticinvoke <java.time.Year: java.time.Year parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v4, v14);
label5:
return v15;
label6:
v16 := @caughtexception;
v17 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.time.DateTimeException,java.lang.String)>(v2, v16, v4);
return v17;
catch java.time.DateTimeException from label2 to label3 with label6;
catch java.time.DateTimeException from label4 to label5 with label6;
}
protected java.time.Year _fromNumber(com.fasterxml.jackson.databind.DeserializationContext, int)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.time.Year v3;
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
int v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: int;
v3 = staticinvoke <java.time.Year: java.time.Year of(int)>(v2);
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer v0;
v0 = new com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.YearDeserializer INSTANCE> = v0;
return;
}
}