public class com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer extends com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(java.lang.Class)>(class "Ljava/time/OffsetTime;");
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer, java.lang.Boolean, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v3;
java.lang.Boolean v2;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer,java.lang.Boolean,java.lang.Boolean,java.time.format.DateTimeFormatter)>(v1, v2, null, v3);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer, java.lang.Boolean, java.lang.Boolean, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v4;
java.lang.Boolean v2, v3;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.lang.Boolean;
v4 := @parameter3: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase,java.lang.Boolean,java.lang.Boolean,java.time.format.DateTimeFormatter,com.fasterxml.jackson.'annotation'.JsonFormat$Shape)>(v1, v2, v3, v4, null);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer withFormat(java.lang.Boolean, java.time.format.DateTimeFormatter, com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v3;
java.time.format.DateTimeFormatter v2;
java.lang.Boolean v1;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0, v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
v4 = new com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
specialinvoke v4.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer,java.lang.Boolean,java.time.format.DateTimeFormatter)>(v0, v1, v2);
return v4;
}
public void serialize(java.time.OffsetTime, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.time.OffsetTime v1;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0;
java.time.format.DateTimeFormatter v5, v7;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: java.time.OffsetTime;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: void _serializeAsArrayContents(java.time.OffsetTime,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
goto label4;
label1:
v5 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: java.time.format.DateTimeFormatter _formatter>;
if v5 != null goto label2;
v6 = virtualinvoke v1.<java.time.OffsetTime: java.lang.String toString()>();
goto label3;
label2:
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: java.time.format.DateTimeFormatter _formatter>;
v6 = virtualinvoke v1.<java.time.OffsetTime: java.lang.String format(java.time.format.DateTimeFormatter)>(v7);
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v6);
label4:
return;
}
public void serializeWithType(java.time.OffsetTime, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
java.time.OffsetTime v1;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
java.time.format.DateTimeFormatter v10, v12;
com.fasterxml.jackson.core.JsonToken v5, v8, v9;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v11;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: java.time.OffsetTime;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: com.fasterxml.jackson.core.JsonToken serializationShape(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
v8 = v7.<com.fasterxml.jackson.core.type.WritableTypeId: com.fasterxml.jackson.core.JsonToken valueShape>;
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v8 != v9 goto label1;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: void _serializeAsArrayContents(java.time.OffsetTime,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
goto label4;
label1:
v10 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: java.time.format.DateTimeFormatter _formatter>;
if v10 != null goto label2;
v11 = virtualinvoke v1.<java.time.OffsetTime: java.lang.String toString()>();
goto label3;
label2:
v12 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: java.time.format.DateTimeFormatter _formatter>;
v11 = virtualinvoke v1.<java.time.OffsetTime: java.lang.String format(java.time.format.DateTimeFormatter)>(v12);
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v11);
label4:
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
private final void _serializeAsArrayContents(java.time.OffsetTime, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.time.OffsetTime v1;
java.time.temporal.ChronoField v9;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0;
int v10, v4, v5, v6, v7;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v12;
java.time.ZoneOffset v11;
boolean v8;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: java.time.OffsetTime;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v1.<java.time.OffsetTime: int getHour()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v4);
v5 = virtualinvoke v1.<java.time.OffsetTime: int getMinute()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v5);
v6 = virtualinvoke v1.<java.time.OffsetTime: int getSecond()>();
v7 = virtualinvoke v1.<java.time.OffsetTime: int getNano()>();
if v6 > 0 goto label1;
if v7 <= 0 goto label3;
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v6);
if v7 <= 0 goto label3;
v8 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: boolean useNanoseconds(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v8 == 0 goto label2;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v7);
goto label3;
label2:
v9 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MILLI_OF_SECOND>;
v10 = virtualinvoke v1.<java.time.OffsetTime: int get(java.time.temporal.TemporalField)>(v9);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v10);
label3:
v11 = virtualinvoke v1.<java.time.OffsetTime: java.time.ZoneOffset getOffset()>();
v12 = virtualinvoke v11.<java.time.ZoneOffset: java.lang.String toString()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v12);
return;
}
protected com.fasterxml.jackson.core.JsonToken serializationShape(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v2;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
if v2 == 0 goto label1;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
label2:
return v3;
}
protected com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase withFeatures(java.lang.Boolean, java.lang.Boolean)
{
java.time.format.DateTimeFormatter v5;
java.lang.Boolean v1, v2, v4;
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0, v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.lang.Boolean;
v3 = new com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
v4 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: java.lang.Boolean _useTimestamp>;
v5 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: java.time.format.DateTimeFormatter _formatter>;
specialinvoke v3.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer,java.lang.Boolean,java.lang.Boolean,java.time.format.DateTimeFormatter)>(v0, v4, v2, v5);
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer v0;
v0 = new com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer: com.fasterxml.jackson.datatype.jsr310.ser.OffsetTimeSerializer INSTANCE> = v0;
return;
}
}