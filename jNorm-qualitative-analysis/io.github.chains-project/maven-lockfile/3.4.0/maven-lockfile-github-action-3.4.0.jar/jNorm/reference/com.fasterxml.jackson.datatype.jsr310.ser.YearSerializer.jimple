public class com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer extends com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: void <init>(java.time.format.DateTimeFormatter)>(null);
return;
}
public void <init>(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(class "Ljava/time/Year;", v1);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer, java.lang.Boolean, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v3;
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0, v1;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase,java.lang.Boolean,java.time.format.DateTimeFormatter,com.fasterxml.jackson.'annotation'.JsonFormat$Shape)>(v1, v2, v3, null);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer withFormat(java.lang.Boolean, java.time.format.DateTimeFormatter, com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v3;
java.time.format.DateTimeFormatter v2;
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0, v4;
java.lang.Boolean v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
v4 = new com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
specialinvoke v4.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer,java.lang.Boolean,java.time.format.DateTimeFormatter)>(v0, v1, v2);
return v4;
}
public void serialize(java.time.Year, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.time.Year v1;
java.time.format.DateTimeFormatter v6, v8;
int v5;
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v7;
boolean v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v1 := @parameter0: java.time.Year;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<java.time.Year: int getValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v5);
goto label4;
label1:
v6 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: java.time.format.DateTimeFormatter _formatter>;
if v6 != null goto label2;
v7 = virtualinvoke v1.<java.time.Year: java.lang.String toString()>();
goto label3;
label2:
v8 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: java.time.format.DateTimeFormatter _formatter>;
v7 = virtualinvoke v1.<java.time.Year: java.lang.String format(java.time.format.DateTimeFormatter)>(v8);
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v7);
label4:
return;
}
protected void _acceptTimestampVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonParser$NumberType v4;
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor v3;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v3 == null goto label1;
v4 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
interfaceinvoke v3.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor: void numberType(com.fasterxml.jackson.core.JsonParser$NumberType)>(v4);
label1:
return;
}
protected com.fasterxml.jackson.core.JsonToken serializationShape(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
if v2 == 0 goto label1;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
label2:
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer v0;
v0 = new com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer: com.fasterxml.jackson.datatype.jsr310.ser.YearSerializer INSTANCE> = v0;
return;
}
}