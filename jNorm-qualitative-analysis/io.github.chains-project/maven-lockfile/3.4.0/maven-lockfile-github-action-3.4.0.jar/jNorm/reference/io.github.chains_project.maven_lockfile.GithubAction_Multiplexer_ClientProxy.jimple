public class io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy extends io.github.chains_project.maven_lockfile.GithubAction_Multiplexer implements io.quarkus.arc.ClientProxy
{
private final io.quarkus.arc.InjectableBean bean;
private final io.quarkus.arc.InjectableContext context;
public void <init>(java.lang.String)
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.ArcContainer v2;
io.quarkus.arc.InjectableBean v3;
io.quarkus.arc.InjectableContext v5;
java.lang.Class v4;
java.lang.String v1;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void <init>()>();
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InjectableBean bean(java.lang.String)>(v1);
v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean> = v3;
v4 = interfaceinvoke v3.<io.quarkus.arc.InjectableBean: java.lang.Class getScope()>();
v5 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InjectableContext getActiveContext(java.lang.Class)>(v4);
v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableContext context> = v5;
return;
}
private io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v1;
io.quarkus.arc.InjectableContext v2;
java.lang.Object v3;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
v2 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableContext context>;
v3 = staticinvoke <io.quarkus.arc.impl.ClientProxies: java.lang.Object getApplicationScopedDelegate(io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableBean)>(v2, v1);
return v3;
}
public java.lang.Object arc_contextualInstance()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v1;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()>();
return v1;
}
public io.quarkus.arc.InjectableBean arc_bean()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v1;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
return v1;
}
public java.lang.String toString()
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v3;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v1;
java.lang.String v2, v4;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
if v1 != null goto label1;
v2 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: java.lang.String toString()>();
return v2;
label1:
v3 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()>();
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
return v4;
}
public void generateLockFile(io.quarkiverse.githubaction.Commands, boolean)
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v4;
io.quarkiverse.githubaction.Commands v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v3;
boolean v2;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 := @parameter0: io.quarkiverse.githubaction.Commands;
v2 := @parameter1: boolean;
v3 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
if v3 != null goto label1;
specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void generateLockFile(io.quarkiverse.githubaction.Commands,boolean)>(v1, v2);
return;
label1:
v4 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()>();
virtualinvoke v4.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void generateLockFile(io.quarkiverse.githubaction.Commands,boolean)>(v1, v2);
return;
}
public void run(io.quarkiverse.githubaction.Inputs, io.quarkiverse.githubaction.Commands, io.quarkiverse.githubaction.Context)
{
io.quarkiverse.githubaction.Context v3;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v5;
io.quarkiverse.githubaction.Commands v2;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v4;
io.quarkiverse.githubaction.Inputs v1;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 := @parameter0: io.quarkiverse.githubaction.Inputs;
v2 := @parameter1: io.quarkiverse.githubaction.Commands;
v3 := @parameter2: io.quarkiverse.githubaction.Context;
v4 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
if v4 != null goto label1;
specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void run(io.quarkiverse.githubaction.Inputs,io.quarkiverse.githubaction.Commands,io.quarkiverse.githubaction.Context)>(v1, v2, v3);
return;
label1:
v5 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()>();
virtualinvoke v5.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void run(io.quarkiverse.githubaction.Inputs,io.quarkiverse.githubaction.Commands,io.quarkiverse.githubaction.Context)>(v1, v2, v3);
return;
}
public void validateLockFile(io.quarkiverse.githubaction.Commands, boolean)
{
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v4;
io.quarkiverse.githubaction.Commands v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v3;
boolean v2;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 := @parameter0: io.quarkiverse.githubaction.Commands;
v2 := @parameter1: boolean;
v3 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
if v3 != null goto label1;
specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void validateLockFile(io.quarkiverse.githubaction.Commands,boolean)>(v1, v2);
return;
label1:
v4 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()>();
virtualinvoke v4.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void validateLockFile(io.quarkiverse.githubaction.Commands,boolean)>(v1, v2);
return;
}
public void run_10e4fab489c5baa897ea9b4d6b0a2302f36c3340(io.quarkiverse.githubaction.runtime.GitHubEvent)
{
io.quarkiverse.githubaction.runtime.GitHubEvent v1;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer v3;
io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy v0;
io.quarkus.arc.InjectableBean v2;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy;
v1 := @parameter0: io.quarkiverse.githubaction.runtime.GitHubEvent;
v2 = v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.quarkus.arc.InjectableBean bean>;
if v2 != null goto label1;
specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void run_10e4fab489c5baa897ea9b4d6b0a2302f36c3340(io.quarkiverse.githubaction.runtime.GitHubEvent)>(v1);
return;
label1:
v3 = specialinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer_ClientProxy: io.github.chains_project.maven_lockfile.GithubAction_Multiplexer arc$delegate()>();
virtualinvoke v3.<io.github.chains_project.maven_lockfile.GithubAction_Multiplexer: void run_10e4fab489c5baa897ea9b4d6b0a2302f36c3340(io.quarkiverse.githubaction.runtime.GitHubEvent)>(v1);
return;
}
}