abstract class io.netty.buffer.AbstractPooledDerivedByteBuf extends io.netty.buffer.AbstractReferenceCountedByteBuf
{
private final io.netty.util.Recycler$EnhancedHandle recyclerHandle;
private io.netty.buffer.AbstractByteBuf rootParent;
private io.netty.buffer.ByteBuf parent;
static final boolean $assertionsDisabled;
void <init>(io.netty.util.internal.ObjectPool$Handle)
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.util.internal.ObjectPool$Handle v1;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 := @parameter0: io.netty.util.internal.ObjectPool$Handle;
specialinvoke v0.<io.netty.buffer.AbstractReferenceCountedByteBuf: void <init>(int)>(0);
v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.util.Recycler$EnhancedHandle recyclerHandle> = v1;
return;
}
final void parent(io.netty.buffer.ByteBuf)
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.ByteBuf v1;
java.lang.AssertionError v4;
boolean v2, v3;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = <io.netty.buffer.AbstractPooledDerivedByteBuf: boolean $assertionsDisabled>;
if v2 != 0 goto label1;
v3 = v1 instanceof io.netty.buffer.SimpleLeakAwareByteBuf;
if v3 != 0 goto label1;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label1:
v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.ByteBuf parent> = v1;
return;
}
public final io.netty.buffer.AbstractByteBuf unwrap()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf rootParent>;
return v1;
}
final io.netty.buffer.AbstractPooledDerivedByteBuf init(io.netty.buffer.AbstractByteBuf, io.netty.buffer.ByteBuf, int, int, int)
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
java.lang.Throwable v6;
io.netty.buffer.AbstractByteBuf v1;
io.netty.buffer.ByteBuf v2;
int v3, v4, v5;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 := @parameter0: io.netty.buffer.AbstractByteBuf;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.ByteBuf parent> = v2;
v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf rootParent> = v1;
label1:
virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: void maxCapacity(int)>(v5);
virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: void setIndex0(int,int)>(v3, v4);
virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: void resetRefCnt()>();
label2:
return v0;
label3:
v6 := @caughtexception;
if v2 == null goto label4;
v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf rootParent> = null;
v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.ByteBuf parent> = null;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
label4:
throw v6;
catch java.lang.Throwable from label1 to label2 with label3;
}
protected final void deallocate()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.ByteBuf v1;
io.netty.util.Recycler$EnhancedHandle v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.ByteBuf parent>;
v2 = v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.util.Recycler$EnhancedHandle recyclerHandle>;
virtualinvoke v2.<io.netty.util.Recycler$EnhancedHandle: void unguardedRecycle(java.lang.Object)>(v0);
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
return;
}
public final io.netty.buffer.ByteBufAllocator alloc()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
io.netty.buffer.ByteBufAllocator v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
return v2;
}
public final java.nio.ByteOrder order()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
java.nio.ByteOrder v2;
io.netty.buffer.AbstractByteBuf v1;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: java.nio.ByteOrder order()>();
return v2;
}
public boolean isReadOnly()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
boolean v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: boolean isReadOnly()>();
return v2;
}
public final boolean isDirect()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
boolean v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: boolean isDirect()>();
return v2;
}
public boolean hasArray()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
boolean v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: boolean hasArray()>();
return v2;
}
public byte[] array()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
byte[] v2;
io.netty.buffer.AbstractByteBuf v1;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: byte[] array()>();
return v2;
}
public boolean hasMemoryAddress()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
boolean v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: boolean hasMemoryAddress()>();
return v2;
}
public boolean isContiguous()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
boolean v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: boolean isContiguous()>();
return v2;
}
public final int nioBufferCount()
{
int v2;
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v1;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
v2 = virtualinvoke v1.<io.netty.buffer.AbstractByteBuf: int nioBufferCount()>();
return v2;
}
public final java.nio.ByteBuffer internalNioBuffer(int, int)
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
int v1, v2;
java.nio.ByteBuffer v3;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: java.nio.ByteBuffer nioBuffer(int,int)>(v1, v2);
return v3;
}
public final io.netty.buffer.ByteBuf retainedSlice()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.ByteBuf v4;
int v1, v2, v3;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: int readerIndex()>();
v2 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: int writerIndex()>();
v3 = v2 - v1;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.ByteBuf retainedSlice(int,int)>(v1, v3);
return v4;
}
public io.netty.buffer.ByteBuf slice(int, int)
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v4;
io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf v3;
int v1, v2;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: void ensureAccessible()>();
v3 = new io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
specialinvoke v3.<io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf: void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.AbstractByteBuf,int,int)>(v0, v4, v1, v2);
return v3;
}
final io.netty.buffer.ByteBuf duplicate0()
{
io.netty.buffer.AbstractPooledDerivedByteBuf v0;
io.netty.buffer.AbstractByteBuf v2;
io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf v1;
v0 := @this: io.netty.buffer.AbstractPooledDerivedByteBuf;
virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: void ensureAccessible()>();
v1 = new io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractPooledDerivedByteBuf: io.netty.buffer.AbstractByteBuf unwrap()>();
specialinvoke v1.<io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf: void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.AbstractByteBuf)>(v0, v2);
return v1;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/buffer/AbstractPooledDerivedByteBuf;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.buffer.AbstractPooledDerivedByteBuf: boolean $assertionsDisabled> = v2;
return;
}
}