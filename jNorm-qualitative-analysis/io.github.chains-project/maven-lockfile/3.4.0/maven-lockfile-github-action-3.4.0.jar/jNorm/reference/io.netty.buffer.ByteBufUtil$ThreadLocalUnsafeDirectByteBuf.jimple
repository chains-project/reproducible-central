final class io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf extends io.netty.buffer.UnpooledUnsafeDirectByteBuf
{
private static final io.netty.util.internal.ObjectPool RECYCLER;
private final io.netty.util.Recycler$EnhancedHandle handle;
static io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newInstance()
{
java.lang.Object v1;
io.netty.util.internal.ObjectPool v0;
v0 = <io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: io.netty.util.internal.ObjectPool RECYCLER>;
v1 = virtualinvoke v0.<io.netty.util.internal.ObjectPool: java.lang.Object get()>();
virtualinvoke v1.<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: void resetRefCnt()>();
return v1;
}
private void <init>(io.netty.util.internal.ObjectPool$Handle)
{
io.netty.buffer.UnpooledByteBufAllocator v2;
io.netty.util.internal.ObjectPool$Handle v1;
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf v0;
v0 := @this: io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf;
v1 := @parameter0: io.netty.util.internal.ObjectPool$Handle;
v2 = <io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator DEFAULT>;
specialinvoke v0.<io.netty.buffer.UnpooledUnsafeDirectByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v2, 256, 2147483647);
v0.<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: io.netty.util.Recycler$EnhancedHandle handle> = v1;
return;
}
protected void deallocate()
{
io.netty.util.Recycler$EnhancedHandle v3;
int v1, v2;
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf v0;
v0 := @this: io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: int capacity()>();
v2 = <io.netty.buffer.ByteBufUtil: int THREAD_LOCAL_BUFFER_SIZE>;
if v1 <= v2 goto label1;
specialinvoke v0.<io.netty.buffer.UnpooledUnsafeDirectByteBuf: void deallocate()>();
goto label2;
label1:
virtualinvoke v0.<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: io.netty.buffer.ByteBuf clear()>();
v3 = v0.<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: io.netty.util.Recycler$EnhancedHandle handle>;
virtualinvoke v3.<io.netty.util.Recycler$EnhancedHandle: void unguardedRecycle(java.lang.Object)>(v0);
label2:
return;
}
static void <clinit>()
{
io.netty.util.internal.ObjectPool v1;
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1 v0;
v0 = new io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1;
specialinvoke v0.<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1: void <init>()>();
v1 = staticinvoke <io.netty.util.internal.ObjectPool: io.netty.util.internal.ObjectPool newPool(io.netty.util.internal.ObjectPool$ObjectCreator)>(v0);
<io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf: io.netty.util.internal.ObjectPool RECYCLER> = v1;
return;
}
}