final class io.netty.buffer.PoolArena$HeapArena extends io.netty.buffer.PoolArena
{
void <init>(io.netty.buffer.PooledByteBufAllocator, int, int, int)
{
int v2, v3, v4;
io.netty.buffer.PoolArena$HeapArena v0;
io.netty.buffer.PooledByteBufAllocator v1;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
v1 := @parameter0: io.netty.buffer.PooledByteBufAllocator;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.buffer.PoolArena: void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)>(v1, v2, v3, v4, 0);
return;
}
private static byte[] newByteArray(int)
{
int v0;
byte[] v1;
v0 := @parameter0: int;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: byte[] allocateUninitializedArray(int)>(v0);
return v1;
}
boolean isDirect()
{
io.netty.buffer.PoolArena$HeapArena v0;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
return 0;
}
protected io.netty.buffer.PoolChunk newChunk(int, int, int, int)
{
byte[] v6;
int v1, v2, v3, v4;
io.netty.buffer.PoolChunk v5;
io.netty.buffer.PoolArena$HeapArena v0;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = new io.netty.buffer.PoolChunk;
v6 = staticinvoke <io.netty.buffer.PoolArena$HeapArena: byte[] newByteArray(int)>(v4);
specialinvoke v5.<io.netty.buffer.PoolChunk: void <init>(io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int,int,int,int)>(v0, null, v6, v1, v3, v4, v2);
return v5;
}
protected io.netty.buffer.PoolChunk newUnpooledChunk(int)
{
byte[] v3;
int v1;
io.netty.buffer.PoolChunk v2;
io.netty.buffer.PoolArena$HeapArena v0;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
v1 := @parameter0: int;
v2 = new io.netty.buffer.PoolChunk;
v3 = staticinvoke <io.netty.buffer.PoolArena$HeapArena: byte[] newByteArray(int)>(v1);
specialinvoke v2.<io.netty.buffer.PoolChunk: void <init>(io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int)>(v0, null, v3, v1);
return v2;
}
protected void destroyChunk(io.netty.buffer.PoolChunk)
{
io.netty.buffer.PoolChunk v1;
io.netty.buffer.PoolArena$HeapArena v0;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
v1 := @parameter0: io.netty.buffer.PoolChunk;
return;
}
protected io.netty.buffer.PooledByteBuf newByteBuf(int)
{
io.netty.buffer.PooledHeapByteBuf v3;
int v1;
io.netty.buffer.PoolArena$HeapArena v0;
boolean v2;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
v1 := @parameter0: int;
v2 = <io.netty.buffer.PoolArena: boolean HAS_UNSAFE>;
if v2 == 0 goto label1;
v3 = staticinvoke <io.netty.buffer.PooledUnsafeHeapByteBuf: io.netty.buffer.PooledUnsafeHeapByteBuf newUnsafeInstance(int)>(v1);
goto label2;
label1:
v3 = staticinvoke <io.netty.buffer.PooledHeapByteBuf: io.netty.buffer.PooledHeapByteBuf newInstance(int)>(v1);
label2:
return v3;
}
protected void memoryCopy(byte[], int, io.netty.buffer.PooledByteBuf, int)
{
byte[] v1;
int v2, v4, v6;
io.netty.buffer.PooledByteBuf v3;
java.lang.Object v5;
io.netty.buffer.PoolArena$HeapArena v0;
v0 := @this: io.netty.buffer.PoolArena$HeapArena;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.PooledByteBuf;
v4 := @parameter3: int;
if v4 != 0 goto label1;
return;
label1:
v5 = v3.<io.netty.buffer.PooledByteBuf: java.lang.Object memory>;
v6 = v3.<io.netty.buffer.PooledByteBuf: int offset>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v2, v5, v6, v4);
return;
}
}