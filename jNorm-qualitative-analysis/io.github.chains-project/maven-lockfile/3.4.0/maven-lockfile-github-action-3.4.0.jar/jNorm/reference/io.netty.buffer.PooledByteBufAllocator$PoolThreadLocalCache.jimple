final class io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache extends io.netty.util.concurrent.FastThreadLocal
{
private final boolean useCacheForAllThreads;
final io.netty.buffer.PooledByteBufAllocator this$0;
void <init>(io.netty.buffer.PooledByteBufAllocator, boolean)
{
io.netty.buffer.PooledByteBufAllocator v1;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v0;
boolean v2;
v0 := @this: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache;
v1 := @parameter0: io.netty.buffer.PooledByteBufAllocator;
v2 := @parameter1: boolean;
v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PooledByteBufAllocator this$0> = v1;
specialinvoke v0.<io.netty.util.concurrent.FastThreadLocal: void <init>()>();
v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: boolean useCacheForAllThreads> = v2;
return;
}
protected synchronized io.netty.buffer.PoolThreadCache initialValue()
{
io.netty.util.concurrent.EventExecutor v8;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v0;
long v18, v22, v23;
java.lang.Runnable v21;
byte v19;
java.lang.Thread v7;
int v13, v15, v16, v17;
boolean v10, v9;
io.netty.buffer.PoolArena v3, v6;
io.netty.buffer.PooledByteBufAllocator v1, v12, v14, v20, v4;
java.util.concurrent.TimeUnit v24;
io.netty.buffer.PoolThreadCache v11, v25;
io.netty.buffer.PoolArena[] v2, v5;
v0 := @this: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PooledByteBufAllocator this$0>;
v2 = v1.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v3 = specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PoolArena leastUsedArena(io.netty.buffer.PoolArena[])>(v2);
v4 = v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PooledByteBufAllocator this$0>;
v5 = v4.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v6 = specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PoolArena leastUsedArena(io.netty.buffer.PoolArena[])>(v5);
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v8 = staticinvoke <io.netty.util.internal.ThreadExecutorMap: io.netty.util.concurrent.EventExecutor currentExecutor()>();
v9 = v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: boolean useCacheForAllThreads>;
if v9 != 0 goto label1;
v10 = v7 instanceof io.netty.util.concurrent.FastThreadLocalThread;
if v10 != 0 goto label1;
if v8 == null goto label3;
label1:
v11 = new io.netty.buffer.PoolThreadCache;
v12 = v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PooledByteBufAllocator this$0>;
v13 = v12.<io.netty.buffer.PooledByteBufAllocator: int smallCacheSize>;
v14 = v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PooledByteBufAllocator this$0>;
v15 = v14.<io.netty.buffer.PooledByteBufAllocator: int normalCacheSize>;
v16 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_CACHED_BUFFER_CAPACITY>;
v17 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_CACHE_TRIM_INTERVAL>;
specialinvoke v11.<io.netty.buffer.PoolThreadCache: void <init>(io.netty.buffer.PoolArena,io.netty.buffer.PoolArena,int,int,int,int)>(v3, v6, v13, v15, v16, v17);
v18 = <io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS>;
v19 = v18 cmp 0L;
if v19 <= 0 goto label2;
if v8 == null goto label2;
v20 = v0.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: io.netty.buffer.PooledByteBufAllocator this$0>;
v21 = v20.<io.netty.buffer.PooledByteBufAllocator: java.lang.Runnable trimTask>;
v22 = <io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS>;
v23 = <io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS>;
v24 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
interfaceinvoke v8.<io.netty.util.concurrent.EventExecutor: io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(v21, v22, v23, v24);
label2:
return v11;
label3:
v25 = new io.netty.buffer.PoolThreadCache;
specialinvoke v25.<io.netty.buffer.PoolThreadCache: void <init>(io.netty.buffer.PoolArena,io.netty.buffer.PoolArena,int,int,int,int)>(v3, v6, 0, 0, 0, 0);
return v25;
}
protected void onRemoval(io.netty.buffer.PoolThreadCache)
{
io.netty.buffer.PoolThreadCache v1;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache;
v1 := @parameter0: io.netty.buffer.PoolThreadCache;
virtualinvoke v1.<io.netty.buffer.PoolThreadCache: void free(boolean)>(0);
return;
}
private io.netty.buffer.PoolArena leastUsedArena(io.netty.buffer.PoolArena[])
{
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v0;
io.netty.buffer.PoolArena v3, v8;
java.util.concurrent.atomic.AtomicInteger v11, v4, v9;
io.netty.buffer.PoolArena[] v1;
int v10, v12, v2, v5, v6, v7;
v0 := @this: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache;
v1 := @parameter0: io.netty.buffer.PoolArena[];
if v1 == null goto label1;
v2 = lengthof v1;
if v2 != 0 goto label2;
label1:
return null;
label2:
v3 = v1[0];
v4 = v3.<io.netty.buffer.PoolArena: java.util.concurrent.atomic.AtomicInteger numThreadCaches>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicInteger: int get()>();
if v5 != 0 goto label3;
return v3;
label3:
v6 = 1;
label4:
v7 = lengthof v1;
if v6 >= v7 goto label6;
v8 = v1[v6];
v9 = v8.<io.netty.buffer.PoolArena: java.util.concurrent.atomic.AtomicInteger numThreadCaches>;
v10 = virtualinvoke v9.<java.util.concurrent.atomic.AtomicInteger: int get()>();
v11 = v3.<io.netty.buffer.PoolArena: java.util.concurrent.atomic.AtomicInteger numThreadCaches>;
v12 = virtualinvoke v11.<java.util.concurrent.atomic.AtomicInteger: int get()>();
if v10 >= v12 goto label5;
v3 = v8;
label5:
v6 = v6 + 1;
goto label4;
label6:
return v3;
}
}