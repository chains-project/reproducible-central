public class io.netty.buffer.PooledByteBufAllocator extends io.netty.buffer.AbstractByteBufAllocator implements io.netty.buffer.ByteBufAllocatorMetricProvider
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final int DEFAULT_NUM_HEAP_ARENA;
private static final int DEFAULT_NUM_DIRECT_ARENA;
private static final int DEFAULT_PAGE_SIZE;
private static final int DEFAULT_MAX_ORDER;
private static final int DEFAULT_SMALL_CACHE_SIZE;
private static final int DEFAULT_NORMAL_CACHE_SIZE;
static final int DEFAULT_MAX_CACHED_BUFFER_CAPACITY;
private static final int DEFAULT_CACHE_TRIM_INTERVAL;
private static final long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS;
private static final boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS;
private static final int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT;
static final int DEFAULT_MAX_CACHED_BYTEBUFFERS_PER_CHUNK;
private static final int MIN_PAGE_SIZE;
private static final int MAX_CHUNK_SIZE;
private static final int CACHE_NOT_USED;
private final java.lang.Runnable trimTask;
public static final io.netty.buffer.PooledByteBufAllocator DEFAULT;
private final io.netty.buffer.PoolArena[] heapArenas;
private final io.netty.buffer.PoolArena[] directArenas;
private final int smallCacheSize;
private final int normalCacheSize;
private final java.util.List heapArenaMetrics;
private final java.util.List directArenaMetrics;
private final io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache;
private final int chunkSize;
private final io.netty.buffer.PooledByteBufAllocatorMetric metric;
static final boolean $assertionsDisabled;
public void <init>()
{
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean)>(0);
return;
}
public void <init>(boolean)
{
int v2, v3, v4, v5;
io.netty.buffer.PooledByteBufAllocator v0;
boolean v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_HEAP_ARENA>;
v3 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_DIRECT_ARENA>;
v4 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
v5 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER>;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int)>(v1, v2, v3, v4, v5);
return;
}
public void <init>(int, int, int, int)
{
int v1, v2, v3, v4;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int)>(0, v1, v2, v3, v4);
return;
}
public void <init>(boolean, int, int, int, int)
{
io.netty.buffer.PooledByteBufAllocator v0;
int v2, v3, v4, v5, v6, v7;
boolean v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_SMALL_CACHE_SIZE>;
v7 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NORMAL_CACHE_SIZE>;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int,int,int,int)>(v1, v2, v3, v4, v5, 0, v6, v7);
return;
}
public void <init>(boolean, int, int, int, int, int, int, int)
{
io.netty.buffer.PooledByteBufAllocator v0;
int v10, v2, v3, v4, v5, v6, v7, v8;
boolean v1, v9;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: int;
v9 = <io.netty.buffer.PooledByteBufAllocator: boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS>;
v10 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT>;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int,int,int,boolean,int)>(v1, v2, v3, v4, v5, v7, v8, v9, v10);
return;
}
public void <init>(boolean, int, int, int, int, int, int, int, boolean)
{
io.netty.buffer.PooledByteBufAllocator v0;
int v2, v3, v4, v5, v6, v7, v8;
boolean v1, v9;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: int;
v9 := @parameter8: boolean;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int,int,int,boolean)>(v1, v2, v3, v4, v5, v7, v8, v9);
return;
}
public void <init>(boolean, int, int, int, int, int, int, boolean)
{
io.netty.buffer.PooledByteBufAllocator v0;
int v2, v3, v4, v5, v6, v7, v9;
boolean v1, v8;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT>;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int,int,int,boolean,int)>(v1, v2, v3, v4, v5, v6, v7, v8, v9);
return;
}
public void <init>(boolean, int, int, int, int, int, int, int, boolean, int)
{
io.netty.buffer.PooledByteBufAllocator v0;
int v10, v2, v3, v4, v5, v6, v7, v8;
boolean v1, v9;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: int;
v9 := @parameter8: boolean;
v10 := @parameter9: int;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean,int,int,int,int,int,int,boolean,int)>(v1, v2, v3, v4, v5, v7, v8, v9, v10);
return;
}
public void <init>(boolean, int, int, int, int, int, int, boolean, int)
{
io.netty.buffer.PooledByteBufAllocator$1 v10;
io.netty.buffer.PoolArena$HeapArena v30;
boolean v1, v12, v16, v8;
io.netty.buffer.PooledByteBufAllocator v0;
java.util.List v33, v34, v45, v46;
io.netty.buffer.PoolArena[] v23, v25, v28, v32, v35, v37, v40, v44;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v11;
long v14;
io.netty.buffer.PooledByteBufAllocatorMetric v47;
java.util.ArrayList v24, v36;
int v15, v18, v19, v2, v22, v26, v27, v29, v3, v31, v38, v39, v4, v41, v43, v5, v6, v7, v9;
java.lang.String v21;
java.lang.UnsupportedOperationException v13;
java.lang.IllegalArgumentException v17, v20;
io.netty.buffer.PoolArena$DirectArena v42;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 := @parameter8: int;
specialinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: void <init>(boolean)>(v1);
v10 = new io.netty.buffer.PooledByteBufAllocator$1;
specialinvoke v10.<io.netty.buffer.PooledByteBufAllocator$1: void <init>(io.netty.buffer.PooledByteBufAllocator)>(v0);
v0.<io.netty.buffer.PooledByteBufAllocator: java.lang.Runnable trimTask> = v10;
v11 = new io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache;
specialinvoke v11.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: void <init>(io.netty.buffer.PooledByteBufAllocator,boolean)>(v0, v8);
v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache> = v11;
v0.<io.netty.buffer.PooledByteBufAllocator: int smallCacheSize> = v6;
v0.<io.netty.buffer.PooledByteBufAllocator: int normalCacheSize> = v7;
if v9 == 0 goto label02;
v12 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasAlignDirectByteBuffer()>();
if v12 != 0 goto label01;
v13 = new java.lang.UnsupportedOperationException;
specialinvoke v13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Buffer alignment is not supported. Either Unsafe or ByteBuffer.alignSlice() must be available.");
throw v13;
label01:
v14 = staticinvoke <io.netty.util.internal.PlatformDependent: long align(long,int)>(v4, v9);
label02:
v15 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: int validateAndCalculateChunkSize(int,int)>(v14, v5);
v0.<io.netty.buffer.PooledByteBufAllocator: int chunkSize> = v15;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v2, "nHeapArena");
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v3, "nDirectArena");
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v9, "directMemoryCacheAlignment");
if v9 <= 0 goto label03;
v16 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: boolean isDirectMemoryCacheAlignmentSupported()>();
if v16 != 0 goto label03;
v17 = new java.lang.IllegalArgumentException;
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("directMemoryCacheAlignment is not supported");
throw v17;
label03:
v18 = neg v9;
v19 = v9 & v18;
if v19 == v9 goto label04;
v20 = new java.lang.IllegalArgumentException;
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("directMemoryCacheAlignment: \u0001 (expected: power of two)");
specialinvoke v20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v21);
throw v20;
label04:
v22 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: int validateAndCalculatePageShifts(int,int)>(v14, v9);
if v2 <= 0 goto label07;
v23 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] newArenaArray(int)>(v2);
v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas> = v23;
v24 = new java.util.ArrayList;
v25 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v26 = lengthof v25;
specialinvoke v24.<java.util.ArrayList: void <init>(int)>(v26);
v27 = 0;
label05:
v28 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v29 = lengthof v28;
if v27 >= v29 goto label06;
v30 = new io.netty.buffer.PoolArena$HeapArena;
v31 = v0.<io.netty.buffer.PooledByteBufAllocator: int chunkSize>;
specialinvoke v30.<io.netty.buffer.PoolArena$HeapArena: void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int)>(v0, v14, v22, v31);
v32 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v32[v27] = v30;
interfaceinvoke v24.<java.util.List: boolean add(java.lang.Object)>(v30);
v27 = v27 + 1;
goto label05;
label06:
v33 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v24);
v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List heapArenaMetrics> = v33;
goto label08;
label07:
v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas> = null;
v34 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List heapArenaMetrics> = v34;
label08:
if v3 <= 0 goto label11;
v35 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] newArenaArray(int)>(v3);
v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas> = v35;
v36 = new java.util.ArrayList;
v37 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v38 = lengthof v37;
specialinvoke v36.<java.util.ArrayList: void <init>(int)>(v38);
v39 = 0;
label09:
v40 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v41 = lengthof v40;
if v39 >= v41 goto label10;
v42 = new io.netty.buffer.PoolArena$DirectArena;
v43 = v0.<io.netty.buffer.PooledByteBufAllocator: int chunkSize>;
specialinvoke v42.<io.netty.buffer.PoolArena$DirectArena: void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)>(v0, v14, v22, v43, v9);
v44 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v44[v39] = v42;
interfaceinvoke v36.<java.util.List: boolean add(java.lang.Object)>(v42);
v39 = v39 + 1;
goto label09;
label10:
v45 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v36);
v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List directArenaMetrics> = v45;
goto label12;
label11:
v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas> = null;
v46 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List directArenaMetrics> = v46;
label12:
v47 = new io.netty.buffer.PooledByteBufAllocatorMetric;
specialinvoke v47.<io.netty.buffer.PooledByteBufAllocatorMetric: void <init>(io.netty.buffer.PooledByteBufAllocator)>(v0);
v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocatorMetric metric> = v47;
return;
}
private static io.netty.buffer.PoolArena[] newArenaArray(int)
{
int v0;
io.netty.buffer.PoolArena[] v1;
v0 := @parameter0: int;
v1 = newarray (io.netty.buffer.PoolArena)[v0];
return v1;
}
private static int validateAndCalculatePageShifts(int, int)
{
java.lang.IllegalArgumentException v2, v6, v8;
int v0, v1, v10, v11, v4, v5;
java.lang.String v3, v7, v9;
v0 := @parameter0: int;
v1 := @parameter1: int;
if v0 >= 4096 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("pageSize: \u0001 (expected: 4096)");
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = v0 - 1;
v5 = v0 & v4;
if v5 == 0 goto label2;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("pageSize: \u0001 (expected: power of 2)");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
label2:
if v0 >= v1 goto label3;
v8 = new java.lang.IllegalArgumentException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Alignment cannot be greater than page size. Alignment: \u0001, page size: \u0001.");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v8;
label3:
v10 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(v0);
v11 = 31 - v10;
return v11;
}
private static int validateAndCalculateChunkSize(int, int)
{
java.lang.Object[] v7;
java.lang.IllegalArgumentException v2, v6;
java.lang.Integer v10, v8, v9;
int v0, v1, v4, v5;
java.lang.String v11, v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
if v1 <= 14 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("maxOrder: \u0001 (expected: 0-14)");
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = v0;
v5 = v1;
label2:
if v5 <= 0 goto label4;
if v4 <= 536870912 goto label3;
v6 = new java.lang.IllegalArgumentException;
v7 = newarray (java.lang.Object)[3];
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v7[0] = v8;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v7[1] = v9;
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);
v7[2] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("pageSize (%d) << maxOrder (%d) must not exceed %d", v7);
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v6;
label3:
v4 = v4 << 1;
v5 = v5 - 1;
goto label2;
label4:
return v4;
}
protected io.netty.buffer.ByteBuf newHeapBuffer(int, int)
{
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v3;
io.netty.buffer.PoolArena v5;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.ByteBuf v11;
io.netty.buffer.UnpooledUnsafeHeapByteBuf v8;
int v1, v2;
java.lang.Object v4;
io.netty.buffer.AbstractReferenceCountedByteBuf v6;
boolean v7;
io.netty.buffer.UnpooledHeapByteBuf v10, v9;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache>;
v4 = virtualinvoke v3.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: java.lang.Object get()>();
v5 = v4.<io.netty.buffer.PoolThreadCache: io.netty.buffer.PoolArena heapArena>;
if v5 == null goto label1;
v6 = virtualinvoke v5.<io.netty.buffer.PoolArena: io.netty.buffer.PooledByteBuf allocate(io.netty.buffer.PoolThreadCache,int,int)>(v4, v1, v2);
goto label4;
label1:
v7 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v7 == 0 goto label2;
v8 = new io.netty.buffer.UnpooledUnsafeHeapByteBuf;
v9 = v8;
specialinvoke v8.<io.netty.buffer.UnpooledUnsafeHeapByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v0, v1, v2);
goto label3;
label2:
v10 = new io.netty.buffer.UnpooledHeapByteBuf;
v9 = v10;
specialinvoke v10.<io.netty.buffer.UnpooledHeapByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v0, v1, v2);
label3:
v6 = v9;
label4:
v11 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.ByteBuf toLeakAwareBuffer(io.netty.buffer.ByteBuf)>(v6);
return v11;
}
protected io.netty.buffer.ByteBuf newDirectBuffer(int, int)
{
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v3;
io.netty.buffer.PoolArena v5;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.ByteBuf v9;
int v1, v2;
io.netty.buffer.UnpooledDirectByteBuf v8;
java.lang.Object v4;
io.netty.buffer.AbstractReferenceCountedByteBuf v6;
boolean v7;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache>;
v4 = virtualinvoke v3.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: java.lang.Object get()>();
v5 = v4.<io.netty.buffer.PoolThreadCache: io.netty.buffer.PoolArena directArena>;
if v5 == null goto label1;
v6 = virtualinvoke v5.<io.netty.buffer.PoolArena: io.netty.buffer.PooledByteBuf allocate(io.netty.buffer.PoolThreadCache,int,int)>(v4, v1, v2);
goto label4;
label1:
v7 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v7 == 0 goto label2;
v8 = staticinvoke <io.netty.buffer.UnsafeByteBufUtil: io.netty.buffer.UnpooledUnsafeDirectByteBuf newUnsafeDirectByteBuf(io.netty.buffer.ByteBufAllocator,int,int)>(v0, v1, v2);
goto label3;
label2:
v8 = new io.netty.buffer.UnpooledDirectByteBuf;
specialinvoke v8.<io.netty.buffer.UnpooledDirectByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v0, v1, v2);
label3:
v6 = v8;
label4:
v9 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.ByteBuf toLeakAwareBuffer(io.netty.buffer.ByteBuf)>(v6);
return v9;
}
public static int defaultNumHeapArena()
{
int v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_HEAP_ARENA>;
return v0;
}
public static int defaultNumDirectArena()
{
int v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_DIRECT_ARENA>;
return v0;
}
public static int defaultPageSize()
{
int v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
return v0;
}
public static int defaultMaxOrder()
{
int v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER>;
return v0;
}
public static boolean defaultUseCacheForAllThreads()
{
boolean v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS>;
return v0;
}
public static boolean defaultPreferDirect()
{
boolean v0;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean directBufferPreferred()>();
return v0;
}
public static int defaultTinyCacheSize()
{
return 0;
}
public static int defaultSmallCacheSize()
{
int v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_SMALL_CACHE_SIZE>;
return v0;
}
public static int defaultNormalCacheSize()
{
int v0;
v0 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NORMAL_CACHE_SIZE>;
return v0;
}
public static boolean isDirectMemoryCacheAlignmentSupported()
{
boolean v0;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
return v0;
}
public boolean isDirectBufferPooled()
{
io.netty.buffer.PooledByteBufAllocator v0;
boolean v2;
io.netty.buffer.PoolArena[] v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasThreadLocalCache()
{
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v1;
boolean v2;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache>;
v2 = virtualinvoke v1.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: boolean isSet()>();
return v2;
}
public void freeThreadLocalCache()
{
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache>;
virtualinvoke v1.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: void remove()>();
return;
}
public io.netty.buffer.PooledByteBufAllocatorMetric metric()
{
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PooledByteBufAllocatorMetric v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocatorMetric metric>;
return v1;
}
public int numHeapArenas()
{
int v2;
java.util.List v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List heapArenaMetrics>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public int numDirectArenas()
{
int v2;
java.util.List v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List directArenaMetrics>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public java.util.List heapArenas()
{
java.util.List v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List heapArenaMetrics>;
return v1;
}
public java.util.List directArenas()
{
java.util.List v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: java.util.List directArenaMetrics>;
return v1;
}
public int numThreadLocalCaches()
{
io.netty.buffer.PoolArena v7;
io.netty.buffer.PooledByteBufAllocator v0;
java.util.concurrent.atomic.AtomicInteger v8;
io.netty.buffer.PoolArena[] v1, v2, v4;
int v3, v5, v6, v9;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
if v1 == null goto label1;
v2 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
goto label2;
label1:
v2 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
label2:
if v2 != null goto label3;
return 0;
label3:
v3 = 0;
v4 = v2;
v5 = lengthof v2;
v6 = 0;
label4:
if v6 >= v5 goto label5;
v7 = v4[v6];
v8 = v7.<io.netty.buffer.PoolArena: java.util.concurrent.atomic.AtomicInteger numThreadCaches>;
v9 = virtualinvoke v8.<java.util.concurrent.atomic.AtomicInteger: int get()>();
v3 = v3 + v9;
v6 = v6 + 1;
goto label4;
label5:
return v3;
}
public int tinyCacheSize()
{
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
return 0;
}
public int smallCacheSize()
{
int v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: int smallCacheSize>;
return v1;
}
public int normalCacheSize()
{
int v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: int normalCacheSize>;
return v1;
}
public final int chunkSize()
{
int v1;
io.netty.buffer.PooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: int chunkSize>;
return v1;
}
final long usedHeapMemory()
{
long v2;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PoolArena[] v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v2 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: long usedMemory(io.netty.buffer.PoolArena[])>(v1);
return v2;
}
final long usedDirectMemory()
{
long v2;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PoolArena[] v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v2 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: long usedMemory(io.netty.buffer.PoolArena[])>(v1);
return v2;
}
private static long usedMemory(io.netty.buffer.PoolArena[])
{
byte v6;
io.netty.buffer.PoolArena v4;
io.netty.buffer.PoolArena[] v0;
int v2, v3;
long v1, v5;
v0 := @parameter0: io.netty.buffer.PoolArena[];
if v0 != null goto label1;
return -1L;
label1:
v1 = 0L;
v2 = lengthof v0;
v3 = 0;
label2:
if v3 >= v2 goto label4;
v4 = v0[v3];
v5 = virtualinvoke v4.<io.netty.buffer.PoolArena: long numActiveBytes()>();
v1 = v1 + v5;
v6 = v1 cmp 0L;
if v6 >= 0 goto label3;
return 9223372036854775807L;
label3:
v3 = v3 + 1;
goto label2;
label4:
return v1;
}
public final long pinnedHeapMemory()
{
long v2;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PoolArena[] v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v2 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: long pinnedMemory(io.netty.buffer.PoolArena[])>(v1);
return v2;
}
public final long pinnedDirectMemory()
{
long v2;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PoolArena[] v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v2 = staticinvoke <io.netty.buffer.PooledByteBufAllocator: long pinnedMemory(io.netty.buffer.PoolArena[])>(v1);
return v2;
}
private static long pinnedMemory(io.netty.buffer.PoolArena[])
{
byte v6;
io.netty.buffer.PoolArena v4;
io.netty.buffer.PoolArena[] v0;
int v2, v3;
long v1, v5;
v0 := @parameter0: io.netty.buffer.PoolArena[];
if v0 != null goto label1;
return -1L;
label1:
v1 = 0L;
v2 = lengthof v0;
v3 = 0;
label2:
if v3 >= v2 goto label4;
v4 = v0[v3];
v5 = virtualinvoke v4.<io.netty.buffer.PoolArena: long numPinnedBytes()>();
v1 = v1 + v5;
v6 = v1 cmp 0L;
if v6 >= 0 goto label3;
return 9223372036854775807L;
label3:
v3 = v3 + 1;
goto label2;
label4:
return v1;
}
final io.netty.buffer.PoolThreadCache threadCache()
{
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v1;
java.lang.Object v2;
java.lang.AssertionError v4;
io.netty.buffer.PooledByteBufAllocator v0;
boolean v3;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache>;
v2 = virtualinvoke v1.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: java.lang.Object get()>();
v3 = <io.netty.buffer.PooledByteBufAllocator: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
if v2 != null goto label1;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label1:
return v2;
}
public boolean trimCurrentThreadCache()
{
java.lang.Object v2;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache v1;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache>;
v2 = virtualinvoke v1.<io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache: java.lang.Object getIfExists()>();
if v2 == null goto label1;
virtualinvoke v2.<io.netty.buffer.PoolThreadCache: void trim()>();
return 1;
label1:
return 0;
}
public java.lang.String dumpStats()
{
int v11, v13, v16, v17, v2, v4, v7, v8;
java.lang.String v14, v19, v5;
io.netty.buffer.PoolArena v18, v9;
io.netty.buffer.PooledByteBufAllocator v0;
io.netty.buffer.PoolArena[] v1, v10, v12, v15, v3, v6;
java.lang.StringBuilder v20, v21, v22;
v0 := @this: io.netty.buffer.PooledByteBufAllocator;
v1 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
if v1 != null goto label1;
v2 = 0;
goto label2;
label1:
v3 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v2 = lengthof v3;
label2:
v4 = v2;
specialinvoke v20.<java.lang.StringBuilder: void <init>(int)>(512);
v5 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
if v2 <= 0 goto label4;
v6 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] heapArenas>;
v7 = lengthof v6;
v8 = 0;
label3:
if v8 >= v7 goto label4;
v9 = v6[v8];
virtualinvoke v21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v9);
v8 = v8 + 1;
goto label3;
label4:
v10 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
if v10 != null goto label5;
v11 = 0;
goto label6;
label5:
v12 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v11 = lengthof v12;
label6:
v13 = v11;
v14 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
virtualinvoke v22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v14);
if v11 <= 0 goto label8;
v15 = v0.<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PoolArena[] directArenas>;
v16 = lengthof v15;
v17 = 0;
label7:
if v17 >= v16 goto label8;
v18 = v15[v17];
virtualinvoke v21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v18);
v17 = v17 + 1;
goto label7;
label8:
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String,int)>(v4, v5, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 heap arena(s):\u0001\u0001 direct arena(s):");
return v19;
}
static void <clinit>()
{
java.lang.Integer v49, v52, v55, v58, v61, v64, v69, v72, v75, v78, v81, v90;
java.lang.Long v84;
java.lang.Runtime v12;
io.netty.buffer.PooledByteBufAllocator v91;
io.netty.util.internal.logging.InternalLogger v3, v38, v45, v47, v50, v53, v56, v59, v62, v65, v70, v73, v76, v79, v82, v85, v88;
java.lang.Throwable v11, v6, v7, v9;
long v18, v19, v20, v21, v22, v25, v26, v27, v28, v29, v40, v41, v42, v83;
boolean v1, v2, v37, v39, v43, v46, v86, v92;
int v10, v13, v14, v15, v16, v17, v23, v24, v30, v31, v32, v33, v34, v35, v36, v4, v44, v48, v5, v51, v54, v57, v60, v63, v66, v67, v68, v71, v74, v77, v8, v80, v89;
java.lang.Boolean v87;
java.lang.Class v0;
v0 = class "Lio/netty/buffer/PooledByteBufAllocator;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label01;
v2 = 1;
goto label02;
label01:
v2 = 0;
label02:
<io.netty.buffer.PooledByteBufAllocator: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/buffer/PooledByteBufAllocator;");
<io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger> = v3;
v4 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.directMemoryCacheAlignment", 0);
v5 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.pageSize", 8192);
v6 = null;
label03:
staticinvoke <io.netty.buffer.PooledByteBufAllocator: int validateAndCalculatePageShifts(int,int)>(v5, v4);
label04:
goto label06;
label05:
v7 := @caughtexception;
v6 = v7;
v5 = 8192;
v4 = 0;
label06:
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE> = v5;
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT> = v4;
v8 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.maxOrder", 9);
v9 = null;
label07:
v10 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
staticinvoke <io.netty.buffer.PooledByteBufAllocator: int validateAndCalculateChunkSize(int,int)>(v10, v8);
label08:
goto label10;
label09:
v11 := @caughtexception;
v9 = v11;
v8 = 9;
label10:
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER> = v8;
v12 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
v13 = staticinvoke <io.netty.util.NettyRuntime: int availableProcessors()>();
v14 = v13 * 2;
v15 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
v16 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER>;
v17 = v15 << v16;
v18 = virtualinvoke v12.<java.lang.Runtime: long maxMemory()>();
v19 = v18 / v17;
v20 = v19 / 2L;
v21 = v20 / 3L;
v22 = staticinvoke <java.lang.Math: long min(long,long)>(v14, v21);
v23 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.numHeapArenas", v22);
v24 = staticinvoke <java.lang.Math: int max(int,int)>(0, v23);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_HEAP_ARENA> = v24;
v25 = staticinvoke <io.netty.util.internal.PlatformDependent: long maxDirectMemory()>();
v26 = v25 / v17;
v27 = v26 / 2L;
v28 = v27 / 3L;
v29 = staticinvoke <java.lang.Math: long min(long,long)>(v14, v28);
v30 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.numDirectArenas", v29);
v31 = staticinvoke <java.lang.Math: int max(int,int)>(0, v30);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_DIRECT_ARENA> = v31;
v32 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.smallCacheSize", 256);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_SMALL_CACHE_SIZE> = v32;
v33 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.normalCacheSize", 64);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NORMAL_CACHE_SIZE> = v33;
v34 = (int) 32768;
v35 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.maxCachedBufferCapacity", v34);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_CACHED_BUFFER_CAPACITY> = v35;
v36 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.cacheTrimInterval", 8192);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_CACHE_TRIM_INTERVAL> = v36;
v37 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean contains(java.lang.String)>("io.netty.allocation.cacheTrimIntervalMillis");
if v37 == 0 goto label12;
v38 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v38.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String)>("-Dio.netty.allocation.cacheTrimIntervalMillis is deprecated, use -Dio.netty.allocator.cacheTrimIntervalMillis");
v39 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean contains(java.lang.String)>("io.netty.allocator.cacheTrimIntervalMillis");
if v39 == 0 goto label11;
v40 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: long getLong(java.lang.String,long)>("io.netty.allocator.cacheTrimIntervalMillis", 0L);
<io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS> = v40;
goto label13;
label11:
v41 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: long getLong(java.lang.String,long)>("io.netty.allocation.cacheTrimIntervalMillis", 0L);
<io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS> = v41;
goto label13;
label12:
v42 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: long getLong(java.lang.String,long)>("io.netty.allocator.cacheTrimIntervalMillis", 0L);
<io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS> = v42;
label13:
v43 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean getBoolean(java.lang.String,boolean)>("io.netty.allocator.useCacheForAllThreads", 0);
<io.netty.buffer.PooledByteBufAllocator: boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS> = v43;
v44 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.allocator.maxCachedByteBuffersPerChunk", 1023);
<io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_CACHED_BYTEBUFFERS_PER_CHUNK> = v44;
v45 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v46 = interfaceinvoke v45.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v46 == 0 goto label18;
v47 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v48 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_HEAP_ARENA>;
v49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v48);
interfaceinvoke v47.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.numHeapArenas: {}", v49);
v50 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v51 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NUM_DIRECT_ARENA>;
v52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v51);
interfaceinvoke v50.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.numDirectArenas: {}", v52);
if v6 != null goto label14;
v53 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v54 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
v55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v54);
interfaceinvoke v53.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.pageSize: {}", v55);
goto label15;
label14:
v56 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v57 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
v58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v57);
interfaceinvoke v56.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("-Dio.netty.allocator.pageSize: {}", v58, v6);
label15:
if v9 != null goto label16;
v59 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v60 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER>;
v61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v60);
interfaceinvoke v59.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.maxOrder: {}", v61);
goto label17;
label16:
v62 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v63 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER>;
v64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v63);
interfaceinvoke v62.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("-Dio.netty.allocator.maxOrder: {}", v64, v9);
label17:
v65 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v66 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_PAGE_SIZE>;
v67 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_ORDER>;
v68 = v66 << v67;
v69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v68);
interfaceinvoke v65.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.chunkSize: {}", v69);
v70 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v71 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_SMALL_CACHE_SIZE>;
v72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v71);
interfaceinvoke v70.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.smallCacheSize: {}", v72);
v73 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v74 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_NORMAL_CACHE_SIZE>;
v75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v74);
interfaceinvoke v73.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.normalCacheSize: {}", v75);
v76 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v77 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_CACHED_BUFFER_CAPACITY>;
v78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v77);
interfaceinvoke v76.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.maxCachedBufferCapacity: {}", v78);
v79 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v80 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_CACHE_TRIM_INTERVAL>;
v81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v80);
interfaceinvoke v79.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.cacheTrimInterval: {}", v81);
v82 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v83 = <io.netty.buffer.PooledByteBufAllocator: long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS>;
v84 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v83);
interfaceinvoke v82.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.cacheTrimIntervalMillis: {}", v84);
v85 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v86 = <io.netty.buffer.PooledByteBufAllocator: boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS>;
v87 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v86);
interfaceinvoke v85.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.useCacheForAllThreads: {}", v87);
v88 = <io.netty.buffer.PooledByteBufAllocator: io.netty.util.internal.logging.InternalLogger logger>;
v89 = <io.netty.buffer.PooledByteBufAllocator: int DEFAULT_MAX_CACHED_BYTEBUFFERS_PER_CHUNK>;
v90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v89);
interfaceinvoke v88.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.allocator.maxCachedByteBuffersPerChunk: {}", v90);
label18:
v91 = new io.netty.buffer.PooledByteBufAllocator;
v92 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean directBufferPreferred()>();
specialinvoke v91.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean)>(v92);
<io.netty.buffer.PooledByteBufAllocator: io.netty.buffer.PooledByteBufAllocator DEFAULT> = v91;
return;
catch java.lang.Throwable from label03 to label04 with label05;
catch java.lang.Throwable from label07 to label08 with label09;
}
}