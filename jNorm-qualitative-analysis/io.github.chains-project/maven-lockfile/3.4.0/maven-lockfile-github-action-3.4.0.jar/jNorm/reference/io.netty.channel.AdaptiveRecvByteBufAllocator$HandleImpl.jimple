final class io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl extends io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle
{
private final int minIndex;
private final int maxIndex;
private int index;
private int nextReceiveBufferSize;
private boolean decreaseNow;
final io.netty.channel.AdaptiveRecvByteBufAllocator this$0;
void <init>(io.netty.channel.AdaptiveRecvByteBufAllocator, int, int, int)
{
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl v0;
int[] v6;
int v2, v3, v4, v5, v7, v8;
io.netty.channel.AdaptiveRecvByteBufAllocator v1;
v0 := @this: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl;
v1 := @parameter0: io.netty.channel.AdaptiveRecvByteBufAllocator;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: io.netty.channel.AdaptiveRecvByteBufAllocator this$0> = v1;
specialinvoke v0.<io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle: void <init>(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator)>(v1);
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int minIndex> = v2;
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int maxIndex> = v3;
v5 = staticinvoke <io.netty.channel.AdaptiveRecvByteBufAllocator: int getSizeTableIndex(int)>(v4);
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index> = v5;
v6 = <io.netty.channel.AdaptiveRecvByteBufAllocator: int[] SIZE_TABLE>;
v7 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index>;
v8 = v6[v7];
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int nextReceiveBufferSize> = v8;
return;
}
public void lastBytesRead(int)
{
int v1, v2;
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl v0;
v0 := @this: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int attemptedBytesRead()>();
if v1 != v2 goto label1;
specialinvoke v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: void record(int)>(v1);
label1:
specialinvoke v0.<io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle: void lastBytesRead(int)>(v1);
return;
}
public int guess()
{
int v1;
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl v0;
v0 := @this: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl;
v1 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int nextReceiveBufferSize>;
return v1;
}
private void record(int)
{
int[] v12, v2, v20;
int v1, v10, v11, v13, v14, v15, v16, v17, v18, v19, v21, v22, v3, v4, v5, v6, v8, v9;
boolean v7;
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl v0;
v0 := @this: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl;
v1 := @parameter0: int;
v2 = <io.netty.channel.AdaptiveRecvByteBufAllocator: int[] SIZE_TABLE>;
v3 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index>;
v4 = v3 - 1;
v5 = staticinvoke <java.lang.Math: int max(int,int)>(0, v4);
v6 = v2[v5];
if v1 > v6 goto label2;
v7 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: boolean decreaseNow>;
if v7 == 0 goto label1;
v8 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index>;
v9 = v8 - 1;
v10 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int minIndex>;
v11 = staticinvoke <java.lang.Math: int max(int,int)>(v9, v10);
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index> = v11;
v12 = <io.netty.channel.AdaptiveRecvByteBufAllocator: int[] SIZE_TABLE>;
v13 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index>;
v14 = v12[v13];
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int nextReceiveBufferSize> = v14;
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: boolean decreaseNow> = 0;
goto label3;
label1:
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: boolean decreaseNow> = 1;
goto label3;
label2:
v15 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int nextReceiveBufferSize>;
if v1 < v15 goto label3;
v16 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index>;
v17 = v16 + 4;
v18 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int maxIndex>;
v19 = staticinvoke <java.lang.Math: int min(int,int)>(v17, v18);
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index> = v19;
v20 = <io.netty.channel.AdaptiveRecvByteBufAllocator: int[] SIZE_TABLE>;
v21 = v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int index>;
v22 = v20[v21];
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int nextReceiveBufferSize> = v22;
v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: boolean decreaseNow> = 0;
label3:
return;
}
public void readComplete()
{
int v1;
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl v0;
v0 := @this: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl;
v1 = virtualinvoke v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: int totalBytesRead()>();
specialinvoke v0.<io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl: void record(int)>(v1);
return;
}
}