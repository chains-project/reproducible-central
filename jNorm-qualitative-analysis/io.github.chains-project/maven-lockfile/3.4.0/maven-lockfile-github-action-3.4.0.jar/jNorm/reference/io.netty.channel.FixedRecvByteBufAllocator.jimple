public class io.netty.channel.FixedRecvByteBufAllocator extends io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator
{
private final int bufferSize;
public void <init>(int)
{
int v1;
io.netty.channel.FixedRecvByteBufAllocator v0;
v0 := @this: io.netty.channel.FixedRecvByteBufAllocator;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v1, "bufferSize");
v0.<io.netty.channel.FixedRecvByteBufAllocator: int bufferSize> = v1;
return;
}
public io.netty.channel.RecvByteBufAllocator$Handle newHandle()
{
int v2;
io.netty.channel.FixedRecvByteBufAllocator$HandleImpl v1;
io.netty.channel.FixedRecvByteBufAllocator v0;
v0 := @this: io.netty.channel.FixedRecvByteBufAllocator;
v1 = new io.netty.channel.FixedRecvByteBufAllocator$HandleImpl;
v2 = v0.<io.netty.channel.FixedRecvByteBufAllocator: int bufferSize>;
specialinvoke v1.<io.netty.channel.FixedRecvByteBufAllocator$HandleImpl: void <init>(io.netty.channel.FixedRecvByteBufAllocator,int)>(v0, v2);
return v1;
}
public io.netty.channel.FixedRecvByteBufAllocator respectMaybeMoreData(boolean)
{
io.netty.channel.FixedRecvByteBufAllocator v0;
boolean v1;
v0 := @this: io.netty.channel.FixedRecvByteBufAllocator;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean)>(v1);
return v0;
}
}