class io.netty.channel.ThreadPerChannelEventLoopGroup$1 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.channel.ThreadPerChannelEventLoopGroup this$0;
void <init>(io.netty.channel.ThreadPerChannelEventLoopGroup)
{
io.netty.channel.ThreadPerChannelEventLoopGroup v1;
io.netty.channel.ThreadPerChannelEventLoopGroup$1 v0;
v0 := @this: io.netty.channel.ThreadPerChannelEventLoopGroup$1;
v1 := @parameter0: io.netty.channel.ThreadPerChannelEventLoopGroup;
v0.<io.netty.channel.ThreadPerChannelEventLoopGroup$1: io.netty.channel.ThreadPerChannelEventLoopGroup this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
io.netty.util.concurrent.Promise v5;
io.netty.channel.ThreadPerChannelEventLoopGroup v2, v4;
io.netty.util.concurrent.Future v1;
io.netty.channel.ThreadPerChannelEventLoopGroup$1 v0;
boolean v3;
v0 := @this: io.netty.channel.ThreadPerChannelEventLoopGroup$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.channel.ThreadPerChannelEventLoopGroup$1: io.netty.channel.ThreadPerChannelEventLoopGroup this$0>;
v3 = virtualinvoke v2.<io.netty.channel.ThreadPerChannelEventLoopGroup: boolean isTerminated()>();
if v3 == 0 goto label1;
v4 = v0.<io.netty.channel.ThreadPerChannelEventLoopGroup$1: io.netty.channel.ThreadPerChannelEventLoopGroup this$0>;
v5 = v4.<io.netty.channel.ThreadPerChannelEventLoopGroup: io.netty.util.concurrent.Promise terminationFuture>;
interfaceinvoke v5.<io.netty.util.concurrent.Promise: boolean trySuccess(java.lang.Object)>(null);
label1:
return;
}
}