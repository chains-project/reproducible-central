public final class io.netty.channel.WriteBufferWaterMark extends java.lang.Object
{
private static final int DEFAULT_LOW_WATER_MARK;
private static final int DEFAULT_HIGH_WATER_MARK;
public static final io.netty.channel.WriteBufferWaterMark DEFAULT;
private final int low;
private final int high;
public void <init>(int, int)
{
int v1, v2;
io.netty.channel.WriteBufferWaterMark v0;
v0 := @this: io.netty.channel.WriteBufferWaterMark;
v1 := @parameter0: int;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.channel.WriteBufferWaterMark: void <init>(int,int,boolean)>(v1, v2, 1);
return;
}
void <init>(int, int, boolean)
{
io.netty.channel.WriteBufferWaterMark v0;
int v1, v2;
java.lang.String v5;
java.lang.IllegalArgumentException v4;
boolean v3;
v0 := @this: io.netty.channel.WriteBufferWaterMark;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v3 == 0 goto label1;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "low");
if v2 >= v1 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("write buffer\'s high water mark cannot be less than  low water mark (\u0001): \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v0.<io.netty.channel.WriteBufferWaterMark: int low> = v1;
v0.<io.netty.channel.WriteBufferWaterMark: int high> = v2;
return;
}
public int low()
{
int v1;
io.netty.channel.WriteBufferWaterMark v0;
v0 := @this: io.netty.channel.WriteBufferWaterMark;
v1 = v0.<io.netty.channel.WriteBufferWaterMark: int low>;
return v1;
}
public int high()
{
int v1;
io.netty.channel.WriteBufferWaterMark v0;
v0 := @this: io.netty.channel.WriteBufferWaterMark;
v1 = v0.<io.netty.channel.WriteBufferWaterMark: int high>;
return v1;
}
public java.lang.String toString()
{
io.netty.channel.WriteBufferWaterMark v0;
int v1, v2;
java.lang.StringBuilder v4;
java.lang.String v3;
v0 := @this: io.netty.channel.WriteBufferWaterMark;
specialinvoke v4.<java.lang.StringBuilder: void <init>(int)>(55);
v1 = v0.<io.netty.channel.WriteBufferWaterMark: int low>;
v2 = v0.<io.netty.channel.WriteBufferWaterMark: int high>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("WriteBufferWaterMark(low: \u0001, high: \u0001)");
return v3;
}
static void <clinit>()
{
int v1;
io.netty.channel.WriteBufferWaterMark v0;
v0 = new io.netty.channel.WriteBufferWaterMark;
v1 = (int) 32768;
specialinvoke v0.<io.netty.channel.WriteBufferWaterMark: void <init>(int,int,boolean)>(v1, 65536, 0);
<io.netty.channel.WriteBufferWaterMark: io.netty.channel.WriteBufferWaterMark DEFAULT> = v0;
return;
}
}