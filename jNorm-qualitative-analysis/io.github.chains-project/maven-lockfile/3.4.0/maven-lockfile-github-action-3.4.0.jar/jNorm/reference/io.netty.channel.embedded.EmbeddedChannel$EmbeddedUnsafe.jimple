final class io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe extends io.netty.channel.AbstractChannel$AbstractUnsafe
{
final io.netty.channel.Channel$Unsafe wrapped;
final io.netty.channel.embedded.EmbeddedChannel this$0;
private void <init>(io.netty.channel.embedded.EmbeddedChannel)
{
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1 v2;
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe v0;
io.netty.channel.embedded.EmbeddedChannel v1;
v0 := @this: io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe;
v1 := @parameter0: io.netty.channel.embedded.EmbeddedChannel;
v0.<io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe: io.netty.channel.embedded.EmbeddedChannel this$0> = v1;
specialinvoke v0.<io.netty.channel.AbstractChannel$AbstractUnsafe: void <init>(io.netty.channel.AbstractChannel)>(v1);
v2 = new io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1;
specialinvoke v2.<io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1: void <init>(io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe)>(v0);
v0.<io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe: io.netty.channel.Channel$Unsafe wrapped> = v2;
return;
}
public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelPromise v3;
java.net.SocketAddress v1, v2;
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe v0;
v0 := @this: io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: io.netty.channel.ChannelPromise;
virtualinvoke v0.<io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe: void safeSetSuccess(io.netty.channel.ChannelPromise)>(v3);
return;
}
}