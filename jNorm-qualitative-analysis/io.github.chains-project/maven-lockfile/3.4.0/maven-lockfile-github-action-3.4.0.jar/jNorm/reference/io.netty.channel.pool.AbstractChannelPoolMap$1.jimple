class io.netty.channel.pool.AbstractChannelPoolMap$1 extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
final io.netty.util.concurrent.Promise val$removePromise;
final io.netty.channel.pool.AbstractChannelPoolMap this$0;
void <init>(io.netty.channel.pool.AbstractChannelPoolMap, io.netty.util.concurrent.Promise)
{
io.netty.channel.pool.AbstractChannelPoolMap v1;
io.netty.channel.pool.AbstractChannelPoolMap$1 v0;
io.netty.util.concurrent.Promise v2;
v0 := @this: io.netty.channel.pool.AbstractChannelPoolMap$1;
v1 := @parameter0: io.netty.channel.pool.AbstractChannelPoolMap;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v0.<io.netty.channel.pool.AbstractChannelPoolMap$1: io.netty.channel.pool.AbstractChannelPoolMap this$0> = v1;
v0.<io.netty.channel.pool.AbstractChannelPoolMap$1: io.netty.util.concurrent.Promise val$removePromise> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v6;
io.netty.channel.pool.AbstractChannelPoolMap$1 v0;
io.netty.util.concurrent.Promise v3, v5;
java.lang.Boolean v4;
io.netty.util.concurrent.Future v1;
boolean v2;
v0 := @this: io.netty.channel.pool.AbstractChannelPoolMap$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.channel.pool.AbstractChannelPoolMap$1: io.netty.util.concurrent.Promise val$removePromise>;
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
interfaceinvoke v3.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v4);
goto label2;
label1:
v5 = v0.<io.netty.channel.pool.AbstractChannelPoolMap$1: io.netty.util.concurrent.Promise val$removePromise>;
v6 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
interfaceinvoke v5.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v6);
label2:
return;
}
}