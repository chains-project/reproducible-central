class io.netty.channel.pool.ChannelHealthChecker$1 extends java.lang.Object implements io.netty.channel.pool.ChannelHealthChecker
{
void <init>()
{
io.netty.channel.pool.ChannelHealthChecker$1 v0;
v0 := @this: io.netty.channel.pool.ChannelHealthChecker$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.netty.util.concurrent.Future isHealthy(io.netty.channel.Channel)
{
io.netty.channel.Channel v1;
io.netty.channel.pool.ChannelHealthChecker$1 v0;
java.lang.Boolean v4, v6;
io.netty.channel.EventLoop v2;
io.netty.util.concurrent.Future v5;
boolean v3;
v0 := @this: io.netty.channel.pool.ChannelHealthChecker$1;
v1 := @parameter0: io.netty.channel.Channel;
v2 = interfaceinvoke v1.<io.netty.channel.Channel: io.netty.channel.EventLoop eventLoop()>();
v3 = interfaceinvoke v1.<io.netty.channel.Channel: boolean isActive()>();
if v3 == 0 goto label1;
v4 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v5 = interfaceinvoke v2.<io.netty.channel.EventLoop: io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object)>(v4);
goto label2;
label1:
v6 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v5 = interfaceinvoke v2.<io.netty.channel.EventLoop: io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object)>(v6);
label2:
return v5;
}
}