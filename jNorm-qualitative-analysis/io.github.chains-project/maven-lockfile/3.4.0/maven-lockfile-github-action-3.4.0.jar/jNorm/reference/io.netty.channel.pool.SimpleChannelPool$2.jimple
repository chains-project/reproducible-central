class io.netty.channel.pool.SimpleChannelPool$2 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.util.concurrent.Promise val$promise;
final io.netty.channel.pool.SimpleChannelPool this$0;
void <init>(io.netty.channel.pool.SimpleChannelPool, io.netty.util.concurrent.Promise)
{
io.netty.channel.pool.SimpleChannelPool v1;
io.netty.channel.pool.SimpleChannelPool$2 v0;
io.netty.util.concurrent.Promise v2;
v0 := @this: io.netty.channel.pool.SimpleChannelPool$2;
v1 := @parameter0: io.netty.channel.pool.SimpleChannelPool;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v0.<io.netty.channel.pool.SimpleChannelPool$2: io.netty.channel.pool.SimpleChannelPool this$0> = v1;
v0.<io.netty.channel.pool.SimpleChannelPool$2: io.netty.util.concurrent.Promise val$promise> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture) throws java.lang.Exception
{
io.netty.channel.pool.SimpleChannelPool v2;
io.netty.channel.pool.SimpleChannelPool$2 v0;
io.netty.util.concurrent.Promise v3;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.channel.pool.SimpleChannelPool$2;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.channel.pool.SimpleChannelPool$2: io.netty.channel.pool.SimpleChannelPool this$0>;
v3 = v0.<io.netty.channel.pool.SimpleChannelPool$2: io.netty.util.concurrent.Promise val$promise>;
specialinvoke v2.<io.netty.channel.pool.SimpleChannelPool: void notifyConnect(io.netty.channel.ChannelFuture,io.netty.util.concurrent.Promise)>(v1, v3);
return;
}
}