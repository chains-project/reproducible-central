public final class io.netty.channel.socket.nio.NioChannelOption extends io.netty.channel.ChannelOption
{
private final java.net.SocketOption option;
private void <init>(java.net.SocketOption)
{
java.lang.String v2;
io.netty.channel.socket.nio.NioChannelOption v0;
java.net.SocketOption v1;
v0 := @this: io.netty.channel.socket.nio.NioChannelOption;
v1 := @parameter0: java.net.SocketOption;
v2 = interfaceinvoke v1.<java.net.SocketOption: java.lang.String name()>();
specialinvoke v0.<io.netty.channel.ChannelOption: void <init>(java.lang.String)>(v2);
v0.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option> = v1;
return;
}
public static io.netty.channel.ChannelOption of(java.net.SocketOption)
{
io.netty.channel.socket.nio.NioChannelOption v1;
java.net.SocketOption v0;
v0 := @parameter0: java.net.SocketOption;
v1 = new io.netty.channel.socket.nio.NioChannelOption;
specialinvoke v1.<io.netty.channel.socket.nio.NioChannelOption: void <init>(java.net.SocketOption)>(v0);
return v1;
}
static boolean setOption(java.nio.channels.Channel, io.netty.channel.socket.nio.NioChannelOption, java.lang.Object)
{
io.netty.channel.socket.nio.NioChannelOption v1;
java.net.SocketOption v4, v7, v8, v9;
java.util.Set v3;
java.io.IOException v10;
io.netty.channel.ChannelException v11;
java.lang.Object v2;
boolean v5, v6;
java.nio.channels.Channel v0;
v0 := @parameter0: java.nio.channels.Channel;
v1 := @parameter1: io.netty.channel.socket.nio.NioChannelOption;
v2 := @parameter2: java.lang.Object;
v3 = interfaceinvoke v0.<java.nio.channels.NetworkChannel: java.util.Set supportedOptions()>();
v4 = v1.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option>;
v5 = interfaceinvoke v3.<java.util.Set: boolean contains(java.lang.Object)>(v4);
if v5 != 0 goto label1;
return 0;
label1:
v6 = v0 instanceof java.nio.channels.ServerSocketChannel;
if v6 == 0 goto label2;
v7 = v1.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option>;
v8 = <java.net.StandardSocketOptions: java.net.SocketOption IP_TOS>;
if v7 != v8 goto label2;
return 0;
label2:
v9 = v1.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option>;
interfaceinvoke v0.<java.nio.channels.NetworkChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>(v9, v2);
label3:
return 1;
label4:
v10 := @caughtexception;
v11 = new io.netty.channel.ChannelException;
specialinvoke v11.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v10);
throw v11;
catch java.io.IOException from label2 to label3 with label4;
}
static java.lang.Object getOption(java.nio.channels.Channel, io.netty.channel.socket.nio.NioChannelOption)
{
io.netty.channel.socket.nio.NioChannelOption v1;
java.net.SocketOption v3, v6, v7, v8;
java.util.Set v2;
java.io.IOException v10;
io.netty.channel.ChannelException v11;
java.lang.Object v9;
boolean v4, v5;
java.nio.channels.Channel v0;
v0 := @parameter0: java.nio.channels.Channel;
v1 := @parameter1: io.netty.channel.socket.nio.NioChannelOption;
v2 = interfaceinvoke v0.<java.nio.channels.NetworkChannel: java.util.Set supportedOptions()>();
v3 = v1.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option>;
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v4 != 0 goto label1;
return null;
label1:
v5 = v0 instanceof java.nio.channels.ServerSocketChannel;
if v5 == 0 goto label2;
v6 = v1.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option>;
v7 = <java.net.StandardSocketOptions: java.net.SocketOption IP_TOS>;
if v6 != v7 goto label2;
return null;
label2:
v8 = v1.<io.netty.channel.socket.nio.NioChannelOption: java.net.SocketOption option>;
v9 = interfaceinvoke v0.<java.nio.channels.NetworkChannel: java.lang.Object getOption(java.net.SocketOption)>(v8);
label3:
return v9;
label4:
v10 := @caughtexception;
v11 = new io.netty.channel.ChannelException;
specialinvoke v11.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v10);
throw v11;
catch java.io.IOException from label2 to label3 with label4;
}
static io.netty.channel.ChannelOption[] getOptions(java.nio.channels.Channel)
{
java.lang.Object[] v11;
io.netty.channel.socket.nio.NioChannelOption v19, v9;
java.net.SocketOption v8;
java.util.ArrayList v3;
io.netty.channel.ChannelOption[] v10, v13;
int v12, v14, v18, v4;
boolean v16, v2, v6;
java.nio.channels.Channel v0;
java.util.Iterator v15, v5;
java.util.Set v1;
java.lang.Object v17, v7;
v0 := @parameter0: java.nio.channels.Channel;
v1 = interfaceinvoke v0.<java.nio.channels.NetworkChannel: java.util.Set supportedOptions()>();
v2 = v0 instanceof java.nio.channels.ServerSocketChannel;
if v2 == 0 goto label3;
v3 = new java.util.ArrayList;
v4 = interfaceinvoke v1.<java.util.Set: int size()>();
specialinvoke v3.<java.util.ArrayList: void <init>(int)>(v4);
v5 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = <java.net.StandardSocketOptions: java.net.SocketOption IP_TOS>;
if v7 == v8 goto label1;
v9 = new io.netty.channel.socket.nio.NioChannelOption;
specialinvoke v9.<io.netty.channel.socket.nio.NioChannelOption: void <init>(java.net.SocketOption)>(v7);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label1;
label2:
v10 = newarray (io.netty.channel.ChannelOption)[0];
v11 = interfaceinvoke v3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v10);
return v11;
label3:
v12 = interfaceinvoke v1.<java.util.Set: int size()>();
v13 = newarray (io.netty.channel.ChannelOption)[v12];
v14 = 0;
v15 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label4:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label5;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = v14;
v14 = v14 + 1;
v19 = new io.netty.channel.socket.nio.NioChannelOption;
specialinvoke v19.<io.netty.channel.socket.nio.NioChannelOption: void <init>(java.net.SocketOption)>(v17);
v13[v18] = v19;
goto label4;
label5:
return v13;
}
}