class io.netty.channel.socket.nio.NioDatagramChannelConfig extends io.netty.channel.socket.DefaultDatagramChannelConfig
{
private static final java.lang.Object IP_MULTICAST_TTL;
private static final java.lang.Object IP_MULTICAST_IF;
private static final java.lang.Object IP_MULTICAST_LOOP;
private static final java.lang.reflect.Method GET_OPTION;
private static final java.lang.reflect.Method SET_OPTION;
private final java.nio.channels.DatagramChannel javaChannel;
void <init>(io.netty.channel.socket.nio.NioDatagramChannel, java.nio.channels.DatagramChannel)
{
java.net.DatagramSocket v3;
io.netty.channel.socket.nio.NioDatagramChannel v1;
java.nio.channels.DatagramChannel v2;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: io.netty.channel.socket.nio.NioDatagramChannel;
v2 := @parameter1: java.nio.channels.DatagramChannel;
v3 = virtualinvoke v2.<java.nio.channels.DatagramChannel: java.net.DatagramSocket socket()>();
specialinvoke v0.<io.netty.channel.socket.DefaultDatagramChannelConfig: void <init>(io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket)>(v1, v3);
v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.nio.channels.DatagramChannel javaChannel> = v2;
return;
}
public int getTimeToLive()
{
int v3;
java.lang.Object v1, v2;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_TTL>;
v2 = specialinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object getOption0(java.lang.Object)>(v1);
v3 = virtualinvoke v2.<java.lang.Integer: int intValue()>();
return v3;
}
public io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int)
{
int v1;
java.lang.Object v2;
java.lang.Integer v3;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: int;
v2 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_TTL>;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
specialinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: void setOption0(java.lang.Object,java.lang.Object)>(v2, v3);
return v0;
}
public java.net.InetAddress getInterface()
{
java.util.Enumeration v2;
java.net.NetworkInterface v1;
java.lang.Object v4;
boolean v3;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 = virtualinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.net.NetworkInterface getNetworkInterface()>();
if v1 == null goto label1;
v2 = staticinvoke <io.netty.util.internal.SocketUtils: java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface)>(v1);
v3 = interfaceinvoke v2.<java.util.Enumeration: boolean hasMoreElements()>();
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<java.util.Enumeration: java.lang.Object nextElement()>();
return v4;
label1:
return null;
}
public io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress)
{
java.net.InetAddress v1;
io.netty.channel.ChannelException v4;
java.net.SocketException v3;
java.net.NetworkInterface v2;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: java.net.InetAddress;
label1:
v2 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>(v1);
virtualinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new io.netty.channel.ChannelException;
specialinvoke v4.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v3);
throw v4;
label4:
return v0;
catch java.net.SocketException from label1 to label2 with label3;
}
public java.net.NetworkInterface getNetworkInterface()
{
java.lang.Object v1, v2;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_IF>;
v2 = specialinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object getOption0(java.lang.Object)>(v1);
return v2;
}
public io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface)
{
java.net.NetworkInterface v1;
java.lang.Object v2;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: java.net.NetworkInterface;
v2 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_IF>;
specialinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: void setOption0(java.lang.Object,java.lang.Object)>(v2, v1);
return v0;
}
public boolean isLoopbackModeDisabled()
{
java.lang.Object v1, v2;
boolean v3;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_LOOP>;
v2 = specialinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object getOption0(java.lang.Object)>(v1);
v3 = virtualinvoke v2.<java.lang.Boolean: boolean booleanValue()>();
return v3;
}
public io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean)
{
java.lang.Boolean v3;
java.lang.Object v2;
boolean v1;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: boolean;
v2 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_LOOP>;
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
specialinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: void setOption0(java.lang.Object,java.lang.Object)>(v2, v3);
return v0;
}
public io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean)
{
boolean v1;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.channel.socket.DefaultDatagramChannelConfig: io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean)>(v1);
return v0;
}
protected void autoReadCleared()
{
io.netty.channel.Channel v1;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 = v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: io.netty.channel.Channel channel>;
virtualinvoke v1.<io.netty.channel.socket.nio.NioDatagramChannel: void clearReadPending0()>();
return;
}
private java.lang.Object getOption0(java.lang.Object)
{
java.lang.UnsupportedOperationException v3;
java.lang.Object[] v6;
java.nio.channels.DatagramChannel v5;
java.lang.Exception v8;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
io.netty.channel.ChannelException v9;
java.lang.Object v1, v7;
java.lang.reflect.Method v2, v4;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: java.lang.Object;
v2 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.reflect.Method GET_OPTION>;
if v2 != null goto label1;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
label1:
v4 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.reflect.Method GET_OPTION>;
v5 = v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.nio.channels.DatagramChannel javaChannel>;
v6 = newarray (java.lang.Object)[1];
v6[0] = v1;
v7 = virtualinvoke v4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v5, v6);
label2:
return v7;
label3:
v8 := @caughtexception;
v9 = new io.netty.channel.ChannelException;
specialinvoke v9.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v8);
throw v9;
catch java.lang.Exception from label1 to label2 with label3;
}
private void setOption0(java.lang.Object, java.lang.Object)
{
java.lang.UnsupportedOperationException v4;
java.lang.Object[] v7;
java.nio.channels.DatagramChannel v6;
java.lang.Exception v8;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
io.netty.channel.ChannelException v9;
java.lang.Object v1, v2;
java.lang.reflect.Method v3, v5;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.reflect.Method SET_OPTION>;
if v3 != null goto label1;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
label1:
v5 = <io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.reflect.Method SET_OPTION>;
v6 = v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.nio.channels.DatagramChannel javaChannel>;
v7 = newarray (java.lang.Object)[2];
v7[0] = v1;
v7[1] = v2;
virtualinvoke v5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v6, v7);
label2:
goto label4;
label3:
v8 := @caughtexception;
v9 = new io.netty.channel.ChannelException;
specialinvoke v9.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v8);
throw v9;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
public boolean setOption(io.netty.channel.ChannelOption, java.lang.Object)
{
io.netty.channel.ChannelOption v1;
java.nio.channels.DatagramChannel v5;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
int v3;
java.lang.Object v2;
boolean v4, v6, v7;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: io.netty.channel.ChannelOption;
v2 := @parameter1: java.lang.Object;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v3 < 7 goto label1;
v4 = v1 instanceof io.netty.channel.socket.nio.NioChannelOption;
if v4 == 0 goto label1;
v5 = v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.nio.channels.DatagramChannel javaChannel>;
v6 = staticinvoke <io.netty.channel.socket.nio.NioChannelOption: boolean setOption(java.nio.channels.Channel,io.netty.channel.socket.nio.NioChannelOption,java.lang.Object)>(v5, v1, v2);
return v6;
label1:
v7 = specialinvoke v0.<io.netty.channel.socket.DefaultDatagramChannelConfig: boolean setOption(io.netty.channel.ChannelOption,java.lang.Object)>(v1, v2);
return v7;
}
public java.lang.Object getOption(io.netty.channel.ChannelOption)
{
io.netty.channel.ChannelOption v1;
java.nio.channels.DatagramChannel v4;
int v2;
java.lang.Object v5, v6;
boolean v3;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 := @parameter0: io.netty.channel.ChannelOption;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v2 < 7 goto label1;
v3 = v1 instanceof io.netty.channel.socket.nio.NioChannelOption;
if v3 == 0 goto label1;
v4 = v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.nio.channels.DatagramChannel javaChannel>;
v5 = staticinvoke <io.netty.channel.socket.nio.NioChannelOption: java.lang.Object getOption(java.nio.channels.Channel,io.netty.channel.socket.nio.NioChannelOption)>(v4, v1);
return v5;
label1:
v6 = specialinvoke v0.<io.netty.channel.socket.DefaultDatagramChannelConfig: java.lang.Object getOption(io.netty.channel.ChannelOption)>(v1);
return v6;
}
public java.util.Map getOptions()
{
io.netty.channel.ChannelOption[] v4;
java.nio.channels.DatagramChannel v3;
java.util.Map v2, v5, v6;
int v1;
io.netty.channel.socket.nio.NioDatagramChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioDatagramChannelConfig;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = specialinvoke v0.<io.netty.channel.socket.DefaultDatagramChannelConfig: java.util.Map getOptions()>();
v3 = v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.nio.channels.DatagramChannel javaChannel>;
v4 = staticinvoke <io.netty.channel.socket.nio.NioChannelOption: io.netty.channel.ChannelOption[] getOptions(java.nio.channels.Channel)>(v3);
v5 = virtualinvoke v0.<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.util.Map getOptions(java.util.Map,io.netty.channel.ChannelOption[])>(v2, v4);
return v5;
label1:
v6 = specialinvoke v0.<io.netty.channel.socket.DefaultDatagramChannelConfig: java.util.Map getOptions()>();
return v6;
}
static void <clinit>()
{
java.lang.Throwable v20;
java.lang.Error v12, v15, v18, v23, v26;
java.lang.reflect.Method v8, v9;
java.lang.Class[] v21, v24;
java.lang.reflect.Field v10, v13, v16;
java.lang.Exception v11, v14, v17, v2, v22, v25, v4;
java.lang.Class v1, v19, v3;
java.lang.Object v5, v6, v7;
java.lang.ClassLoader v0;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class "Ljava/nio/channels/DatagramChannel;");
v1 = null;
label01:
v1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.net.SocketOption", 1, v0);
label02:
goto label04;
label03:
v2 := @caughtexception;
label04:
v3 = null;
label05:
v3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.net.StandardSocketOptions", 1, v0);
label06:
goto label08;
label07:
v4 := @caughtexception;
label08:
v5 = null;
v6 = null;
v7 = null;
v8 = null;
v9 = null;
if v1 == null goto label29;
label09:
v10 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("IP_MULTICAST_TTL");
v5 = virtualinvoke v10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
label10:
goto label12;
label11:
v11 := @caughtexception;
v12 = new java.lang.Error;
specialinvoke v12.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("cannot locate the IP_MULTICAST_TTL field", v11);
throw v12;
label12:
v13 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("IP_MULTICAST_IF");
v6 = virtualinvoke v13.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
label13:
goto label15;
label14:
v14 := @caughtexception;
v15 = new java.lang.Error;
specialinvoke v15.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("cannot locate the IP_MULTICAST_IF field", v14);
throw v15;
label15:
v16 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("IP_MULTICAST_LOOP");
v7 = virtualinvoke v16.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
label16:
goto label18;
label17:
v17 := @caughtexception;
v18 = new java.lang.Error;
specialinvoke v18.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("cannot locate the IP_MULTICAST_LOOP field", v17);
throw v18;
label18:
v19 = null;
label19:
v19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.nio.channels.NetworkChannel", 1, v0);
label20:
goto label22;
label21:
v20 := @caughtexception;
label22:
if v19 != null goto label23;
v8 = null;
v9 = null;
goto label29;
label23:
v21 = newarray (java.lang.Class)[1];
v21[0] = v1;
v8 = virtualinvoke v19.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getOption", v21);
label24:
goto label26;
label25:
v22 := @caughtexception;
v23 = new java.lang.Error;
specialinvoke v23.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("cannot locate the getOption() method", v22);
throw v23;
label26:
v24 = newarray (java.lang.Class)[2];
v24[0] = v1;
v24[1] = class "Ljava/lang/Object;";
v9 = virtualinvoke v19.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setOption", v24);
label27:
goto label29;
label28:
v25 := @caughtexception;
v26 = new java.lang.Error;
specialinvoke v26.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("cannot locate the setOption() method", v25);
throw v26;
label29:
<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_TTL> = v5;
<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_IF> = v6;
<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.Object IP_MULTICAST_LOOP> = v7;
<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.reflect.Method GET_OPTION> = v8;
<io.netty.channel.socket.nio.NioDatagramChannelConfig: java.lang.reflect.Method SET_OPTION> = v9;
return;
catch java.lang.Exception from label01 to label02 with label03;
catch java.lang.Exception from label05 to label06 with label07;
catch java.lang.Exception from label09 to label10 with label11;
catch java.lang.Exception from label12 to label13 with label14;
catch java.lang.Exception from label15 to label16 with label17;
catch java.lang.Throwable from label19 to label20 with label21;
catch java.lang.Exception from label23 to label24 with label25;
catch java.lang.Exception from label26 to label27 with label28;
}
}