final class io.netty.handler.codec.CodecOutputList extends java.util.AbstractList implements java.util.RandomAccess
{
private static final io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler NOOP_RECYCLER;
private static final io.netty.util.concurrent.FastThreadLocal CODEC_OUTPUT_LISTS_POOL;
private final io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler recycler;
private int size;
private java.lang.Object[] array;
private boolean insertSinceRecycled;
static io.netty.handler.codec.CodecOutputList newInstance()
{
java.lang.Object v1;
io.netty.handler.codec.CodecOutputList v2;
io.netty.util.concurrent.FastThreadLocal v0;
v0 = <io.netty.handler.codec.CodecOutputList: io.netty.util.concurrent.FastThreadLocal CODEC_OUTPUT_LISTS_POOL>;
v1 = virtualinvoke v0.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
v2 = virtualinvoke v1.<io.netty.handler.codec.CodecOutputList$CodecOutputLists: io.netty.handler.codec.CodecOutputList getOrCreate()>();
return v2;
}
private void <init>(io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler, int)
{
java.lang.Object[] v3;
io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler v1;
int v2;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler;
v2 := @parameter1: int;
specialinvoke v0.<java.util.AbstractList: void <init>()>();
v0.<io.netty.handler.codec.CodecOutputList: io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler recycler> = v1;
v3 = newarray (java.lang.Object)[v2];
v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array> = v3;
return;
}
public java.lang.Object get(int)
{
java.lang.Object[] v2;
int v1;
java.lang.Object v3;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void checkIndex(int)>(v1);
v2 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v3 = v2[v1];
return v3;
}
public int size()
{
int v1;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
return v1;
}
public boolean add(java.lang.Object)
{
java.lang.IndexOutOfBoundsException v3;
int v2, v4, v5, v6;
java.lang.Object v1;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: java.lang.Object;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "element");
label1:
v2 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void insert(int,java.lang.Object)>(v2, v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void expandArray()>();
v4 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void insert(int,java.lang.Object)>(v4, v1);
label4:
v5 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v6 = v5 + 1;
v0.<io.netty.handler.codec.CodecOutputList: int size> = v6;
return 1;
catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
}
public java.lang.Object set(int, java.lang.Object)
{
java.lang.Object[] v3;
int v1;
java.lang.Object v2, v4;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "element");
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void checkIndex(int)>(v1);
v3 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v4 = v3[v1];
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void insert(int,java.lang.Object)>(v1, v2);
return v4;
}
public void add(int, java.lang.Object)
{
java.lang.Object[] v4, v7, v8;
int v1, v10, v11, v12, v13, v3, v5, v6, v9;
java.lang.Object v2;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "element");
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void checkIndex(int)>(v1);
v3 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v4 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v5 = lengthof v4;
if v3 != v5 goto label1;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void expandArray()>();
label1:
v6 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
if v1 == v6 goto label2;
v7 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v8 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v9 = v1 + 1;
v10 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v11 = v10 - v1;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v7, v1, v8, v9, v11);
label2:
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void insert(int,java.lang.Object)>(v1, v2);
v12 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v13 = v12 + 1;
v0.<io.netty.handler.codec.CodecOutputList: int size> = v13;
return;
}
public java.lang.Object remove(int)
{
java.lang.Object[] v10, v2, v7, v9;
int v1, v11, v12, v4, v5, v6, v8;
java.lang.Object v3;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList: void checkIndex(int)>(v1);
v2 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v3 = v2[v1];
v4 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v5 = v4 - v1;
v6 = v5 - 1;
if v6 <= 0 goto label1;
v7 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v8 = v1 + 1;
v9 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v7, v8, v9, v1, v6);
label1:
v10 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v11 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v12 = v11 - 1;
v0.<io.netty.handler.codec.CodecOutputList: int size> = v12;
v10[v12] = null;
return v3;
}
public void clear()
{
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v0.<io.netty.handler.codec.CodecOutputList: int size> = 0;
return;
}
boolean insertSinceRecycled()
{
io.netty.handler.codec.CodecOutputList v0;
boolean v1;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 = v0.<io.netty.handler.codec.CodecOutputList: boolean insertSinceRecycled>;
return v1;
}
void recycle()
{
java.lang.Object[] v3;
io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler v4;
int v1, v2;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 = 0;
label1:
v2 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
if v1 >= v2 goto label2;
v3 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v3[v1] = null;
v1 = v1 + 1;
goto label1;
label2:
v0.<io.netty.handler.codec.CodecOutputList: int size> = 0;
v0.<io.netty.handler.codec.CodecOutputList: boolean insertSinceRecycled> = 0;
v4 = v0.<io.netty.handler.codec.CodecOutputList: io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler recycler>;
interfaceinvoke v4.<io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler: void recycle(io.netty.handler.codec.CodecOutputList)>(v0);
return;
}
java.lang.Object getUnsafe(int)
{
java.lang.Object[] v2;
int v1;
java.lang.Object v3;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v3 = v2[v1];
return v3;
}
private void checkIndex(int)
{
java.lang.IndexOutOfBoundsException v3;
int v1, v2, v4, v5;
java.lang.String v6;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
if v1 < v2 goto label1;
v3 = new java.lang.IndexOutOfBoundsException;
v4 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v5 = v0.<io.netty.handler.codec.CodecOutputList: int size>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected: index < (\u0001),but actual is (\u0001)");
specialinvoke v3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
return;
}
private void insert(int, java.lang.Object)
{
java.lang.Object[] v3;
int v1;
java.lang.Object v2;
io.netty.handler.codec.CodecOutputList v0;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v3[v1] = v2;
v0.<io.netty.handler.codec.CodecOutputList: boolean insertSinceRecycled> = 1;
return;
}
private void expandArray()
{
java.lang.Object[] v1, v5, v6, v7;
int v2, v3, v8;
io.netty.handler.codec.CodecOutputList v0;
java.lang.OutOfMemoryError v4;
v0 := @this: io.netty.handler.codec.CodecOutputList;
v1 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v2 = lengthof v1;
v3 = v2 << 1;
if v3 >= 0 goto label1;
v4 = new java.lang.OutOfMemoryError;
specialinvoke v4.<java.lang.OutOfMemoryError: void <init>()>();
throw v4;
label1:
v5 = newarray (java.lang.Object)[v3];
v6 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v7 = v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array>;
v8 = lengthof v7;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v6, 0, v5, 0, v8);
v0.<io.netty.handler.codec.CodecOutputList: java.lang.Object[] array> = v5;
return;
}
static void <clinit>()
{
io.netty.handler.codec.CodecOutputList$1 v0;
io.netty.handler.codec.CodecOutputList$2 v1;
v0 = new io.netty.handler.codec.CodecOutputList$1;
specialinvoke v0.<io.netty.handler.codec.CodecOutputList$1: void <init>()>();
<io.netty.handler.codec.CodecOutputList: io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler NOOP_RECYCLER> = v0;
v1 = new io.netty.handler.codec.CodecOutputList$2;
specialinvoke v1.<io.netty.handler.codec.CodecOutputList$2: void <init>()>();
<io.netty.handler.codec.CodecOutputList: io.netty.util.concurrent.FastThreadLocal CODEC_OUTPUT_LISTS_POOL> = v1;
return;
}
}