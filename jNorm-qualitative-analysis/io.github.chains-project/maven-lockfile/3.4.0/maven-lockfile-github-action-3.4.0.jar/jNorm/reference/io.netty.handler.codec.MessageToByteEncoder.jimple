public abstract class io.netty.handler.codec.MessageToByteEncoder extends io.netty.channel.ChannelOutboundHandlerAdapter
{
private final io.netty.util.internal.TypeParameterMatcher matcher;
private final boolean preferDirect;
protected void <init>()
{
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>(boolean)>(1);
return;
}
protected void <init>(java.lang.Class)
{
java.lang.Class v1;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>(java.lang.Class,boolean)>(v1, 1);
return;
}
protected void <init>(boolean)
{
io.netty.util.internal.TypeParameterMatcher v2;
boolean v1;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.channel.ChannelOutboundHandlerAdapter: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String)>(v0, class "Lio/netty/handler/codec/MessageToByteEncoder;", "I");
v0.<io.netty.handler.codec.MessageToByteEncoder: io.netty.util.internal.TypeParameterMatcher matcher> = v2;
v0.<io.netty.handler.codec.MessageToByteEncoder: boolean preferDirect> = v1;
return;
}
protected void <init>(java.lang.Class, boolean)
{
io.netty.util.internal.TypeParameterMatcher v3;
java.lang.Class v1;
boolean v2;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.channel.ChannelOutboundHandlerAdapter: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher get(java.lang.Class)>(v1);
v0.<io.netty.handler.codec.MessageToByteEncoder: io.netty.util.internal.TypeParameterMatcher matcher> = v3;
v0.<io.netty.handler.codec.MessageToByteEncoder: boolean preferDirect> = v2;
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.util.internal.TypeParameterMatcher v2;
java.lang.Object v1;
boolean v3;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.MessageToByteEncoder: io.netty.util.internal.TypeParameterMatcher matcher>;
v3 = virtualinvoke v2.<io.netty.util.internal.TypeParameterMatcher: boolean match(java.lang.Object)>(v1);
return v3;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
java.lang.Throwable v11, v7;
io.netty.handler.codec.EncoderException v10, v12;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v6, v9;
io.netty.channel.ChannelPromise v3;
java.lang.Object v2;
boolean v4, v5, v8;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
label01:
v4 = virtualinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: boolean acceptOutboundMessage(java.lang.Object)>(v2);
if v4 == 0 goto label07;
v5 = v0.<io.netty.handler.codec.MessageToByteEncoder: boolean preferDirect>;
v6 = virtualinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean)>(v1, v2, v5);
label02:
virtualinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf)>(v1, v2, v6);
label03:
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
goto label05;
label04:
v7 := @caughtexception;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
throw v7;
label05:
v8 = virtualinvoke v6.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v8 == 0 goto label06;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v6, v3);
goto label11;
label06:
virtualinvoke v6.<io.netty.buffer.ByteBuf: boolean release()>();
v9 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v9, v3);
goto label11;
label07:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
label08:
goto label11;
label09:
v10 := @caughtexception;
throw v10;
label10:
v11 := @caughtexception;
v12 = new io.netty.handler.codec.EncoderException;
specialinvoke v12.<io.netty.handler.codec.EncoderException: void <init>(java.lang.Throwable)>(v11);
throw v12;
label11:
return;
catch java.lang.Throwable from label02 to label03 with label04;
catch io.netty.handler.codec.EncoderException from label01 to label08 with label09;
catch java.lang.Throwable from label01 to label08 with label10;
}
protected io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext, java.lang.Object, boolean) throws java.lang.Exception
{
io.netty.buffer.ByteBufAllocator v4, v6;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v5, v7;
java.lang.Object v2;
boolean v3;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: boolean;
if v3 == 0 goto label1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v5 = interfaceinvoke v4.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf ioBuffer()>();
return v5;
label1:
v6 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v7 = interfaceinvoke v6.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer()>();
return v7;
}
protected abstract void encode(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.buffer.ByteBuf) throws java.lang.Exception;
protected boolean isPreferDirect()
{
boolean v1;
io.netty.handler.codec.MessageToByteEncoder v0;
v0 := @this: io.netty.handler.codec.MessageToByteEncoder;
v1 = v0.<io.netty.handler.codec.MessageToByteEncoder: boolean preferDirect>;
return v1;
}
}