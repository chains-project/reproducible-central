public abstract class io.netty.handler.codec.MessageToMessageCodec extends io.netty.channel.ChannelDuplexHandler
{
private final io.netty.handler.codec.MessageToMessageEncoder encoder;
private final io.netty.handler.codec.MessageToMessageDecoder decoder;
private final io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher;
private final io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher;
protected void <init>()
{
io.netty.util.internal.TypeParameterMatcher v3, v4;
io.netty.handler.codec.MessageToMessageCodec$2 v2;
io.netty.handler.codec.MessageToMessageCodec v0;
io.netty.handler.codec.MessageToMessageCodec$1 v1;
v0 := @this: io.netty.handler.codec.MessageToMessageCodec;
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void <init>()>();
v1 = new io.netty.handler.codec.MessageToMessageCodec$1;
specialinvoke v1.<io.netty.handler.codec.MessageToMessageCodec$1: void <init>(io.netty.handler.codec.MessageToMessageCodec)>(v0);
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.handler.codec.MessageToMessageEncoder encoder> = v1;
v2 = new io.netty.handler.codec.MessageToMessageCodec$2;
specialinvoke v2.<io.netty.handler.codec.MessageToMessageCodec$2: void <init>(io.netty.handler.codec.MessageToMessageCodec)>(v0);
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.handler.codec.MessageToMessageDecoder decoder> = v2;
v3 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String)>(v0, class "Lio/netty/handler/codec/MessageToMessageCodec;", "INBOUND_IN");
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher> = v3;
v4 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String)>(v0, class "Lio/netty/handler/codec/MessageToMessageCodec;", "OUTBOUND_IN");
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher> = v4;
return;
}
protected void <init>(java.lang.Class, java.lang.Class)
{
io.netty.util.internal.TypeParameterMatcher v5, v6;
java.lang.Class v1, v2;
io.netty.handler.codec.MessageToMessageCodec$2 v4;
io.netty.handler.codec.MessageToMessageCodec v0;
io.netty.handler.codec.MessageToMessageCodec$1 v3;
v0 := @this: io.netty.handler.codec.MessageToMessageCodec;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void <init>()>();
v3 = new io.netty.handler.codec.MessageToMessageCodec$1;
specialinvoke v3.<io.netty.handler.codec.MessageToMessageCodec$1: void <init>(io.netty.handler.codec.MessageToMessageCodec)>(v0);
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.handler.codec.MessageToMessageEncoder encoder> = v3;
v4 = new io.netty.handler.codec.MessageToMessageCodec$2;
specialinvoke v4.<io.netty.handler.codec.MessageToMessageCodec$2: void <init>(io.netty.handler.codec.MessageToMessageCodec)>(v0);
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.handler.codec.MessageToMessageDecoder decoder> = v4;
v5 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher get(java.lang.Class)>(v1);
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher> = v5;
v6 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher get(java.lang.Class)>(v2);
v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher> = v6;
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.MessageToMessageDecoder v3;
java.lang.Object v2;
io.netty.handler.codec.MessageToMessageCodec v0;
v0 := @this: io.netty.handler.codec.MessageToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.handler.codec.MessageToMessageDecoder decoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToMessageDecoder: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
io.netty.handler.codec.MessageToMessageEncoder v4;
java.lang.Object v2;
io.netty.handler.codec.MessageToMessageCodec v0;
v0 := @this: io.netty.handler.codec.MessageToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v4.<io.netty.handler.codec.MessageToMessageEncoder: void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)>(v1, v2, v3);
return;
}
public boolean acceptInboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.util.internal.TypeParameterMatcher v2;
java.lang.Object v1;
boolean v3;
io.netty.handler.codec.MessageToMessageCodec v0;
v0 := @this: io.netty.handler.codec.MessageToMessageCodec;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher>;
v3 = virtualinvoke v2.<io.netty.util.internal.TypeParameterMatcher: boolean match(java.lang.Object)>(v1);
return v3;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.util.internal.TypeParameterMatcher v2;
java.lang.Object v1;
boolean v3;
io.netty.handler.codec.MessageToMessageCodec v0;
v0 := @this: io.netty.handler.codec.MessageToMessageCodec;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.MessageToMessageCodec: io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher>;
v3 = virtualinvoke v2.<io.netty.util.internal.TypeParameterMatcher: boolean match(java.lang.Object)>(v1);
return v3;
}
protected abstract void encode(io.netty.channel.ChannelHandlerContext, java.lang.Object, java.util.List) throws java.lang.Exception;
protected abstract void decode(io.netty.channel.ChannelHandlerContext, java.lang.Object, java.util.List) throws java.lang.Exception;
}