class io.netty.handler.codec.compression.BrotliEncoder$Writer$1 extends java.lang.Object implements java.lang.Runnable
{
final io.netty.channel.ChannelPromise val$promise;
final io.netty.handler.codec.compression.BrotliEncoder$Writer this$0;
void <init>(io.netty.handler.codec.compression.BrotliEncoder$Writer, io.netty.channel.ChannelPromise)
{
io.netty.handler.codec.compression.BrotliEncoder$Writer v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.compression.BrotliEncoder$Writer$1 v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer$1;
v1 := @parameter0: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer$1: io.netty.handler.codec.compression.BrotliEncoder$Writer this$0> = v1;
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer$1: io.netty.channel.ChannelPromise val$promise> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.lang.IllegalStateException v5;
io.netty.channel.ChannelPromise v2, v4;
io.netty.handler.codec.compression.BrotliEncoder$Writer v1;
java.io.IOException v3;
io.netty.handler.codec.compression.BrotliEncoder$Writer$1 v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer$1;
label1:
v1 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer$1: io.netty.handler.codec.compression.BrotliEncoder$Writer this$0>;
v2 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer$1: io.netty.channel.ChannelPromise val$promise>;
virtualinvoke v1.<io.netty.handler.codec.compression.BrotliEncoder$Writer: void finish(io.netty.channel.ChannelPromise)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer$1: io.netty.channel.ChannelPromise val$promise>;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to finish encoding", v3);
interfaceinvoke v4.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v5);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
}