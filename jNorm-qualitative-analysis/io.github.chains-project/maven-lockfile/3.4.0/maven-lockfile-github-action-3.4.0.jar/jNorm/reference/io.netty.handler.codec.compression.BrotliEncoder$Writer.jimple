final class io.netty.handler.codec.compression.BrotliEncoder$Writer extends java.lang.Object implements java.nio.channels.WritableByteChannel
{
private io.netty.buffer.ByteBuf writableBuffer;
private final com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel brotliEncoderChannel;
private final io.netty.channel.ChannelHandlerContext ctx;
private boolean isClosed;
private void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters, io.netty.channel.ChannelHandlerContext) throws java.io.IOException
{
io.netty.channel.ChannelHandlerContext v2;
com.aayushatharva.brotli4j.encoder.Encoder$Parameters v1;
com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel v3;
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 := @parameter0: com.aayushatharva.brotli4j.encoder.Encoder$Parameters;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel;
specialinvoke v3.<com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel: void <init>(java.nio.channels.WritableByteChannel,com.aayushatharva.brotli4j.encoder.Encoder$Parameters)>(v0, v1);
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel brotliEncoderChannel> = v3;
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.channel.ChannelHandlerContext ctx> = v2;
return;
}
private void encode(io.netty.buffer.ByteBuf, boolean) throws java.lang.Exception
{
java.lang.Object[] v7;
com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel v3, v6;
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
java.lang.Exception v8;
java.nio.ByteBuffer v4;
io.netty.buffer.ByteBuf v1;
java.lang.reflect.Method v5;
boolean v2;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
label1:
specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: void allocate(boolean)>(v2);
v3 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel brotliEncoderChannel>;
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: java.nio.ByteBuffer nioBuffer()>();
virtualinvoke v3.<com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel: int write(java.nio.ByteBuffer)>(v4);
v5 = <io.netty.handler.codec.compression.BrotliEncoder: java.lang.reflect.Method FLUSH_METHOD>;
v6 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel brotliEncoderChannel>;
v7 = newarray (java.lang.Object)[0];
virtualinvoke v5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v6, v7);
label2:
goto label4;
label3:
v8 := @caughtexception;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v1);
throw v8;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private void allocate(boolean)
{
io.netty.buffer.ByteBufAllocator v3, v6;
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
io.netty.channel.ChannelHandlerContext v2, v5;
io.netty.buffer.ByteBuf v4, v7;
boolean v1;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.channel.ChannelHandlerContext ctx>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v4 = interfaceinvoke v3.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf ioBuffer()>();
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.buffer.ByteBuf writableBuffer> = v4;
goto label2;
label1:
v5 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.channel.ChannelHandlerContext ctx>;
v6 = interfaceinvoke v5.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v7 = interfaceinvoke v6.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer()>();
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.buffer.ByteBuf writableBuffer> = v7;
label2:
return;
}
public int write(java.nio.ByteBuffer) throws java.io.IOException
{
io.netty.buffer.ByteBuf v4, v5;
java.nio.channels.ClosedChannelException v3;
int v6;
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
java.nio.ByteBuffer v1;
boolean v2;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 := @parameter0: java.nio.ByteBuffer;
v2 = virtualinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: boolean isOpen()>();
if v2 != 0 goto label1;
v3 = new java.nio.channels.ClosedChannelException;
specialinvoke v3.<java.nio.channels.ClosedChannelException: void <init>()>();
throw v3;
label1:
v4 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.buffer.ByteBuf writableBuffer>;
v5 = virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer)>(v1);
v6 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
return v6;
}
public boolean isOpen()
{
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
boolean v1, v2;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: boolean isClosed>;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public void close()
{
io.netty.util.concurrent.EventExecutor v4;
io.netty.channel.ChannelHandlerContext v1, v3;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
io.netty.handler.codec.compression.BrotliEncoder$Writer$1 v5;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.channel.ChannelHandlerContext ctx>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v3 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.channel.ChannelHandlerContext ctx>;
v4 = interfaceinvoke v3.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v5 = new io.netty.handler.codec.compression.BrotliEncoder$Writer$1;
specialinvoke v5.<io.netty.handler.codec.compression.BrotliEncoder$Writer$1: void <init>(io.netty.handler.codec.compression.BrotliEncoder$Writer,io.netty.channel.ChannelPromise)>(v0, v2);
interfaceinvoke v4.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v5);
return;
}
public void finish(io.netty.channel.ChannelPromise) throws java.io.IOException
{
com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel v3;
io.netty.handler.codec.compression.BrotliEncoder$Writer v0;
java.lang.Exception v4;
io.netty.channel.ChannelHandlerContext v6;
io.netty.buffer.ByteBuf v5, v7;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder$Writer;
v1 := @parameter0: io.netty.channel.ChannelPromise;
v2 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: boolean isClosed>;
if v2 != 0 goto label5;
specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: void allocate(boolean)>(1);
label1:
v3 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel brotliEncoderChannel>;
virtualinvoke v3.<com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel: void close()>();
v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: boolean isClosed> = 1;
label2:
goto label4;
label3:
v4 := @caughtexception;
interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v4);
v5 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.buffer.ByteBuf writableBuffer>;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v5);
return;
label4:
v6 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.channel.ChannelHandlerContext ctx>;
v7 = v0.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.buffer.ByteBuf writableBuffer>;
interfaceinvoke v6.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)>(v7, v1);
label5:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
}