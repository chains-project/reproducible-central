final class io.netty.handler.codec.compression.Crc32 extends java.lang.Object
{
private static final int[] crc32Table;
private int crc;
void <init>()
{
int v1;
io.netty.handler.codec.compression.Crc32 v0;
v0 := @this: io.netty.handler.codec.compression.Crc32;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = (int) -1;
v0.<io.netty.handler.codec.compression.Crc32: int crc> = v1;
return;
}
public int getCRC()
{
io.netty.handler.codec.compression.Crc32 v0;
int v1, v2, v3;
v0 := @this: io.netty.handler.codec.compression.Crc32;
v1 = v0.<io.netty.handler.codec.compression.Crc32: int crc>;
v2 = (int) -1;
v3 = v1 ^ v2;
return v3;
}
public void updateCRC(int)
{
io.netty.handler.codec.compression.Crc32 v0;
int[] v4;
int v1, v2, v3, v5, v6, v7, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Crc32;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.compression.Crc32: int crc>;
v3 = v2 << 8;
v4 = <io.netty.handler.codec.compression.Crc32: int[] crc32Table>;
v5 = v2 >> 24;
v6 = v5 ^ v1;
v7 = v6 & 255;
v8 = v4[v7];
v9 = v3 ^ v8;
v0.<io.netty.handler.codec.compression.Crc32: int crc> = v9;
return;
}
public void updateCRC(int, int)
{
io.netty.handler.codec.compression.Crc32 v0;
int v1, v2, v3;
v0 := @this: io.netty.handler.codec.compression.Crc32;
v1 := @parameter0: int;
v2 := @parameter1: int;
label1:
v3 = v2;
v2 = v2 - 1;
if v3 <= 0 goto label2;
virtualinvoke v0.<io.netty.handler.codec.compression.Crc32: void updateCRC(int)>(v1);
goto label1;
label2:
return;
}
static void <clinit>()
{
int[] v0;
v0 = newarray (int)[256];
v0[0] = 0;
v0[1] = 79764919;
v0[2] = 159529838;
v0[3] = 222504665;
v0[4] = 319059676;
v0[5] = 398814059;
v0[6] = 445009330;
v0[7] = 507990021;
v0[8] = 638119352;
v0[9] = 583659535;
v0[10] = 797628118;
v0[11] = 726387553;
v0[12] = 890018660;
v0[13] = 835552979;
v0[14] = 1015980042;
v0[15] = 944750013;
v0[16] = 1276238704;
v0[17] = 1221641927;
v0[18] = 1167319070;
v0[19] = 1095957929;
v0[20] = 1595256236;
v0[21] = 1540665371;
v0[22] = 1452775106;
v0[23] = 1381403509;
v0[24] = 1780037320;
v0[25] = 1859660671;
v0[26] = 1671105958;
v0[27] = 1733955601;
v0[28] = 2031960084;
v0[29] = 2111593891;
v0[30] = 1889500026;
v0[31] = 1952343757;
v0[32] = -1742489888;
v0[33] = -1662866601;
v0[34] = -1851683442;
v0[35] = -1788833735;
v0[36] = -1960329156;
v0[37] = -1880695413;
v0[38] = -2103051438;
v0[39] = -2040207643;
v0[40] = -1104454824;
v0[41] = -1159051537;
v0[42] = -1213636554;
v0[43] = -1284997759;
v0[44] = -1389417084;
v0[45] = -1444007885;
v0[46] = -1532160278;
v0[47] = -1603531939;
v0[48] = -734892656;
v0[49] = -789352409;
v0[50] = -575645954;
v0[51] = -646886583;
v0[52] = -952755380;
v0[53] = -1007220997;
v0[54] = -827056094;
v0[55] = -898286187;
v0[56] = -231047128;
v0[57] = -151282273;
v0[58] = -71779514;
v0[59] = -8804623;
v0[60] = -515967244;
v0[61] = -436212925;
v0[62] = -390279782;
v0[63] = -327299027;
v0[64] = 881225847;
v0[65] = 809987520;
v0[66] = 1023691545;
v0[67] = 969234094;
v0[68] = 662832811;
v0[69] = 591600412;
v0[70] = 771767749;
v0[71] = 717299826;
v0[72] = 311336399;
v0[73] = 374308984;
v0[74] = 453813921;
v0[75] = 533576470;
v0[76] = 25881363;
v0[77] = 88864420;
v0[78] = 134795389;
v0[79] = 214552010;
v0[80] = 2023205639;
v0[81] = 2086057648;
v0[82] = 1897238633;
v0[83] = 1976864222;
v0[84] = 1804852699;
v0[85] = 1867694188;
v0[86] = 1645340341;
v0[87] = 1724971778;
v0[88] = 1587496639;
v0[89] = 1516133128;
v0[90] = 1461550545;
v0[91] = 1406951526;
v0[92] = 1302016099;
v0[93] = 1230646740;
v0[94] = 1142491917;
v0[95] = 1087903418;
v0[96] = -1398421865;
v0[97] = -1469785312;
v0[98] = -1524105735;
v0[99] = -1578704818;
v0[100] = -1079922613;
v0[101] = -1151291908;
v0[102] = -1239184603;
v0[103] = -1293773166;
v0[104] = -1968362705;
v0[105] = -1905510760;
v0[106] = -2094067647;
v0[107] = -2014441994;
v0[108] = -1716953613;
v0[109] = -1654112188;
v0[110] = -1876203875;
v0[111] = -1796572374;
v0[112] = -525066777;
v0[113] = -462094256;
v0[114] = -382327159;
v0[115] = -302564546;
v0[116] = -206542021;
v0[117] = -143559028;
v0[118] = -97365931;
v0[119] = -17609246;
v0[120] = -960696225;
v0[121] = -1031934488;
v0[122] = -817968335;
v0[123] = -872425850;
v0[124] = -709327229;
v0[125] = -780559564;
v0[126] = -600130067;
v0[127] = -654598054;
v0[128] = 1762451694;
v0[129] = 1842216281;
v0[130] = 1619975040;
v0[131] = 1682949687;
v0[132] = 2047383090;
v0[133] = 2127137669;
v0[134] = 1938468188;
v0[135] = 2001449195;
v0[136] = 1325665622;
v0[137] = 1271206113;
v0[138] = 1183200824;
v0[139] = 1111960463;
v0[140] = 1543535498;
v0[141] = 1489069629;
v0[142] = 1434599652;
v0[143] = 1363369299;
v0[144] = 622672798;
v0[145] = 568075817;
v0[146] = 748617968;
v0[147] = 677256519;
v0[148] = 907627842;
v0[149] = 853037301;
v0[150] = 1067152940;
v0[151] = 995781531;
v0[152] = 51762726;
v0[153] = 131386257;
v0[154] = 177728840;
v0[155] = 240578815;
v0[156] = 269590778;
v0[157] = 349224269;
v0[158] = 429104020;
v0[159] = 491947555;
v0[160] = -248556018;
v0[161] = -168932423;
v0[162] = -122852000;
v0[163] = -60002089;
v0[164] = -500490030;
v0[165] = -420856475;
v0[166] = -341238852;
v0[167] = -278395381;
v0[168] = -685261898;
v0[169] = -739858943;
v0[170] = -559578920;
v0[171] = -630940305;
v0[172] = -1004286614;
v0[173] = -1058877219;
v0[174] = -845023740;
v0[175] = -916395085;
v0[176] = -1119974018;
v0[177] = -1174433591;
v0[178] = -1262701040;
v0[179] = -1333941337;
v0[180] = -1371866206;
v0[181] = -1426332139;
v0[182] = -1481064244;
v0[183] = -1552294533;
v0[184] = -1690935098;
v0[185] = -1611170447;
v0[186] = -1833673816;
v0[187] = -1770699233;
v0[188] = -2009983462;
v0[189] = -1930228819;
v0[190] = -2119160460;
v0[191] = -2056179517;
v0[192] = 1569362073;
v0[193] = 1498123566;
v0[194] = 1409854455;
v0[195] = 1355396672;
v0[196] = 1317987909;
v0[197] = 1246755826;
v0[198] = 1192025387;
v0[199] = 1137557660;
v0[200] = 2072149281;
v0[201] = 2135122070;
v0[202] = 1912620623;
v0[203] = 1992383480;
v0[204] = 1753615357;
v0[205] = 1816598090;
v0[206] = 1627664531;
v0[207] = 1707420964;
v0[208] = 295390185;
v0[209] = 358241886;
v0[210] = 404320391;
v0[211] = 483945776;
v0[212] = 43990325;
v0[213] = 106832002;
v0[214] = 186451547;
v0[215] = 266083308;
v0[216] = 932423249;
v0[217] = 861060070;
v0[218] = 1041341759;
v0[219] = 986742920;
v0[220] = 613929101;
v0[221] = 542559546;
v0[222] = 756411363;
v0[223] = 701822548;
v0[224] = -978770311;
v0[225] = -1050133554;
v0[226] = -869589737;
v0[227] = -924188512;
v0[228] = -693284699;
v0[229] = -764654318;
v0[230] = -550540341;
v0[231] = -605129092;
v0[232] = -475935807;
v0[233] = -413084042;
v0[234] = -366743377;
v0[235] = -287118056;
v0[236] = -257573603;
v0[237] = -194731862;
v0[238] = -114850189;
v0[239] = -35218492;
v0[240] = -1984365303;
v0[241] = -1921392450;
v0[242] = -2143631769;
v0[243] = -2063868976;
v0[244] = -1698919467;
v0[245] = -1635936670;
v0[246] = -1824608069;
v0[247] = -1744851700;
v0[248] = -1347415887;
v0[249] = -1418654458;
v0[250] = -1506661409;
v0[251] = -1561119128;
v0[252] = -1129027987;
v0[253] = -1200260134;
v0[254] = -1254728445;
v0[255] = -1309196108;
<io.netty.handler.codec.compression.Crc32: int[] crc32Table> = v0;
return;
}
}