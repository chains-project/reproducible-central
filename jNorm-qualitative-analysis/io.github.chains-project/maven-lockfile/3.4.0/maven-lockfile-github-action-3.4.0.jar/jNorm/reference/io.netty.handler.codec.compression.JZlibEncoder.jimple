public class io.netty.handler.codec.compression.JZlibEncoder extends io.netty.handler.codec.compression.ZlibEncoder
{
private final int wrapperOverhead;
private final com.jcraft.jzlib.Deflater z;
private volatile boolean finished;
private volatile io.netty.channel.ChannelHandlerContext ctx;
private static final int THREAD_POOL_DELAY_SECONDS;
public void <init>()
{
io.netty.handler.codec.compression.JZlibEncoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(int)>(6);
return;
}
public void <init>(int)
{
int v1;
io.netty.handler.codec.compression.JZlibEncoder v0;
io.netty.handler.codec.compression.ZlibWrapper v2;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: int;
v2 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v2, v1);
return;
}
public void <init>(io.netty.handler.codec.compression.ZlibWrapper)
{
io.netty.handler.codec.compression.JZlibEncoder v0;
io.netty.handler.codec.compression.ZlibWrapper v1;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v1, 6);
return;
}
public void <init>(io.netty.handler.codec.compression.ZlibWrapper, int)
{
int v2;
io.netty.handler.codec.compression.JZlibEncoder v0;
io.netty.handler.codec.compression.ZlibWrapper v1;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int,int,int)>(v1, v2, 15, 8);
return;
}
public void <init>(io.netty.handler.codec.compression.ZlibWrapper, int, int, int)
{
com.jcraft.jzlib.Deflater v10, v13, v5;
com.jcraft.jzlib.JZlib$WrapperType v11;
io.netty.handler.codec.compression.ZlibWrapper v1, v6, v8;
java.lang.IllegalArgumentException v7;
int v12, v14, v2, v3, v4;
io.netty.handler.codec.compression.JZlibEncoder v0;
java.lang.String v9;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.handler.codec.compression.ZlibEncoder: void <init>()>();
v5 = new com.jcraft.jzlib.Deflater;
specialinvoke v5.<com.jcraft.jzlib.Deflater: void <init>()>();
v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z> = v5;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v2, 0, 9, "compressionLevel");
staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v3, 9, 15, "windowBits");
staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v4, 1, 9, "memLevel");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "wrapper");
v6 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE>;
if v1 != v6 goto label1;
v7 = new java.lang.IllegalArgumentException;
v8 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE>;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.compression.ZlibWrapper)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("wrapper \'\u0001\' is not allowed for compression.");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v7;
label1:
v10 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v11 = staticinvoke <io.netty.handler.codec.compression.ZlibUtil: com.jcraft.jzlib.JZlib$WrapperType convertWrapperType(io.netty.handler.codec.compression.ZlibWrapper)>(v1);
v12 = virtualinvoke v10.<com.jcraft.jzlib.Deflater: int init(int,int,int,com.jcraft.jzlib.JZlib$WrapperType)>(v2, v3, v4, v11);
if v12 == 0 goto label2;
v13 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Deflater,java.lang.String,int)>(v13, "initialization failure", v12);
label2:
v14 = staticinvoke <io.netty.handler.codec.compression.ZlibUtil: int wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper)>(v1);
v0.<io.netty.handler.codec.compression.JZlibEncoder: int wrapperOverhead> = v14;
return;
}
public void <init>(byte[])
{
byte[] v1;
io.netty.handler.codec.compression.JZlibEncoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: byte[];
specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(int,byte[])>(6, v1);
return;
}
public void <init>(int, byte[])
{
int v1;
byte[] v2;
io.netty.handler.codec.compression.JZlibEncoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: int;
v2 := @parameter1: byte[];
specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(int,int,int,byte[])>(v1, 15, 8, v2);
return;
}
public void <init>(int, int, int, byte[])
{
byte[] v4;
com.jcraft.jzlib.JZlib$WrapperType v7;
int v1, v11, v12, v15, v2, v3, v8;
io.netty.handler.codec.compression.JZlibEncoder v0;
com.jcraft.jzlib.Deflater v10, v13, v5, v6, v9;
io.netty.handler.codec.compression.ZlibWrapper v14;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: byte[];
specialinvoke v0.<io.netty.handler.codec.compression.ZlibEncoder: void <init>()>();
v5 = new com.jcraft.jzlib.Deflater;
specialinvoke v5.<com.jcraft.jzlib.Deflater: void <init>()>();
v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z> = v5;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v1, 0, 9, "compressionLevel");
staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v2, 9, 15, "windowBits");
staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v3, 1, 9, "memLevel");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v4, "dictionary");
v6 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v7 = <com.jcraft.jzlib.JZlib: com.jcraft.jzlib.JZlib$WrapperType W_ZLIB>;
v8 = virtualinvoke v6.<com.jcraft.jzlib.Deflater: int deflateInit(int,int,int,com.jcraft.jzlib.JZlib$WrapperType)>(v1, v2, v3, v7);
if v8 == 0 goto label1;
v9 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Deflater,java.lang.String,int)>(v9, "initialization failure", v8);
goto label2;
label1:
v10 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v11 = lengthof v4;
v12 = virtualinvoke v10.<com.jcraft.jzlib.Deflater: int deflateSetDictionary(byte[],int)>(v4, v11);
if v12 == 0 goto label2;
v13 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Deflater,java.lang.String,int)>(v13, "failed to set the dictionary", v12);
label2:
v14 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
v15 = staticinvoke <io.netty.handler.codec.compression.ZlibUtil: int wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper)>(v14);
v0.<io.netty.handler.codec.compression.JZlibEncoder: int wrapperOverhead> = v15;
return;
}
public io.netty.channel.ChannelFuture close()
{
io.netty.channel.Channel v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
io.netty.handler.codec.compression.JZlibEncoder v0;
io.netty.channel.ChannelFuture v4;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 = specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelHandlerContext ctx()>();
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v3 = interfaceinvoke v2.<io.netty.channel.Channel: io.netty.channel.ChannelPromise newPromise()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v3);
return v4;
}
public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)
{
io.netty.util.concurrent.EventExecutor v3;
io.netty.handler.codec.compression.JZlibEncoder$1 v7;
io.netty.channel.ChannelFuture v5;
io.netty.channel.ChannelHandlerContext v2;
io.netty.channel.ChannelPromise v1, v6;
io.netty.handler.codec.compression.JZlibEncoder v0;
boolean v4;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.channel.ChannelPromise;
v2 = specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelHandlerContext ctx()>();
v3 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v4 = interfaceinvoke v3.<io.netty.util.concurrent.EventExecutor: boolean inEventLoop()>();
if v4 == 0 goto label1;
v5 = specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v2, v1);
return v5;
label1:
v6 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v7 = new io.netty.handler.codec.compression.JZlibEncoder$1;
specialinvoke v7.<io.netty.handler.codec.compression.JZlibEncoder$1: void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.channel.ChannelPromise,io.netty.channel.ChannelPromise)>(v0, v6, v1);
interfaceinvoke v3.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v7);
return v6;
}
private io.netty.channel.ChannelHandlerContext ctx()
{
io.netty.channel.ChannelHandlerContext v1;
java.lang.IllegalStateException v2;
io.netty.handler.codec.compression.JZlibEncoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 = v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelHandlerContext ctx>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not added to a pipeline");
throw v2;
label1:
return v1;
}
public boolean isClosed()
{
io.netty.handler.codec.compression.JZlibEncoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 = v0.<io.netty.handler.codec.compression.JZlibEncoder: boolean finished>;
return v1;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
byte[] v14, v27, v9;
io.netty.handler.codec.compression.JZlibEncoder v0;
boolean v4, v6;
com.jcraft.jzlib.Deflater v10, v16, v17, v18, v25, v26, v28, v32, v34, v36, v40, v43, v44, v49, v50, v52, v53, v7, v8;
java.lang.Throwable v39, v51;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v3;
int v11, v12, v13, v15, v19, v22, v23, v24, v29, v30, v31, v33, v35, v37, v38, v41, v42, v45, v46, v47, v48, v5;
double v20, v21;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.netty.handler.codec.compression.JZlibEncoder: boolean finished>;
if v4 == 0 goto label01;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v2);
return;
label01:
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v5 != 0 goto label02;
return;
label02:
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean hasArray()>();
v7 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v7.<com.jcraft.jzlib.Deflater: int avail_in> = v5;
if v6 == 0 goto label03;
v8 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v9 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte[] array()>();
v8.<com.jcraft.jzlib.Deflater: byte[] next_in> = v9;
v10 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v11 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v12 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v13 = v11 + v12;
v10.<com.jcraft.jzlib.Deflater: int next_in_index> = v13;
goto label04;
label03:
v14 = newarray (byte)[v5];
v15 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf getBytes(int,byte[])>(v15, v14);
v16 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v16.<com.jcraft.jzlib.Deflater: byte[] next_in> = v14;
v17 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v17.<com.jcraft.jzlib.Deflater: int next_in_index> = 0;
label04:
v18 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v19 = v18.<com.jcraft.jzlib.Deflater: int next_in_index>;
v20 = v5 * 1.001;
v21 = staticinvoke <java.lang.Math: double ceil(double)>(v20);
v22 = v21 + 12;
v23 = v0.<io.netty.handler.codec.compression.JZlibEncoder: int wrapperOverhead>;
v24 = v22 + v23;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf ensureWritable(int)>(v24);
v25 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v25.<com.jcraft.jzlib.Deflater: int avail_out> = v24;
v26 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v27 = virtualinvoke v3.<io.netty.buffer.ByteBuf: byte[] array()>();
v26.<com.jcraft.jzlib.Deflater: byte[] next_out> = v27;
v28 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v29 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v30 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int writerIndex()>();
v31 = v29 + v30;
v28.<com.jcraft.jzlib.Deflater: int next_out_index> = v31;
v32 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v33 = v32.<com.jcraft.jzlib.Deflater: int next_out_index>;
label05:
v34 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v35 = virtualinvoke v34.<com.jcraft.jzlib.Deflater: int deflate(int)>(2);
label06:
v36 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v37 = v36.<com.jcraft.jzlib.Deflater: int next_in_index>;
v38 = v37 - v19;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v38);
goto label08;
label07:
v39 := @caughtexception;
v40 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v41 = v40.<com.jcraft.jzlib.Deflater: int next_in_index>;
v42 = v41 - v19;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v42);
throw v39;
label08:
if v35 == 0 goto label09;
v43 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Deflater,java.lang.String,int)>(v43, "compression failure", v35);
label09:
v44 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v45 = v44.<com.jcraft.jzlib.Deflater: int next_out_index>;
v46 = v45 - v33;
if v46 <= 0 goto label10;
v47 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int writerIndex()>();
v48 = v47 + v46;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writerIndex(int)>(v48);
label10:
v49 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v49.<com.jcraft.jzlib.Deflater: byte[] next_in> = null;
v50 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v50.<com.jcraft.jzlib.Deflater: byte[] next_out> = null;
goto label12;
label11:
v51 := @caughtexception;
v52 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v52.<com.jcraft.jzlib.Deflater: byte[] next_in> = null;
v53 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v53.<com.jcraft.jzlib.Deflater: byte[] next_out> = null;
throw v51;
label12:
return;
catch java.lang.Throwable from label05 to label06 with label07;
catch java.lang.Throwable from label02 to label10 with label11;
}
public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.util.concurrent.EventExecutor v6;
io.netty.util.concurrent.ScheduledFuture v9;
io.netty.handler.codec.compression.JZlibEncoder$3 v10;
io.netty.handler.codec.compression.JZlibEncoder$2 v7;
io.netty.channel.ChannelFuture v4;
java.util.concurrent.TimeUnit v8;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2, v3;
io.netty.handler.codec.compression.JZlibEncoder v0;
boolean v5;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v4 = specialinvoke v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v3);
v5 = interfaceinvoke v4.<io.netty.channel.ChannelFuture: boolean isDone()>();
if v5 != 0 goto label1;
v6 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v7 = new io.netty.handler.codec.compression.JZlibEncoder$2;
specialinvoke v7.<io.netty.handler.codec.compression.JZlibEncoder$2: void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.channel.ChannelPromise,io.netty.channel.ChannelHandlerContext)>(v0, v2, v1);
v8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
v9 = interfaceinvoke v6.<io.netty.util.concurrent.EventExecutor: io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(v7, 10L, v8);
v10 = new io.netty.handler.codec.compression.JZlibEncoder$3;
specialinvoke v10.<io.netty.handler.codec.compression.JZlibEncoder$3: void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.util.concurrent.Future,io.netty.channel.ChannelPromise,io.netty.channel.ChannelHandlerContext)>(v0, v9, v2, v1);
interfaceinvoke v4.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v10);
goto label2;
label1:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v2);
label2:
return;
}
private io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
byte[] v5, v8;
io.netty.handler.codec.compression.CompressionException v16;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.compression.JZlibEncoder v0;
boolean v3;
com.jcraft.jzlib.Deflater v10, v11, v13, v15, v17, v18, v19, v20, v22, v25, v26, v27, v29, v30, v31, v4, v6, v7, v9;
java.lang.Throwable v28;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v24;
int v12, v14, v21, v23;
io.netty.channel.ChannelFuture v32;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.compression.JZlibEncoder: boolean finished>;
if v3 == 0 goto label1;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
return v2;
label1:
v0.<io.netty.handler.codec.compression.JZlibEncoder: boolean finished> = 1;
label2:
v4 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v5 = <io.netty.util.internal.EmptyArrays: byte[] EMPTY_BYTES>;
v4.<com.jcraft.jzlib.Deflater: byte[] next_in> = v5;
v6 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v6.<com.jcraft.jzlib.Deflater: int next_in_index> = 0;
v7 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v7.<com.jcraft.jzlib.Deflater: int avail_in> = 0;
v8 = newarray (byte)[32];
v9 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v9.<com.jcraft.jzlib.Deflater: byte[] next_out> = v8;
v10 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v10.<com.jcraft.jzlib.Deflater: int next_out_index> = 0;
v11 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v12 = lengthof v8;
v11.<com.jcraft.jzlib.Deflater: int avail_out> = v12;
v13 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v14 = virtualinvoke v13.<com.jcraft.jzlib.Deflater: int deflate(int)>(4);
if v14 == 0 goto label4;
if v14 == 1 goto label4;
v15 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v16 = staticinvoke <io.netty.handler.codec.compression.ZlibUtil: io.netty.handler.codec.compression.CompressionException deflaterException(com.jcraft.jzlib.Deflater,java.lang.String,int)>(v15, "compression failure", v14);
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v16);
label3:
v17 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
virtualinvoke v17.<com.jcraft.jzlib.Deflater: int deflateEnd()>();
v18 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v18.<com.jcraft.jzlib.Deflater: byte[] next_in> = null;
v19 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v19.<com.jcraft.jzlib.Deflater: byte[] next_out> = null;
return v2;
label4:
v20 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v21 = v20.<com.jcraft.jzlib.Deflater: int next_out_index>;
if v21 == 0 goto label5;
v22 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v23 = v22.<com.jcraft.jzlib.Deflater: int next_out_index>;
v24 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[],int,int)>(v8, 0, v23);
goto label6;
label5:
v24 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
label6:
v25 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
virtualinvoke v25.<com.jcraft.jzlib.Deflater: int deflateEnd()>();
v26 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v26.<com.jcraft.jzlib.Deflater: byte[] next_in> = null;
v27 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v27.<com.jcraft.jzlib.Deflater: byte[] next_out> = null;
goto label8;
label7:
v28 := @caughtexception;
v29 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
virtualinvoke v29.<com.jcraft.jzlib.Deflater: int deflateEnd()>();
v30 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v30.<com.jcraft.jzlib.Deflater: byte[] next_in> = null;
v31 = v0.<io.netty.handler.codec.compression.JZlibEncoder: com.jcraft.jzlib.Deflater z>;
v31.<com.jcraft.jzlib.Deflater: byte[] next_out> = null;
throw v28;
label8:
v32 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)>(v24, v2);
return v32;
catch java.lang.Throwable from label2 to label3 with label7;
catch java.lang.Throwable from label4 to label6 with label7;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.compression.JZlibEncoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.compression.JZlibEncoder: io.netty.channel.ChannelHandlerContext ctx> = v1;
return;
}
}