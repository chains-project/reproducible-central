public class io.netty.handler.codec.compression.LzmaFrameEncoder extends io.netty.handler.codec.MessageToByteEncoder
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final int MEDIUM_DICTIONARY_SIZE;
private static final int MIN_FAST_BYTES;
private static final int MEDIUM_FAST_BYTES;
private static final int MAX_FAST_BYTES;
private static final int DEFAULT_MATCH_FINDER;
private static final int DEFAULT_LC;
private static final int DEFAULT_LP;
private static final int DEFAULT_PB;
private final lzma.sdk.lzma.Encoder encoder;
private final byte properties;
private final int littleEndianDictionarySize;
private static boolean warningLogged;
public void <init>()
{
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
specialinvoke v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: void <init>(int)>(65536);
return;
}
public void <init>(int, int, int)
{
int v1, v2, v3;
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: void <init>(int,int,int,int)>(v1, v2, v3, 65536);
return;
}
public void <init>(int)
{
int v1;
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: void <init>(int,int,int,int)>(3, 0, 2, v1);
return;
}
public void <init>(int, int, int, int)
{
int v1, v2, v3, v4;
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: void <init>(int,int,int,int,boolean,int)>(v1, v2, v3, v4, 0, 32);
return;
}
public void <init>(int, int, int, int, boolean, int)
{
java.lang.Integer v20, v21, v22;
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
boolean v14, v5;
io.netty.util.internal.logging.InternalLogger v15;
java.lang.Object[] v19;
lzma.sdk.lzma.Encoder v24, v25, v26, v27, v28, v29;
int v1, v13, v2, v3, v30, v31, v32, v33, v34, v4, v6;
java.lang.String v10, v12, v17, v23, v8;
java.lang.IllegalArgumentException v11, v16, v18, v7, v9;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: int;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>()>();
if v1 < 0 goto label01;
if v1 <= 8 goto label02;
label01:
v7 = new java.lang.IllegalArgumentException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("lc: \u0001 (expected: 0-8)");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v7;
label02:
if v2 < 0 goto label03;
if v2 <= 4 goto label04;
label03:
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("lp: \u0001 (expected: 0-4)");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
label04:
if v3 < 0 goto label05;
if v3 <= 4 goto label06;
label05:
v11 = new java.lang.IllegalArgumentException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("pb: \u0001 (expected: 0-4)");
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v11;
label06:
v13 = v1 + v2;
if v13 <= 4 goto label07;
v14 = <io.netty.handler.codec.compression.LzmaFrameEncoder: boolean warningLogged>;
if v14 != 0 goto label07;
v15 = <io.netty.handler.codec.compression.LzmaFrameEncoder: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v15.<io.netty.util.internal.logging.InternalLogger: void warn(java.lang.String)>("The latest versions of LZMA libraries (for example, XZ Utils) has an additional requirement: lc + lp <= 4. Data which don\'t follow this requirement cannot be decompressed with this libraries.");
<io.netty.handler.codec.compression.LzmaFrameEncoder: boolean warningLogged> = 1;
label07:
if v4 >= 0 goto label08;
v16 = new java.lang.IllegalArgumentException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("dictionarySize: \u0001 (expected: 0+)");
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v16;
label08:
if v6 < 5 goto label09;
if v6 <= 273 goto label10;
label09:
v18 = new java.lang.IllegalArgumentException;
v19 = newarray (java.lang.Object)[3];
v20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
v19[0] = v20;
v21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
v19[1] = v21;
v22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(273);
v19[2] = v22;
v23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("numFastBytes: %d (expected: %d-%d)", v19);
specialinvoke v18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v23);
throw v18;
label10:
v24 = new lzma.sdk.lzma.Encoder;
specialinvoke v24.<lzma.sdk.lzma.Encoder: void <init>()>();
v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder> = v24;
v25 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder>;
virtualinvoke v25.<lzma.sdk.lzma.Encoder: boolean setDictionarySize(int)>(v4);
v26 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder>;
virtualinvoke v26.<lzma.sdk.lzma.Encoder: void setEndMarkerMode(boolean)>(v5);
v27 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder>;
virtualinvoke v27.<lzma.sdk.lzma.Encoder: boolean setMatchFinder(int)>(1);
v28 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder>;
virtualinvoke v28.<lzma.sdk.lzma.Encoder: boolean setNumFastBytes(int)>(v6);
v29 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder>;
virtualinvoke v29.<lzma.sdk.lzma.Encoder: boolean setLcLpPb(int,int,int)>(v1, v2, v3);
v30 = v3 * 5;
v31 = v30 + v2;
v32 = v31 * 9;
v33 = v32 + v1;
v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: byte properties> = v33;
v34 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(v4);
v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: int littleEndianDictionarySize> = v34;
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
java.lang.Throwable v13;
long v11;
lzma.sdk.lzma.Encoder v12;
io.netty.buffer.ByteBufOutputStream v6, v8;
io.netty.channel.ChannelHandlerContext v1;
byte v9;
io.netty.buffer.ByteBuf v2, v3;
int v10, v4;
io.netty.buffer.ByteBufInputStream v5, v7;
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v5 = null;
v6 = null;
label1:
v7 = new io.netty.buffer.ByteBufInputStream;
specialinvoke v7.<io.netty.buffer.ByteBufInputStream: void <init>(io.netty.buffer.ByteBuf)>(v2);
v5 = v7;
v8 = new io.netty.buffer.ByteBufOutputStream;
specialinvoke v8.<io.netty.buffer.ByteBufOutputStream: void <init>(io.netty.buffer.ByteBuf)>(v3);
v6 = v8;
v9 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: byte properties>;
virtualinvoke v8.<io.netty.buffer.ByteBufOutputStream: void writeByte(int)>(v9);
v10 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: int littleEndianDictionarySize>;
virtualinvoke v8.<io.netty.buffer.ByteBufOutputStream: void writeInt(int)>(v10);
v11 = staticinvoke <java.lang.Long: long reverseBytes(long)>(v4);
virtualinvoke v8.<io.netty.buffer.ByteBufOutputStream: void writeLong(long)>(v11);
v12 = v0.<io.netty.handler.codec.compression.LzmaFrameEncoder: lzma.sdk.lzma.Encoder encoder>;
virtualinvoke v12.<lzma.sdk.lzma.Encoder: void code(java.io.InputStream,java.io.OutputStream,long,long,lzma.sdk.ICodeProgress)>(v7, v8, -1L, -1L, null);
label2:
virtualinvoke v7.<java.io.InputStream: void close()>();
virtualinvoke v8.<io.netty.buffer.ByteBufOutputStream: void close()>();
goto label6;
label3:
v13 := @caughtexception;
if v5 == null goto label4;
virtualinvoke v5.<java.io.InputStream: void close()>();
label4:
if v6 == null goto label5;
virtualinvoke v6.<io.netty.buffer.ByteBufOutputStream: void close()>();
label5:
throw v13;
label6:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
protected io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, boolean) throws java.lang.Exception
{
io.netty.buffer.ByteBufAllocator v6;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v7;
int v4, v5;
io.netty.handler.codec.compression.LzmaFrameEncoder v0;
boolean v3;
v0 := @this: io.netty.handler.codec.compression.LzmaFrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: boolean;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v5 = staticinvoke <io.netty.handler.codec.compression.LzmaFrameEncoder: int maxOutputBufferLength(int)>(v4);
v6 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v7 = interfaceinvoke v6.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf ioBuffer(int)>(v5);
return v7;
}
private static int maxOutputBufferLength(int)
{
int v0, v3;
double v1, v2;
v0 := @parameter0: int;
if v0 >= 200 goto label1;
v1 = 1.5;
goto label5;
label1:
if v0 >= 500 goto label2;
v1 = 1.2;
goto label5;
label2:
if v0 >= 1000 goto label3;
v1 = 1.1;
goto label5;
label3:
if v0 >= 10000 goto label4;
v1 = 1.05;
goto label5;
label4:
v1 = 1.02;
label5:
v2 = v0 * v1;
v3 = 13 + v2;
return v3;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/compression/LzmaFrameEncoder;");
<io.netty.handler.codec.compression.LzmaFrameEncoder: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}