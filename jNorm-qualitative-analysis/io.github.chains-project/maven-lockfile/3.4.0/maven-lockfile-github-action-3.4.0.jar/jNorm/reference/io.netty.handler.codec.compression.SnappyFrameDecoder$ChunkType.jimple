final enum class io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType extends java.lang.Enum
{
public static final enum io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType STREAM_IDENTIFIER;
public static final enum io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType COMPRESSED_DATA;
public static final enum io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType UNCOMPRESSED_DATA;
public static final enum io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_UNSKIPPABLE;
public static final enum io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_SKIPPABLE;
private static final io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] $VALUES;
public static io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] values()
{
java.lang.Object v1;
io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] v0;
v0 = <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/compression/SnappyFrameDecoder$ChunkType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType v0;
v0 := @this: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] $values()
{
io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType v1, v2, v3, v4, v5;
io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] v0;
v0 = newarray (io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType)[5];
v1 = <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType STREAM_IDENTIFIER>;
v0[0] = v1;
v2 = <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType COMPRESSED_DATA>;
v0[1] = v2;
v3 = <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType UNCOMPRESSED_DATA>;
v0[2] = v3;
v4 = <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_UNSKIPPABLE>;
v0[3] = v4;
v5 = <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_SKIPPABLE>;
v0[4] = v5;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType v0, v1, v2, v3, v4;
io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] v5;
v0 = new io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType;
specialinvoke v0.<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: void <init>(java.lang.String,int)>("STREAM_IDENTIFIER", 0);
<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType STREAM_IDENTIFIER> = v0;
v1 = new io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType;
specialinvoke v1.<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: void <init>(java.lang.String,int)>("COMPRESSED_DATA", 1);
<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType COMPRESSED_DATA> = v1;
v2 = new io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType;
specialinvoke v2.<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: void <init>(java.lang.String,int)>("UNCOMPRESSED_DATA", 2);
<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType UNCOMPRESSED_DATA> = v2;
v3 = new io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType;
specialinvoke v3.<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: void <init>(java.lang.String,int)>("RESERVED_UNSKIPPABLE", 3);
<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_UNSKIPPABLE> = v3;
v4 = new io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType;
specialinvoke v4.<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: void <init>(java.lang.String,int)>("RESERVED_SKIPPABLE", 4);
<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_SKIPPABLE> = v4;
v5 = staticinvoke <io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] $values()>();
<io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType: io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] $VALUES> = v5;
return;
}
}