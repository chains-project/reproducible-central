public final class io.netty.handler.codec.compression.ZlibCodecFactory extends java.lang.Object
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final int DEFAULT_JDK_WINDOW_SIZE;
private static final int DEFAULT_JDK_MEM_LEVEL;
private static final boolean noJdkZlibDecoder;
private static final boolean noJdkZlibEncoder;
private static final boolean supportsWindowSizeAndMemLevel;
public static boolean isSupportingWindowSizeAndMemLevel()
{
boolean v0;
v0 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean supportsWindowSizeAndMemLevel>;
return v0;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int)
{
int v0, v1;
io.netty.handler.codec.compression.JZlibEncoder v3;
io.netty.handler.codec.compression.JdkZlibEncoder v4;
boolean v2;
v0 := @parameter0: int;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v2 == 0 goto label2;
label1:
v3 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v3.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(int)>(v0);
return v3;
label2:
v4 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v4.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(int)>(v0);
return v4;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(io.netty.handler.codec.compression.ZlibWrapper)
{
int v1;
io.netty.handler.codec.compression.JZlibEncoder v3;
io.netty.handler.codec.compression.JdkZlibEncoder v4;
io.netty.handler.codec.compression.ZlibWrapper v0;
boolean v2;
v0 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v2 == 0 goto label2;
label1:
v3 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v3.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper)>(v0);
return v3;
label2:
v4 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v4.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper)>(v0);
return v4;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(io.netty.handler.codec.compression.ZlibWrapper, int)
{
int v1, v2;
io.netty.handler.codec.compression.JZlibEncoder v4;
io.netty.handler.codec.compression.JdkZlibEncoder v5;
io.netty.handler.codec.compression.ZlibWrapper v0;
boolean v3;
v0 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v1 := @parameter1: int;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v2 < 7 goto label1;
v3 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v3 == 0 goto label2;
label1:
v4 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v4.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v0, v1);
return v4;
label2:
v5 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v5.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v0, v1);
return v5;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(io.netty.handler.codec.compression.ZlibWrapper, int, int, int)
{
io.netty.handler.codec.compression.ZlibWrapper v0;
int v1, v2, v3, v4;
io.netty.handler.codec.compression.JZlibEncoder v6;
io.netty.handler.codec.compression.JdkZlibEncoder v7;
boolean v5;
v0 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v4 < 7 goto label1;
v5 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v5 != 0 goto label1;
if v2 != 15 goto label1;
if v3 == 8 goto label2;
label1:
v6 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v6.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int,int,int)>(v0, v1, v2, v3);
return v6;
label2:
v7 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v7.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v0, v1);
return v7;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(byte[])
{
byte[] v0;
int v1;
io.netty.handler.codec.compression.JZlibEncoder v3;
io.netty.handler.codec.compression.JdkZlibEncoder v4;
boolean v2;
v0 := @parameter0: byte[];
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v2 == 0 goto label2;
label1:
v3 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v3.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(byte[])>(v0);
return v3;
label2:
v4 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v4.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(byte[])>(v0);
return v4;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int, byte[])
{
byte[] v1;
int v0, v2;
io.netty.handler.codec.compression.JZlibEncoder v4;
io.netty.handler.codec.compression.JdkZlibEncoder v5;
boolean v3;
v0 := @parameter0: int;
v1 := @parameter1: byte[];
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v2 < 7 goto label1;
v3 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v3 == 0 goto label2;
label1:
v4 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v4.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(int,byte[])>(v0, v1);
return v4;
label2:
v5 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v5.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(int,byte[])>(v0, v1);
return v5;
}
public static io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int, int, int, byte[])
{
byte[] v3;
int v0, v1, v2, v4;
io.netty.handler.codec.compression.JZlibEncoder v6;
io.netty.handler.codec.compression.JdkZlibEncoder v7;
boolean v5;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: byte[];
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v4 < 7 goto label1;
v5 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
if v5 != 0 goto label1;
if v1 != 15 goto label1;
if v2 == 8 goto label2;
label1:
v6 = new io.netty.handler.codec.compression.JZlibEncoder;
specialinvoke v6.<io.netty.handler.codec.compression.JZlibEncoder: void <init>(int,int,int,byte[])>(v0, v1, v2, v3);
return v6;
label2:
v7 = new io.netty.handler.codec.compression.JdkZlibEncoder;
specialinvoke v7.<io.netty.handler.codec.compression.JdkZlibEncoder: void <init>(int,byte[])>(v0, v3);
return v7;
}
public static io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder()
{
io.netty.handler.codec.compression.JdkZlibDecoder v3;
io.netty.handler.codec.compression.JZlibDecoder v2;
int v0;
boolean v1;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v0 < 7 goto label1;
v1 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibDecoder>;
if v1 == 0 goto label2;
label1:
v2 = new io.netty.handler.codec.compression.JZlibDecoder;
specialinvoke v2.<io.netty.handler.codec.compression.JZlibDecoder: void <init>()>();
return v2;
label2:
v3 = new io.netty.handler.codec.compression.JdkZlibDecoder;
specialinvoke v3.<io.netty.handler.codec.compression.JdkZlibDecoder: void <init>(boolean)>(1);
return v3;
}
public static io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper)
{
io.netty.handler.codec.compression.JdkZlibDecoder v4;
io.netty.handler.codec.compression.JZlibDecoder v3;
int v1;
io.netty.handler.codec.compression.ZlibWrapper v0;
boolean v2;
v0 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibDecoder>;
if v2 == 0 goto label2;
label1:
v3 = new io.netty.handler.codec.compression.JZlibDecoder;
specialinvoke v3.<io.netty.handler.codec.compression.JZlibDecoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper)>(v0);
return v3;
label2:
v4 = new io.netty.handler.codec.compression.JdkZlibDecoder;
specialinvoke v4.<io.netty.handler.codec.compression.JdkZlibDecoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,boolean)>(v0, 1);
return v4;
}
public static io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(byte[])
{
byte[] v0;
io.netty.handler.codec.compression.JdkZlibDecoder v4;
io.netty.handler.codec.compression.JZlibDecoder v3;
int v1;
boolean v2;
v0 := @parameter0: byte[];
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibDecoder>;
if v2 == 0 goto label2;
label1:
v3 = new io.netty.handler.codec.compression.JZlibDecoder;
specialinvoke v3.<io.netty.handler.codec.compression.JZlibDecoder: void <init>(byte[])>(v0);
return v3;
label2:
v4 = new io.netty.handler.codec.compression.JdkZlibDecoder;
specialinvoke v4.<io.netty.handler.codec.compression.JdkZlibDecoder: void <init>(byte[])>(v0);
return v4;
}
private void <init>()
{
io.netty.handler.codec.compression.ZlibCodecFactory v0;
v0 := @this: io.netty.handler.codec.compression.ZlibCodecFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0, v4, v8;
int v1, v12;
java.lang.Boolean v10, v6;
boolean v11, v13, v2, v3, v5, v7, v9;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/compression/ZlibCodecFactory;");
<io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 >= 7 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
v3 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean getBoolean(java.lang.String,boolean)>("io.netty.noJdkZlibDecoder", v2);
<io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibDecoder> = v3;
v4 = <io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.util.internal.logging.InternalLogger logger>;
v5 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibDecoder>;
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v5);
interfaceinvoke v4.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.noJdkZlibDecoder: {}", v6);
v7 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean getBoolean(java.lang.String,boolean)>("io.netty.noJdkZlibEncoder", 0);
<io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder> = v7;
v8 = <io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.util.internal.logging.InternalLogger logger>;
v9 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibEncoder>;
v10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v9);
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.noJdkZlibEncoder: {}", v10);
v11 = <io.netty.handler.codec.compression.ZlibCodecFactory: boolean noJdkZlibDecoder>;
if v11 != 0 goto label3;
v12 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v12 < 7 goto label4;
label3:
v13 = 1;
goto label5;
label4:
v13 = 0;
label5:
<io.netty.handler.codec.compression.ZlibCodecFactory: boolean supportsWindowSizeAndMemLevel> = v13;
return;
}
}