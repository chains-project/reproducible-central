public abstract class io.netty.handler.codec.compression.ZlibDecoder extends io.netty.handler.codec.ByteToMessageDecoder
{
protected final int maxAllocation;
public void <init>()
{
io.netty.handler.codec.compression.ZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.ZlibDecoder;
specialinvoke v0.<io.netty.handler.codec.compression.ZlibDecoder: void <init>(int)>(0);
return;
}
public void <init>(int)
{
int v1, v2;
io.netty.handler.codec.compression.ZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.ZlibDecoder;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "maxAllocation");
v0.<io.netty.handler.codec.compression.ZlibDecoder: int maxAllocation> = v2;
return;
}
public abstract boolean isClosed();
protected io.netty.buffer.ByteBuf prepareDecompressBuffer(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, int)
{
io.netty.handler.codec.compression.DecompressionException v15;
io.netty.buffer.ByteBufAllocator v5, v7;
io.netty.handler.codec.compression.ZlibDecoder v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v11, v13, v2, v6;
int v10, v12, v14, v16, v3, v4, v8, v9;
java.lang.String v17;
v0 := @this: io.netty.handler.codec.compression.ZlibDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: int;
if v2 != null goto label2;
v4 = v0.<io.netty.handler.codec.compression.ZlibDecoder: int maxAllocation>;
if v4 != 0 goto label1;
v5 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v6 = interfaceinvoke v5.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(v3);
return v6;
label1:
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v8 = v0.<io.netty.handler.codec.compression.ZlibDecoder: int maxAllocation>;
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v3, v8);
v10 = v0.<io.netty.handler.codec.compression.ZlibDecoder: int maxAllocation>;
v11 = interfaceinvoke v7.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int,int)>(v9, v10);
return v11;
label2:
v12 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int ensureWritable(int,boolean)>(v3, 1);
if v12 != 1 goto label3;
v13 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf duplicate()>();
virtualinvoke v0.<io.netty.handler.codec.compression.ZlibDecoder: void decompressionBufferExhausted(io.netty.buffer.ByteBuf)>(v13);
v14 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v14);
v15 = new io.netty.handler.codec.compression.DecompressionException;
v16 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int maxCapacity()>();
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Decompression buffer has reached maximum size: \u0001");
specialinvoke v15.<io.netty.handler.codec.compression.DecompressionException: void <init>(java.lang.String)>(v17);
throw v15;
label3:
return v2;
}
protected void decompressionBufferExhausted(io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.compression.ZlibDecoder v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.codec.compression.ZlibDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
return;
}
}