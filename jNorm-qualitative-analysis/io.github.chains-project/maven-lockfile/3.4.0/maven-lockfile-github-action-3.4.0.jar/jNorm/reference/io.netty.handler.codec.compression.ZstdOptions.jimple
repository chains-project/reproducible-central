public class io.netty.handler.codec.compression.ZstdOptions extends java.lang.Object implements io.netty.handler.codec.compression.CompressionOptions
{
private final int blockSize;
private final int compressionLevel;
private final int maxEncodeSize;
static final io.netty.handler.codec.compression.ZstdOptions DEFAULT;
void <init>(int, int, int)
{
io.netty.handler.codec.compression.ZstdOptions v0;
java.lang.Throwable v6;
java.lang.IllegalStateException v5;
int v1, v2, v3, v7, v8, v9;
boolean v4;
v0 := @this: io.netty.handler.codec.compression.ZstdOptions;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = staticinvoke <io.netty.handler.codec.compression.Zstd: boolean isAvailable()>();
if v4 != 0 goto label1;
v5 = new java.lang.IllegalStateException;
v6 = staticinvoke <io.netty.handler.codec.compression.Zstd: java.lang.Throwable cause()>();
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("zstd-jni is not available", v6);
throw v5;
label1:
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v1, 0, 22, "compressionLevel");
v0.<io.netty.handler.codec.compression.ZstdOptions: int compressionLevel> = v7;
v8 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v2, "blockSize");
v0.<io.netty.handler.codec.compression.ZstdOptions: int blockSize> = v8;
v9 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v3, "maxEncodeSize");
v0.<io.netty.handler.codec.compression.ZstdOptions: int maxEncodeSize> = v9;
return;
}
public int compressionLevel()
{
int v1;
io.netty.handler.codec.compression.ZstdOptions v0;
v0 := @this: io.netty.handler.codec.compression.ZstdOptions;
v1 = v0.<io.netty.handler.codec.compression.ZstdOptions: int compressionLevel>;
return v1;
}
public int blockSize()
{
int v1;
io.netty.handler.codec.compression.ZstdOptions v0;
v0 := @this: io.netty.handler.codec.compression.ZstdOptions;
v1 = v0.<io.netty.handler.codec.compression.ZstdOptions: int blockSize>;
return v1;
}
public int maxEncodeSize()
{
int v1;
io.netty.handler.codec.compression.ZstdOptions v0;
v0 := @this: io.netty.handler.codec.compression.ZstdOptions;
v1 = v0.<io.netty.handler.codec.compression.ZstdOptions: int maxEncodeSize>;
return v1;
}
static void <clinit>()
{
io.netty.handler.codec.compression.ZstdOptions v0;
v0 = new io.netty.handler.codec.compression.ZstdOptions;
specialinvoke v0.<io.netty.handler.codec.compression.ZstdOptions: void <init>(int,int,int)>(3, 65536, 33554432);
<io.netty.handler.codec.compression.ZstdOptions: io.netty.handler.codec.compression.ZstdOptions DEFAULT> = v0;
return;
}
}