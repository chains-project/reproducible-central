public final class io.netty.handler.codec.haproxy.HAProxyMessage extends io.netty.util.AbstractReferenceCounted
{
private static final int MAX_NESTING_LEVEL;
private static final io.netty.util.ResourceLeakDetector leakDetector;
private final io.netty.util.ResourceLeakTracker leak;
private final io.netty.handler.codec.haproxy.HAProxyProtocolVersion protocolVersion;
private final io.netty.handler.codec.haproxy.HAProxyCommand command;
private final io.netty.handler.codec.haproxy.HAProxyProxiedProtocol proxiedProtocol;
private final java.lang.String sourceAddress;
private final java.lang.String destinationAddress;
private final int sourcePort;
private final int destinationPort;
private final java.util.List tlvs;
static final boolean $assertionsDisabled;
private void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion, io.netty.handler.codec.haproxy.HAProxyCommand, io.netty.handler.codec.haproxy.HAProxyProxiedProtocol, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
{
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v3;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v1;
int v8, v9;
io.netty.handler.codec.haproxy.HAProxyCommand v2;
java.lang.String v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 := @parameter0: io.netty.handler.codec.haproxy.HAProxyProtocolVersion;
v2 := @parameter1: io.netty.handler.codec.haproxy.HAProxyCommand;
v3 := @parameter2: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: java.lang.String;
v7 := @parameter6: java.lang.String;
v8 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: int portStringToInt(java.lang.String)>(v6);
v9 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: int portStringToInt(java.lang.String)>(v7);
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol,java.lang.String,java.lang.String,int,int)>(v1, v2, v3, v4, v5, v8, v9);
return;
}
public void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion, io.netty.handler.codec.haproxy.HAProxyCommand, io.netty.handler.codec.haproxy.HAProxyProxiedProtocol, java.lang.String, java.lang.String, int, int)
{
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v3;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v1;
java.util.List v8;
int v6, v7;
io.netty.handler.codec.haproxy.HAProxyCommand v2;
java.lang.String v4, v5;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 := @parameter0: io.netty.handler.codec.haproxy.HAProxyProtocolVersion;
v2 := @parameter1: io.netty.handler.codec.haproxy.HAProxyCommand;
v3 := @parameter2: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol,java.lang.String,java.lang.String,int,int,java.util.List)>(v1, v2, v3, v4, v5, v6, v7, v8);
return;
}
public void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion, io.netty.handler.codec.haproxy.HAProxyCommand, io.netty.handler.codec.haproxy.HAProxyProxiedProtocol, java.lang.String, java.lang.String, int, int, java.util.List)
{
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v3;
io.netty.util.ResourceLeakDetector v11;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v1;
java.util.List v10, v8;
int v6, v7;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily v9;
io.netty.handler.codec.haproxy.HAProxyCommand v2;
java.lang.String v4, v5;
io.netty.util.ResourceLeakTracker v12;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 := @parameter0: io.netty.handler.codec.haproxy.HAProxyProtocolVersion;
v2 := @parameter1: io.netty.handler.codec.haproxy.HAProxyCommand;
v3 := @parameter2: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: java.util.List;
specialinvoke v0.<io.netty.util.AbstractReferenceCounted: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "protocolVersion");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "proxiedProtocol");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v8, "tlvs");
v9 = virtualinvoke v3.<io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily addressFamily()>();
staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: void checkAddress(java.lang.String,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v4, v9);
staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: void checkAddress(java.lang.String,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v5, v9);
staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: void checkPort(int,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v6, v9);
staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: void checkPort(int,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v7, v9);
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyProtocolVersion protocolVersion> = v1;
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyCommand command> = v2;
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol proxiedProtocol> = v3;
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String sourceAddress> = v4;
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String destinationAddress> = v5;
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: int sourcePort> = v6;
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: int destinationPort> = v7;
v10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v8);
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs> = v10;
v11 = <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakDetector leakDetector>;
v12 = virtualinvoke v11.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v0);
v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak> = v12;
return;
}
static io.netty.handler.codec.haproxy.HAProxyMessage decodeHeader(io.netty.buffer.ByteBuf)
{
byte v20, v5, v59;
java.lang.String v11, v12, v37, v4, v44, v51, v58, v65, v67;
io.netty.util.ByteProcessor v39, v46;
java.util.List v68;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v21, v24;
io.netty.handler.codec.haproxy.HAProxyProtocolException v10, v15, v2, v23, v34, v55, v62, v66, v8;
io.netty.buffer.ByteBuf v0;
java.nio.charset.Charset v43, v50;
int v1, v28, v29, v3, v30, v33, v35, v36, v38, v40, v41, v42, v45, v47, v48, v49, v52, v54, v56, v57, v61, v63, v64;
java.lang.IllegalArgumentException v14, v22, v7;
io.netty.handler.codec.haproxy.HAProxyMessage v19, v27, v69;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v17, v25, v6, v9;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily v31, v32, v53, v60;
io.netty.handler.codec.haproxy.HAProxyCommand v13, v16, v18, v26;
v0 := @parameter0: io.netty.buffer.ByteBuf;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "header");
v1 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v1 >= 16 goto label01;
v2 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v3 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("incomplete header: \u0001 bytes (expected: 16+ bytes)");
specialinvoke v2.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v4);
throw v2;
label01:
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(12);
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte readByte()>();
label02:
v6 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyProtocolVersion: io.netty.handler.codec.haproxy.HAProxyProtocolVersion valueOf(byte)>(v5);
label03:
goto label05;
label04:
v7 := @caughtexception;
v8 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
specialinvoke v8.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.Throwable)>(v7);
throw v8;
label05:
v9 = <io.netty.handler.codec.haproxy.HAProxyProtocolVersion: io.netty.handler.codec.haproxy.HAProxyProtocolVersion V2>;
if v6 == v9 goto label06;
v10 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v5);
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("version 1 unsupported: 0x\u0001");
specialinvoke v10.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v12);
throw v10;
label06:
v13 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyCommand: io.netty.handler.codec.haproxy.HAProxyCommand valueOf(byte)>(v5);
label07:
goto label09;
label08:
v14 := @caughtexception;
v15 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
specialinvoke v15.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.Throwable)>(v14);
throw v15;
label09:
v16 = <io.netty.handler.codec.haproxy.HAProxyCommand: io.netty.handler.codec.haproxy.HAProxyCommand LOCAL>;
if v13 != v16 goto label10;
v17 = <io.netty.handler.codec.haproxy.HAProxyProtocolVersion: io.netty.handler.codec.haproxy.HAProxyProtocolVersion V2>;
v18 = <io.netty.handler.codec.haproxy.HAProxyCommand: io.netty.handler.codec.haproxy.HAProxyCommand LOCAL>;
v19 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyMessage unknownMsg(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand)>(v17, v18);
return v19;
label10:
v20 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte readByte()>();
v21 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol valueOf(byte)>(v20);
label11:
goto label13;
label12:
v22 := @caughtexception;
v23 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
specialinvoke v23.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.Throwable)>(v22);
throw v23;
label13:
v24 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol UNKNOWN>;
if v21 != v24 goto label14;
v25 = <io.netty.handler.codec.haproxy.HAProxyProtocolVersion: io.netty.handler.codec.haproxy.HAProxyProtocolVersion V2>;
v26 = <io.netty.handler.codec.haproxy.HAProxyCommand: io.netty.handler.codec.haproxy.HAProxyCommand PROXY>;
v27 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyMessage unknownMsg(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand)>(v25, v26);
return v27;
label14:
v28 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v29 = 0;
v30 = 0;
v31 = virtualinvoke v21.<io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily addressFamily()>();
v32 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily AF_UNIX>;
if v31 != v32 goto label21;
if v28 < 216 goto label15;
v33 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v33 >= 216 goto label16;
label15:
v34 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v35 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v36 = staticinvoke <java.lang.Math: int min(int,int)>(v28, v35);
v37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v36) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("incomplete UNIX socket address information: \u0001 bytes (expected: 216+ bytes)");
specialinvoke v34.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v37);
throw v34;
label16:
v38 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v39 = <io.netty.util.ByteProcessor: io.netty.util.ByteProcessor FIND_NUL>;
v40 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int forEachByte(int,int,io.netty.util.ByteProcessor)>(v38, 108, v39);
v41 = (int) -1;
if v40 != v41 goto label17;
v42 = 108;
goto label18;
label17:
v42 = v40 - v38;
label18:
v43 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v44 = virtualinvoke v0.<io.netty.buffer.ByteBuf: java.lang.String toString(int,int,java.nio.charset.Charset)>(v38, v42, v43);
v45 = v38 + 108;
v46 = <io.netty.util.ByteProcessor: io.netty.util.ByteProcessor FIND_NUL>;
v47 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int forEachByte(int,int,io.netty.util.ByteProcessor)>(v45, 108, v46);
v48 = (int) -1;
if v47 != v48 goto label19;
v49 = 108;
goto label20;
label19:
v49 = v47 - v45;
label20:
v50 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v51 = virtualinvoke v0.<io.netty.buffer.ByteBuf: java.lang.String toString(int,int,java.nio.charset.Charset)>(v45, v49, v50);
v52 = v45 + 108;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v52);
goto label29;
label21:
v53 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily AF_IPv4>;
if v31 != v53 goto label24;
if v28 < 12 goto label22;
v54 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v54 >= 12 goto label23;
label22:
v55 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v56 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v57 = staticinvoke <java.lang.Math: int min(int,int)>(v28, v56);
v58 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v57) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("incomplete IPv4 address information: \u0001 bytes (expected: 12+ bytes)");
specialinvoke v55.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v58);
throw v55;
label23:
v59 = 4;
goto label28;
label24:
v60 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily AF_IPv6>;
if v31 != v60 goto label27;
if v28 < 36 goto label25;
v61 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v61 >= 36 goto label26;
label25:
v62 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v63 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v64 = staticinvoke <java.lang.Math: int min(int,int)>(v28, v63);
v65 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v64) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("incomplete IPv6 address information: \u0001 bytes (expected: 36+ bytes)");
specialinvoke v62.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v65);
throw v62;
label26:
v59 = 16;
goto label28;
label27:
v66 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v67 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v31) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unable to parse address information (unknown address family: \u0001)");
specialinvoke v66.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v67);
throw v66;
label28:
v44 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String ipBytesToString(io.netty.buffer.ByteBuf,int)>(v0, v59);
v51 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String ipBytesToString(io.netty.buffer.ByteBuf,int)>(v0, v59);
v29 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v30 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
label29:
v68 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List readTlvs(io.netty.buffer.ByteBuf)>(v0);
v69 = new io.netty.handler.codec.haproxy.HAProxyMessage;
specialinvoke v69.<io.netty.handler.codec.haproxy.HAProxyMessage: void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol,java.lang.String,java.lang.String,int,int,java.util.List)>(v6, v13, v21, v44, v51, v29, v30, v68);
return v69;
catch java.lang.IllegalArgumentException from label02 to label03 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.lang.IllegalArgumentException from label10 to label11 with label12;
}
private static java.util.List readTlvs(io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.haproxy.HAProxyTLV v1, v6;
java.util.List v2, v5;
io.netty.buffer.ByteBuf v0;
boolean v4;
java.util.ArrayList v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyTLV readNextTLV(io.netty.buffer.ByteBuf,int)>(v0, 0);
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v2;
label1:
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>(int)>(4);
label2:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v1);
v4 = v1 instanceof io.netty.handler.codec.haproxy.HAProxySSLTLV;
if v4 == 0 goto label3;
v5 = virtualinvoke v1.<io.netty.handler.codec.haproxy.HAProxySSLTLV: java.util.List encapsulatedTLVs()>();
interfaceinvoke v3.<java.util.List: boolean addAll(java.util.Collection)>(v5);
label3:
v6 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyTLV readNextTLV(io.netty.buffer.ByteBuf,int)>(v0, 0);
v1 = v6;
if v6 != null goto label2;
return v3;
}
private static io.netty.handler.codec.haproxy.HAProxyTLV readNextTLV(io.netty.buffer.ByteBuf, int)
{
io.netty.handler.codec.haproxy.HAProxyProtocolException v2;
java.util.ArrayList v17;
byte v14, v5;
io.netty.buffer.ByteBuf v0, v12, v13, v25;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v6;
int[] v8;
io.netty.handler.codec.haproxy.HAProxySSLTLV v21, v22;
int v1, v10, v11, v15, v16, v18, v20, v4, v7, v9;
java.lang.String v3;
io.netty.handler.codec.haproxy.HAProxyTLV v19, v24;
java.util.List v23;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
if v1 <= 128 goto label1;
v2 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Maximum TLV nesting level reached: \u0001 (expected: < 128)");
specialinvoke v2.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v4 >= 4 goto label2;
return null;
label2:
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte readByte()>();
v6 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type typeForByteValue(byte)>(v5);
v7 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v8 = <io.netty.handler.codec.haproxy.HAProxyMessage$1: int[] $SwitchMap$io$netty$handler$codec$haproxy$HAProxyTLV$Type>;
v9 = virtualinvoke v6.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: int ordinal()>();
v10 = v8[v9];
tableswitch(v10)
{
case 1: goto label3;
case 2: goto label7;
case 3: goto label7;
case 4: goto label7;
case 5: goto label7;
case 6: goto label7;
case 7: goto label7;
default: goto label8;
};
label3:
v11 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v12 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedSlice(int,int)>(v11, v7);
v13 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v7);
v14 = virtualinvoke v13.<io.netty.buffer.ByteBuf: byte readByte()>();
v15 = virtualinvoke v13.<io.netty.buffer.ByteBuf: int readInt()>();
v16 = virtualinvoke v13.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v16 < 4 goto label6;
v17 = new java.util.ArrayList;
specialinvoke v17.<java.util.ArrayList: void <init>(int)>(4);
label4:
v18 = v1 + 1;
v19 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyTLV readNextTLV(io.netty.buffer.ByteBuf,int)>(v13, v18);
if v19 == null goto label5;
interfaceinvoke v17.<java.util.List: boolean add(java.lang.Object)>(v19);
v20 = virtualinvoke v13.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v20 >= 4 goto label4;
label5:
v21 = new io.netty.handler.codec.haproxy.HAProxySSLTLV;
specialinvoke v21.<io.netty.handler.codec.haproxy.HAProxySSLTLV: void <init>(int,byte,java.util.List,io.netty.buffer.ByteBuf)>(v15, v14, v17, v12);
return v21;
label6:
v22 = new io.netty.handler.codec.haproxy.HAProxySSLTLV;
v23 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
specialinvoke v22.<io.netty.handler.codec.haproxy.HAProxySSLTLV: void <init>(int,byte,java.util.List,io.netty.buffer.ByteBuf)>(v15, v14, v23, v12);
return v22;
label7:
v24 = new io.netty.handler.codec.haproxy.HAProxyTLV;
v25 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v7);
specialinvoke v24.<io.netty.handler.codec.haproxy.HAProxyTLV: void <init>(io.netty.handler.codec.haproxy.HAProxyTLV$Type,byte,io.netty.buffer.ByteBuf)>(v6, v5, v25);
return v24;
label8:
return null;
}
static io.netty.handler.codec.haproxy.HAProxyMessage decodeHeader(java.lang.String)
{
boolean v8;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v13, v16, v17, v18, v22;
io.netty.handler.codec.haproxy.HAProxyProtocolException v1, v15, v19, v26, v36, v4, v9;
java.lang.String[] v2;
int v3;
java.lang.String v0, v10, v11, v12, v20, v21, v27, v31, v32, v33, v34, v5, v6, v7;
java.lang.RuntimeException v35;
java.lang.IllegalArgumentException v14;
io.netty.handler.codec.haproxy.HAProxyMessage v25, v28;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v23, v29;
io.netty.handler.codec.haproxy.HAProxyCommand v24, v30;
v0 := @parameter0: java.lang.String;
if v0 != null goto label01;
v1 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
specialinvoke v1.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>("header");
throw v1;
label01:
v2 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
v3 = lengthof v2;
if v3 >= 2 goto label02;
v4 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid header: \u0001 (expected: \'PROXY\' and proxied protocol values)");
specialinvoke v4.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v5);
throw v4;
label02:
v6 = "PROXY";
v7 = v2[0];
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 != 0 goto label03;
v9 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v10 = v2[0];
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unknown identifier: \u0001");
specialinvoke v9.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v11);
throw v9;
label03:
v12 = v2[1];
v13 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol valueOf(java.lang.String)>(v12);
label04:
goto label06;
label05:
v14 := @caughtexception;
v15 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
specialinvoke v15.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.Throwable)>(v14);
throw v15;
label06:
v16 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol TCP4>;
if v13 == v16 goto label07;
v17 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol TCP6>;
if v13 == v17 goto label07;
v18 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol UNKNOWN>;
if v13 == v18 goto label07;
v19 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v20 = v2[1];
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported v1 proxied protocol: \u0001");
specialinvoke v19.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v21);
throw v19;
label07:
v22 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol UNKNOWN>;
if v13 != v22 goto label08;
v23 = <io.netty.handler.codec.haproxy.HAProxyProtocolVersion: io.netty.handler.codec.haproxy.HAProxyProtocolVersion V1>;
v24 = <io.netty.handler.codec.haproxy.HAProxyCommand: io.netty.handler.codec.haproxy.HAProxyCommand PROXY>;
v25 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyMessage unknownMsg(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand)>(v23, v24);
return v25;
label08:
if v3 == 6 goto label09;
v26 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid TCP4/6 header: \u0001 (expected: 6 parts)");
specialinvoke v26.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String)>(v27);
throw v26;
label09:
v28 = new io.netty.handler.codec.haproxy.HAProxyMessage;
v29 = <io.netty.handler.codec.haproxy.HAProxyProtocolVersion: io.netty.handler.codec.haproxy.HAProxyProtocolVersion V1>;
v30 = <io.netty.handler.codec.haproxy.HAProxyCommand: io.netty.handler.codec.haproxy.HAProxyCommand PROXY>;
v31 = v2[2];
v32 = v2[3];
v33 = v2[4];
v34 = v2[5];
specialinvoke v28.<io.netty.handler.codec.haproxy.HAProxyMessage: void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v29, v30, v13, v31, v32, v33, v34);
label10:
return v28;
label11:
v35 := @caughtexception;
v36 = new io.netty.handler.codec.haproxy.HAProxyProtocolException;
specialinvoke v36.<io.netty.handler.codec.haproxy.HAProxyProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("invalid HAProxy message", v35);
throw v36;
catch java.lang.IllegalArgumentException from label03 to label04 with label05;
catch java.lang.RuntimeException from label09 to label10 with label11;
}
private static io.netty.handler.codec.haproxy.HAProxyMessage unknownMsg(io.netty.handler.codec.haproxy.HAProxyProtocolVersion, io.netty.handler.codec.haproxy.HAProxyCommand)
{
io.netty.handler.codec.haproxy.HAProxyMessage v2;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v0;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v3;
io.netty.handler.codec.haproxy.HAProxyCommand v1;
v0 := @parameter0: io.netty.handler.codec.haproxy.HAProxyProtocolVersion;
v1 := @parameter1: io.netty.handler.codec.haproxy.HAProxyCommand;
v2 = new io.netty.handler.codec.haproxy.HAProxyMessage;
v3 = <io.netty.handler.codec.haproxy.HAProxyProxiedProtocol: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol UNKNOWN>;
specialinvoke v2.<io.netty.handler.codec.haproxy.HAProxyMessage: void <init>(io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol,java.lang.String,java.lang.String,int,int)>(v0, v1, v3, null, null, 0, 0);
return v2;
}
private static java.lang.String ipBytesToString(io.netty.buffer.ByteBuf, int)
{
short v5;
byte v4;
io.netty.buffer.ByteBuf v0;
int v1, v10, v3, v6, v7, v9;
java.lang.StringBuilder v2;
java.lang.String v11, v8;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
if v1 != 4 goto label2;
v3 = 0;
label1:
if v3 >= 4 goto label4;
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte readByte()>();
v5 = v4 & 255;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v5);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
v3 = v3 + 1;
goto label1;
label2:
v6 = 0;
label3:
if v6 >= 8 goto label4;
v7 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v7);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
v6 = v6 + 1;
goto label3;
label4:
v9 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v10 = v9 - 1;
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v10);
v11 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
private static int portStringToInt(java.lang.String)
{
java.lang.NumberFormatException v2;
java.lang.IllegalArgumentException v3, v6;
int v1, v5;
java.lang.String v0, v4, v7;
v0 := @parameter0: java.lang.String;
label1:
v1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
label2:
goto label4;
label3:
v2 := @caughtexception;
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid port: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v4, v2);
throw v3;
label4:
if v1 <= 0 goto label5;
v5 = (int) 65535;
if v1 <= v5 goto label6;
label5:
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid port: \u0001 (expected: 1 ~ 65535)");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
label6:
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
private static void checkAddress(java.lang.String, io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)
{
byte[] v8;
java.nio.charset.Charset v7;
int[] v12, v2;
int v13, v14, v3, v4, v9;
java.lang.String v0, v11, v17, v20, v22, v6;
boolean v15, v18;
java.lang.IllegalArgumentException v10, v16, v19, v21, v5;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "addrFamily");
v2 = <io.netty.handler.codec.haproxy.HAProxyMessage$1: int[] $SwitchMap$io$netty$handler$codec$haproxy$HAProxyProxiedProtocol$AddressFamily>;
v3 = virtualinvoke v1.<io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily: int ordinal()>();
v4 = v2[v3];
lookupswitch(v4)
{
case 1: goto label1;
case 2: goto label3;
default: goto label5;
};
label1:
if v0 == null goto label2;
v5 = new java.lang.IllegalArgumentException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unable to validate an AF_UNSPEC address: \u0001");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v5;
label2:
return;
label3:
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "address");
v7 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v8 = virtualinvoke v0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v7);
v9 = lengthof v8;
if v9 <= 108 goto label4;
v10 = new java.lang.IllegalArgumentException;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid AF_UNIX address: \u0001");
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v10;
label4:
return;
label5:
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "address");
v12 = <io.netty.handler.codec.haproxy.HAProxyMessage$1: int[] $SwitchMap$io$netty$handler$codec$haproxy$HAProxyProxiedProtocol$AddressFamily>;
v13 = virtualinvoke v1.<io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily: int ordinal()>();
v14 = v12[v13];
lookupswitch(v14)
{
case 3: goto label6;
case 4: goto label7;
default: goto label8;
};
label6:
v15 = staticinvoke <io.netty.util.NetUtil: boolean isValidIpV4Address(java.lang.String)>(v0);
if v15 != 0 goto label9;
v16 = new java.lang.IllegalArgumentException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid IPv4 address: \u0001");
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v16;
label7:
v18 = staticinvoke <io.netty.util.NetUtil: boolean isValidIpV6Address(java.lang.String)>(v0);
if v18 != 0 goto label9;
v19 = new java.lang.IllegalArgumentException;
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid IPv6 address: \u0001");
specialinvoke v19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v20);
throw v19;
label8:
v21 = new java.lang.IllegalArgumentException;
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected addrFamily: \u0001");
specialinvoke v21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v22);
throw v21;
label9:
return;
}
private static void checkPort(int, io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)
{
java.lang.IllegalArgumentException v10, v6, v8;
int[] v2;
int v0, v3, v4, v5;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily v1;
java.lang.String v11, v7, v9;
v0 := @parameter0: int;
v1 := @parameter1: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily;
v2 = <io.netty.handler.codec.haproxy.HAProxyMessage$1: int[] $SwitchMap$io$netty$handler$codec$haproxy$HAProxyProxiedProtocol$AddressFamily>;
v3 = virtualinvoke v1.<io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily: int ordinal()>();
v4 = v2[v3];
tableswitch(v4)
{
case 1: goto label3;
case 2: goto label3;
case 3: goto label1;
case 4: goto label1;
default: goto label4;
};
label1:
if v0 < 0 goto label2;
v5 = (int) 65535;
if v0 <= v5 goto label5;
label2:
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid port: \u0001 (expected: 0 ~ 65535)");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
label3:
if v0 == 0 goto label5;
v8 = new java.lang.IllegalArgumentException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("port cannot be specified with addrFamily: \u0001");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v8;
label4:
v10 = new java.lang.IllegalArgumentException;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected addrFamily: \u0001");
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v10;
label5:
return;
}
public io.netty.handler.codec.haproxy.HAProxyProtocolVersion protocolVersion()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyProtocolVersion protocolVersion>;
return v1;
}
public io.netty.handler.codec.haproxy.HAProxyCommand command()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyCommand v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyCommand command>;
return v1;
}
public io.netty.handler.codec.haproxy.HAProxyProxiedProtocol proxiedProtocol()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol proxiedProtocol>;
return v1;
}
public java.lang.String sourceAddress()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String sourceAddress>;
return v1;
}
public java.lang.String destinationAddress()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String destinationAddress>;
return v1;
}
public int sourcePort()
{
int v1;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: int sourcePort>;
return v1;
}
public int destinationPort()
{
int v1;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: int destinationPort>;
return v1;
}
public java.util.List tlvs()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
java.util.List v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs>;
return v1;
}
int tlvNumBytes()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
java.util.List v3, v5;
int v1, v2, v4, v7;
java.lang.Object v6;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = 0;
v2 = 0;
label1:
v3 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 >= v4 goto label2;
v5 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs>;
v6 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v2);
v7 = virtualinvoke v6.<io.netty.handler.codec.haproxy.HAProxyTLV: int totalNumBytes()>();
v1 = v1 + v7;
v2 = v2 + 1;
goto label1;
label2:
return v1;
}
public io.netty.handler.codec.haproxy.HAProxyMessage touch()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.util.ReferenceCounted v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void tryRecord()>();
v1 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted touch()>();
return v1;
}
public io.netty.handler.codec.haproxy.HAProxyMessage touch(java.lang.Object)
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
java.lang.Object v1;
io.netty.util.ResourceLeakTracker v2, v3;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak>;
interfaceinvoke v3.<io.netty.util.ResourceLeakTracker: void record(java.lang.Object)>(v1);
label1:
return v0;
}
public io.netty.handler.codec.haproxy.HAProxyMessage retain()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.util.ReferenceCounted v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void tryRecord()>();
v1 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain()>();
return v1;
}
public io.netty.handler.codec.haproxy.HAProxyMessage retain(int)
{
int v1;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.util.ReferenceCounted v2;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void tryRecord()>();
v2 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain(int)>(v1);
return v2;
}
public boolean release()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
boolean v1;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void tryRecord()>();
v1 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: boolean release()>();
return v1;
}
public boolean release(int)
{
int v1;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
boolean v2;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyMessage: void tryRecord()>();
v2 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: boolean release(int)>(v1);
return v2;
}
private void tryRecord()
{
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.util.ResourceLeakTracker v1, v2;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak>;
interfaceinvoke v2.<io.netty.util.ResourceLeakTracker: void record()>();
label1:
return;
}
protected void deallocate()
{
java.lang.Throwable v9;
java.util.Iterator v2;
java.lang.AssertionError v13, v8;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
java.util.List v1;
java.lang.Object v4;
io.netty.util.ResourceLeakTracker v10, v5;
boolean v11, v12, v3, v6, v7;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
label1:
v1 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label2:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label3;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v4.<io.netty.handler.codec.haproxy.HAProxyTLV: boolean release()>();
goto label2;
label3:
v5 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak>;
if v5 == null goto label6;
v6 = interfaceinvoke v5.<io.netty.util.ResourceLeakTracker: boolean close(java.lang.Object)>(v0);
v7 = <io.netty.handler.codec.haproxy.HAProxyMessage: boolean $assertionsDisabled>;
if v7 != 0 goto label6;
if v6 != 0 goto label6;
v8 = new java.lang.AssertionError;
specialinvoke v8.<java.lang.AssertionError: void <init>()>();
throw v8;
label4:
v9 := @caughtexception;
v10 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakTracker leak>;
if v10 == null goto label5;
v11 = interfaceinvoke v10.<io.netty.util.ResourceLeakTracker: boolean close(java.lang.Object)>(v0);
v12 = <io.netty.handler.codec.haproxy.HAProxyMessage: boolean $assertionsDisabled>;
if v12 != 0 goto label5;
if v11 != 0 goto label5;
v13 = new java.lang.AssertionError;
specialinvoke v13.<java.lang.AssertionError: void <init>()>();
throw v13;
label5:
throw v9;
label6:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
public java.lang.String toString()
{
io.netty.handler.codec.haproxy.HAProxyProxiedProtocol v4;
int v15, v16, v7, v8;
java.lang.String v1, v17, v5, v6;
boolean v10, v13;
java.util.Iterator v12;
io.netty.handler.codec.haproxy.HAProxyMessage v0;
io.netty.handler.codec.haproxy.HAProxyProtocolVersion v2;
java.util.List v11, v9;
io.netty.handler.codec.haproxy.HAProxyCommand v3;
java.lang.Object v14;
java.lang.StringBuilder v18, v19, v20;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyMessage;
specialinvoke v18.<java.lang.StringBuilder: void <init>(int)>(256);
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v0);
v2 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyProtocolVersion protocolVersion>;
v3 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyCommand command>;
v4 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.handler.codec.haproxy.HAProxyProxiedProtocol proxiedProtocol>;
v5 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String sourceAddress>;
v6 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.lang.String destinationAddress>;
v7 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: int sourcePort>;
v8 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: int destinationPort>;
v9 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs>;
v10 = interfaceinvoke v9.<java.util.List: boolean isEmpty()>();
if v10 != 0 goto label3;
v11 = v0.<io.netty.handler.codec.haproxy.HAProxyMessage: java.util.List tlvs>;
v12 = interfaceinvoke v11.<java.util.List: java.util.Iterator iterator()>();
label1:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label2;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
goto label1;
label2:
v15 = virtualinvoke v19.<java.lang.StringBuilder: int length()>();
v16 = v15 - 2;
virtualinvoke v19.<java.lang.StringBuilder: void setLength(int)>(v16);
label3:
virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,io.netty.handler.codec.haproxy.HAProxyProtocolVersion,io.netty.handler.codec.haproxy.HAProxyCommand,io.netty.handler.codec.haproxy.HAProxyProxiedProtocol,java.lang.String,java.lang.String,int,int,io.netty.handler.codec.haproxy.HAProxyTLV)>(v1, v2, v3, v4, v5, v6, v7, v8, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(protocolVersion: \u0001, command: \u0001, proxiedProtocol: \u0001, sourceAddress: \u0001, destinationAddress: \u0001, sourcePort: \u0001, destinationPort: \u0001, tlvs: [\u0001");
return v17;
}
static void <clinit>()
{
io.netty.util.ResourceLeakDetectorFactory v3;
java.lang.Class v0;
io.netty.util.ResourceLeakDetector v4;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/haproxy/HAProxyMessage;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.haproxy.HAProxyMessage: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <io.netty.util.ResourceLeakDetectorFactory: io.netty.util.ResourceLeakDetectorFactory instance()>();
v4 = virtualinvoke v3.<io.netty.util.ResourceLeakDetectorFactory: io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class)>(class "Lio/netty/handler/codec/haproxy/HAProxyMessage;");
<io.netty.handler.codec.haproxy.HAProxyMessage: io.netty.util.ResourceLeakDetector leakDetector> = v4;
return;
}
}