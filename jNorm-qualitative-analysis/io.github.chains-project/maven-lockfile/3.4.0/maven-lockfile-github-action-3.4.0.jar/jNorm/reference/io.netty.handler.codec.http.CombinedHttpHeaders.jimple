public class io.netty.handler.codec.http.CombinedHttpHeaders extends io.netty.handler.codec.http.DefaultHttpHeaders
{
public void <init>(boolean)
{
io.netty.util.HashingStrategy v3;
io.netty.handler.codec.ValueConverter v4;
io.netty.handler.codec.DefaultHeaders$NameValidator v5;
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl v2;
io.netty.handler.codec.http.CombinedHttpHeaders v0;
io.netty.handler.codec.DefaultHeaders$ValueValidator v6;
boolean v1;
v0 := @this: io.netty.handler.codec.http.CombinedHttpHeaders;
v1 := @parameter0: boolean;
v2 = new io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl;
v3 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER>;
v4 = staticinvoke <io.netty.handler.codec.http.CombinedHttpHeaders: io.netty.handler.codec.ValueConverter valueConverter()>();
v5 = staticinvoke <io.netty.handler.codec.http.CombinedHttpHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator(boolean)>(v1);
v6 = staticinvoke <io.netty.handler.codec.http.CombinedHttpHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator(boolean)>(v1);
specialinvoke v2.<io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,io.netty.handler.codec.DefaultHeaders$ValueValidator)>(v3, v4, v5, v6);
specialinvoke v0.<io.netty.handler.codec.http.DefaultHttpHeaders: void <init>(io.netty.handler.codec.DefaultHeaders)>(v2);
return;
}
public boolean containsValue(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
java.lang.CharSequence v1, v2, v4;
io.netty.handler.codec.http.CombinedHttpHeaders v0;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.http.CombinedHttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: boolean;
v4 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.CharSequence trimOws(java.lang.CharSequence)>(v2);
v5 = specialinvoke v0.<io.netty.handler.codec.http.DefaultHttpHeaders: boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v1, v4, v3);
return v5;
}
}