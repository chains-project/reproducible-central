public class io.netty.handler.codec.http.HttpClientUpgradeHandler extends io.netty.handler.codec.http.HttpObjectAggregator implements io.netty.channel.ChannelOutboundHandler
{
private final io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec;
private final io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec;
private boolean upgradeRequested;
static final boolean $assertionsDisabled;
public void <init>(io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec, io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec, int)
{
io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec v1;
int v3;
java.lang.Object v4, v5;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec v2;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec;
v2 := @parameter1: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.handler.codec.http.HttpObjectAggregator: void <init>(int)>(v3);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "sourceCodec");
v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec> = v4;
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "upgradeCodec");
v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec> = v5;
return;
}
public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
java.net.SocketAddress v2;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: io.netty.channel.ChannelPromise;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v2, v3);
return;
}
public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v4;
java.net.SocketAddress v2, v3;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: java.net.SocketAddress;
v4 := @parameter3: io.netty.channel.ChannelPromise;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v2, v3, v4);
return;
}
public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise)>(v2);
return;
}
public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v2);
return;
}
public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise)>(v2);
return;
}
public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext read()>();
return;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
java.lang.IllegalStateException v6;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent v7;
io.netty.channel.ChannelPromise v3;
java.lang.Object v2;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
boolean v4, v5;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v2 instanceof io.netty.handler.codec.http.HttpRequest;
if v4 != 0 goto label1;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
return;
label1:
v5 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: boolean upgradeRequested>;
if v5 == 0 goto label2;
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempting to write HTTP request with upgrade in progress");
interfaceinvoke v3.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v6);
return;
label2:
v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: boolean upgradeRequested> = 1;
specialinvoke v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: void setUpgradeRequestHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest)>(v1, v2);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
v7 = <io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_ISSUED>;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v7);
return;
}
public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext flush()>();
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpObject, java.util.List) throws java.lang.Exception
{
java.lang.Throwable v28;
java.lang.IllegalStateException v22, v5;
io.netty.handler.codec.http.HttpHeaders v16;
io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec v24, v27;
io.netty.util.AsciiString v17;
java.lang.AssertionError v15;
io.netty.handler.codec.http.HttpObject v2;
io.netty.channel.ChannelHandlerContext v1;
int v14;
java.lang.String v18, v23;
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec v19, v25;
boolean v11, v12, v13, v21, v4, v6, v9;
java.lang.CharSequence v20;
io.netty.handler.codec.http.HttpResponseStatus v7, v8;
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent v10, v26;
java.util.List v3;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.HttpObject;
v3 := @parameter2: java.util.List;
label01:
v4 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: boolean upgradeRequested>;
if v4 != 0 goto label02;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Read HTTP response without requesting protocol switch");
throw v5;
label02:
v6 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v6 == 0 goto label04;
v7 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS>;
v8 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v9 = virtualinvoke v7.<io.netty.handler.codec.http.HttpResponseStatus: boolean equals(java.lang.Object)>(v8);
if v9 != 0 goto label04;
v10 = <io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_REJECTED>;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v10);
staticinvoke <io.netty.handler.codec.http.HttpClientUpgradeHandler: void removeThisHandler(io.netty.channel.ChannelHandlerContext)>(v1);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)>(v2);
label03:
return;
label04:
v11 = v2 instanceof io.netty.handler.codec.http.FullHttpResponse;
if v11 == 0 goto label05;
interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retain()>();
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v2);
goto label09;
label05:
specialinvoke v0.<io.netty.handler.codec.http.HttpObjectAggregator: void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List)>(v1, v2, v3);
v12 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v12 == 0 goto label07;
label06:
return;
label07:
v13 = <io.netty.handler.codec.http.HttpClientUpgradeHandler: boolean $assertionsDisabled>;
if v13 != 0 goto label08;
v14 = interfaceinvoke v3.<java.util.List: int size()>();
if v14 == 1 goto label08;
v15 = new java.lang.AssertionError;
specialinvoke v15.<java.lang.AssertionError: void <init>()>();
throw v15;
label08:
interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(0);
label09:
v16 = interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v17 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v18 = virtualinvoke v16.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v17);
if v18 == null goto label10;
v19 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec>;
v20 = interfaceinvoke v19.<io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec: java.lang.CharSequence protocol()>();
v21 = staticinvoke <io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>(v20, v18);
if v21 != 0 goto label10;
v22 = new java.lang.IllegalStateException;
v23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Switching Protocols response with unexpected UPGRADE protocol: \u0001");
specialinvoke v22.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v23);
throw v22;
label10:
v24 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec>;
interfaceinvoke v24.<io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec: void prepareUpgradeFrom(io.netty.channel.ChannelHandlerContext)>(v1);
v25 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec>;
interfaceinvoke v25.<io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec: void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse)>(v1, v2);
v26 = <io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_SUCCESSFUL>;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v26);
v27 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec>;
interfaceinvoke v27.<io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec: void upgradeFrom(io.netty.channel.ChannelHandlerContext)>(v1);
interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpResponse: boolean release()>();
interfaceinvoke v3.<java.util.List: void clear()>();
staticinvoke <io.netty.handler.codec.http.HttpClientUpgradeHandler: void removeThisHandler(io.netty.channel.ChannelHandlerContext)>(v1);
label11:
goto label13;
label12:
v28 := @caughtexception;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v28);
staticinvoke <io.netty.handler.codec.http.HttpClientUpgradeHandler: void removeThisHandler(io.netty.channel.ChannelHandlerContext)>(v1);
label13:
return;
catch java.lang.Throwable from label01 to label03 with label12;
catch java.lang.Throwable from label04 to label06 with label12;
catch java.lang.Throwable from label07 to label11 with label12;
}
private static void removeThisHandler(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v0;
io.netty.channel.ChannelPipeline v1;
java.lang.String v2;
v0 := @parameter0: io.netty.channel.ChannelHandlerContext;
v1 = interfaceinvoke v0.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v2 = interfaceinvoke v0.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
interfaceinvoke v1.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler remove(java.lang.String)>(v2);
return;
}
private void setUpgradeRequestHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpRequest)
{
io.netty.handler.codec.http.HttpHeaders v15, v3;
io.netty.util.AsciiString v14, v16, v4;
io.netty.channel.ChannelHandlerContext v1;
java.lang.String v17;
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec v5, v8;
java.util.LinkedHashSet v7;
boolean v12;
io.netty.handler.codec.http.HttpRequest v2;
java.lang.CharSequence v6;
java.util.Iterator v11;
java.util.Collection v9;
java.lang.Object v13;
java.lang.StringBuilder v10;
io.netty.handler.codec.http.HttpClientUpgradeHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpClientUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.HttpRequest;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v5 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec: java.lang.CharSequence protocol()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v4, v6);
v7 = new java.util.LinkedHashSet;
specialinvoke v7.<java.util.LinkedHashSet: void <init>(int)>(2);
v8 = v0.<io.netty.handler.codec.http.HttpClientUpgradeHandler: io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec>;
v9 = interfaceinvoke v8.<io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec: java.util.Collection setUpgradeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest)>(v1, v2);
interfaceinvoke v7.<java.util.Set: boolean addAll(java.util.Collection)>(v9);
v10 = new java.lang.StringBuilder;
specialinvoke v10.<java.lang.StringBuilder: void <init>()>();
v11 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label1:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label2;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(v13);
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
goto label1;
label2:
v14 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(v14);
v15 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v16 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v17 = virtualinvoke v10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v15.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v16, v17);
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http/HttpClientUpgradeHandler;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http.HttpClientUpgradeHandler: boolean $assertionsDisabled> = v2;
return;
}
}