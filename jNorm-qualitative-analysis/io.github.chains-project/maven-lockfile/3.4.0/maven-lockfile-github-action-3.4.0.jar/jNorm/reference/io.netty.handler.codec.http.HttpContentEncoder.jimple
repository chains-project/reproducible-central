public abstract class io.netty.handler.codec.http.HttpContentEncoder extends io.netty.handler.codec.MessageToMessageCodec
{
private static final java.lang.CharSequence ZERO_LENGTH_HEAD;
private static final java.lang.CharSequence ZERO_LENGTH_CONNECT;
private final java.util.Queue acceptEncodingQueue;
private io.netty.channel.embedded.EmbeddedChannel encoder;
private io.netty.handler.codec.http.HttpContentEncoder$State state;
static final boolean $assertionsDisabled;
public void <init>()
{
io.netty.handler.codec.http.HttpContentEncoder v0;
io.netty.handler.codec.http.HttpContentEncoder$State v2;
java.util.ArrayDeque v1;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageCodec: void <init>()>();
v1 = new java.util.ArrayDeque;
specialinvoke v1.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.handler.codec.http.HttpContentEncoder: java.util.Queue acceptEncodingQueue> = v1;
v2 = <io.netty.handler.codec.http.HttpContentEncoder$State: io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS>;
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state> = v2;
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
java.lang.Object v1;
io.netty.handler.codec.http.HttpContentEncoder v0;
boolean v2, v3, v4;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.http.HttpContent;
if v2 != 0 goto label1;
v3 = v1 instanceof io.netty.handler.codec.http.HttpResponse;
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpRequest, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v4;
io.netty.util.AsciiString v5;
io.netty.channel.ChannelHandlerContext v1;
int v7;
boolean v12, v14;
io.netty.handler.codec.http.HttpRequest v2;
java.lang.CharSequence v8;
io.netty.handler.codec.http.HttpMethod v10, v11, v13;
java.util.List v3, v6;
java.lang.Object v16, v9;
io.netty.handler.codec.http.HttpContentEncoder v0;
java.util.Queue v15;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.HttpRequest;
v3 := @parameter2: java.util.List;
v4 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v5 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString ACCEPT_ENCODING>;
v6 = virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.CharSequence)>(v5);
v7 = interfaceinvoke v6.<java.util.List: int size()>();
lookupswitch(v7)
{
case 0: goto label1;
case 1: goto label2;
default: goto label3;
};
label1:
v8 = <io.netty.handler.codec.http.HttpContentDecoder: java.lang.String IDENTITY>;
goto label4;
label2:
v9 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(0);
goto label4;
label3:
v9 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.CharSequence join(java.lang.CharSequence,java.lang.Iterable)>(",", v6);
label4:
v10 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpMethod method()>();
v11 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod HEAD>;
v12 = virtualinvoke v11.<io.netty.handler.codec.http.HttpMethod: boolean equals(java.lang.Object)>(v10);
if v12 == 0 goto label5;
v9 = <io.netty.handler.codec.http.HttpContentEncoder: java.lang.CharSequence ZERO_LENGTH_HEAD>;
goto label6;
label5:
v13 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod CONNECT>;
v14 = virtualinvoke v13.<io.netty.handler.codec.http.HttpMethod: boolean equals(java.lang.Object)>(v10);
if v14 == 0 goto label6;
v9 = <io.netty.handler.codec.http.HttpContentEncoder: java.lang.CharSequence ZERO_LENGTH_CONNECT>;
label6:
v15 = v0.<io.netty.handler.codec.http.HttpContentEncoder: java.util.Queue acceptEncodingQueue>;
interfaceinvoke v15.<java.util.Queue: boolean add(java.lang.Object)>(v9);
v16 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v16);
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpObject, java.util.List) throws java.lang.Exception
{
java.lang.IllegalStateException v22;
io.netty.handler.codec.http.HttpHeaders v37, v43, v44, v45, v47;
io.netty.util.AsciiString v38, v46, v48, v49;
io.netty.handler.codec.http.HttpObject v2;
io.netty.handler.codec.http.HttpStatusClass v18, v19;
int[] v8;
boolean v12, v24, v29, v4, v5, v52, v53, v56, v6, v7;
io.netty.handler.codec.http.HttpResponseStatus v15, v17, v42;
java.util.List v3;
io.netty.handler.codec.http.HttpContentEncoder$State v27, v35, v51, v54, v57, v9;
io.netty.handler.codec.http.DefaultHttpResponse v40;
io.netty.handler.codec.http.HttpResponse v58;
io.netty.handler.codec.http.HttpContentEncoder v0;
io.netty.handler.codec.http.HttpContentEncoder$Result v32;
java.util.Queue v20;
io.netty.handler.codec.http.HttpVersion v23, v41;
java.lang.AssertionError v14;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v28;
int v10, v11, v16;
java.lang.String v31, v39;
io.netty.channel.embedded.EmbeddedChannel v13, v36;
java.lang.Object v21, v25, v26, v30, v33, v34, v50, v55;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.HttpObject;
v3 := @parameter2: java.util.List;
v4 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v4 == 0 goto label01;
v5 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v5 == 0 goto label01;
v6 = 1;
goto label02;
label01:
v6 = 0;
label02:
v7 = v6;
v8 = <io.netty.handler.codec.http.HttpContentEncoder$1: int[] $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State>;
v9 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state>;
v10 = virtualinvoke v9.<io.netty.handler.codec.http.HttpContentEncoder$State: int ordinal()>();
v11 = v8[v10];
tableswitch(v11)
{
case 1: goto label03;
case 2: goto label12;
case 3: goto label13;
default: goto label14;
};
label03:
staticinvoke <io.netty.handler.codec.http.HttpContentEncoder: void ensureHeaders(io.netty.handler.codec.http.HttpObject)>(v2);
v12 = <io.netty.handler.codec.http.HttpContentEncoder: boolean $assertionsDisabled>;
if v12 != 0 goto label04;
v13 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder>;
if v13 == null goto label04;
v14 = new java.lang.AssertionError;
specialinvoke v14.<java.lang.AssertionError: void <init>()>();
throw v14;
label04:
v15 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v16 = virtualinvoke v15.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
v17 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v18 = virtualinvoke v17.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpStatusClass codeClass()>();
v19 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL>;
if v18 == v19 goto label05;
v20 = v0.<io.netty.handler.codec.http.HttpContentEncoder: java.util.Queue acceptEncodingQueue>;
v21 = interfaceinvoke v20.<java.util.Queue: java.lang.Object poll()>();
if v21 != null goto label05;
v22 = new java.lang.IllegalStateException;
specialinvoke v22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot send more responses than requests");
throw v22;
label05:
v23 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpVersion protocolVersion()>();
v24 = staticinvoke <io.netty.handler.codec.http.HttpContentEncoder: boolean isPassthru(io.netty.handler.codec.http.HttpVersion,int,java.lang.CharSequence)>(v23, v16, v21);
if v24 == 0 goto label07;
if v7 == 0 goto label06;
v25 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v25);
goto label14;
label06:
v26 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v26);
v27 = <io.netty.handler.codec.http.HttpContentEncoder$State: io.netty.handler.codec.http.HttpContentEncoder$State PASS_THROUGH>;
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state> = v27;
goto label14;
label07:
if v7 == 0 goto label08;
v28 = interfaceinvoke v58.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
v29 = virtualinvoke v28.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v29 != 0 goto label08;
v30 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v30);
goto label14;
label08:
v31 = virtualinvoke v21.<java.lang.Object: java.lang.String toString()>();
v32 = virtualinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse,java.lang.String)>(v2, v31);
if v32 != null goto label10;
if v7 == 0 goto label09;
v33 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v33);
goto label14;
label09:
v34 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v34);
v35 = <io.netty.handler.codec.http.HttpContentEncoder$State: io.netty.handler.codec.http.HttpContentEncoder$State PASS_THROUGH>;
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state> = v35;
goto label14;
label10:
v36 = virtualinvoke v32.<io.netty.handler.codec.http.HttpContentEncoder$Result: io.netty.channel.embedded.EmbeddedChannel contentEncoder()>();
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder> = v36;
v37 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v38 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_ENCODING>;
v39 = virtualinvoke v32.<io.netty.handler.codec.http.HttpContentEncoder$Result: java.lang.String targetContentEncoding()>();
virtualinvoke v37.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v38, v39);
if v7 == 0 goto label11;
v40 = new io.netty.handler.codec.http.DefaultHttpResponse;
v41 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpVersion protocolVersion()>();
v42 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
specialinvoke v40.<io.netty.handler.codec.http.DefaultHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)>(v41, v42);
v43 = interfaceinvoke v40.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v44 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v43.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders)>(v44);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v40);
staticinvoke <io.netty.handler.codec.http.HttpContentEncoder: void ensureContent(io.netty.handler.codec.http.HttpObject)>(v2);
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void encodeFullResponse(io.netty.handler.codec.http.HttpResponse,io.netty.handler.codec.http.HttpContent,java.util.List)>(v40, v58, v3);
goto label14;
label11:
v45 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v46 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
virtualinvoke v45.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v46);
v47 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v48 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
v49 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString CHUNKED>;
virtualinvoke v47.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v48, v49);
v50 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v50);
v51 = <io.netty.handler.codec.http.HttpContentEncoder$State: io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_CONTENT>;
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state> = v51;
v52 = v2 instanceof io.netty.handler.codec.http.HttpContent;
if v52 == 0 goto label14;
label12:
staticinvoke <io.netty.handler.codec.http.HttpContentEncoder: void ensureContent(io.netty.handler.codec.http.HttpObject)>(v2);
v53 = specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: boolean encodeContent(io.netty.handler.codec.http.HttpContent,java.util.List)>(v2, v3);
if v53 == 0 goto label14;
v54 = <io.netty.handler.codec.http.HttpContentEncoder$State: io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS>;
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state> = v54;
goto label14;
label13:
staticinvoke <io.netty.handler.codec.http.HttpContentEncoder: void ensureContent(io.netty.handler.codec.http.HttpObject)>(v2);
v55 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v55);
v56 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v56 == 0 goto label14;
v57 = <io.netty.handler.codec.http.HttpContentEncoder$State: io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS>;
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.handler.codec.http.HttpContentEncoder$State state> = v57;
label14:
return;
}
private void encodeFullResponse(io.netty.handler.codec.http.HttpResponse, io.netty.handler.codec.http.HttpContent, java.util.List)
{
io.netty.handler.codec.http.HttpHeaders v13;
io.netty.util.AsciiString v14, v15;
io.netty.buffer.ByteBuf v11;
int v12, v4, v6, v7, v8;
boolean v10, v5;
io.netty.handler.codec.http.HttpContent v2;
java.util.List v3;
io.netty.handler.codec.http.HttpResponse v1;
java.lang.Object v9;
io.netty.handler.codec.http.HttpContentEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 := @parameter1: io.netty.handler.codec.http.HttpContent;
v3 := @parameter2: java.util.List;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: boolean encodeContent(io.netty.handler.codec.http.HttpContent,java.util.List)>(v2, v3);
v5 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage)>(v1);
if v5 == 0 goto label4;
v6 = 0;
v7 = v4;
label1:
v8 = interfaceinvoke v3.<java.util.List: int size()>();
if v7 >= v8 goto label3;
v9 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v7);
v10 = v9 instanceof io.netty.handler.codec.http.HttpContent;
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<io.netty.handler.codec.http.HttpContent: io.netty.buffer.ByteBuf content()>();
v12 = virtualinvoke v11.<io.netty.buffer.ByteBuf: int readableBytes()>();
v6 = v6 + v12;
label2:
v7 = v7 + 1;
goto label1;
label3:
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v1, v6);
goto label5;
label4:
v13 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v14 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
v15 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString CHUNKED>;
virtualinvoke v13.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v14, v15);
label5:
return;
}
private static boolean isPassthru(io.netty.handler.codec.http.HttpVersion, int, java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpVersion v0, v5;
java.lang.CharSequence v2, v3, v4;
int v1;
boolean v6;
v0 := @parameter0: io.netty.handler.codec.http.HttpVersion;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.CharSequence;
if v1 < 200 goto label2;
if v1 == 204 goto label2;
if v1 == 304 goto label2;
v3 = <io.netty.handler.codec.http.HttpContentEncoder: java.lang.CharSequence ZERO_LENGTH_HEAD>;
if v2 == v3 goto label2;
v4 = <io.netty.handler.codec.http.HttpContentEncoder: java.lang.CharSequence ZERO_LENGTH_CONNECT>;
if v2 != v4 goto label1;
if v1 == 200 goto label2;
label1:
v5 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_0>;
if v0 != v5 goto label3;
label2:
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
}
private static void ensureHeaders(io.netty.handler.codec.http.HttpObject)
{
java.lang.IllegalStateException v2;
io.netty.handler.codec.http.HttpObject v0;
java.lang.Class v3, v5;
java.lang.String v4, v6, v7;
boolean v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpObject;
v1 = v0 instanceof io.netty.handler.codec.http.HttpResponse;
if v1 != 0 goto label1;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v5 = class "Lio/netty/handler/codec/http/HttpResponse;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getSimpleName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected message type: \u0001 (expected: \u0001)");
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v2;
label1:
return;
}
private static void ensureContent(io.netty.handler.codec.http.HttpObject)
{
java.lang.IllegalStateException v2;
io.netty.handler.codec.http.HttpObject v0;
java.lang.Class v3, v5;
java.lang.String v4, v6, v7;
boolean v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpObject;
v1 = v0 instanceof io.netty.handler.codec.http.HttpContent;
if v1 != 0 goto label1;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v5 = class "Lio/netty/handler/codec/http/HttpContent;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getSimpleName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected message type: \u0001 (expected: \u0001)");
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v2;
label1:
return;
}
private boolean encodeContent(io.netty.handler.codec.http.HttpContent, java.util.List)
{
io.netty.handler.codec.http.HttpContent v1;
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.LastHttpContent v7;
io.netty.handler.codec.DecoderResult v9;
java.util.List v2;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.http.ComposedLastHttpContent v8;
io.netty.handler.codec.http.HttpContentEncoder v0;
boolean v4, v6;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpContent;
v2 := @parameter1: java.util.List;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpContent: io.netty.buffer.ByteBuf content()>();
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void encode(io.netty.buffer.ByteBuf,java.util.List)>(v3, v2);
v4 = v1 instanceof io.netty.handler.codec.http.LastHttpContent;
if v4 == 0 goto label3;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void finishEncode(java.util.List)>(v2);
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.LastHttpContent: io.netty.handler.codec.http.HttpHeaders trailingHeaders()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.http.HttpHeaders: boolean isEmpty()>();
if v6 == 0 goto label1;
v7 = <io.netty.handler.codec.http.LastHttpContent: io.netty.handler.codec.http.LastHttpContent EMPTY_LAST_CONTENT>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v7);
goto label2;
label1:
v8 = new io.netty.handler.codec.http.ComposedLastHttpContent;
v9 = <io.netty.handler.codec.DecoderResult: io.netty.handler.codec.DecoderResult SUCCESS>;
specialinvoke v8.<io.netty.handler.codec.http.ComposedLastHttpContent: void <init>(io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.DecoderResult)>(v5, v9);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v8);
label2:
return 1;
label3:
return 0;
}
protected abstract io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse, java.lang.String) throws java.lang.Exception;
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.HttpContentEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void cleanupSafely(io.netty.channel.ChannelHandlerContext)>(v1);
specialinvoke v0.<io.netty.handler.codec.MessageToMessageCodec: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.HttpContentEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void cleanupSafely(io.netty.channel.ChannelHandlerContext)>(v1);
specialinvoke v0.<io.netty.handler.codec.MessageToMessageCodec: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
private void cleanup()
{
io.netty.handler.codec.http.HttpContentEncoder v0;
io.netty.channel.embedded.EmbeddedChannel v1, v2;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder>;
virtualinvoke v2.<io.netty.channel.embedded.EmbeddedChannel: boolean finishAndReleaseAll()>();
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder> = null;
label1:
return;
}
private void cleanupSafely(io.netty.channel.ChannelHandlerContext)
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.HttpContentEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void cleanup()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v2);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void encode(io.netty.buffer.ByteBuf, java.util.List)
{
java.util.List v2;
java.lang.Object[] v4;
io.netty.buffer.ByteBuf v1, v5;
io.netty.channel.embedded.EmbeddedChannel v3;
io.netty.handler.codec.http.HttpContentEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: java.util.List;
v3 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder>;
v4 = newarray (java.lang.Object)[1];
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
v4[0] = v5;
virtualinvoke v3.<io.netty.channel.embedded.EmbeddedChannel: boolean writeOutbound(java.lang.Object[])>(v4);
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void fetchEncoderOutput(java.util.List)>(v2);
return;
}
private void finishEncode(java.util.List)
{
java.util.List v1;
io.netty.channel.embedded.EmbeddedChannel v2;
io.netty.handler.codec.http.HttpContentEncoder v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: java.util.List;
v2 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder>;
v3 = virtualinvoke v2.<io.netty.channel.embedded.EmbeddedChannel: boolean finish()>();
if v3 == 0 goto label1;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void fetchEncoderOutput(java.util.List)>(v1);
label1:
v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder> = null;
return;
}
private void fetchEncoderOutput(java.util.List)
{
io.netty.handler.codec.http.DefaultHttpContent v5;
java.util.List v1;
io.netty.channel.embedded.EmbeddedChannel v2;
java.lang.Object v3;
io.netty.handler.codec.http.HttpContentEncoder v0;
boolean v4;
v0 := @this: io.netty.handler.codec.http.HttpContentEncoder;
v1 := @parameter0: java.util.List;
label1:
v2 = v0.<io.netty.handler.codec.http.HttpContentEncoder: io.netty.channel.embedded.EmbeddedChannel encoder>;
v3 = virtualinvoke v2.<io.netty.channel.embedded.EmbeddedChannel: java.lang.Object readOutbound()>();
if v3 == null goto label3;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 != 0 goto label2;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
goto label1;
label2:
v5 = new io.netty.handler.codec.http.DefaultHttpContent;
specialinvoke v5.<io.netty.handler.codec.http.DefaultHttpContent: void <init>(io.netty.buffer.ByteBuf)>(v3);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label3:
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http/HttpContentEncoder;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http.HttpContentEncoder: boolean $assertionsDisabled> = v2;
<io.netty.handler.codec.http.HttpContentEncoder: java.lang.CharSequence ZERO_LENGTH_HEAD> = "HEAD";
<io.netty.handler.codec.http.HttpContentEncoder: java.lang.CharSequence ZERO_LENGTH_CONNECT> = "CONNECT";
return;
}
}