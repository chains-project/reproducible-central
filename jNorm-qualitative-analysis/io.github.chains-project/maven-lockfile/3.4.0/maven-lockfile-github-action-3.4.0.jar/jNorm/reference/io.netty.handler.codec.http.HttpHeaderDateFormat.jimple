public final class io.netty.handler.codec.http.HttpHeaderDateFormat extends java.text.SimpleDateFormat
{
private static final long serialVersionUID;
private final java.text.SimpleDateFormat format1;
private final java.text.SimpleDateFormat format2;
private static final io.netty.util.concurrent.FastThreadLocal dateFormatThreadLocal;
public static io.netty.handler.codec.http.HttpHeaderDateFormat get()
{
java.lang.Object v1;
io.netty.util.concurrent.FastThreadLocal v0;
v0 = <io.netty.handler.codec.http.HttpHeaderDateFormat: io.netty.util.concurrent.FastThreadLocal dateFormatThreadLocal>;
v1 = virtualinvoke v0.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
return v1;
}
private void <init>()
{
java.util.Locale v1;
java.util.TimeZone v4;
io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1 v2;
io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2 v3;
io.netty.handler.codec.http.HttpHeaderDateFormat v0;
v0 := @this: io.netty.handler.codec.http.HttpHeaderDateFormat;
v1 = <java.util.Locale: java.util.Locale ENGLISH>;
specialinvoke v0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("E, dd MMM yyyy HH:mm:ss z", v1);
v2 = new io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1;
specialinvoke v2.<io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1: void <init>()>();
v0.<io.netty.handler.codec.http.HttpHeaderDateFormat: java.text.SimpleDateFormat format1> = v2;
v3 = new io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2;
specialinvoke v3.<io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2: void <init>()>();
v0.<io.netty.handler.codec.http.HttpHeaderDateFormat: java.text.SimpleDateFormat format2> = v3;
v4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaderDateFormat: void setTimeZone(java.util.TimeZone)>(v4);
return;
}
public java.util.Date parse(java.lang.String, java.text.ParsePosition)
{
java.util.Date v3;
java.text.ParsePosition v2;
java.text.SimpleDateFormat v4, v5;
java.lang.String v1;
io.netty.handler.codec.http.HttpHeaderDateFormat v0;
v0 := @this: io.netty.handler.codec.http.HttpHeaderDateFormat;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.text.ParsePosition;
v3 = specialinvoke v0.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(v1, v2);
if v3 != null goto label1;
v4 = v0.<io.netty.handler.codec.http.HttpHeaderDateFormat: java.text.SimpleDateFormat format1>;
v3 = virtualinvoke v4.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(v1, v2);
if v3 != null goto label1;
v5 = v0.<io.netty.handler.codec.http.HttpHeaderDateFormat: java.text.SimpleDateFormat format2>;
v3 = virtualinvoke v5.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(v1, v2);
label1:
return v3;
}
static void <clinit>()
{
io.netty.handler.codec.http.HttpHeaderDateFormat$1 v0;
v0 = new io.netty.handler.codec.http.HttpHeaderDateFormat$1;
specialinvoke v0.<io.netty.handler.codec.http.HttpHeaderDateFormat$1: void <init>()>();
<io.netty.handler.codec.http.HttpHeaderDateFormat: io.netty.util.concurrent.FastThreadLocal dateFormatThreadLocal> = v0;
return;
}
}