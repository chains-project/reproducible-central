final class io.netty.handler.codec.http.HttpHeadersEncoder extends java.lang.Object
{
private static final int COLON_AND_SPACE_SHORT;
private void <init>()
{
io.netty.handler.codec.http.HttpHeadersEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpHeadersEncoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void encoderHeader(java.lang.CharSequence, java.lang.CharSequence, io.netty.buffer.ByteBuf)
{
java.lang.CharSequence v0, v1;
io.netty.buffer.ByteBuf v2;
int v10, v11, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: io.netty.buffer.ByteBuf;
v3 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
v4 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v5 = v3 + v4;
v6 = v5 + 4;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf ensureWritable(int)>(v6);
v7 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int writerIndex()>();
staticinvoke <io.netty.handler.codec.http.HttpHeadersEncoder: void writeAscii(io.netty.buffer.ByteBuf,int,java.lang.CharSequence)>(v2, v7, v0);
v8 = v7 + v3;
staticinvoke <io.netty.buffer.ByteBufUtil: io.netty.buffer.ByteBuf setShortBE(io.netty.buffer.ByteBuf,int,int)>(v2, v8, 14880);
v9 = v8 + 2;
staticinvoke <io.netty.handler.codec.http.HttpHeadersEncoder: void writeAscii(io.netty.buffer.ByteBuf,int,java.lang.CharSequence)>(v2, v9, v1);
v10 = v9 + v4;
staticinvoke <io.netty.buffer.ByteBufUtil: io.netty.buffer.ByteBuf setShortBE(io.netty.buffer.ByteBuf,int,int)>(v2, v10, 3338);
v11 = v10 + 2;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writerIndex(int)>(v11);
return;
}
private static void writeAscii(io.netty.buffer.ByteBuf, int, java.lang.CharSequence)
{
io.netty.buffer.ByteBuf v0;
java.lang.CharSequence v2;
java.nio.charset.Charset v5;
int v1, v4;
boolean v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.CharSequence;
v3 = v2 instanceof io.netty.util.AsciiString;
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<java.lang.CharSequence: int length()>();
staticinvoke <io.netty.buffer.ByteBufUtil: void copy(io.netty.util.AsciiString,int,io.netty.buffer.ByteBuf,int,int)>(v2, 0, v0, v1, v4);
goto label2;
label1:
v5 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
virtualinvoke v0.<io.netty.buffer.ByteBuf: int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset)>(v1, v2, v5);
label2:
return;
}
}