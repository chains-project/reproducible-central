class io.netty.handler.codec.http.HttpObjectAggregator$2 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.channel.ChannelHandlerContext val$ctx;
final io.netty.handler.codec.http.HttpObjectAggregator this$0;
void <init>(io.netty.handler.codec.http.HttpObjectAggregator, io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http.HttpObjectAggregator v1;
io.netty.handler.codec.http.HttpObjectAggregator$2 v0;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator$2;
v1 := @parameter0: io.netty.handler.codec.http.HttpObjectAggregator;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.http.HttpObjectAggregator$2: io.netty.handler.codec.http.HttpObjectAggregator this$0> = v1;
v0.<io.netty.handler.codec.http.HttpObjectAggregator$2: io.netty.channel.ChannelHandlerContext val$ctx> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture) throws java.lang.Exception
{
java.lang.Throwable v4;
io.netty.channel.ChannelHandlerContext v5;
io.netty.handler.codec.http.HttpObjectAggregator$2 v0;
io.netty.util.internal.logging.InternalLogger v3;
boolean v2;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator$2;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isSuccess()>();
if v2 != 0 goto label1;
v3 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.util.internal.logging.InternalLogger logger>;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Failed to send a 413 Request Entity Too Large.", v4);
v5 = v0.<io.netty.handler.codec.http.HttpObjectAggregator$2: io.netty.channel.ChannelHandlerContext val$ctx>;
interfaceinvoke v5.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close()>();
label1:
return;
}
}