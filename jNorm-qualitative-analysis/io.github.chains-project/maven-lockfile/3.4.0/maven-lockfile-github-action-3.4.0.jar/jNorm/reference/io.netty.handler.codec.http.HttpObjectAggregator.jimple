public class io.netty.handler.codec.http.HttpObjectAggregator extends io.netty.handler.codec.MessageAggregator
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final io.netty.handler.codec.http.FullHttpResponse CONTINUE;
private static final io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED;
private static final io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE;
private static final io.netty.handler.codec.http.FullHttpResponse TOO_LARGE;
private final boolean closeOnExpectationFailed;
static final boolean $assertionsDisabled;
public void <init>(int)
{
int v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.http.HttpObjectAggregator: void <init>(int,boolean)>(v1, 0);
return;
}
public void <init>(int, boolean)
{
int v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void <init>(int)>(v1);
v0.<io.netty.handler.codec.http.HttpObjectAggregator: boolean closeOnExpectationFailed> = v2;
return;
}
protected boolean isStartMessage(io.netty.handler.codec.http.HttpObject) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpObject v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpObject;
v2 = v1 instanceof io.netty.handler.codec.http.HttpMessage;
return v2;
}
protected boolean isContentMessage(io.netty.handler.codec.http.HttpObject) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpObject v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpObject;
v2 = v1 instanceof io.netty.handler.codec.http.HttpContent;
return v2;
}
protected boolean isLastContentMessage(io.netty.handler.codec.http.HttpContent) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpContent v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpContent;
v2 = v1 instanceof io.netty.handler.codec.http.LastHttpContent;
return v2;
}
protected boolean isAggregated(io.netty.handler.codec.http.HttpObject) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpObject v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpObject;
v2 = v1 instanceof io.netty.handler.codec.http.FullHttpMessage;
return v2;
}
protected boolean isContentLengthInvalid(io.netty.handler.codec.http.HttpMessage, int)
{
byte v4;
io.netty.handler.codec.http.HttpMessage v1;
int v2;
java.lang.NumberFormatException v6;
long v3;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v5;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v2 := @parameter1: int;
label1:
v3 = staticinvoke <io.netty.handler.codec.http.HttpUtil: long getContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v1, -1L);
v4 = v3 cmp v2;
if v4 <= 0 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
label4:
v6 := @caughtexception;
return 0;
catch java.lang.NumberFormatException from label1 to label3 with label4;
}
private static java.lang.Object continueResponse(io.netty.handler.codec.http.HttpMessage, int, io.netty.channel.ChannelPipeline)
{
io.netty.handler.codec.http.HttpExpectationFailedEvent v12, v4;
io.netty.handler.codec.http.HttpMessage v0;
long v8;
io.netty.channel.ChannelPipeline v2;
io.netty.handler.codec.http.FullHttpResponse v10, v11, v13, v14, v5, v6;
byte v9;
int v1;
boolean v3, v7;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: int;
v2 := @parameter2: io.netty.channel.ChannelPipeline;
v3 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isUnsupportedExpectation(io.netty.handler.codec.http.HttpMessage)>(v0);
if v3 == 0 goto label1;
v4 = <io.netty.handler.codec.http.HttpExpectationFailedEvent: io.netty.handler.codec.http.HttpExpectationFailedEvent INSTANCE>;
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object)>(v4);
v5 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
return v6;
label1:
v7 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage)>(v0);
if v7 == 0 goto label3;
v8 = staticinvoke <io.netty.handler.codec.http.HttpUtil: long getContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v0, -1L);
v9 = v8 cmp v1;
if v9 > 0 goto label2;
v10 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse CONTINUE>;
v11 = interfaceinvoke v10.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
return v11;
label2:
v12 = <io.netty.handler.codec.http.HttpExpectationFailedEvent: io.netty.handler.codec.http.HttpExpectationFailedEvent INSTANCE>;
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object)>(v12);
v13 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE>;
v14 = interfaceinvoke v13.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
return v14;
label3:
return null;
}
protected java.lang.Object newContinueResponse(io.netty.handler.codec.http.HttpMessage, int, io.netty.channel.ChannelPipeline)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.HttpMessage v1;
int v2;
io.netty.util.AsciiString v6;
java.lang.Object v4;
io.netty.channel.ChannelPipeline v3;
io.netty.handler.codec.http.HttpObjectAggregator v0;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.channel.ChannelPipeline;
v4 = staticinvoke <io.netty.handler.codec.http.HttpObjectAggregator: java.lang.Object continueResponse(io.netty.handler.codec.http.HttpMessage,int,io.netty.channel.ChannelPipeline)>(v1, v2, v3);
if v4 == null goto label1;
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v6 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString EXPECT>;
virtualinvoke v5.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v6);
label1:
return v4;
}
protected boolean closeAfterContinueResponse(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2, v3, v4;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http.HttpObjectAggregator: boolean closeOnExpectationFailed>;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpObjectAggregator: boolean ignoreContentAfterContinueResponse(java.lang.Object)>(v1);
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
protected boolean ignoreContentAfterContinueResponse(java.lang.Object)
{
io.netty.handler.codec.http.HttpStatusClass v4, v5;
io.netty.handler.codec.http.HttpResponseStatus v3;
java.lang.Object v1;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2, v6;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.http.HttpResponse;
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpStatusClass codeClass()>();
v5 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass CLIENT_ERROR>;
v6 = virtualinvoke v4.<io.netty.handler.codec.http.HttpStatusClass: boolean equals(java.lang.Object)>(v5);
return v6;
label1:
return 0;
}
protected io.netty.handler.codec.http.FullHttpMessage beginAggregation(io.netty.handler.codec.http.HttpMessage, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpMessage v1;
java.lang.Error v11;
java.lang.AssertionError v5;
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest v7;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse v10;
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage v8;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v3, v4, v6, v9;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = <io.netty.handler.codec.http.HttpObjectAggregator: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
v4 = v1 instanceof io.netty.handler.codec.http.FullHttpMessage;
if v4 == 0 goto label1;
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label1:
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage,boolean)>(v1, 0);
v6 = v1 instanceof io.netty.handler.codec.http.HttpRequest;
if v6 == 0 goto label2;
v7 = new io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest;
specialinvoke v7.<io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest: void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders)>(v1, v2, null);
v8 = v7;
goto label4;
label2:
v9 = v1 instanceof io.netty.handler.codec.http.HttpResponse;
if v9 == 0 goto label3;
v10 = new io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse;
specialinvoke v10.<io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpResponse,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders)>(v1, v2, null);
v8 = v10;
goto label4;
label3:
v11 = new java.lang.Error;
specialinvoke v11.<java.lang.Error: void <init>()>();
throw v11;
label4:
return v8;
}
protected void aggregate(io.netty.handler.codec.http.FullHttpMessage, io.netty.handler.codec.http.HttpContent) throws java.lang.Exception
{
io.netty.handler.codec.http.FullHttpMessage v1;
io.netty.handler.codec.http.HttpContent v2;
io.netty.handler.codec.http.HttpHeaders v4;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpMessage;
v2 := @parameter1: io.netty.handler.codec.http.HttpContent;
v3 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<io.netty.handler.codec.http.LastHttpContent: io.netty.handler.codec.http.HttpHeaders trailingHeaders()>();
virtualinvoke v1.<io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage: void setTrailingHeaders(io.netty.handler.codec.http.HttpHeaders)>(v4);
label1:
return;
}
protected void finishAggregation(io.netty.handler.codec.http.FullHttpMessage) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.util.AsciiString v4;
io.netty.handler.codec.http.FullHttpMessage v1;
io.netty.buffer.ByteBuf v5;
int v6;
java.lang.String v7;
io.netty.handler.codec.http.HttpObjectAggregator v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpMessage;
v2 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage)>(v1);
if v2 != 0 goto label1;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpMessage: io.netty.buffer.ByteBuf content()>();
v6 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v6);
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v4, v7);
label1:
return;
}
protected void handleOversizedMessage(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpMessage) throws java.lang.Exception
{
java.lang.IllegalStateException v18;
io.netty.handler.codec.http.HttpMessage v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.TooLongHttpContentException v16;
java.lang.String v17;
boolean v15, v3, v4, v5, v6;
io.netty.channel.ChannelFuture v13, v9;
io.netty.handler.codec.http.FullHttpResponse v11, v12, v7, v8;
io.netty.handler.codec.http.HttpObjectAggregator$1 v10;
io.netty.handler.codec.http.HttpObjectAggregator$2 v14;
io.netty.handler.codec.http.HttpObjectAggregator v0;
v0 := @this: io.netty.handler.codec.http.HttpObjectAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.HttpMessage;
v3 = v2 instanceof io.netty.handler.codec.http.HttpRequest;
if v3 == 0 goto label3;
v4 = v2 instanceof io.netty.handler.codec.http.FullHttpMessage;
if v4 != 0 goto label1;
v5 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage)>(v2);
if v5 != 0 goto label2;
v6 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)>(v2);
if v6 != 0 goto label2;
label1:
v7 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE>;
v8 = interfaceinvoke v7.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v8);
v10 = new io.netty.handler.codec.http.HttpObjectAggregator$1;
specialinvoke v10.<io.netty.handler.codec.http.HttpObjectAggregator$1: void <init>(io.netty.handler.codec.http.HttpObjectAggregator,io.netty.channel.ChannelHandlerContext)>(v0, v1);
interfaceinvoke v9.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v10);
goto label5;
label2:
v11 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE>;
v12 = interfaceinvoke v11.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
v13 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v12);
v14 = new io.netty.handler.codec.http.HttpObjectAggregator$2;
specialinvoke v14.<io.netty.handler.codec.http.HttpObjectAggregator$2: void <init>(io.netty.handler.codec.http.HttpObjectAggregator,io.netty.channel.ChannelHandlerContext)>(v0, v1);
interfaceinvoke v13.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v14);
goto label5;
label3:
v15 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v15 == 0 goto label4;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close()>();
v16 = new io.netty.handler.codec.http.TooLongHttpContentException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.HttpMessage)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Response entity too large: \u0001");
specialinvoke v16.<io.netty.handler.codec.http.TooLongHttpContentException: void <init>(java.lang.String)>(v17);
throw v16;
label4:
v18 = new java.lang.IllegalStateException;
specialinvoke v18.<java.lang.IllegalStateException: void <init>()>();
throw v18;
label5:
return;
}
static void <clinit>()
{
io.netty.handler.codec.http.HttpHeaders v21, v25, v29, v33;
io.netty.util.AsciiString v22, v26, v30, v34, v35;
java.lang.Integer v23, v27, v31;
boolean v1, v2;
io.netty.handler.codec.http.HttpResponseStatus v10, v14, v18, v6;
io.netty.util.internal.logging.InternalLogger v3;
io.netty.handler.codec.http.DefaultFullHttpResponse v12, v16, v4, v8;
io.netty.handler.codec.http.HttpVersion v13, v17, v5, v9;
io.netty.buffer.ByteBuf v11, v15, v19, v7;
io.netty.handler.codec.http.FullHttpResponse v20, v24, v28, v32;
java.lang.Class v0;
v0 = class "Lio/netty/handler/codec/http/HttpObjectAggregator;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http.HttpObjectAggregator: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http/HttpObjectAggregator;");
<io.netty.handler.codec.http.HttpObjectAggregator: io.netty.util.internal.logging.InternalLogger logger> = v3;
v4 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v5 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v6 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus CONTINUE>;
v7 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v4.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v5, v6, v7);
<io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse CONTINUE> = v4;
v8 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v9 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v10 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus EXPECTATION_FAILED>;
v11 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v8.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v9, v10, v11);
<io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED> = v8;
v12 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v13 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v14 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE>;
v15 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v12.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v13, v14, v15);
<io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE> = v12;
v16 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v17 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v18 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE>;
v19 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v16.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v17, v18, v19);
<io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE> = v16;
v20 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED>;
v21 = interfaceinvoke v20.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v22 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
virtualinvoke v21.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v22, v23);
v24 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE>;
v25 = interfaceinvoke v24.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v26 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
virtualinvoke v25.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v26, v27);
v28 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE>;
v29 = interfaceinvoke v28.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v30 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v30, v31);
v32 = <io.netty.handler.codec.http.HttpObjectAggregator: io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE>;
v33 = interfaceinvoke v32.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v34 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v35 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString CLOSE>;
virtualinvoke v33.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v34, v35);
return;
}
}