public class io.netty.handler.codec.http.multipart.MemoryAttribute extends io.netty.handler.codec.http.multipart.AbstractMemoryHttpData implements io.netty.handler.codec.http.multipart.Attribute
{
public void <init>(java.lang.String)
{
java.lang.String v1;
java.nio.charset.Charset v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
v2 = <io.netty.handler.codec.http.HttpConstants: java.nio.charset.Charset DEFAULT_CHARSET>;
specialinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void <init>(java.lang.String,java.nio.charset.Charset)>(v1, v2);
return;
}
public void <init>(java.lang.String, long)
{
java.nio.charset.Charset v3;
long v2;
java.lang.String v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = <io.netty.handler.codec.http.HttpConstants: java.nio.charset.Charset DEFAULT_CHARSET>;
specialinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void <init>(java.lang.String,long,java.nio.charset.Charset)>(v1, v2, v3);
return;
}
public void <init>(java.lang.String, java.nio.charset.Charset)
{
java.lang.String v1;
java.nio.charset.Charset v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.nio.charset.Charset;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void <init>(java.lang.String,java.nio.charset.Charset,long)>(v1, v2, 0L);
return;
}
public void <init>(java.lang.String, long, java.nio.charset.Charset)
{
java.nio.charset.Charset v3;
long v2;
java.lang.String v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 := @parameter2: java.nio.charset.Charset;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void <init>(java.lang.String,java.nio.charset.Charset,long)>(v1, v3, v2);
return;
}
public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
{
java.nio.charset.Charset v3;
java.lang.String v1, v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = <io.netty.handler.codec.http.HttpConstants: java.nio.charset.Charset DEFAULT_CHARSET>;
specialinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)>(v1, v2, v3);
return;
}
public void <init>(java.lang.String, java.lang.String, java.nio.charset.Charset) throws java.io.IOException
{
java.nio.charset.Charset v3;
java.lang.String v1, v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.nio.charset.Charset;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void <init>(java.lang.String,java.nio.charset.Charset,long)>(v1, v3, 0L);
virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void setValue(java.lang.String)>(v2);
return;
}
public io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()
{
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = <io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType Attribute>;
return v1;
}
public java.lang.String getValue()
{
io.netty.buffer.ByteBuf v1;
java.nio.charset.Charset v2;
java.lang.String v3;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.buffer.ByteBuf getByteBuf()>();
v2 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.nio.charset.Charset getCharset()>();
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: java.lang.String toString(java.nio.charset.Charset)>(v2);
return v3;
}
public void setValue(java.lang.String) throws java.io.IOException
{
byte[] v3;
long v6;
byte v7;
io.netty.buffer.ByteBuf v5;
java.nio.charset.Charset v2;
int v4, v8;
java.lang.String v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.String;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "value");
v2 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.nio.charset.Charset getCharset()>();
v3 = virtualinvoke v1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v2);
v4 = lengthof v3;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void checkSize(long)>(v4);
v5 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v3);
v6 = v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long definedSize>;
v7 = v6 cmp 0L;
if v7 <= 0 goto label1;
v8 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long definedSize> = v8;
label1:
virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void setContent(io.netty.buffer.ByteBuf)>(v5);
return;
}
public void addContent(io.netty.buffer.ByteBuf, boolean) throws java.io.IOException
{
java.io.IOException v6;
long v10, v11, v13, v14, v4, v5, v7, v9;
byte v12, v8;
io.netty.buffer.ByteBuf v1;
int v3;
boolean v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
label1:
v4 = v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long size>;
v5 = v4 + v3;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: void checkSize(long)>(v5);
label2:
goto label4;
label3:
v6 := @caughtexception;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
throw v6;
label4:
v7 = v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long definedSize>;
v8 = v7 cmp 0L;
if v8 <= 0 goto label5;
v9 = v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long definedSize>;
v10 = v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long size>;
v11 = v10 + v3;
v12 = v9 cmp v11;
if v12 >= 0 goto label5;
v13 = v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long size>;
v14 = v13 + v3;
v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: long definedSize> = v14;
label5:
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void addContent(io.netty.buffer.ByteBuf,boolean)>(v1, v2);
return;
catch java.io.IOException from label1 to label2 with label3;
}
public int hashCode()
{
int v2;
java.lang.String v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.lang.String getName()>();
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
return v2;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
java.lang.String v3, v4;
boolean v2, v5;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.http.multipart.Attribute;
if v2 != 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.lang.String getName()>();
v4 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.Attribute: java.lang.String getName()>();
v5 = virtualinvoke v3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v4);
return v5;
}
public int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData)
{
io.netty.handler.codec.http.multipart.InterfaceHttpData v1;
java.lang.ClassCastException v3;
int v7;
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType v4, v5;
java.lang.String v6;
boolean v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: io.netty.handler.codec.http.multipart.InterfaceHttpData;
v2 = v1 instanceof io.netty.handler.codec.http.multipart.Attribute;
if v2 != 0 goto label1;
v3 = new java.lang.ClassCastException;
v4 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()>();
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.InterfaceHttpData: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType,io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot compare \u0001 with \u0001");
specialinvoke v3.<java.lang.ClassCastException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: int compareTo(io.netty.handler.codec.http.multipart.Attribute)>(v1);
return v7;
}
public int compareTo(io.netty.handler.codec.http.multipart.Attribute)
{
io.netty.handler.codec.http.multipart.Attribute v1;
int v4;
java.lang.String v2, v3;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: io.netty.handler.codec.http.multipart.Attribute;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.lang.String getName()>();
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.Attribute: java.lang.String getName()>();
v4 = virtualinvoke v2.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(v3);
return v4;
}
public java.lang.String toString()
{
java.lang.String v1, v2, v3;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.lang.String getName()>();
v2 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.lang.String getValue()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001=\u0001");
return v3;
}
public io.netty.handler.codec.http.multipart.Attribute copy()
{
io.netty.handler.codec.http.multipart.Attribute v3;
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.buffer.ByteBuf content()>();
if v1 == null goto label1;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf copy()>();
goto label2;
label1:
v2 = null;
label2:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.http.multipart.Attribute duplicate()
{
io.netty.handler.codec.http.multipart.Attribute v3;
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.buffer.ByteBuf content()>();
if v1 == null goto label1;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf duplicate()>();
goto label2;
label1:
v2 = null;
label2:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.http.multipart.Attribute retainedDuplicate()
{
java.lang.Throwable v4;
io.netty.handler.codec.http.multipart.Attribute v3, v5;
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.buffer.ByteBuf content()>();
if v1 == null goto label4;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedDuplicate()>();
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
throw v4;
label4:
v5 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)>(null);
return v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)
{
java.io.IOException v5;
io.netty.channel.ChannelException v6;
io.netty.buffer.ByteBuf v1;
java.nio.charset.Charset v4;
java.lang.String v3;
boolean v7;
io.netty.handler.codec.http.multipart.MemoryAttribute v0, v2;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = new io.netty.handler.codec.http.multipart.MemoryAttribute;
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.lang.String getName()>();
specialinvoke v2.<io.netty.handler.codec.http.multipart.MemoryAttribute: void <init>(java.lang.String)>(v3);
v4 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: java.nio.charset.Charset getCharset()>();
virtualinvoke v2.<io.netty.handler.codec.http.multipart.MemoryAttribute: void setCharset(java.nio.charset.Charset)>(v4);
if v1 == null goto label4;
label1:
virtualinvoke v2.<io.netty.handler.codec.http.multipart.MemoryAttribute: void setContent(io.netty.buffer.ByteBuf)>(v1);
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = new io.netty.channel.ChannelException;
specialinvoke v6.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v5);
throw v6;
label4:
v7 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.MemoryAttribute: boolean isCompleted()>();
virtualinvoke v2.<io.netty.handler.codec.http.multipart.MemoryAttribute: void setCompleted(boolean)>(v7);
return v2;
catch java.io.IOException from label1 to label2 with label3;
}
public io.netty.handler.codec.http.multipart.Attribute retain()
{
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.handler.codec.http.multipart.HttpData retain()>();
return v0;
}
public io.netty.handler.codec.http.multipart.Attribute retain(int)
{
int v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.handler.codec.http.multipart.HttpData retain(int)>(v1);
return v0;
}
public io.netty.handler.codec.http.multipart.Attribute touch()
{
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.handler.codec.http.multipart.HttpData touch()>();
return v0;
}
public io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.codec.http.multipart.MemoryAttribute v0;
v0 := @this: io.netty.handler.codec.http.multipart.MemoryAttribute;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object)>(v1);
return v0;
}
}