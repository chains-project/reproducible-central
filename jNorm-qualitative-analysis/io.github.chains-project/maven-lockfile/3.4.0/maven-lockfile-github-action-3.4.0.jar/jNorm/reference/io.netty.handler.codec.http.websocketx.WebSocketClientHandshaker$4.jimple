class io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 extends io.netty.channel.ChannelInboundHandlerAdapter
{
private io.netty.handler.codec.http.FullHttpResponse fullHttpResponse;
static final boolean $assertionsDisabled;
final io.netty.channel.ChannelPromise val$promise;
final io.netty.channel.Channel val$channel;
final io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0;
void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, io.netty.channel.ChannelPromise, io.netty.channel.Channel)
{
io.netty.channel.Channel v3;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 := @parameter2: io.netty.channel.Channel;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0> = v1;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.ChannelPromise val$promise> = v2;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.Channel val$channel> = v3;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void <init>()>();
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
java.lang.Throwable v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
java.lang.Object v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.codec.http.HttpObject;
if v3 == 0 goto label4;
label1:
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: void handleHandshakeResponse(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject)>(v1, v2);
label2:
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
goto label5;
label3:
v4 := @caughtexception;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
throw v4;
label4:
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
io.netty.channel.ChannelPromise v4;
io.netty.channel.ChannelPipeline v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Throwable;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v4.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v2);
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v6;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
io.netty.channel.ChannelPromise v2, v4;
java.nio.channels.ClosedChannelException v5;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.ChannelPromise val$promise>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean isDone()>();
if v3 != 0 goto label2;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.ChannelPromise val$promise>;
v5 = new java.nio.channels.ClosedChannelException;
specialinvoke v5.<java.nio.channels.ClosedChannelException: void <init>()>();
interfaceinvoke v4.<io.netty.channel.ChannelPromise: boolean tryFailure(java.lang.Throwable)>(v5);
label2:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelInactive()>();
label3:
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: void releaseFullHttpResponse()>();
goto label5;
label4:
v6 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: void releaseFullHttpResponse()>();
throw v6;
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: void releaseFullHttpResponse()>();
return;
}
private void handleHandshakeResponse(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpObject)
{
java.lang.Throwable v11;
io.netty.handler.codec.http.HttpVersion v14;
io.netty.handler.codec.http.HttpHeaders v17;
java.lang.AssertionError v8;
io.netty.handler.codec.http.HttpObject v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v16;
boolean v12, v20, v3, v5, v6;
io.netty.handler.codec.http.HttpResponseStatus v15;
io.netty.channel.ChannelPipeline v10, v4;
io.netty.handler.codec.http.EmptyHttpHeaders v18;
io.netty.handler.codec.http.FullHttpResponse v21, v7, v9;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
io.netty.handler.codec.DecoderResult v19, v22;
io.netty.handler.codec.http.DefaultFullHttpResponse v13;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.HttpObject;
v3 = v2 instanceof io.netty.handler.codec.http.FullHttpResponse;
if v3 == 0 goto label1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v4.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: void tryFinishHandshake(io.netty.handler.codec.http.FullHttpResponse)>(v2);
return;
label1:
v5 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v5 == 0 goto label7;
v6 = <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: boolean $assertionsDisabled>;
if v6 != 0 goto label2;
v7 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse>;
if v7 != null goto label2;
v8 = new java.lang.AssertionError;
specialinvoke v8.<java.lang.AssertionError: void <init>()>();
throw v8;
label2:
v9 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse>;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse> = null;
label3:
v10 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v10.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: void tryFinishHandshake(io.netty.handler.codec.http.FullHttpResponse)>(v9);
label4:
interfaceinvoke v9.<io.netty.handler.codec.http.FullHttpResponse: boolean release()>();
goto label6;
label5:
v11 := @caughtexception;
interfaceinvoke v9.<io.netty.handler.codec.http.FullHttpResponse: boolean release()>();
throw v11;
label6:
return;
label7:
v12 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v12 == 0 goto label8;
v13 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v14 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpVersion protocolVersion()>();
v15 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v16 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
v17 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v18 = <io.netty.handler.codec.http.EmptyHttpHeaders: io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE>;
specialinvoke v13.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.http.HttpHeaders)>(v14, v15, v16, v17, v18);
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse> = v13;
v19 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.DecoderResult decoderResult()>();
v20 = virtualinvoke v19.<io.netty.handler.codec.DecoderResult: boolean isFailure()>();
if v20 == 0 goto label8;
v21 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse>;
v22 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.DecoderResult decoderResult()>();
interfaceinvoke v21.<io.netty.handler.codec.http.FullHttpResponse: void setDecoderResult(io.netty.handler.codec.DecoderResult)>(v22);
label8:
return;
catch java.lang.Throwable from label3 to label4 with label5;
}
private void tryFinishHandshake(io.netty.handler.codec.http.FullHttpResponse)
{
io.netty.channel.Channel v3;
java.lang.Throwable v5;
io.netty.handler.codec.http.FullHttpResponse v1;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
io.netty.channel.ChannelPromise v4, v6;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpResponse;
label1:
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0>;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.Channel val$channel>;
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker: void finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpResponse)>(v3, v1);
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v4.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v6.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v5);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void releaseFullHttpResponse()
{
io.netty.handler.codec.http.FullHttpResponse v1, v2;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse>;
interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpResponse: boolean release()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: io.netty.handler.codec.http.FullHttpResponse fullHttpResponse> = null;
label1:
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4: boolean $assertionsDisabled> = v2;
return;
}
}