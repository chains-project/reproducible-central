public class io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 extends io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker
{
private io.netty.buffer.ByteBuf expectedChallengeResponseBytes;
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, io.netty.handler.codec.http.HttpHeaders, int)
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
io.netty.handler.codec.http.HttpHeaders v4;
int v5;
java.lang.String v3;
java.net.URI v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
v5 := @parameter4: int;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int,long)>(v1, v2, v3, v4, v5, 10000L);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, io.netty.handler.codec.http.HttpHeaders, int, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
io.netty.handler.codec.http.HttpHeaders v4;
int v5;
long v6;
java.lang.String v3;
java.net.URI v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
v5 := @parameter4: int;
v6 := @parameter5: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int,long,boolean)>(v1, v2, v3, v4, v5, v6, 0);
return;
}
void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, io.netty.handler.codec.http.HttpHeaders, int, long, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.HttpHeaders v4;
long v6;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v5;
java.lang.String v3;
java.net.URI v1;
boolean v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
v5 := @parameter4: int;
v6 := @parameter5: long;
v7 := @parameter6: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int,long,boolean,boolean)>(v1, v2, v3, v4, v5, v6, v7, 1);
return;
}
void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, io.netty.handler.codec.http.HttpHeaders, int, long, boolean, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.HttpHeaders v4;
long v6;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v5;
java.lang.String v3;
java.net.URI v1;
boolean v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
v5 := @parameter4: int;
v6 := @parameter5: long;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int,long,boolean,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8);
return;
}
protected io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest()
{
byte[] v15, v17, v19, v20, v21;
io.netty.handler.codec.http.HttpHeaders v29, v30, v31, v40, v43, v45;
io.netty.handler.codec.http.DefaultFullHttpRequest v24;
io.netty.util.AsciiString v32, v34, v36, v38, v39, v41, v42, v44, v46, v48, v50, v54, v55;
java.lang.Integer v57;
java.nio.ByteBuffer v16, v18;
java.net.URI v23;
boolean v33, v47, v49, v53;
java.lang.CharSequence v35, v37, v51;
io.netty.handler.codec.http.HttpVersion v25;
io.netty.buffer.ByteBuf v22, v28;
int v1, v2, v3, v4, v5, v56, v6, v7, v8;
java.lang.String v10, v11, v12, v13, v14, v27, v52, v9;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.HttpMethod v26;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(1, 12);
v2 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(1, 12);
v3 = 2147483647 / v1;
v4 = 2147483647 / v2;
v5 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(0, v3);
v6 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(0, v4);
v7 = v5 * v1;
v8 = v6 * v2;
v9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v7);
v10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v8);
v11 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.String insertRandomCharacters(java.lang.String)>(v9);
v12 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.String insertRandomCharacters(java.lang.String)>(v10);
v13 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.String insertSpaces(java.lang.String,int)>(v11, v1);
v14 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.String insertSpaces(java.lang.String,int)>(v12, v2);
v15 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] randomBytes(int)>(8);
v16 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);
virtualinvoke v16.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(v5);
v17 = virtualinvoke v16.<java.nio.ByteBuffer: byte[] array()>();
v18 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);
virtualinvoke v18.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(v6);
v19 = virtualinvoke v18.<java.nio.ByteBuffer: byte[] array()>();
v20 = newarray (byte)[16];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v17, 0, v20, 0, 4);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v19, 0, v20, 4, 4);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v15, 0, v20, 8, 8);
v21 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] md5(byte[])>(v20);
v22 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v21);
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: io.netty.buffer.ByteBuf expectedChallengeResponseBytes> = v22;
v23 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.net.URI uri()>();
v24 = new io.netty.handler.codec.http.DefaultFullHttpRequest;
v25 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v26 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
v27 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.String upgradeUrl(java.net.URI)>(v23);
v28 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v15);
specialinvoke v24.<io.netty.handler.codec.http.DefaultFullHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)>(v25, v26, v27, v28);
v29 = interfaceinvoke v24.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v30 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: io.netty.handler.codec.http.HttpHeaders customHeaders>;
if v30 == null goto label1;
v31 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: io.netty.handler.codec.http.HttpHeaders customHeaders>;
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v31);
v32 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v33 = virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v32);
if v33 != 0 goto label2;
v34 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v35 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.CharSequence websocketHostValue(java.net.URI)>(v23);
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v34, v35);
goto label2;
label1:
v36 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v37 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.CharSequence websocketHostValue(java.net.URI)>(v23);
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v36, v37);
label2:
v38 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v39 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v40 = virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v38, v39);
v41 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v42 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v43 = virtualinvoke v40.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v41, v42);
v44 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY1>;
v45 = virtualinvoke v43.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v44, v13);
v46 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY2>;
virtualinvoke v45.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v46, v14);
v47 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: boolean generateOriginHeader>;
if v47 == 0 goto label3;
v48 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString ORIGIN>;
v49 = virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v48);
if v49 != 0 goto label3;
v50 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString ORIGIN>;
v51 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.CharSequence websocketOriginValue(java.net.URI)>(v23);
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v50, v51);
label3:
v52 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: java.lang.String expectedSubprotocol()>();
if v52 == null goto label4;
v53 = virtualinvoke v52.<java.lang.String: boolean isEmpty()>();
if v53 != 0 goto label4;
v54 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL>;
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v54, v52);
label4:
v55 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v56 = lengthof v15;
v57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v56);
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v55, v57);
return v24;
}
protected void verify(io.netty.handler.codec.http.FullHttpResponse)
{
io.netty.handler.codec.http.HttpHeaders v7;
io.netty.util.AsciiString v10, v14, v15, v18, v8;
io.netty.buffer.ByteBuf v21, v22;
java.lang.String v13, v19, v20, v6, v9;
boolean v11, v16, v23, v4;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.HttpResponseStatus v2, v3;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException v12, v17, v24, v5;
io.netty.handler.codec.http.FullHttpResponse v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpResponse;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v3 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS>;
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpResponseStatus: boolean equals(java.lang.Object)>(v2);
if v4 != 0 goto label1;
v5 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.HttpResponseStatus)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid handshake response getStatus: \u0001");
specialinvoke v5.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v6, v1);
throw v5;
label1:
v7 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v8 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v9 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v8);
v10 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v11 = virtualinvoke v10.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v9);
if v11 != 0 goto label2;
v12 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid handshake response upgrade: \u0001");
specialinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v13, v1);
throw v12;
label2:
v14 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v15 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v16 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v14, v15, 1);
if v16 != 0 goto label3;
v17 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v18 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v19 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v18);
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid handshake response connection: \u0001");
specialinvoke v17.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v20, v1);
throw v17;
label3:
v21 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.buffer.ByteBuf content()>();
v22 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: io.netty.buffer.ByteBuf expectedChallengeResponseBytes>;
v23 = virtualinvoke v21.<io.netty.buffer.ByteBuf: boolean equals(java.lang.Object)>(v22);
if v23 != 0 goto label4;
v24 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
specialinvoke v24.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>("Invalid challenge", v1);
throw v24;
label4:
return;
}
private static java.lang.String insertRandomCharacters(java.lang.String)
{
char v12;
java.util.Random v4;
int v1, v3, v5, v6, v7, v8, v9;
char[] v2;
java.lang.String v0, v10, v11;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(1, 12);
v2 = newarray (char)[v1];
v3 = 0;
label1:
if v3 >= v1 goto label4;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.Random threadLocalRandom()>();
v5 = virtualinvoke v4.<java.util.Random: int nextInt(int)>(126);
v6 = v5 + 33;
if 33 >= v6 goto label2;
if v6 < 47 goto label3;
label2:
if 58 >= v6 goto label1;
if v6 >= 126 goto label1;
label3:
v2[v3] = v6;
v3 = v3 + 1;
goto label1;
label4:
v7 = 0;
label5:
if v7 >= v1 goto label6;
v8 = virtualinvoke v0.<java.lang.String: int length()>();
v9 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(0, v8);
v10 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v9);
v11 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v9);
v12 = v2[v7];
v0 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char,java.lang.String)>(v10, v12, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001\u0001");
v7 = v7 + 1;
goto label5;
label6:
return v0;
}
private static java.lang.String insertSpaces(java.lang.String, int)
{
int v1, v2, v3, v4, v5;
java.lang.String v0, v6, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 = 0;
label1:
if v2 >= v1 goto label2;
v3 = virtualinvoke v0.<java.lang.String: int length()>();
v4 = v3 - 1;
v5 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: int randomNumber(int,int)>(1, v4);
v6 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
v7 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v5);
v0 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");
v2 = v2 + 1;
goto label1;
label2:
return v0;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder()
{
int v2;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00: int maxFramePayloadLength()>();
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder: void <init>(int)>(v2);
return v1;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder()
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder: void <init>()>();
return v1;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 setForceCloseTimeoutMillis(long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 v0;
long v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00;
v1 := @parameter0: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long)>(v1);
return v0;
}
}