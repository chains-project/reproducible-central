public class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 extends io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker
{
private static final java.util.regex.Pattern BEGINNING_DIGIT;
private static final java.util.regex.Pattern BEGINNING_SPACE;
public void <init>(java.lang.String, java.lang.String, int)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v4, v5;
int v3;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v6;
java.lang.String v1, v2;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: int;
v4 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder newBuilder()>();
v5 = virtualinvoke v4.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder maxFramePayloadLength(int)>(v3);
v6 = virtualinvoke v5.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig build()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: void <init>(java.lang.String,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v1, v2, v6);
return;
}
public void <init>(java.lang.String, java.lang.String, io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketVersion v4;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v3;
java.lang.String v1, v2;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
v4 = <io.netty.handler.codec.http.websocketx.WebSocketVersion: io.netty.handler.codec.http.websocketx.WebSocketVersion V00>;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker: void <init>(io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v4, v1, v2, v3);
return;
}
protected io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest, io.netty.handler.codec.http.HttpHeaders)
{
byte[] v87, v91, v92;
io.netty.handler.codec.http.HttpHeaders v101, v13, v18, v2, v21, v26, v30, v40, v41, v44, v47, v49, v52, v59, v61, v64, v8, v93, v95, v98;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException v17, v29, v6;
io.netty.util.AsciiString v10, v102, v12, v14, v19, v22, v27, v42, v43, v45, v46, v48, v50, v53, v60, v62, v65, v9, v94, v96, v99;
java.util.regex.Matcher v68, v72, v77, v81;
java.util.Set v31;
io.netty.handler.codec.http.FullHttpRequest v1;
io.netty.util.internal.logging.InternalLogger v56, v58;
io.netty.handler.codec.http.DefaultFullHttpResponse v33;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
long v70, v75, v79, v84, v86;
java.lang.String v100, v103, v15, v28, v32, v36, v51, v54, v55, v63, v66, v69, v7, v73, v78, v82, v97;
io.netty.buffer.ByteBufAllocator v38;
boolean v11, v16, v20, v23, v24, v25, v5, v57;
io.netty.handler.codec.http.HttpResponseStatus v35;
java.util.regex.Pattern v67, v71, v76, v80;
io.netty.handler.codec.http.HttpVersion v34;
io.netty.buffer.ByteBuf v37, v39, v85, v88, v89, v90;
int v74, v83;
io.netty.handler.codec.http.HttpMethod v3, v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpRequest;
v2 := @parameter1: io.netty.handler.codec.http.HttpHeaders;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpMethod method()>();
v4 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.HttpMethod: boolean equals(java.lang.Object)>(v3);
if v5 != 0 goto label01;
v6 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.HttpMethod)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid WebSocket handshake method: \u0001");
specialinvoke v6.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>(v7, v1);
throw v6;
label01:
v8 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v9 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v10 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v11 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v9, v10, 1);
if v11 == 0 goto label02;
v12 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v13 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v14 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v15 = virtualinvoke v13.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v14);
v16 = virtualinvoke v12.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v15);
if v16 != 0 goto label03;
label02:
v17 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
specialinvoke v17.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>("not a WebSocket handshake request: missing upgrade", v1);
throw v17;
label03:
v18 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v19 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY1>;
v20 = virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v19);
if v20 == 0 goto label04;
v21 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v22 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY2>;
v23 = virtualinvoke v21.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v22);
if v23 == 0 goto label04;
v24 = 1;
goto label05;
label04:
v24 = 0;
label05:
v25 = v24;
v26 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v27 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString ORIGIN>;
v28 = virtualinvoke v26.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v27);
if v28 != null goto label06;
if v24 != 0 goto label06;
v29 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
v30 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v31 = virtualinvoke v30.<io.netty.handler.codec.http.HttpHeaders: java.util.Set names()>();
v32 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.Set)>(v31) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing origin header, got only \u0001");
specialinvoke v29.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>(v32, v1);
throw v29;
label06:
v33 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v34 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v35 = new io.netty.handler.codec.http.HttpResponseStatus;
if v25 == 0 goto label07;
v36 = "WebSocket Protocol Handshake";
goto label08;
label07:
v36 = "Web Socket Protocol Handshake";
label08:
specialinvoke v35.<io.netty.handler.codec.http.HttpResponseStatus: void <init>(int,java.lang.String)>(101, v36);
v37 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.buffer.ByteBuf content()>();
v38 = virtualinvoke v37.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v39 = interfaceinvoke v38.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(0);
specialinvoke v33.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v34, v35, v39);
if v2 == null goto label09;
v40 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v40.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v2);
label09:
v41 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v42 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v43 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v44 = virtualinvoke v41.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v42, v43);
v45 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v46 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
virtualinvoke v44.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v45, v46);
if v25 == 0 goto label12;
v47 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v48 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_ORIGIN>;
virtualinvoke v47.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v48, v28);
v49 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v50 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_LOCATION>;
v51 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.lang.String uri()>();
virtualinvoke v49.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v50, v51);
v52 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v53 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL>;
v54 = virtualinvoke v52.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v53);
if v54 == null goto label11;
v55 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.lang.String selectSubprotocol(java.lang.String)>(v54);
if v55 != null goto label10;
v56 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: io.netty.util.internal.logging.InternalLogger logger>;
v57 = interfaceinvoke v56.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v57 == 0 goto label11;
v58 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v58.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Requested subprotocol(s) not supported: {}", v54);
goto label11;
label10:
v59 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v60 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL>;
virtualinvoke v59.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v60, v55);
label11:
v61 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v62 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY1>;
v63 = virtualinvoke v61.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v62);
v64 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v65 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY2>;
v66 = virtualinvoke v64.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v65);
v67 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.util.regex.Pattern BEGINNING_DIGIT>;
v68 = virtualinvoke v67.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v63);
v69 = virtualinvoke v68.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");
v70 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v69);
v71 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.util.regex.Pattern BEGINNING_SPACE>;
v72 = virtualinvoke v71.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v63);
v73 = virtualinvoke v72.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");
v74 = virtualinvoke v73.<java.lang.String: int length()>();
v75 = v70 / v74;
v76 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.util.regex.Pattern BEGINNING_DIGIT>;
v77 = virtualinvoke v76.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v66);
v78 = virtualinvoke v77.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");
v79 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v78);
v80 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.util.regex.Pattern BEGINNING_SPACE>;
v81 = virtualinvoke v80.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v66);
v82 = virtualinvoke v81.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");
v83 = virtualinvoke v82.<java.lang.String: int length()>();
v84 = v79 / v83;
v85 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.buffer.ByteBuf content()>();
v86 = virtualinvoke v85.<io.netty.buffer.ByteBuf: long readLong()>();
v87 = newarray (byte)[16];
v88 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v87);
v89 = virtualinvoke v88.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setIndex(int,int)>(0, 0);
virtualinvoke v89.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v75);
virtualinvoke v89.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v84);
virtualinvoke v89.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeLong(long)>(v86);
v90 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.buffer.ByteBuf content()>();
v91 = virtualinvoke v89.<io.netty.buffer.ByteBuf: byte[] array()>();
v92 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] md5(byte[])>(v91);
virtualinvoke v90.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v92);
goto label13;
label12:
v93 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v94 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString WEBSOCKET_ORIGIN>;
virtualinvoke v93.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v94, v28);
v95 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v96 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString WEBSOCKET_LOCATION>;
v97 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.lang.String uri()>();
virtualinvoke v95.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v96, v97);
v98 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v99 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString WEBSOCKET_PROTOCOL>;
v100 = virtualinvoke v98.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v99);
if v100 == null goto label13;
v101 = interfaceinvoke v33.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v102 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString WEBSOCKET_PROTOCOL>;
v103 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.lang.String selectSubprotocol(java.lang.String)>(v100);
virtualinvoke v101.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v102, v103);
label13:
return v33;
}
public io.netty.channel.ChannelFuture close(io.netty.channel.Channel, io.netty.handler.codec.http.websocketx.CloseWebSocketFrame, io.netty.channel.ChannelPromise)
{
io.netty.channel.Channel v1;
io.netty.channel.ChannelPromise v3;
io.netty.handler.codec.http.websocketx.CloseWebSocketFrame v2;
io.netty.channel.ChannelFuture v4;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 := @parameter0: io.netty.channel.Channel;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.CloseWebSocketFrame;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = interfaceinvoke v1.<io.netty.channel.Channel: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
return v4;
}
public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.websocketx.CloseWebSocketFrame, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
io.netty.handler.codec.http.websocketx.CloseWebSocketFrame v2;
io.netty.channel.ChannelFuture v4;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.CloseWebSocketFrame;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
return v4;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder()
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v2;
io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder v1;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig()>();
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder: void <init>(io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v2);
return v1;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder()
{
io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder v1;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder: void <init>()>();
return v1;
}
static void <clinit>()
{
java.util.regex.Pattern v0, v1;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^0-9]");
<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.util.regex.Pattern BEGINNING_DIGIT> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^ ]");
<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00: java.util.regex.Pattern BEGINNING_SPACE> = v1;
return;
}
}