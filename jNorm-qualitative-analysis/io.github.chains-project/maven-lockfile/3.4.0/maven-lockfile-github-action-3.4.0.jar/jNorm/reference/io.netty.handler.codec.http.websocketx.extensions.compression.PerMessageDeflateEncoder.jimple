class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder extends io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder
{
private boolean compressing;
void <init>(int, int, boolean)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder v0;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v4;
int v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 = <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter NEVER_SKIP>;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder: void <init>(int,int,boolean,io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)>(v1, v2, v3, v4);
return;
}
void <init>(int, int, boolean, io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder v0;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v4;
int v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder: void <init>(int,int,boolean,io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)>(v1, v2, v3, v4);
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder v0;
java.lang.IllegalStateException v6;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v3;
int v10, v9;
java.lang.Object v1;
boolean v11, v12, v13, v2, v4, v5, v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder: boolean acceptOutboundMessage(java.lang.Object)>(v1);
if v2 != 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionEncoderFilter()>();
v4 = interfaceinvoke v3.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter: boolean mustSkip(io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v1);
if v4 == 0 goto label3;
v5 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder: boolean compressing>;
if v5 == 0 goto label2;
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot skip per message deflate encoder, compression in progress");
throw v6;
label2:
return 0;
label3:
v7 = v1 instanceof io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
if v7 != 0 goto label4;
v8 = v1 instanceof io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
if v8 == 0 goto label5;
label4:
v9 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketFrame: int rsv()>();
v10 = v9 & 4;
if v10 == 0 goto label6;
label5:
v11 = v1 instanceof io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame;
if v11 == 0 goto label7;
v12 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder: boolean compressing>;
if v12 == 0 goto label7;
label6:
v13 = 1;
goto label8;
label7:
v13 = 0;
label8:
return v13;
}
protected int rsv(io.netty.handler.codec.http.websocketx.WebSocketFrame)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder v0;
io.netty.handler.codec.http.websocketx.WebSocketFrame v1;
int v4, v5;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v2 = v1 instanceof io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
if v2 != 0 goto label1;
v3 = v1 instanceof io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
if v3 == 0 goto label2;
label1:
v4 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketFrame: int rsv()>();
v5 = v4 | 4;
goto label3;
label2:
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketFrame: int rsv()>();
label3:
return v5;
}
protected boolean removeFrameTail(io.netty.handler.codec.http.websocketx.WebSocketFrame)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder v0;
io.netty.handler.codec.http.websocketx.WebSocketFrame v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketFrame: boolean isFinalFragment()>();
return v2;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.websocketx.WebSocketFrame, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder v0;
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.handler.codec.http.websocketx.WebSocketFrame v2;
boolean v4, v5, v6;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v3 := @parameter2: java.util.List;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder: void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List)>(v1, v2, v3);
v4 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: boolean isFinalFragment()>();
if v4 == 0 goto label1;
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder: boolean compressing> = 0;
goto label3;
label1:
v5 = v2 instanceof io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
if v5 != 0 goto label2;
v6 = v2 instanceof io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
if v6 == 0 goto label3;
label2:
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder: boolean compressing> = 1;
label3:
return;
}
}