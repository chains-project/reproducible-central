class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 extends io.netty.handler.codec.http2.Http2ConnectionAdapter
{
final io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0;
void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v1;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController;
v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0> = v1;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionAdapter: void <init>()>();
return;
}
public void onStreamAdded(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v4;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v3;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 v0;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v2, v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey>;
v4 = new io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2Stream)>(v5, v1);
interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object)>(v3, v4);
return;
}
public void onStreamActive(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v3;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v5;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 v0;
int v7;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v2, v4, v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor monitor>;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v5 = specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream)>(v1);
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v7 = v6.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: int initialWindowSize>;
virtualinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int)>(v5, v7);
return;
}
public void onStreamClosed(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v3;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 v0;
io.netty.handler.codec.http2.Http2Error v4;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v3 = specialinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream)>(v1);
v4 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
virtualinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: void cancel(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable)>(v4, null);
return;
}
public void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v5;
io.netty.handler.codec.http2.Http2Stream$State v2, v3;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 v0;
io.netty.handler.codec.http2.Http2Error v6;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL>;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
if v2 != v3 goto label1;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v5 = specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream)>(v1);
v6 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
virtualinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: void cancel(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable)>(v6, null);
label1:
return;
}
}