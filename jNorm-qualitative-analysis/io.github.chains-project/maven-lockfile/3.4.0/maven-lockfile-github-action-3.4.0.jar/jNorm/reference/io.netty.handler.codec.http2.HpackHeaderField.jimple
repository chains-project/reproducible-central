class io.netty.handler.codec.http2.HpackHeaderField extends java.lang.Object
{
static final int HEADER_ENTRY_OVERHEAD;
final java.lang.CharSequence name;
final java.lang.CharSequence value;
static long sizeOf(java.lang.CharSequence, java.lang.CharSequence)
{
java.lang.CharSequence v0, v1;
int v2, v3, v4, v5;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
v3 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v4 = v2 + v3;
v5 = v4 + 32;
return v5;
}
void <init>(java.lang.CharSequence, java.lang.CharSequence)
{
java.lang.CharSequence v1, v2;
java.lang.Object v3, v4;
io.netty.handler.codec.http2.HpackHeaderField v0;
v0 := @this: io.netty.handler.codec.http2.HpackHeaderField;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "value");
v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value> = v4;
return;
}
final int size()
{
java.lang.CharSequence v1, v3;
int v2, v4, v5, v6;
io.netty.handler.codec.http2.HpackHeaderField v0;
v0 := @this: io.netty.handler.codec.http2.HpackHeaderField;
v1 = v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v2 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v3 = v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v4 = interfaceinvoke v3.<java.lang.CharSequence: int length()>();
v5 = v2 + v4;
v6 = v5 + 32;
return v6;
}
public final boolean equalsForTest(io.netty.handler.codec.http2.HpackHeaderField)
{
java.lang.CharSequence v2, v3, v5, v6;
io.netty.handler.codec.http2.HpackHeaderField v0, v1;
boolean v4, v7, v8;
v0 := @this: io.netty.handler.codec.http2.HpackHeaderField;
v1 := @parameter0: io.netty.handler.codec.http2.HpackHeaderField;
v2 = v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v3 = v1.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v4 = staticinvoke <io.netty.handler.codec.http2.HpackUtil: boolean equalsVariableTime(java.lang.CharSequence,java.lang.CharSequence)>(v2, v3);
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v6 = v1.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v7 = staticinvoke <io.netty.handler.codec.http2.HpackUtil: boolean equalsVariableTime(java.lang.CharSequence,java.lang.CharSequence)>(v5, v6);
if v7 == 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
return v8;
}
public java.lang.String toString()
{
java.lang.CharSequence v1, v2;
java.lang.String v3;
io.netty.handler.codec.http2.HpackHeaderField v0;
v0 := @this: io.netty.handler.codec.http2.HpackHeaderField;
v1 = v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence name>;
v2 = v0.<io.netty.handler.codec.http2.HpackHeaderField: java.lang.CharSequence value>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence,java.lang.CharSequence)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: \u0001");
return v3;
}
}