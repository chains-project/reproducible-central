final class io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder extends io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder
{
private io.netty.buffer.ByteBuf clientPrefaceString;
private boolean prefaceSent;
final io.netty.handler.codec.http2.Http2ConnectionHandler this$0;
void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler, io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2Connection v4;
io.netty.buffer.ByteBuf v5;
io.netty.handler.codec.http2.Http2ConnectionEncoder v3;
io.netty.handler.codec.http2.Http2ConnectionHandler v1;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionHandler;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0> = v1;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder: void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler)>(v1);
v3 = v1.<io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.handler.codec.http2.Http2Connection connection()>();
v5 = staticinvoke <io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.buffer.ByteBuf clientPrefaceString(io.netty.handler.codec.http2.Http2Connection)>(v4);
v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString> = v5;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: void sendPreface(io.netty.channel.ChannelHandlerContext)>(v2);
return;
}
public boolean prefaceSent()
{
boolean v1;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: boolean prefaceSent>;
return v1;
}
public void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
java.lang.Throwable v13;
io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder v9;
io.netty.handler.codec.http2.Http2ConnectionHandler v10, v11, v14, v8;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
io.netty.channel.Channel v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder v12;
java.util.List v3;
io.netty.buffer.ByteBuf v2;
boolean v5, v6, v7;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
label1:
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v5 = interfaceinvoke v4.<io.netty.channel.Channel: boolean isActive()>();
if v5 == 0 goto label4;
v6 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: boolean readClientPrefaceString(io.netty.buffer.ByteBuf)>(v2);
if v6 == 0 goto label4;
v7 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: boolean verifyFirstFrameIsSettings(io.netty.buffer.ByteBuf)>(v2);
if v7 == 0 goto label4;
v8 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v9 = new io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder;
v10 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
specialinvoke v9.<io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder: void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler)>(v10);
v8.<io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder byteDecoder> = v9;
v11 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v12 = v11.<io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder byteDecoder>;
virtualinvoke v12.<io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder: void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)>(v1, v2, v3);
label2:
goto label4;
label3:
v13 := @caughtexception;
v14 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
virtualinvoke v14.<io.netty.handler.codec.http2.Http2ConnectionHandler: void onError(io.netty.channel.ChannelHandlerContext,boolean,java.lang.Throwable)>(v1, 0, v13);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2ConnectionHandler v2;
boolean v3;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: void sendPreface(io.netty.channel.ChannelHandlerContext)>(v1);
v2 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v3 = v2.<io.netty.handler.codec.http2.Http2ConnectionHandler: boolean flushPreface>;
if v3 == 0 goto label1;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext flush()>();
label1:
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: void cleanup()>();
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: void cleanup()>();
return;
}
private void cleanup()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString> = null;
label1:
return;
}
private boolean readClientPrefaceString(io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2Exception v26, v35;
boolean v11, v38;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
io.netty.handler.codec.http2.Http2Error v24, v33;
java.lang.Object[] v25, v34;
io.netty.buffer.ByteBuf v1, v12, v16, v2, v29, v3, v36, v37, v39, v8, v9;
java.nio.charset.Charset v22;
int v10, v13, v14, v15, v17, v18, v19, v20, v21, v27, v28, v30, v31, v4, v5, v6, v7;
java.lang.String v23, v32;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
if v2 != null goto label1;
return 1;
label1:
v3 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v6 = staticinvoke <java.lang.Math: int min(int,int)>(v5, v4);
if v6 == 0 goto label2;
v7 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v8 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
v9 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
v10 = virtualinvoke v9.<io.netty.buffer.ByteBuf: int readerIndex()>();
v11 = staticinvoke <io.netty.buffer.ByteBufUtil: boolean equals(io.netty.buffer.ByteBuf,int,io.netty.buffer.ByteBuf,int,int)>(v1, v7, v8, v10, v6);
if v11 != 0 goto label4;
label2:
v12 = <io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.buffer.ByteBuf HTTP_1_X_BUF>;
v13 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v14 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v15 = staticinvoke <java.lang.Math: int min(int,int)>(v14, 1024);
v16 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(v13, v15);
v17 = staticinvoke <io.netty.buffer.ByteBufUtil: int indexOf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v12, v16);
v18 = (int) -1;
if v17 == v18 goto label3;
v19 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v20 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v21 = v17 - v20;
v22 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v23 = virtualinvoke v1.<io.netty.buffer.ByteBuf: java.lang.String toString(int,int,java.nio.charset.Charset)>(v19, v21, v22);
v24 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v25 = newarray (java.lang.Object)[1];
v25[0] = v23;
v26 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v24, "Unexpected HTTP/1.x request: %s", v25);
throw v26;
label3:
v27 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v28 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v29 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
v30 = virtualinvoke v29.<io.netty.buffer.ByteBuf: int readableBytes()>();
v31 = staticinvoke <java.lang.Math: int min(int,int)>(v28, v30);
v32 = staticinvoke <io.netty.buffer.ByteBufUtil: java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int)>(v1, v27, v31);
v33 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v34 = newarray (java.lang.Object)[1];
v34[0] = v32;
v35 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v33, "HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: %s", v34);
throw v35;
label4:
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v6);
v36 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
virtualinvoke v36.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v6);
v37 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
v38 = virtualinvoke v37.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v38 != 0 goto label5;
v39 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString>;
virtualinvoke v39.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.buffer.ByteBuf clientPrefaceString> = null;
return 1;
label5:
return 0;
}
private boolean verifyFirstFrameIsSettings(io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v11;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
short v5, v8, v9;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.http2.Http2Exception v14;
int v12, v2, v3, v4, v6, v7;
io.netty.handler.codec.http2.Http2Error v10;
java.lang.String v13;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v2 >= 5 goto label1;
return 0;
label1:
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v4 = v3 + 3;
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v4);
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v7 = v6 + 4;
v8 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v7);
if v5 != 4 goto label2;
v9 = v8 & 1;
if v9 == 0 goto label3;
label2:
v10 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v11 = newarray (java.lang.Object)[1];
v12 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v13 = staticinvoke <io.netty.buffer.ByteBufUtil: java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int)>(v1, v12, 5);
v11[0] = v13;
v14 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v10, "First received frame was not SETTINGS. Hex dump for first 5 bytes: %s", v11);
throw v14;
label3:
return 1;
}
private void sendPreface(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent v21;
io.netty.handler.codec.http2.Http2ConnectionEncoder v14;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v10;
io.netty.channel.ChannelPromise v17;
io.netty.channel.ChannelFutureListener v12, v19;
boolean v2, v4, v7, v8, v9;
io.netty.handler.codec.http2.Http2ConnectionHandler v13, v15, v20, v5;
io.netty.channel.ChannelFuture v11, v18;
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder v0;
io.netty.channel.Channel v3;
io.netty.handler.codec.http2.Http2Settings v16;
io.netty.handler.codec.http2.Http2Connection v6;
v0 := @this: io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: boolean prefaceSent>;
if v2 != 0 goto label1;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v4 = interfaceinvoke v3.<io.netty.channel.Channel: boolean isActive()>();
if v4 != 0 goto label2;
label1:
return;
label2:
v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: boolean prefaceSent> = 1;
v5 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v6 = virtualinvoke v5.<io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.handler.codec.http2.Http2Connection connection()>();
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
if v7 != 0 goto label3;
v8 = 1;
goto label4;
label3:
v8 = 0;
label4:
v9 = v8;
if v8 == 0 goto label5;
v10 = staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: io.netty.buffer.ByteBuf connectionPrefaceBuf()>();
v11 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object)>(v10);
v12 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE>;
interfaceinvoke v11.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v12);
label5:
v13 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v14 = v13.<io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder>;
v15 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v16 = v15.<io.netty.handler.codec.http2.Http2ConnectionHandler: io.netty.handler.codec.http2.Http2Settings initialSettings>;
v17 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v18 = interfaceinvoke v14.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise)>(v1, v16, v17);
v19 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE>;
interfaceinvoke v18.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v19);
if v9 == 0 goto label6;
v20 = v0.<io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder: io.netty.handler.codec.http2.Http2ConnectionHandler this$0>;
v21 = <io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent: io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent INSTANCE>;
virtualinvoke v20.<io.netty.handler.codec.http2.Http2ConnectionHandler: void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v21);
label6:
return;
}
}