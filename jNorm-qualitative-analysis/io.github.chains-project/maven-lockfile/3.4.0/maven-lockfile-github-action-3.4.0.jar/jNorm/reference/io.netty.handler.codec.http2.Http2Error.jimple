public final enum class io.netty.handler.codec.http2.Http2Error extends java.lang.Enum
{
public static final enum io.netty.handler.codec.http2.Http2Error NO_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error FLOW_CONTROL_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error SETTINGS_TIMEOUT;
public static final enum io.netty.handler.codec.http2.Http2Error STREAM_CLOSED;
public static final enum io.netty.handler.codec.http2.Http2Error FRAME_SIZE_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error REFUSED_STREAM;
public static final enum io.netty.handler.codec.http2.Http2Error CANCEL;
public static final enum io.netty.handler.codec.http2.Http2Error COMPRESSION_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error CONNECT_ERROR;
public static final enum io.netty.handler.codec.http2.Http2Error ENHANCE_YOUR_CALM;
public static final enum io.netty.handler.codec.http2.Http2Error INADEQUATE_SECURITY;
public static final enum io.netty.handler.codec.http2.Http2Error HTTP_1_1_REQUIRED;
private final long code;
private static final io.netty.handler.codec.http2.Http2Error[] INT_TO_ENUM_MAP;
private static final io.netty.handler.codec.http2.Http2Error[] $VALUES;
public static io.netty.handler.codec.http2.Http2Error[] values()
{
java.lang.Object v1;
io.netty.handler.codec.http2.Http2Error[] v0;
v0 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.http2.Http2Error valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/http2/Http2Error;", v0);
return v1;
}
private void <init>(java.lang.String, int, long)
{
int v2;
io.netty.handler.codec.http2.Http2Error v0;
long v3;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.http2.Http2Error;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: long;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<io.netty.handler.codec.http2.Http2Error: long code> = v3;
return;
}
public long code()
{
io.netty.handler.codec.http2.Http2Error v0;
long v1;
v0 := @this: io.netty.handler.codec.http2.Http2Error;
v1 = v0.<io.netty.handler.codec.http2.Http2Error: long code>;
return v1;
}
public static io.netty.handler.codec.http2.Http2Error valueOf(long)
{
byte v3, v4;
int v2;
io.netty.handler.codec.http2.Http2Error v5;
long v0;
io.netty.handler.codec.http2.Http2Error[] v1, v6;
v0 := @parameter0: long;
v1 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] INT_TO_ENUM_MAP>;
v2 = lengthof v1;
v3 = v0 cmp v2;
if v3 >= 0 goto label1;
v4 = v0 cmp 0L;
if v4 >= 0 goto label2;
label1:
v5 = null;
goto label3;
label2:
v6 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] INT_TO_ENUM_MAP>;
v5 = v6[v0];
label3:
return v5;
}
private static io.netty.handler.codec.http2.Http2Error[] $values()
{
io.netty.handler.codec.http2.Http2Error[] v0;
io.netty.handler.codec.http2.Http2Error v1, v10, v11, v12, v13, v14, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (io.netty.handler.codec.http2.Http2Error)[14];
v1 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error NO_ERROR>;
v0[0] = v1;
v2 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v0[1] = v2;
v3 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR>;
v0[2] = v3;
v4 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error FLOW_CONTROL_ERROR>;
v0[3] = v4;
v5 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error SETTINGS_TIMEOUT>;
v0[4] = v5;
v6 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED>;
v0[5] = v6;
v7 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error FRAME_SIZE_ERROR>;
v0[6] = v7;
v8 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error REFUSED_STREAM>;
v0[7] = v8;
v9 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error CANCEL>;
v0[8] = v9;
v10 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error COMPRESSION_ERROR>;
v0[9] = v10;
v11 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error CONNECT_ERROR>;
v0[10] = v11;
v12 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error ENHANCE_YOUR_CALM>;
v0[11] = v12;
v13 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INADEQUATE_SECURITY>;
v0[12] = v13;
v14 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error HTTP_1_1_REQUIRED>;
v0[13] = v14;
return v0;
}
static void <clinit>()
{
long v21;
io.netty.handler.codec.http2.Http2Error[] v14, v15, v17;
int v16, v18, v19;
io.netty.handler.codec.http2.Http2Error v0, v1, v10, v11, v12, v13, v2, v20, v3, v4, v5, v6, v7, v8, v9;
v0 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v0.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("NO_ERROR", 0, 0L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error NO_ERROR> = v0;
v1 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v1.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("PROTOCOL_ERROR", 1, 1L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR> = v1;
v2 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v2.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("INTERNAL_ERROR", 2, 2L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR> = v2;
v3 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v3.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("FLOW_CONTROL_ERROR", 3, 3L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error FLOW_CONTROL_ERROR> = v3;
v4 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v4.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("SETTINGS_TIMEOUT", 4, 4L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error SETTINGS_TIMEOUT> = v4;
v5 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v5.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("STREAM_CLOSED", 5, 5L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error STREAM_CLOSED> = v5;
v6 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v6.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("FRAME_SIZE_ERROR", 6, 6L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error FRAME_SIZE_ERROR> = v6;
v7 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v7.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("REFUSED_STREAM", 7, 7L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error REFUSED_STREAM> = v7;
v8 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v8.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("CANCEL", 8, 8L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error CANCEL> = v8;
v9 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v9.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("COMPRESSION_ERROR", 9, 9L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error COMPRESSION_ERROR> = v9;
v10 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v10.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("CONNECT_ERROR", 10, 10L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error CONNECT_ERROR> = v10;
v11 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v11.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("ENHANCE_YOUR_CALM", 11, 11L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error ENHANCE_YOUR_CALM> = v11;
v12 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v12.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("INADEQUATE_SECURITY", 12, 12L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INADEQUATE_SECURITY> = v12;
v13 = new io.netty.handler.codec.http2.Http2Error;
specialinvoke v13.<io.netty.handler.codec.http2.Http2Error: void <init>(java.lang.String,int,long)>("HTTP_1_1_REQUIRED", 13, 13L);
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error HTTP_1_1_REQUIRED> = v13;
v14 = staticinvoke <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] $values()>();
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] $VALUES> = v14;
v15 = staticinvoke <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] values()>();
v16 = lengthof v15;
v17 = newarray (io.netty.handler.codec.http2.Http2Error)[v16];
v18 = lengthof v15;
v19 = 0;
label1:
if v19 >= v18 goto label2;
v20 = v15[v19];
v21 = virtualinvoke v20.<io.netty.handler.codec.http2.Http2Error: long code()>();
v17[v21] = v20;
v19 = v19 + 1;
goto label1;
label2:
<io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error[] INT_TO_ENUM_MAP> = v17;
return;
}
}