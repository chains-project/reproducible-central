public final enum class io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName extends java.lang.Enum
{
public static final enum io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD;
public static final enum io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME;
public static final enum io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY;
public static final enum io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH;
public static final enum io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS;
public static final enum io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PROTOCOL;
private static final char PSEUDO_HEADER_PREFIX;
private static final byte PSEUDO_HEADER_PREFIX_BYTE;
private final io.netty.util.AsciiString value;
private final boolean requestOnly;
private static final io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS;
private static final io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $VALUES;
public static io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] values()
{
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] v0;
java.lang.Object v1;
v0 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String, boolean)
{
int v2;
io.netty.util.AsciiString v5;
java.lang.String v1, v3;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v0;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v5 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString cached(java.lang.String)>(v3);
v0.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value> = v5;
v0.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: boolean requestOnly> = v4;
return;
}
public io.netty.util.AsciiString value()
{
io.netty.util.AsciiString v1;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v0;
v0 := @this: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
v1 = v0.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value>;
return v1;
}
public static boolean hasPseudoHeaderFormat(java.lang.CharSequence)
{
java.lang.CharSequence v0;
char v6;
byte v3;
int v2, v5;
boolean v1, v4, v7;
v0 := @parameter0: java.lang.CharSequence;
v1 = v0 instanceof io.netty.util.AsciiString;
if v1 == 0 goto label3;
v2 = virtualinvoke v0.<io.netty.util.AsciiString: int length()>();
if v2 <= 0 goto label1;
v3 = virtualinvoke v0.<io.netty.util.AsciiString: byte byteAt(int)>(0);
if v3 != 58 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
label3:
v5 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
if v5 <= 0 goto label4;
v6 = interfaceinvoke v0.<java.lang.CharSequence: char charAt(int)>(0);
if v6 != 58 goto label4;
v7 = 1;
goto label5;
label4:
v7 = 0;
label5:
return v7;
}
public static boolean isPseudoHeader(java.lang.CharSequence)
{
java.lang.CharSequence v0;
io.netty.handler.codec.http2.CharSequenceMap v1;
boolean v2;
v0 := @parameter0: java.lang.CharSequence;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.CharSequenceMap: boolean contains(java.lang.Object)>(v0);
return v2;
}
public static io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName getPseudoHeader(java.lang.CharSequence)
{
java.lang.Object v2;
java.lang.CharSequence v0;
io.netty.handler.codec.http2.CharSequenceMap v1;
v0 := @parameter0: java.lang.CharSequence;
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.CharSequenceMap: java.lang.Object get(java.lang.Object)>(v0);
return v2;
}
public boolean isRequestOnly()
{
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
v1 = v0.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: boolean requestOnly>;
return v1;
}
private static io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $values()
{
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] v0;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v1, v2, v3, v4, v5, v6;
v0 = newarray (io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName)[6];
v1 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD>;
v0[0] = v1;
v2 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME>;
v0[1] = v2;
v3 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY>;
v0[2] = v3;
v4 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH>;
v0[3] = v4;
v5 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS>;
v0[4] = v5;
v6 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PROTOCOL>;
v0[5] = v6;
return v0;
}
static void <clinit>()
{
io.netty.util.AsciiString v13;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v0, v1, v11, v2, v3, v4, v5;
int v10, v9;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] v6, v8;
io.netty.handler.codec.http2.CharSequenceMap v12, v7;
v0 = new io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
specialinvoke v0.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: void <init>(java.lang.String,int,java.lang.String,boolean)>("METHOD", 0, ":method", 1);
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD> = v0;
v1 = new io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
specialinvoke v1.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: void <init>(java.lang.String,int,java.lang.String,boolean)>("SCHEME", 1, ":scheme", 1);
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME> = v1;
v2 = new io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
specialinvoke v2.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: void <init>(java.lang.String,int,java.lang.String,boolean)>("AUTHORITY", 2, ":authority", 1);
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY> = v2;
v3 = new io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
specialinvoke v3.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: void <init>(java.lang.String,int,java.lang.String,boolean)>("PATH", 3, ":path", 1);
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH> = v3;
v4 = new io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
specialinvoke v4.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: void <init>(java.lang.String,int,java.lang.String,boolean)>("STATUS", 4, ":status", 0);
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS> = v4;
v5 = new io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName;
specialinvoke v5.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: void <init>(java.lang.String,int,java.lang.String,boolean)>("PROTOCOL", 5, ":protocol", 1);
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PROTOCOL> = v5;
v6 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $values()>();
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $VALUES> = v6;
v7 = new io.netty.handler.codec.http2.CharSequenceMap;
specialinvoke v7.<io.netty.handler.codec.http2.CharSequenceMap: void <init>()>();
<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS> = v7;
v8 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] values()>();
v9 = lengthof v8;
v10 = 0;
label1:
if v10 >= v9 goto label2;
v11 = v8[v10];
v12 = <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS>;
v13 = virtualinvoke v11.<io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.util.AsciiString value()>();
virtualinvoke v12.<io.netty.handler.codec.http2.CharSequenceMap: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v13, v11);
v10 = v10 + 1;
goto label1;
label2:
return;
}
}