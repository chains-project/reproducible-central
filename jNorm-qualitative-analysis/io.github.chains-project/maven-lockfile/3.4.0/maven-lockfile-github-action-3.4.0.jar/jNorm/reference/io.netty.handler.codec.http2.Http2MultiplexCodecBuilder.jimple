public class io.netty.handler.codec.http2.Http2MultiplexCodecBuilder extends io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder
{
private io.netty.handler.codec.http2.Http2FrameWriter frameWriter;
final io.netty.channel.ChannelHandler childHandler;
private io.netty.channel.ChannelHandler upgradeStreamHandler;
void <init>(boolean, io.netty.channel.ChannelHandler)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.channel.ChannelHandler v2, v4;
java.lang.Object v3;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 := @parameter1: io.netty.channel.ChannelHandler;
specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: void <init>()>();
virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder server(boolean)>(v1);
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "childHandler");
v4 = staticinvoke <io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.channel.ChannelHandler checkSharable(io.netty.channel.ChannelHandler)>(v3);
v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.channel.ChannelHandler childHandler> = v4;
virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder gracefulShutdownTimeoutMillis(long)>(0L);
return;
}
private static io.netty.channel.ChannelHandler checkSharable(io.netty.channel.ChannelHandler)
{
io.netty.channel.ChannelHandler v0;
java.lang.Class v3;
java.lang.IllegalArgumentException v5;
boolean v1, v2, v4;
v0 := @parameter0: io.netty.channel.ChannelHandler;
v1 = v0 instanceof io.netty.channel.ChannelHandlerAdapter;
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.netty.channel.ChannelHandlerAdapter: boolean isSharable()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lio/netty/channel/ChannelHandler$Sharable;");
if v4 != 0 goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The handler must be Sharable");
throw v5;
label1:
return v0;
}
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder frameWriter(io.netty.handler.codec.http2.Http2FrameWriter)
{
io.netty.handler.codec.http2.Http2FrameWriter v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
java.lang.Object v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameWriter;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "frameWriter");
v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2FrameWriter frameWriter> = v2;
return v0;
}
public static io.netty.handler.codec.http2.Http2MultiplexCodecBuilder forClient(io.netty.channel.ChannelHandler)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v1;
io.netty.channel.ChannelHandler v0;
v0 := @parameter0: io.netty.channel.ChannelHandler;
v1 = new io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
specialinvoke v1.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: void <init>(boolean,io.netty.channel.ChannelHandler)>(0, v0);
return v1;
}
public static io.netty.handler.codec.http2.Http2MultiplexCodecBuilder forServer(io.netty.channel.ChannelHandler)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v1;
io.netty.channel.ChannelHandler v0;
v0 := @parameter0: io.netty.channel.ChannelHandler;
v1 = new io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
specialinvoke v1.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: void <init>(boolean,io.netty.channel.ChannelHandler)>(1, v0);
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder withUpgradeStreamHandler(io.netty.channel.ChannelHandler)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.channel.ChannelHandler v1;
java.lang.IllegalArgumentException v3;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: io.netty.channel.ChannelHandler;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean isServer()>();
if v2 == 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Server codecs don\'t use an extra handler for the upgrade stream");
throw v3;
label1:
v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.channel.ChannelHandler upgradeStreamHandler> = v1;
return v0;
}
public io.netty.handler.codec.http2.Http2Settings initialSettings()
{
io.netty.handler.codec.http2.Http2Settings v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.Http2Settings initialSettings()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder initialSettings(io.netty.handler.codec.http2.Http2Settings)
{
io.netty.handler.codec.http2.Http2Settings v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Settings;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder initialSettings(io.netty.handler.codec.http2.Http2Settings)>(v1);
return v2;
}
public long gracefulShutdownTimeoutMillis()
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
long v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: long gracefulShutdownTimeoutMillis()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder gracefulShutdownTimeoutMillis(long)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
long v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: long;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder gracefulShutdownTimeoutMillis(long)>(v1);
return v2;
}
public boolean isServer()
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: boolean isServer()>();
return v1;
}
public int maxReservedStreams()
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: int maxReservedStreams()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder maxReservedStreams(int)
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder maxReservedStreams(int)>(v1);
return v2;
}
public boolean isValidateHeaders()
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: boolean isValidateHeaders()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder validateHeaders(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder validateHeaders(boolean)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2FrameLogger frameLogger()
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.Http2FrameLogger v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.Http2FrameLogger frameLogger()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder frameLogger(io.netty.handler.codec.http2.Http2FrameLogger)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
io.netty.handler.codec.http2.Http2FrameLogger v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameLogger;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder frameLogger(io.netty.handler.codec.http2.Http2FrameLogger)>(v1);
return v2;
}
public boolean encoderEnforceMaxConcurrentStreams()
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: boolean encoderEnforceMaxConcurrentStreams()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder encoderEnforceMaxConcurrentStreams(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderEnforceMaxConcurrentStreams(boolean)>(v1);
return v2;
}
public int encoderEnforceMaxQueuedControlFrames()
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: int encoderEnforceMaxQueuedControlFrames()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder encoderEnforceMaxQueuedControlFrames(int)
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderEnforceMaxQueuedControlFrames(int)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector headerSensitivityDetector()
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector headerSensitivityDetector()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder headerSensitivityDetector(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder headerSensitivityDetector(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder encoderIgnoreMaxHeaderListSize(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderIgnoreMaxHeaderListSize(boolean)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder initialHuffmanDecodeCapacity(int)
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder initialHuffmanDecodeCapacity(int)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder autoAckSettingsFrame(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder autoAckSettingsFrame(boolean)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder autoAckPingFrame(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder autoAckPingFrame(boolean)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder decoupleCloseAndGoAway(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder decoupleCloseAndGoAway(boolean)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder flushPreface(boolean)
{
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder flushPreface(boolean)>(v1);
return v2;
}
public int decoderEnforceMaxConsecutiveEmptyDataFrames()
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: int decoderEnforceMaxConsecutiveEmptyDataFrames()>();
return v1;
}
public io.netty.handler.codec.http2.Http2MultiplexCodecBuilder decoderEnforceMaxConsecutiveEmptyDataFrames(int)
{
int v1;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder decoderEnforceMaxConsecutiveEmptyDataFrames(int)>(v1);
return v2;
}
public io.netty.handler.codec.http2.Http2MultiplexCodec build()
{
io.netty.handler.codec.http2.StreamBufferingEncoder v21;
io.netty.handler.codec.http2.Http2FrameReader v12;
io.netty.handler.codec.http2.Http2ConnectionEncoder v19;
io.netty.handler.codec.http2.DefaultHttp2Connection v2;
io.netty.handler.codec.http2.Http2ConnectionDecoder v26;
java.lang.Long v6;
io.netty.handler.codec.http2.Http2FrameLogger v13, v15, v17;
boolean v10, v20, v24, v25, v3, v9;
io.netty.handler.codec.http2.Http2OutboundFrameLogger v14;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder v8;
io.netty.handler.codec.http2.Http2ConnectionHandler v31;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v22;
long v11;
io.netty.handler.codec.http2.DefaultHttp2FrameReader v7;
int v27, v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v18;
io.netty.handler.codec.http2.Http2EmptyDataFrameConnectionDecoder v28;
io.netty.handler.codec.http2.Http2PromisedRequestVerifier v23;
io.netty.handler.codec.http2.Http2FrameWriter v1;
io.netty.handler.codec.http2.Http2InboundFrameLogger v16;
io.netty.handler.codec.http2.Http2MultiplexCodec v30;
io.netty.handler.codec.http2.Http2Settings v29, v5;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 = v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2FrameWriter frameWriter>;
if v1 == null goto label6;
v2 = new io.netty.handler.codec.http2.DefaultHttp2Connection;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean isServer()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: int maxReservedStreams()>();
specialinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection: void <init>(boolean,int)>(v3, v4);
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2Settings initialSettings()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.http2.Http2Settings: java.lang.Long maxHeaderListSize()>();
v7 = new io.netty.handler.codec.http2.DefaultHttp2FrameReader;
if v6 != null goto label1;
v8 = new io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v9 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean isValidateHeaders()>();
specialinvoke v8.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean)>(v9);
goto label2;
label1:
v8 = new io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder;
v10 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean isValidateHeaders()>();
v11 = virtualinvoke v6.<java.lang.Long: long longValue()>();
specialinvoke v8.<io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder: void <init>(boolean,long)>(v10, v11);
label2:
specialinvoke v7.<io.netty.handler.codec.http2.DefaultHttp2FrameReader: void <init>(io.netty.handler.codec.http2.Http2HeadersDecoder)>(v8);
v12 = v7;
v13 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2FrameLogger frameLogger()>();
if v13 == null goto label3;
v14 = new io.netty.handler.codec.http2.Http2OutboundFrameLogger;
v15 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2FrameLogger frameLogger()>();
specialinvoke v14.<io.netty.handler.codec.http2.Http2OutboundFrameLogger: void <init>(io.netty.handler.codec.http2.Http2FrameWriter,io.netty.handler.codec.http2.Http2FrameLogger)>(v1, v15);
v1 = v14;
v16 = new io.netty.handler.codec.http2.Http2InboundFrameLogger;
v17 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2FrameLogger frameLogger()>();
specialinvoke v16.<io.netty.handler.codec.http2.Http2InboundFrameLogger: void <init>(io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2FrameLogger)>(v7, v17);
v12 = v16;
label3:
v18 = new io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder;
specialinvoke v18.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder: void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameWriter)>(v2, v1);
v19 = v18;
v20 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean encoderEnforceMaxConcurrentStreams()>();
if v20 == 0 goto label4;
v21 = new io.netty.handler.codec.http2.StreamBufferingEncoder;
specialinvoke v21.<io.netty.handler.codec.http2.StreamBufferingEncoder: void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder)>(v18);
v19 = v21;
label4:
v22 = new io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v23 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2PromisedRequestVerifier promisedRequestVerifier()>();
v24 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean isAutoAckSettingsFrame()>();
v25 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean isAutoAckPingFrame()>();
specialinvoke v22.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2PromisedRequestVerifier,boolean,boolean)>(v2, v19, v12, v23, v24, v25);
v26 = v22;
v27 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: int decoderEnforceMaxConsecutiveEmptyDataFrames()>();
if v27 <= 0 goto label5;
v28 = new io.netty.handler.codec.http2.Http2EmptyDataFrameConnectionDecoder;
specialinvoke v28.<io.netty.handler.codec.http2.Http2EmptyDataFrameConnectionDecoder: void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,int)>(v22, v27);
v26 = v28;
label5:
v29 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2Settings initialSettings()>();
v30 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.handler.codec.http2.Http2MultiplexCodec build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings)>(v26, v19, v29);
return v30;
label6:
v31 = specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder: io.netty.handler.codec.http2.Http2ConnectionHandler build()>();
return v31;
}
protected io.netty.handler.codec.http2.Http2MultiplexCodec build(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings)
{
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
io.netty.handler.codec.http2.Http2MultiplexCodecBuilder v0;
long v9;
io.netty.handler.codec.http2.Http2ConnectionDecoder v1;
io.netty.handler.codec.http2.Http2MultiplexCodec v4;
io.netty.handler.codec.http2.Http2Settings v3;
io.netty.channel.ChannelHandler v5, v6;
boolean v7, v8;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexCodecBuilder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionDecoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Settings;
v4 = new io.netty.handler.codec.http2.Http2MultiplexCodec;
v5 = v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.channel.ChannelHandler childHandler>;
v6 = v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: io.netty.channel.ChannelHandler upgradeStreamHandler>;
v7 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean decoupleCloseAndGoAway()>();
v8 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: boolean flushPreface()>();
specialinvoke v4.<io.netty.handler.codec.http2.Http2MultiplexCodec: void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelHandler,io.netty.channel.ChannelHandler,boolean,boolean)>(v2, v1, v3, v5, v6, v7, v8);
v9 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2MultiplexCodecBuilder: long gracefulShutdownTimeoutMillis()>();
virtualinvoke v4.<io.netty.handler.codec.http2.Http2MultiplexCodec: void gracefulShutdownTimeoutMillis(long)>(v9);
return v4;
}
}