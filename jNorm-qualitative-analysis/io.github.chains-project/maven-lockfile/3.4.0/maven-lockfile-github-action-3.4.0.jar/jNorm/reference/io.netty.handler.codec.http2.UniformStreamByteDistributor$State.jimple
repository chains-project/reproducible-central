final class io.netty.handler.codec.http2.UniformStreamByteDistributor$State extends java.lang.Object
{
final io.netty.handler.codec.http2.Http2Stream stream;
int streamableBytes;
boolean windowNegative;
boolean enqueued;
boolean writing;
static final boolean $assertionsDisabled;
final io.netty.handler.codec.http2.UniformStreamByteDistributor this$0;
void <init>(io.netty.handler.codec.http2.UniformStreamByteDistributor, io.netty.handler.codec.http2.Http2Stream)
{
io.netty.handler.codec.http2.Http2Stream v2;
io.netty.handler.codec.http2.UniformStreamByteDistributor$State v0;
io.netty.handler.codec.http2.UniformStreamByteDistributor v1;
v0 := @this: io.netty.handler.codec.http2.UniformStreamByteDistributor$State;
v1 := @parameter0: io.netty.handler.codec.http2.UniformStreamByteDistributor;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Stream;
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.UniformStreamByteDistributor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.Http2Stream stream> = v2;
return;
}
void updateStreamableBytes(int, boolean, int)
{
io.netty.handler.codec.http2.UniformStreamByteDistributor$State v0;
long v11, v12;
java.lang.AssertionError v5;
io.netty.handler.codec.http2.UniformStreamByteDistributor v10, v9;
int v1, v3, v7, v8;
java.lang.String v6;
boolean v13, v14, v2, v4;
v0 := @this: io.netty.handler.codec.http2.UniformStreamByteDistributor$State;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 = <io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean $assertionsDisabled>;
if v4 != 0 goto label1;
if v2 != 0 goto label1;
if v1 == 0 goto label1;
v5 = new java.lang.AssertionError;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (boolean,int)>(v2, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("hasFrame: \u0001 newStreamableBytes: \u0001");
specialinvoke v5.<java.lang.AssertionError: void <init>(java.lang.Object)>(v6);
throw v5;
label1:
v7 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: int streamableBytes>;
v8 = v1 - v7;
if v8 == 0 goto label2;
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: int streamableBytes> = v1;
v9 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.UniformStreamByteDistributor this$0>;
v10 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.UniformStreamByteDistributor this$0>;
v11 = v10.<io.netty.handler.codec.http2.UniformStreamByteDistributor: long totalStreamableBytes>;
v12 = v11 + v8;
v9.<io.netty.handler.codec.http2.UniformStreamByteDistributor: long totalStreamableBytes> = v12;
label2:
if v3 >= 0 goto label3;
v13 = 1;
goto label4;
label3:
v13 = 0;
label4:
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean windowNegative> = v13;
if v2 == 0 goto label6;
if v3 > 0 goto label5;
if v3 != 0 goto label6;
v14 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean writing>;
if v14 != 0 goto label6;
label5:
virtualinvoke v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: void addToQueue()>();
label6:
return;
}
void write(int, io.netty.handler.codec.http2.StreamByteDistributor$Writer) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v4;
java.lang.Object[] v6;
io.netty.handler.codec.http2.UniformStreamByteDistributor$State v0;
io.netty.handler.codec.http2.StreamByteDistributor$Writer v2;
io.netty.handler.codec.http2.Http2Exception v7;
int v1;
io.netty.handler.codec.http2.Http2Error v5;
io.netty.handler.codec.http2.Http2Stream v3;
v0 := @this: io.netty.handler.codec.http2.UniformStreamByteDistributor$State;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.http2.StreamByteDistributor$Writer;
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean writing> = 1;
label1:
v3 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.Http2Stream stream>;
interfaceinvoke v2.<io.netty.handler.codec.http2.StreamByteDistributor$Writer: void write(io.netty.handler.codec.http2.Http2Stream,int)>(v3, v1);
label2:
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean writing> = 0;
goto label4;
label3:
v4 := @caughtexception;
v5 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR>;
v6 = newarray (java.lang.Object)[0];
v7 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v5, v4, "byte distribution write error", v6);
throw v7;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
void addToQueue()
{
io.netty.handler.codec.http2.UniformStreamByteDistributor$State v0;
java.util.Deque v3;
boolean v1;
io.netty.handler.codec.http2.UniformStreamByteDistributor v2;
v0 := @this: io.netty.handler.codec.http2.UniformStreamByteDistributor$State;
v1 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean enqueued>;
if v1 != 0 goto label1;
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean enqueued> = 1;
v2 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.UniformStreamByteDistributor this$0>;
v3 = v2.<io.netty.handler.codec.http2.UniformStreamByteDistributor: java.util.Deque queue>;
interfaceinvoke v3.<java.util.Deque: void addLast(java.lang.Object)>(v0);
label1:
return;
}
void removeFromQueue()
{
io.netty.handler.codec.http2.UniformStreamByteDistributor$State v0;
java.util.Deque v3;
boolean v1;
io.netty.handler.codec.http2.UniformStreamByteDistributor v2;
v0 := @this: io.netty.handler.codec.http2.UniformStreamByteDistributor$State;
v1 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean enqueued>;
if v1 == 0 goto label1;
v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean enqueued> = 0;
v2 = v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: io.netty.handler.codec.http2.UniformStreamByteDistributor this$0>;
v3 = v2.<io.netty.handler.codec.http2.UniformStreamByteDistributor: java.util.Deque queue>;
interfaceinvoke v3.<java.util.Deque: boolean remove(java.lang.Object)>(v0);
label1:
return;
}
void close()
{
io.netty.handler.codec.http2.UniformStreamByteDistributor$State v0;
v0 := @this: io.netty.handler.codec.http2.UniformStreamByteDistributor$State;
virtualinvoke v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: void removeFromQueue()>();
virtualinvoke v0.<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: void updateStreamableBytes(int,boolean,int)>(0, 0, 0);
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http2/UniformStreamByteDistributor;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http2.UniformStreamByteDistributor$State: boolean $assertionsDisabled> = v2;
return;
}
}