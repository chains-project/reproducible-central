public class io.netty.handler.codec.socksx.v4.Socks4ServerDecoder extends io.netty.handler.codec.ReplayingDecoder
{
private static final int MAX_FIELD_LENGTH;
private io.netty.handler.codec.socksx.v4.Socks4CommandType type;
private java.lang.String dstAddr;
private int dstPort;
private java.lang.String userId;
public void <init>()
{
io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State v1;
io.netty.handler.codec.socksx.v4.Socks4ServerDecoder v0;
v0 := @this: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder;
v1 = <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State START>;
specialinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void <init>(java.lang.Object)>(v1);
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: void setSingleDecode(boolean)>(1);
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.socksx.v4.Socks4CommandType v14, v28;
io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State v18, v20, v32;
byte v10, v13;
int[] v4;
boolean v23, v25;
io.netty.handler.codec.DecoderException v11;
java.lang.Exception v36;
java.util.List v3;
io.netty.channel.ChannelHandlerContext v1;
short v8;
io.netty.buffer.ByteBuf v2, v34;
int v15, v16, v30, v33, v35, v6, v7;
java.lang.String v12, v17, v19, v21, v22, v24, v26, v29, v31;
io.netty.handler.codec.socksx.SocksVersion v9;
io.netty.handler.codec.socksx.v4.Socks4ServerDecoder v0;
java.lang.Object v5;
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest v27;
v0 := @this: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
label01:
v4 = <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$1: int[] $SwitchMap$io$netty$handler$codec$socksx$v4$Socks4ServerDecoder$State>;
v5 = virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.Object state()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State: int ordinal()>();
v7 = v4[v6];
tableswitch(v7)
{
case 1: goto label02;
case 2: goto label04;
case 3: goto label05;
case 4: goto label07;
case 5: goto label08;
default: goto label11;
};
label02:
v8 = virtualinvoke v2.<io.netty.buffer.ByteBuf: short readUnsignedByte()>();
v9 = <io.netty.handler.codec.socksx.SocksVersion: io.netty.handler.codec.socksx.SocksVersion SOCKS4a>;
v10 = virtualinvoke v9.<io.netty.handler.codec.socksx.SocksVersion: byte byteValue()>();
if v8 == v10 goto label03;
v11 = new io.netty.handler.codec.DecoderException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (short)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported protocol version: \u0001");
specialinvoke v11.<io.netty.handler.codec.DecoderException: void <init>(java.lang.String)>(v12);
throw v11;
label03:
v13 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte readByte()>();
v14 = staticinvoke <io.netty.handler.codec.socksx.v4.Socks4CommandType: io.netty.handler.codec.socksx.v4.Socks4CommandType valueOf(byte)>(v13);
v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: io.netty.handler.codec.socksx.v4.Socks4CommandType type> = v14;
v15 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: int dstPort> = v15;
v16 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readInt()>();
v17 = staticinvoke <io.netty.util.NetUtil: java.lang.String intToIpAddress(int)>(v16);
v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr> = v17;
v18 = <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State READ_USERID>;
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: void checkpoint(java.lang.Object)>(v18);
label04:
v19 = staticinvoke <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String readString(java.lang.String,io.netty.buffer.ByteBuf)>("userid", v2);
v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String userId> = v19;
v20 = <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State READ_DOMAIN>;
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: void checkpoint(java.lang.Object)>(v20);
label05:
v21 = "0.0.0.0";
v22 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr>;
v23 = virtualinvoke v21.<java.lang.String: boolean equals(java.lang.Object)>(v22);
if v23 != 0 goto label06;
v24 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr>;
v25 = virtualinvoke v24.<java.lang.String: boolean startsWith(java.lang.String)>("0.0.0.");
if v25 == 0 goto label06;
v26 = staticinvoke <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String readString(java.lang.String,io.netty.buffer.ByteBuf)>("dstAddr", v2);
v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr> = v26;
label06:
v27 = new io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest;
v28 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: io.netty.handler.codec.socksx.v4.Socks4CommandType type>;
v29 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr>;
v30 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: int dstPort>;
v31 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String userId>;
specialinvoke v27.<io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest: void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandType,java.lang.String,int,java.lang.String)>(v28, v29, v30, v31);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v27);
v32 = <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State SUCCESS>;
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: void checkpoint(java.lang.Object)>(v32);
label07:
v33 = virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: int actualReadableBytes()>();
if v33 <= 0 goto label11;
v34 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v33);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v34);
goto label11;
label08:
v35 = virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: int actualReadableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v35);
label09:
goto label11;
label10:
v36 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: void fail(java.util.List,java.lang.Exception)>(v3, v36);
label11:
return;
catch java.lang.Exception from label01 to label09 with label10;
}
private void fail(java.util.List, java.lang.Exception)
{
io.netty.handler.codec.socksx.v4.Socks4CommandType v6, v7;
io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State v16;
int v10, v11, v12;
java.lang.String v13, v14, v8, v9;
boolean v3;
io.netty.handler.codec.socksx.v4.Socks4ServerDecoder v0;
io.netty.handler.codec.DecoderException v4;
java.lang.Exception v2;
io.netty.handler.codec.DecoderResult v15;
java.util.List v1;
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest v5;
v0 := @this: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder;
v1 := @parameter0: java.util.List;
v2 := @parameter1: java.lang.Exception;
v3 = v2 instanceof io.netty.handler.codec.DecoderException;
if v3 != 0 goto label1;
v4 = new io.netty.handler.codec.DecoderException;
specialinvoke v4.<io.netty.handler.codec.DecoderException: void <init>(java.lang.Throwable)>(v2);
v2 = v4;
label1:
v5 = new io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest;
v6 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: io.netty.handler.codec.socksx.v4.Socks4CommandType type>;
if v6 == null goto label2;
v7 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: io.netty.handler.codec.socksx.v4.Socks4CommandType type>;
goto label3;
label2:
v7 = <io.netty.handler.codec.socksx.v4.Socks4CommandType: io.netty.handler.codec.socksx.v4.Socks4CommandType CONNECT>;
label3:
v8 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr>;
if v8 == null goto label4;
v9 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String dstAddr>;
goto label5;
label4:
v9 = "";
label5:
v10 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: int dstPort>;
if v10 == 0 goto label6;
v11 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: int dstPort>;
goto label7;
label6:
v12 = (int) 65535;
v11 = v12;
label7:
v13 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String userId>;
if v13 == null goto label8;
v14 = v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: java.lang.String userId>;
goto label9;
label8:
v14 = "";
label9:
specialinvoke v5.<io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest: void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandType,java.lang.String,int,java.lang.String)>(v7, v9, v11, v14);
v15 = staticinvoke <io.netty.handler.codec.DecoderResult: io.netty.handler.codec.DecoderResult failure(java.lang.Throwable)>(v2);
interfaceinvoke v5.<io.netty.handler.codec.socksx.v4.Socks4CommandRequest: void setDecoderResult(io.netty.handler.codec.DecoderResult)>(v15);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
v16 = <io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ServerDecoder$State FAILURE>;
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ServerDecoder: void checkpoint(java.lang.Object)>(v16);
return;
}
private static java.lang.String readString(java.lang.String, io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.DecoderException v3;
io.netty.buffer.ByteBuf v1, v5;
java.nio.charset.Charset v6;
int v2;
java.lang.String v0, v4, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int bytesBefore(int,byte)>(256, 0);
if v2 >= 0 goto label1;
v3 = new io.netty.handler.codec.DecoderException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("field \'\u0001\' longer than 255 chars");
specialinvoke v3.<io.netty.handler.codec.DecoderException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v2);
v6 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v7 = virtualinvoke v5.<io.netty.buffer.ByteBuf: java.lang.String toString(java.nio.charset.Charset)>(v6);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(1);
return v7;
}
}