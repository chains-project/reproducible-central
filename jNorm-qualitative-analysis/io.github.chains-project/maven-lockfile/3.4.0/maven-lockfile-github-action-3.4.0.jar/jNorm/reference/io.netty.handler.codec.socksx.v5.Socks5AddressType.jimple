public class io.netty.handler.codec.socksx.v5.Socks5AddressType extends java.lang.Object implements java.lang.Comparable
{
public static final io.netty.handler.codec.socksx.v5.Socks5AddressType IPv4;
public static final io.netty.handler.codec.socksx.v5.Socks5AddressType DOMAIN;
public static final io.netty.handler.codec.socksx.v5.Socks5AddressType IPv6;
private final byte byteValue;
private final java.lang.String name;
private java.lang.String text;
public static io.netty.handler.codec.socksx.v5.Socks5AddressType valueOf(byte)
{
byte v0;
io.netty.handler.codec.socksx.v5.Socks5AddressType v1, v2, v3, v4;
v0 := @parameter0: byte;
tableswitch(v0)
{
case 1: goto label1;
case 2: goto label4;
case 3: goto label2;
case 4: goto label3;
default: goto label4;
};
label1:
v1 = <io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType IPv4>;
return v1;
label2:
v2 = <io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType DOMAIN>;
return v2;
label3:
v3 = <io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType IPv6>;
return v3;
label4:
v4 = new io.netty.handler.codec.socksx.v5.Socks5AddressType;
specialinvoke v4.<io.netty.handler.codec.socksx.v5.Socks5AddressType: void <init>(int)>(v0);
return v4;
}
public void <init>(int)
{
int v1;
io.netty.handler.codec.socksx.v5.Socks5AddressType v0;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: void <init>(int,java.lang.String)>(v1, "UNKNOWN");
return;
}
public void <init>(int, java.lang.String)
{
io.netty.handler.codec.socksx.v5.Socks5AddressType v0;
int v1;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "name");
v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: java.lang.String name> = v3;
v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue> = v1;
return;
}
public byte byteValue()
{
byte v1;
io.netty.handler.codec.socksx.v5.Socks5AddressType v0;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
return v1;
}
public int hashCode()
{
byte v1;
io.netty.handler.codec.socksx.v5.Socks5AddressType v0;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
return v1;
}
public boolean equals(java.lang.Object)
{
byte v3, v4;
io.netty.handler.codec.socksx.v5.Socks5AddressType v0;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.socksx.v5.Socks5AddressType;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
v4 = v1.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
if v3 != v4 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public int compareTo(io.netty.handler.codec.socksx.v5.Socks5AddressType)
{
byte v2, v3;
io.netty.handler.codec.socksx.v5.Socks5AddressType v0, v1;
int v4;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 := @parameter0: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v2 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
v3 = v1.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
v4 = v2 - v3;
return v4;
}
public java.lang.String toString()
{
short v4;
byte v3;
io.netty.handler.codec.socksx.v5.Socks5AddressType v0;
java.lang.String v1, v2, v5;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v1 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: java.lang.String text>;
if v1 != null goto label1;
v2 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: java.lang.String name>;
v3 = v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue>;
v4 = v3 & 255;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,short)>(v2, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001)");
v1 = v5;
v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: java.lang.String text> = v5;
label1:
return v1;
}
static void <clinit>()
{
io.netty.handler.codec.socksx.v5.Socks5AddressType v0, v1, v2;
v0 = new io.netty.handler.codec.socksx.v5.Socks5AddressType;
specialinvoke v0.<io.netty.handler.codec.socksx.v5.Socks5AddressType: void <init>(int,java.lang.String)>(1, "IPv4");
<io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType IPv4> = v0;
v1 = new io.netty.handler.codec.socksx.v5.Socks5AddressType;
specialinvoke v1.<io.netty.handler.codec.socksx.v5.Socks5AddressType: void <init>(int,java.lang.String)>(3, "DOMAIN");
<io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType DOMAIN> = v1;
v2 = new io.netty.handler.codec.socksx.v5.Socks5AddressType;
specialinvoke v2.<io.netty.handler.codec.socksx.v5.Socks5AddressType: void <init>(int,java.lang.String)>(4, "IPv6");
<io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType IPv6> = v2;
return;
}
}