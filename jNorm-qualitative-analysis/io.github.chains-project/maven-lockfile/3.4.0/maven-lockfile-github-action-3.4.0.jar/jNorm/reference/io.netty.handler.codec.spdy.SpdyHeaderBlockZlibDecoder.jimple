final class io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder extends io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder
{
private static final int DEFAULT_BUFFER_CAPACITY;
private static final io.netty.handler.codec.spdy.SpdyProtocolException INVALID_HEADER_BLOCK;
private final java.util.zip.Inflater decompressor;
private io.netty.buffer.ByteBuf decompressed;
void <init>(io.netty.handler.codec.spdy.SpdyVersion, int)
{
io.netty.handler.codec.spdy.SpdyVersion v1;
java.util.zip.Inflater v3;
int v2;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion,int)>(v1, v2);
v3 = new java.util.zip.Inflater;
specialinvoke v3.<java.util.zip.Inflater: void <init>()>();
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor> = v3;
return;
}
void decode(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, io.netty.handler.codec.spdy.SpdyHeadersFrame) throws java.lang.Exception
{
io.netty.handler.codec.spdy.SpdyHeadersFrame v3;
java.util.zip.Inflater v6;
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
io.netty.buffer.ByteBuf v2;
int v4, v5, v7;
io.netty.handler.codec.spdy.SpdyProtocolException v8;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.handler.codec.spdy.SpdyHeadersFrame;
v4 = specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: int setInput(io.netty.buffer.ByteBuf)>(v2);
label1:
v5 = specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: int decompress(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.spdy.SpdyHeadersFrame)>(v1, v3);
if v5 > 0 goto label1;
v6 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v7 = virtualinvoke v6.<java.util.zip.Inflater: int getRemaining()>();
if v7 == 0 goto label2;
v8 = <io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.handler.codec.spdy.SpdyProtocolException INVALID_HEADER_BLOCK>;
throw v8;
label2:
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v4);
return;
}
private int setInput(io.netty.buffer.ByteBuf)
{
byte[] v5, v9;
java.util.zip.Inflater v11, v4;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
io.netty.buffer.ByteBuf v1;
int v10, v12, v2, v6, v7, v8;
boolean v3;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean hasArray()>();
if v3 == 0 goto label1;
v4 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: byte[] array()>();
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v7 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v8 = v6 + v7;
virtualinvoke v4.<java.util.zip.Inflater: void setInput(byte[],int,int)>(v5, v8, v2);
goto label2;
label1:
v9 = newarray (byte)[v2];
v10 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf getBytes(int,byte[])>(v10, v9);
v11 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v12 = lengthof v9;
virtualinvoke v11.<java.util.zip.Inflater: void setInput(byte[],int,int)>(v9, 0, v12);
label2:
return v2;
}
private int decompress(io.netty.buffer.ByteBufAllocator, io.netty.handler.codec.spdy.SpdyHeadersFrame) throws java.lang.Exception
{
byte[] v17, v4;
io.netty.handler.codec.spdy.SpdyHeadersFrame v2;
java.util.zip.Inflater v10, v14, v16, v20;
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
io.netty.buffer.ByteBuf v11, v21, v23, v24, v27, v28, v3, v5, v7;
int v12, v13, v22, v25, v26, v6, v8, v9;
java.util.zip.DataFormatException v29;
io.netty.handler.codec.spdy.SpdyProtocolException v19, v30;
boolean v15;
java.lang.IllegalArgumentException v18;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.handler.codec.spdy.SpdyHeadersFrame;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: void ensureBuffer(io.netty.buffer.ByteBufAllocator)>(v1);
v3 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: byte[] array()>();
v5 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v6 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v7 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v8 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int writerIndex()>();
v9 = v6 + v8;
label1:
v10 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v11 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v12 = virtualinvoke v11.<io.netty.buffer.ByteBuf: int writableBytes()>();
v13 = virtualinvoke v10.<java.util.zip.Inflater: int inflate(byte[],int,int)>(v4, v9, v12);
if v13 != 0 goto label6;
v14 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v15 = virtualinvoke v14.<java.util.zip.Inflater: boolean needsDictionary()>();
if v15 == 0 goto label6;
label2:
v16 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v17 = <io.netty.handler.codec.spdy.SpdyCodecUtil: byte[] SPDY_DICT>;
virtualinvoke v16.<java.util.zip.Inflater: void setDictionary(byte[])>(v17);
label3:
goto label5;
label4:
v18 := @caughtexception;
v19 = <io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.handler.codec.spdy.SpdyProtocolException INVALID_HEADER_BLOCK>;
throw v19;
label5:
v20 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
v21 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v22 = virtualinvoke v21.<io.netty.buffer.ByteBuf: int writableBytes()>();
v13 = virtualinvoke v20.<java.util.zip.Inflater: int inflate(byte[],int,int)>(v4, v9, v22);
label6:
if v2 == null goto label7;
v23 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v24 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
v25 = virtualinvoke v24.<io.netty.buffer.ByteBuf: int writerIndex()>();
v26 = v25 + v13;
virtualinvoke v23.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writerIndex(int)>(v26);
v27 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: void decodeHeaderBlock(io.netty.buffer.ByteBuf,io.netty.handler.codec.spdy.SpdyHeadersFrame)>(v27, v2);
v28 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
virtualinvoke v28.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf discardReadBytes()>();
label7:
return v13;
label8:
v29 := @caughtexception;
v30 = new io.netty.handler.codec.spdy.SpdyProtocolException;
specialinvoke v30.<io.netty.handler.codec.spdy.SpdyProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("Received invalid header block", v29);
throw v30;
catch java.lang.IllegalArgumentException from label2 to label3 with label4;
catch java.util.zip.DataFormatException from label1 to label7 with label8;
}
private void ensureBuffer(io.netty.buffer.ByteBufAllocator)
{
io.netty.buffer.ByteBuf v2, v3, v4;
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
if v2 != null goto label1;
v3 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(4096);
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed> = v3;
label1:
v4 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf ensureWritable(int)>(1);
return;
}
void endHeaderBlock(io.netty.handler.codec.spdy.SpdyHeadersFrame) throws java.lang.Exception
{
io.netty.handler.codec.spdy.SpdyHeadersFrame v1;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyHeadersFrame;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void endHeaderBlock(io.netty.handler.codec.spdy.SpdyHeadersFrame)>(v1);
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: void releaseBuffer()>();
return;
}
public void end()
{
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
java.util.zip.Inflater v1;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void end()>();
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: void releaseBuffer()>();
v1 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: java.util.zip.Inflater decompressor>;
virtualinvoke v1.<java.util.zip.Inflater: void end()>();
return;
}
private void releaseBuffer()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder;
v1 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.buffer.ByteBuf decompressed> = null;
label1:
return;
}
static void <clinit>()
{
io.netty.handler.codec.spdy.SpdyProtocolException v0;
v0 = new io.netty.handler.codec.spdy.SpdyProtocolException;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyProtocolException: void <init>(java.lang.String)>("Invalid Header Block");
<io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder: io.netty.handler.codec.spdy.SpdyProtocolException INVALID_HEADER_BLOCK> = v0;
return;
}
}