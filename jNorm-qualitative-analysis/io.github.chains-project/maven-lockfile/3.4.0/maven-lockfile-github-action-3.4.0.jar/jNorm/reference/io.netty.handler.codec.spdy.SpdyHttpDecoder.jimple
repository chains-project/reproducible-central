public class io.netty.handler.codec.spdy.SpdyHttpDecoder extends io.netty.handler.codec.MessageToMessageDecoder
{
private final boolean validateHeaders;
private final int spdyVersion;
private final int maxContentLength;
private final java.util.Map messageMap;
public void <init>(io.netty.handler.codec.spdy.SpdyVersion, int)
{
io.netty.handler.codec.spdy.SpdyVersion v1;
int v2;
java.util.HashMap v3;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map,boolean)>(v1, v2, v3, 1);
return;
}
public void <init>(io.netty.handler.codec.spdy.SpdyVersion, int, boolean)
{
io.netty.handler.codec.spdy.SpdyVersion v1;
int v2;
java.util.HashMap v4;
boolean v3;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map,boolean)>(v1, v2, v4, v3);
return;
}
protected void <init>(io.netty.handler.codec.spdy.SpdyVersion, int, java.util.Map)
{
io.netty.handler.codec.spdy.SpdyVersion v1;
java.util.Map v3;
int v2;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map,boolean)>(v1, v2, v3, 1);
return;
}
protected void <init>(io.netty.handler.codec.spdy.SpdyVersion, int, java.util.Map, boolean)
{
io.netty.handler.codec.spdy.SpdyVersion v1;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
java.util.Map v3;
int v2, v6, v7;
java.lang.Object v5;
boolean v4;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: boolean;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void <init>()>();
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "version");
v6 = virtualinvoke v5.<io.netty.handler.codec.spdy.SpdyVersion: int getVersion()>();
v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: int spdyVersion> = v6;
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v2, "maxContentLength");
v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: int maxContentLength> = v7;
v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: java.util.Map messageMap> = v3;
v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: boolean validateHeaders> = v4;
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.util.Iterator v4;
java.util.Set v3;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
io.netty.channel.ChannelHandlerContext v1;
java.util.Map v2, v8;
java.lang.Object v6, v7;
boolean v5;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: java.util.Map messageMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <io.netty.util.ReferenceCountUtil: void safeRelease(java.lang.Object)>(v7);
goto label1;
label2:
v8 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: java.util.Map messageMap>;
interfaceinvoke v8.<java.util.Map: void clear()>();
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
protected io.netty.handler.codec.http.FullHttpMessage putMessage(int, io.netty.handler.codec.http.FullHttpMessage)
{
io.netty.handler.codec.http.FullHttpMessage v2;
java.util.Map v3;
int v1;
java.lang.Object v5;
java.lang.Integer v4;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.http.FullHttpMessage;
v3 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: java.util.Map messageMap>;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v2);
return v5;
}
protected io.netty.handler.codec.http.FullHttpMessage getMessage(int)
{
java.util.Map v2;
int v1;
java.lang.Object v4;
java.lang.Integer v3;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: java.util.Map messageMap>;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
return v4;
}
protected io.netty.handler.codec.http.FullHttpMessage removeMessage(int)
{
java.util.Map v2;
int v1;
java.lang.Object v4;
java.lang.Integer v3;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: java.util.Map messageMap>;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v3);
return v4;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.spdy.SpdyFrame, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v18, v20, v22, v38, v57, v73, v84;
io.netty.handler.codec.spdy.SpdyStreamStatus v12, v15, v27, v53, v62, v69, v78, v9;
io.netty.util.AsciiString v19, v21, v23, v31, v34, v39, v44, v47, v58, v74;
byte v24;
io.netty.handler.codec.http.FullHttpRequest v17, v37;
io.netty.handler.codec.http.FullHttpMessage v65, v92;
java.lang.Throwable v25, v41, v60, v76;
io.netty.handler.codec.spdy.SpdyFrame v2;
java.lang.String v101;
io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame v11, v14, v26, v52, v61, v68, v77, v8;
io.netty.handler.codec.spdy.SpdyHttpDecoder v0;
io.netty.buffer.ByteBufAllocator v16, v36, v54, v70;
boolean v10, v105, v107, v13, v28, v4, v40, v49, v51, v55, v59, v6, v63, v66, v67, v71, v75, v79, v82, v87, v90;
io.netty.handler.codec.TooLongFrameException v99;
io.netty.handler.codec.http.HttpResponseStatus v32, v45;
java.util.List v3;
io.netty.handler.codec.http.HttpVersion v35, v48;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v102, v88, v93, v96;
int v100, v103, v104, v106, v108, v33, v46, v5, v50, v64, v7, v89, v91, v94, v95, v97, v98;
io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame v29, v42;
java.util.Iterator v81;
io.netty.handler.codec.http.FullHttpResponse v56, v72;
io.netty.handler.codec.spdy.SpdyHeaders v30, v43, v80;
java.lang.Object v83, v85, v86;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.spdy.SpdyFrame;
v3 := @parameter2: java.util.List;
v4 = v2 instanceof io.netty.handler.codec.spdy.SpdySynStreamFrame;
if v4 == 0 goto label11;
v5 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: int streamId()>();
v6 = staticinvoke <io.netty.handler.codec.spdy.SpdyCodecUtil: boolean isServerId(int)>(v5);
if v6 == 0 goto label06;
v7 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: int associatedStreamId()>();
if v7 != 0 goto label01;
v8 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v9 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_STREAM>;
specialinvoke v8.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v5, v9);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v8);
return;
label01:
v10 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: boolean isLast()>();
if v10 == 0 goto label02;
v11 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v12 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR>;
specialinvoke v11.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v5, v12);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v11);
return;
label02:
v13 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: boolean isTruncated()>();
if v13 == 0 goto label03;
v14 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v15 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR>;
specialinvoke v14.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v5, v15);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v14);
return;
label03:
v16 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v17 = staticinvoke <io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpRequest createHttpRequest(io.netty.handler.codec.spdy.SpdyHeadersFrame,io.netty.buffer.ByteBufAllocator)>(v2, v16);
v18 = interfaceinvoke v17.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v19 = <io.netty.handler.codec.spdy.SpdyHttpHeaders$Names: io.netty.util.AsciiString STREAM_ID>;
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v19, v5);
v20 = interfaceinvoke v17.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v21 = <io.netty.handler.codec.spdy.SpdyHttpHeaders$Names: io.netty.util.AsciiString ASSOCIATED_TO_STREAM_ID>;
virtualinvoke v20.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v21, v7);
v22 = interfaceinvoke v17.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v23 = <io.netty.handler.codec.spdy.SpdyHttpHeaders$Names: io.netty.util.AsciiString PRIORITY>;
v24 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: byte priority()>();
virtualinvoke v22.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v23, v24);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v17);
label04:
goto label29;
label05:
v25 := @caughtexception;
v26 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v27 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR>;
specialinvoke v26.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v5, v27);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v26);
goto label29;
label06:
v28 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: boolean isTruncated()>();
if v28 == 0 goto label07;
v29 = new io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame;
specialinvoke v29.<io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame: void <init>(int)>(v5);
interfaceinvoke v29.<io.netty.handler.codec.spdy.SpdySynReplyFrame: io.netty.handler.codec.spdy.SpdySynReplyFrame setLast(boolean)>(1);
v30 = interfaceinvoke v29.<io.netty.handler.codec.spdy.SpdySynReplyFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v31 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString STATUS>;
v32 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus REQUEST_HEADER_FIELDS_TOO_LARGE>;
v33 = virtualinvoke v32.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
interfaceinvoke v30.<io.netty.handler.codec.spdy.SpdyHeaders: io.netty.handler.codec.Headers setInt(java.lang.Object,int)>(v31, v33);
v34 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString VERSION>;
v35 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_0>;
interfaceinvoke v30.<io.netty.handler.codec.spdy.SpdyHeaders: io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object)>(v34, v35);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v29);
return;
label07:
v36 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v37 = staticinvoke <io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpRequest createHttpRequest(io.netty.handler.codec.spdy.SpdyHeadersFrame,io.netty.buffer.ByteBufAllocator)>(v2, v36);
v38 = interfaceinvoke v37.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v39 = <io.netty.handler.codec.spdy.SpdyHttpHeaders$Names: io.netty.util.AsciiString STREAM_ID>;
virtualinvoke v38.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v39, v5);
v40 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynStreamFrame: boolean isLast()>();
if v40 == 0 goto label08;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v37);
goto label29;
label08:
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage putMessage(int,io.netty.handler.codec.http.FullHttpMessage)>(v5, v37);
label09:
goto label29;
label10:
v41 := @caughtexception;
v42 = new io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame;
specialinvoke v42.<io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame: void <init>(int)>(v5);
interfaceinvoke v42.<io.netty.handler.codec.spdy.SpdySynReplyFrame: io.netty.handler.codec.spdy.SpdySynReplyFrame setLast(boolean)>(1);
v43 = interfaceinvoke v42.<io.netty.handler.codec.spdy.SpdySynReplyFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v44 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString STATUS>;
v45 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST>;
v46 = virtualinvoke v45.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
interfaceinvoke v43.<io.netty.handler.codec.spdy.SpdyHeaders: io.netty.handler.codec.Headers setInt(java.lang.Object,int)>(v44, v46);
v47 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString VERSION>;
v48 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_0>;
interfaceinvoke v43.<io.netty.handler.codec.spdy.SpdyHeaders: io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object)>(v47, v48);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v42);
goto label29;
label11:
v49 = v2 instanceof io.netty.handler.codec.spdy.SpdySynReplyFrame;
if v49 == 0 goto label16;
v50 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynReplyFrame: int streamId()>();
v51 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynReplyFrame: boolean isTruncated()>();
if v51 == 0 goto label12;
v52 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v53 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR>;
specialinvoke v52.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v50, v53);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v52);
return;
label12:
v54 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v55 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: boolean validateHeaders>;
v56 = staticinvoke <io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpResponse createHttpResponse(io.netty.handler.codec.spdy.SpdyHeadersFrame,io.netty.buffer.ByteBufAllocator,boolean)>(v2, v54, v55);
v57 = interfaceinvoke v56.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v58 = <io.netty.handler.codec.spdy.SpdyHttpHeaders$Names: io.netty.util.AsciiString STREAM_ID>;
virtualinvoke v57.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v58, v50);
v59 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdySynReplyFrame: boolean isLast()>();
if v59 == 0 goto label13;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v56, 0L);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v56);
goto label29;
label13:
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage putMessage(int,io.netty.handler.codec.http.FullHttpMessage)>(v50, v56);
label14:
goto label29;
label15:
v60 := @caughtexception;
v61 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v62 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR>;
specialinvoke v61.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v50, v62);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v61);
goto label29;
label16:
v63 = v2 instanceof io.netty.handler.codec.spdy.SpdyHeadersFrame;
if v63 == 0 goto label25;
v64 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: int streamId()>();
v65 = virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage getMessage(int)>(v64);
if v65 != null goto label22;
v66 = staticinvoke <io.netty.handler.codec.spdy.SpdyCodecUtil: boolean isServerId(int)>(v64);
if v66 == 0 goto label21;
v67 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: boolean isTruncated()>();
if v67 == 0 goto label17;
v68 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v69 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR>;
specialinvoke v68.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v64, v69);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v68);
return;
label17:
v70 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v71 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: boolean validateHeaders>;
v72 = staticinvoke <io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpResponse createHttpResponse(io.netty.handler.codec.spdy.SpdyHeadersFrame,io.netty.buffer.ByteBufAllocator,boolean)>(v2, v70, v71);
v73 = interfaceinvoke v72.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v74 = <io.netty.handler.codec.spdy.SpdyHttpHeaders$Names: io.netty.util.AsciiString STREAM_ID>;
virtualinvoke v73.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v74, v64);
v75 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: boolean isLast()>();
if v75 == 0 goto label18;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v72, 0L);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v72);
goto label21;
label18:
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage putMessage(int,io.netty.handler.codec.http.FullHttpMessage)>(v64, v72);
label19:
goto label21;
label20:
v76 := @caughtexception;
v77 = new io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame;
v78 = <io.netty.handler.codec.spdy.SpdyStreamStatus: io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR>;
specialinvoke v77.<io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame: void <init>(int,io.netty.handler.codec.spdy.SpdyStreamStatus)>(v64, v78);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v77);
label21:
return;
label22:
v79 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: boolean isTruncated()>();
if v79 != 0 goto label24;
v80 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v81 = interfaceinvoke v80.<io.netty.handler.codec.spdy.SpdyHeaders: java.util.Iterator iterator()>();
label23:
v82 = interfaceinvoke v81.<java.util.Iterator: boolean hasNext()>();
if v82 == 0 goto label24;
v83 = interfaceinvoke v81.<java.util.Iterator: java.lang.Object next()>();
v84 = interfaceinvoke v65.<io.netty.handler.codec.http.FullHttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v85 = interfaceinvoke v83.<java.util.Map$Entry: java.lang.Object getKey()>();
v86 = interfaceinvoke v83.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v84.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v85, v86);
goto label23;
label24:
v87 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: boolean isLast()>();
if v87 == 0 goto label29;
v88 = interfaceinvoke v65.<io.netty.handler.codec.http.FullHttpMessage: io.netty.buffer.ByteBuf content()>();
v89 = virtualinvoke v88.<io.netty.buffer.ByteBuf: int readableBytes()>();
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v65, v89);
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage removeMessage(int)>(v64);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v65);
goto label29;
label25:
v90 = v2 instanceof io.netty.handler.codec.spdy.SpdyDataFrame;
if v90 == 0 goto label28;
v91 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyDataFrame: int streamId()>();
v92 = virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage getMessage(int)>(v91);
if v92 != null goto label26;
return;
label26:
v93 = interfaceinvoke v92.<io.netty.handler.codec.http.FullHttpMessage: io.netty.buffer.ByteBuf content()>();
v94 = virtualinvoke v93.<io.netty.buffer.ByteBuf: int readableBytes()>();
v95 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: int maxContentLength>;
v96 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyDataFrame: io.netty.buffer.ByteBuf content()>();
v97 = virtualinvoke v96.<io.netty.buffer.ByteBuf: int readableBytes()>();
v98 = v95 - v97;
if v94 <= v98 goto label27;
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage removeMessage(int)>(v91);
v99 = new io.netty.handler.codec.TooLongFrameException;
v100 = v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: int maxContentLength>;
v101 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v100) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("HTTP content length exceeded \u0001 bytes.");
specialinvoke v99.<io.netty.handler.codec.TooLongFrameException: void <init>(java.lang.String)>(v101);
throw v99;
label27:
v102 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyDataFrame: io.netty.buffer.ByteBuf content()>();
v103 = virtualinvoke v102.<io.netty.buffer.ByteBuf: int readableBytes()>();
v104 = virtualinvoke v102.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v93.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int)>(v102, v104, v103);
v105 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyDataFrame: boolean isLast()>();
if v105 == 0 goto label29;
v106 = virtualinvoke v93.<io.netty.buffer.ByteBuf: int readableBytes()>();
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v92, v106);
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage removeMessage(int)>(v91);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v92);
goto label29;
label28:
v107 = v2 instanceof io.netty.handler.codec.spdy.SpdyRstStreamFrame;
if v107 == 0 goto label29;
v108 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyRstStreamFrame: int streamId()>();
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHttpDecoder: io.netty.handler.codec.http.FullHttpMessage removeMessage(int)>(v108);
label29:
return;
catch java.lang.Throwable from label03 to label04 with label05;
catch java.lang.Throwable from label07 to label09 with label10;
catch java.lang.Throwable from label12 to label14 with label15;
catch java.lang.Throwable from label17 to label19 with label20;
}
private static io.netty.handler.codec.http.FullHttpRequest createHttpRequest(io.netty.handler.codec.spdy.SpdyHeadersFrame, io.netty.buffer.ByteBufAllocator) throws java.lang.Exception
{
io.netty.handler.codec.spdy.SpdyHeadersFrame v0;
io.netty.handler.codec.http.HttpHeaders v20, v26, v29;
io.netty.handler.codec.http.DefaultFullHttpRequest v15;
io.netty.buffer.ByteBufAllocator v1;
io.netty.util.AsciiString v11, v12, v13, v16, v17, v19, v21, v3, v30, v6, v8;
boolean v24;
java.lang.Throwable v31;
io.netty.handler.codec.http.HttpVersion v10;
io.netty.buffer.ByteBuf v14;
java.lang.String v4, v7, v9;
java.util.Iterator v23;
io.netty.handler.codec.http.HttpMethod v5;
io.netty.handler.codec.spdy.SpdyHeaders v2, v22;
java.lang.Object v18, v25, v27, v28;
v0 := @parameter0: io.netty.handler.codec.spdy.SpdyHeadersFrame;
v1 := @parameter1: io.netty.buffer.ByteBufAllocator;
v2 = interfaceinvoke v0.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v3 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString METHOD>;
v4 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: java.lang.String getAsString(java.lang.CharSequence)>(v3);
v5 = staticinvoke <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String)>(v4);
v6 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString PATH>;
v7 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: java.lang.String getAsString(java.lang.CharSequence)>(v6);
v8 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString VERSION>;
v9 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: java.lang.String getAsString(java.lang.CharSequence)>(v8);
v10 = staticinvoke <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String)>(v9);
v11 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString METHOD>;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v11);
v12 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString PATH>;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v12);
v13 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString VERSION>;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v13);
v14 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer()>();
label1:
v15 = new io.netty.handler.codec.http.DefaultFullHttpRequest;
specialinvoke v15.<io.netty.handler.codec.http.DefaultFullHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)>(v10, v5, v7, v14);
v16 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString SCHEME>;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v16);
v17 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString HOST>;
v18 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: java.lang.Object get(java.lang.Object)>(v17);
v19 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString HOST>;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v19);
v20 = interfaceinvoke v15.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v21 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
virtualinvoke v20.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v21, v18);
v22 = interfaceinvoke v0.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v23 = interfaceinvoke v22.<io.netty.handler.codec.spdy.SpdyHeaders: java.util.Iterator iterator()>();
label2:
v24 = interfaceinvoke v23.<java.util.Iterator: boolean hasNext()>();
if v24 == 0 goto label3;
v25 = interfaceinvoke v23.<java.util.Iterator: java.lang.Object next()>();
v26 = interfaceinvoke v15.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v27 = interfaceinvoke v25.<java.util.Map$Entry: java.lang.Object getKey()>();
v28 = interfaceinvoke v25.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v26.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v27, v28);
goto label2;
label3:
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)>(v15, 1);
v29 = interfaceinvoke v15.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v30 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v30);
label4:
return v15;
label5:
v31 := @caughtexception;
virtualinvoke v14.<io.netty.buffer.ByteBuf: boolean release()>();
throw v31;
catch java.lang.Throwable from label1 to label4 with label5;
}
private static io.netty.handler.codec.http.FullHttpResponse createHttpResponse(io.netty.handler.codec.spdy.SpdyHeadersFrame, io.netty.buffer.ByteBufAllocator, boolean) throws java.lang.Exception
{
java.lang.Throwable v25;
io.netty.handler.codec.http.HttpVersion v9;
io.netty.handler.codec.spdy.SpdyHeadersFrame v0;
io.netty.handler.codec.http.HttpHeaders v18, v21, v23;
io.netty.buffer.ByteBufAllocator v1;
io.netty.util.AsciiString v10, v11, v22, v24, v4, v7;
io.netty.buffer.ByteBuf v12;
java.lang.String v8;
boolean v16, v2;
java.util.Iterator v15;
io.netty.handler.codec.http.HttpResponseStatus v6;
io.netty.handler.codec.http.DefaultFullHttpResponse v13;
io.netty.handler.codec.spdy.SpdyHeaders v14, v3;
java.lang.Object v17, v19, v20, v5;
v0 := @parameter0: io.netty.handler.codec.spdy.SpdyHeadersFrame;
v1 := @parameter1: io.netty.buffer.ByteBufAllocator;
v2 := @parameter2: boolean;
v3 = interfaceinvoke v0.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v4 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString STATUS>;
v5 = interfaceinvoke v3.<io.netty.handler.codec.spdy.SpdyHeaders: java.lang.Object get(java.lang.Object)>(v4);
v6 = staticinvoke <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus parseLine(java.lang.CharSequence)>(v5);
v7 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString VERSION>;
v8 = interfaceinvoke v3.<io.netty.handler.codec.spdy.SpdyHeaders: java.lang.String getAsString(java.lang.CharSequence)>(v7);
v9 = staticinvoke <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String)>(v8);
v10 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString STATUS>;
interfaceinvoke v3.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v10);
v11 = <io.netty.handler.codec.spdy.SpdyHeaders$HttpNames: io.netty.util.AsciiString VERSION>;
interfaceinvoke v3.<io.netty.handler.codec.spdy.SpdyHeaders: boolean remove(java.lang.Object)>(v11);
v12 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer()>();
label1:
v13 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
specialinvoke v13.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,boolean)>(v9, v6, v12, v2);
v14 = interfaceinvoke v0.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v15 = interfaceinvoke v14.<io.netty.handler.codec.spdy.SpdyHeaders: java.util.Iterator iterator()>();
label2:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label3;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = interfaceinvoke v13.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v19 = interfaceinvoke v17.<java.util.Map$Entry: java.lang.Object getKey()>();
v20 = interfaceinvoke v17.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v19, v20);
goto label2;
label3:
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)>(v13, 1);
v21 = interfaceinvoke v13.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v22 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
virtualinvoke v21.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v22);
v23 = interfaceinvoke v13.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v24 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRAILER>;
virtualinvoke v23.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v24);
label4:
return v13;
label5:
v25 := @caughtexception;
virtualinvoke v12.<io.netty.buffer.ByteBuf: boolean release()>();
throw v25;
catch java.lang.Throwable from label1 to label4 with label5;
}
}