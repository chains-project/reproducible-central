class io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10 extends java.lang.Object implements java.util.function.BiFunction
{
final java.lang.Object val$selector;
void <init>(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10 v0;
v0 := @this: io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10;
v1 := @parameter0: java.lang.Object;
v0.<io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10: java.lang.Object val$selector> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.String apply(javax.net.ssl.SSLEngine, java.util.List)
{
java.lang.Object[] v5;
java.lang.RuntimeException v8;
java.lang.Exception v7;
javax.net.ssl.SSLEngine v1;
java.util.List v2;
io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10 v0;
java.lang.Object v4, v6;
java.lang.reflect.Method v3;
v0 := @this: io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10;
v1 := @parameter0: javax.net.ssl.SSLEngine;
v2 := @parameter1: java.util.List;
label1:
v3 = <io.netty.handler.ssl.BouncyCastleAlpnSslUtils: java.lang.reflect.Method BC_APPLICATION_PROTOCOL_SELECTOR_SELECT>;
v4 = v0.<io.netty.handler.ssl.BouncyCastleAlpnSslUtils$10: java.lang.Object val$selector>;
v5 = newarray (java.lang.Object)[2];
v5[0] = v1;
v5[1] = v2;
v6 = virtualinvoke v3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v4, v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new java.lang.RuntimeException;
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not call getHandshakeApplicationProtocolSelector", v7);
throw v8;
catch java.lang.Exception from label1 to label2 with label3;
}
}