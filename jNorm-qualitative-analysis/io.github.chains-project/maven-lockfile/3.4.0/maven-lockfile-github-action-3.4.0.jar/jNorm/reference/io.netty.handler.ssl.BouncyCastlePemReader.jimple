final class io.netty.handler.ssl.BouncyCastlePemReader extends java.lang.Object
{
private static final java.lang.String BC_PROVIDER;
private static final java.lang.String BC_PEMPARSER;
private static final io.netty.util.internal.logging.InternalLogger logger;
private static volatile java.lang.Throwable unavailabilityCause;
private static volatile java.security.Provider bcProvider;
private static volatile boolean attemptedLoading;
public static boolean hasAttemptedLoading()
{
boolean v0;
v0 = <io.netty.handler.ssl.BouncyCastlePemReader: boolean attemptedLoading>;
return v0;
}
public static boolean isAvailable()
{
java.lang.Throwable v1;
boolean v0, v2;
v0 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: boolean hasAttemptedLoading()>();
if v0 != 0 goto label1;
staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: void tryLoading()>();
label1:
v1 = <io.netty.handler.ssl.BouncyCastlePemReader: java.lang.Throwable unavailabilityCause>;
if v1 != null goto label2;
v2 = 1;
goto label3;
label2:
v2 = 0;
label3:
return v2;
}
public static java.lang.Throwable unavailabilityCause()
{
java.lang.Throwable v0;
v0 = <io.netty.handler.ssl.BouncyCastlePemReader: java.lang.Throwable unavailabilityCause>;
return v0;
}
private static void tryLoading()
{
io.netty.handler.ssl.BouncyCastlePemReader$1 v0;
v0 = new io.netty.handler.ssl.BouncyCastlePemReader$1;
specialinvoke v0.<io.netty.handler.ssl.BouncyCastlePemReader$1: void <init>()>();
staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v0);
return;
}
public static java.security.PrivateKey getPrivateKey(java.io.InputStream, java.lang.String)
{
java.lang.Throwable v6;
org.bouncycastle.openssl.PEMParser v7;
java.lang.Exception v9;
java.security.PrivateKey v8;
io.netty.util.internal.logging.InternalLogger v10, v3, v5;
java.lang.String v1;
boolean v2, v4;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: boolean isAvailable()>();
if v2 != 0 goto label2;
v3 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v4 = interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v4 == 0 goto label1;
v5 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v6 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: java.lang.Throwable unavailabilityCause()>();
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Bouncy castle provider is unavailable.", v6);
label1:
return null;
label2:
v7 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: org.bouncycastle.openssl.PEMParser newParser(java.io.InputStream)>(v0);
v8 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: java.security.PrivateKey getPrivateKey(org.bouncycastle.openssl.PEMParser,java.lang.String)>(v7, v1);
label3:
return v8;
label4:
v9 := @caughtexception;
v10 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v10.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Unable to extract private key", v9);
return null;
catch java.lang.Exception from label2 to label3 with label4;
}
public static java.security.PrivateKey getPrivateKey(java.io.File, java.lang.String)
{
java.lang.Throwable v6;
org.bouncycastle.openssl.PEMParser v7;
java.io.File v0;
java.lang.Exception v9;
java.security.PrivateKey v8;
io.netty.util.internal.logging.InternalLogger v10, v3, v5;
java.lang.String v1;
boolean v2, v4;
v0 := @parameter0: java.io.File;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: boolean isAvailable()>();
if v2 != 0 goto label2;
v3 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v4 = interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v4 == 0 goto label1;
v5 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v6 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: java.lang.Throwable unavailabilityCause()>();
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Bouncy castle provider is unavailable.", v6);
label1:
return null;
label2:
v7 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: org.bouncycastle.openssl.PEMParser newParser(java.io.File)>(v0);
v8 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: java.security.PrivateKey getPrivateKey(org.bouncycastle.openssl.PEMParser,java.lang.String)>(v7, v1);
label3:
return v8;
label4:
v9 := @caughtexception;
v10 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v10.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Unable to extract private key", v9);
return null;
catch java.lang.Exception from label2 to label3 with label4;
}
private static org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter newConverter()
{
org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter v0, v2;
java.security.Provider v1;
v0 = new org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter;
specialinvoke v0.<org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: void <init>()>();
v1 = <io.netty.handler.ssl.BouncyCastlePemReader: java.security.Provider bcProvider>;
v2 = virtualinvoke v0.<org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter setProvider(java.security.Provider)>(v1);
return v2;
}
private static java.security.PrivateKey getPrivateKey(org.bouncycastle.openssl.PEMParser, java.lang.String) throws java.io.IOException, org.bouncycastle.pkcs.PKCSException, org.bouncycastle.operator.OperatorCreationException
{
java.security.KeyPair v13, v23;
org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder v25, v27;
org.bouncycastle.asn1.pkcs.PrivateKeyInfo v30;
boolean v11, v12, v16, v24, v34, v6;
org.bouncycastle.openssl.PEMParser v0;
org.bouncycastle.openssl.PEMDecryptorProvider v21;
java.security.Provider v18, v26;
java.security.PrivateKey v3, v36;
io.netty.util.internal.logging.InternalLogger v14, v31, v33, v35, v5, v7;
java.lang.Throwable v37;
org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter v2;
org.bouncycastle.operator.InputDecryptorProvider v29;
org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder v17, v19;
java.lang.String v1, v10, v9;
char[] v20, v28;
java.lang.Class v15, v32, v8;
java.lang.Object v4;
org.bouncycastle.openssl.PEMKeyPair v22;
v0 := @parameter0: org.bouncycastle.openssl.PEMParser;
v1 := @parameter1: java.lang.String;
label01:
v2 = staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter newConverter()>();
v3 = null;
v4 = virtualinvoke v0.<org.bouncycastle.openssl.PEMParser: java.lang.Object readObject()>();
label02:
if v4 == null goto label12;
if v3 != null goto label13;
v5 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v6 = interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v6 == 0 goto label05;
v7 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v8 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
if v1 != null goto label03;
v10 = "not ";
goto label04;
label03:
v10 = "";
label04:
interfaceinvoke v7.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Parsed PEM object of type {} and assume key is {}encrypted", v9, v10);
label05:
if v1 != null goto label08;
v11 = v4 instanceof org.bouncycastle.asn1.pkcs.PrivateKeyInfo;
if v11 == 0 goto label06;
v3 = virtualinvoke v2.<org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>(v4);
goto label11;
label06:
v12 = v4 instanceof org.bouncycastle.openssl.PEMKeyPair;
if v12 == 0 goto label07;
v13 = virtualinvoke v2.<org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.KeyPair getKeyPair(org.bouncycastle.openssl.PEMKeyPair)>(v4);
v3 = virtualinvoke v13.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();
goto label11;
label07:
v14 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v15 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
interfaceinvoke v14.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Unable to handle PEM object of type {} as a non encrypted key", v15);
goto label11;
label08:
v16 = v4 instanceof org.bouncycastle.openssl.PEMEncryptedKeyPair;
if v16 == 0 goto label09;
v17 = new org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder;
specialinvoke v17.<org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder: void <init>()>();
v18 = <io.netty.handler.ssl.BouncyCastlePemReader: java.security.Provider bcProvider>;
v19 = virtualinvoke v17.<org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder: org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder setProvider(java.security.Provider)>(v18);
v20 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v21 = virtualinvoke v19.<org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder: org.bouncycastle.openssl.PEMDecryptorProvider build(char[])>(v20);
v22 = virtualinvoke v4.<org.bouncycastle.openssl.PEMEncryptedKeyPair: org.bouncycastle.openssl.PEMKeyPair decryptKeyPair(org.bouncycastle.openssl.PEMDecryptorProvider)>(v21);
v23 = virtualinvoke v2.<org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.KeyPair getKeyPair(org.bouncycastle.openssl.PEMKeyPair)>(v22);
v3 = virtualinvoke v23.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();
goto label11;
label09:
v24 = v4 instanceof org.bouncycastle.pkcs.PKCS8EncryptedPrivateKeyInfo;
if v24 == 0 goto label10;
v25 = new org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder;
specialinvoke v25.<org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: void <init>()>();
v26 = <io.netty.handler.ssl.BouncyCastlePemReader: java.security.Provider bcProvider>;
v27 = virtualinvoke v25.<org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder setProvider(java.security.Provider)>(v26);
v28 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v29 = virtualinvoke v27.<org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.bouncycastle.operator.InputDecryptorProvider build(char[])>(v28);
v30 = virtualinvoke v4.<org.bouncycastle.pkcs.PKCS8EncryptedPrivateKeyInfo: org.bouncycastle.asn1.pkcs.PrivateKeyInfo decryptPrivateKeyInfo(org.bouncycastle.operator.InputDecryptorProvider)>(v29);
v3 = virtualinvoke v2.<org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>(v30);
goto label11;
label10:
v31 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v32 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
interfaceinvoke v31.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Unable to handle PEM object of type {} as a encrypted key", v32);
label11:
if v3 != null goto label02;
v4 = virtualinvoke v0.<org.bouncycastle.openssl.PEMParser: java.lang.Object readObject()>();
goto label02;
label12:
if v3 != null goto label13;
v33 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
v34 = interfaceinvoke v33.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v34 == 0 goto label13;
v35 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v35.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("No key found");
label13:
v36 = v3;
label14:
return v36;
label15:
v37 := @caughtexception;
throw v37;
catch java.lang.Throwable from label01 to label14 with label15;
}
private static org.bouncycastle.openssl.PEMParser newParser(java.io.File) throws java.io.FileNotFoundException
{
java.io.FileReader v2;
java.io.File v0;
org.bouncycastle.openssl.PEMParser v1;
v0 := @parameter0: java.io.File;
v1 = new org.bouncycastle.openssl.PEMParser;
v2 = new java.io.FileReader;
specialinvoke v2.<java.io.FileReader: void <init>(java.io.File)>(v0);
specialinvoke v1.<org.bouncycastle.openssl.PEMParser: void <init>(java.io.Reader)>(v2);
return v1;
}
private static org.bouncycastle.openssl.PEMParser newParser(java.io.InputStream)
{
java.nio.charset.Charset v3;
org.bouncycastle.openssl.PEMParser v1;
java.io.InputStreamReader v2;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = new org.bouncycastle.openssl.PEMParser;
v2 = new java.io.InputStreamReader;
v3 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
specialinvoke v2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(v0, v3);
specialinvoke v1.<org.bouncycastle.openssl.PEMParser: void <init>(java.io.Reader)>(v2);
return v1;
}
private void <init>()
{
io.netty.handler.ssl.BouncyCastlePemReader v0;
v0 := @this: io.netty.handler.ssl.BouncyCastlePemReader;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/ssl/BouncyCastlePemReader;");
<io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}