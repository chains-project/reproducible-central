final class io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator extends java.lang.Object implements io.netty.handler.ssl.JdkApplicationProtocolNegotiator
{
public static final io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE;
private static final io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory DEFAULT_SSL_ENGINE_WRAPPER_FACTORY;
private void <init>()
{
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory()
{
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory v1;
v0 := @this: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator;
v1 = <io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory DEFAULT_SSL_ENGINE_WRAPPER_FACTORY>;
return v1;
}
public io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Application protocol negotiation unsupported");
throw v1;
}
public io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory()
{
java.lang.UnsupportedOperationException v1;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Application protocol negotiation unsupported");
throw v1;
}
public java.util.List protocols()
{
java.util.List v1;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v0;
v0 := @this: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v1;
}
static void <clinit>()
{
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v0;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1 v1;
v0 = new io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator;
specialinvoke v0.<io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: void <init>()>();
<io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE> = v0;
v1 = new io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1;
specialinvoke v1.<io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1: void <init>()>();
<io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory DEFAULT_SSL_ENGINE_WRAPPER_FACTORY> = v1;
return;
}
}