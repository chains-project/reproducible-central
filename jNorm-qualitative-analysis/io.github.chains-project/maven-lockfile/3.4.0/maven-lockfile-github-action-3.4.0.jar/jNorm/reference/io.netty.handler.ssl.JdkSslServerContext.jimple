public final class io.netty.handler.ssl.JdkSslServerContext extends io.netty.handler.ssl.JdkSslContext
{
public void <init>(java.io.File, java.io.File) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v3;
io.netty.handler.ssl.JdkSslServerContext v0;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v4;
java.io.File v1, v2;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
v4 = <io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslServerContext: void <init>(java.security.Provider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long,java.lang.String)>(null, v1, v2, null, null, v3, v4, 0L, 0L, null);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v4;
io.netty.handler.ssl.JdkSslServerContext v0;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v5;
java.lang.String v3;
java.io.File v1, v2;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
v5 = <io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslServerContext: void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long)>(v1, v2, v3, null, v4, v5, 0L, 0L);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, java.lang.Iterable, java.lang.Iterable, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v8;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v10;
long v6, v7;
java.io.File v1, v2;
java.lang.Iterable v4, v5;
io.netty.handler.ssl.JdkSslServerContext v0;
java.lang.String v11, v3;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: long;
v7 := @parameter6: long;
v8 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
v9 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: io.netty.handler.ssl.ApplicationProtocolConfig toApplicationProtocolConfig(java.lang.Iterable)>(v5);
v10 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v9, 1);
v11 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
specialinvoke v0.<io.netty.handler.ssl.JdkSslServerContext: void <init>(java.security.Provider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long,java.lang.String)>(null, v1, v2, v3, v4, v8, v10, v6, v7, v11);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v9;
long v7, v8;
java.io.File v1, v2;
java.lang.Iterable v4;
io.netty.handler.ssl.CipherSuiteFilter v5;
io.netty.handler.ssl.JdkSslServerContext v0;
java.lang.String v10, v3;
io.netty.handler.ssl.ApplicationProtocolConfig v6;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: io.netty.handler.ssl.CipherSuiteFilter;
v6 := @parameter5: io.netty.handler.ssl.ApplicationProtocolConfig;
v7 := @parameter6: long;
v8 := @parameter7: long;
v9 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v6, 1);
v10 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
specialinvoke v0.<io.netty.handler.ssl.JdkSslServerContext: void <init>(java.security.Provider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long,java.lang.String)>(null, v1, v2, v3, v4, v5, v9, v7, v8, v10);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v6;
long v7, v8;
java.io.File v1, v2;
java.lang.Iterable v4;
io.netty.handler.ssl.CipherSuiteFilter v5;
io.netty.handler.ssl.JdkSslServerContext v0;
java.lang.String v3, v9;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: io.netty.handler.ssl.CipherSuiteFilter;
v6 := @parameter5: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v7 := @parameter6: long;
v8 := @parameter7: long;
v9 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
specialinvoke v0.<io.netty.handler.ssl.JdkSslServerContext: void <init>(java.security.Provider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long,java.lang.String)>(null, v1, v2, v3, v4, v5, v6, v7, v8, v9);
return;
}
void <init>(java.security.Provider, java.io.File, java.io.File, java.lang.String, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, long, long, java.lang.String) throws javax.net.ssl.SSLException
{
javax.net.ssl.SSLContext v13;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v7;
long v8, v9;
java.io.File v2, v3;
java.lang.Iterable v5;
java.security.Provider v1;
io.netty.handler.ssl.CipherSuiteFilter v6;
io.netty.handler.ssl.ClientAuth v14;
io.netty.handler.ssl.JdkSslServerContext v0;
java.security.PrivateKey v12;
java.lang.String v10, v4;
java.security.cert.X509Certificate[] v11;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.security.Provider;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: io.netty.handler.ssl.CipherSuiteFilter;
v7 := @parameter6: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v8 := @parameter7: long;
v9 := @parameter8: long;
v10 := @parameter9: java.lang.String;
v11 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v2);
v12 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String)>(v3, v4);
v13 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(v1, null, null, v11, v12, v4, null, v8, v9, v10);
v14 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v13, 0, v5, v6, v7, v14, null, 0);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.SSLContext v15;
long v10, v11;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.ClientAuth v16;
java.lang.String v5;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.io.File v1, v3, v4;
io.netty.handler.ssl.JdkSslServerContext v0;
java.security.PrivateKey v14;
java.security.cert.X509Certificate[] v12, v13;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.ApplicationProtocolConfig;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v1);
v13 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v3);
v14 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String)>(v4, v5);
v15 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(null, v12, v2, v13, v14, v5, v6, v10, v11, null);
v16 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v15, 0, v7, v8, v9, v16, null, 0);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.SSLContext v16;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v9;
long v10, v11;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.ClientAuth v17;
java.lang.String v15, v5;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.io.File v1, v3, v4;
io.netty.handler.ssl.JdkSslServerContext v0;
java.security.PrivateKey v14;
java.security.cert.X509Certificate[] v12, v13;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v1);
v13 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v3);
v14 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String)>(v4, v5);
v15 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v16 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(null, v12, v2, v13, v14, v5, v6, v10, v11, v15);
v17 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v16, 0, v7, v8, v9, v17, null, 0);
return;
}
void <init>(java.security.Provider, java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long, io.netty.handler.ssl.ClientAuth, java.lang.String[], boolean, java.lang.String) throws javax.net.ssl.SSLException
{
javax.net.ssl.SSLContext v17;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v18;
java.lang.String[] v14;
long v11, v12;
java.lang.Iterable v8;
io.netty.handler.ssl.CipherSuiteFilter v9;
io.netty.handler.ssl.ClientAuth v13;
java.lang.String v16, v6;
io.netty.handler.ssl.ApplicationProtocolConfig v10;
boolean v15;
javax.net.ssl.TrustManagerFactory v3;
javax.net.ssl.KeyManagerFactory v7;
java.security.Provider v1;
io.netty.handler.ssl.JdkSslServerContext v0;
java.security.PrivateKey v5;
java.security.cert.X509Certificate[] v2, v4;
v0 := @this: io.netty.handler.ssl.JdkSslServerContext;
v1 := @parameter0: java.security.Provider;
v2 := @parameter1: java.security.cert.X509Certificate[];
v3 := @parameter2: javax.net.ssl.TrustManagerFactory;
v4 := @parameter3: java.security.cert.X509Certificate[];
v5 := @parameter4: java.security.PrivateKey;
v6 := @parameter5: java.lang.String;
v7 := @parameter6: javax.net.ssl.KeyManagerFactory;
v8 := @parameter7: java.lang.Iterable;
v9 := @parameter8: io.netty.handler.ssl.CipherSuiteFilter;
v10 := @parameter9: io.netty.handler.ssl.ApplicationProtocolConfig;
v11 := @parameter10: long;
v12 := @parameter11: long;
v13 := @parameter12: io.netty.handler.ssl.ClientAuth;
v14 := @parameter13: java.lang.String[];
v15 := @parameter14: boolean;
v16 := @parameter15: java.lang.String;
v17 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(v1, v2, v3, v4, v5, v6, v7, v11, v12, v16);
v18 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v10, 1);
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v17, 0, v8, v9, v18, v13, v14, v15);
return;
}
private static javax.net.ssl.SSLContext newSSLContext(java.security.Provider, java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, long, long, java.lang.String) throws javax.net.ssl.SSLException
{
javax.net.ssl.SSLContext v11, v12;
long v17, v19, v7, v8;
java.lang.NullPointerException v10;
byte v16, v18;
java.lang.String v5, v9;
javax.net.ssl.SSLSessionContext v15;
boolean v21;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.lang.Exception v20;
java.security.Provider v0;
javax.net.ssl.SSLException v22;
java.security.PrivateKey v4;
javax.net.ssl.TrustManager[] v14;
java.security.cert.X509Certificate[] v1, v3;
javax.net.ssl.KeyManager[] v13;
v0 := @parameter0: java.security.Provider;
v1 := @parameter1: java.security.cert.X509Certificate[];
v2 := @parameter2: javax.net.ssl.TrustManagerFactory;
v3 := @parameter3: java.security.cert.X509Certificate[];
v4 := @parameter4: java.security.PrivateKey;
v5 := @parameter5: java.lang.String;
v6 := @parameter6: javax.net.ssl.KeyManagerFactory;
v7 := @parameter7: long;
v8 := @parameter8: long;
v9 := @parameter9: java.lang.String;
if v4 != null goto label01;
if v6 != null goto label01;
v10 = new java.lang.NullPointerException;
specialinvoke v10.<java.lang.NullPointerException: void <init>(java.lang.String)>("key, keyManagerFactory");
throw v10;
label01:
if v1 == null goto label02;
v2 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>(v1, v2, v9);
label02:
if v4 == null goto label03;
v6 = staticinvoke <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>(v3, null, v4, v5, v6, null);
label03:
if v0 != null goto label04;
v11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");
goto label05;
label04:
v11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>("TLS", v0);
label05:
v12 = v11;
v13 = virtualinvoke v6.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
if v2 != null goto label06;
v14 = null;
goto label07;
label06:
v14 = virtualinvoke v2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
label07:
virtualinvoke v12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(v13, v14, null);
v15 = virtualinvoke v12.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()>();
v16 = v7 cmp 0L;
if v16 <= 0 goto label08;
v17 = staticinvoke <java.lang.Math: long min(long,long)>(v7, 2147483647L);
interfaceinvoke v15.<javax.net.ssl.SSLSessionContext: void setSessionCacheSize(int)>(v17);
label08:
v18 = v8 cmp 0L;
if v18 <= 0 goto label09;
v19 = staticinvoke <java.lang.Math: long min(long,long)>(v8, 2147483647L);
interfaceinvoke v15.<javax.net.ssl.SSLSessionContext: void setSessionTimeout(int)>(v19);
label09:
return v12;
label10:
v20 := @caughtexception;
v21 = v20 instanceof javax.net.ssl.SSLException;
if v21 == 0 goto label11;
throw v20;
label11:
v22 = new javax.net.ssl.SSLException;
specialinvoke v22.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>("failed to initialize the server-side SSL context", v20);
throw v22;
catch java.lang.Exception from label01 to label09 with label10;
}
}