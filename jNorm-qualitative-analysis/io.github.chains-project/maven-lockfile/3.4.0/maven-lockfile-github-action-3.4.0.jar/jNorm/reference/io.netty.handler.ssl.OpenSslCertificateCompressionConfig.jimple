public final class io.netty.handler.ssl.OpenSslCertificateCompressionConfig extends java.lang.Object implements java.lang.Iterable
{
private final java.util.List pairList;
private transient void <init>(io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig[])
{
io.netty.handler.ssl.OpenSslCertificateCompressionConfig v0;
java.util.List v2, v3;
io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig[] v1;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateCompressionConfig;
v1 := @parameter0: io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v2);
v0.<io.netty.handler.ssl.OpenSslCertificateCompressionConfig: java.util.List pairList> = v3;
return;
}
public java.util.Iterator iterator()
{
io.netty.handler.ssl.OpenSslCertificateCompressionConfig v0;
java.util.List v1;
java.util.Iterator v2;
v0 := @this: io.netty.handler.ssl.OpenSslCertificateCompressionConfig;
v1 = v0.<io.netty.handler.ssl.OpenSslCertificateCompressionConfig: java.util.List pairList>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
return v2;
}
public static io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder newBuilder()
{
io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder v0;
v0 = new io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder;
specialinvoke v0.<io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder: void <init>()>();
return v0;
}
}