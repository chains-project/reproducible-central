final class io.netty.handler.ssl.OpenSslClientSessionCache$HostPort extends java.lang.Object
{
private final int hash;
private final java.lang.String host;
private final int port;
void <init>(java.lang.String, int)
{
io.netty.handler.ssl.OpenSslClientSessionCache$HostPort v0;
int v2, v3, v4, v5;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.OpenSslClientSessionCache$HostPort;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: java.lang.String host> = v1;
v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: int port> = v2;
v3 = staticinvoke <io.netty.util.AsciiString: int hashCode(java.lang.CharSequence)>(v1);
v4 = 31 * v3;
v5 = v4 + v2;
v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: int hash> = v5;
return;
}
public int hashCode()
{
int v1;
io.netty.handler.ssl.OpenSslClientSessionCache$HostPort v0;
v0 := @this: io.netty.handler.ssl.OpenSslClientSessionCache$HostPort;
v1 = v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: int hash>;
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.ssl.OpenSslClientSessionCache$HostPort v0;
int v3, v4;
java.lang.Object v1;
java.lang.String v5, v6;
boolean v2, v7, v8;
v0 := @this: io.netty.handler.ssl.OpenSslClientSessionCache$HostPort;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.ssl.OpenSslClientSessionCache$HostPort;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: int port>;
v4 = v1.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: int port>;
if v3 != v4 goto label2;
v5 = v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: java.lang.String host>;
v6 = v1.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: java.lang.String host>;
v7 = virtualinvoke v5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v6);
if v7 == 0 goto label2;
v8 = 1;
goto label3;
label2:
v8 = 0;
label3:
return v8;
}
public java.lang.String toString()
{
io.netty.handler.ssl.OpenSslClientSessionCache$HostPort v0;
int v2;
java.lang.String v1, v3;
v0 := @this: io.netty.handler.ssl.OpenSslClientSessionCache$HostPort;
v1 = v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: java.lang.String host>;
v2 = v0.<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort: int port>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("HostPort{host=\'\u0001\', port=\u0001}");
return v3;
}
}