public final class io.netty.handler.ssl.OpenSslContextOption extends io.netty.handler.ssl.SslContextOption
{
public static final io.netty.handler.ssl.OpenSslContextOption USE_TASKS;
public static final io.netty.handler.ssl.OpenSslContextOption TLS_FALSE_START;
public static final io.netty.handler.ssl.OpenSslContextOption PRIVATE_KEY_METHOD;
public static final io.netty.handler.ssl.OpenSslContextOption ASYNC_PRIVATE_KEY_METHOD;
public static final io.netty.handler.ssl.OpenSslContextOption CERTIFICATE_COMPRESSION_ALGORITHMS;
public static final io.netty.handler.ssl.OpenSslContextOption MAX_CERTIFICATE_LIST_BYTES;
private void <init>(java.lang.String)
{
java.lang.String v1;
io.netty.handler.ssl.OpenSslContextOption v0;
v0 := @this: io.netty.handler.ssl.OpenSslContextOption;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.netty.handler.ssl.SslContextOption: void <init>(java.lang.String)>(v1);
return;
}
static void <clinit>()
{
io.netty.handler.ssl.OpenSslContextOption v0, v1, v2, v3, v4, v5;
v0 = new io.netty.handler.ssl.OpenSslContextOption;
specialinvoke v0.<io.netty.handler.ssl.OpenSslContextOption: void <init>(java.lang.String)>("USE_TASKS");
<io.netty.handler.ssl.OpenSslContextOption: io.netty.handler.ssl.OpenSslContextOption USE_TASKS> = v0;
v1 = new io.netty.handler.ssl.OpenSslContextOption;
specialinvoke v1.<io.netty.handler.ssl.OpenSslContextOption: void <init>(java.lang.String)>("TLS_FALSE_START");
<io.netty.handler.ssl.OpenSslContextOption: io.netty.handler.ssl.OpenSslContextOption TLS_FALSE_START> = v1;
v2 = new io.netty.handler.ssl.OpenSslContextOption;
specialinvoke v2.<io.netty.handler.ssl.OpenSslContextOption: void <init>(java.lang.String)>("PRIVATE_KEY_METHOD");
<io.netty.handler.ssl.OpenSslContextOption: io.netty.handler.ssl.OpenSslContextOption PRIVATE_KEY_METHOD> = v2;
v3 = new io.netty.handler.ssl.OpenSslContextOption;
specialinvoke v3.<io.netty.handler.ssl.OpenSslContextOption: void <init>(java.lang.String)>("ASYNC_PRIVATE_KEY_METHOD");
<io.netty.handler.ssl.OpenSslContextOption: io.netty.handler.ssl.OpenSslContextOption ASYNC_PRIVATE_KEY_METHOD> = v3;
v4 = new io.netty.handler.ssl.OpenSslContextOption;
specialinvoke v4.<io.netty.handler.ssl.OpenSslContextOption: void <init>(java.lang.String)>("CERTIFICATE_COMPRESSION_ALGORITHMS");
<io.netty.handler.ssl.OpenSslContextOption: io.netty.handler.ssl.OpenSslContextOption CERTIFICATE_COMPRESSION_ALGORITHMS> = v4;
v5 = new io.netty.handler.ssl.OpenSslContextOption;
specialinvoke v5.<io.netty.handler.ssl.OpenSslContextOption: void <init>(java.lang.String)>("MAX_CERTIFICATE_LIST_BYTES");
<io.netty.handler.ssl.OpenSslContextOption: io.netty.handler.ssl.OpenSslContextOption MAX_CERTIFICATE_LIST_BYTES> = v5;
return;
}
}