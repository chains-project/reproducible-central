class io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2 extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
void <init>()
{
io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2 v0;
v0 := @this: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
{
io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2 v0;
java.lang.String v2;
java.security.cert.CertificateException v3;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 = new java.security.cert.CertificateException;
specialinvoke v3.<java.security.cert.CertificateException: void <init>()>();
throw v3;
}
public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
{
io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2 v0;
java.lang.String v2;
java.security.cert.CertificateException v3;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 = new java.security.cert.CertificateException;
specialinvoke v3.<java.security.cert.CertificateException: void <init>()>();
throw v3;
}
public java.security.cert.X509Certificate[] getAcceptedIssuers()
{
io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2 v0;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2;
v1 = <io.netty.util.internal.EmptyArrays: java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES>;
return v1;
}
}