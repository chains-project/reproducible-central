final class io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext extends io.netty.handler.ssl.OpenSslSessionContext
{
void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext, io.netty.handler.ssl.OpenSslKeyMaterialProvider)
{
io.netty.handler.ssl.OpenSslClientSessionCache v4;
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext v0;
io.netty.handler.ssl.OpenSslEngineMap v5;
io.netty.handler.ssl.OpenSslKeyMaterialProvider v2;
long v3;
io.netty.handler.ssl.ReferenceCountedOpenSslContext v1;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext;
v1 := @parameter0: io.netty.handler.ssl.ReferenceCountedOpenSslContext;
v2 := @parameter1: io.netty.handler.ssl.OpenSslKeyMaterialProvider;
v3 = <io.netty.internal.tcnative.SSL: long SSL_SESS_CACHE_CLIENT>;
v4 = new io.netty.handler.ssl.OpenSslClientSessionCache;
v5 = v1.<io.netty.handler.ssl.ReferenceCountedOpenSslContext: io.netty.handler.ssl.OpenSslEngineMap engineMap>;
specialinvoke v4.<io.netty.handler.ssl.OpenSslClientSessionCache: void <init>(io.netty.handler.ssl.OpenSslEngineMap)>(v5);
specialinvoke v0.<io.netty.handler.ssl.OpenSslSessionContext: void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.handler.ssl.OpenSslKeyMaterialProvider,long,io.netty.handler.ssl.OpenSslSessionCache)>(v1, v2, v3, v4);
return;
}
}