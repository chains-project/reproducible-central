class io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 extends io.netty.handler.ssl.ExtendedOpenSslSession
{
private java.lang.String[] peerSupportedSignatureAlgorithms;
private java.util.List requestedServerNames;
final io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0;
void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine, io.netty.handler.ssl.OpenSslSession)
{
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v1;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 v0;
io.netty.handler.ssl.OpenSslSession v2;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2;
v1 := @parameter0: io.netty.handler.ssl.ReferenceCountedOpenSslEngine;
v2 := @parameter1: io.netty.handler.ssl.OpenSslSession;
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0> = v1;
specialinvoke v0.<io.netty.handler.ssl.ExtendedOpenSslSession: void <init>(io.netty.handler.ssl.OpenSslSession)>(v2);
return;
}
public java.util.List getRequestedServerNames()
{
java.lang.Throwable v22;
byte[] v19;
long v12, v16;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v1, v11, v15, v3, v6, v8;
java.nio.charset.Charset v18;
java.lang.String v13, v17;
boolean v2, v9;
java.util.List v10, v14, v20, v21, v4, v5, v7;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2;
v1 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v2 = v1.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean clientMode>;
if v2 == 0 goto label1;
v3 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v4 = v3.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: java.util.List sniHostNames>;
v5 = staticinvoke <io.netty.handler.ssl.Java8SslUtils: java.util.List getSniHostNames(java.util.List)>(v4);
return v5;
label1:
v6 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
entermonitor v6;
label2:
v7 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.util.List requestedServerNames>;
if v7 != null goto label5;
v8 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v9 = specialinvoke v8.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean isDestroyed()>();
if v9 == 0 goto label3;
v10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.util.List requestedServerNames> = v10;
goto label5;
label3:
v11 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v12 = v11.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: long ssl>;
v13 = staticinvoke <io.netty.internal.tcnative.SSL: java.lang.String getSniHostname(long)>(v12);
if v13 != null goto label4;
v14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.util.List requestedServerNames> = v14;
goto label5;
label4:
v15 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v16 = v15.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: long ssl>;
v17 = staticinvoke <io.netty.internal.tcnative.SSL: java.lang.String getSniHostname(long)>(v16);
v18 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v19 = virtualinvoke v17.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v18);
v20 = staticinvoke <io.netty.handler.ssl.Java8SslUtils: java.util.List getSniHostName(byte[])>(v19);
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.util.List requestedServerNames> = v20;
label5:
v21 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.util.List requestedServerNames>;
exitmonitor v6;
label6:
return v21;
label7:
v22 := @caughtexception;
exitmonitor v6;
throw v22;
catch java.lang.Throwable from label2 to label6 with label7;
}
public java.lang.String[] getPeerSupportedSignatureAlgorithms()
{
java.lang.Throwable v20;
java.lang.Object[] v17;
java.lang.String[] v16, v18, v2, v5, v8, v9;
long v7;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v1, v3, v6;
int v11, v12, v13;
java.lang.String v14, v15;
java.util.LinkedHashSet v10;
boolean v4;
java.lang.Object v19;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2;
v1 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
entermonitor v1;
label1:
v2 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.lang.String[] peerSupportedSignatureAlgorithms>;
if v2 != null goto label7;
v3 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v4 = specialinvoke v3.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean isDestroyed()>();
if v4 == 0 goto label2;
v5 = <io.netty.util.internal.EmptyArrays: java.lang.String[] EMPTY_STRINGS>;
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.lang.String[] peerSupportedSignatureAlgorithms> = v5;
goto label7;
label2:
v6 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v7 = v6.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: long ssl>;
v8 = staticinvoke <io.netty.internal.tcnative.SSL: java.lang.String[] getSigAlgs(long)>(v7);
if v8 != null goto label3;
v9 = <io.netty.util.internal.EmptyArrays: java.lang.String[] EMPTY_STRINGS>;
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.lang.String[] peerSupportedSignatureAlgorithms> = v9;
goto label7;
label3:
v10 = new java.util.LinkedHashSet;
v11 = lengthof v8;
specialinvoke v10.<java.util.LinkedHashSet: void <init>(int)>(v11);
v12 = lengthof v8;
v13 = 0;
label4:
if v13 >= v12 goto label6;
v14 = v8[v13];
v15 = staticinvoke <io.netty.handler.ssl.SignatureAlgorithmConverter: java.lang.String toJavaName(java.lang.String)>(v14);
if v15 == null goto label5;
interfaceinvoke v10.<java.util.Set: boolean add(java.lang.Object)>(v15);
label5:
v13 = v13 + 1;
goto label4;
label6:
v16 = newarray (java.lang.String)[0];
v17 = interfaceinvoke v10.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v16);
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.lang.String[] peerSupportedSignatureAlgorithms> = v17;
label7:
v18 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: java.lang.String[] peerSupportedSignatureAlgorithms>;
v19 = virtualinvoke v18.<java.lang.Object: java.lang.Object clone()>();
exitmonitor v1;
label8:
return v19;
label9:
v20 := @caughtexception;
exitmonitor v1;
throw v20;
catch java.lang.Throwable from label1 to label8 with label9;
}
public java.util.List getStatusResponses()
{
java.lang.Throwable v11;
byte[] v1;
long v10;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v2, v4, v6, v7, v9;
java.util.List v12;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 v0;
boolean v3, v5, v8;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2;
v1 = null;
v2 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v3 = v2.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean enableOcsp>;
if v3 == 0 goto label5;
v4 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v5 = v4.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean clientMode>;
if v5 == 0 goto label5;
v6 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
entermonitor v6;
label1:
v7 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v8 = specialinvoke v7.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean isDestroyed()>();
if v8 != 0 goto label2;
v9 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2: io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0>;
v10 = v9.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: long ssl>;
v1 = staticinvoke <io.netty.internal.tcnative.SSL: byte[] getOcspResponse(long)>(v10);
label2:
exitmonitor v6;
label3:
goto label5;
label4:
v11 := @caughtexception;
exitmonitor v6;
throw v11;
label5:
if v1 != null goto label6;
v12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
goto label7;
label6:
v12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
label7:
return v12;
catch java.lang.Throwable from label1 to label3 with label4;
}
}