public final class io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder extends java.lang.Object
{
private final java.lang.String algorithm;
private final java.util.List fingerprints;
void <init>(java.lang.String)
{
io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder v0;
java.lang.Object v3;
java.lang.String v1;
java.util.ArrayList v2;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: java.util.List fingerprints> = v2;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "algorithm");
v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: java.lang.String algorithm> = v3;
return;
}
public transient io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder fingerprints(java.lang.CharSequence[])
{
java.lang.CharSequence[] v1;
io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder v0, v4;
java.util.List v3;
java.lang.Object v2;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder;
v1 := @parameter0: java.lang.CharSequence[];
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "fingerprints");
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v4 = virtualinvoke v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder fingerprints(java.lang.Iterable)>(v3);
return v4;
}
public io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder fingerprints(java.lang.Iterable)
{
io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder v0;
java.util.List v5;
java.util.Iterator v2;
java.lang.Object v4;
java.lang.String v6;
java.lang.Iterable v1;
boolean v3;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder;
v1 := @parameter0: java.lang.Iterable;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "fingerprints");
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNullWithIAE(java.lang.Object,java.lang.String)>(v4, "fingerprint");
v5 = v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: java.util.List fingerprints>;
v6 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label1;
label2:
return v0;
}
public io.netty.handler.ssl.util.FingerprintTrustManagerFactory build()
{
java.lang.IllegalStateException v3;
io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder v0;
byte[][] v7;
java.util.List v1, v6;
io.netty.handler.ssl.util.FingerprintTrustManagerFactory v4;
java.lang.String v5;
boolean v2;
v0 := @this: io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder;
v1 = v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: java.util.List fingerprints>;
v2 = interfaceinvoke v1.<java.util.List: boolean isEmpty()>();
if v2 == 0 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fingerprints provided");
throw v3;
label1:
v4 = new io.netty.handler.ssl.util.FingerprintTrustManagerFactory;
v5 = v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: java.lang.String algorithm>;
v6 = v0.<io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder: java.util.List fingerprints>;
v7 = staticinvoke <io.netty.handler.ssl.util.FingerprintTrustManagerFactory: byte[][] toFingerprintArray(java.lang.Iterable)>(v6);
specialinvoke v4.<io.netty.handler.ssl.util.FingerprintTrustManagerFactory: void <init>(java.lang.String,byte[][])>(v5, v7);
return v4;
}
}