public final class io.netty.handler.ssl.util.LazyJavaxX509Certificate extends javax.security.cert.X509Certificate
{
private final byte[] bytes;
private javax.security.cert.X509Certificate wrapped;
public void <init>(byte[])
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
byte[] v1;
java.lang.Object v2;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 := @parameter0: byte[];
specialinvoke v0.<javax.security.cert.X509Certificate: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "bytes");
v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: byte[] bytes> = v2;
return;
}
public void checkValidity() throws javax.security.cert.CertificateExpiredException, javax.security.cert.CertificateNotYetValidException
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
virtualinvoke v1.<javax.security.cert.X509Certificate: void checkValidity()>();
return;
}
public void checkValidity(java.util.Date) throws javax.security.cert.CertificateExpiredException, javax.security.cert.CertificateNotYetValidException
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
javax.security.cert.X509Certificate v2;
java.util.Date v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 := @parameter0: java.util.Date;
v2 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
virtualinvoke v2.<javax.security.cert.X509Certificate: void checkValidity(java.util.Date)>(v1);
return;
}
public int getVersion()
{
int v2;
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: int getVersion()>();
return v2;
}
public java.math.BigInteger getSerialNumber()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.math.BigInteger v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();
return v2;
}
public java.security.Principal getIssuerDN()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.security.Principal v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
return v2;
}
public java.security.Principal getSubjectDN()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.security.Principal v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
return v2;
}
public java.util.Date getNotBefore()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
javax.security.cert.X509Certificate v1;
java.util.Date v2;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.util.Date getNotBefore()>();
return v2;
}
public java.util.Date getNotAfter()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
javax.security.cert.X509Certificate v1;
java.util.Date v2;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.util.Date getNotAfter()>();
return v2;
}
public java.lang.String getSigAlgName()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.lang.String v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.lang.String getSigAlgName()>();
return v2;
}
public java.lang.String getSigAlgOID()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.lang.String v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.lang.String getSigAlgOID()>();
return v2;
}
public byte[] getSigAlgParams()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
byte[] v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: byte[] getSigAlgParams()>();
return v2;
}
public byte[] getEncoded()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
byte[] v1;
java.lang.Object v2;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: byte[] bytes>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
byte[] getBytes()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
byte[] v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: byte[] bytes>;
return v1;
}
public void verify(java.security.PublicKey) throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.security.PublicKey v1;
javax.security.cert.X509Certificate v2;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 := @parameter0: java.security.PublicKey;
v2 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
virtualinvoke v2.<javax.security.cert.X509Certificate: void verify(java.security.PublicKey)>(v1);
return;
}
public void verify(java.security.PublicKey, java.lang.String) throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.security.PublicKey v1;
java.lang.String v2;
javax.security.cert.X509Certificate v3;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 := @parameter0: java.security.PublicKey;
v2 := @parameter1: java.lang.String;
v3 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
virtualinvoke v3.<javax.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>(v1, v2);
return;
}
public java.lang.String toString()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.lang.String v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.lang.String toString()>();
return v2;
}
public java.security.PublicKey getPublicKey()
{
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
java.security.PublicKey v2;
javax.security.cert.X509Certificate v1;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = specialinvoke v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate unwrap()>();
v2 = virtualinvoke v1.<javax.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();
return v2;
}
private javax.security.cert.X509Certificate unwrap()
{
byte[] v2;
java.lang.IllegalStateException v5;
javax.security.cert.CertificateException v4;
io.netty.handler.ssl.util.LazyJavaxX509Certificate v0;
javax.security.cert.X509Certificate v1, v3;
v0 := @this: io.netty.handler.ssl.util.LazyJavaxX509Certificate;
v1 = v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate wrapped>;
if v1 != null goto label4;
label1:
v2 = v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: byte[] bytes>;
v3 = staticinvoke <javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(byte[])>(v2);
v0.<io.netty.handler.ssl.util.LazyJavaxX509Certificate: javax.security.cert.X509Certificate wrapped> = v3;
v1 = v3;
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v4);
throw v5;
label4:
return v1;
catch javax.security.cert.CertificateException from label1 to label2 with label3;
}
}