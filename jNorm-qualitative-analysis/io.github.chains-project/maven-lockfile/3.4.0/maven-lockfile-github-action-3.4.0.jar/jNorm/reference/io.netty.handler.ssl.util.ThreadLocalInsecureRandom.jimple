final class io.netty.handler.ssl.util.ThreadLocalInsecureRandom extends java.security.SecureRandom
{
private static final long serialVersionUID;
private static final java.security.SecureRandom INSTANCE;
static java.security.SecureRandom current()
{
java.security.SecureRandom v0;
v0 = <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.security.SecureRandom INSTANCE>;
return v0;
}
private void <init>()
{
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
specialinvoke v0.<java.security.SecureRandom: void <init>()>();
return;
}
public java.lang.String getAlgorithm()
{
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
return "insecure";
}
public void setSeed(byte[])
{
byte[] v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 := @parameter0: byte[];
return;
}
public void setSeed(long)
{
long v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 := @parameter0: long;
return;
}
public void nextBytes(byte[])
{
byte[] v1;
java.util.Random v2;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 := @parameter0: byte[];
v2 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
virtualinvoke v2.<java.util.Random: void nextBytes(byte[])>(v1);
return;
}
public byte[] generateSeed(int)
{
byte[] v2;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
int v1;
java.util.Random v3;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 := @parameter0: int;
v2 = newarray (byte)[v1];
v3 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
virtualinvoke v3.<java.util.Random: void nextBytes(byte[])>(v2);
return v2;
}
public int nextInt()
{
int v2;
java.util.Random v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v2 = virtualinvoke v1.<java.util.Random: int nextInt()>();
return v2;
}
public int nextInt(int)
{
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
int v1, v3;
java.util.Random v2;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 := @parameter0: int;
v2 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v3 = virtualinvoke v2.<java.util.Random: int nextInt(int)>(v1);
return v3;
}
public boolean nextBoolean()
{
java.util.Random v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
boolean v2;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v2 = virtualinvoke v1.<java.util.Random: boolean nextBoolean()>();
return v2;
}
public long nextLong()
{
java.util.Random v1;
long v2;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v2 = virtualinvoke v1.<java.util.Random: long nextLong()>();
return v2;
}
public float nextFloat()
{
float v2;
java.util.Random v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v2 = virtualinvoke v1.<java.util.Random: float nextFloat()>();
return v2;
}
public double nextDouble()
{
java.util.Random v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
double v2;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v2 = virtualinvoke v1.<java.util.Random: double nextDouble()>();
return v2;
}
public double nextGaussian()
{
java.util.Random v1;
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
double v2;
v0 := @this: io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
v1 = staticinvoke <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.util.Random random()>();
v2 = virtualinvoke v1.<java.util.Random: double nextGaussian()>();
return v2;
}
private static java.util.Random random()
{
java.util.Random v0;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.Random threadLocalRandom()>();
return v0;
}
static void <clinit>()
{
io.netty.handler.ssl.util.ThreadLocalInsecureRandom v0;
v0 = new io.netty.handler.ssl.util.ThreadLocalInsecureRandom;
specialinvoke v0.<io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>();
<io.netty.handler.ssl.util.ThreadLocalInsecureRandom: java.security.SecureRandom INSTANCE> = v0;
return;
}
}