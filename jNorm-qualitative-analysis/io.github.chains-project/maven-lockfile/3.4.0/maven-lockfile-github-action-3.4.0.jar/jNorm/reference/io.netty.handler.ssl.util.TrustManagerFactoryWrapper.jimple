public final class io.netty.handler.ssl.util.TrustManagerFactoryWrapper extends io.netty.handler.ssl.util.SimpleTrustManagerFactory
{
private final javax.net.ssl.TrustManager tm;
public void <init>(javax.net.ssl.TrustManager)
{
javax.net.ssl.TrustManager v1;
io.netty.handler.ssl.util.TrustManagerFactoryWrapper v0;
java.lang.Object v2;
v0 := @this: io.netty.handler.ssl.util.TrustManagerFactoryWrapper;
v1 := @parameter0: javax.net.ssl.TrustManager;
specialinvoke v0.<io.netty.handler.ssl.util.SimpleTrustManagerFactory: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "tm");
v0.<io.netty.handler.ssl.util.TrustManagerFactoryWrapper: javax.net.ssl.TrustManager tm> = v2;
return;
}
protected void engineInit(java.security.KeyStore) throws java.lang.Exception
{
io.netty.handler.ssl.util.TrustManagerFactoryWrapper v0;
java.security.KeyStore v1;
v0 := @this: io.netty.handler.ssl.util.TrustManagerFactoryWrapper;
v1 := @parameter0: java.security.KeyStore;
return;
}
protected void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.lang.Exception
{
javax.net.ssl.ManagerFactoryParameters v1;
io.netty.handler.ssl.util.TrustManagerFactoryWrapper v0;
v0 := @this: io.netty.handler.ssl.util.TrustManagerFactoryWrapper;
v1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;
return;
}
protected javax.net.ssl.TrustManager[] engineGetTrustManagers()
{
javax.net.ssl.TrustManager v2;
io.netty.handler.ssl.util.TrustManagerFactoryWrapper v0;
javax.net.ssl.TrustManager[] v1;
v0 := @this: io.netty.handler.ssl.util.TrustManagerFactoryWrapper;
v1 = newarray (javax.net.ssl.TrustManager)[1];
v2 = v0.<io.netty.handler.ssl.util.TrustManagerFactoryWrapper: javax.net.ssl.TrustManager tm>;
v1[0] = v2;
return v1;
}
}