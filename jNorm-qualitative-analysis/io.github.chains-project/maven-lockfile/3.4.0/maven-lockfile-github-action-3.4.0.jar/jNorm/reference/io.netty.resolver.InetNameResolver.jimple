public abstract class io.netty.resolver.InetNameResolver extends io.netty.resolver.SimpleNameResolver
{
private volatile io.netty.resolver.AddressResolver addressResolver;
protected void <init>(io.netty.util.concurrent.EventExecutor)
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.resolver.InetNameResolver v0;
v0 := @this: io.netty.resolver.InetNameResolver;
v1 := @parameter0: io.netty.util.concurrent.EventExecutor;
specialinvoke v0.<io.netty.resolver.SimpleNameResolver: void <init>(io.netty.util.concurrent.EventExecutor)>(v1);
return;
}
public io.netty.resolver.AddressResolver asAddressResolver()
{
io.netty.util.concurrent.EventExecutor v3;
java.lang.Throwable v4;
io.netty.resolver.AddressResolver v1;
io.netty.resolver.InetSocketAddressResolver v2;
io.netty.resolver.InetNameResolver v0;
v0 := @this: io.netty.resolver.InetNameResolver;
v1 = v0.<io.netty.resolver.InetNameResolver: io.netty.resolver.AddressResolver addressResolver>;
if v1 != null goto label5;
entermonitor v0;
label1:
v1 = v0.<io.netty.resolver.InetNameResolver: io.netty.resolver.AddressResolver addressResolver>;
if v1 != null goto label2;
v2 = new io.netty.resolver.InetSocketAddressResolver;
v3 = virtualinvoke v0.<io.netty.resolver.InetNameResolver: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v2.<io.netty.resolver.InetSocketAddressResolver: void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver)>(v3, v0);
v1 = v2;
v0.<io.netty.resolver.InetNameResolver: io.netty.resolver.AddressResolver addressResolver> = v2;
label2:
exitmonitor v0;
label3:
goto label5;
label4:
v4 := @caughtexception;
exitmonitor v0;
throw v4;
label5:
return v1;
catch java.lang.Throwable from label1 to label3 with label4;
}
}