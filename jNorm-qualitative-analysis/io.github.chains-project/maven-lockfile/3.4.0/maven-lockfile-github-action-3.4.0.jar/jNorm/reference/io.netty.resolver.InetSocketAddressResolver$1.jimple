class io.netty.resolver.InetSocketAddressResolver$1 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.util.concurrent.Promise val$promise;
final java.net.InetSocketAddress val$unresolvedAddress;
final io.netty.resolver.InetSocketAddressResolver this$0;
void <init>(io.netty.resolver.InetSocketAddressResolver, io.netty.util.concurrent.Promise, java.net.InetSocketAddress)
{
io.netty.util.concurrent.Promise v2;
io.netty.resolver.InetSocketAddressResolver v1;
io.netty.resolver.InetSocketAddressResolver$1 v0;
java.net.InetSocketAddress v3;
v0 := @this: io.netty.resolver.InetSocketAddressResolver$1;
v1 := @parameter0: io.netty.resolver.InetSocketAddressResolver;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v3 := @parameter2: java.net.InetSocketAddress;
v0.<io.netty.resolver.InetSocketAddressResolver$1: io.netty.resolver.InetSocketAddressResolver this$0> = v1;
v0.<io.netty.resolver.InetSocketAddressResolver$1: io.netty.util.concurrent.Promise val$promise> = v2;
v0.<io.netty.resolver.InetSocketAddressResolver$1: java.net.InetSocketAddress val$unresolvedAddress> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v9;
io.netty.util.concurrent.Promise v3, v8;
java.net.InetSocketAddress v4, v6;
int v7;
java.lang.Object v5;
io.netty.resolver.InetSocketAddressResolver$1 v0;
io.netty.util.concurrent.Future v1;
boolean v2;
v0 := @this: io.netty.resolver.InetSocketAddressResolver$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.resolver.InetSocketAddressResolver$1: io.netty.util.concurrent.Promise val$promise>;
v4 = new java.net.InetSocketAddress;
v5 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
v6 = v0.<io.netty.resolver.InetSocketAddressResolver$1: java.net.InetSocketAddress val$unresolvedAddress>;
v7 = virtualinvoke v6.<java.net.InetSocketAddress: int getPort()>();
specialinvoke v4.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(v5, v7);
interfaceinvoke v3.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v4);
goto label2;
label1:
v8 = v0.<io.netty.resolver.InetSocketAddressResolver$1: io.netty.util.concurrent.Promise val$promise>;
v9 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
interfaceinvoke v8.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v9);
label2:
return;
}
}