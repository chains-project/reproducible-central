final class io.netty.resolver.dns.DnsRecordResolveContext extends io.netty.resolver.dns.DnsResolveContext
{
void <init>(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int)
{
io.netty.resolver.dns.DnsRecordResolveContext v0;
io.netty.handler.codec.dns.DnsRecordType v10;
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.util.concurrent.Promise v2;
io.netty.handler.codec.dns.DnsQuestion v3;
io.netty.resolver.dns.DnsServerAddressStream v5;
io.netty.handler.codec.dns.DnsRecordType[] v9;
io.netty.handler.codec.dns.DnsRecord[] v4;
int v6, v8;
java.lang.String v7;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v3 := @parameter2: io.netty.handler.codec.dns.DnsQuestion;
v4 := @parameter3: io.netty.handler.codec.dns.DnsRecord[];
v5 := @parameter4: io.netty.resolver.dns.DnsServerAddressStream;
v6 := @parameter5: int;
v7 = interfaceinvoke v3.<io.netty.handler.codec.dns.DnsQuestion: java.lang.String name()>();
v8 = interfaceinvoke v3.<io.netty.handler.codec.dns.DnsQuestion: int dnsClass()>();
v9 = newarray (io.netty.handler.codec.dns.DnsRecordType)[1];
v10 = interfaceinvoke v3.<io.netty.handler.codec.dns.DnsQuestion: io.netty.handler.codec.dns.DnsRecordType type()>();
v9[0] = v10;
specialinvoke v0.<io.netty.resolver.dns.DnsRecordResolveContext: void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.util.concurrent.Promise,java.lang.String,int,io.netty.handler.codec.dns.DnsRecordType[],io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsServerAddressStream,int)>(v1, v2, v7, v8, v9, v4, v5, v6);
return;
}
private void <init>(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise, java.lang.String, int, io.netty.handler.codec.dns.DnsRecordType[], io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int)
{
io.netty.resolver.dns.DnsRecordResolveContext v0;
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.util.concurrent.Promise v2;
io.netty.resolver.dns.DnsServerAddressStream v7;
io.netty.handler.codec.dns.DnsRecordType[] v5;
io.netty.handler.codec.dns.DnsRecord[] v6;
int v4, v8;
java.lang.String v3;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: int;
v5 := @parameter4: io.netty.handler.codec.dns.DnsRecordType[];
v6 := @parameter5: io.netty.handler.codec.dns.DnsRecord[];
v7 := @parameter6: io.netty.resolver.dns.DnsServerAddressStream;
v8 := @parameter7: int;
specialinvoke v0.<io.netty.resolver.dns.DnsResolveContext: void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.util.concurrent.Promise,java.lang.String,int,io.netty.handler.codec.dns.DnsRecordType[],io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsServerAddressStream,int)>(v1, v2, v3, v4, v5, v6, v7, v8);
return;
}
io.netty.resolver.dns.DnsResolveContext newResolverContext(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise, java.lang.String, int, io.netty.handler.codec.dns.DnsRecordType[], io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int)
{
io.netty.resolver.dns.DnsRecordResolveContext v0, v9;
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.util.concurrent.Promise v2;
io.netty.resolver.dns.DnsServerAddressStream v7;
io.netty.handler.codec.dns.DnsRecordType[] v5;
io.netty.handler.codec.dns.DnsRecord[] v6;
int v4, v8;
java.lang.String v3;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: int;
v5 := @parameter4: io.netty.handler.codec.dns.DnsRecordType[];
v6 := @parameter5: io.netty.handler.codec.dns.DnsRecord[];
v7 := @parameter6: io.netty.resolver.dns.DnsServerAddressStream;
v8 := @parameter7: int;
v9 = new io.netty.resolver.dns.DnsRecordResolveContext;
specialinvoke v9.<io.netty.resolver.dns.DnsRecordResolveContext: void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.util.concurrent.Promise,java.lang.String,int,io.netty.handler.codec.dns.DnsRecordType[],io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsServerAddressStream,int)>(v1, v2, v3, v4, v5, v6, v7, v8);
return v9;
}
io.netty.handler.codec.dns.DnsRecord convertRecord(io.netty.handler.codec.dns.DnsRecord, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.channel.EventLoop)
{
io.netty.handler.codec.dns.DnsRecord v1;
io.netty.resolver.dns.DnsRecordResolveContext v0;
io.netty.handler.codec.dns.DnsRecord[] v3;
java.lang.Object v5;
java.lang.String v2;
io.netty.channel.EventLoop v4;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecord;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord[];
v4 := @parameter3: io.netty.channel.EventLoop;
v5 = staticinvoke <io.netty.util.ReferenceCountUtil: java.lang.Object retain(java.lang.Object)>(v1);
return v5;
}
java.util.List filterResults(java.util.List)
{
io.netty.resolver.dns.DnsRecordResolveContext v0;
java.util.List v1;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: java.util.List;
return v1;
}
boolean isCompleteEarly(io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v1;
io.netty.resolver.dns.DnsRecordResolveContext v0;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecord;
return 0;
}
boolean isDuplicateAllowed()
{
io.netty.resolver.dns.DnsRecordResolveContext v0;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
return 1;
}
void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.handler.codec.dns.DnsRecord, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v3, v4;
io.netty.resolver.dns.DnsRecordResolveContext v0;
io.netty.handler.codec.dns.DnsRecord[] v2;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord[];
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord;
v4 := @parameter3: io.netty.handler.codec.dns.DnsRecord;
return;
}
void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.net.UnknownHostException)
{
io.netty.resolver.dns.DnsRecordResolveContext v0;
io.netty.handler.codec.dns.DnsRecord[] v2;
java.lang.String v1;
java.net.UnknownHostException v3;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord[];
v3 := @parameter2: java.net.UnknownHostException;
return;
}
io.netty.resolver.dns.DnsCnameCache cnameCache()
{
io.netty.resolver.dns.DnsRecordResolveContext v0;
io.netty.resolver.dns.NoopDnsCnameCache v1;
v0 := @this: io.netty.resolver.dns.DnsRecordResolveContext;
v1 = <io.netty.resolver.dns.NoopDnsCnameCache: io.netty.resolver.dns.NoopDnsCnameCache INSTANCE>;
return v1;
}
}