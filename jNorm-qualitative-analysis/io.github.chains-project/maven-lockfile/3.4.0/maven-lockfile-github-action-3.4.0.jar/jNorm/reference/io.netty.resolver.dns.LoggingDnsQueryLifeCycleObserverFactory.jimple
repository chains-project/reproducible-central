public final class io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory extends java.lang.Object implements io.netty.resolver.dns.DnsQueryLifecycleObserverFactory
{
private static final io.netty.util.internal.logging.InternalLogger DEFAULT_LOGGER;
private final io.netty.util.internal.logging.InternalLogger logger;
private final io.netty.util.internal.logging.InternalLogLevel level;
public void <init>()
{
io.netty.handler.logging.LogLevel v1;
io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory v0;
v0 := @this: io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory;
v1 = <io.netty.handler.logging.LogLevel: io.netty.handler.logging.LogLevel DEBUG>;
specialinvoke v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: void <init>(io.netty.handler.logging.LogLevel)>(v1);
return;
}
public void <init>(io.netty.handler.logging.LogLevel)
{
io.netty.handler.logging.LogLevel v1;
io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory v0;
io.netty.util.internal.logging.InternalLogger v3;
io.netty.util.internal.logging.InternalLogLevel v2;
v0 := @this: io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory;
v1 := @parameter0: io.netty.handler.logging.LogLevel;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)>(v1);
v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel level> = v2;
v3 = <io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogger DEFAULT_LOGGER>;
v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogger logger> = v3;
return;
}
public void <init>(java.lang.Class, io.netty.handler.logging.LogLevel)
{
io.netty.handler.logging.LogLevel v2;
io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory v0;
io.netty.util.internal.logging.InternalLogger v5;
io.netty.util.internal.logging.InternalLogLevel v3;
java.lang.Class v1;
java.lang.Object v4;
v0 := @this: io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: io.netty.handler.logging.LogLevel;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)>(v2);
v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel level> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "classContext");
v5 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(v4);
v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogger logger> = v5;
return;
}
public void <init>(java.lang.String, io.netty.handler.logging.LogLevel)
{
io.netty.handler.logging.LogLevel v2;
io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory v0;
io.netty.util.internal.logging.InternalLogger v5;
io.netty.util.internal.logging.InternalLogLevel v3;
java.lang.Object v4;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.logging.LogLevel;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)>(v2);
v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel level> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
v5 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.String)>(v4);
v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogger logger> = v5;
return;
}
private static io.netty.util.internal.logging.InternalLogLevel checkAndConvertLevel(io.netty.handler.logging.LogLevel)
{
io.netty.util.internal.logging.InternalLogLevel v2;
java.lang.Object v1;
io.netty.handler.logging.LogLevel v0;
v0 := @parameter0: io.netty.handler.logging.LogLevel;
v1 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "level");
v2 = virtualinvoke v1.<io.netty.handler.logging.LogLevel: io.netty.util.internal.logging.InternalLogLevel toInternalLevel()>();
return v2;
}
public io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion)
{
io.netty.handler.codec.dns.DnsQuestion v1;
io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory v0;
io.netty.resolver.dns.LoggingDnsQueryLifecycleObserver v2;
io.netty.util.internal.logging.InternalLogger v3;
io.netty.util.internal.logging.InternalLogLevel v4;
v0 := @this: io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory;
v1 := @parameter0: io.netty.handler.codec.dns.DnsQuestion;
v2 = new io.netty.resolver.dns.LoggingDnsQueryLifecycleObserver;
v3 = v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogger logger>;
v4 = v0.<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogLevel level>;
specialinvoke v2.<io.netty.resolver.dns.LoggingDnsQueryLifecycleObserver: void <init>(io.netty.handler.codec.dns.DnsQuestion,io.netty.util.internal.logging.InternalLogger,io.netty.util.internal.logging.InternalLogLevel)>(v1, v3, v4);
return v2;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/resolver/dns/LoggingDnsQueryLifeCycleObserverFactory;");
<io.netty.resolver.dns.LoggingDnsQueryLifeCycleObserverFactory: io.netty.util.internal.logging.InternalLogger DEFAULT_LOGGER> = v0;
return;
}
}