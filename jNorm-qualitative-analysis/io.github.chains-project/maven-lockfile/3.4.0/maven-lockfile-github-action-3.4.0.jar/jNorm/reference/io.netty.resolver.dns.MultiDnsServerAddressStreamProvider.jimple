public final class io.netty.resolver.dns.MultiDnsServerAddressStreamProvider extends java.lang.Object implements io.netty.resolver.dns.DnsServerAddressStreamProvider
{
private final io.netty.resolver.dns.DnsServerAddressStreamProvider[] providers;
public void <init>(java.util.List)
{
io.netty.resolver.dns.DnsServerAddressStreamProvider[] v2;
java.util.List v1;
java.lang.Object[] v3;
io.netty.resolver.dns.MultiDnsServerAddressStreamProvider v0;
v0 := @this: io.netty.resolver.dns.MultiDnsServerAddressStreamProvider;
v1 := @parameter0: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = newarray (io.netty.resolver.dns.DnsServerAddressStreamProvider)[0];
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v2);
v0.<io.netty.resolver.dns.MultiDnsServerAddressStreamProvider: io.netty.resolver.dns.DnsServerAddressStreamProvider[] providers> = v3;
return;
}
public transient void <init>(io.netty.resolver.dns.DnsServerAddressStreamProvider[])
{
io.netty.resolver.dns.DnsServerAddressStreamProvider[] v1;
java.lang.Object v2;
io.netty.resolver.dns.MultiDnsServerAddressStreamProvider v0;
v0 := @this: io.netty.resolver.dns.MultiDnsServerAddressStreamProvider;
v1 := @parameter0: io.netty.resolver.dns.DnsServerAddressStreamProvider[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v0.<io.netty.resolver.dns.MultiDnsServerAddressStreamProvider: io.netty.resolver.dns.DnsServerAddressStreamProvider[] providers> = v2;
return;
}
public io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String)
{
io.netty.resolver.dns.DnsServerAddressStreamProvider[] v2;
io.netty.resolver.dns.DnsServerAddressStream v6;
io.netty.resolver.dns.DnsServerAddressStreamProvider v5;
int v3, v4;
java.lang.String v1;
io.netty.resolver.dns.MultiDnsServerAddressStreamProvider v0;
v0 := @this: io.netty.resolver.dns.MultiDnsServerAddressStreamProvider;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.resolver.dns.MultiDnsServerAddressStreamProvider: io.netty.resolver.dns.DnsServerAddressStreamProvider[] providers>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = interfaceinvoke v5.<io.netty.resolver.dns.DnsServerAddressStreamProvider: io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String)>(v1);
if v6 == null goto label2;
return v6;
label2:
v4 = v4 + 1;
goto label1;
label3:
return null;
}
}