final class io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping extends java.lang.Object implements io.netty.util.Mapping
{
private static final java.lang.String REPR_HEADER;
private static final java.lang.String REPR_MAP_OPENING;
private static final java.lang.String REPR_MAP_CLOSING;
private final java.lang.Object defaultValue;
private final java.util.Map map;
void <init>(java.lang.Object, java.util.Map)
{
java.util.LinkedHashMap v3;
io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping v0;
java.util.Map v2;
java.lang.Object v1;
v0 := @this: io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.lang.Object defaultValue> = v1;
v3 = new java.util.LinkedHashMap;
specialinvoke v3.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v2);
v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.util.Map map> = v3;
return;
}
public java.lang.Object map(java.lang.String)
{
io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping v0;
java.util.Map v3, v7;
int v5, v6;
java.lang.Object v10, v4, v9;
java.lang.String v1, v2, v8;
v0 := @this: io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping;
v1 := @parameter0: java.lang.String;
if v1 == null goto label2;
v2 = staticinvoke <io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.lang.String normalize(java.lang.String)>(v1);
v3 = v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.util.Map map>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = virtualinvoke v2.<java.lang.String: int indexOf(int)>(46);
v6 = (int) -1;
if v5 == v6 goto label2;
v7 = v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.util.Map map>;
v8 = virtualinvoke v2.<java.lang.String: java.lang.String substring(int)>(v5);
v9 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v8);
if v9 == null goto label2;
return v9;
label2:
v10 = v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.lang.Object defaultValue>;
return v10;
}
static java.lang.String normalize(java.lang.String)
{
java.lang.String v0, v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.netty.util.DomainNameMapping: java.lang.String normalizeHostname(java.lang.String)>(v0);
return v1;
}
public java.lang.String toString()
{
java.util.Map v6;
int v17, v18;
java.lang.String v21;
boolean v9;
java.util.Iterator v8;
java.util.Set v7;
char v12;
io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping v0;
java.lang.Object v10, v11, v15, v3;
java.lang.StringBuilder v1, v13, v14, v16, v19, v2, v20, v4, v5;
v0 := @this: io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImmutableDomainWildcardMapping(default: ");
v3 = v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.lang.Object defaultValue>;
v4 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v3);
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", map: ");
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);
v6 = v0.<io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping: java.util.Map map>;
v7 = interfaceinvoke v6.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label3;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = virtualinvoke v11.<java.lang.String: char charAt(int)>(0);
if v12 != 46 goto label2;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("*\u0001");
label2:
v13 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
v14 = virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
v15 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v15);
virtualinvoke v16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
goto label1;
label3:
v17 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v18 = v17 - 2;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v18);
v19 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
v20 = virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
v21 = virtualinvoke v20.<java.lang.StringBuilder: java.lang.String toString()>();
return v21;
}
}