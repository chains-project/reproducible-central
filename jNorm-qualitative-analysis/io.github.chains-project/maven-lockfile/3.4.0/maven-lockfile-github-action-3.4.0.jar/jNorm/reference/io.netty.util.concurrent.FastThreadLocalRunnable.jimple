final class io.netty.util.concurrent.FastThreadLocalRunnable extends java.lang.Object implements java.lang.Runnable
{
private final java.lang.Runnable runnable;
private void <init>(java.lang.Runnable)
{
java.lang.Object v2;
io.netty.util.concurrent.FastThreadLocalRunnable v0;
java.lang.Runnable v1;
v0 := @this: io.netty.util.concurrent.FastThreadLocalRunnable;
v1 := @parameter0: java.lang.Runnable;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "runnable");
v0.<io.netty.util.concurrent.FastThreadLocalRunnable: java.lang.Runnable runnable> = v2;
return;
}
public void run()
{
java.lang.Throwable v2;
io.netty.util.concurrent.FastThreadLocalRunnable v0;
java.lang.Runnable v1;
v0 := @this: io.netty.util.concurrent.FastThreadLocalRunnable;
label1:
v1 = v0.<io.netty.util.concurrent.FastThreadLocalRunnable: java.lang.Runnable runnable>;
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label2:
staticinvoke <io.netty.util.concurrent.FastThreadLocal: void removeAll()>();
goto label4;
label3:
v2 := @caughtexception;
staticinvoke <io.netty.util.concurrent.FastThreadLocal: void removeAll()>();
throw v2;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
static java.lang.Runnable wrap(java.lang.Runnable)
{
io.netty.util.concurrent.FastThreadLocalRunnable v3;
java.lang.Runnable v0, v2;
boolean v1;
v0 := @parameter0: java.lang.Runnable;
v1 = v0 instanceof io.netty.util.concurrent.FastThreadLocalRunnable;
if v1 == 0 goto label1;
v2 = v0;
goto label2;
label1:
v3 = new io.netty.util.concurrent.FastThreadLocalRunnable;
v2 = v3;
specialinvoke v3.<io.netty.util.concurrent.FastThreadLocalRunnable: void <init>(java.lang.Runnable)>(v0);
label2:
return v2;
}
}