public final class io.netty.util.concurrent.ImmediateEventExecutor extends io.netty.util.concurrent.AbstractEventExecutor
{
private static final io.netty.util.internal.logging.InternalLogger logger;
public static final io.netty.util.concurrent.ImmediateEventExecutor INSTANCE;
private static final io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES;
private static final io.netty.util.concurrent.FastThreadLocal RUNNING;
private final io.netty.util.concurrent.Future terminationFuture;
private void <init>()
{
io.netty.util.concurrent.GlobalEventExecutor v2;
java.lang.UnsupportedOperationException v3;
io.netty.util.concurrent.ImmediateEventExecutor v0;
io.netty.util.concurrent.FailedFuture v1;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
specialinvoke v0.<io.netty.util.concurrent.AbstractEventExecutor: void <init>()>();
v1 = new io.netty.util.concurrent.FailedFuture;
v2 = <io.netty.util.concurrent.GlobalEventExecutor: io.netty.util.concurrent.GlobalEventExecutor INSTANCE>;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
specialinvoke v1.<io.netty.util.concurrent.FailedFuture: void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Throwable)>(v2, v3);
v0.<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.Future terminationFuture> = v1;
return;
}
public boolean inEventLoop()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
return 1;
}
public boolean inEventLoop(java.lang.Thread)
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
java.lang.Thread v1;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 := @parameter0: java.lang.Thread;
return 1;
}
public io.netty.util.concurrent.Future shutdownGracefully(long, long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v3;
io.netty.util.concurrent.ImmediateEventExecutor v0;
long v1, v2;
io.netty.util.concurrent.Future v4;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 := @parameter2: java.util.concurrent.TimeUnit;
v4 = virtualinvoke v0.<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.Future terminationFuture()>();
return v4;
}
public io.netty.util.concurrent.Future terminationFuture()
{
io.netty.util.concurrent.Future v1;
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 = v0.<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.Future terminationFuture>;
return v1;
}
public void shutdown()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
return;
}
public boolean isShuttingDown()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
return 0;
}
public boolean isShutdown()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
return 0;
}
public boolean isTerminated()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
return 0;
}
public boolean awaitTermination(long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v2;
long v1;
io.netty.util.concurrent.ImmediateEventExecutor v0;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
return 0;
}
public void execute(java.lang.Runnable)
{
java.lang.Runnable v1;
boolean v4;
io.netty.util.internal.logging.InternalLogger v11, v15, v20, v28;
java.lang.Throwable v10, v14, v19, v23, v27;
io.netty.util.concurrent.ImmediateEventExecutor v0;
io.netty.util.concurrent.FastThreadLocal v12, v16, v2, v21, v24, v29, v31, v5, v7;
java.lang.Boolean v13, v22, v30, v6;
java.lang.Object v17, v18, v25, v26, v3, v32, v8, v9;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 := @parameter0: java.lang.Runnable;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "command");
v2 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal RUNNING>;
v3 = virtualinvoke v2.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
if v4 != 0 goto label21;
v5 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal RUNNING>;
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v5.<io.netty.util.concurrent.FastThreadLocal: void set(java.lang.Object)>(v6);
label01:
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label02:
v7 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES>;
v8 = virtualinvoke v7.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
label03:
v9 = interfaceinvoke v8.<java.util.Queue: java.lang.Object poll()>();
if v9 == null goto label07;
label04:
interfaceinvoke v9.<java.lang.Runnable: void run()>();
label05:
goto label03;
label06:
v10 := @caughtexception;
v11 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v11.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Throwable caught while executing Runnable {}", v9, v10);
goto label03;
label07:
v12 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal RUNNING>;
v13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
virtualinvoke v12.<io.netty.util.concurrent.FastThreadLocal: void set(java.lang.Object)>(v13);
goto label22;
label08:
v14 := @caughtexception;
v15 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v15.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Throwable caught while executing Runnable {}", v1, v14);
label09:
v16 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES>;
v17 = virtualinvoke v16.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
label10:
v18 = interfaceinvoke v17.<java.util.Queue: java.lang.Object poll()>();
if v18 == null goto label14;
label11:
interfaceinvoke v18.<java.lang.Runnable: void run()>();
label12:
goto label10;
label13:
v19 := @caughtexception;
v20 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v20.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Throwable caught while executing Runnable {}", v18, v19);
goto label10;
label14:
v21 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal RUNNING>;
v22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
virtualinvoke v21.<io.netty.util.concurrent.FastThreadLocal: void set(java.lang.Object)>(v22);
goto label22;
label15:
v23 := @caughtexception;
v24 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES>;
v25 = virtualinvoke v24.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
label16:
v26 = interfaceinvoke v25.<java.util.Queue: java.lang.Object poll()>();
if v26 == null goto label20;
label17:
interfaceinvoke v26.<java.lang.Runnable: void run()>();
label18:
goto label16;
label19:
v27 := @caughtexception;
v28 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v28.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Throwable caught while executing Runnable {}", v26, v27);
goto label16;
label20:
v29 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal RUNNING>;
v30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
virtualinvoke v29.<io.netty.util.concurrent.FastThreadLocal: void set(java.lang.Object)>(v30);
throw v23;
label21:
v31 = <io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES>;
v32 = virtualinvoke v31.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
interfaceinvoke v32.<java.util.Queue: boolean add(java.lang.Object)>(v1);
label22:
return;
catch java.lang.Throwable from label04 to label05 with label06;
catch java.lang.Throwable from label01 to label02 with label08;
catch java.lang.Throwable from label11 to label12 with label13;
catch java.lang.Throwable from label08 to label09 with label15;
catch java.lang.Throwable from label17 to label18 with label19;
}
public io.netty.util.concurrent.Promise newPromise()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise v1;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 = new io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise;
specialinvoke v1.<io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise: void <init>(io.netty.util.concurrent.EventExecutor)>(v0);
return v1;
}
public io.netty.util.concurrent.ProgressivePromise newProgressivePromise()
{
io.netty.util.concurrent.ImmediateEventExecutor v0;
io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise v1;
v0 := @this: io.netty.util.concurrent.ImmediateEventExecutor;
v1 = new io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise;
specialinvoke v1.<io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise: void <init>(io.netty.util.concurrent.EventExecutor)>(v0);
return v1;
}
static void <clinit>()
{
io.netty.util.concurrent.ImmediateEventExecutor v1;
io.netty.util.concurrent.ImmediateEventExecutor$2 v3;
io.netty.util.concurrent.ImmediateEventExecutor$1 v2;
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/util/concurrent/ImmediateEventExecutor;");
<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = new io.netty.util.concurrent.ImmediateEventExecutor;
specialinvoke v1.<io.netty.util.concurrent.ImmediateEventExecutor: void <init>()>();
<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.ImmediateEventExecutor INSTANCE> = v1;
v2 = new io.netty.util.concurrent.ImmediateEventExecutor$1;
specialinvoke v2.<io.netty.util.concurrent.ImmediateEventExecutor$1: void <init>()>();
<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES> = v2;
v3 = new io.netty.util.concurrent.ImmediateEventExecutor$2;
specialinvoke v3.<io.netty.util.concurrent.ImmediateEventExecutor$2: void <init>()>();
<io.netty.util.concurrent.ImmediateEventExecutor: io.netty.util.concurrent.FastThreadLocal RUNNING> = v3;
return;
}
}