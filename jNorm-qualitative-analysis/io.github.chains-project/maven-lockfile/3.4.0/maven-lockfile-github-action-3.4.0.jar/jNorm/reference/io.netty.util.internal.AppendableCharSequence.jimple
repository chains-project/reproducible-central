public final class io.netty.util.internal.AppendableCharSequence extends java.lang.Object implements java.lang.CharSequence, java.lang.Appendable
{
private char[] chars;
private int pos;
public void <init>(int)
{
int v1, v2;
char[] v3;
io.netty.util.internal.AppendableCharSequence v0;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v1, "length");
v3 = newarray (char)[v2];
v0.<io.netty.util.internal.AppendableCharSequence: char[] chars> = v3;
return;
}
private void <init>(char[])
{
int v3;
char[] v1, v2;
io.netty.util.internal.AppendableCharSequence v0;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: char[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: char[] checkNonEmpty(char[],java.lang.String)>(v1, "chars");
v0.<io.netty.util.internal.AppendableCharSequence: char[] chars> = v2;
v3 = lengthof v1;
v0.<io.netty.util.internal.AppendableCharSequence: int pos> = v3;
return;
}
public void setLength(int)
{
int v1, v2, v4;
io.netty.util.internal.AppendableCharSequence v0;
java.lang.String v5;
java.lang.IllegalArgumentException v3;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
if v1 < 0 goto label1;
v2 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
if v1 <= v2 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("length: \u0001 (length: >= 0, <= \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label2:
v0.<io.netty.util.internal.AppendableCharSequence: int pos> = v1;
return;
}
public int length()
{
int v1;
io.netty.util.internal.AppendableCharSequence v0;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
return v1;
}
public char charAt(int)
{
java.lang.IndexOutOfBoundsException v3;
int v1, v2;
char[] v4;
char v5;
io.netty.util.internal.AppendableCharSequence v0;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
v2 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
if v1 <= v2 goto label1;
v3 = new java.lang.IndexOutOfBoundsException;
specialinvoke v3.<java.lang.IndexOutOfBoundsException: void <init>()>();
throw v3;
label1:
v4 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v5 = v4[v1];
return v5;
}
public char charAtUnsafe(int)
{
int v1;
char[] v2;
char v3;
io.netty.util.internal.AppendableCharSequence v0;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
v2 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v3 = v2[v1];
return v3;
}
public io.netty.util.internal.AppendableCharSequence subSequence(int, int)
{
io.netty.util.internal.AppendableCharSequence v0, v3, v7;
int v1, v2, v5, v6;
char[] v4, v8, v9;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
v2 := @parameter1: int;
if v1 != v2 goto label1;
v3 = new io.netty.util.internal.AppendableCharSequence;
v4 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v5 = lengthof v4;
v6 = staticinvoke <java.lang.Math: int min(int,int)>(16, v5);
specialinvoke v3.<io.netty.util.internal.AppendableCharSequence: void <init>(int)>(v6);
return v3;
label1:
v7 = new io.netty.util.internal.AppendableCharSequence;
v8 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v9 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(v8, v1, v2);
specialinvoke v7.<io.netty.util.internal.AppendableCharSequence: void <init>(char[])>(v9);
return v7;
}
public io.netty.util.internal.AppendableCharSequence append(char)
{
char v1;
io.netty.util.internal.AppendableCharSequence v0;
int v10, v12, v13, v2, v4, v6, v7;
char[] v11, v3, v5, v8, v9;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: char;
v2 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v3 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v4 = lengthof v3;
if v2 != v4 goto label1;
v5 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v6 = lengthof v5;
v7 = v6 << 1;
v8 = newarray (char)[v7];
v0.<io.netty.util.internal.AppendableCharSequence: char[] chars> = v8;
v9 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v10 = lengthof v5;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v5, 0, v9, 0, v10);
label1:
v11 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v12 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v13 = v12 + 1;
v0.<io.netty.util.internal.AppendableCharSequence: int pos> = v13;
v11[v12] = v1;
return v0;
}
public io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence)
{
java.lang.CharSequence v1;
int v2;
io.netty.util.internal.AppendableCharSequence v0, v3;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: java.lang.CharSequence;
v2 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v3 = virtualinvoke v0.<io.netty.util.internal.AppendableCharSequence: io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence,int,int)>(v1, 0, v2);
return v3;
}
public io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence, int, int)
{
java.lang.IndexOutOfBoundsException v5;
int v10, v11, v12, v14, v15, v16, v2, v21, v22, v23, v24, v26, v27, v3, v4, v6, v8;
java.lang.String v7;
boolean v18;
java.lang.CharSequence v1;
char v28;
io.netty.util.internal.AppendableCharSequence v0;
char[] v13, v17, v19, v20, v25, v9;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v4 >= v3 goto label1;
v5 = new java.lang.IndexOutOfBoundsException;
v6 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v3, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected: csq.length() >= (\u0001),but actual is (\u0001)");
specialinvoke v5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v7);
throw v5;
label1:
v8 = v3 - v2;
v9 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v10 = lengthof v9;
v11 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v12 = v10 - v11;
if v8 <= v12 goto label2;
v13 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v14 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v15 = v14 + v8;
v16 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v17 = staticinvoke <io.netty.util.internal.AppendableCharSequence: char[] expand(char[],int,int)>(v13, v15, v16);
v0.<io.netty.util.internal.AppendableCharSequence: char[] chars> = v17;
label2:
v18 = v1 instanceof io.netty.util.internal.AppendableCharSequence;
if v18 == 0 goto label3;
v19 = v1.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v20 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v21 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v19, v2, v20, v21, v8);
v22 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v23 = v22 + v8;
v0.<io.netty.util.internal.AppendableCharSequence: int pos> = v23;
return v0;
label3:
v24 = v2;
label4:
if v24 >= v3 goto label5;
v25 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v26 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v27 = v26 + 1;
v0.<io.netty.util.internal.AppendableCharSequence: int pos> = v27;
v28 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v24);
v25[v26] = v28;
v24 = v24 + 1;
goto label4;
label5:
return v0;
}
public void reset()
{
io.netty.util.internal.AppendableCharSequence v0;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v0.<io.netty.util.internal.AppendableCharSequence: int pos> = 0;
return;
}
public java.lang.String toString()
{
int v3;
char[] v2;
io.netty.util.internal.AppendableCharSequence v0;
java.lang.String v1;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 = new java.lang.String;
v2 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v3 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
specialinvoke v1.<java.lang.String: void <init>(char[],int,int)>(v2, 0, v3);
return v1;
}
public java.lang.String substring(int, int)
{
java.lang.IndexOutOfBoundsException v6;
io.netty.util.internal.AppendableCharSequence v0;
int v1, v2, v3, v4, v5, v7;
char[] v10;
java.lang.String v8, v9;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v2 - v1;
v4 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
if v1 > v4 goto label1;
v5 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
if v3 <= v5 goto label2;
label1:
v6 = new java.lang.IndexOutOfBoundsException;
v7 = v0.<io.netty.util.internal.AppendableCharSequence: int pos>;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected: start and length <= (\u0001)");
specialinvoke v6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v8);
throw v6;
label2:
v9 = new java.lang.String;
v10 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
specialinvoke v9.<java.lang.String: void <init>(char[],int,int)>(v10, v1, v3);
return v9;
}
public java.lang.String subStringUnsafe(int, int)
{
int v1, v2, v5;
char[] v4;
io.netty.util.internal.AppendableCharSequence v0;
java.lang.String v3;
v0 := @this: io.netty.util.internal.AppendableCharSequence;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = new java.lang.String;
v4 = v0.<io.netty.util.internal.AppendableCharSequence: char[] chars>;
v5 = v2 - v1;
specialinvoke v3.<java.lang.String: void <init>(char[],int,int)>(v4, v1, v5);
return v3;
}
private static char[] expand(char[], int, int)
{
java.lang.IllegalStateException v4;
int v1, v2, v3;
char[] v0, v5;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = lengthof v0;
label1:
v3 = v3 << 1;
if v3 >= 0 goto label2;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>()>();
throw v4;
label2:
if v1 > v3 goto label1;
v5 = newarray (char)[v3];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v0, 0, v5, 0, v2);
return v5;
}
}