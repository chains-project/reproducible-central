public final class io.netty.util.internal.ClassInitializerUtil extends java.lang.Object
{
private void <init>()
{
io.netty.util.internal.ClassInitializerUtil v0;
v0 := @this: io.netty.util.internal.ClassInitializerUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static transient void tryLoadClasses(java.lang.Class, java.lang.Class[])
{
int v3, v4;
java.lang.Class[] v1;
java.lang.Class v0, v5;
java.lang.ClassLoader v2;
java.lang.String v6;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class[];
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: java.lang.ClassLoader getClassLoader(java.lang.Class)>(v0);
v3 = lengthof v1;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v1[v4];
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
staticinvoke <io.netty.util.internal.ClassInitializerUtil: void tryLoadClass(java.lang.ClassLoader,java.lang.String)>(v2, v6);
v4 = v4 + 1;
goto label1;
label2:
return;
}
private static void tryLoadClass(java.lang.ClassLoader, java.lang.String)
{
java.lang.ClassNotFoundException v2;
java.lang.SecurityException v3;
java.lang.ClassLoader v0;
java.lang.String v1;
v0 := @parameter0: java.lang.ClassLoader;
v1 := @parameter1: java.lang.String;
label1:
staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v1, 1, v0);
label2:
goto label5;
label3:
v2 := @caughtexception;
goto label5;
label4:
v3 := @caughtexception;
label5:
return;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.SecurityException from label1 to label2 with label4;
}
}