final class io.netty.util.internal.CleanerJava9 extends java.lang.Object implements io.netty.util.internal.Cleaner
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final java.lang.reflect.Method INVOKE_CLEANER;
void <init>()
{
io.netty.util.internal.CleanerJava9 v0;
v0 := @this: io.netty.util.internal.CleanerJava9;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static boolean isSupported()
{
java.lang.reflect.Method v0;
boolean v1;
v0 = <io.netty.util.internal.CleanerJava9: java.lang.reflect.Method INVOKE_CLEANER>;
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
public void freeDirectBuffer(java.nio.ByteBuffer)
{
java.lang.Throwable v6;
sun.misc.Unsafe v4;
io.netty.util.internal.CleanerJava9 v0;
java.lang.Object[] v5;
java.lang.reflect.Method v3;
java.lang.SecurityManager v2;
java.nio.ByteBuffer v1;
v0 := @this: io.netty.util.internal.CleanerJava9;
v1 := @parameter0: java.nio.ByteBuffer;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 != null goto label4;
label1:
v3 = <io.netty.util.internal.CleanerJava9: java.lang.reflect.Method INVOKE_CLEANER>;
v4 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
virtualinvoke v3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v4, v5);
label2:
goto label5;
label3:
v6 := @caughtexception;
staticinvoke <io.netty.util.internal.PlatformDependent0: void throwException(java.lang.Throwable)>(v6);
goto label5;
label4:
staticinvoke <io.netty.util.internal.CleanerJava9: void freeDirectBufferPrivileged(java.nio.ByteBuffer)>(v1);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private static void freeDirectBufferPrivileged(java.nio.ByteBuffer)
{
io.netty.util.internal.CleanerJava9$2 v1;
java.lang.Object v2;
java.nio.ByteBuffer v0;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = new io.netty.util.internal.CleanerJava9$2;
specialinvoke v1.<io.netty.util.internal.CleanerJava9$2: void <init>(java.nio.ByteBuffer)>(v0);
v2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v1);
if v2 == null goto label1;
staticinvoke <io.netty.util.internal.PlatformDependent0: void throwException(java.lang.Throwable)>(v2);
label1:
return;
}
static void <clinit>()
{
java.lang.UnsupportedOperationException v6;
java.nio.ByteBuffer v2;
io.netty.util.internal.CleanerJava9$1 v3;
io.netty.util.internal.logging.InternalLogger v0, v7, v8;
java.lang.Object v4;
boolean v1, v5;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/util/internal/CleanerJava9;");
<io.netty.util.internal.CleanerJava9: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent0: boolean hasUnsafe()>();
if v1 == 0 goto label1;
v2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1);
v3 = new io.netty.util.internal.CleanerJava9$1;
specialinvoke v3.<io.netty.util.internal.CleanerJava9$1: void <init>(java.nio.ByteBuffer)>(v2);
v4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
v5 = v4 instanceof java.lang.Throwable;
if v5 != 0 goto label2;
v4 = null;
goto label2;
label1:
v6 = new java.lang.UnsupportedOperationException;
specialinvoke v6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("sun.misc.Unsafe unavailable");
v4 = v6;
label2:
if v4 != null goto label3;
v7 = <io.netty.util.internal.CleanerJava9: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v7.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("java.nio.ByteBuffer.cleaner(): available");
goto label4;
label3:
v8 = <io.netty.util.internal.CleanerJava9: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("java.nio.ByteBuffer.cleaner(): unavailable", v4);
label4:
<io.netty.util.internal.CleanerJava9: java.lang.reflect.Method INVOKE_CLEANER> = v4;
return;
}
}