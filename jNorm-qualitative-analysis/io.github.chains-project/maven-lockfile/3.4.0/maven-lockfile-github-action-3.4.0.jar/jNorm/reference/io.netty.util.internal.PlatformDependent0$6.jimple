class io.netty.util.internal.PlatformDependent0$6 extends java.lang.Object implements java.security.PrivilegedAction
{
void <init>()
{
io.netty.util.internal.PlatformDependent0$6 v0;
v0 := @this: io.netty.util.internal.PlatformDependent0$6;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object run()
{
java.lang.Throwable v19;
sun.misc.Unsafe v11, v13, v9;
java.lang.Object[] v20;
java.lang.NoSuchMethodException v22;
long v10;
java.lang.NoSuchFieldException v16;
int v3;
java.lang.Boolean v15;
java.lang.SecurityException v23;
java.lang.String v5;
java.lang.reflect.Method v18;
boolean v14, v4;
java.lang.IllegalAccessException v24;
java.lang.Class[] v17;
io.netty.util.internal.PlatformDependent0$6 v0;
java.lang.reflect.Field v6;
java.lang.reflect.InvocationTargetException v26;
java.lang.Class v2, v7, v8;
java.lang.ClassNotFoundException v25;
java.lang.Object v12, v21;
java.lang.ClassLoader v1;
v0 := @this: io.netty.util.internal.PlatformDependent0$6;
label01:
v1 = staticinvoke <io.netty.util.internal.PlatformDependent0: java.lang.ClassLoader getSystemClassLoader()>();
v2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.nio.Bits", 0, v1);
v3 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion()>();
v4 = staticinvoke <io.netty.util.internal.PlatformDependent0: boolean unsafeStaticFieldOffsetSupported()>();
if v4 == 0 goto label06;
if v3 < 9 goto label06;
if v3 < 11 goto label02;
v5 = "UNALIGNED";
goto label03;
label02:
v5 = "unaligned";
label03:
v6 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(v5);
v7 = virtualinvoke v6.<java.lang.reflect.Field: java.lang.Class getType()>();
v8 = <java.lang.Boolean: java.lang.Class TYPE>;
if v7 != v8 goto label06;
v9 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v10 = virtualinvoke v9.<sun.misc.Unsafe: long staticFieldOffset(java.lang.reflect.Field)>(v6);
v11 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v12 = virtualinvoke v11.<sun.misc.Unsafe: java.lang.Object staticFieldBase(java.lang.reflect.Field)>(v6);
v13 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v14 = virtualinvoke v13.<sun.misc.Unsafe: boolean getBoolean(java.lang.Object,long)>(v12, v10);
v15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v14);
label04:
return v15;
label05:
v16 := @caughtexception;
label06:
v17 = newarray (java.lang.Class)[0];
v18 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("unaligned", v17);
v19 = staticinvoke <io.netty.util.internal.ReflectionUtil: java.lang.Throwable trySetAccessible(java.lang.reflect.AccessibleObject,boolean)>(v18, 1);
if v19 == null goto label08;
label07:
return v19;
label08:
v20 = newarray (java.lang.Object)[0];
v21 = virtualinvoke v18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, v20);
label09:
return v21;
label10:
v22 := @caughtexception;
return v22;
label11:
v23 := @caughtexception;
return v23;
label12:
v24 := @caughtexception;
return v24;
label13:
v25 := @caughtexception;
return v25;
label14:
v26 := @caughtexception;
return v26;
catch java.lang.NoSuchFieldException from label03 to label04 with label05;
catch java.lang.NoSuchMethodException from label01 to label04 with label10;
catch java.lang.NoSuchMethodException from label05 to label07 with label10;
catch java.lang.NoSuchMethodException from label08 to label09 with label10;
catch java.lang.SecurityException from label01 to label04 with label11;
catch java.lang.SecurityException from label05 to label07 with label11;
catch java.lang.SecurityException from label08 to label09 with label11;
catch java.lang.IllegalAccessException from label01 to label04 with label12;
catch java.lang.IllegalAccessException from label05 to label07 with label12;
catch java.lang.IllegalAccessException from label08 to label09 with label12;
catch java.lang.ClassNotFoundException from label01 to label04 with label13;
catch java.lang.ClassNotFoundException from label05 to label07 with label13;
catch java.lang.ClassNotFoundException from label08 to label09 with label13;
catch java.lang.reflect.InvocationTargetException from label01 to label04 with label14;
catch java.lang.reflect.InvocationTargetException from label05 to label07 with label14;
catch java.lang.reflect.InvocationTargetException from label08 to label09 with label14;
}
}