public final class io.netty.util.internal.RecyclableArrayList extends java.util.ArrayList
{
private static final long serialVersionUID;
private static final int DEFAULT_INITIAL_CAPACITY;
private static final io.netty.util.internal.ObjectPool RECYCLER;
private boolean insertSinceRecycled;
private final io.netty.util.internal.ObjectPool$Handle handle;
public static io.netty.util.internal.RecyclableArrayList newInstance()
{
io.netty.util.internal.RecyclableArrayList v0;
v0 = staticinvoke <io.netty.util.internal.RecyclableArrayList: io.netty.util.internal.RecyclableArrayList newInstance(int)>(8);
return v0;
}
public static io.netty.util.internal.RecyclableArrayList newInstance(int)
{
int v0;
java.lang.Object v2;
io.netty.util.internal.ObjectPool v1;
v0 := @parameter0: int;
v1 = <io.netty.util.internal.RecyclableArrayList: io.netty.util.internal.ObjectPool RECYCLER>;
v2 = virtualinvoke v1.<io.netty.util.internal.ObjectPool: java.lang.Object get()>();
virtualinvoke v2.<io.netty.util.internal.RecyclableArrayList: void ensureCapacity(int)>(v0);
return v2;
}
private void <init>(io.netty.util.internal.ObjectPool$Handle)
{
io.netty.util.internal.RecyclableArrayList v0;
io.netty.util.internal.ObjectPool$Handle v1;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: io.netty.util.internal.ObjectPool$Handle;
specialinvoke v0.<io.netty.util.internal.RecyclableArrayList: void <init>(io.netty.util.internal.ObjectPool$Handle,int)>(v1, 8);
return;
}
private void <init>(io.netty.util.internal.ObjectPool$Handle, int)
{
int v2;
io.netty.util.internal.RecyclableArrayList v0;
io.netty.util.internal.ObjectPool$Handle v1;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: io.netty.util.internal.ObjectPool$Handle;
v2 := @parameter1: int;
specialinvoke v0.<java.util.ArrayList: void <init>(int)>(v2);
v0.<io.netty.util.internal.RecyclableArrayList: io.netty.util.internal.ObjectPool$Handle handle> = v1;
return;
}
public boolean addAll(java.util.Collection)
{
io.netty.util.internal.RecyclableArrayList v0;
boolean v2;
java.util.Collection v1;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: java.util.Collection;
staticinvoke <io.netty.util.internal.RecyclableArrayList: void checkNullElements(java.util.Collection)>(v1);
v2 = specialinvoke v0.<java.util.ArrayList: boolean addAll(java.util.Collection)>(v1);
if v2 == 0 goto label1;
v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled> = 1;
return 1;
label1:
return 0;
}
public boolean addAll(int, java.util.Collection)
{
io.netty.util.internal.RecyclableArrayList v0;
java.util.Collection v2;
int v1;
boolean v3;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: int;
v2 := @parameter1: java.util.Collection;
staticinvoke <io.netty.util.internal.RecyclableArrayList: void checkNullElements(java.util.Collection)>(v2);
v3 = specialinvoke v0.<java.util.ArrayList: boolean addAll(int,java.util.Collection)>(v1, v2);
if v3 == 0 goto label1;
v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled> = 1;
return 1;
label1:
return 0;
}
private static void checkNullElements(java.util.Collection)
{
java.util.Iterator v7;
java.util.Collection v0;
java.lang.IllegalArgumentException v10, v6;
int v3, v4;
java.lang.Object v5, v9;
boolean v1, v2, v8;
v0 := @parameter0: java.util.Collection;
v1 = v0 instanceof java.util.RandomAccess;
if v1 == 0 goto label3;
v2 = v0 instanceof java.util.List;
if v2 == 0 goto label3;
v3 = interfaceinvoke v0.<java.util.List: int size()>();
v4 = 0;
label1:
if v4 >= v3 goto label5;
v5 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(v4);
if v5 != null goto label2;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("c contains null values");
throw v6;
label2:
v4 = v4 + 1;
goto label1;
label3:
v7 = interfaceinvoke v0.<java.util.Collection: java.util.Iterator iterator()>();
label4:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label5;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
if v9 != null goto label4;
v10 = new java.lang.IllegalArgumentException;
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("c contains null values");
throw v10;
label5:
return;
}
public boolean add(java.lang.Object)
{
io.netty.util.internal.RecyclableArrayList v0;
java.lang.Object v1, v2;
boolean v3;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "element");
v3 = specialinvoke v0.<java.util.ArrayList: boolean add(java.lang.Object)>(v2);
if v3 == 0 goto label1;
v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled> = 1;
return 1;
label1:
return 0;
}
public void add(int, java.lang.Object)
{
io.netty.util.internal.RecyclableArrayList v0;
int v1;
java.lang.Object v2, v3;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "element");
specialinvoke v0.<java.util.ArrayList: void add(int,java.lang.Object)>(v1, v3);
v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled> = 1;
return;
}
public java.lang.Object set(int, java.lang.Object)
{
io.netty.util.internal.RecyclableArrayList v0;
int v1;
java.lang.Object v2, v3, v4;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "element");
v4 = specialinvoke v0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(v1, v3);
v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled> = 1;
return v4;
}
public boolean insertSinceRecycled()
{
io.netty.util.internal.RecyclableArrayList v0;
boolean v1;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
v1 = v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled>;
return v1;
}
public boolean recycle()
{
io.netty.util.internal.RecyclableArrayList v0;
io.netty.util.internal.ObjectPool$Handle v1;
v0 := @this: io.netty.util.internal.RecyclableArrayList;
virtualinvoke v0.<io.netty.util.internal.RecyclableArrayList: void clear()>();
v0.<io.netty.util.internal.RecyclableArrayList: boolean insertSinceRecycled> = 0;
v1 = v0.<io.netty.util.internal.RecyclableArrayList: io.netty.util.internal.ObjectPool$Handle handle>;
interfaceinvoke v1.<io.netty.util.internal.ObjectPool$Handle: void recycle(java.lang.Object)>(v0);
return 1;
}
static void <clinit>()
{
io.netty.util.internal.RecyclableArrayList$1 v0;
io.netty.util.internal.ObjectPool v1;
v0 = new io.netty.util.internal.RecyclableArrayList$1;
specialinvoke v0.<io.netty.util.internal.RecyclableArrayList$1: void <init>()>();
v1 = staticinvoke <io.netty.util.internal.ObjectPool: io.netty.util.internal.ObjectPool newPool(io.netty.util.internal.ObjectPool$ObjectCreator)>(v0);
<io.netty.util.internal.RecyclableArrayList: io.netty.util.internal.ObjectPool RECYCLER> = v1;
return;
}
}