public final class io.netty.util.internal.ThrowableUtil extends java.lang.Object
{
private void <init>()
{
io.netty.util.internal.ThrowableUtil v0;
v0 := @this: io.netty.util.internal.ThrowableUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Throwable unknownStackTrace(java.lang.Throwable, java.lang.Class, java.lang.String)
{
java.lang.Throwable v0;
java.lang.StackTraceElement[] v3;
int v6;
java.lang.Class v1;
java.lang.StackTraceElement v4;
java.lang.String v2, v5;
v0 := @parameter0: java.lang.Throwable;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.lang.String;
v3 = newarray (java.lang.StackTraceElement)[1];
v4 = new java.lang.StackTraceElement;
v5 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v6 = (int) -1;
specialinvoke v4.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>(v5, v2, null, v6);
v3[0] = v4;
virtualinvoke v0.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(v3);
return v0;
}
public static java.lang.String stackTraceToString(java.lang.Throwable)
{
java.io.PrintStream v2;
java.lang.Throwable v0, v5;
byte[] v4;
java.io.ByteArrayOutputStream v1;
java.lang.String v3;
v0 := @parameter0: java.lang.Throwable;
v1 = new java.io.ByteArrayOutputStream;
specialinvoke v1.<java.io.ByteArrayOutputStream: void <init>()>();
v2 = new java.io.PrintStream;
specialinvoke v2.<java.io.PrintStream: void <init>(java.io.OutputStream)>(v1);
virtualinvoke v0.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(v2);
virtualinvoke v2.<java.io.PrintStream: void flush()>();
label1:
v3 = new java.lang.String;
v4 = virtualinvoke v1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
specialinvoke v3.<java.lang.String: void <init>(byte[])>(v4);
label2:
return v3;
label3:
v5 := @caughtexception;
throw v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public static boolean haveSuppressed()
{
int v0;
boolean v1;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v0 < 7 goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
public static void addSuppressed(java.lang.Throwable, java.lang.Throwable)
{
java.lang.Throwable v0, v1;
boolean v2;
v0 := @parameter0: java.lang.Throwable;
v1 := @parameter1: java.lang.Throwable;
v2 = staticinvoke <io.netty.util.internal.ThrowableUtil: boolean haveSuppressed()>();
if v2 != 0 goto label1;
return;
label1:
virtualinvoke v0.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(v1);
return;
}
public static void addSuppressedAndClear(java.lang.Throwable, java.util.List)
{
java.lang.Throwable v0;
java.util.List v1;
v0 := @parameter0: java.lang.Throwable;
v1 := @parameter1: java.util.List;
staticinvoke <io.netty.util.internal.ThrowableUtil: void addSuppressed(java.lang.Throwable,java.util.List)>(v0, v1);
interfaceinvoke v1.<java.util.List: void clear()>();
return;
}
public static void addSuppressed(java.lang.Throwable, java.util.List)
{
java.lang.Throwable v0;
java.util.List v1;
java.util.Iterator v2;
java.lang.Object v4;
boolean v3;
v0 := @parameter0: java.lang.Throwable;
v1 := @parameter1: java.util.List;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <io.netty.util.internal.ThrowableUtil: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>(v0, v4);
goto label1;
label2:
return;
}
public static java.lang.Throwable[] getSuppressed(java.lang.Throwable)
{
java.lang.Throwable v0;
java.lang.Throwable[] v2, v3;
boolean v1;
v0 := @parameter0: java.lang.Throwable;
v1 = staticinvoke <io.netty.util.internal.ThrowableUtil: boolean haveSuppressed()>();
if v1 != 0 goto label1;
v2 = <io.netty.util.internal.EmptyArrays: java.lang.Throwable[] EMPTY_THROWABLES>;
return v2;
label1:
v3 = virtualinvoke v0.<java.lang.Throwable: java.lang.Throwable[] getSuppressed()>();
return v3;
}
}