abstract class io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef extends io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0
{
static final long P_NODE_OFFSET;
private volatile io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode producerNode;
void <init>()
{
io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef;
specialinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0: void <init>()>();
return;
}
final void spProducerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)
{
sun.misc.Unsafe v2;
io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef v0;
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v1;
long v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode;
v2 = <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef: long P_NODE_OFFSET>;
virtualinvoke v2.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>(v0, v3, v1);
return;
}
final void soProducerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)
{
sun.misc.Unsafe v2;
io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef v0;
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v1;
long v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode;
v2 = <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef: long P_NODE_OFFSET>;
virtualinvoke v2.<sun.misc.Unsafe: void putOrderedObject(java.lang.Object,long,java.lang.Object)>(v0, v3, v1);
return;
}
final io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lvProducerNode()
{
io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef v0;
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v1;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef;
v1 = v0.<io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode producerNode>;
return v1;
}
final boolean casProducerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode, io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)
{
sun.misc.Unsafe v3;
io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef v0;
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v1, v2;
long v4;
boolean v5;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode;
v2 := @parameter1: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode;
v3 = <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE>;
v4 = <io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef: long P_NODE_OFFSET>;
v5 = virtualinvoke v3.<sun.misc.Unsafe: boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object)>(v0, v4, v1, v2);
return v5;
}
final io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lpProducerNode()
{
io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef v0;
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v1;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef;
v1 = v0.<io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode producerNode>;
return v1;
}
static void <clinit>()
{
long v0;
v0 = staticinvoke <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: long fieldOffset(java.lang.Class,java.lang.String)>(class "Lio/netty/util/internal/shaded/org/jctools/queues/BaseLinkedQueueProducerNodeRef;", "producerNode");
<io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef: long P_NODE_OFFSET> = v0;
return;
}
}