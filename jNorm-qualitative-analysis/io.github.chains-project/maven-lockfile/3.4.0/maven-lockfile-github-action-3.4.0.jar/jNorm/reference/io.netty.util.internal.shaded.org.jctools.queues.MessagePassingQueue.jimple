public interface  io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue extends java.lang.Object
{
public static final int UNBOUNDED_CAPACITY;
public abstract boolean offer(java.lang.Object);
public abstract java.lang.Object poll();
public abstract java.lang.Object peek();
public abstract int size();
public abstract void clear();
public abstract boolean isEmpty();
public abstract int capacity();
public abstract boolean relaxedOffer(java.lang.Object);
public abstract java.lang.Object relaxedPoll();
public abstract java.lang.Object relaxedPeek();
public abstract int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int);
public abstract int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier, int);
public abstract int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer);
public abstract int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier);
public abstract void drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition);
public abstract void fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition);
}