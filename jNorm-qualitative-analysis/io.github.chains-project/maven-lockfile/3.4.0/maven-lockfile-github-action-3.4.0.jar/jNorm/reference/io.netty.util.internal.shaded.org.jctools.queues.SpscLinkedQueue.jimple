public class io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue extends io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue
{
public void <init>()
{
io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v1;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue;
specialinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue: void <init>()>();
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode newNode()>();
virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: void spProducerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v1);
virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: void spConsumerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v1);
virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode: void soNext(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(null);
return;
}
public boolean offer(java.lang.Object)
{
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v3, v4;
io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue v0;
java.lang.Object v1;
java.lang.NullPointerException v2;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue;
v1 := @parameter0: java.lang.Object;
if null != v1 goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
v3 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode newNode(java.lang.Object)>(v1);
v4 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lpProducerNode()>();
virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: void soProducerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v3);
virtualinvoke v4.<io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode: void soNext(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v3);
return 1;
}
public int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier)
{
int v2;
io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier v1;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier;
v2 = staticinvoke <io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil: int fillUnbounded(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier)>(v0, v1);
return v2;
}
public int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier, int)
{
io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode v11, v12, v7, v8;
io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue v0;
java.lang.IllegalArgumentException v3, v4;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier v1;
int v2, v9;
java.lang.Object v10, v6;
java.lang.String v5;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier;
v2 := @parameter1: int;
if null != v1 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("supplier is null");
throw v3;
label1:
if v2 >= 0 goto label2;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("limit is negative:\u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label2:
if v2 != 0 goto label3;
return 0;
label3:
v6 = interfaceinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier: java.lang.Object get()>();
v7 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode newNode(java.lang.Object)>(v6);
v8 = v7;
v9 = 1;
label4:
if v9 >= v2 goto label5;
v10 = interfaceinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier: java.lang.Object get()>();
v11 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode newNode(java.lang.Object)>(v10);
virtualinvoke v7.<io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode: void spNext(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v11);
v7 = v11;
v9 = v9 + 1;
goto label4;
label5:
v12 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lpProducerNode()>();
virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue: void soProducerNode(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v7);
virtualinvoke v12.<io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode: void soNext(io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode)>(v8);
return v2;
}
public void fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition)
{
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition v3;
io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy v2;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier v1;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier;
v2 := @parameter1: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy;
v3 := @parameter2: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition;
staticinvoke <io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil: void fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition)>(v0, v1, v2, v3);
return;
}
}