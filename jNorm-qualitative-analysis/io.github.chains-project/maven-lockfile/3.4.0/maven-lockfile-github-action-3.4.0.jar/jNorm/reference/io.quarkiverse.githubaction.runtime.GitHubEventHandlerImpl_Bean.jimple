public class io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean extends java.lang.Object implements io.quarkus.arc.InjectableBean, java.util.function.Supplier
{
private final java.util.Set types;
private final java.util.function.Supplier injectProviderSupplier1;
public void <init>()
{
java.lang.Object[] v20;
jakarta.enterprise.inject.literal.InjectLiteral v14;
java.util.HashSet v13, v3;
io.quarkus.arc.impl.EventProvider v18;
java.lang.Thread v1, v6, v9;
int v17;
jakarta.enterprise.inject.Default$Literal v4;
io.quarkus.arc.impl.FixedValueSupplier v19;
java.util.Set v23;
java.lang.reflect.Field v15;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
io.quarkus.arc.impl.InjectionPointImpl v16;
java.lang.reflect.Type[] v5;
java.lang.Class v11, v21, v22, v8;
java.lang.ClassLoader v10, v2, v7;
io.quarkus.arc.impl.ParameterizedTypeImpl v12;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = virtualinvoke v1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v3 = new java.util.HashSet;
specialinvoke v3.<java.util.HashSet: void <init>()>();
v4 = <jakarta.enterprise.inject.Default$Literal: jakarta.enterprise.inject.Default$Literal INSTANCE>;
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>(v4);
v5 = newarray (java.lang.reflect.Type)[1];
v6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v7 = virtualinvoke v6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkiverse.githubaction.runtime.GitHubEvent", 0, v7);
v5[0] = v8;
v9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v10 = virtualinvoke v9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("jakarta.enterprise.event.Event", 0, v10);
v12 = new io.quarkus.arc.impl.ParameterizedTypeImpl;
specialinvoke v12.<io.quarkus.arc.impl.ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type[])>(v11, v5);
v13 = new java.util.HashSet;
specialinvoke v13.<java.util.HashSet: void <init>()>();
v14 = <jakarta.enterprise.inject.literal.InjectLiteral: jakarta.enterprise.inject.literal.InjectLiteral INSTANCE>;
interfaceinvoke v13.<java.util.Set: boolean add(java.lang.Object)>(v14);
v15 = staticinvoke <io.quarkus.arc.impl.Reflections: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>(class "Lio/quarkiverse/githubaction/runtime/GitHubEventHandlerImpl;", "eventEmitter");
v16 = new io.quarkus.arc.impl.InjectionPointImpl;
v17 = (int) -1;
specialinvoke v16.<io.quarkus.arc.impl.InjectionPointImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.InjectableBean,java.util.Set,java.lang.reflect.Member,int,boolean)>(v12, v12, v3, v0, v13, v15, v17, 0);
v18 = new io.quarkus.arc.impl.EventProvider;
specialinvoke v18.<io.quarkus.arc.impl.EventProvider: void <init>(java.lang.reflect.Type,java.util.Set,jakarta.enterprise.inject.spi.InjectionPoint)>(v12, v3, v16);
v19 = new io.quarkus.arc.impl.FixedValueSupplier;
specialinvoke v19.<io.quarkus.arc.impl.FixedValueSupplier: void <init>(java.lang.Object)>(v18);
v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: java.util.function.Supplier injectProviderSupplier1> = v19;
v20 = newarray (java.lang.Object)[3];
v21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkiverse.githubaction.runtime.GitHubEventHandler", 0, v2);
v20[0] = v21;
v22 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl", 0, v2);
v20[1] = v22;
v20[2] = class "Ljava/lang/Object;";
v23 = staticinvoke <io.quarkus.arc.impl.Sets: java.util.Set of(java.lang.Object[])>(v20);
v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: java.util.Set types> = v23;
return;
}
public java.lang.String getIdentifier()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
return "319f6786720ce8ba2aefc94673e8f70f090acd47";
}
public java.lang.Object get()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
return v0;
}
private io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl doCreate(jakarta.enterprise.context.spi.CreationalContext)
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl v2;
jakarta.enterprise.context.spi.CreationalContext v1;
java.lang.RuntimeException v7, v8;
java.util.function.Supplier v3;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
io.quarkus.arc.impl.CreationalContextImpl v5;
java.lang.Object v4, v6;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = new io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl;
specialinvoke v2.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl: void <init>()>();
label1:
v3 = v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: java.util.function.Supplier injectProviderSupplier1>;
v4 = interfaceinvoke v3.<java.util.function.Supplier: java.lang.Object get()>();
v5 = staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl child(io.quarkus.arc.InjectableReferenceProvider,jakarta.enterprise.context.spi.CreationalContext)>(v4, v1);
v6 = interfaceinvoke v4.<io.quarkus.arc.InjectableReferenceProvider: java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)>(v5);
v2.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl: jakarta.enterprise.event.Event eventEmitter> = v6;
label2:
goto label4;
label3:
v7 := @caughtexception;
v8 = new java.lang.RuntimeException;
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error injecting jakarta.enterprise.event.Event<io.quarkiverse.githubaction.runtime.GitHubEvent> io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl.eventEmitter", v7);
throw v8;
label4:
return v2;
catch java.lang.RuntimeException from label1 to label2 with label3;
}
public io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl create(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.spi.CreationalContext v1;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl v2;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = specialinvoke v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl doCreate(jakarta.enterprise.context.spi.CreationalContext)>(v1);
return v2;
}
public volatile java.lang.Object create(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.spi.CreationalContext v1;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl v2;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = virtualinvoke v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl create(jakarta.enterprise.context.spi.CreationalContext)>(v1);
return v2;
}
public io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl get(jakarta.enterprise.context.spi.CreationalContext)
{
io.quarkus.arc.ArcContainer v2;
io.quarkus.arc.InjectableContext v4;
io.quarkus.arc.impl.CreationalContextImpl v3;
java.lang.Object v5;
jakarta.enterprise.context.spi.CreationalContext v1;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = new io.quarkus.arc.impl.CreationalContextImpl;
specialinvoke v3.<io.quarkus.arc.impl.CreationalContextImpl: void <init>(jakarta.enterprise.context.spi.Contextual)>(v0);
v4 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InjectableContext getActiveContext(java.lang.Class)>(class "Ljakarta/inject/Singleton;");
v5 = interfaceinvoke v4.<jakarta.enterprise.context.spi.Context: java.lang.Object get(jakarta.enterprise.context.spi.Contextual,jakarta.enterprise.context.spi.CreationalContext)>(v0, v3);
return v5;
}
public volatile java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.spi.CreationalContext v1;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl v2;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = virtualinvoke v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl get(jakarta.enterprise.context.spi.CreationalContext)>(v1);
return v2;
}
public java.util.Set getTypes()
{
java.util.Set v1;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 = v0.<io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean: java.util.Set types>;
return v1;
}
public java.lang.Class getScope()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
return class "Ljakarta/inject/Singleton;";
}
public java.lang.Class getBeanClass()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
return class "Lio/quarkiverse/githubaction/runtime/GitHubEventHandlerImpl;";
}
public boolean isSuppressed()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
return 0;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
java.lang.String v3, v4;
boolean v2, v5;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof io.quarkus.arc.InjectableBean;
if v2 != 0 goto label3;
return 0;
label3:
v3 = interfaceinvoke v1.<io.quarkus.arc.InjectableBean: java.lang.String getIdentifier()>();
v4 = "319f6786720ce8ba2aefc94673e8f70f090acd47";
v5 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
return v5;
}
public int hashCode()
{
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
return -1854927130;
}
public java.lang.String toString()
{
java.lang.String v1;
io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean v0;
v0 := @this: io.quarkiverse.githubaction.runtime.GitHubEventHandlerImpl_Bean;
v1 = staticinvoke <io.quarkus.arc.impl.Beans: java.lang.String toString(io.quarkus.arc.InjectableBean)>(v0);
return v1;
}
}