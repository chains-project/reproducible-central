abstract class io.quarkus.arc.impl.AbstractInvocationContext extends java.lang.Object implements io.quarkus.arc.ArcInvocationContext
{
private static final java.lang.Object[] EMPTY_PARAMS;
protected java.lang.Object target;
protected java.lang.Object[] parameters;
protected io.quarkus.arc.impl.ContextDataMap contextData;
protected void <init>(java.lang.Object, java.lang.Object[], io.quarkus.arc.impl.ContextDataMap)
{
io.quarkus.arc.impl.AbstractInvocationContext v0;
io.quarkus.arc.impl.ContextDataMap v3;
java.lang.Object[] v2, v4;
java.lang.Object v1;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 := @parameter2: io.quarkus.arc.impl.ContextDataMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.AbstractInvocationContext: java.lang.Object target> = v1;
if v2 == null goto label1;
v4 = v2;
goto label2;
label1:
v4 = <io.quarkus.arc.impl.AbstractInvocationContext: java.lang.Object[] EMPTY_PARAMS>;
label2:
v0.<io.quarkus.arc.impl.AbstractInvocationContext: java.lang.Object[] parameters> = v4;
v0.<io.quarkus.arc.impl.AbstractInvocationContext: io.quarkus.arc.impl.ContextDataMap contextData> = v3;
return;
}
public java.util.Map getContextData()
{
io.quarkus.arc.impl.AbstractInvocationContext v0;
io.quarkus.arc.impl.ContextDataMap v1;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
v1 = v0.<io.quarkus.arc.impl.AbstractInvocationContext: io.quarkus.arc.impl.ContextDataMap contextData>;
return v1;
}
public java.lang.'annotation'.Annotation findIterceptorBinding(java.lang.Class)
{
java.util.Iterator v3;
java.util.Set v2;
io.quarkus.arc.impl.AbstractInvocationContext v0;
java.lang.Class v1, v6;
java.lang.Object v5;
boolean v4, v7;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<io.quarkus.arc.impl.AbstractInvocationContext: java.util.Set getInterceptorBindings()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v7 = virtualinvoke v6.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
if v7 == 0 goto label1;
return v5;
label2:
return null;
}
public java.util.List findIterceptorBindings(java.lang.Class)
{
java.util.Iterator v4;
java.util.Set v3;
java.util.ArrayList v2;
io.quarkus.arc.impl.AbstractInvocationContext v0;
java.lang.Class v1, v7;
java.lang.Object v6;
boolean v5, v8;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
v1 := @parameter0: java.lang.Class;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = virtualinvoke v0.<io.quarkus.arc.impl.AbstractInvocationContext: java.util.Set getInterceptorBindings()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v8 = virtualinvoke v7.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
if v8 == 0 goto label1;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label1;
label2:
return v2;
}
static void validateParameters(java.lang.reflect.Executable, java.lang.Object[])
{
java.lang.Object[] v1;
int v10, v11, v3, v5;
java.lang.reflect.Executable v0;
java.lang.String v17, v29, v7, v8, v9;
boolean v13, v24;
java.lang.Class[] v4;
java.lang.IllegalArgumentException v15, v25, v6;
java.lang.Class v12, v16, v19, v20, v22, v23, v27, v28;
java.lang.Object v14, v18, v2, v21, v26;
v0 := @parameter0: java.lang.reflect.Executable;
v1 := @parameter1: java.lang.Object[];
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v3 = lengthof v2;
v4 = virtualinvoke v0.<java.lang.reflect.Executable: java.lang.Class[] getParameterTypes()>();
v5 = lengthof v4;
if v5 == v3 goto label1;
v6 = new java.lang.IllegalArgumentException;
v7 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v4);
v8 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v1);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Wrong number of parameters - method has \u0001, attempting to set \u0001");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v6;
label1:
v10 = 0;
label2:
v11 = lengthof v1;
if v10 >= v11 goto label5;
v12 = v4[v10];
v13 = virtualinvoke v12.<java.lang.Class: boolean isPrimitive()>();
if v13 == 0 goto label3;
v14 = v1[v10];
if v14 != null goto label3;
v15 = new java.lang.IllegalArgumentException;
v16 = v4[v10];
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.Class)>(v10, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to set a null value to a primitive parameter [position: \u0001, type: \u0001]");
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v15;
label3:
v18 = v1[v10];
if v18 == null goto label4;
v19 = v4[v10];
v20 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class boxedClass(java.lang.Class)>(v19);
v21 = v1[v10];
v22 = virtualinvoke v21.<java.lang.Object: java.lang.Class getClass()>();
v23 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class boxedClass(java.lang.Class)>(v22);
v24 = virtualinvoke v20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v23);
if v24 != 0 goto label4;
v25 = new java.lang.IllegalArgumentException;
v26 = v1[v10];
v27 = virtualinvoke v26.<java.lang.Object: java.lang.Class getClass()>();
v28 = v4[v10];
v29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class,java.lang.Class)>(v27, v28) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The parameter type [\u0001] can not be assigned to the type for the target method [\u0001]");
specialinvoke v25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v29);
throw v25;
label4:
v10 = v10 + 1;
goto label2;
label5:
return;
}
public java.lang.reflect.Method getMethod()
{
io.quarkus.arc.impl.AbstractInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
return null;
}
public java.lang.Object getTarget()
{
io.quarkus.arc.impl.AbstractInvocationContext v0;
java.lang.Object v1;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
v1 = v0.<io.quarkus.arc.impl.AbstractInvocationContext: java.lang.Object target>;
return v1;
}
public java.lang.Object getTimer()
{
io.quarkus.arc.impl.AbstractInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
return null;
}
public java.lang.reflect.Constructor getConstructor()
{
io.quarkus.arc.impl.AbstractInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.AbstractInvocationContext;
return null;
}
static void <clinit>()
{
java.lang.Object[] v0;
v0 = newarray (java.lang.Object)[0];
<io.quarkus.arc.impl.AbstractInvocationContext: java.lang.Object[] EMPTY_PARAMS> = v0;
return;
}
}