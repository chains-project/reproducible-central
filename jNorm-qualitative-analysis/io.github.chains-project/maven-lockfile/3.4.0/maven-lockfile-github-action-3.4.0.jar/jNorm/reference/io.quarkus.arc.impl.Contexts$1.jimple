class io.quarkus.arc.impl.Contexts$1 extends java.lang.ClassValue
{
final int val$mapSize;
final java.lang.Class[] val$keys;
final java.util.List[] val$values;
final io.quarkus.arc.impl.Contexts this$0;
void <init>(io.quarkus.arc.impl.Contexts, int, java.lang.Class[], java.util.List[])
{
java.util.List[] v4;
int v2;
io.quarkus.arc.impl.Contexts v1;
java.lang.Class[] v3;
io.quarkus.arc.impl.Contexts$1 v0;
v0 := @this: io.quarkus.arc.impl.Contexts$1;
v1 := @parameter0: io.quarkus.arc.impl.Contexts;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Class[];
v4 := @parameter3: java.util.List[];
v0.<io.quarkus.arc.impl.Contexts$1: io.quarkus.arc.impl.Contexts this$0> = v1;
v0.<io.quarkus.arc.impl.Contexts$1: int val$mapSize> = v2;
v0.<io.quarkus.arc.impl.Contexts$1: java.lang.Class[] val$keys> = v3;
v0.<io.quarkus.arc.impl.Contexts$1: java.util.List[] val$values> = v4;
specialinvoke v0.<java.lang.ClassValue: void <init>()>();
return;
}
protected java.util.List computeValue(java.lang.Class)
{
java.util.List[] v7;
java.lang.Class[] v4;
java.util.List v8, v9;
int v2, v3;
java.lang.Class v1, v5;
boolean v6;
io.quarkus.arc.impl.Contexts$1 v0;
v0 := @this: io.quarkus.arc.impl.Contexts$1;
v1 := @parameter0: java.lang.Class;
v2 = 0;
label1:
v3 = v0.<io.quarkus.arc.impl.Contexts$1: int val$mapSize>;
if v2 >= v3 goto label3;
v4 = v0.<io.quarkus.arc.impl.Contexts$1: java.lang.Class[] val$keys>;
v5 = v4[v2];
v6 = virtualinvoke v5.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
if v6 == 0 goto label2;
v7 = v0.<io.quarkus.arc.impl.Contexts$1: java.util.List[] val$values>;
v8 = v7[v2];
return v8;
label2:
v2 = v2 + 1;
goto label1;
label3:
v9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v9;
}
}