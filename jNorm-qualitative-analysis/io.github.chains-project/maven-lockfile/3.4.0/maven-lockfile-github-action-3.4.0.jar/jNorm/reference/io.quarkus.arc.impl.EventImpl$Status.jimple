abstract enum class io.quarkus.arc.impl.EventImpl$Status extends java.lang.Enum
{
public static final enum io.quarkus.arc.impl.EventImpl$Status ALL;
public static final enum io.quarkus.arc.impl.EventImpl$Status SUCCESS;
public static final enum io.quarkus.arc.impl.EventImpl$Status FAILURE;
private static final io.quarkus.arc.impl.EventImpl$Status[] $VALUES;
public static io.quarkus.arc.impl.EventImpl$Status[] values()
{
io.quarkus.arc.impl.EventImpl$Status[] v0;
java.lang.Object v1;
v0 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.quarkus.arc.impl.EventImpl$Status valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/quarkus/arc/impl/EventImpl$Status;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
io.quarkus.arc.impl.EventImpl$Status v0;
java.lang.String v1;
v0 := @this: io.quarkus.arc.impl.EventImpl$Status;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public abstract boolean matches(int);
public static io.quarkus.arc.impl.EventImpl$Status valueOf(jakarta.enterprise.event.TransactionPhase)
{
java.lang.IllegalArgumentException v8;
io.quarkus.arc.impl.EventImpl$Status v3, v5, v7;
java.lang.String v9;
jakarta.enterprise.event.TransactionPhase v0, v1, v2, v4, v6;
v0 := @parameter0: jakarta.enterprise.event.TransactionPhase;
v1 = <jakarta.enterprise.event.TransactionPhase: jakarta.enterprise.event.TransactionPhase BEFORE_COMPLETION>;
if v0 == v1 goto label1;
v2 = <jakarta.enterprise.event.TransactionPhase: jakarta.enterprise.event.TransactionPhase AFTER_COMPLETION>;
if v0 != v2 goto label2;
label1:
v3 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status ALL>;
return v3;
label2:
v4 = <jakarta.enterprise.event.TransactionPhase: jakarta.enterprise.event.TransactionPhase AFTER_SUCCESS>;
if v0 != v4 goto label3;
v5 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status SUCCESS>;
return v5;
label3:
v6 = <jakarta.enterprise.event.TransactionPhase: jakarta.enterprise.event.TransactionPhase AFTER_FAILURE>;
if v0 != v6 goto label4;
v7 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status FAILURE>;
return v7;
label4:
v8 = new java.lang.IllegalArgumentException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (jakarta.enterprise.event.TransactionPhase)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown transaction phase \u0001");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v8;
}
private static io.quarkus.arc.impl.EventImpl$Status[] $values()
{
io.quarkus.arc.impl.EventImpl$Status[] v0;
io.quarkus.arc.impl.EventImpl$Status v1, v2, v3;
v0 = newarray (io.quarkus.arc.impl.EventImpl$Status)[3];
v1 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status ALL>;
v0[0] = v1;
v2 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status SUCCESS>;
v0[1] = v2;
v3 = <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status FAILURE>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
io.quarkus.arc.impl.EventImpl$Status$3 v2;
io.quarkus.arc.impl.EventImpl$Status$2 v1;
io.quarkus.arc.impl.EventImpl$Status[] v3;
io.quarkus.arc.impl.EventImpl$Status$1 v0;
v0 = new io.quarkus.arc.impl.EventImpl$Status$1;
specialinvoke v0.<io.quarkus.arc.impl.EventImpl$Status$1: void <init>(java.lang.String,int)>("ALL", 0);
<io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status ALL> = v0;
v1 = new io.quarkus.arc.impl.EventImpl$Status$2;
specialinvoke v1.<io.quarkus.arc.impl.EventImpl$Status$2: void <init>(java.lang.String,int)>("SUCCESS", 1);
<io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status SUCCESS> = v1;
v2 = new io.quarkus.arc.impl.EventImpl$Status$3;
specialinvoke v2.<io.quarkus.arc.impl.EventImpl$Status$3: void <init>(java.lang.String,int)>("FAILURE", 2);
<io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status FAILURE> = v2;
v3 = staticinvoke <io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status[] $values()>();
<io.quarkus.arc.impl.EventImpl$Status: io.quarkus.arc.impl.EventImpl$Status[] $VALUES> = v3;
return;
}
}