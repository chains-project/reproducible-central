class io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl extends io.quarkus.arc.impl.InjectionPointImpl$AnnotatedBase implements jakarta.enterprise.inject.spi.AnnotatedMethod
{
private final java.lang.reflect.Method method;
void <init>(java.lang.reflect.Method)
{
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl v0;
java.lang.reflect.Method v1;
java.lang.reflect.Type v2;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl;
v1 := @parameter0: java.lang.reflect.Method;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
specialinvoke v0.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedBase: void <init>(java.lang.reflect.Type,java.util.Set)>(v2, null);
v0.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl: java.lang.reflect.Method method> = v1;
return;
}
public java.util.List getParameters()
{
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean isStatic()
{
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl v0;
int v2;
java.lang.reflect.Method v1;
boolean v3;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl: java.lang.reflect.Method method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v2);
return v3;
}
public jakarta.enterprise.inject.spi.AnnotatedType getDeclaringType()
{
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl v0;
java.lang.Class v3;
java.lang.reflect.Method v2;
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedTypeImpl v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl;
v1 = new io.quarkus.arc.impl.InjectionPointImpl$AnnotatedTypeImpl;
v2 = v0.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl: java.lang.reflect.Method method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
specialinvoke v1.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedTypeImpl: void <init>(java.lang.Class)>(v3);
return v1;
}
public java.lang.reflect.Method getJavaMember()
{
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl v0;
java.lang.reflect.Method v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedMethodImpl: java.lang.reflect.Method method>;
return v1;
}
}