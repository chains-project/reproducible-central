public class io.quarkus.arc.impl.InjectionPointProvider extends java.lang.Object implements io.quarkus.arc.InjectableReferenceProvider
{
private static final java.lang.ThreadLocal CURRENT;
public void <init>()
{
io.quarkus.arc.impl.InjectionPointProvider v0;
v0 := @this: io.quarkus.arc.impl.InjectionPointProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public jakarta.enterprise.inject.spi.InjectionPoint get(jakarta.enterprise.context.spi.CreationalContext)
{
java.lang.ThreadLocal v2;
java.lang.Object v3;
io.quarkus.arc.impl.InjectionPointProvider v0;
jakarta.enterprise.context.spi.CreationalContext v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointProvider;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = <io.quarkus.arc.impl.InjectionPointProvider: java.lang.ThreadLocal CURRENT>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
return v3;
}
static jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)
{
java.lang.ThreadLocal v1, v4, v5;
jakarta.enterprise.inject.spi.InjectionPoint v0;
java.lang.Object v2;
boolean v3;
v0 := @parameter0: jakarta.enterprise.inject.spi.InjectionPoint;
if v0 == null goto label2;
v1 = <io.quarkus.arc.impl.InjectionPointProvider: java.lang.ThreadLocal CURRENT>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
v3 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v3 == 0 goto label1;
return v0;
label1:
v4 = <io.quarkus.arc.impl.InjectionPointProvider: java.lang.ThreadLocal CURRENT>;
virtualinvoke v4.<java.lang.ThreadLocal: void set(java.lang.Object)>(v0);
return v2;
label2:
v5 = <io.quarkus.arc.impl.InjectionPointProvider: java.lang.ThreadLocal CURRENT>;
virtualinvoke v5.<java.lang.ThreadLocal: void remove()>();
return null;
}
public static jakarta.enterprise.inject.spi.InjectionPoint get()
{
java.lang.Object v1;
java.lang.ThreadLocal v0;
v0 = <io.quarkus.arc.impl.InjectionPointProvider: java.lang.ThreadLocal CURRENT>;
v1 = virtualinvoke v0.<java.lang.ThreadLocal: java.lang.Object get()>();
return v1;
}
static void <clinit>()
{
java.lang.ThreadLocal v0;
v0 = new java.lang.ThreadLocal;
specialinvoke v0.<java.lang.ThreadLocal: void <init>()>();
<io.quarkus.arc.impl.InjectionPointProvider: java.lang.ThreadLocal CURRENT> = v0;
return;
}
}