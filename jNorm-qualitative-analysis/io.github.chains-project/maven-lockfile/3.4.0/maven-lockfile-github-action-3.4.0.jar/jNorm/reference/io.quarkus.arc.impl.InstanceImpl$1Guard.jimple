class io.quarkus.arc.impl.InstanceImpl$1Guard extends java.lang.Object implements io.quarkus.arc.InjectableInstance
{
private final io.quarkus.arc.InjectableInstance delegate;
void <init>(io.quarkus.arc.InjectableInstance)
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 := @parameter0: io.quarkus.arc.InjectableInstance;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate> = v1;
return;
}
public io.quarkus.arc.InstanceHandle getHandle()
{
io.quarkus.arc.InstanceHandle v2;
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: io.quarkus.arc.InstanceHandle getHandle()>();
return v2;
}
public java.lang.Iterable handles()
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
java.lang.Iterable v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: java.lang.Iterable handles()>();
return v2;
}
public transient io.quarkus.arc.InjectableInstance select(java.lang.'annotation'.Annotation[])
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
java.lang.'annotation'.Annotation[] v1;
io.quarkus.arc.InjectableInstance v2, v3, v4;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v3 = interfaceinvoke v2.<io.quarkus.arc.InjectableInstance: io.quarkus.arc.InjectableInstance select(java.lang.'annotation'.Annotation[])>(v1);
v4 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance wrap(java.lang.reflect.Type,io.quarkus.arc.InjectableInstance)>(null, v3);
return v4;
}
public transient io.quarkus.arc.InjectableInstance select(java.lang.Class, java.lang.'annotation'.Annotation[])
{
java.lang.Class v1;
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
java.lang.'annotation'.Annotation[] v2;
io.quarkus.arc.InjectableInstance v3, v4, v5;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v4 = interfaceinvoke v3.<io.quarkus.arc.InjectableInstance: io.quarkus.arc.InjectableInstance select(java.lang.Class,java.lang.'annotation'.Annotation[])>(v1, v2);
v5 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance wrap(java.lang.reflect.Type,io.quarkus.arc.InjectableInstance)>(v1, v4);
return v5;
}
public transient io.quarkus.arc.InjectableInstance select(jakarta.enterprise.util.TypeLiteral, java.lang.'annotation'.Annotation[])
{
jakarta.enterprise.util.TypeLiteral v1;
java.lang.reflect.Type v3;
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
java.lang.'annotation'.Annotation[] v2;
io.quarkus.arc.InjectableInstance v4, v5, v6;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 := @parameter0: jakarta.enterprise.util.TypeLiteral;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = virtualinvoke v1.<jakarta.enterprise.util.TypeLiteral: java.lang.reflect.Type getType()>();
v4 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v5 = interfaceinvoke v4.<io.quarkus.arc.InjectableInstance: io.quarkus.arc.InjectableInstance select(jakarta.enterprise.util.TypeLiteral,java.lang.'annotation'.Annotation[])>(v1, v2);
v6 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance wrap(java.lang.reflect.Type,io.quarkus.arc.InjectableInstance)>(v3, v5);
return v6;
}
private io.quarkus.arc.InjectableInstance wrap(java.lang.reflect.Type, io.quarkus.arc.InjectableInstance)
{
java.lang.IllegalStateException v5;
java.lang.reflect.Type v1;
java.lang.Class v3;
io.quarkus.arc.impl.InstanceImpl$1Guard v0, v6;
io.quarkus.arc.InjectableInstance v2;
boolean v4;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: io.quarkus.arc.InjectableInstance;
v3 = class "Ljakarta/enterprise/inject/spi/InjectionPoint;";
v4 = virtualinvoke v3.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot obtain InjectionPoint metadata for non-@Dependent bean");
throw v5;
label1:
v6 = new io.quarkus.arc.impl.InstanceImpl$1Guard;
specialinvoke v6.<io.quarkus.arc.impl.InstanceImpl$1Guard: void <init>(io.quarkus.arc.InjectableInstance)>(v2);
return v6;
}
public void clearCache()
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: void clearCache()>();
return;
}
public java.util.Iterator iterator()
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
java.util.Iterator v2;
io.quarkus.arc.InjectableInstance v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: java.util.Iterator iterator()>();
return v2;
}
public boolean isUnsatisfied()
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
boolean v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: boolean isUnsatisfied()>();
return v2;
}
public boolean isAmbiguous()
{
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
boolean v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: boolean isAmbiguous()>();
return v2;
}
public void destroy(java.lang.Object)
{
java.lang.Object v1;
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
interfaceinvoke v2.<io.quarkus.arc.InjectableInstance: void destroy(java.lang.Object)>(v1);
return;
}
public java.lang.Object get()
{
java.lang.Object v2;
io.quarkus.arc.impl.InstanceImpl$1Guard v0;
io.quarkus.arc.InjectableInstance v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl$1Guard;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl$1Guard: io.quarkus.arc.InjectableInstance delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableInstance: java.lang.Object get()>();
return v2;
}
}