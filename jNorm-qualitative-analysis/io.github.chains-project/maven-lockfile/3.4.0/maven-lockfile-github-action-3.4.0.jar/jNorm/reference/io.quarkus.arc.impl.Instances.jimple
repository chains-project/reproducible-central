public final class io.quarkus.arc.impl.Instances extends java.lang.Object
{
static final java.lang.'annotation'.Annotation[] EMPTY_ANNOTATION_ARRAY;
static final java.util.Comparator PRIORITY_COMPARATOR;
private void <init>()
{
io.quarkus.arc.impl.Instances v0;
v0 := @this: io.quarkus.arc.impl.Instances;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.List resolveBeans(java.lang.reflect.Type, java.util.Set)
{
java.util.List v4;
java.lang.Object[] v3;
java.lang.reflect.Type v0;
java.util.Set v1;
java.lang.'annotation'.Annotation[] v2;
v0 := @parameter0: java.lang.reflect.Type;
v1 := @parameter1: java.util.Set;
v2 = <io.quarkus.arc.impl.Instances: java.lang.'annotation'.Annotation[] EMPTY_ANNOTATION_ARRAY>;
v3 = interfaceinvoke v1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v2);
v4 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List resolveBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v0, v3);
return v4;
}
public static transient java.util.List resolveBeans(java.lang.reflect.Type, java.lang.'annotation'.Annotation[])
{
java.util.Iterator v6;
java.util.Set v3;
java.lang.'annotation'.Annotation[] v1;
io.quarkus.arc.impl.ArcContainerImpl v2;
java.util.ArrayList v4;
java.util.List v11;
java.lang.reflect.Type v0;
int v5;
java.lang.Object v8;
java.util.Comparator v10;
boolean v7, v9;
v0 := @parameter0: java.lang.reflect.Type;
v1 := @parameter1: java.lang.'annotation'.Annotation[];
v2 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v3 = virtualinvoke v2.<io.quarkus.arc.impl.ArcContainerImpl: java.util.Set getResolvedBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v0, v1);
v4 = new java.util.ArrayList;
v5 = interfaceinvoke v3.<java.util.Set: int size()>();
specialinvoke v4.<java.util.ArrayList: void <init>(int)>(v5);
v6 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label2;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = interfaceinvoke v8.<io.quarkus.arc.InjectableBean: boolean isSuppressed()>();
if v9 != 0 goto label1;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v8);
goto label1;
label2:
v10 = <io.quarkus.arc.impl.Instances: java.util.Comparator PRIORITY_COMPARATOR>;
interfaceinvoke v4.<java.util.List: void sort(java.util.Comparator)>(v10);
v11 = staticinvoke <java.util.List: java.util.List copyOf(java.util.Collection)>(v4);
return v11;
}
private static java.util.List resolveAllBeans(java.lang.reflect.Type, java.util.Set)
{
java.lang.Object[] v7;
jakarta.enterprise.inject.Any$Literal v4;
java.util.Set v1;
java.lang.'annotation'.Annotation[] v3, v6;
java.util.List v5, v8;
java.lang.reflect.Type v0;
boolean v2;
v0 := @parameter0: java.lang.reflect.Type;
v1 := @parameter1: java.util.Set;
if v1 == null goto label1;
v2 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v2 == 0 goto label2;
label1:
v3 = newarray (java.lang.'annotation'.Annotation)[1];
v4 = <jakarta.enterprise.inject.Any$Literal: jakarta.enterprise.inject.Any$Literal INSTANCE>;
v3[0] = v4;
v5 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List resolveBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v0, v3);
return v5;
label2:
v6 = <io.quarkus.arc.impl.Instances: java.lang.'annotation'.Annotation[] EMPTY_ANNOTATION_ARRAY>;
v7 = interfaceinvoke v1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v6);
v8 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List resolveBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v0, v7);
return v8;
}
public static java.util.List listOf(io.quarkus.arc.InjectableBean, java.lang.reflect.Type, java.lang.reflect.Type, java.util.Set, jakarta.enterprise.context.spi.CreationalContext, java.util.Set, java.lang.reflect.Member, int, boolean)
{
java.lang.Throwable v21;
java.util.ArrayList v12;
int v13, v7;
io.quarkus.arc.impl.CreationalContextImpl v19;
boolean v10, v17, v8;
java.util.Iterator v16;
jakarta.enterprise.inject.spi.InjectionPoint v15;
java.lang.reflect.Member v6;
io.quarkus.arc.InjectableBean v0;
java.util.Set v3, v5;
jakarta.enterprise.context.spi.CreationalContext v4;
io.quarkus.arc.impl.InjectionPointImpl v14;
java.util.List v11, v22, v9;
java.lang.reflect.Type v1, v2;
java.lang.Object v18, v20;
v0 := @parameter0: io.quarkus.arc.InjectableBean;
v1 := @parameter1: java.lang.reflect.Type;
v2 := @parameter2: java.lang.reflect.Type;
v3 := @parameter3: java.util.Set;
v4 := @parameter4: jakarta.enterprise.context.spi.CreationalContext;
v5 := @parameter5: java.util.Set;
v6 := @parameter6: java.lang.reflect.Member;
v7 := @parameter7: int;
v8 := @parameter8: boolean;
v9 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List resolveAllBeans(java.lang.reflect.Type,java.util.Set)>(v2, v3);
v10 = interfaceinvoke v9.<java.util.List: boolean isEmpty()>();
if v10 == 0 goto label1;
v11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v11;
label1:
v12 = new java.util.ArrayList;
v13 = interfaceinvoke v9.<java.util.List: int size()>();
specialinvoke v12.<java.util.ArrayList: void <init>(int)>(v13);
v14 = new io.quarkus.arc.impl.InjectionPointImpl;
specialinvoke v14.<io.quarkus.arc.impl.InjectionPointImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.InjectableBean,java.util.Set,java.lang.reflect.Member,int,boolean)>(v1, v2, v3, v0, v5, v6, v7, v8);
v15 = staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v14);
label2:
v16 = interfaceinvoke v9.<java.util.List: java.util.Iterator iterator()>();
label3:
v17 = interfaceinvoke v16.<java.util.Iterator: boolean hasNext()>();
if v17 == 0 goto label4;
v18 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
v19 = staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl unwrap(jakarta.enterprise.context.spi.CreationalContext)>(v4);
v20 = staticinvoke <io.quarkus.arc.impl.Instances: java.lang.Object getBeanInstance(io.quarkus.arc.impl.CreationalContextImpl,io.quarkus.arc.InjectableBean)>(v19, v18);
interfaceinvoke v12.<java.util.List: boolean add(java.lang.Object)>(v20);
goto label3;
label4:
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v15);
goto label6;
label5:
v21 := @caughtexception;
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v15);
throw v21;
label6:
v22 = staticinvoke <java.util.List: java.util.List copyOf(java.util.Collection)>(v12);
return v22;
catch java.lang.Throwable from label2 to label4 with label5;
}
public static java.util.List listOfHandles(io.quarkus.arc.InjectableBean, java.lang.reflect.Type, java.lang.reflect.Type, java.util.Set, jakarta.enterprise.context.spi.CreationalContext, java.util.Set, java.lang.reflect.Member, int, boolean)
{
io.quarkus.arc.impl.Instances$2 v9;
java.lang.reflect.Member v6;
io.quarkus.arc.InjectableBean v0;
java.util.Set v3, v5;
jakarta.enterprise.context.spi.CreationalContext v4;
java.util.List v10;
java.lang.reflect.Type v1, v2;
int v7;
boolean v8;
v0 := @parameter0: io.quarkus.arc.InjectableBean;
v1 := @parameter1: java.lang.reflect.Type;
v2 := @parameter2: java.lang.reflect.Type;
v3 := @parameter3: java.util.Set;
v4 := @parameter4: jakarta.enterprise.context.spi.CreationalContext;
v5 := @parameter5: java.util.Set;
v6 := @parameter6: java.lang.reflect.Member;
v7 := @parameter7: int;
v8 := @parameter8: boolean;
v9 = new io.quarkus.arc.impl.Instances$2;
specialinvoke v9.<io.quarkus.arc.impl.Instances$2: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.InjectableBean,java.util.Set,java.lang.reflect.Member,int,boolean)>(v1, v2, v3, v0, v5, v6, v7, v8);
v10 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List listOfHandles(java.util.function.Supplier,java.lang.reflect.Type,java.util.Set,jakarta.enterprise.context.spi.CreationalContext)>(v9, v2, v3, v4);
return v10;
}
public static java.util.List listOfHandles(java.util.function.Supplier, java.lang.reflect.Type, java.util.Set, jakarta.enterprise.context.spi.CreationalContext)
{
java.util.Iterator v9;
java.util.Set v2;
jakarta.enterprise.context.spi.CreationalContext v3;
java.util.function.Supplier v0;
java.util.ArrayList v7;
io.quarkus.arc.InstanceHandle v13;
java.util.List v14, v4, v6;
java.lang.reflect.Type v1;
int v8;
io.quarkus.arc.impl.CreationalContextImpl v12;
java.lang.Object v11;
boolean v10, v5;
v0 := @parameter0: java.util.function.Supplier;
v1 := @parameter1: java.lang.reflect.Type;
v2 := @parameter2: java.util.Set;
v3 := @parameter3: jakarta.enterprise.context.spi.CreationalContext;
v4 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List resolveAllBeans(java.lang.reflect.Type,java.util.Set)>(v1, v2);
v5 = interfaceinvoke v4.<java.util.List: boolean isEmpty()>();
if v5 == 0 goto label1;
v6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v6;
label1:
v7 = new java.util.ArrayList;
v8 = interfaceinvoke v4.<java.util.List: int size()>();
specialinvoke v7.<java.util.ArrayList: void <init>(int)>(v8);
v9 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label2:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label3;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl unwrap(jakarta.enterprise.context.spi.CreationalContext)>(v3);
v13 = staticinvoke <io.quarkus.arc.impl.Instances: io.quarkus.arc.InstanceHandle getHandle(io.quarkus.arc.impl.CreationalContextImpl,io.quarkus.arc.InjectableBean,java.util.function.Supplier)>(v12, v11, v0);
interfaceinvoke v7.<java.util.List: boolean add(java.lang.Object)>(v13);
goto label2;
label3:
v14 = staticinvoke <java.util.List: java.util.List copyOf(java.util.Collection)>(v7);
return v14;
}
private static java.lang.Object getBeanInstance(io.quarkus.arc.impl.CreationalContextImpl, io.quarkus.arc.InjectableBean)
{
io.quarkus.arc.InjectableBean v1;
io.quarkus.arc.impl.CreationalContextImpl v0, v2;
java.lang.Class v4, v5;
java.lang.Object v3;
boolean v6;
v0 := @parameter0: io.quarkus.arc.impl.CreationalContextImpl;
v1 := @parameter1: io.quarkus.arc.InjectableBean;
v2 = virtualinvoke v0.<io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl child(jakarta.enterprise.context.spi.Contextual)>(v1);
v3 = interfaceinvoke v1.<io.quarkus.arc.InjectableBean: java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)>(v2);
v4 = class "Ljakarta/enterprise/context/Dependent;";
v5 = interfaceinvoke v1.<io.quarkus.arc.InjectableBean: java.lang.Class getScope()>();
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label1;
staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: void addDependencyToParent(io.quarkus.arc.InjectableBean,java.lang.Object,jakarta.enterprise.context.spi.CreationalContext)>(v1, v3, v2);
label1:
return v3;
}
private static io.quarkus.arc.InstanceHandle getHandle(io.quarkus.arc.impl.CreationalContextImpl, io.quarkus.arc.InjectableBean, java.util.function.Supplier)
{
io.quarkus.arc.impl.Instances$3 v5;
io.quarkus.arc.InjectableBean v1;
io.quarkus.arc.impl.CreationalContextImpl v0, v3;
java.util.function.Supplier v2;
io.quarkus.arc.impl.LazyInstanceHandle v4;
v0 := @parameter0: io.quarkus.arc.impl.CreationalContextImpl;
v1 := @parameter1: io.quarkus.arc.InjectableBean;
v2 := @parameter2: java.util.function.Supplier;
v3 = virtualinvoke v0.<io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl child(jakarta.enterprise.context.spi.Contextual)>(v1);
v4 = new io.quarkus.arc.impl.LazyInstanceHandle;
v5 = new io.quarkus.arc.impl.Instances$3;
specialinvoke v5.<io.quarkus.arc.impl.Instances$3: void <init>(java.util.function.Supplier,io.quarkus.arc.InjectableBean,io.quarkus.arc.impl.CreationalContextImpl)>(v2, v1, v3);
specialinvoke v4.<io.quarkus.arc.impl.LazyInstanceHandle: void <init>(io.quarkus.arc.InjectableBean,jakarta.enterprise.context.spi.CreationalContext,jakarta.enterprise.context.spi.CreationalContext,java.util.function.Supplier,java.util.function.Consumer)>(v1, v3, v0, v5, null);
return v4;
}
static void <clinit>()
{
java.lang.'annotation'.Annotation[] v0;
io.quarkus.arc.impl.Instances$1 v1;
v0 = newarray (java.lang.'annotation'.Annotation)[0];
<io.quarkus.arc.impl.Instances: java.lang.'annotation'.Annotation[] EMPTY_ANNOTATION_ARRAY> = v0;
v1 = new io.quarkus.arc.impl.Instances$1;
specialinvoke v1.<io.quarkus.arc.impl.Instances$1: void <init>()>();
<io.quarkus.arc.impl.Instances: java.util.Comparator PRIORITY_COMPARATOR> = v1;
return;
}
}