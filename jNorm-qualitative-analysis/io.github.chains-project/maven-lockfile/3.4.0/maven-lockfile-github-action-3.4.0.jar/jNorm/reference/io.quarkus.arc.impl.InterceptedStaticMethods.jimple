public final class io.quarkus.arc.impl.InterceptedStaticMethods extends java.lang.Object
{
private static final java.util.concurrent.ConcurrentMap METADATA;
private void <init>()
{
io.quarkus.arc.impl.InterceptedStaticMethods v0;
v0 := @this: io.quarkus.arc.impl.InterceptedStaticMethods;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void register(java.lang.String, io.quarkus.arc.impl.InterceptedMethodMetadata)
{
io.quarkus.arc.impl.InterceptedMethodMetadata v1;
java.lang.String v0;
java.util.concurrent.ConcurrentMap v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: io.quarkus.arc.impl.InterceptedMethodMetadata;
v2 = <io.quarkus.arc.impl.InterceptedStaticMethods: java.util.concurrent.ConcurrentMap METADATA>;
interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v0, v1);
return;
}
public static java.lang.Object aroundInvoke(java.lang.String, java.lang.Object[]) throws java.lang.Exception
{
java.lang.Object[] v1;
java.lang.Object v3, v6;
java.lang.String v0, v5;
java.lang.IllegalArgumentException v4;
java.util.concurrent.ConcurrentMap v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
v2 = <io.quarkus.arc.impl.InterceptedStaticMethods: java.util.concurrent.ConcurrentMap METADATA>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
if v3 != null goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Intercepted method metadata not found for key: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = staticinvoke <io.quarkus.arc.impl.InvocationContexts: java.lang.Object performAroundInvoke(java.lang.Object,java.lang.Object[],io.quarkus.arc.impl.InterceptedMethodMetadata)>(null, v1, v3);
return v6;
}
static void clear()
{
java.util.concurrent.ConcurrentMap v0;
v0 = <io.quarkus.arc.impl.InterceptedStaticMethods: java.util.concurrent.ConcurrentMap METADATA>;
interfaceinvoke v0.<java.util.concurrent.ConcurrentMap: void clear()>();
return;
}
static void <clinit>()
{
java.util.concurrent.ConcurrentHashMap v0;
v0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
<io.quarkus.arc.impl.InterceptedStaticMethods: java.util.concurrent.ConcurrentMap METADATA> = v0;
return;
}
}