public class io.quarkus.arc.runtime.InterceptedStaticMethodsRecorder extends java.lang.Object
{
public static final java.lang.String INITIALIZER_CLASS_NAME;
public void <init>()
{
io.quarkus.arc.runtime.InterceptedStaticMethodsRecorder v0;
v0 := @this: io.quarkus.arc.runtime.InterceptedStaticMethodsRecorder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void callInitializer()
{
java.lang.IllegalStateException v5;
io.quarkus.arc.runtime.InterceptedStaticMethodsRecorder v0;
java.lang.Thread v1;
java.lang.Class v3;
java.lang.ClassNotFoundException v4;
java.lang.ClassLoader v2;
v0 := @this: io.quarkus.arc.runtime.InterceptedStaticMethodsRecorder;
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = virtualinvoke v1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
if v2 != null goto label1;
v3 = class "Lio/quarkus/arc/runtime/InterceptedStaticMethodsRecorder;";
v2 = virtualinvoke v3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
label1:
staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.arc.runtime.InterceptedStaticMethodsInitializer", 1, v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v4);
throw v5;
label4:
return;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
}