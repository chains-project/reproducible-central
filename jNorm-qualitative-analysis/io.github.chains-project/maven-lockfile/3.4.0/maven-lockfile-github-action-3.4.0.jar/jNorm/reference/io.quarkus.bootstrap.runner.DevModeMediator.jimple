public class io.quarkus.bootstrap.runner.DevModeMediator extends java.lang.Object
{
protected static final org.jboss.logging.Logger LOGGER;
public static final java.util.Deque removedFiles;
public void <init>()
{
io.quarkus.bootstrap.runner.DevModeMediator v0;
v0 := @this: io.quarkus.bootstrap.runner.DevModeMediator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void doDevMode(java.nio.file.Path) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException
{
io.quarkus.bootstrap.runner.DevModeMediator$ChangeDetector v4;
java.io.Closeable v2;
java.util.Timer v3;
java.nio.file.Path v0, v1;
v0 := @parameter0: java.nio.file.Path;
v1 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>("lib/deployment/deployment-class-path.dat");
v2 = staticinvoke <io.quarkus.bootstrap.runner.DevModeMediator: java.io.Closeable doStart(java.nio.file.Path,java.nio.file.Path)>(v0, v1);
v3 = new java.util.Timer;
specialinvoke v3.<java.util.Timer: void <init>(java.lang.String,boolean)>("Classpath Change Timer", 0);
v4 = new io.quarkus.bootstrap.runner.DevModeMediator$ChangeDetector;
specialinvoke v4.<io.quarkus.bootstrap.runner.DevModeMediator$ChangeDetector: void <init>(java.nio.file.Path,java.nio.file.Path,java.io.Closeable)>(v0, v1, v2);
virtualinvoke v3.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>(v4, 1000L, 1000L);
return;
}
private static java.io.Closeable doStart(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException
{
java.lang.Throwable v17;
java.lang.Object[] v11, v15;
java.io.ObjectInputStream v2;
java.util.function.Function v8;
java.net.URLClassLoader v6;
java.nio.file.OpenOption[] v3;
java.lang.reflect.Method v14;
java.nio.file.Path v0, v1;
java.util.function.IntFunction v10;
java.lang.Class[] v13;
java.util.stream.Stream v7, v9;
java.lang.Class v12;
java.lang.Object v16, v5;
java.io.InputStream v4;
v0 := @parameter0: java.nio.file.Path;
v1 := @parameter1: java.nio.file.Path;
v2 = new java.io.ObjectInputStream;
v3 = newarray (java.nio.file.OpenOption)[0];
v4 = staticinvoke <java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>(v1, v3);
specialinvoke v2.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(v4);
label1:
v5 = virtualinvoke v2.<java.io.ObjectInputStream: java.lang.Object readObject()>();
v6 = new java.net.URLClassLoader;
v7 = interfaceinvoke v5.<java.util.List: java.util.stream.Stream stream()>();
v8 = staticinvoke <io.quarkus.bootstrap.runner.DevModeMediator$lambda_doStart_0__3305: java.util.function.Function bootstrap$(java.nio.file.Path)>(v0);
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v8);
v10 = staticinvoke <io.quarkus.bootstrap.runner.DevModeMediator$lambda_doStart_1__3306: java.util.function.IntFunction bootstrap$()>();
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(v10);
specialinvoke v6.<java.net.URLClassLoader: void <init>(java.net.URL[])>(v11);
v12 = virtualinvoke v6.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String)>("io.quarkus.deployment.mutability.DevModeTask");
v13 = newarray (java.lang.Class)[1];
v13[0] = class "Ljava/nio/file/Path;";
v14 = virtualinvoke v12.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("main", v13);
v15 = newarray (java.lang.Object)[1];
v15[0] = v0;
v16 = virtualinvoke v14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, v15);
label2:
virtualinvoke v2.<java.io.ObjectInputStream: void close()>();
goto label4;
label3:
v17 := @caughtexception;
throw v17;
label4:
return v16;
catch java.lang.Throwable from label1 to label2 with label3;
}
static void <clinit>()
{
java.util.concurrent.LinkedBlockingDeque v1;
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/bootstrap/runner/DevModeMediator;");
<io.quarkus.bootstrap.runner.DevModeMediator: org.jboss.logging.Logger LOGGER> = v0;
v1 = new java.util.concurrent.LinkedBlockingDeque;
specialinvoke v1.<java.util.concurrent.LinkedBlockingDeque: void <init>()>();
<io.quarkus.bootstrap.runner.DevModeMediator: java.util.Deque removedFiles> = v1;
return;
}
}