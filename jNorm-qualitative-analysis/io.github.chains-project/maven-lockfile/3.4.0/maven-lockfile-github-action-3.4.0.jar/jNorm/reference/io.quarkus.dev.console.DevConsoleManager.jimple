public class io.quarkus.dev.console.DevConsoleManager extends java.lang.Object
{
private static volatile java.util.function.Consumer handler;
private static volatile java.util.Map templateInfo;
private static volatile io.quarkus.dev.spi.HotReplacementContext hotReplacementContext;
private static volatile java.lang.Object quarkusBootstrap;
private static volatile boolean doingHttpInitiatedReload;
private static java.util.Map globals;
private static final java.util.Map actions;
public void <init>()
{
io.quarkus.dev.console.DevConsoleManager v0;
v0 := @this: io.quarkus.dev.console.DevConsoleManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void registerHandler(java.util.function.Consumer)
{
java.util.function.Consumer v0;
v0 := @parameter0: java.util.function.Consumer;
<io.quarkus.dev.console.DevConsoleManager: java.util.function.Consumer handler> = v0;
return;
}
public static void sentRequest(io.quarkus.dev.console.DevConsoleRequest)
{
java.util.function.Consumer v1;
byte[] v5;
io.quarkus.dev.console.DevConsoleResponse v3;
io.quarkus.dev.console.DevConsoleRequest v0;
java.util.Map v4;
java.util.concurrent.CompletableFuture v2;
v0 := @parameter0: io.quarkus.dev.console.DevConsoleRequest;
v1 = <io.quarkus.dev.console.DevConsoleManager: java.util.function.Consumer handler>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<io.quarkus.dev.console.DevConsoleRequest: java.util.concurrent.CompletableFuture getResponse()>();
v3 = new io.quarkus.dev.console.DevConsoleResponse;
v4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v5 = newarray (byte)[0];
specialinvoke v3.<io.quarkus.dev.console.DevConsoleResponse: void <init>(int,java.util.Map,byte[])>(503, v4, v5);
virtualinvoke v2.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(v3);
goto label2;
label1:
interfaceinvoke v1.<java.util.function.Consumer: void accept(java.lang.Object)>(v0);
label2:
return;
}
public static java.util.Map getTemplateInfo()
{
java.util.Map v0;
v0 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map templateInfo>;
return v0;
}
public static void setTemplateInfo(java.util.Map)
{
java.util.Map v0;
v0 := @parameter0: java.util.Map;
<io.quarkus.dev.console.DevConsoleManager: java.util.Map templateInfo> = v0;
return;
}
public static io.quarkus.dev.spi.HotReplacementContext getHotReplacementContext()
{
io.quarkus.dev.spi.HotReplacementContext v0;
v0 = <io.quarkus.dev.console.DevConsoleManager: io.quarkus.dev.spi.HotReplacementContext hotReplacementContext>;
return v0;
}
public static void setHotReplacementContext(io.quarkus.dev.spi.HotReplacementContext)
{
io.quarkus.dev.spi.HotReplacementContext v0;
v0 := @parameter0: io.quarkus.dev.spi.HotReplacementContext;
<io.quarkus.dev.console.DevConsoleManager: io.quarkus.dev.spi.HotReplacementContext hotReplacementContext> = v0;
return;
}
public static void setQuarkusBootstrap(java.lang.Object)
{
java.lang.Object v0;
v0 := @parameter0: java.lang.Object;
<io.quarkus.dev.console.DevConsoleManager: java.lang.Object quarkusBootstrap> = v0;
return;
}
public static java.lang.Object getQuarkusBootstrap()
{
java.lang.Object v0;
v0 = <io.quarkus.dev.console.DevConsoleManager: java.lang.Object quarkusBootstrap>;
return v0;
}
public static void setGlobal(java.lang.String, java.lang.Object)
{
java.lang.Object v1;
java.lang.String v0;
java.util.Map v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map globals>;
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v1);
return;
}
public static java.lang.Object getGlobal(java.lang.String)
{
java.lang.Object v2;
java.lang.String v0;
java.util.Map v1;
v0 := @parameter0: java.lang.String;
v1 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map globals>;
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
return v2;
}
public static boolean isDoingHttpInitiatedReload()
{
boolean v0;
v0 = <io.quarkus.dev.console.DevConsoleManager: boolean doingHttpInitiatedReload>;
return v0;
}
public static void setDoingHttpInitiatedReload(boolean)
{
boolean v0;
v0 := @parameter0: boolean;
<io.quarkus.dev.console.DevConsoleManager: boolean doingHttpInitiatedReload> = v0;
return;
}
public static void close()
{
java.util.Map v0, v1;
<io.quarkus.dev.console.DevConsoleManager: java.util.function.Consumer handler> = null;
<io.quarkus.dev.console.DevConsoleManager: java.util.Map templateInfo> = null;
<io.quarkus.dev.console.DevConsoleManager: io.quarkus.dev.spi.HotReplacementContext hotReplacementContext> = null;
<io.quarkus.dev.console.DevConsoleManager: java.lang.Object quarkusBootstrap> = null;
v0 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map actions>;
interfaceinvoke v0.<java.util.Map: void clear()>();
v1 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map globals>;
interfaceinvoke v1.<java.util.Map: void clear()>();
return;
}
public static void register(java.lang.String, java.util.function.Function)
{
java.lang.String v0;
java.util.function.Function v1;
java.util.Map v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.function.Function;
v2 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map actions>;
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v1);
return;
}
public static java.lang.Object invoke(java.lang.String, java.util.Map)
{
java.util.Map v1, v2;
java.lang.Object v3, v5;
java.lang.String v0;
java.util.NoSuchElementException v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.Map;
v2 = <io.quarkus.dev.console.DevConsoleManager: java.util.Map actions>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v3 != null goto label1;
v4 = new java.util.NoSuchElementException;
specialinvoke v4.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v0);
throw v4;
label1:
v5 = interfaceinvoke v3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
return v5;
}
static void <clinit>()
{
java.util.concurrent.ConcurrentHashMap v0;
java.util.HashMap v1;
v0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
<io.quarkus.dev.console.DevConsoleManager: java.util.Map globals> = v0;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
<io.quarkus.dev.console.DevConsoleManager: java.util.Map actions> = v1;
return;
}
}