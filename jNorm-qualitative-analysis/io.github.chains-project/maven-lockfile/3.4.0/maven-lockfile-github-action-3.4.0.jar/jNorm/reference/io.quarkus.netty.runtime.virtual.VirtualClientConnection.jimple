public class io.quarkus.netty.runtime.virtual.VirtualClientConnection extends java.lang.Object
{
protected final java.net.SocketAddress clientAddress;
protected boolean connected;
protected io.quarkus.netty.runtime.virtual.VirtualChannel peer;
protected final io.quarkus.netty.runtime.virtual.VirtualResponseHandler handler;
public void <init>(java.net.SocketAddress, io.quarkus.netty.runtime.virtual.VirtualResponseHandler)
{
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
java.net.SocketAddress v1;
io.quarkus.netty.runtime.virtual.VirtualResponseHandler v2;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: io.quarkus.netty.runtime.virtual.VirtualResponseHandler;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: boolean connected> = 1;
v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: java.net.SocketAddress clientAddress> = v1;
v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualResponseHandler handler> = v2;
return;
}
public java.net.SocketAddress clientAddress()
{
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
java.net.SocketAddress v1;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: java.net.SocketAddress clientAddress>;
return v1;
}
public io.quarkus.netty.runtime.virtual.VirtualChannel peer()
{
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
io.quarkus.netty.runtime.virtual.VirtualChannel v1;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualChannel peer>;
return v1;
}
public void close()
{
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
io.quarkus.netty.runtime.virtual.VirtualChannel v1;
io.quarkus.netty.runtime.virtual.VirtualResponseHandler v2;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: boolean connected> = 0;
v1 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualChannel peer>;
virtualinvoke v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: io.netty.channel.ChannelFuture close()>();
v2 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualResponseHandler handler>;
interfaceinvoke v2.<io.quarkus.netty.runtime.virtual.VirtualResponseHandler: void close()>();
return;
}
public boolean isConnected()
{
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
boolean v1;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: boolean connected>;
return v1;
}
public void sendMessage(java.lang.Object)
{
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
java.lang.Object v1;
io.quarkus.netty.runtime.virtual.VirtualChannel v2, v4;
java.util.Queue v3;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualChannel peer>;
v3 = v2.<io.quarkus.netty.runtime.virtual.VirtualChannel: java.util.Queue inboundBuffer>;
interfaceinvoke v3.<java.util.Queue: boolean add(java.lang.Object)>(v1);
v4 = v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualChannel peer>;
specialinvoke v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: void finishPeerRead0(io.quarkus.netty.runtime.virtual.VirtualChannel)>(v4);
return;
}
private void finishPeerRead0(io.quarkus.netty.runtime.virtual.VirtualChannel)
{
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v4;
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
io.quarkus.netty.runtime.virtual.VirtualChannel v1;
java.util.Queue v6;
io.netty.util.concurrent.Future v2;
boolean v3, v5, v7;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 := @parameter0: io.quarkus.netty.runtime.virtual.VirtualChannel;
v2 = v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: io.netty.util.concurrent.Future finishReadFuture>;
if v2 == null goto label2;
v3 = interfaceinvoke v2.<io.netty.util.concurrent.Future: boolean isDone()>();
if v3 != 0 goto label1;
specialinvoke v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: void runFinishPeerReadTask(io.quarkus.netty.runtime.virtual.VirtualChannel)>(v1);
return;
label1:
v4 = <io.quarkus.netty.runtime.virtual.VirtualChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater FINISH_READ_FUTURE_UPDATER>;
virtualinvoke v4.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v1, v2, null);
label2:
v5 = v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: boolean readInProgress>;
if v5 == 0 goto label3;
v6 = v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: java.util.Queue inboundBuffer>;
v7 = interfaceinvoke v6.<java.util.Queue: boolean isEmpty()>();
if v7 != 0 goto label3;
v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: boolean readInProgress> = 0;
virtualinvoke v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: void readInbound()>();
label3:
return;
}
private void runFinishPeerReadTask(io.quarkus.netty.runtime.virtual.VirtualChannel)
{
java.lang.Throwable v7;
io.quarkus.netty.runtime.virtual.VirtualClientConnection$1 v2;
io.netty.channel.EventLoop v4, v6;
io.quarkus.netty.runtime.virtual.VirtualClientConnection v0;
io.quarkus.netty.runtime.virtual.VirtualChannel v1;
io.netty.util.concurrent.Future v5;
boolean v3;
v0 := @this: io.quarkus.netty.runtime.virtual.VirtualClientConnection;
v1 := @parameter0: io.quarkus.netty.runtime.virtual.VirtualChannel;
v2 = new io.quarkus.netty.runtime.virtual.VirtualClientConnection$1;
specialinvoke v2.<io.quarkus.netty.runtime.virtual.VirtualClientConnection$1: void <init>(io.quarkus.netty.runtime.virtual.VirtualClientConnection,io.quarkus.netty.runtime.virtual.VirtualChannel)>(v0, v1);
label1:
v3 = v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: boolean writeInProgress>;
if v3 == 0 goto label2;
v4 = virtualinvoke v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: io.netty.channel.EventLoop eventLoop()>();
v5 = interfaceinvoke v4.<io.netty.channel.EventLoop: io.netty.util.concurrent.Future submit(java.lang.Runnable)>(v2);
v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: io.netty.util.concurrent.Future finishReadFuture> = v5;
goto label5;
label2:
v6 = virtualinvoke v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: io.netty.channel.EventLoop eventLoop()>();
interfaceinvoke v6.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v2);
label3:
goto label5;
label4:
v7 := @caughtexception;
virtualinvoke v0.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: void close()>();
virtualinvoke v1.<io.quarkus.netty.runtime.virtual.VirtualChannel: io.netty.channel.ChannelFuture close()>();
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v7);
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
public static io.quarkus.netty.runtime.virtual.VirtualClientConnection connect(io.quarkus.netty.runtime.virtual.VirtualResponseHandler, io.quarkus.netty.runtime.virtual.VirtualAddress)
{
io.quarkus.netty.runtime.virtual.VirtualAddress v1;
io.quarkus.netty.runtime.virtual.VirtualClientConnection v2;
io.quarkus.netty.runtime.virtual.VirtualResponseHandler v0;
v0 := @parameter0: io.quarkus.netty.runtime.virtual.VirtualResponseHandler;
v1 := @parameter1: io.quarkus.netty.runtime.virtual.VirtualAddress;
v2 = staticinvoke <io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualClientConnection connect(io.quarkus.netty.runtime.virtual.VirtualResponseHandler,io.quarkus.netty.runtime.virtual.VirtualAddress,java.net.SocketAddress)>(v0, v1, v1);
return v2;
}
public static io.quarkus.netty.runtime.virtual.VirtualClientConnection connect(io.quarkus.netty.runtime.virtual.VirtualResponseHandler, io.quarkus.netty.runtime.virtual.VirtualAddress, java.net.SocketAddress)
{
io.quarkus.netty.runtime.virtual.VirtualAddress v1;
java.net.SocketAddress v2;
io.quarkus.netty.runtime.virtual.VirtualResponseHandler v0;
java.lang.RuntimeException v4, v6;
io.netty.channel.Channel v3;
io.quarkus.netty.runtime.virtual.VirtualClientConnection v10;
java.lang.Class v7;
io.quarkus.netty.runtime.virtual.VirtualChannel v11;
java.lang.String v8, v9;
boolean v5;
v0 := @parameter0: io.quarkus.netty.runtime.virtual.VirtualResponseHandler;
v1 := @parameter1: io.quarkus.netty.runtime.virtual.VirtualAddress;
v2 := @parameter2: java.net.SocketAddress;
if v2 != null goto label1;
v2 = v1;
label1:
v3 = staticinvoke <io.quarkus.netty.runtime.virtual.VirtualChannelRegistry: io.netty.channel.Channel get(java.net.SocketAddress)>(v1);
if v3 != null goto label2;
v4 = new java.lang.RuntimeException;
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.String)>("No virtual channel available");
throw v4;
label2:
v5 = v3 instanceof io.quarkus.netty.runtime.virtual.VirtualServerChannel;
if v5 != 0 goto label3;
v6 = new java.lang.RuntimeException;
v7 = virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Should be virtual server channel: \u0001");
specialinvoke v6.<java.lang.RuntimeException: void <init>(java.lang.String)>(v9);
throw v6;
label3:
v10 = new io.quarkus.netty.runtime.virtual.VirtualClientConnection;
specialinvoke v10.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: void <init>(java.net.SocketAddress,io.quarkus.netty.runtime.virtual.VirtualResponseHandler)>(v2, v0);
v11 = virtualinvoke v3.<io.quarkus.netty.runtime.virtual.VirtualServerChannel: io.quarkus.netty.runtime.virtual.VirtualChannel serve(io.quarkus.netty.runtime.virtual.VirtualClientConnection)>(v10);
v10.<io.quarkus.netty.runtime.virtual.VirtualClientConnection: io.quarkus.netty.runtime.virtual.VirtualChannel peer> = v11;
return v10;
}
}