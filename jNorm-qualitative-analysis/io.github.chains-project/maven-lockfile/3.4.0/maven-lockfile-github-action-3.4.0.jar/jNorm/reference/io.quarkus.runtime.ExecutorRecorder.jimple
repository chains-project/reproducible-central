public class io.quarkus.runtime.ExecutorRecorder extends java.lang.Object
{
private static final org.jboss.logging.Logger log;
private static volatile java.util.concurrent.Executor current;
final io.quarkus.runtime.ThreadPoolConfig threadPoolConfig;
public void <init>(io.quarkus.runtime.ThreadPoolConfig)
{
io.quarkus.runtime.ExecutorRecorder v0;
io.quarkus.runtime.ThreadPoolConfig v1;
v0 := @this: io.quarkus.runtime.ExecutorRecorder;
v1 := @parameter0: io.quarkus.runtime.ThreadPoolConfig;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.runtime.ExecutorRecorder: io.quarkus.runtime.ThreadPoolConfig threadPoolConfig> = v1;
return;
}
public java.util.concurrent.ScheduledExecutorService setupRunTime(io.quarkus.runtime.ShutdownContext, io.quarkus.runtime.LaunchMode, java.util.concurrent.ThreadFactory, org.jboss.threads.ContextHandler)
{
org.jboss.threads.EnhancedQueueExecutor v6;
io.quarkus.runtime.ExecutorRecorder v0;
io.quarkus.runtime.ExecutorRecorder$1 v8;
io.quarkus.runtime.LaunchMode v2, v7;
java.lang.Runnable v10;
org.jboss.threads.ContextHandler v4;
java.util.concurrent.ThreadFactory v3;
io.quarkus.runtime.ShutdownContext v1;
io.quarkus.runtime.ThreadPoolConfig v11, v5, v9;
boolean v12;
v0 := @this: io.quarkus.runtime.ExecutorRecorder;
v1 := @parameter0: io.quarkus.runtime.ShutdownContext;
v2 := @parameter1: io.quarkus.runtime.LaunchMode;
v3 := @parameter2: java.util.concurrent.ThreadFactory;
v4 := @parameter3: org.jboss.threads.ContextHandler;
v5 = v0.<io.quarkus.runtime.ExecutorRecorder: io.quarkus.runtime.ThreadPoolConfig threadPoolConfig>;
v6 = staticinvoke <io.quarkus.runtime.ExecutorRecorder: org.jboss.threads.EnhancedQueueExecutor createExecutor(io.quarkus.runtime.ThreadPoolConfig,java.util.concurrent.ThreadFactory,org.jboss.threads.ContextHandler)>(v5, v3, v4);
v7 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode DEVELOPMENT>;
if v2 != v7 goto label1;
v8 = new io.quarkus.runtime.ExecutorRecorder$1;
specialinvoke v8.<io.quarkus.runtime.ExecutorRecorder$1: void <init>(io.quarkus.runtime.ExecutorRecorder,org.jboss.threads.EnhancedQueueExecutor)>(v0, v6);
interfaceinvoke v1.<io.quarkus.runtime.ShutdownContext: void addLastShutdownTask(java.lang.Runnable)>(v8);
goto label2;
label1:
v9 = v0.<io.quarkus.runtime.ExecutorRecorder: io.quarkus.runtime.ThreadPoolConfig threadPoolConfig>;
v10 = staticinvoke <io.quarkus.runtime.ExecutorRecorder: java.lang.Runnable createShutdownTask(io.quarkus.runtime.ThreadPoolConfig,org.jboss.threads.EnhancedQueueExecutor)>(v9, v6);
interfaceinvoke v1.<io.quarkus.runtime.ShutdownContext: void addLastShutdownTask(java.lang.Runnable)>(v10);
label2:
v11 = v0.<io.quarkus.runtime.ExecutorRecorder: io.quarkus.runtime.ThreadPoolConfig threadPoolConfig>;
v12 = v11.<io.quarkus.runtime.ThreadPoolConfig: boolean prefill>;
if v12 == 0 goto label3;
virtualinvoke v6.<org.jboss.threads.EnhancedQueueExecutor: int prestartAllCoreThreads()>();
label3:
<io.quarkus.runtime.ExecutorRecorder: java.util.concurrent.Executor current> = v6;
return v6;
}
private static java.lang.Runnable createShutdownTask(io.quarkus.runtime.ThreadPoolConfig, org.jboss.threads.EnhancedQueueExecutor)
{
org.jboss.threads.EnhancedQueueExecutor v1;
io.quarkus.runtime.ExecutorRecorder$2 v2;
io.quarkus.runtime.ThreadPoolConfig v0;
v0 := @parameter0: io.quarkus.runtime.ThreadPoolConfig;
v1 := @parameter1: org.jboss.threads.EnhancedQueueExecutor;
v2 = new io.quarkus.runtime.ExecutorRecorder$2;
specialinvoke v2.<io.quarkus.runtime.ExecutorRecorder$2: void <init>(org.jboss.threads.EnhancedQueueExecutor,io.quarkus.runtime.ThreadPoolConfig)>(v1, v0);
return v2;
}
private static org.jboss.threads.EnhancedQueueExecutor createExecutor(io.quarkus.runtime.ThreadPoolConfig, java.util.concurrent.ThreadFactory, org.jboss.threads.ContextHandler)
{
org.jboss.threads.EnhancedQueueExecutor v27;
java.lang.ThreadGroup v4;
java.util.OptionalInt v15, v19, v21, v23;
java.lang.Thread$UncaughtExceptionHandler v6;
java.time.Duration v26;
int v13, v14, v16, v17, v18, v22, v24;
java.lang.Boolean v5;
java.util.concurrent.ThreadFactory v1, v11;
io.quarkus.runtime.ThreadPoolConfig v0;
boolean v20;
org.jboss.threads.JBossThreadFactory v3;
java.util.concurrent.Executor v9;
org.jboss.threads.ContextHandler v2;
org.jboss.threads.EnhancedQueueExecutor$Builder v10, v12, v7, v8;
float v25;
v0 := @parameter0: io.quarkus.runtime.ThreadPoolConfig;
v1 := @parameter1: java.util.concurrent.ThreadFactory;
v2 := @parameter2: org.jboss.threads.ContextHandler;
if v1 != null goto label1;
v3 = new org.jboss.threads.JBossThreadFactory;
v4 = new java.lang.ThreadGroup;
specialinvoke v4.<java.lang.ThreadGroup: void <init>(java.lang.String)>("executor");
v5 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v6 = staticinvoke <org.jboss.threads.JBossExecutors: java.lang.Thread$UncaughtExceptionHandler loggingExceptionHandler(java.lang.String)>("org.jboss.executor.uncaught");
specialinvoke v3.<org.jboss.threads.JBossThreadFactory: void <init>(java.lang.ThreadGroup,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.Thread$UncaughtExceptionHandler,java.lang.Long)>(v4, v5, null, "executor-thread-%t", v6, null);
v1 = v3;
label1:
v7 = new org.jboss.threads.EnhancedQueueExecutor$Builder;
specialinvoke v7.<org.jboss.threads.EnhancedQueueExecutor$Builder: void <init>()>();
v8 = virtualinvoke v7.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setRegisterMBean(boolean)>(0);
v9 = staticinvoke <org.jboss.threads.JBossExecutors: java.util.concurrent.Executor rejectingExecutor()>();
v10 = virtualinvoke v8.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setHandoffExecutor(java.util.concurrent.Executor)>(v9);
v11 = staticinvoke <org.jboss.threads.JBossExecutors: java.util.concurrent.ThreadFactory resettingThreadFactory(java.util.concurrent.ThreadFactory)>(v1);
v12 = virtualinvoke v10.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setThreadFactory(java.util.concurrent.ThreadFactory)>(v11);
v13 = staticinvoke <org.wildfly.common.cpu.ProcessorInfo: int availableProcessors()>();
v14 = v0.<io.quarkus.runtime.ThreadPoolConfig: int coreThreads>;
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setCorePoolSize(int)>(v14);
v15 = v0.<io.quarkus.runtime.ThreadPoolConfig: java.util.OptionalInt maxThreads>;
v16 = 8 * v13;
v17 = staticinvoke <java.lang.Math: int max(int,int)>(v16, 200);
v18 = virtualinvoke v15.<java.util.OptionalInt: int orElse(int)>(v17);
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setMaximumPoolSize(int)>(v18);
v19 = v0.<io.quarkus.runtime.ThreadPoolConfig: java.util.OptionalInt queueSize>;
v20 = virtualinvoke v19.<java.util.OptionalInt: boolean isPresent()>();
if v20 == 0 goto label3;
v21 = v0.<io.quarkus.runtime.ThreadPoolConfig: java.util.OptionalInt queueSize>;
v22 = virtualinvoke v21.<java.util.OptionalInt: int getAsInt()>();
if v22 >= 0 goto label2;
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setMaximumQueueSize(int)>(2147483647);
goto label3;
label2:
v23 = v0.<io.quarkus.runtime.ThreadPoolConfig: java.util.OptionalInt queueSize>;
v24 = virtualinvoke v23.<java.util.OptionalInt: int getAsInt()>();
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setMaximumQueueSize(int)>(v24);
label3:
v25 = v0.<io.quarkus.runtime.ThreadPoolConfig: float growthResistance>;
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setGrowthResistance(float)>(v25);
v26 = v0.<io.quarkus.runtime.ThreadPoolConfig: java.time.Duration keepAliveTime>;
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setKeepAliveTime(java.time.Duration)>(v26);
if v2 == null goto label4;
virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor$Builder setContextHandler(org.jboss.threads.ContextHandler)>(v2);
label4:
v27 = virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor$Builder: org.jboss.threads.EnhancedQueueExecutor build()>();
return v27;
}
public static java.util.concurrent.Executor getCurrent()
{
java.util.concurrent.Executor v0;
v0 = <io.quarkus.runtime.ExecutorRecorder: java.util.concurrent.Executor current>;
return v0;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.String)>("io.quarkus.thread-pool");
<io.quarkus.runtime.ExecutorRecorder: org.jboss.logging.Logger log> = v0;
return;
}
}