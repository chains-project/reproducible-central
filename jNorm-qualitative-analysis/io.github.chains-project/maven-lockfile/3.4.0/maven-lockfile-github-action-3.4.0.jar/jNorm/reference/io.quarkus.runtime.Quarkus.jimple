public class io.quarkus.runtime.Quarkus extends java.lang.Object
{
private static java.io.Closeable LAUNCHED_FROM_IDE;
private static io.quarkus.runtime.Application manualApp;
private static final int MANUAL_BEGIN;
private static final int MANUAL_BEGIN_INITIALIZATION;
private static final int MANUAL_INITIALIZED;
private static final int MANUAL_STARTING;
private static final int MANUAL_STARTED;
private static final int MANUAL_FAILURE;
private static volatile int manualState;
private static final java.lang.Object manualLock;
public void <init>()
{
io.quarkus.runtime.Quarkus v0;
v0 := @this: io.quarkus.runtime.Quarkus;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static transient void run(java.lang.Class, java.lang.String[])
{
java.lang.Class v0;
java.lang.String[] v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String[];
staticinvoke <io.quarkus.runtime.Quarkus: void run(java.lang.Class,java.util.function.BiConsumer,java.lang.String[])>(v0, null, v1);
return;
}
public static transient void run(java.lang.Class, java.util.function.BiConsumer, java.lang.String[])
{
java.lang.Object[] v8;
org.jboss.logging.Logger v13;
java.lang.String[] v2;
java.lang.Integer v12, v15;
java.lang.reflect.Constructor v7;
java.lang.Thread v3;
java.util.function.BiConsumer v1, v14;
java.lang.Class[] v6;
java.lang.Exception v11;
java.lang.Class v0, v5;
java.lang.ClassNotFoundException v10;
java.lang.Object v9;
java.lang.ClassLoader v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.util.function.BiConsumer;
v2 := @parameter2: java.lang.String[];
label1:
staticinvoke <io.quarkus.runtime.logging.JBossVersion: void disableVersionLogging()>();
staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.util.logging.manager", "org.jboss.logmanager.LogManager");
staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.util.concurrent.ForkJoinPool.common.threadFactory", "io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory");
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v4 = virtualinvoke v3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.runner.ApplicationImpl", 0, v4);
v6 = newarray (java.lang.Class)[0];
v7 = virtualinvoke v5.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v6);
v8 = newarray (java.lang.Object)[0];
v9 = virtualinvoke v7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v8);
staticinvoke <io.quarkus.runtime.ApplicationLifecycleManager: void run(io.quarkus.runtime.Application,java.lang.Class,java.util.function.BiConsumer,java.lang.String[])>(v9, v0, v1, v2);
label2:
return;
label3:
v10 := @caughtexception;
goto label7;
label4:
v11 := @caughtexception;
if v1 == null goto label5;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke v1.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v12, v11);
goto label6;
label5:
v13 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/runtime/Quarkus;");
virtualinvoke v13.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Error running Quarkus", v11);
v14 = staticinvoke <io.quarkus.runtime.ApplicationLifecycleManager: java.util.function.BiConsumer getDefaultExitCodeHandler()>();
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke v14.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v15, v11);
label6:
return;
label7:
staticinvoke <io.quarkus.runtime.Quarkus: void launchFromIDE(java.lang.Class,java.lang.String[])>(v0, v2);
return;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.Exception from label1 to label2 with label4;
}
private static transient void launchFromIDE(java.lang.Class, java.lang.String[])
{
java.lang.String[] v1;
java.lang.StackTraceElement[] v3;
java.io.Closeable v13;
java.lang.Thread v2;
int v4;
java.lang.Class v0, v7;
java.lang.StackTraceElement v10, v5;
java.lang.String v11, v12, v6, v8;
boolean v9;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String[];
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();
v4 = 2;
label1:
v5 = v3[v4];
v6 = virtualinvoke v5.<java.lang.StackTraceElement: java.lang.String getClassName()>();
v7 = class "Lio/quarkus/runtime/Quarkus;";
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v9 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label2;
v4 = v4 + 1;
goto label1;
label2:
v10 = v3[v4];
v11 = virtualinvoke v10.<java.lang.StackTraceElement: java.lang.String getClassName()>();
if v0 != null goto label3;
v12 = null;
goto label4;
label3:
v12 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
label4:
v13 = staticinvoke <io.quarkus.launcher.QuarkusLauncher: java.io.Closeable launch(java.lang.String,java.lang.String,java.lang.String[])>(v11, v12, v1);
<io.quarkus.runtime.Quarkus: java.io.Closeable LAUNCHED_FROM_IDE> = v13;
return;
}
private static void terminateForIDE()
{
java.io.IOException v2;
java.io.Closeable v0, v1;
v0 = <io.quarkus.runtime.Quarkus: java.io.Closeable LAUNCHED_FROM_IDE>;
if v0 == null goto label4;
label1:
v1 = <io.quarkus.runtime.Quarkus: java.io.Closeable LAUNCHED_FROM_IDE>;
interfaceinvoke v1.<java.io.Closeable: void close()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
virtualinvoke v2.<java.io.IOException: void printStackTrace()>();
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public static transient void run(java.lang.String[])
{
java.lang.String[] v0;
v0 := @parameter0: java.lang.String[];
staticinvoke <io.quarkus.runtime.Quarkus: void run(java.lang.Class,java.lang.String[])>(null, v0);
return;
}
public static void asyncExit(int)
{
int v0;
v0 := @parameter0: int;
staticinvoke <io.quarkus.runtime.Quarkus: void terminateForIDE()>();
staticinvoke <io.quarkus.runtime.ApplicationLifecycleManager: void exit(int)>(v0);
return;
}
public static void asyncExit()
{
staticinvoke <io.quarkus.runtime.Quarkus: void terminateForIDE()>();
staticinvoke <io.quarkus.runtime.ApplicationLifecycleManager: void exit(int)>(-1);
return;
}
public static void waitForExit()
{
staticinvoke <io.quarkus.runtime.ApplicationLifecycleManager: void waitForExit()>();
return;
}
public static void blockingExit()
{
io.quarkus.runtime.Application v3;
java.lang.Thread v0;
org.jboss.logging.Logger v2;
boolean v1;
v0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v1 = staticinvoke <io.quarkus.runtime.Quarkus: boolean isMainThread(java.lang.Thread)>(v0);
if v1 == 0 goto label1;
v2 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/runtime/Quarkus;");
virtualinvoke v2.<org.jboss.logging.Logger: void error(java.lang.Object)>("\'Quarkus#blockingExit\' was called on the main thread. This will result in deadlocking the application!");
label1:
v3 = staticinvoke <io.quarkus.runtime.Application: io.quarkus.runtime.Application currentApplication()>();
staticinvoke <io.quarkus.runtime.Quarkus: void asyncExit()>();
if v3 == null goto label2;
virtualinvoke v3.<io.quarkus.runtime.Application: void awaitShutdown()>();
label2:
return;
}
public static boolean isMainThread(java.lang.Thread)
{
java.lang.ThreadGroup v1;
java.util.Locale v5;
java.lang.Thread v0;
java.lang.String v2, v4, v6;
boolean v3, v7, v8;
v0 := @parameter0: java.lang.Thread;
v1 = virtualinvoke v0.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();
v2 = virtualinvoke v1.<java.lang.ThreadGroup: java.lang.String getName()>();
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("main");
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<java.lang.Thread: java.lang.String getName()>();
v5 = <java.util.Locale: java.util.Locale ROOT>;
v6 = virtualinvoke v4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v5);
v7 = virtualinvoke v6.<java.lang.String: boolean contains(java.lang.CharSequence)>("main");
if v7 == 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
return v8;
}
public static void manualInitialize()
{
java.lang.Throwable v5;
java.lang.Object[] v9;
java.lang.Class[] v7;
java.lang.RuntimeException v1, v14, v4;
java.lang.reflect.Constructor v8;
java.lang.Exception v13;
int v0, v3;
java.lang.Class v6;
java.lang.Object v10, v2;
boolean v11, v12;
v0 = <io.quarkus.runtime.Quarkus: int manualState>;
if v0 != 7 goto label01;
v1 = new java.lang.RuntimeException;
specialinvoke v1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Quarkus manual bootstrap failed");
throw v1;
label01:
if v0 <= 0 goto label02;
return;
label02:
v2 = <io.quarkus.runtime.Quarkus: java.lang.Object manualLock>;
entermonitor v2;
label03:
v3 = <io.quarkus.runtime.Quarkus: int manualState>;
if v3 != 7 goto label04;
v4 = new java.lang.RuntimeException;
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Quarkus manual bootstrap failed");
throw v4;
label04:
if v3 <= 0 goto label06;
exitmonitor v2;
label05:
return;
label06:
<io.quarkus.runtime.Quarkus: int manualState> = 1;
exitmonitor v2;
label07:
goto label09;
label08:
v5 := @caughtexception;
exitmonitor v2;
throw v5;
label09:
v6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("io.quarkus.runner.ApplicationImpl");
v7 = newarray (java.lang.Class)[0];
v8 = virtualinvoke v6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v7);
v9 = newarray (java.lang.Object)[0];
v10 = virtualinvoke v8.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v9);
<io.quarkus.runtime.Quarkus: io.quarkus.runtime.Application manualApp> = v10;
<io.quarkus.runtime.Quarkus: int manualState> = 2;
v11 = <io.quarkus.runtime.SnapStartRecorder: boolean enabled>;
if v11 == 0 goto label12;
v12 = <io.quarkus.runtime.SnapStartRecorder: boolean fullWarmup>;
if v12 == 0 goto label12;
staticinvoke <io.quarkus.runtime.Quarkus: void manualStart()>();
label10:
goto label12;
label11:
v13 := @caughtexception;
<io.quarkus.runtime.Quarkus: int manualState> = 7;
v14 = new java.lang.RuntimeException;
specialinvoke v14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Quarkus manual initialization failed", v13);
throw v14;
label12:
return;
catch java.lang.Throwable from label03 to label05 with label08;
catch java.lang.Throwable from label06 to label07 with label08;
catch java.lang.Exception from label09 to label10 with label11;
}
public static void manualStart()
{
java.lang.Throwable v6;
java.lang.IllegalStateException v1, v5;
io.quarkus.runtime.Quarkus$1 v9;
io.quarkus.runtime.Application v10;
java.lang.Runtime v8;
java.lang.String[] v7;
java.lang.RuntimeException v11, v4;
int v0, v3;
java.lang.Object v2;
v0 = <io.quarkus.runtime.Quarkus: int manualState>;
if v0 != 7 goto label01;
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Quarkus failed to start up");
throw v1;
label01:
if v0 < 5 goto label02;
return;
label02:
v2 = <io.quarkus.runtime.Quarkus: java.lang.Object manualLock>;
entermonitor v2;
label03:
v3 = <io.quarkus.runtime.Quarkus: int manualState>;
if v3 != 7 goto label04;
v4 = new java.lang.RuntimeException;
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Quarkus manual bootstrap failed");
throw v4;
label04:
if v3 < 5 goto label06;
exitmonitor v2;
label05:
return;
label06:
if v3 == 2 goto label07;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Quarkus manual start cannot proceed as warmup did not run");
throw v5;
label07:
<io.quarkus.runtime.Quarkus: int manualState> = 5;
exitmonitor v2;
label08:
goto label10;
label09:
v6 := @caughtexception;
exitmonitor v2;
throw v6;
label10:
v7 = newarray (java.lang.String)[0];
v8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
v9 = new io.quarkus.runtime.Quarkus$1;
specialinvoke v9.<io.quarkus.runtime.Quarkus$1: void <init>()>();
virtualinvoke v8.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>(v9);
v10 = <io.quarkus.runtime.Quarkus: io.quarkus.runtime.Application manualApp>;
virtualinvoke v10.<io.quarkus.runtime.Application: void doStart(java.lang.String[])>(v7);
label11:
goto label13;
label12:
v11 := @caughtexception;
<io.quarkus.runtime.Quarkus: int manualState> = 7;
throw v11;
label13:
<io.quarkus.runtime.Quarkus: int manualState> = 6;
return;
catch java.lang.Throwable from label03 to label05 with label09;
catch java.lang.Throwable from label06 to label08 with label09;
catch java.lang.RuntimeException from label10 to label11 with label12;
}
static void <clinit>()
{
java.lang.Object v0;
<io.quarkus.runtime.Quarkus: int manualState> = 0;
v0 = new java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
<io.quarkus.runtime.Quarkus: java.lang.Object manualLock> = v0;
return;
}
}