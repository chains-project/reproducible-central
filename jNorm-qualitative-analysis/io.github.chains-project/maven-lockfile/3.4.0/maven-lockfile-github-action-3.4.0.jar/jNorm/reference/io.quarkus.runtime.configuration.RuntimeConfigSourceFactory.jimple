public class io.quarkus.runtime.configuration.RuntimeConfigSourceFactory extends java.lang.Object implements io.quarkus.runtime.configuration.ConfigSourceFactoryProvider
{
private final java.lang.String configSourceFactoryClassName;
public void <init>(java.lang.String)
{
io.quarkus.runtime.configuration.RuntimeConfigSourceFactory v0;
java.lang.String v1;
v0 := @this: io.quarkus.runtime.configuration.RuntimeConfigSourceFactory;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.runtime.configuration.RuntimeConfigSourceFactory: java.lang.String configSourceFactoryClassName> = v1;
return;
}
public io.smallrye.config.ConfigSourceFactory getConfigSourceFactory(java.lang.ClassLoader)
{
java.lang.Object[] v6;
java.lang.Class[] v4;
java.lang.ReflectiveOperationException v8;
java.lang.reflect.Constructor v5;
io.quarkus.runtime.configuration.ConfigurationException v9;
java.lang.Class v3;
java.lang.Object v7;
io.quarkus.runtime.configuration.RuntimeConfigSourceFactory v0;
java.lang.ClassLoader v1;
java.lang.String v2;
v0 := @this: io.quarkus.runtime.configuration.RuntimeConfigSourceFactory;
v1 := @parameter0: java.lang.ClassLoader;
label1:
v2 = v0.<io.quarkus.runtime.configuration.RuntimeConfigSourceFactory: java.lang.String configSourceFactoryClassName>;
v3 = virtualinvoke v1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(v2);
v4 = newarray (java.lang.Class)[0];
v5 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v4);
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v6);
label2:
return v7;
label3:
v8 := @caughtexception;
v9 = new io.quarkus.runtime.configuration.ConfigurationException;
specialinvoke v9.<io.quarkus.runtime.configuration.ConfigurationException: void <init>(java.lang.Throwable)>(v8);
throw v9;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.InstantiationException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
}
}