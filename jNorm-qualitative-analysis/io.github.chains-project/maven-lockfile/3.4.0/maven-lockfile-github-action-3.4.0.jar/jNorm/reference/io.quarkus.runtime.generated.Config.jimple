public final class io.quarkus.runtime.generated.Config extends java.lang.Object
{
static final java.util.Set 'unknown';
static final java.util.Set unknownRuntime;
public static volatile io.quarkus.runtime.generated.Config INSTANCE;
public static final org.eclipse.microprofile.config.spi.ConfigSource runTimeDefaultsConfigSource;
static final org.eclipse.microprofile.config.spi.Converter conv$0;
static final org.eclipse.microprofile.config.spi.Converter conv$3;
static final org.eclipse.microprofile.config.spi.Converter conv$2;
static final org.eclipse.microprofile.config.spi.Converter conv$1;
static final org.eclipse.microprofile.config.spi.Converter conv$4;
static final org.eclipse.microprofile.config.spi.Converter conv$5;
static final org.eclipse.microprofile.config.spi.Converter conv$7;
static final org.eclipse.microprofile.config.spi.Converter conv$6;
static final org.eclipse.microprofile.config.spi.Converter conv$8;
static final org.eclipse.microprofile.config.spi.Converter conv$9;
static final org.eclipse.microprofile.config.spi.Converter conv$10;
static final org.eclipse.microprofile.config.spi.Converter conv$11;
static final org.eclipse.microprofile.config.spi.Converter conv$13;
static final org.eclipse.microprofile.config.spi.Converter conv$12;
static final org.eclipse.microprofile.config.spi.Converter conv$14;
static final org.eclipse.microprofile.config.spi.Converter conv$15;
static final org.eclipse.microprofile.config.spi.Converter conv$16;
static final org.eclipse.microprofile.config.spi.Converter conv$17;
static final org.eclipse.microprofile.config.spi.Converter conv$18;
static final org.eclipse.microprofile.config.spi.Converter conv$19;
static final org.eclipse.microprofile.config.spi.Converter conv$21;
static final org.eclipse.microprofile.config.spi.Converter conv$20;
static final org.eclipse.microprofile.config.spi.Converter conv$23;
static final org.eclipse.microprofile.config.spi.Converter conv$22;
public static final io.quarkus.jackson.runtime.JacksonBuildTimeConfig JacksonBuildTimeConfig;
public static final io.quarkus.runtime.ApplicationConfig ApplicationConfig;
static final org.eclipse.microprofile.config.spi.Converter conv$24;
static final org.eclipse.microprofile.config.spi.Converter conv$25;
public static final io.quarkus.runtime.LiveReloadConfig LiveReloadConfig;
static final org.eclipse.microprofile.config.spi.Converter conv$27;
static final org.eclipse.microprofile.config.spi.Converter conv$26;
public static final io.quarkus.runtime.LocalesBuildTimeConfig LocalesBuildTimeConfig;
public static final io.quarkus.runtime.TlsConfig TlsConfig;
public static final io.quarkus.runtime.logging.LogBuildTimeConfig LogBuildTimeConfig;
public static volatile io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig GraphQLClientsConfig;
public static volatile io.quarkus.stork.StorkConfiguration StorkConfiguration;
static final org.eclipse.microprofile.config.spi.Converter conv$28;
static final org.eclipse.microprofile.config.spi.Converter conv$29;
public static volatile io.quarkus.vertx.core.runtime.config.VertxConfiguration VertxConfiguration;
public static volatile io.quarkus.runtime.BannerRuntimeConfig BannerRuntimeConfig;
public static volatile io.quarkus.runtime.CommandLineRuntimeConfig CommandLineRuntimeConfig;
static final org.eclipse.microprofile.config.spi.Converter conv$32;
static final org.eclipse.microprofile.config.spi.Converter conv$31;
static final org.eclipse.microprofile.config.spi.Converter conv$30;
public static volatile io.quarkus.runtime.ConfigConfig ConfigConfig;
public static volatile io.quarkus.runtime.DebugRuntimeConfig DebugRuntimeConfig;
public static volatile io.quarkus.runtime.ThreadPoolConfig ThreadPoolConfig;
static final org.eclipse.microprofile.config.spi.Converter conv$33;
public static volatile io.quarkus.runtime.configuration.ConfigurationRuntimeConfig ConfigurationRuntimeConfig;
public static volatile io.quarkus.runtime.console.ConsoleRuntimeConfig ConsoleRuntimeConfig;
public static volatile io.quarkus.runtime.init.InitRuntimeConfig InitRuntimeConfig;
public static volatile io.quarkus.runtime.logging.LogConfig LogConfig;
public static volatile io.quarkus.runtime.shutdown.ShutdownConfig ShutdownConfig;
private static void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void emptyParseKey(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static io.smallrye.config.KeyMap mappedProperties()
{
io.smallrye.config.KeyMap v0, v1, v11, v13, v15, v17, v19, v21, v23, v25, v27, v29, v3, v31, v33, v35, v37, v39, v41, v43, v45, v47, v49, v5, v51, v53, v55, v57, v59, v61, v63, v65, v67, v69, v7, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89, v9, v91;
java.lang.Boolean v10, v12, v14, v16, v18, v2, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v4, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v6, v60, v62, v64, v66, v68, v70, v72, v74, v76, v78, v8, v80, v82, v84, v86, v88, v90, v92;
v0 = new io.smallrye.config.KeyMap;
specialinvoke v0.<io.smallrye.config.KeyMap: void <init>()>();
v1 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.monitoring");
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v1.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v2);
v3 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.full-stack-traces");
v4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v3.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v4);
v5 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.report-exception-stack-traces");
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v5.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v6);
v7 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.resources.includes[*]");
v8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v7.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v8);
v9 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.compression.additional-args");
v10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v9.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v10);
v11 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-reports");
v12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v11.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v12);
v13 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.inline-before-analysis");
v14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v13.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v14);
v15 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.resources.excludes");
v16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v15.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v16);
v17 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.resources.includes");
v18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v17.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v18);
v19 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.add-all-charsets");
v20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v19.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v20);
v21 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.debug-build-process");
v22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v21.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v22);
v23 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.remote-container-build");
v24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v23.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v24);
v25 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-isolates");
v26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v25.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v26);
v27 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.container-build");
v28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v27.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v28);
v29 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.cleanup-server");
v30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v29.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v30);
v31 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.container-runtime-options[*]");
v32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v31.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v32);
v33 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-http-url-handler");
v34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v33.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v34);
v35 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.dump-proxies");
v36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v35.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v36);
v37 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.user-language");
v38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v37.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v38);
v39 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.monitoring[*]");
v40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v39.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v40);
v41 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.reuse-existing");
v42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v41.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v42);
v43 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.container-runtime-options");
v44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v43.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v44);
v45 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-server");
v46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v45.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v46);
v47 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.headless");
v48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v47.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v48);
v49 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.auto-service-loader-registration");
v50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v49.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v50);
v51 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-vm-inspection");
v52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v51.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v52);
v53 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.graalvm-home");
v54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v53.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v54);
v55 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-fallback-images");
v56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v55.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v56);
v57 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.resources.excludes[*]");
v58 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v57.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v58);
v59 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.java-home");
v60 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v59.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v60);
v61 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.file-encoding");
v62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v61.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v62);
v63 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.debug.enabled");
v64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v63.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v64);
v65 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.compression.additional-args[*]");
v66 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v65.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v66);
v67 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-https-url-handler");
v68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v67.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v68);
v69 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.additional-build-args");
v70 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v69.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v70);
v71 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.additional-build-args[*]");
v72 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v71.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v72);
v73 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.compression.level");
v74 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v73.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v74);
v75 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.user-country");
v76 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v75.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v76);
v77 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.publish-debug-build-process-port");
v78 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v77.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v78);
v79 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-dashboard-dump");
v80 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v79.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v80);
v81 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.container-runtime");
v82 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v81.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v82);
v83 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-all-security-services");
v84 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v83.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v84);
v85 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.enable-jni");
v86 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v85.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v86);
v87 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.builder-image");
v88 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v87.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v88);
v89 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.native-image-xmx");
v90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v89.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v90);
v91 = virtualinvoke v0.<io.smallrye.config.KeyMap: io.smallrye.config.KeyMap findOrAdd(java.lang.String)>("quarkus.native.report-errors-at-runtime");
v92 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke v91.<io.smallrye.config.KeyMap: java.lang.Object putRootValue(java.lang.Object)>(v92);
return v0;
}
private void <init>()
{
io.quarkus.runtime.generated.Config v0;
v0 := @this: io.quarkus.runtime.generated.Config;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
org.eclipse.microprofile.config.spi.Converter v12, v13, v15, v16, v18, v20, v21, v22, v24, v25, v29, v31, v32, v34, v36, v44, v46, v47, v50, v52, v53, v55, v57, v59, v60, v62, v64, v65;
java.lang.Thread v9;
io.smallrye.config.KeyMap v89;
io.quarkus.runtime.ApplicationConfig v73;
java.util.Set v85, v88, v90;
java.lang.StringBuilder v2;
io.quarkus.runtime.LocalesBuildTimeConfig v75;
java.lang.ClassLoader v10;
io.quarkus.runtime.logging.LogBuildTimeConfig v77;
java.util.ArrayList v7;
io.quarkus.runtime.TlsConfig v76;
java.util.function.IntFunction v14, v56, v63;
io.quarkus.runtime.configuration.NameIterator v83;
io.smallrye.config.SmallRyeConfigBuilder v5;
java.lang.IllegalStateException v70;
io.quarkus.runtime.generated.RunTimeDefaultValuesConfigSource v3;
io.quarkus.runtime.configuration.HyphenateEnumConverter v27, v38, v40, v42, v49, v67;
org.eclipse.microprofile.config.spi.ConfigProviderResolver v68;
boolean v81, v84, v86, v87;
org.eclipse.microprofile.config.Config v69;
io.quarkus.runtime.LiveReloadConfig v74;
io.quarkus.jackson.runtime.JacksonBuildTimeConfig v72;
io.quarkus.runtime.LaunchMode v4;
java.lang.Iterable v79;
java.util.HashSet v0, v1, v78;
int v71;
java.util.Iterator v80;
io.smallrye.config.SmallRyeConfig v8;
java.lang.Class v11, v17, v19, v23, v26, v28, v30, v33, v35, v37, v39, v41, v43, v45, v48, v51, v54, v58, v61, v66;
java.lang.Object v82;
io.quarkus.runtime.configuration.RuntimeConfigSourceFactory v6;
v0 = new java.util.HashSet;
specialinvoke v0.<java.util.HashSet: void <init>()>();
<io.quarkus.runtime.generated.Config: java.util.Set 'unknown'> = v0;
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>()>();
<io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime> = v1;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = new io.quarkus.runtime.generated.RunTimeDefaultValuesConfigSource;
specialinvoke v3.<io.quarkus.runtime.generated.RunTimeDefaultValuesConfigSource: void <init>()>();
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.ConfigSource runTimeDefaultsConfigSource> = v3;
v4 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode NORMAL>;
v5 = staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: io.smallrye.config.SmallRyeConfigBuilder configBuilder(boolean,boolean,io.quarkus.runtime.LaunchMode)>(1, 0, v4);
v6 = new io.quarkus.runtime.configuration.RuntimeConfigSourceFactory;
specialinvoke v6.<io.quarkus.runtime.configuration.RuntimeConfigSourceFactory: void <init>(java.lang.String)>("io.smallrye.config.PropertiesLocationConfigSourceFactory");
staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: void addSourceFactoryProvider(io.smallrye.config.SmallRyeConfigBuilder,io.quarkus.runtime.configuration.ConfigSourceFactoryProvider)>(v5, v6);
v7 = new java.util.ArrayList;
specialinvoke v7.<java.util.ArrayList: void <init>()>();
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>("io.quarkus.runtime.generated.BuildTimeRunTimeFixedConfigSourceBuilder");
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>("io.quarkus.runtime.generated.StaticInitMappingsConfigBuilder");
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>("io.quarkus.runtime.generated.RunTimeDefaultsConfigSourceBuilder");
staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: io.smallrye.config.SmallRyeConfigBuilder configBuilder(io.smallrye.config.SmallRyeConfigBuilder,java.util.List)>(v5, v7);
v8 = virtualinvoke v5.<io.smallrye.config.SmallRyeConfigBuilder: io.smallrye.config.SmallRyeConfig build()>();
v9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v10 = virtualinvoke v9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.runtime.logging.InheritableLevel", 0, v10);
v12 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v11);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$0> = v12;
v13 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(class "Ljava/lang/String;");
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3> = v13;
v14 = staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: java.util.function.IntFunction listFactory()>();
v15 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newCollectionConverter(org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)>(v13, v14);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$2> = v15;
v16 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v15);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1> = v16;
v17 = <java.lang.Boolean: java.lang.Class TYPE>;
v18 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v17);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4> = v18;
v19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.util.logging.Level", 0, v10);
v20 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v19);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5> = v20;
v21 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(class "Ljava/lang/Boolean;");
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$7> = v21;
v22 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v21);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$6> = v22;
v23 = <java.lang.Integer: java.lang.Class TYPE>;
v24 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v23);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8> = v24;
v25 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v13);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9> = v25;
v26 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.jboss.logmanager.handlers.AsyncHandler$OverflowAction", 0, v10);
v27 = new io.quarkus.runtime.configuration.HyphenateEnumConverter;
specialinvoke v27.<io.quarkus.runtime.configuration.HyphenateEnumConverter: void <init>(java.lang.Class)>(v26);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$10> = v27;
v28 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.io.File", 0, v10);
v29 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v28);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$11> = v29;
v30 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.nio.charset.Charset", 0, v10);
v31 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v30);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$13> = v31;
v32 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v31);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$12> = v32;
v33 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.runtime.configuration.MemorySize", 0, v10);
v34 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v33);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$14> = v34;
v35 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.net.InetSocketAddress", 0, v10);
v36 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v35);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$15> = v36;
v37 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.jboss.logmanager.handlers.SyslogHandler$Facility", 0, v10);
v38 = new io.quarkus.runtime.configuration.HyphenateEnumConverter;
specialinvoke v38.<io.quarkus.runtime.configuration.HyphenateEnumConverter: void <init>(java.lang.Class)>(v37);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$16> = v38;
v39 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.jboss.logmanager.handlers.SyslogHandler$SyslogType", 0, v10);
v40 = new io.quarkus.runtime.configuration.HyphenateEnumConverter;
specialinvoke v40.<io.quarkus.runtime.configuration.HyphenateEnumConverter: void <init>(java.lang.Class)>(v39);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$17> = v40;
v41 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.jboss.logmanager.handlers.SyslogHandler$Protocol", 0, v10);
v42 = new io.quarkus.runtime.configuration.HyphenateEnumConverter;
specialinvoke v42.<io.quarkus.runtime.configuration.HyphenateEnumConverter: void <init>(java.lang.Class)>(v41);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$18> = v42;
v43 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.util.OptionalInt", 0, v10);
v44 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v43);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19> = v44;
v45 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.time.ZoneId", 0, v10);
v46 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v45);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$21> = v46;
v47 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v46);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$20> = v47;
v48 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("com.fasterxml.jackson.annotation.JsonInclude$Include", 0, v10);
v49 = new io.quarkus.runtime.configuration.HyphenateEnumConverter;
specialinvoke v49.<io.quarkus.runtime.configuration.HyphenateEnumConverter: void <init>(java.lang.Class)>(v48);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$23> = v49;
v50 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v49);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$22> = v50;
v51 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.time.Duration", 0, v10);
v52 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v51);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24> = v52;
v53 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(class "Ljava/lang/Integer;");
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$25> = v53;
v54 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.util.Locale", 0, v10);
v55 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v54);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$27> = v55;
v56 = staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: java.util.function.IntFunction setFactory()>();
v57 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newCollectionConverter(org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)>(v55, v56);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$26> = v57;
v58 = <java.lang.Float: java.lang.Class TYPE>;
v59 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v58);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$28> = v59;
v60 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v52);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$29> = v60;
v61 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.net.URI", 0, v10);
v62 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v61);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$32> = v62;
v63 = staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: java.util.function.IntFunction listFactory()>();
v64 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newCollectionConverter(org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)>(v62, v63);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$31> = v64;
v65 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)>(v64);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$30> = v65;
v66 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.runtime.configuration.ConfigurationRuntimeConfig$BuildTimeMismatchAtRuntime", 0, v10);
v67 = new io.quarkus.runtime.configuration.HyphenateEnumConverter;
specialinvoke v67.<io.quarkus.runtime.configuration.HyphenateEnumConverter: void <init>(java.lang.Class)>(v66);
<io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$33> = v67;
staticinvoke <io.quarkus.runtime.configuration.QuarkusConfigFactory: void setConfig(io.smallrye.config.SmallRyeConfig)>(v8);
v68 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
label1:
v69 = virtualinvoke v68.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.Config getConfig()>();
virtualinvoke v68.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: void releaseConfig(org.eclipse.microprofile.config.Config)>(v69);
label2:
goto label4;
label3:
v70 := @caughtexception;
label4:
v71 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v72 = new io.quarkus.jackson.runtime.JacksonBuildTimeConfig;
specialinvoke v72.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.jackson.runtime.JacksonBuildTimeConfig JacksonBuildTimeConfig> = v72;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.jackson");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$jackson$runtime$JacksonBuildTimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v8, v2, v72);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v71);
v73 = new io.quarkus.runtime.ApplicationConfig;
specialinvoke v73.<io.quarkus.runtime.ApplicationConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.ApplicationConfig ApplicationConfig> = v73;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.application");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$ApplicationConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v8, v2, v73);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v71);
v74 = new io.quarkus.runtime.LiveReloadConfig;
specialinvoke v74.<io.quarkus.runtime.LiveReloadConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.LiveReloadConfig LiveReloadConfig> = v74;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.live-reload");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$LiveReloadConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v8, v2, v74);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v71);
v75 = new io.quarkus.runtime.LocalesBuildTimeConfig;
specialinvoke v75.<io.quarkus.runtime.LocalesBuildTimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.LocalesBuildTimeConfig LocalesBuildTimeConfig> = v75;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$LocalesBuildTimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v8, v2, v75);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v71);
v76 = new io.quarkus.runtime.TlsConfig;
specialinvoke v76.<io.quarkus.runtime.TlsConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.TlsConfig TlsConfig> = v76;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.tls");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$TlsConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v8, v2, v76);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v71);
v77 = new io.quarkus.runtime.logging.LogBuildTimeConfig;
specialinvoke v77.<io.quarkus.runtime.logging.LogBuildTimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogBuildTimeConfig LogBuildTimeConfig> = v77;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.log");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$LogBuildTimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v8, v2, v77);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v71);
v78 = new java.util.HashSet;
specialinvoke v78.<java.util.HashSet: void <init>()>();
virtualinvoke v78.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.tls");
virtualinvoke v78.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.application");
virtualinvoke v78.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus");
virtualinvoke v78.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.jackson");
virtualinvoke v78.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.live-reload");
virtualinvoke v78.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.log");
v79 = virtualinvoke v8.<io.smallrye.config.SmallRyeConfig: java.lang.Iterable getPropertyNames()>();
v80 = interfaceinvoke v79.<java.lang.Iterable: java.util.Iterator iterator()>();
label5:
v81 = interfaceinvoke v80.<java.util.Iterator: boolean hasNext()>();
if v81 == 0 goto label7;
v82 = interfaceinvoke v80.<java.util.Iterator: java.lang.Object next()>();
v83 = new io.quarkus.runtime.configuration.NameIterator;
specialinvoke v83.<io.quarkus.runtime.configuration.NameIterator: void <init>(java.lang.String)>(v82);
v84 = staticinvoke <io.quarkus.runtime.configuration.PropertiesUtil: boolean isPropertyQuarkusCompoundName(io.quarkus.runtime.configuration.NameIterator)>(v83);
if v84 == 0 goto label6;
v85 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v85.<java.util.HashSet: boolean add(java.lang.Object)>(v82);
label6:
v86 = virtualinvoke v83.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v86 == 0 goto label5;
v87 = staticinvoke <io.quarkus.runtime.configuration.PropertiesUtil: boolean isPropertyInRoot(java.util.Set,io.quarkus.runtime.configuration.NameIterator)>(v78, v83);
if v87 == 0 goto label5;
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v8, v83);
goto label5;
label7:
v88 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
v89 = staticinvoke <io.quarkus.runtime.generated.Config: io.smallrye.config.KeyMap mappedProperties()>();
staticinvoke <io.quarkus.runtime.configuration.PropertiesUtil: void filterUnknown(java.util.Set,io.smallrye.config.KeyMap)>(v88, v89);
v90 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void unknownProperties(java.util.Set)>(v90);
return;
catch java.lang.IllegalStateException from label1 to label2 with label3;
}
public void readBootstrapConfig()
{
io.quarkus.runtime.generated.Config v0;
v0 := @this: io.quarkus.runtime.generated.Config;
return;
}
public void readConfig(java.util.List)
{
io.quarkus.runtime.shutdown.ShutdownConfig v49;
org.eclipse.microprofile.config.spi.Converter v11, v13, v15, v16, v18, v20, v22, v24, v26, v28, v29;
java.lang.Thread v8;
io.smallrye.config.KeyMap v61;
io.quarkus.runtime.DebugRuntimeConfig v43;
java.util.Set v57, v60, v62, v65;
io.quarkus.runtime.configuration.ConfigurationException v68;
io.quarkus.runtime.logging.LogConfig v48;
io.quarkus.runtime.generated.ConfigSourceProviderImpl v5;
java.lang.StringBuilder v2, v66;
java.lang.ClassLoader v9;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig v37;
io.quarkus.runtime.configuration.ConfigurationRuntimeConfig v45;
java.util.ArrayList v31;
io.quarkus.runtime.BannerRuntimeConfig v40;
io.quarkus.stork.StorkConfiguration v38;
java.lang.String v64, v67;
io.quarkus.runtime.ThreadPoolConfig v44;
io.quarkus.runtime.configuration.NameIterator v55;
io.smallrye.config.SmallRyeConfigBuilder v4;
java.lang.IllegalStateException v35;
io.quarkus.vertx.core.runtime.config.VertxConfiguration v39;
org.eclipse.microprofile.config.spi.ConfigProviderResolver v33;
boolean v53, v56, v58, v59, v63;
org.eclipse.microprofile.config.spi.ConfigSource v7;
io.quarkus.runtime.generated.Config v0;
org.eclipse.microprofile.config.Config v34;
io.quarkus.runtime.init.InitRuntimeConfig v47;
java.util.List v1;
java.lang.StackTraceElement[] v69;
org.eclipse.microprofile.config.spi.ConfigSource[] v6;
io.quarkus.runtime.LaunchMode v3;
java.lang.Iterable v51;
java.util.HashSet v50;
int v36;
io.quarkus.runtime.CommandLineRuntimeConfig v41;
java.util.Iterator v52;
io.smallrye.config.SmallRyeConfig v32;
java.lang.Class v10, v12, v14, v17, v19, v21, v23, v25, v27;
java.lang.Object v54;
io.quarkus.runtime.configuration.RuntimeConfigSourceFactory v30;
io.quarkus.runtime.ConfigConfig v42;
io.quarkus.runtime.console.ConsoleRuntimeConfig v46;
v0 := @this: io.quarkus.runtime.generated.Config;
v1 := @parameter0: java.util.List;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode NORMAL>;
v4 = staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: io.smallrye.config.SmallRyeConfigBuilder configBuilder(boolean,boolean,boolean,io.quarkus.runtime.LaunchMode)>(1, 0, 0, v3);
v5 = new io.quarkus.runtime.generated.ConfigSourceProviderImpl;
specialinvoke v5.<io.quarkus.runtime.generated.ConfigSourceProviderImpl: void <init>()>();
staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: void addSourceProvider(io.smallrye.config.SmallRyeConfigBuilder,org.eclipse.microprofile.config.spi.ConfigSourceProvider)>(v4, v5);
v6 = newarray (org.eclipse.microprofile.config.spi.ConfigSource)[1];
v7 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.ConfigSource runTimeDefaultsConfigSource>;
v6[0] = v7;
v8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v9 = virtualinvoke v8.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.io.File", 0, v9);
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$11>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v10, 100, v11);
v12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.util.logging.Level", 0, v9);
v13 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v12, 100, v13);
v14 = <java.lang.Integer: java.lang.Class TYPE>;
v15 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v14, 100, v15);
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$7>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(class "Ljava/lang/Boolean;", 100, v16);
v17 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.net.InetSocketAddress", 0, v9);
v18 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$15>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v17, 100, v18);
v19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.runtime.configuration.MemorySize", 0, v9);
v20 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$14>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v19, 100, v20);
v21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.nio.charset.Charset", 0, v9);
v22 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$13>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v21, 100, v22);
v23 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("java.util.OptionalInt", 0, v9);
v24 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v23, 100, v24);
v25 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("io.quarkus.runtime.logging.InheritableLevel", 0, v9);
v26 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$0>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v25, 100, v26);
v27 = <java.lang.Boolean: java.lang.Class TYPE>;
v28 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(v27, 100, v28);
v29 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withConverter(java.lang.Class,int,org.eclipse.microprofile.config.spi.Converter)>(class "Ljava/lang/String;", 100, v29);
virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: org.eclipse.microprofile.config.spi.ConfigBuilder withSources(org.eclipse.microprofile.config.spi.ConfigSource[])>(v6);
staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: void addSourceProviders(io.smallrye.config.SmallRyeConfigBuilder,java.util.Collection)>(v4, v1);
v30 = new io.quarkus.runtime.configuration.RuntimeConfigSourceFactory;
specialinvoke v30.<io.quarkus.runtime.configuration.RuntimeConfigSourceFactory: void <init>(java.lang.String)>("io.smallrye.config.PropertiesLocationConfigSourceFactory");
staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: void addSourceFactoryProvider(io.smallrye.config.SmallRyeConfigBuilder,io.quarkus.runtime.configuration.ConfigSourceFactoryProvider)>(v4, v30);
v31 = new java.util.ArrayList;
specialinvoke v31.<java.util.ArrayList: void <init>()>();
virtualinvoke v31.<java.util.ArrayList: boolean add(java.lang.Object)>("io.quarkus.runtime.generated.BuildTimeRunTimeFixedConfigSourceBuilder");
virtualinvoke v31.<java.util.ArrayList: boolean add(java.lang.Object)>("io.quarkus.runtime.generated.RunTimeDefaultsConfigSourceBuilder");
virtualinvoke v31.<java.util.ArrayList: boolean add(java.lang.Object)>("io.quarkus.runtime.generated.RunTimeMappingsConfigBuilder");
staticinvoke <io.quarkus.runtime.configuration.ConfigUtils: io.smallrye.config.SmallRyeConfigBuilder configBuilder(io.smallrye.config.SmallRyeConfigBuilder,java.util.List)>(v4, v31);
v32 = virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: io.smallrye.config.SmallRyeConfig build()>();
staticinvoke <io.quarkus.runtime.configuration.QuarkusConfigFactory: void setConfig(io.smallrye.config.SmallRyeConfig)>(v32);
v33 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()>();
label1:
v34 = virtualinvoke v33.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.Config getConfig()>();
virtualinvoke v33.<org.eclipse.microprofile.config.spi.ConfigProviderResolver: void releaseConfig(org.eclipse.microprofile.config.Config)>(v34);
label2:
goto label4;
label3:
v35 := @caughtexception;
label4:
v36 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v37 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig;
specialinvoke v37.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig GraphQLClientsConfig> = v37;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.smallrye-graphql-client");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientsConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v37);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v38 = new io.quarkus.stork.StorkConfiguration;
specialinvoke v38.<io.quarkus.stork.StorkConfiguration: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.stork.StorkConfiguration StorkConfiguration> = v38;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.stork");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$stork$StorkConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v38);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v39 = new io.quarkus.vertx.core.runtime.config.VertxConfiguration;
specialinvoke v39.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.vertx.core.runtime.config.VertxConfiguration VertxConfiguration> = v39;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.vertx");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$VertxConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v39);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v40 = new io.quarkus.runtime.BannerRuntimeConfig;
specialinvoke v40.<io.quarkus.runtime.BannerRuntimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.BannerRuntimeConfig BannerRuntimeConfig> = v40;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.banner");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$BannerRuntimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v40);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v41 = new io.quarkus.runtime.CommandLineRuntimeConfig;
specialinvoke v41.<io.quarkus.runtime.CommandLineRuntimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.CommandLineRuntimeConfig CommandLineRuntimeConfig> = v41;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$CommandLineRuntimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v41);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v42 = new io.quarkus.runtime.ConfigConfig;
specialinvoke v42.<io.quarkus.runtime.ConfigConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.ConfigConfig ConfigConfig> = v42;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$ConfigConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v42);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v43 = new io.quarkus.runtime.DebugRuntimeConfig;
specialinvoke v43.<io.quarkus.runtime.DebugRuntimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.DebugRuntimeConfig DebugRuntimeConfig> = v43;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.debug");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$DebugRuntimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v43);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v44 = new io.quarkus.runtime.ThreadPoolConfig;
specialinvoke v44.<io.quarkus.runtime.ThreadPoolConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.ThreadPoolConfig ThreadPoolConfig> = v44;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.thread-pool");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$ThreadPoolConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v44);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v45 = new io.quarkus.runtime.configuration.ConfigurationRuntimeConfig;
specialinvoke v45.<io.quarkus.runtime.configuration.ConfigurationRuntimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.configuration.ConfigurationRuntimeConfig ConfigurationRuntimeConfig> = v45;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.configuration");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$configuration$ConfigurationRuntimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v45);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v46 = new io.quarkus.runtime.console.ConsoleRuntimeConfig;
specialinvoke v46.<io.quarkus.runtime.console.ConsoleRuntimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.console.ConsoleRuntimeConfig ConsoleRuntimeConfig> = v46;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.console");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$console$ConsoleRuntimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v46);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v47 = new io.quarkus.runtime.init.InitRuntimeConfig;
specialinvoke v47.<io.quarkus.runtime.init.InitRuntimeConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.init.InitRuntimeConfig InitRuntimeConfig> = v47;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$init$InitRuntimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v47);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v48 = new io.quarkus.runtime.logging.LogConfig;
specialinvoke v48.<io.quarkus.runtime.logging.LogConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogConfig LogConfig> = v48;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.log");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$LogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v48);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v49 = new io.quarkus.runtime.shutdown.ShutdownConfig;
specialinvoke v49.<io.quarkus.runtime.shutdown.ShutdownConfig: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.shutdown.ShutdownConfig ShutdownConfig> = v49;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quarkus.shutdown");
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$shutdown$ShutdownConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v32, v2, v49);
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v36);
v50 = new java.util.HashSet;
specialinvoke v50.<java.util.HashSet: void <init>()>();
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.stork");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.thread-pool");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.shutdown");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.banner");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.configuration");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.console");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.smallrye-graphql-client");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.debug");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.vertx");
virtualinvoke v50.<java.util.HashSet: boolean add(java.lang.Object)>("quarkus.log");
v51 = virtualinvoke v32.<io.smallrye.config.SmallRyeConfig: java.lang.Iterable getPropertyNames()>();
v52 = interfaceinvoke v51.<java.lang.Iterable: java.util.Iterator iterator()>();
label5:
v53 = interfaceinvoke v52.<java.util.Iterator: boolean hasNext()>();
if v53 == 0 goto label7;
v54 = interfaceinvoke v52.<java.util.Iterator: java.lang.Object next()>();
v55 = new io.quarkus.runtime.configuration.NameIterator;
specialinvoke v55.<io.quarkus.runtime.configuration.NameIterator: void <init>(java.lang.String)>(v54);
v56 = staticinvoke <io.quarkus.runtime.configuration.PropertiesUtil: boolean isPropertyQuarkusCompoundName(io.quarkus.runtime.configuration.NameIterator)>(v55);
if v56 == 0 goto label6;
v57 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v57.<java.util.HashSet: boolean add(java.lang.Object)>(v54);
label6:
v58 = virtualinvoke v55.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v58 == 0 goto label5;
v59 = staticinvoke <io.quarkus.runtime.configuration.PropertiesUtil: boolean isPropertyInRoot(java.util.Set,io.quarkus.runtime.configuration.NameIterator)>(v50, v55);
if v59 == 0 goto label5;
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v32, v55);
goto label5;
label7:
v60 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
v61 = staticinvoke <io.quarkus.runtime.generated.Config: io.smallrye.config.KeyMap mappedProperties()>();
staticinvoke <io.quarkus.runtime.configuration.PropertiesUtil: void filterUnknown(java.util.Set,io.smallrye.config.KeyMap)>(v60, v61);
v62 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void unknownPropertiesRuntime(java.util.Set)>(v62);
v63 = staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: boolean isError()>();
if v63 == 0 goto label8;
v64 = staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: java.lang.String getNiceErrorMessage()>();
v65 = staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: java.util.Set getErrorKeys()>();
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void resetError()>();
v66 = new java.lang.StringBuilder;
specialinvoke v66.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One or more configuration errors have prevented the application from starting. The errors are:\n");
virtualinvoke v66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v64);
v67 = virtualinvoke v66.<java.lang.Object: java.lang.String toString()>();
v68 = new io.quarkus.runtime.configuration.ConfigurationException;
specialinvoke v68.<io.quarkus.runtime.configuration.ConfigurationException: void <init>(java.lang.String,java.util.Set)>(v67, v65);
v69 = newarray (java.lang.StackTraceElement)[0];
virtualinvoke v68.<io.quarkus.runtime.configuration.ConfigurationException: void setStackTrace(java.lang.StackTraceElement[])>(v69);
throw v68;
label8:
return;
catch java.lang.IllegalStateException from label1 to label2 with label3;
}
private static void siParseKey(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("quarkus");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v5, v6, v7, v8, v9;
java.util.Set v4, v41;
java.lang.String v3, v40;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("application");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:application(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("default-locale");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:default-locale(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("jackson");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("live-reload");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("locales");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:locales(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("log");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tls");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:tls(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("arc");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:arc(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("args");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("banner");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:banner(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("bootstrap");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:bootstrap(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("class-loading");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:class-loading(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("config");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:config(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("configuration");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:configuration(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:console(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("debug");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:debug(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("devservices");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:devservices(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ide");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:ide(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("index-dependency");
if v23 == 0 goto label20;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:index-dependency(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label20:
v24 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("init-and-exit");
if v24 == 0 goto label21;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label21:
v25 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("jni");
if v25 == 0 goto label22;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jni(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label22:
v26 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("naming");
if v26 == 0 goto label23;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:naming(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label23:
v27 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("netty");
if v27 == 0 goto label24;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:netty(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label24:
v28 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("package");
if v28 == 0 goto label25;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:package(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label25:
v29 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("platform");
if v29 == 0 goto label26;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:platform(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label26:
v30 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("profile");
if v30 == 0 goto label27;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label27:
v31 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown");
if v31 == 0 goto label28;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:shutdown(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label28:
v32 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("smallrye-graphql-client");
if v32 == 0 goto label29;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:smallrye-graphql-client(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label29:
v33 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("snapstart");
if v33 == 0 goto label30;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:snapstart(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label30:
v34 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ssl");
if v34 == 0 goto label31;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:ssl(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label31:
v35 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("stork");
if v35 == 0 goto label32;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:stork(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label32:
v36 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("test");
if v36 == 0 goto label33;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:test(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label33:
v37 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("thread-pool");
if v37 == 0 goto label34;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:thread-pool(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label34:
v38 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("uuid");
if v38 == 0 goto label35;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label35:
v39 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("vertx");
if v39 == 0 goto label36;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label36:
v40 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v41 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v41.<java.util.HashSet: boolean add(java.lang.Object)>(v40);
return;
}
private static void siParseKey:quarkus:application(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("name");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:application:name(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ui-header");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:application:ui-header(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("version");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:application:version(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:application:name(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:application:ui-header(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:application:version(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:default-locale(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("accept-case-insensitive-enums");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:accept-case-insensitive-enums(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("fail-on-empty-beans");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:fail-on-empty-beans(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("fail-on-unknown-properties");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:fail-on-unknown-properties(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("property-naming-strategy");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:property-naming-strategy(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("serialization-inclusion");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:serialization-inclusion(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("timezone");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:timezone(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("write-dates-as-timestamps");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:write-dates-as-timestamps(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("write-durations-as-timestamps");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:jackson:write-durations-as-timestamps(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void siParseKey:quarkus:jackson:accept-case-insensitive-enums(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:fail-on-empty-beans(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:fail-on-unknown-properties(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:property-naming-strategy(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:serialization-inclusion(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:timezone(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:write-dates-as-timestamps(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:jackson:write-durations-as-timestamps(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v13, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v12, v3;
boolean v10, v11, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("connect-timeout");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:connect-timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("instrumentation");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:instrumentation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("retry-interval");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:retry-interval(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("retry-max-attempts");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:retry-max-attempts(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("url");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:url(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("watched-resources");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:live-reload:watched-resources(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v13 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v13.<java.util.HashSet: boolean add(java.lang.Object)>(v12);
return;
}
private static void siParseKey:quarkus:live-reload:connect-timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload:instrumentation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload:password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload:retry-interval(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload:retry-max-attempts(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload:url(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:live-reload:watched-resources(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:locales(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:log(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v15, v3;
boolean v10, v11, v12, v13, v14, v2, v5, v6, v7, v8, v9;
java.util.Set v16, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("category");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:category(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("metrics");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:metrics(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("min-level");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:min-level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:console(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:file(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("handler");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("handlers");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:syslog(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v16 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v16.<java.util.HashSet: boolean add(java.lang.Object)>(v15);
return;
}
private static void siParseKey:quarkus:log:category(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:category:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:log:category:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("min-level");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:category:*:min-level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("handlers");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-parent-handlers");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void siParseKey:quarkus:log:category:*:min-level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object siGetEnclosing:log:LogBuildTimeConfig#categories:*:CategoryBuildTimeConfig#minLevel(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object siGetEnclosing:log:LogBuildTimeConfig#categories:*:CategoryBuildTimeConfig#minLevel(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.logging.CategoryBuildTimeConfig v5;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object siGetEnclosing:log:LogBuildTimeConfig#categories:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.CategoryBuildTimeConfig;
specialinvoke v5.<io.quarkus.runtime.logging.CategoryBuildTimeConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$CategoryBuildTimeConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object siGetEnclosing:log:LogBuildTimeConfig#categories:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object siGetEnclosing:log:LogBuildTimeConfig#categories(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.runtime.logging.LogBuildTimeConfig: java.util.Map categories>;
return v3;
}
static java.lang.Object siGetEnclosing:log:LogBuildTimeConfig#categories(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.logging.LogBuildTimeConfig v2;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogBuildTimeConfig LogBuildTimeConfig>;
return v2;
}
static void initGroup$io$quarkus$runtime$logging$CategoryBuildTimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("min-level");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$0>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.logging.CategoryBuildTimeConfig: io.quarkus.runtime.logging.InheritableLevel minLevel> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
private static void siParseKey:quarkus:log:metrics(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:metrics:enabled(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:log:metrics:enabled(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:log:min-level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:log:console(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:console:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("color");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("darken");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("stderr");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void siParseKey:quarkus:log:console:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:log:file(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:file:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("encoding");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotation");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:file:rotation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void siParseKey:quarkus:log:file:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:log:file:rotation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file-suffix");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-backup-index");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-file-size");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotate-on-boot");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void siParseKey:quarkus:log:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:filter:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:log:filter:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("if-starts-with");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("target-level");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:log:handler(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:console(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:file(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:syslog(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:log:handler:console(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:console:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:log:handler:console:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:console:*:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("color");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("darken");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("stderr");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void siParseKey:quarkus:log:handler:console:*:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:log:handler:file(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:file:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:log:handler:file:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:file:*:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("encoding");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotation");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:file:*:rotation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void siParseKey:quarkus:log:handler:file:*:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:log:handler:file:*:rotation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file-suffix");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-backup-index");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-file-size");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotate-on-boot");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void siParseKey:quarkus:log:handler:syslog(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:syslog:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:log:handler:syslog:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v19, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v2, v5, v6, v7, v8, v9;
java.util.Set v20, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("app-name");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:handler:syslog:*:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("block-on-reconnect");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("endpoint");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("facility");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("hostname");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("protocol");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog-type");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("truncate");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-counting-framing");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v20 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v20.<java.util.HashSet: boolean add(java.lang.Object)>(v19);
return;
}
private static void siParseKey:quarkus:log:handler:syslog:*:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:log:syslog(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v19, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v2, v5, v6, v7, v8, v9;
java.util.Set v20, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("app-name");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:log:syslog:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("block-on-reconnect");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("endpoint");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("facility");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("hostname");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("protocol");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog-type");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("truncate");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-counting-framing");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v20 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v20.<java.util.HashSet: boolean add(java.lang.Object)>(v19);
return;
}
private static void siParseKey:quarkus:log:syslog:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:tls(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-all");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:tls:trust-all(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:tls:trust-all(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void siParseKey:quarkus:arc(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v22, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v5, v6, v7, v8, v9;
java.util.Set v23, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("auto-inject-fields");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("auto-producer-methods");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("context-propagation");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:arc:context-propagation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("detect-unused-false-positives");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("detect-wrong-annotations");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("dev-mode");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:arc:dev-mode(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-dependency");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:arc:exclude-dependency(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-types");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("fail-on-intercepted-private-method");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ignored-split-packages");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("remove-unused-beans");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("selected-alternatives");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("strict-compatibility");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("test");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:arc:test(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("transform-private-injected-fields");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("transform-unproxyable-classes");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("unremovable-types");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v23 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v23.<java.util.HashSet: boolean add(java.lang.Object)>(v22);
return;
}
private static void siParseKey:quarkus:arc:context-propagation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:arc:dev-mode(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("monitoring-enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:arc:exclude-dependency(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:arc:exclude-dependency:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:arc:exclude-dependency:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("artifact-id");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("classifier");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("group-id");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:arc:test(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-application-lifecycle-observers");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:banner(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:bootstrap(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("effective-model-builder");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("misaligned-platform-imports");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("workspace-discovery");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:class-loading(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("parent-first-artifacts");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reloadable-artifacts");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("removed-artifacts");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("removed-resources");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:class-loading:removed-resources(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void siParseKey:quarkus:class-loading:removed-resources(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:config(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("locations");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("profile");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:config:profile(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("sources");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:config:sources(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:config:profile(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("parent");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:config:sources(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("system-only");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:configuration(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("build-time-mismatch-at-runtime");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:console(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("basic");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("color");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-input");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void siParseKey:quarkus:debug(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v11, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v10, v3;
boolean v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("generated-classes-dir");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("generated-sources-dir");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("print-startup-times");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reflection");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("transformed-classes-dir");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v11 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v11.<java.util.HashSet: boolean add(java.lang.Object)>(v10);
return;
}
private static void siParseKey:quarkus:devservices(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("timeout");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:ide(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("target");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:index-dependency(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:index-dependency:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:index-dependency:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("artifact-id");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("classifier");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("group-id");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:jni(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("library-paths");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:naming(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable-jndi");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:netty(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("allocator-max-order");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:package(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v22, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v5, v6, v7, v8, v9;
java.util.Set v23, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("add-runner-suffix");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("appcds-builder-image");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("appcds-use-container");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("create-appcds");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter-optional-dependencies");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-dependency-list");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("included-optional-dependencies");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("main-class");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("manifest");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:package:manifest(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("output-directory");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("output-name");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("quiltflower");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:package:quiltflower(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("runner-suffix");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("user-configured-ignored-entries");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("user-providers-directory");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("write-transformed-bytecode-to-build-output");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v23 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v23.<java.util.HashSet: boolean add(java.lang.Object)>(v22);
return;
}
private static void siParseKey:quarkus:package:manifest(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("add-implementation-entries");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("attributes");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:package:manifest:attributes(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("manifest-sections");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:package:manifest:manifest-sections(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:package:manifest:attributes(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:package:manifest:manifest-sections(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:package:manifest:manifest-sections:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:package:manifest:manifest-sections:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:package:quiltflower(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("jar-directory");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("version");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:platform(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("artifact-id");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("group-id");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("version");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void siParseKey:quarkus:shutdown(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("timeout");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:smallrye-graphql-client(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:smallrye-graphql-client:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:smallrye-graphql-client:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v23, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v5, v6, v7, v8, v9;
java.util.Set v24, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("allow-unexpected-response-fields");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("execute-single-result-operations-over-websocket");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("header");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:smallrye-graphql-client:*:header(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("init-payload");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:smallrye-graphql-client:*:init-payload(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-store");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-store-password");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-store-type");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-redirects");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-host");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-password");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-port");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-username");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("subprotocols");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-store");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-store-password");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-store-type");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("url");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("websocket-initialization-timeout");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v24 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v24.<java.util.HashSet: boolean add(java.lang.Object)>(v23);
return;
}
private static void siParseKey:quarkus:smallrye-graphql-client:*:header(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:smallrye-graphql-client:*:init-payload(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:snapstart(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v11, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v10, v3;
boolean v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("full-warmup");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("generate-application-class-list");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("initialize-classes");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("preload-classes");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v11 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v11.<java.util.HashSet: boolean add(java.lang.Object)>(v10);
return;
}
private static void siParseKey:quarkus:ssl(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("native");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:stork(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:stork:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:stork:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("load-balancer");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:stork:*:load-balancer(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("service-discovery");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:stork:*:service-discovery(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:stork:*:load-balancer(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:stork:*:service-discovery(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:test(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v5, v6, v7, v8, v9;
java.util.Set v32, v4;
java.lang.String v3, v31;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("arg-line");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("basic-console");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("class-clone-pattern");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("container");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:test:container(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("continuous-testing");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-color");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-console-input");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("display-test-output");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable-callbacks-for-integration-tests");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-engines");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-module-pattern");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-pattern");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-tags");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("flat-class-path");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("hang-detection-timeout");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-engines");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-module-pattern");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-pattern");
if v23 == 0 goto label20;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label20:
v24 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-tags");
if v24 == 0 goto label21;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label21:
v25 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("integration-test-profile");
if v25 == 0 goto label22;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label22:
v26 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("native-image-profile");
if v26 == 0 goto label23;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label23:
v27 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("only-test-application-module");
if v27 == 0 goto label24;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label24:
v28 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("profile");
if v28 == 0 goto label25;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:test:profile(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label25:
v29 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v29 == 0 goto label26;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label26:
v30 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("wait-time");
if v30 == 0 goto label27;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label27:
v31 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v32 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v32.<java.util.HashSet: boolean add(java.lang.Object)>(v31);
return;
}
private static void siParseKey:quarkus:test:container(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("additional-exposed-ports");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:test:container:additional-exposed-ports(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("network");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void siParseKey:quarkus:test:container:additional-exposed-ports(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void siParseKey:quarkus:test:profile(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v5;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v4;
boolean v2, v3;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tags");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v5 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v5.<java.util.HashSet: boolean add(java.lang.Object)>(v4);
return;
}
private static void siParseKey:quarkus:thread-pool(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v14, v3;
boolean v10, v11, v12, v13, v2, v5, v6, v7, v8, v9;
java.util.Set v15, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("core-threads");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("growth-resistance");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("keep-alive-time");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-threads");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("prefill");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-size");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown-check-interval");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown-interrupt");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown-timeout");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v15 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v15.<java.util.HashSet: boolean add(java.lang.Object)>(v14);
return;
}
private static void siParseKey:quarkus:vertx(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v23, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v5, v6, v7, v8, v9;
java.util.Set v24, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("caching");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("classpath-resolving");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cluster");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:cluster(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("customize-arc-context");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("event-loops-pool-size");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("eventbus");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("growth-resistance");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("internal-blocking-pool-size");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("keep-alive-time");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-event-loop-execute-time");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-worker-execute-time");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("prefer-native-transport");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("prefill");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-size");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("resolver");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:resolver(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-async-dns");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("warning-exception-time");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("worker-pool-size");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v24 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v24.<java.util.HashSet: boolean add(java.lang.Object)>(v23);
return;
}
private static void siParseKey:quarkus:vertx:cluster(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v13, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v12, v3;
boolean v10, v11, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("clustered");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("host");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ping-interval");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ping-reply-interval");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("port");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("public-host");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("public-port");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v13 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v13.<java.util.HashSet: boolean add(java.lang.Object)>(v12);
return;
}
private static void siParseKey:quarkus:vertx:eventbus(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v27, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v5, v6, v7, v8, v9;
java.util.Set v28, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("accept-backlog");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("client-auth");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("connect-timeout");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("idle-timeout");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-certificate-jks");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus:key-certificate-jks(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-certificate-pem");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus:key-certificate-pem(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-certificate-pfx");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus:key-certificate-pfx(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("receive-buffer-size");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reconnect-attempts");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reconnect-interval");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reuse-address");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reuse-port");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("send-buffer-size");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("soLinger");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ssl");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tcp-keep-alive");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tcp-no-delay");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("traffic-class");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-all");
if v23 == 0 goto label20;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label20:
v24 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-certificate-jks");
if v24 == 0 goto label21;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus:trust-certificate-jks(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label21:
v25 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-certificate-pem");
if v25 == 0 goto label22;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus:trust-certificate-pem(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label22:
v26 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-certificate-pfx");
if v26 == 0 goto label23;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void siParseKey:quarkus:vertx:eventbus:trust-certificate-pfx(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label23:
v27 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v28 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v28.<java.util.HashSet: boolean add(java.lang.Object)>(v27);
return;
}
private static void siParseKey:quarkus:vertx:eventbus:key-certificate-jks(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:vertx:eventbus:key-certificate-pem(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("certs");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("keys");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:vertx:eventbus:key-certificate-pfx(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:vertx:eventbus:trust-certificate-jks(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:vertx:eventbus:trust-certificate-pem(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v5;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v4;
boolean v2, v3;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("certs");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v5 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v5.<java.util.HashSet: boolean add(java.lang.Object)>(v4);
return;
}
private static void siParseKey:quarkus:vertx:eventbus:trust-certificate-pfx(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void siParseKey:quarkus:vertx:resolver(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v11, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v10, v3;
boolean v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cache-max-time-to-live");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cache-min-time-to-live");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cache-negative-time-to-live");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-queries");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("query-timeout");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void emptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v11 = <io.quarkus.runtime.generated.Config: java.util.Set 'unknown'>;
virtualinvoke v11.<java.util.HashSet: boolean add(java.lang.Object)>(v10);
return;
}
private static void rtParseKey(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("quarkus");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v5, v6, v7, v8, v9;
java.util.Set v4, v41;
java.lang.String v3, v40;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("args");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:args(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("banner");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:banner(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("config");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:config(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("configuration");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:configuration(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:console(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("debug");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:debug(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("init-and-exit");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:init-and-exit(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("log");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("profile");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:profile(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:shutdown(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("smallrye-graphql-client");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("stork");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("thread-pool");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("uuid");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:uuid(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("vertx");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("application");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:application(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("arc");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:arc(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("bootstrap");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:bootstrap(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("class-loading");
if v23 == 0 goto label20;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:class-loading(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label20:
v24 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("default-locale");
if v24 == 0 goto label21;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label21:
v25 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("devservices");
if v25 == 0 goto label22;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:devservices(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label22:
v26 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ide");
if v26 == 0 goto label23;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:ide(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label23:
v27 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("index-dependency");
if v27 == 0 goto label24;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:index-dependency(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label24:
v28 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("jackson");
if v28 == 0 goto label25;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:jackson(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label25:
v29 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("jni");
if v29 == 0 goto label26;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:jni(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label26:
v30 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("live-reload");
if v30 == 0 goto label27;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:live-reload(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label27:
v31 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("locales");
if v31 == 0 goto label28;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label28:
v32 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("naming");
if v32 == 0 goto label29;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:naming(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label29:
v33 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("netty");
if v33 == 0 goto label30;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:netty(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label30:
v34 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("package");
if v34 == 0 goto label31;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:package(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label31:
v35 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("platform");
if v35 == 0 goto label32;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:platform(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label32:
v36 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("snapstart");
if v36 == 0 goto label33;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:snapstart(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label33:
v37 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ssl");
if v37 == 0 goto label34;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:ssl(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label34:
v38 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("test");
if v38 == 0 goto label35;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:test(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label35:
v39 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tls");
if v39 == 0 goto label36;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:tls(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label36:
v40 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v41 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v41.<java.util.HashSet: boolean add(java.lang.Object)>(v40);
return;
}
private static void rtParseKey:quarkus:args(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:banner(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:banner:enabled(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:banner:enabled(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:config(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("locations");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:config:locations(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("profile");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:config:profile(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("sources");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:config:sources(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:config:locations(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:config:profile(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("parent");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:config:profile:parent(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:config:profile:parent(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:config:sources(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("system-only");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:configuration(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("build-time-mismatch-at-runtime");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:configuration:build-time-mismatch-at-runtime(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:configuration:build-time-mismatch-at-runtime(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:console(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("color");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:console:color(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("basic");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-input");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void rtParseKey:quarkus:console:color(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:debug(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v11, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v10, v3;
boolean v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("print-startup-times");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:debug:print-startup-times(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("generated-classes-dir");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("generated-sources-dir");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reflection");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("transformed-classes-dir");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v11 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v11.<java.util.HashSet: boolean add(java.lang.Object)>(v10);
return;
}
private static void rtParseKey:quarkus:debug:print-startup-times(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:init-and-exit(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v15, v3;
boolean v10, v11, v12, v13, v14, v2, v5, v6, v7, v8, v9;
java.util.Set v16, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("category");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:category(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("handler");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("handlers");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handlers(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("metrics");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:metrics(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("min-level");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v16 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v16.<java.util.HashSet: boolean add(java.lang.Object)>(v15);
return;
}
private static void rtParseKey:quarkus:log:category(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:category:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:log:category:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("handlers");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:category:*:handlers(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:category:*:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-parent-handlers");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:category:*:use-parent-handlers(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("min-level");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void rtParseKey:quarkus:log:category:*:handlers(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories:*:CategoryConfig#handlers(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#categories:*:CategoryConfig#handlers(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.logging.CategoryConfig v5;
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.CategoryConfig;
specialinvoke v5.<io.quarkus.runtime.logging.CategoryConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$CategoryConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#categories:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map categories>;
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#categories(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.LogConfig v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogConfig LogConfig>;
return v2;
}
static void initGroup$io$quarkus$runtime$logging$CategoryConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v10, v15, v5;
int v3;
java.lang.String v14, v4, v9;
java.util.NoSuchElementException v13, v19, v8;
boolean v17;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v12, v18, v7;
java.lang.Object v11, v16, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$0>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
staticinvoke <io.quarkus.runtime.logging.CategoryConfig$$accessor: void set_level(java.lang.Object,java.lang.Object)>(v2, v6);
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlers");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
staticinvoke <io.quarkus.runtime.logging.CategoryConfig$$accessor: void set_handlers(java.lang.Object,java.lang.Object)>(v2, v11);
label07:
goto label10;
label08:
v12 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v12);
goto label10;
label09:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v13);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use-parent-handlers");
v14 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v15 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label11:
v16 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v14, v15);
v17 = virtualinvoke v16.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.CategoryConfig$$accessor: void set_useParentHandlers(java.lang.Object,boolean)>(v2, v17);
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v14, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v14, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
}
private static void rtParseKey:quarkus:log:category:*:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories:*:CategoryConfig#level(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#categories:*:CategoryConfig#level(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.logging.CategoryConfig v5;
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.CategoryConfig;
specialinvoke v5.<io.quarkus.runtime.logging.CategoryConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$CategoryConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:category:*:use-parent-handlers(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories:*:CategoryConfig#useParentHandlers(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#categories:*:CategoryConfig#useParentHandlers(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.logging.CategoryConfig v5;
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#categories:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.CategoryConfig;
specialinvoke v5.<io.quarkus.runtime.logging.CategoryConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$CategoryConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:console(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("color");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:color(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("darken");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:darken(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:enable(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:format(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("stderr");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:stderr(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void rtParseKey:quarkus:log:console:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:async:overflow(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:console:async:queue-length(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:log:console:async:overflow(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:async:queue-length(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:color(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:darken(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:enable(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:format(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:console:stderr(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:enable(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("encoding");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:encoding(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:format(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:path(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotation");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:rotation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void rtParseKey:quarkus:log:file:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:async:overflow(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:async:queue-length(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:log:file:async:overflow(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:async:queue-length(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:enable(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:encoding(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:format(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:path(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:rotation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file-suffix");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:rotation:file-suffix(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-backup-index");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:rotation:max-backup-index(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-file-size");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:rotation:max-file-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotate-on-boot");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:file:rotation:rotate-on-boot(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void rtParseKey:quarkus:log:file:rotation:file-suffix(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:rotation:max-backup-index(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:rotation:max-file-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:file:rotation:rotate-on-boot(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:filter:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:log:filter:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("if-starts-with");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:filter:*:if-starts-with(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("target-level");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:filter:*:target-level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:log:filter:*:if-starts-with(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#filters:*:CleanupFilterConfig#ifStartsWith(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#filters:*:CleanupFilterConfig#ifStartsWith(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.CleanupFilterConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#filters:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.CleanupFilterConfig;
specialinvoke v5.<io.quarkus.runtime.logging.CleanupFilterConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$CleanupFilterConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#filters:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#filters(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map filters>;
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#filters(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.LogConfig v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogConfig LogConfig>;
return v2;
}
static void initGroup$io$quarkus$runtime$logging$CleanupFilterConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v12, v7;
org.eclipse.microprofile.config.spi.Converter v10, v5;
int v3;
java.lang.Object v11, v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4, v9;
java.util.NoSuchElementException v13, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("if-starts-with");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$2>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.logging.CleanupFilterConfig: java.util.List ifStartsWith> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target-level");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
v2.<io.quarkus.runtime.logging.CleanupFilterConfig: java.util.logging.Level targetLevel> = v11;
label07:
goto label10;
label08:
v12 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v12);
goto label10;
label09:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v13);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
}
private static void rtParseKey:quarkus:log:filter:*:target-level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#filters:*:CleanupFilterConfig#targetLevel(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#filters:*:CleanupFilterConfig#targetLevel(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.CleanupFilterConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#filters:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.CleanupFilterConfig;
specialinvoke v5.<io.quarkus.runtime.logging.CleanupFilterConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$CleanupFilterConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:log:handler:console(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:log:handler:console:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("color");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:color(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("darken");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:darken(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:enable(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:format(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("stderr");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:stderr(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void rtParseKey:quarkus:log:handler:console:*:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async:AsyncConfig#enable(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:async:overflow(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:console:*:async:queue-length(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async:AsyncConfig#enable(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map consoleHandlers>;
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.LogConfig v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogConfig LogConfig>;
return v2;
}
static void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v17, v22, v27, v32, v38, v5;
boolean v13, v7;
io.quarkus.runtime.logging.AsyncConfig v42;
java.lang.StringBuilder v1;
int v3, v34;
java.lang.String v10, v16, v21, v26, v31, v37, v4;
java.util.NoSuchElementException v15, v20, v25, v30, v36, v41, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v14, v19, v24, v29, v35, v40, v8;
java.lang.Object v12, v18, v2, v23, v28, v33, v39, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enable");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_enable(java.lang.Object,boolean)>(v2, v7);
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stderr");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v13 = virtualinvoke v12.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_stderr(java.lang.Object,boolean)>(v2, v13);
label07:
goto label10;
label08:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v14);
goto label10;
label09:
v15 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v15);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format");
v16 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v17 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label11:
v18 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v16, v17);
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_format(java.lang.Object,java.lang.Object)>(v2, v18);
label12:
goto label15;
label13:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v16, v19);
goto label15;
label14:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v16, v20);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level");
v21 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v22 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
label16:
v23 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v21, v22);
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_level(java.lang.Object,java.lang.Object)>(v2, v23);
label17:
goto label20;
label18:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v21, v24);
goto label20;
label19:
v25 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v21, v25);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color");
v26 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v27 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$6>;
label21:
v28 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v26, v27);
v2.<io.quarkus.runtime.logging.ConsoleConfig: java.util.Optional color> = v28;
label22:
goto label25;
label23:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v26, v29);
goto label25;
label24:
v30 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v26, v30);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("darken");
v31 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v32 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label26:
v33 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v31, v32);
v34 = virtualinvoke v33.<java.lang.Integer: int intValue()>();
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_darken(java.lang.Object,int)>(v2, v34);
label27:
goto label30;
label28:
v35 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v31, v35);
goto label30;
label29:
v36 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v31, v36);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filter");
v37 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v38 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label31:
v39 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v37, v38);
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_filter(java.lang.Object,java.lang.Object)>(v2, v39);
label32:
goto label35;
label33:
v40 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v37, v40);
goto label35;
label34:
v41 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v37, v41);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("async");
v42 = new io.quarkus.runtime.logging.AsyncConfig;
specialinvoke v42.<io.quarkus.runtime.logging.AsyncConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$AsyncConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v42);
staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: void set_async(java.lang.Object,java.lang.Object)>(v2, v42);
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
}
static void initGroup$io$quarkus$runtime$logging$AsyncConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v17, v5;
int v13, v3;
java.lang.String v10, v16, v4;
java.util.NoSuchElementException v15, v20, v9;
boolean v7;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v14, v19, v8;
java.lang.Object v12, v18, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.AsyncConfig$$accessor: void set_enable(java.lang.Object,boolean)>(v2, v7);
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queue-length");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v13 = virtualinvoke v12.<java.lang.Integer: int intValue()>();
staticinvoke <io.quarkus.runtime.logging.AsyncConfig$$accessor: void set_queueLength(java.lang.Object,int)>(v2, v13);
label07:
goto label10;
label08:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v14);
goto label10;
label09:
v15 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v15);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overflow");
v16 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v17 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$10>;
label11:
v18 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v16, v17);
staticinvoke <io.quarkus.runtime.logging.AsyncConfig$$accessor: void set_overflow(java.lang.Object,java.lang.Object)>(v2, v18);
label12:
goto label15;
label13:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v16, v19);
goto label15;
label14:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v16, v20);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
}
private static void rtParseKey:quarkus:log:handler:console:*:async:overflow(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async:AsyncConfig#overflow(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async:AsyncConfig#overflow(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:console:*:async:queue-length(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async:AsyncConfig#queueLength(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async:AsyncConfig#queueLength(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.ConsoleConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:console:*:color(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#color(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#color(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:console:*:darken(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#darken(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#darken(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:console:*:enable(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#enable(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#enable(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:console:*:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#filter(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#filter(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:console:*:format(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#format(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#format(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:console:*:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#level(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#level(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:console:*:stderr(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#stderr(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*:ConsoleConfig#stderr(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.ConsoleConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#consoleHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v5.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:log:handler:file:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:enable(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("encoding");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:encoding(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:format(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:path(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotation");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:rotation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void rtParseKey:quarkus:log:handler:file:*:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async:AsyncConfig#enable(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:async:overflow(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:async:queue-length(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async:AsyncConfig#enable(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map fileHandlers>;
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.LogConfig v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogConfig LogConfig>;
return v2;
}
static void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v21, v26, v31, v5;
boolean v7;
io.quarkus.runtime.logging.AsyncConfig v35;
java.lang.StringBuilder v1;
io.quarkus.runtime.logging.FileConfig$RotationConfig v36;
int v3;
java.lang.String v10, v15, v20, v25, v30, v4;
java.util.NoSuchElementException v14, v19, v24, v29, v34, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v23, v28, v33, v8;
java.lang.Object v12, v17, v2, v22, v27, v32, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enable");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_enable(java.lang.Object,boolean)>(v2, v7);
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_format(java.lang.Object,java.lang.Object)>(v2, v12);
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_level(java.lang.Object,java.lang.Object)>(v2, v17);
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path");
v20 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v21 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$11>;
label16:
v22 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v20, v21);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_path(java.lang.Object,java.lang.Object)>(v2, v22);
label17:
goto label20;
label18:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v20, v23);
goto label20;
label19:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v20, v24);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filter");
v25 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v26 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label21:
v27 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v25, v26);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_filter(java.lang.Object,java.lang.Object)>(v2, v27);
label22:
goto label25;
label23:
v28 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v25, v28);
goto label25;
label24:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v25, v29);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoding");
v30 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v31 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$12>;
label26:
v32 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v30, v31);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_encoding(java.lang.Object,java.lang.Object)>(v2, v32);
label27:
goto label30;
label28:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v30, v33);
goto label30;
label29:
v34 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v30, v34);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("async");
v35 = new io.quarkus.runtime.logging.AsyncConfig;
specialinvoke v35.<io.quarkus.runtime.logging.AsyncConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$AsyncConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v35);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_async(java.lang.Object,java.lang.Object)>(v2, v35);
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rotation");
v36 = new io.quarkus.runtime.logging.FileConfig$RotationConfig;
specialinvoke v36.<io.quarkus.runtime.logging.FileConfig$RotationConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig$RotationConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v36);
staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: void set_rotation(java.lang.Object,java.lang.Object)>(v2, v36);
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
}
static void initGroup$io$quarkus$runtime$logging$FileConfig$RotationConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v10, v16, v21, v5;
int v12, v3;
java.lang.String v15, v20, v4, v9;
java.util.NoSuchElementException v14, v19, v25, v8;
boolean v23;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v24, v7;
java.lang.Object v11, v17, v2, v22, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-file-size");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$14>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
staticinvoke <io.quarkus.runtime.logging.FileConfig$RotationConfig$$accessor: void set_maxFileSize(java.lang.Object,java.lang.Object)>(v2, v6);
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-backup-index");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
v12 = virtualinvoke v11.<java.lang.Integer: int intValue()>();
staticinvoke <io.quarkus.runtime.logging.FileConfig$RotationConfig$$accessor: void set_maxBackupIndex(java.lang.Object,int)>(v2, v12);
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file-suffix");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
staticinvoke <io.quarkus.runtime.logging.FileConfig$RotationConfig$$accessor: void set_fileSuffix(java.lang.Object,java.lang.Object)>(v2, v17);
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rotate-on-boot");
v20 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v21 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label16:
v22 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v20, v21);
v23 = virtualinvoke v22.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.FileConfig$RotationConfig$$accessor: void set_rotateOnBoot(java.lang.Object,boolean)>(v2, v23);
label17:
goto label20;
label18:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v20, v24);
goto label20;
label19:
v25 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v20, v25);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
}
private static void rtParseKey:quarkus:log:handler:file:*:async:overflow(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async:AsyncConfig#overflow(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async:AsyncConfig#overflow(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:file:*:async:queue-length(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async:AsyncConfig#queueLength(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async:AsyncConfig#queueLength(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:file:*:enable(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#enable(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#enable(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:encoding(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#encoding(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#encoding(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#filter(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#filter(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:format(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#format(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#format(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#level(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#level(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:path(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#path(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#path(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:rotation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("file-suffix");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:rotation:file-suffix(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-backup-index");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:rotation:max-backup-index(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-file-size");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:rotation:max-file-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("rotate-on-boot");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:file:*:rotation:rotate-on-boot(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void rtParseKey:quarkus:log:handler:file:*:rotation:file-suffix(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#fileSuffix(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#fileSuffix(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_rotation(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.FileConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v5.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:file:*:rotation:max-backup-index(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#maxBackupIndex(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#maxBackupIndex(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_rotation(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:file:*:rotation:max-file-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#maxFileSize(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#maxFileSize(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_rotation(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:file:*:rotation:rotate-on-boot(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#rotateOnBoot(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation:RotationConfig#rotateOnBoot(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#fileHandlers:*:FileConfig#rotation(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.FileConfig$$accessor: java.lang.Object get_rotation(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:syslog(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:log:handler:syslog:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v19, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v2, v5, v6, v7, v8, v9;
java.util.Set v20, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("app-name");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:app-name(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("block-on-reconnect");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:block-on-reconnect(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:enable(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("endpoint");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:endpoint(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("facility");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:facility(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:format(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("hostname");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:hostname(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("protocol");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:protocol(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog-type");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:syslog-type(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("truncate");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:truncate(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-counting-framing");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:use-counting-framing(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v20 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v20.<java.util.HashSet: boolean add(java.lang.Object)>(v19);
return;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:app-name(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#appName(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#appName(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map syslogHandlers>;
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.runtime.logging.LogConfig v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.runtime.logging.LogConfig LogConfig>;
return v2;
}
static void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v21, v26, v31, v36, v41, v47, v5, v53, v59, v64, v69;
io.quarkus.runtime.logging.AsyncConfig v73;
java.lang.StringBuilder v1;
java.lang.String v10, v15, v20, v25, v30, v35, v4, v40, v46, v52, v58, v63, v68;
boolean v43, v49, v55, v7;
int v3;
java.util.NoSuchElementException v14, v19, v24, v29, v34, v39, v45, v51, v57, v62, v67, v72, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v23, v28, v33, v38, v44, v50, v56, v61, v66, v71, v8;
java.lang.Object v12, v17, v2, v22, v27, v32, v37, v42, v48, v54, v6, v60, v65, v70;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enable");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_enable(java.lang.Object,boolean)>(v2, v7);
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endpoint");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$15>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_endpoint(java.lang.Object,java.lang.Object)>(v2, v12);
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app-name");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_appName(java.lang.Object,java.lang.Object)>(v2, v17);
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hostname");
v20 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v21 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label16:
v22 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v20, v21);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_hostname(java.lang.Object,java.lang.Object)>(v2, v22);
label17:
goto label20;
label18:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v20, v23);
goto label20;
label19:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v20, v24);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("facility");
v25 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v26 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$16>;
label21:
v27 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v25, v26);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_facility(java.lang.Object,java.lang.Object)>(v2, v27);
label22:
goto label25;
label23:
v28 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v25, v28);
goto label25;
label24:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v25, v29);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syslog-type");
v30 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v31 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$17>;
label26:
v32 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v30, v31);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_syslogType(java.lang.Object,java.lang.Object)>(v2, v32);
label27:
goto label30;
label28:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v30, v33);
goto label30;
label29:
v34 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v30, v34);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protocol");
v35 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v36 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$18>;
label31:
v37 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v35, v36);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_protocol(java.lang.Object,java.lang.Object)>(v2, v37);
label32:
goto label35;
label33:
v38 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v35, v38);
goto label35;
label34:
v39 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v35, v39);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use-counting-framing");
v40 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v41 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label36:
v42 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v40, v41);
v43 = virtualinvoke v42.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_useCountingFraming(java.lang.Object,boolean)>(v2, v43);
label37:
goto label40;
label38:
v44 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v40, v44);
goto label40;
label39:
v45 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v40, v45);
label40:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("truncate");
v46 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v47 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label41:
v48 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v46, v47);
v49 = virtualinvoke v48.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_truncate(java.lang.Object,boolean)>(v2, v49);
label42:
goto label45;
label43:
v50 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v46, v50);
goto label45;
label44:
v51 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v46, v51);
label45:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("block-on-reconnect");
v52 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v53 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label46:
v54 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v52, v53);
v55 = virtualinvoke v54.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_blockOnReconnect(java.lang.Object,boolean)>(v2, v55);
label47:
goto label50;
label48:
v56 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v52, v56);
goto label50;
label49:
v57 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v52, v57);
label50:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format");
v58 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v59 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label51:
v60 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v58, v59);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_format(java.lang.Object,java.lang.Object)>(v2, v60);
label52:
goto label55;
label53:
v61 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v58, v61);
goto label55;
label54:
v62 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v58, v62);
label55:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level");
v63 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v64 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
label56:
v65 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v63, v64);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_level(java.lang.Object,java.lang.Object)>(v2, v65);
label57:
goto label60;
label58:
v66 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v63, v66);
goto label60;
label59:
v67 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v63, v67);
label60:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filter");
v68 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v69 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label61:
v70 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v68, v69);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_filter(java.lang.Object,java.lang.Object)>(v2, v70);
label62:
goto label65;
label63:
v71 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v68, v71);
goto label65;
label64:
v72 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v68, v72);
label65:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("async");
v73 = new io.quarkus.runtime.logging.AsyncConfig;
specialinvoke v73.<io.quarkus.runtime.logging.AsyncConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$AsyncConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v73);
staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: void set_async(java.lang.Object,java.lang.Object)>(v2, v73);
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
catch java.util.NoSuchElementException from label36 to label37 with label39;
catch java.lang.IllegalArgumentException from label41 to label42 with label43;
catch java.util.NoSuchElementException from label41 to label42 with label44;
catch java.lang.IllegalArgumentException from label46 to label47 with label48;
catch java.util.NoSuchElementException from label46 to label47 with label49;
catch java.lang.IllegalArgumentException from label51 to label52 with label53;
catch java.util.NoSuchElementException from label51 to label52 with label54;
catch java.lang.IllegalArgumentException from label56 to label57 with label58;
catch java.util.NoSuchElementException from label56 to label57 with label59;
catch java.lang.IllegalArgumentException from label61 to label62 with label63;
catch java.util.NoSuchElementException from label61 to label62 with label64;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async:AsyncConfig#enable(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:async:overflow(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:handler:syslog:*:async:queue-length(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async:AsyncConfig#enable(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:async:overflow(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async:AsyncConfig#overflow(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async:AsyncConfig#overflow(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:async:queue-length(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async:AsyncConfig#queueLength(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async:AsyncConfig#queueLength(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2, v3;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#async(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = staticinvoke <io.quarkus.runtime.logging.SyslogConfig$$accessor: java.lang.Object get_async(java.lang.Object)>(v2);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:block-on-reconnect(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#blockOnReconnect(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#blockOnReconnect(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:enable(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#enable(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#enable(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:endpoint(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#endpoint(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#endpoint(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:facility(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#facility(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#facility(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#filter(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#filter(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:format(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#format(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#format(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:hostname(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#hostname(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#hostname(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#level(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#level(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:protocol(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#protocol(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#protocol(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:syslog-type(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#syslogType(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#syslogType(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:truncate(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#truncate(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#truncate(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handler:syslog:*:use-counting-framing(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#useCountingFraming(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*:SyslogConfig#useCountingFraming(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
io.quarkus.runtime.logging.SyslogConfig v5;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:log:LogConfig#syslogHandlers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v5.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:log:handlers(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v19, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v2, v5, v6, v7, v8, v9;
java.util.Set v20, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("app-name");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:app-name(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("async");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:async(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("block-on-reconnect");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:block-on-reconnect(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:enable(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("endpoint");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:endpoint(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("facility");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:facility(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:filter(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("format");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:format(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("hostname");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:hostname(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("level");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:level(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("protocol");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:protocol(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("syslog-type");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:syslog-type(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("truncate");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:truncate(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-counting-framing");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:use-counting-framing(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v20 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v20.<java.util.HashSet: boolean add(java.lang.Object)>(v19);
return;
}
private static void rtParseKey:quarkus:log:syslog:app-name(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:async(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("overflow");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:async:overflow(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-length");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:log:syslog:async:queue-length(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:log:syslog:async:overflow(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:async:queue-length(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:block-on-reconnect(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:enable(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:endpoint(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:facility(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:filter(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:format(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:hostname(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:level(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:protocol(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:syslog-type(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:truncate(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:syslog:use-counting-framing(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:log:metrics(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:profile(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:shutdown(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("timeout");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:shutdown:timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:shutdown:timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:smallrye-graphql-client(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v23, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v5, v6, v7, v8, v9;
java.util.Set v24, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("allow-unexpected-response-fields");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:allow-unexpected-response-fields(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("execute-single-result-operations-over-websocket");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:execute-single-result-operations-over-websocket(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("header");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:header(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("init-payload");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:init-payload(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-store");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:key-store(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-store-password");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:key-store-password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-store-type");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:key-store-type(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-redirects");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:max-redirects(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-host");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-host(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-password");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-port");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-port(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("proxy-username");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-username(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("subprotocols");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:subprotocols(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-store");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:trust-store(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-store-password");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:trust-store-password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-store-type");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:trust-store-type(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("url");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:url(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("websocket-initialization-timeout");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:websocket-initialization-timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v24 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v24.<java.util.HashSet: boolean add(java.lang.Object)>(v23);
return;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:allow-unexpected-response-fields(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#allowUnexpectedResponseFields(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#allowUnexpectedResponseFields(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig: java.util.Map clients>;
return v3;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig GraphQLClientsConfig>;
return v2;
}
static void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v21, v26, v31, v36, v41, v46, v5, v51, v56, v61, v66, v71, v76, v82;
java.lang.StringBuilder v1;
java.lang.String v10, v15, v20, v25, v30, v35, v4, v40, v45, v50, v55, v60, v65, v70, v75, v81;
java.util.TreeMap v80, v9;
int v3;
java.util.NoSuchElementException v14, v19, v24, v29, v34, v39, v44, v49, v54, v59, v64, v69, v74, v79, v8, v85;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v23, v28, v33, v38, v43, v48, v53, v58, v63, v68, v7, v73, v78, v84;
java.lang.Object v12, v17, v2, v22, v27, v32, v37, v42, v47, v52, v57, v6, v62, v67, v72, v77, v83;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional url> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("header");
v9 = new java.util.TreeMap;
specialinvoke v9.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Map headers> = v9;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subprotocols");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional subprotocols> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("execute-single-result-operations-over-websocket");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$6>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional executeSingleResultOperationsOverWebsocket> = v17;
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("websocket-initialization-timeout");
v20 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v21 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label16:
v22 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v20, v21);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.OptionalInt websocketInitializationTimeout> = v22;
label17:
goto label20;
label18:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v20, v23);
goto label20;
label19:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v20, v24);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-store");
v25 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v26 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label21:
v27 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v25, v26);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional trustStore> = v27;
label22:
goto label25;
label23:
v28 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v25, v28);
goto label25;
label24:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v25, v29);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-store-password");
v30 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v31 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label26:
v32 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v30, v31);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional trustStorePassword> = v32;
label27:
goto label30;
label28:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v30, v33);
goto label30;
label29:
v34 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v30, v34);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-store-type");
v35 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v36 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label31:
v37 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v35, v36);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional trustStoreType> = v37;
label32:
goto label35;
label33:
v38 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v35, v38);
goto label35;
label34:
v39 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v35, v39);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key-store");
v40 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v41 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label36:
v42 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v40, v41);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional keyStore> = v42;
label37:
goto label40;
label38:
v43 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v40, v43);
goto label40;
label39:
v44 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v40, v44);
label40:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key-store-password");
v45 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v46 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label41:
v47 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v45, v46);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional keyStorePassword> = v47;
label42:
goto label45;
label43:
v48 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v45, v48);
goto label45;
label44:
v49 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v45, v49);
label45:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key-store-type");
v50 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v51 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label46:
v52 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v50, v51);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional keyStoreType> = v52;
label47:
goto label50;
label48:
v53 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v50, v53);
goto label50;
label49:
v54 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v50, v54);
label50:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy-host");
v55 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v56 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label51:
v57 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v55, v56);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional proxyHost> = v57;
label52:
goto label55;
label53:
v58 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v55, v58);
goto label55;
label54:
v59 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v55, v59);
label55:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy-port");
v60 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v61 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label56:
v62 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v60, v61);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.OptionalInt proxyPort> = v62;
label57:
goto label60;
label58:
v63 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v60, v63);
goto label60;
label59:
v64 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v60, v64);
label60:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy-username");
v65 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v66 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label61:
v67 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v65, v66);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional proxyUsername> = v67;
label62:
goto label65;
label63:
v68 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v65, v68);
goto label65;
label64:
v69 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v65, v69);
label65:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy-password");
v70 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v71 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label66:
v72 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v70, v71);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional proxyPassword> = v72;
label67:
goto label70;
label68:
v73 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v70, v73);
goto label70;
label69:
v74 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v70, v74);
label70:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-redirects");
v75 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v76 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label71:
v77 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v75, v76);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.OptionalInt maxRedirects> = v77;
label72:
goto label75;
label73:
v78 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v75, v78);
goto label75;
label74:
v79 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v75, v79);
label75:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init-payload");
v80 = new java.util.TreeMap;
specialinvoke v80.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Map initPayload> = v80;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allow-unexpected-response-fields");
v81 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v82 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$6>;
label76:
v83 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v81, v82);
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional allowUnexpectedResponseFields> = v83;
label77:
goto label80;
label78:
v84 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v81, v84);
goto label80;
label79:
v85 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v81, v85);
label80:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
catch java.util.NoSuchElementException from label36 to label37 with label39;
catch java.lang.IllegalArgumentException from label41 to label42 with label43;
catch java.util.NoSuchElementException from label41 to label42 with label44;
catch java.lang.IllegalArgumentException from label46 to label47 with label48;
catch java.util.NoSuchElementException from label46 to label47 with label49;
catch java.lang.IllegalArgumentException from label51 to label52 with label53;
catch java.util.NoSuchElementException from label51 to label52 with label54;
catch java.lang.IllegalArgumentException from label56 to label57 with label58;
catch java.util.NoSuchElementException from label56 to label57 with label59;
catch java.lang.IllegalArgumentException from label61 to label62 with label63;
catch java.util.NoSuchElementException from label61 to label62 with label64;
catch java.lang.IllegalArgumentException from label66 to label67 with label68;
catch java.util.NoSuchElementException from label66 to label67 with label69;
catch java.lang.IllegalArgumentException from label71 to label72 with label73;
catch java.util.NoSuchElementException from label71 to label72 with label74;
catch java.lang.IllegalArgumentException from label76 to label77 with label78;
catch java.util.NoSuchElementException from label76 to label77 with label79;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:execute-single-result-operations-over-websocket(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#executeSingleResultOperationsOverWebsocket(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#executeSingleResultOperationsOverWebsocket(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:header(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:header:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:header:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
org.eclipse.microprofile.config.spi.Converter v6;
java.lang.Object v4, v7;
java.lang.String v3, v5, v8;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v4 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#headers:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
v7 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v5, v6);
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v7);
return;
label1:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#headers:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#headers(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Map headers>;
return v3;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#headers(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:init-payload(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:smallrye-graphql-client:*:init-payload:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:init-payload:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
org.eclipse.microprofile.config.spi.Converter v6;
java.lang.Object v4, v7;
java.lang.String v3, v5, v8;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v4 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#initPayload:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
v7 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v5, v6);
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v7);
return;
label1:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#initPayload:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#initPayload(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v3 = v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Map initPayload>;
return v3;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#initPayload(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:key-store(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#keyStore(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#keyStore(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:key-store-password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#keyStorePassword(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#keyStorePassword(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:key-store-type(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#keyStoreType(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#keyStoreType(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:max-redirects(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#maxRedirects(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#maxRedirects(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-host(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyHost(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyHost(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyPassword(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyPassword(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-port(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyPort(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyPort(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:proxy-username(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyUsername(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#proxyUsername(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:subprotocols(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#subprotocols(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#subprotocols(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:trust-store(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#trustStore(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#trustStore(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:trust-store-password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#trustStorePassword(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#trustStorePassword(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:trust-store-type(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#trustStoreType(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#trustStoreType(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:url(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#url(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#url(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:smallrye-graphql-client:*:websocket-initialization-timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#websocketInitializationTimeout(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*:GraphQLClientConfig#websocketInitializationTimeout(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v5;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:smallrye-graphql-client:GraphQLClientsConfig#clients:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
specialinvoke v5.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:stork(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:stork:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("load-balancer");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*:load-balancer(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("service-discovery");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*:service-discovery(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:stork:*:load-balancer(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*:load-balancer:type(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*:load-balancer:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:stork:*:load-balancer:type(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer:StorkLoadBalancerConfiguration#type(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer:StorkLoadBalancerConfiguration#type(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.stork.StorkLoadBalancerConfiguration v3;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.ServiceConfiguration: io.quarkus.stork.StorkLoadBalancerConfiguration loadBalancer>;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.stork.ServiceConfiguration v5;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.stork.ServiceConfiguration;
specialinvoke v5.<io.quarkus.stork.ServiceConfiguration: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$stork$ServiceConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.StorkConfiguration: java.util.Map serviceConfiguration>;
return v3;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.stork.StorkConfiguration v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = <io.quarkus.runtime.generated.Config: io.quarkus.stork.StorkConfiguration StorkConfiguration>;
return v2;
}
static void initGroup$io$quarkus$stork$ServiceConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
int v3;
io.quarkus.stork.StorkServiceDiscoveryConfiguration v4;
java.lang.Object v2;
java.lang.StringBuilder v1;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.stork.StorkLoadBalancerConfiguration v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("service-discovery");
v4 = new io.quarkus.stork.StorkServiceDiscoveryConfiguration;
specialinvoke v4.<io.quarkus.stork.StorkServiceDiscoveryConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$stork$StorkServiceDiscoveryConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v4);
v2.<io.quarkus.stork.ServiceConfiguration: io.quarkus.stork.StorkServiceDiscoveryConfiguration serviceDiscovery> = v4;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("load-balancer");
v5 = new io.quarkus.stork.StorkLoadBalancerConfiguration;
specialinvoke v5.<io.quarkus.stork.StorkLoadBalancerConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$stork$StorkLoadBalancerConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v5);
v2.<io.quarkus.stork.ServiceConfiguration: io.quarkus.stork.StorkLoadBalancerConfiguration loadBalancer> = v5;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
}
static void initGroup$io$quarkus$stork$StorkServiceDiscoveryConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
java.util.TreeMap v9;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.stork.StorkServiceDiscoveryConfiguration: java.lang.String type> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
v9 = new java.util.TreeMap;
specialinvoke v9.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.stork.StorkServiceDiscoveryConfiguration: java.util.Map params> = v9;
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$stork$StorkLoadBalancerConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
java.util.TreeMap v9;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.stork.StorkLoadBalancerConfiguration: java.lang.String type> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
v9 = new java.util.TreeMap;
specialinvoke v9.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.stork.StorkLoadBalancerConfiguration: java.util.Map parameters> = v9;
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
private static void rtParseKey:quarkus:stork:*:load-balancer:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
org.eclipse.microprofile.config.spi.Converter v6;
java.lang.Object v4, v7;
java.lang.String v3, v5, v8;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v4 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer:StorkLoadBalancerConfiguration#parameters:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
v7 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v5, v6);
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v7);
return;
label1:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer:StorkLoadBalancerConfiguration#parameters:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer:StorkLoadBalancerConfiguration#parameters(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.StorkLoadBalancerConfiguration: java.util.Map parameters>;
return v3;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer:StorkLoadBalancerConfiguration#parameters(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.stork.StorkLoadBalancerConfiguration v3;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#loadBalancer(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.ServiceConfiguration: io.quarkus.stork.StorkLoadBalancerConfiguration loadBalancer>;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:stork:*:service-discovery(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*:service-discovery:type(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:stork:*:service-discovery:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:stork:*:service-discovery:type(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery:StorkServiceDiscoveryConfiguration#type(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery:StorkServiceDiscoveryConfiguration#type(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.stork.StorkServiceDiscoveryConfiguration v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.ServiceConfiguration: io.quarkus.stork.StorkServiceDiscoveryConfiguration serviceDiscovery>;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.smallrye.config.SmallRyeConfig v1;
io.quarkus.stork.ServiceConfiguration v5;
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.Object v3, v4;
java.lang.StringBuilder v7;
java.lang.String v2, v6;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v3 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = new io.quarkus.stork.ServiceConfiguration;
specialinvoke v5.<io.quarkus.stork.ServiceConfiguration: void <init>()>();
v6 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getAllPreviousSegments()>();
v7 = new java.lang.StringBuilder;
specialinvoke v7.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$stork$ServiceConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v1, v7, v5);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
private static void rtParseKey:quarkus:stork:*:service-discovery:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
org.eclipse.microprofile.config.spi.Converter v6;
java.lang.Object v4, v7;
java.lang.String v3, v5, v8;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getPreviousSegment()>();
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v4 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery:StorkServiceDiscoveryConfiguration#params:*(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v1, v0);
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
v7 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v5, v6);
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v7);
return;
label1:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery:StorkServiceDiscoveryConfiguration#params:*(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.util.Map v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery:StorkServiceDiscoveryConfiguration#params(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.StorkServiceDiscoveryConfiguration: java.util.Map params>;
return v3;
}
static java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery:StorkServiceDiscoveryConfiguration#params(io.quarkus.runtime.configuration.NameIterator, io.smallrye.config.SmallRyeConfig)
{
io.quarkus.runtime.configuration.NameIterator v0;
io.quarkus.stork.StorkServiceDiscoveryConfiguration v3;
java.lang.Object v2;
io.smallrye.config.SmallRyeConfig v1;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 := @parameter1: io.smallrye.config.SmallRyeConfig;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void previous()>();
v2 = staticinvoke <io.quarkus.runtime.generated.Config: java.lang.Object rtGetEnclosing:stork:StorkConfiguration#serviceConfiguration:*:ServiceConfiguration#serviceDiscovery(io.quarkus.runtime.configuration.NameIterator,io.smallrye.config.SmallRyeConfig)>(v0, v1);
v3 = v2.<io.quarkus.stork.ServiceConfiguration: io.quarkus.stork.StorkServiceDiscoveryConfiguration serviceDiscovery>;
virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: void next()>();
return v3;
}
private static void rtParseKey:quarkus:thread-pool(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v14, v3;
boolean v10, v11, v12, v13, v2, v5, v6, v7, v8, v9;
java.util.Set v15, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("core-threads");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:core-threads(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("growth-resistance");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:growth-resistance(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("keep-alive-time");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:keep-alive-time(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-threads");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:max-threads(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("prefill");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:prefill(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-size");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:queue-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown-check-interval");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:shutdown-check-interval(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown-interrupt");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:shutdown-interrupt(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("shutdown-timeout");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:thread-pool:shutdown-timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v15 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v15.<java.util.HashSet: boolean add(java.lang.Object)>(v14);
return;
}
private static void rtParseKey:quarkus:thread-pool:core-threads(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:growth-resistance(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:keep-alive-time(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:max-threads(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:prefill(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:queue-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:shutdown-check-interval(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:shutdown-interrupt(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:thread-pool:shutdown-timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:uuid(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v23, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v5, v6, v7, v8, v9;
java.util.Set v24, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("caching");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:caching(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("classpath-resolving");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:classpath-resolving(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cluster");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("event-loops-pool-size");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:event-loops-pool-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("eventbus");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("growth-resistance");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:growth-resistance(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("internal-blocking-pool-size");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:internal-blocking-pool-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("keep-alive-time");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:keep-alive-time(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-event-loop-execute-time");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:max-event-loop-execute-time(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-worker-execute-time");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:max-worker-execute-time(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("prefer-native-transport");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:prefer-native-transport(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("prefill");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:prefill(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("queue-size");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:queue-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("resolver");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:resolver(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("use-async-dns");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:use-async-dns(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("warning-exception-time");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:warning-exception-time(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("worker-pool-size");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:worker-pool-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("customize-arc-context");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v24 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v24.<java.util.HashSet: boolean add(java.lang.Object)>(v23);
return;
}
private static void rtParseKey:quarkus:vertx:caching(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:classpath-resolving(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v13, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v12, v3;
boolean v10, v11, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("clustered");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:clustered(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("host");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:host(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ping-interval");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:ping-interval(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ping-reply-interval");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:ping-reply-interval(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("port");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:port(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("public-host");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:public-host(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("public-port");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:cluster:public-port(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v13 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v13.<java.util.HashSet: boolean add(java.lang.Object)>(v12);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:clustered(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:host(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:ping-interval(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:ping-reply-interval(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:port(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:public-host(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:cluster:public-port(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:event-loops-pool-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v27, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v5, v6, v7, v8, v9;
java.util.Set v28, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("accept-backlog");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:accept-backlog(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("client-auth");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:client-auth(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("connect-timeout");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:connect-timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("idle-timeout");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:idle-timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-certificate-jks");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-jks(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-certificate-pem");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-pem(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("key-certificate-pfx");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-pfx(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("receive-buffer-size");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:receive-buffer-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reconnect-attempts");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:reconnect-attempts(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reconnect-interval");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:reconnect-interval(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reuse-address");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:reuse-address(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reuse-port");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:reuse-port(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("send-buffer-size");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:send-buffer-size(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("soLinger");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:soLinger(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ssl");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:ssl(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tcp-keep-alive");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:tcp-keep-alive(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tcp-no-delay");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:tcp-no-delay(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("traffic-class");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:traffic-class(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-all");
if v23 == 0 goto label20;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-all(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label20:
v24 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-certificate-jks");
if v24 == 0 goto label21;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-jks(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label21:
v25 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-certificate-pem");
if v25 == 0 goto label22;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pem(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label22:
v26 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-certificate-pfx");
if v26 == 0 goto label23;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pfx(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label23:
v27 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v28 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v28.<java.util.HashSet: boolean add(java.lang.Object)>(v27);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:accept-backlog(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:client-auth(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:connect-timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:idle-timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-jks(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-jks:password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-jks:path(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-jks:password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-jks:path(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-pem(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("certs");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-pem:certs(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("keys");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-pem:keys(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-pem:certs(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-pem:keys(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-pfx(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-pfx:password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:key-certificate-pfx:path(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-pfx:password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:key-certificate-pfx:path(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:receive-buffer-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:reconnect-attempts(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:reconnect-interval(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:reuse-address(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:reuse-port(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:send-buffer-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:soLinger(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:ssl(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:tcp-keep-alive(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:tcp-no-delay(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:traffic-class(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-all(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-jks(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-jks:password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-jks:path(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-jks:password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-jks:path(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pem(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v5;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v4;
boolean v2, v3;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("certs");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pem:certs(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v5 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v5.<java.util.HashSet: boolean add(java.lang.Object)>(v4);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pem:certs(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pfx(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v6;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v5;
boolean v2, v3, v4;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pfx:password(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("path");
if v4 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pfx:path(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v6 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v6.<java.util.HashSet: boolean add(java.lang.Object)>(v5);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pfx:password(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:eventbus:trust-certificate-pfx:path(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:growth-resistance(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:internal-blocking-pool-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:keep-alive-time(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:max-event-loop-execute-time(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:max-worker-execute-time(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:prefer-native-transport(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:prefill(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:queue-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:resolver(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v11, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v10, v3;
boolean v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cache-max-time-to-live");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:resolver:cache-max-time-to-live(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cache-min-time-to-live");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:resolver:cache-min-time-to-live(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("cache-negative-time-to-live");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:resolver:cache-negative-time-to-live(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("max-queries");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:resolver:max-queries(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("query-timeout");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:vertx:resolver:query-timeout(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v11 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v11.<java.util.HashSet: boolean add(java.lang.Object)>(v10);
return;
}
private static void rtParseKey:quarkus:vertx:resolver:cache-max-time-to-live(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:resolver:cache-min-time-to-live(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:resolver:cache-negative-time-to-live(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:resolver:max-queries(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:resolver:query-timeout(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:use-async-dns(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:warning-exception-time(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:vertx:worker-pool-size(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v4;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v3;
boolean v2;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
}
private static void rtParseKey:quarkus:application(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("name");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ui-header");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("version");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:arc(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v22, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v5, v6, v7, v8, v9;
java.util.Set v23, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("auto-inject-fields");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("auto-producer-methods");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("context-propagation");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:arc:context-propagation(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("detect-unused-false-positives");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("detect-wrong-annotations");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("dev-mode");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:arc:dev-mode(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-dependency");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:arc:exclude-dependency(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-types");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("fail-on-intercepted-private-method");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("ignored-split-packages");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("remove-unused-beans");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("selected-alternatives");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("strict-compatibility");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("test");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:arc:test(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("transform-private-injected-fields");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("transform-unproxyable-classes");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("unremovable-types");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v23 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v23.<java.util.HashSet: boolean add(java.lang.Object)>(v22);
return;
}
private static void rtParseKey:quarkus:arc:context-propagation(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:arc:dev-mode(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("monitoring-enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:arc:exclude-dependency(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:arc:exclude-dependency:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:arc:exclude-dependency:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("artifact-id");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("classifier");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("group-id");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:arc:test(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-application-lifecycle-observers");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:bootstrap(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("effective-model-builder");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("misaligned-platform-imports");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("workspace-discovery");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:class-loading(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v10, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v9;
boolean v2, v5, v6, v7, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("parent-first-artifacts");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("reloadable-artifacts");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("removed-artifacts");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("removed-resources");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:class-loading:removed-resources(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v10 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v10.<java.util.HashSet: boolean add(java.lang.Object)>(v9);
return;
}
private static void rtParseKey:quarkus:class-loading:removed-resources(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:devservices(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("timeout");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:ide(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("target");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:index-dependency(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:index-dependency:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:index-dependency:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("artifact-id");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("classifier");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("group-id");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:jackson(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v14, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v13, v3;
boolean v10, v11, v12, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("accept-case-insensitive-enums");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("fail-on-empty-beans");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("fail-on-unknown-properties");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("property-naming-strategy");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("serialization-inclusion");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("timezone");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("write-dates-as-timestamps");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("write-durations-as-timestamps");
if v12 == 0 goto label9;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label9:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v14 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v14.<java.util.HashSet: boolean add(java.lang.Object)>(v13);
return;
}
private static void rtParseKey:quarkus:jni(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("library-paths");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:live-reload(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v13, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v12, v3;
boolean v10, v11, v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("connect-timeout");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("instrumentation");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("password");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("retry-interval");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("retry-max-attempts");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("url");
if v10 == 0 goto label7;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label7:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("watched-resources");
if v11 == 0 goto label8;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label8:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v13 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v13.<java.util.HashSet: boolean add(java.lang.Object)>(v12);
return;
}
private static void rtParseKey:quarkus:naming(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable-jndi");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:netty(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("allocator-max-order");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:package(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.lang.String v22, v3;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v5, v6, v7, v8, v9;
java.util.Set v23, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("add-runner-suffix");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("appcds-builder-image");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("appcds-use-container");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("create-appcds");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("filter-optional-dependencies");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-dependency-list");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("included-optional-dependencies");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("main-class");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("manifest");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:package:manifest(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("output-directory");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("output-name");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("quiltflower");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:package:quiltflower(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("runner-suffix");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("user-configured-ignored-entries");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("user-providers-directory");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("write-transformed-bytecode-to-build-output");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v23 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v23.<java.util.HashSet: boolean add(java.lang.Object)>(v22);
return;
}
private static void rtParseKey:quarkus:package:manifest(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("add-implementation-entries");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("attributes");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:package:manifest:attributes(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("manifest-sections");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:package:manifest:manifest-sections(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:package:manifest:attributes(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:package:manifest:manifest-sections(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:package:manifest:manifest-sections:*(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:package:manifest:manifest-sections:*(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:package:quiltflower(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enabled");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("jar-directory");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("version");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:platform(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v9;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v8;
boolean v2, v5, v6, v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("artifact-id");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("group-id");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("version");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v9 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v9.<java.util.HashSet: boolean add(java.lang.Object)>(v8);
return;
}
private static void rtParseKey:quarkus:snapstart(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v11, v4;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v10, v3;
boolean v2, v5, v6, v7, v8, v9;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("full-warmup");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("generate-application-class-list");
if v7 == 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label4:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("initialize-classes");
if v8 == 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label5:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("preload-classes");
if v9 == 0 goto label6;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label6:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v11 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v11.<java.util.HashSet: boolean add(java.lang.Object)>(v10);
return;
}
private static void rtParseKey:quarkus:ssl(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("native");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:test(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v5, v6, v7, v8, v9;
java.util.Set v32, v4;
java.lang.String v3, v31;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label01;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label01:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("arg-line");
if v5 == 0 goto label02;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label02:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("basic-console");
if v6 == 0 goto label03;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label03:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("class-clone-pattern");
if v7 == 0 goto label04;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label04:
v8 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("console");
if v8 == 0 goto label05;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label05:
v9 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("container");
if v9 == 0 goto label06;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:test:container(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label06:
v10 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("continuous-testing");
if v10 == 0 goto label07;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label07:
v11 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-color");
if v11 == 0 goto label08;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label08:
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("disable-console-input");
if v12 == 0 goto label09;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label09:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("display-test-output");
if v13 == 0 goto label10;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label10:
v14 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("enable-callbacks-for-integration-tests");
if v14 == 0 goto label11;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label11:
v15 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-engines");
if v15 == 0 goto label12;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label12:
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-module-pattern");
if v16 == 0 goto label13;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label13:
v17 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-pattern");
if v17 == 0 goto label14;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label14:
v18 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("exclude-tags");
if v18 == 0 goto label15;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label15:
v19 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("flat-class-path");
if v19 == 0 goto label16;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label16:
v20 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("hang-detection-timeout");
if v20 == 0 goto label17;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label17:
v21 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-engines");
if v21 == 0 goto label18;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label18:
v22 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-module-pattern");
if v22 == 0 goto label19;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label19:
v23 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-pattern");
if v23 == 0 goto label20;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label20:
v24 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("include-tags");
if v24 == 0 goto label21;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label21:
v25 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("integration-test-profile");
if v25 == 0 goto label22;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label22:
v26 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("native-image-profile");
if v26 == 0 goto label23;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label23:
v27 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("only-test-application-module");
if v27 == 0 goto label24;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label24:
v28 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("profile");
if v28 == 0 goto label25;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:test:profile(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label25:
v29 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("type");
if v29 == 0 goto label26;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label26:
v30 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("wait-time");
if v30 == 0 goto label27;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label27:
v31 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v32 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v32.<java.util.HashSet: boolean add(java.lang.Object)>(v31);
return;
}
private static void rtParseKey:quarkus:test:container(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v8;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v7;
boolean v2, v5, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("additional-exposed-ports");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtParseKey:quarkus:test:container:additional-exposed-ports(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("network");
if v6 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label3:
v7 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v8 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v8.<java.util.HashSet: boolean add(java.lang.Object)>(v7);
return;
}
private static void rtParseKey:quarkus:test:container:additional-exposed-ports(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
private static void rtParseKey:quarkus:test:profile(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v1;
java.util.Set v5;
io.smallrye.config.SmallRyeConfig v0;
java.lang.String v4;
boolean v2, v3;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
return;
label1:
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("tags");
if v3 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v4 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v5 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v5.<java.util.HashSet: boolean add(java.lang.Object)>(v4);
return;
}
private static void rtParseKey:quarkus:tls(io.smallrye.config.SmallRyeConfig, io.quarkus.runtime.configuration.NameIterator)
{
java.util.Set v4, v7;
io.smallrye.config.SmallRyeConfig v0;
io.quarkus.runtime.configuration.NameIterator v1;
java.lang.String v3, v6;
boolean v2, v5;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v4 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v4.<java.util.HashSet: boolean add(java.lang.Object)>(v3);
return;
label1:
v5 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean nextSegmentEquals(java.lang.String)>("trust-all");
if v5 == 0 goto label2;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
staticinvoke <io.quarkus.runtime.generated.Config: void rtEmptyParseKey(io.smallrye.config.SmallRyeConfig,io.quarkus.runtime.configuration.NameIterator)>(v0, v1);
return;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = <io.quarkus.runtime.generated.Config: java.util.Set unknownRuntime>;
virtualinvoke v7.<java.util.HashSet: boolean add(java.lang.Object)>(v6);
return;
}
static void initGroup$io$quarkus$jackson$runtime$JacksonBuildTimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v17, v23, v29, v35, v40, v45, v5;
boolean v13, v19, v25, v31, v7;
java.lang.StringBuilder v1;
int v3;
java.lang.String v10, v16, v22, v28, v34, v39, v4, v44;
java.util.NoSuchElementException v15, v21, v27, v33, v38, v43, v48, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v14, v20, v26, v32, v37, v42, v47, v8;
java.lang.Object v12, v18, v2, v24, v30, v36, v41, v46, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fail-on-unknown-properties");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: boolean failOnUnknownProperties> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fail-on-empty-beans");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v13 = virtualinvoke v12.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: boolean failOnEmptyBeans> = v13;
label07:
goto label10;
label08:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v14);
goto label10;
label09:
v15 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v15);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write-dates-as-timestamps");
v16 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v17 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label11:
v18 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v16, v17);
v19 = virtualinvoke v18.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: boolean writeDatesAsTimestamps> = v19;
label12:
goto label15;
label13:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v16, v20);
goto label15;
label14:
v21 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v16, v21);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write-durations-as-timestamps");
v22 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v23 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label16:
v24 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v22, v23);
v25 = virtualinvoke v24.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: boolean writeDurationsAsTimestamps> = v25;
label17:
goto label20;
label18:
v26 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v22, v26);
goto label20;
label19:
v27 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v22, v27);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accept-case-insensitive-enums");
v28 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v29 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label21:
v30 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v28, v29);
v31 = virtualinvoke v30.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: boolean acceptCaseInsensitiveEnums> = v31;
label22:
goto label25;
label23:
v32 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v28, v32);
goto label25;
label24:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v28, v33);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timezone");
v34 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v35 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$20>;
label26:
v36 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v34, v35);
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: java.util.Optional timezone> = v36;
label27:
goto label30;
label28:
v37 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v34, v37);
goto label30;
label29:
v38 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v34, v38);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serialization-inclusion");
v39 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v40 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$22>;
label31:
v41 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v39, v40);
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: java.util.Optional serializationInclusion> = v41;
label32:
goto label35;
label33:
v42 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v39, v42);
goto label35;
label34:
v43 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v39, v43);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property-naming-strategy");
v44 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v45 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label36:
v46 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v44, v45);
v2.<io.quarkus.jackson.runtime.JacksonBuildTimeConfig: java.util.Optional propertyNamingStrategy> = v46;
label37:
goto label40;
label38:
v47 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v44, v47);
goto label40;
label39:
v48 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v44, v48);
label40:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
catch java.util.NoSuchElementException from label36 to label37 with label39;
}
static void initGroup$io$quarkus$runtime$ApplicationConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v10, v15, v5;
int v3;
java.lang.String v14, v4, v9;
java.util.NoSuchElementException v13, v18, v8;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v12, v17, v7;
java.lang.Object v11, v16, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.ApplicationConfig: java.util.Optional name> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
v2.<io.quarkus.runtime.ApplicationConfig: java.util.Optional version> = v11;
label07:
goto label10;
label08:
v12 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v12);
goto label10;
label09:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v13);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ui-header");
v14 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v15 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v16 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v14, v15);
v2.<io.quarkus.runtime.ApplicationConfig: java.util.Optional uiHeader> = v16;
label12:
goto label15;
label13:
v17 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v14, v17);
goto label15;
label14:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v14, v18);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
}
static void initGroup$io$quarkus$runtime$LiveReloadConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v21, v26, v31, v36, v5;
boolean v7;
java.lang.StringBuilder v1;
int v3;
java.lang.String v10, v15, v20, v25, v30, v35, v4;
java.util.NoSuchElementException v14, v19, v24, v29, v34, v39, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v23, v28, v33, v38, v8;
java.lang.Object v12, v17, v2, v22, v27, v32, v37, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("instrumentation");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.LiveReloadConfig$$accessor: void set_instrumentation(java.lang.Object,boolean)>(v2, v7);
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("watched-resources");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.runtime.LiveReloadConfig: java.util.Optional watchedResources> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("password");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
v2.<io.quarkus.runtime.LiveReloadConfig: java.util.Optional password> = v17;
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url");
v20 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v21 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label16:
v22 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v20, v21);
v2.<io.quarkus.runtime.LiveReloadConfig: java.util.Optional url> = v22;
label17:
goto label20;
label18:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v20, v23);
goto label20;
label19:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v20, v24);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect-timeout");
v25 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v26 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label21:
v27 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v25, v26);
v2.<io.quarkus.runtime.LiveReloadConfig: java.time.Duration connectTimeout> = v27;
label22:
goto label25;
label23:
v28 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v25, v28);
goto label25;
label24:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v25, v29);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retry-interval");
v30 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v31 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label26:
v32 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v30, v31);
v2.<io.quarkus.runtime.LiveReloadConfig: java.time.Duration retryInterval> = v32;
label27:
goto label30;
label28:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v30, v33);
goto label30;
label29:
v34 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v30, v34);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retry-max-attempts");
v35 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v36 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$25>;
label31:
v37 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v35, v36);
v2.<io.quarkus.runtime.LiveReloadConfig: java.lang.Integer retryMaxAttempts> = v37;
label32:
goto label35;
label33:
v38 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v35, v38);
goto label35;
label34:
v39 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v35, v39);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
}
static void initGroup$io$quarkus$runtime$LocalesBuildTimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v12, v7;
org.eclipse.microprofile.config.spi.Converter v10, v5;
int v3;
java.lang.Object v11, v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4, v9;
java.util.NoSuchElementException v13, v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locales");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$26>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.LocalesBuildTimeConfig: java.util.Set locales> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default-locale");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$27>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
v2.<io.quarkus.runtime.LocalesBuildTimeConfig: java.util.Locale defaultLocale> = v11;
label07:
goto label10;
label08:
v12 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v12);
goto label10;
label09:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v13);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
}
static void initGroup$io$quarkus$runtime$TlsConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v8;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v9;
boolean v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-all");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.runtime.TlsConfig: boolean trustAll> = v7;
label2:
goto label5;
label3:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label5;
label4:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$logging$LogBuildTimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v5;
int v3;
java.lang.String v10, v4;
java.util.NoSuchElementException v14, v9;
boolean v7;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v8;
java.util.TreeMap v15;
java.lang.Object v12, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("metrics.enabled");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.runtime.logging.LogBuildTimeConfig: boolean metricsEnabled> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("min-level");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.runtime.logging.LogBuildTimeConfig: java.util.logging.Level minLevel> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("category");
v15 = new java.util.TreeMap;
specialinvoke v15.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.runtime.logging.LogBuildTimeConfig: java.util.Map categories> = v15;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
}
static void initGroup$io$quarkus$smallrye$graphql$client$runtime$GraphQLClientsConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
java.util.TreeMap v3;
java.lang.Object v2;
java.lang.StringBuilder v1;
io.smallrye.config.SmallRyeConfig v0;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v3 = new java.util.TreeMap;
specialinvoke v3.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig: java.util.Map clients> = v3;
return;
}
static void initGroup$io$quarkus$stork$StorkConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
java.util.TreeMap v3;
java.lang.Object v2;
java.lang.StringBuilder v1;
io.smallrye.config.SmallRyeConfig v0;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v3 = new java.util.TreeMap;
specialinvoke v3.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.stork.StorkConfiguration: java.util.Map serviceConfiguration> = v3;
return;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$VertxConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v17, v22, v27, v32, v38, v43, v49, v5, v54, v60, v65, v71, v80;
java.lang.StringBuilder v1;
java.lang.String v10, v16, v21, v26, v31, v37, v4, v42, v48, v53, v59, v64, v70, v79;
boolean v13, v67, v7, v73, v82;
float v56;
io.quarkus.vertx.core.runtime.config.ClusterConfiguration v77;
io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration v78;
int v3, v34, v45;
java.util.NoSuchElementException v15, v20, v25, v30, v36, v41, v47, v52, v58, v63, v69, v75, v84, v9;
io.quarkus.vertx.core.runtime.config.EventBusConfiguration v76;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v14, v19, v24, v29, v35, v40, v46, v51, v57, v62, v68, v74, v8, v83;
java.lang.Object v12, v18, v2, v23, v28, v33, v39, v44, v50, v55, v6, v61, v66, v72, v81;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caching");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: boolean caching> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classpath-resolving");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v13 = virtualinvoke v12.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: boolean classpathResolving> = v13;
label07:
goto label10;
label08:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v14);
goto label10;
label09:
v15 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v15);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("event-loops-pool-size");
v16 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v17 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label11:
v18 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v16, v17);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: java.util.OptionalInt eventLoopsPoolSize> = v18;
label12:
goto label15;
label13:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v16, v19);
goto label15;
label14:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v16, v20);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-event-loop-execute-time");
v21 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v22 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label16:
v23 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v21, v22);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: java.time.Duration maxEventLoopExecuteTime> = v23;
label17:
goto label20;
label18:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v21, v24);
goto label20;
label19:
v25 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v21, v25);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("warning-exception-time");
v26 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v27 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label21:
v28 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v26, v27);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: java.time.Duration warningExceptionTime> = v28;
label22:
goto label25;
label23:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v26, v29);
goto label25;
label24:
v30 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v26, v30);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("worker-pool-size");
v31 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v32 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label26:
v33 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v31, v32);
v34 = virtualinvoke v33.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: int workerPoolSize> = v34;
label27:
goto label30;
label28:
v35 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v31, v35);
goto label30;
label29:
v36 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v31, v36);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-worker-execute-time");
v37 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v38 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label31:
v39 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v37, v38);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: java.time.Duration maxWorkerExecuteTime> = v39;
label32:
goto label35;
label33:
v40 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v37, v40);
goto label35;
label34:
v41 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v37, v41);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("internal-blocking-pool-size");
v42 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v43 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label36:
v44 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v42, v43);
v45 = virtualinvoke v44.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: int internalBlockingPoolSize> = v45;
label37:
goto label40;
label38:
v46 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v42, v46);
goto label40;
label39:
v47 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v42, v47);
label40:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queue-size");
v48 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v49 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label41:
v50 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v48, v49);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: java.util.OptionalInt queueSize> = v50;
label42:
goto label45;
label43:
v51 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v48, v51);
goto label45;
label44:
v52 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v48, v52);
label45:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("growth-resistance");
v53 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v54 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$28>;
label46:
v55 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v53, v54);
v56 = virtualinvoke v55.<java.lang.Float: float floatValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: float growthResistance> = v56;
label47:
goto label50;
label48:
v57 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v53, v57);
goto label50;
label49:
v58 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v53, v58);
label50:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keep-alive-time");
v59 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v60 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label51:
v61 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v59, v60);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: java.time.Duration keepAliveTime> = v61;
label52:
goto label55;
label53:
v62 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v59, v62);
goto label55;
label54:
v63 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v59, v63);
label55:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefill");
v64 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v65 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label56:
v66 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v64, v65);
v67 = virtualinvoke v66.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: boolean prefill> = v67;
label57:
goto label60;
label58:
v68 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v64, v68);
goto label60;
label59:
v69 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v64, v69);
label60:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use-async-dns");
v70 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v71 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label61:
v72 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v70, v71);
v73 = virtualinvoke v72.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: boolean useAsyncDNS> = v73;
label62:
goto label65;
label63:
v74 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v70, v74);
goto label65;
label64:
v75 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v70, v75);
label65:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("eventbus");
v76 = new io.quarkus.vertx.core.runtime.config.EventBusConfiguration;
specialinvoke v76.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$EventBusConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v76);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: io.quarkus.vertx.core.runtime.config.EventBusConfiguration eventbus> = v76;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluster");
v77 = new io.quarkus.vertx.core.runtime.config.ClusterConfiguration;
specialinvoke v77.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$ClusterConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v77);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: io.quarkus.vertx.core.runtime.config.ClusterConfiguration cluster> = v77;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolver");
v78 = new io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration;
specialinvoke v78.<io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$AddressResolverConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v78);
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration resolver> = v78;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefer-native-transport");
v79 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v80 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label66:
v81 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v79, v80);
v82 = virtualinvoke v81.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.VertxConfiguration: boolean preferNativeTransport> = v82;
label67:
goto label70;
label68:
v83 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v79, v83);
goto label70;
label69:
v84 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v79, v84);
label70:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
catch java.util.NoSuchElementException from label36 to label37 with label39;
catch java.lang.IllegalArgumentException from label41 to label42 with label43;
catch java.util.NoSuchElementException from label41 to label42 with label44;
catch java.lang.IllegalArgumentException from label46 to label47 with label48;
catch java.util.NoSuchElementException from label46 to label47 with label49;
catch java.lang.IllegalArgumentException from label51 to label52 with label53;
catch java.util.NoSuchElementException from label51 to label52 with label54;
catch java.lang.IllegalArgumentException from label56 to label57 with label58;
catch java.util.NoSuchElementException from label56 to label57 with label59;
catch java.lang.IllegalArgumentException from label61 to label62 with label63;
catch java.util.NoSuchElementException from label61 to label62 with label64;
catch java.lang.IllegalArgumentException from label66 to label67 with label68;
catch java.util.NoSuchElementException from label66 to label67 with label69;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$EventBusConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v21, v26, v31, v36, v42, v47, v53, v59, v64, v69, v75, v81, v87, v92;
io.quarkus.vertx.core.runtime.config.PfxConfiguration v6, v9;
java.lang.StringBuilder v1;
io.quarkus.vertx.core.runtime.config.JksConfiguration v5, v8;
java.lang.String v10, v15, v20, v25, v30, v35, v41, v46, v52, v58, v63, v68, v74, v80, v86, v91;
boolean v49, v55, v71, v77, v83, v94;
io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration v4;
io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration v7;
int v3, v38;
java.util.NoSuchElementException v14, v19, v24, v29, v34, v40, v45, v51, v57, v62, v67, v73, v79, v85, v90, v96;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v23, v28, v33, v39, v44, v50, v56, v61, v66, v72, v78, v84, v89, v95;
java.lang.Object v12, v17, v2, v22, v27, v32, v37, v43, v48, v54, v60, v65, v70, v76, v82, v88, v93;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key-certificate-pem");
v4 = new io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration;
specialinvoke v4.<io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$PemKeyCertConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v4);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration keyCertificatePem> = v4;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key-certificate-jks");
v5 = new io.quarkus.vertx.core.runtime.config.JksConfiguration;
specialinvoke v5.<io.quarkus.vertx.core.runtime.config.JksConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$JksConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v5);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: io.quarkus.vertx.core.runtime.config.JksConfiguration keyCertificateJks> = v5;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key-certificate-pfx");
v6 = new io.quarkus.vertx.core.runtime.config.PfxConfiguration;
specialinvoke v6.<io.quarkus.vertx.core.runtime.config.PfxConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$PfxConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v6);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: io.quarkus.vertx.core.runtime.config.PfxConfiguration keyCertificatePfx> = v6;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-certificate-pem");
v7 = new io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration;
specialinvoke v7.<io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$PemTrustCertConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v7);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration trustCertificatePem> = v7;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-certificate-jks");
v8 = new io.quarkus.vertx.core.runtime.config.JksConfiguration;
specialinvoke v8.<io.quarkus.vertx.core.runtime.config.JksConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$JksConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v8);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: io.quarkus.vertx.core.runtime.config.JksConfiguration trustCertificateJks> = v8;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-certificate-pfx");
v9 = new io.quarkus.vertx.core.runtime.config.PfxConfiguration;
specialinvoke v9.<io.quarkus.vertx.core.runtime.config.PfxConfiguration: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$vertx$core$runtime$config$PfxConfiguration(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v9);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: io.quarkus.vertx.core.runtime.config.PfxConfiguration trustCertificatePfx> = v9;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accept-backlog");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label01:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.util.OptionalInt acceptBacklog> = v12;
label02:
goto label05;
label03:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label05;
label04:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("client-auth");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label06:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.lang.String clientAuth> = v17;
label07:
goto label10;
label08:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label10;
label09:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect-timeout");
v20 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v21 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label11:
v22 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v20, v21);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.time.Duration connectTimeout> = v22;
label12:
goto label15;
label13:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v20, v23);
goto label15;
label14:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v20, v24);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("idle-timeout");
v25 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v26 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$29>;
label16:
v27 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v25, v26);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.util.Optional idleTimeout> = v27;
label17:
goto label20;
label18:
v28 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v25, v28);
goto label20;
label19:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v25, v29);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("receive-buffer-size");
v30 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v31 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label21:
v32 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v30, v31);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.util.OptionalInt receiveBufferSize> = v32;
label22:
goto label25;
label23:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v30, v33);
goto label25;
label24:
v34 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v30, v34);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reconnect-attempts");
v35 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v36 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label26:
v37 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v35, v36);
v38 = virtualinvoke v37.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: int reconnectAttempts> = v38;
label27:
goto label30;
label28:
v39 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v35, v39);
goto label30;
label29:
v40 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v35, v40);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reconnect-interval");
v41 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v42 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label31:
v43 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v41, v42);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.time.Duration reconnectInterval> = v43;
label32:
goto label35;
label33:
v44 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v41, v44);
goto label35;
label34:
v45 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v41, v45);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reuse-address");
v46 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v47 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label36:
v48 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v46, v47);
v49 = virtualinvoke v48.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: boolean reuseAddress> = v49;
label37:
goto label40;
label38:
v50 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v46, v50);
goto label40;
label39:
v51 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v46, v51);
label40:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reuse-port");
v52 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v53 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label41:
v54 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v52, v53);
v55 = virtualinvoke v54.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: boolean reusePort> = v55;
label42:
goto label45;
label43:
v56 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v52, v56);
goto label45;
label44:
v57 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v52, v57);
label45:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("send-buffer-size");
v58 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v59 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label46:
v60 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v58, v59);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.util.OptionalInt sendBufferSize> = v60;
label47:
goto label50;
label48:
v61 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v58, v61);
goto label50;
label49:
v62 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v58, v62);
label50:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("soLinger");
v63 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v64 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label51:
v65 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v63, v64);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.util.OptionalInt soLinger> = v65;
label52:
goto label55;
label53:
v66 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v63, v66);
goto label55;
label54:
v67 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v63, v67);
label55:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ssl");
v68 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v69 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label56:
v70 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v68, v69);
v71 = virtualinvoke v70.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: boolean ssl> = v71;
label57:
goto label60;
label58:
v72 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v68, v72);
goto label60;
label59:
v73 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v68, v73);
label60:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tcp-keep-alive");
v74 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v75 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label61:
v76 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v74, v75);
v77 = virtualinvoke v76.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: boolean tcpKeepAlive> = v77;
label62:
goto label65;
label63:
v78 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v74, v78);
goto label65;
label64:
v79 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v74, v79);
label65:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tcp-no-delay");
v80 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v81 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label66:
v82 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v80, v81);
v83 = virtualinvoke v82.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: boolean tcpNoDelay> = v83;
label67:
goto label70;
label68:
v84 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v80, v84);
goto label70;
label69:
v85 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v80, v85);
label70:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("traffic-class");
v86 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v87 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label71:
v88 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v86, v87);
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: java.util.OptionalInt trafficClass> = v88;
label72:
goto label75;
label73:
v89 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v86, v89);
goto label75;
label74:
v90 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v86, v90);
label75:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trust-all");
v91 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v92 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label76:
v93 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v91, v92);
v94 = virtualinvoke v93.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.EventBusConfiguration: boolean trustAll> = v94;
label77:
goto label80;
label78:
v95 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v91, v95);
goto label80;
label79:
v96 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v91, v96);
label80:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
catch java.util.NoSuchElementException from label36 to label37 with label39;
catch java.lang.IllegalArgumentException from label41 to label42 with label43;
catch java.util.NoSuchElementException from label41 to label42 with label44;
catch java.lang.IllegalArgumentException from label46 to label47 with label48;
catch java.util.NoSuchElementException from label46 to label47 with label49;
catch java.lang.IllegalArgumentException from label51 to label52 with label53;
catch java.util.NoSuchElementException from label51 to label52 with label54;
catch java.lang.IllegalArgumentException from label56 to label57 with label58;
catch java.util.NoSuchElementException from label56 to label57 with label59;
catch java.lang.IllegalArgumentException from label61 to label62 with label63;
catch java.util.NoSuchElementException from label61 to label62 with label64;
catch java.lang.IllegalArgumentException from label66 to label67 with label68;
catch java.util.NoSuchElementException from label66 to label67 with label69;
catch java.lang.IllegalArgumentException from label71 to label72 with label73;
catch java.util.NoSuchElementException from label71 to label72 with label74;
catch java.lang.IllegalArgumentException from label76 to label77 with label78;
catch java.util.NoSuchElementException from label76 to label77 with label79;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$PemKeyCertConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v5;
int v3;
java.lang.String v10, v15, v4;
java.util.NoSuchElementException v14, v19, v9;
boolean v7;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v8;
java.lang.Object v12, v17, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration: boolean enabled> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keys");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration: java.util.Optional keys> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certs");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
v2.<io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration: java.util.Optional certs> = v17;
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$JksConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v5;
int v3;
java.lang.String v10, v15, v4;
java.util.NoSuchElementException v14, v19, v9;
boolean v7;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v8;
java.lang.Object v12, v17, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.JksConfiguration: boolean enabled> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.vertx.core.runtime.config.JksConfiguration: java.util.Optional path> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("password");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
v2.<io.quarkus.vertx.core.runtime.config.JksConfiguration: java.util.Optional password> = v17;
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$PfxConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v16, v5;
int v3;
java.lang.String v10, v15, v4;
java.util.NoSuchElementException v14, v19, v9;
boolean v7;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v18, v8;
java.lang.Object v12, v17, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.PfxConfiguration: boolean enabled> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.vertx.core.runtime.config.PfxConfiguration: java.util.Optional path> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("password");
v15 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v16 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v15, v16);
v2.<io.quarkus.vertx.core.runtime.config.PfxConfiguration: java.util.Optional password> = v17;
label12:
goto label15;
label13:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v15, v18);
goto label15;
label14:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v15, v19);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$PemTrustCertConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v13, v8;
org.eclipse.microprofile.config.spi.Converter v11, v5;
int v3;
java.lang.Object v12, v2, v6;
java.lang.StringBuilder v1;
java.lang.String v10, v4;
java.util.NoSuchElementException v14, v9;
boolean v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration: boolean enabled> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certs");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v2.<io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration: java.util.Optional certs> = v12;
label07:
goto label10;
label08:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v13);
goto label10;
label09:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v14);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$ClusterConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v10, v15, v20, v25, v31, v36, v5;
boolean v27;
java.lang.StringBuilder v1;
int v3;
java.lang.String v14, v19, v24, v30, v35, v4, v9;
java.util.NoSuchElementException v13, v18, v23, v29, v34, v39, v8;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v12, v17, v22, v28, v33, v38, v7;
java.lang.Object v11, v16, v2, v21, v26, v32, v37, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$3>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: java.lang.String host> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("port");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: java.util.OptionalInt port> = v11;
label07:
goto label10;
label08:
v12 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v12);
goto label10;
label09:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v13);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public-host");
v14 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v15 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label11:
v16 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v14, v15);
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: java.util.Optional publicHost> = v16;
label12:
goto label15;
label13:
v17 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v14, v17);
goto label15;
label14:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v14, v18);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public-port");
v19 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v20 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label16:
v21 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v19, v20);
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: java.util.OptionalInt publicPort> = v21;
label17:
goto label20;
label18:
v22 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v19, v22);
goto label20;
label19:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v19, v23);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clustered");
v24 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v25 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label21:
v26 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v24, v25);
v27 = virtualinvoke v26.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: boolean clustered> = v27;
label22:
goto label25;
label23:
v28 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v24, v28);
goto label25;
label24:
v29 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v24, v29);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ping-interval");
v30 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v31 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label26:
v32 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v30, v31);
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: java.time.Duration pingInterval> = v32;
label27:
goto label30;
label28:
v33 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v30, v33);
goto label30;
label29:
v34 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v30, v34);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ping-reply-interval");
v35 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v36 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label31:
v37 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v35, v36);
v2.<io.quarkus.vertx.core.runtime.config.ClusterConfiguration: java.time.Duration pingReplyInterval> = v37;
label32:
goto label35;
label33:
v38 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v35, v38);
goto label35;
label34:
v39 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v35, v39);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
}
static void initGroup$io$quarkus$vertx$core$runtime$config$AddressResolverConfiguration(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v17, v23, v29, v5;
java.lang.StringBuilder v1;
int v13, v19, v25, v3, v7;
java.lang.String v10, v16, v22, v28, v4;
java.util.NoSuchElementException v15, v21, v27, v32, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v14, v20, v26, v31, v8;
java.lang.Object v12, v18, v2, v24, v30, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cache-max-time-to-live");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration: int cacheMaxTimeToLive> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cache-min-time-to-live");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v13 = virtualinvoke v12.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration: int cacheMinTimeToLive> = v13;
label07:
goto label10;
label08:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v14);
goto label10;
label09:
v15 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v15);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cache-negative-time-to-live");
v16 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v17 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label11:
v18 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v16, v17);
v19 = virtualinvoke v18.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration: int cacheNegativeTimeToLive> = v19;
label12:
goto label15;
label13:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v16, v20);
goto label15;
label14:
v21 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v16, v21);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-queries");
v22 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v23 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label16:
v24 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v22, v23);
v25 = virtualinvoke v24.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration: int maxQueries> = v25;
label17:
goto label20;
label18:
v26 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v22, v26);
goto label20;
label19:
v27 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v22, v27);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query-timeout");
v28 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v29 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label21:
v30 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v28, v29);
v2.<io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration: java.time.Duration queryTimeout> = v30;
label22:
goto label25;
label23:
v31 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v28, v31);
goto label25;
label24:
v32 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v28, v32);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
}
static void initGroup$io$quarkus$runtime$BannerRuntimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v8;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v9;
boolean v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enabled");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.runtime.BannerRuntimeConfig: boolean enabled> = v7;
label2:
goto label5;
label3:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label5;
label4:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$CommandLineRuntimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.CommandLineRuntimeConfig: java.util.Optional args> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$ConfigConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v10, v15, v20, v5;
int v3;
java.lang.String v14, v19, v4, v9;
java.util.NoSuchElementException v13, v18, v23, v8;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v12, v17, v22, v7;
java.lang.Object v11, v16, v2, v21, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("profile");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.ConfigConfig: java.util.Optional profile> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("config.profile.parent");
v9 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v10 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label06:
v11 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v9, v10);
v2.<io.quarkus.runtime.ConfigConfig: java.util.Optional profileParent> = v11;
label07:
goto label10;
label08:
v12 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v9, v12);
goto label10;
label09:
v13 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v9, v13);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("config.locations");
v14 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v15 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$30>;
label11:
v16 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v14, v15);
v2.<io.quarkus.runtime.ConfigConfig: java.util.Optional locations> = v16;
label12:
goto label15;
label13:
v17 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v14, v17);
goto label15;
label14:
v18 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v14, v18);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uuid");
v19 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v20 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$9>;
label16:
v21 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v19, v20);
v2.<io.quarkus.runtime.ConfigConfig: java.util.Optional uuid> = v21;
label17:
goto label20;
label18:
v22 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v19, v22);
goto label20;
label19:
v23 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v19, v23);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
}
static void initGroup$io$quarkus$runtime$DebugRuntimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v8;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v9;
boolean v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("print-startup-times");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
staticinvoke <io.quarkus.runtime.DebugRuntimeConfig$$accessor: void set_printStartupTimes(java.lang.Object,boolean)>(v2, v7);
label2:
goto label5;
label3:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label5;
label4:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$ThreadPoolConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
org.eclipse.microprofile.config.spi.Converter v11, v17, v22, v27, v33, v38, v43, v48, v5;
boolean v13;
float v29;
java.lang.StringBuilder v1;
int v3, v7;
java.lang.String v10, v16, v21, v26, v32, v37, v4, v42, v47;
java.util.NoSuchElementException v15, v20, v25, v31, v36, v41, v46, v51, v9;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v14, v19, v24, v30, v35, v40, v45, v50, v8;
java.lang.Object v12, v18, v2, v23, v28, v34, v39, v44, v49, v6;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("core-threads");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$8>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Integer: int intValue()>();
v2.<io.quarkus.runtime.ThreadPoolConfig: int coreThreads> = v7;
label02:
goto label05;
label03:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label05;
label04:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefill");
v10 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v11 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label06:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v10, v11);
v13 = virtualinvoke v12.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.runtime.ThreadPoolConfig: boolean prefill> = v13;
label07:
goto label10;
label08:
v14 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v10, v14);
goto label10;
label09:
v15 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v10, v15);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max-threads");
v16 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v17 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label11:
v18 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v16, v17);
v2.<io.quarkus.runtime.ThreadPoolConfig: java.util.OptionalInt maxThreads> = v18;
label12:
goto label15;
label13:
v19 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v16, v19);
goto label15;
label14:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v16, v20);
label15:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queue-size");
v21 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v22 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$19>;
label16:
v23 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v21, v22);
v2.<io.quarkus.runtime.ThreadPoolConfig: java.util.OptionalInt queueSize> = v23;
label17:
goto label20;
label18:
v24 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v21, v24);
goto label20;
label19:
v25 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v21, v25);
label20:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("growth-resistance");
v26 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v27 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$28>;
label21:
v28 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v26, v27);
v29 = virtualinvoke v28.<java.lang.Float: float floatValue()>();
v2.<io.quarkus.runtime.ThreadPoolConfig: float growthResistance> = v29;
label22:
goto label25;
label23:
v30 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v26, v30);
goto label25;
label24:
v31 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v26, v31);
label25:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shutdown-timeout");
v32 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v33 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label26:
v34 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v32, v33);
v2.<io.quarkus.runtime.ThreadPoolConfig: java.time.Duration shutdownTimeout> = v34;
label27:
goto label30;
label28:
v35 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v32, v35);
goto label30;
label29:
v36 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v32, v36);
label30:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shutdown-interrupt");
v37 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v38 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label31:
v39 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v37, v38);
v2.<io.quarkus.runtime.ThreadPoolConfig: java.time.Duration shutdownInterrupt> = v39;
label32:
goto label35;
label33:
v40 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v37, v40);
goto label35;
label34:
v41 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v37, v41);
label35:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shutdown-check-interval");
v42 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v43 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$29>;
label36:
v44 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v42, v43);
v2.<io.quarkus.runtime.ThreadPoolConfig: java.util.Optional shutdownCheckInterval> = v44;
label37:
goto label40;
label38:
v45 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v42, v45);
goto label40;
label39:
v46 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v42, v46);
label40:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keep-alive-time");
v47 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v48 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$24>;
label41:
v49 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v47, v48);
v2.<io.quarkus.runtime.ThreadPoolConfig: java.time.Duration keepAliveTime> = v49;
label42:
goto label45;
label43:
v50 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v47, v50);
goto label45;
label44:
v51 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v47, v51);
label45:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
catch java.lang.IllegalArgumentException from label11 to label12 with label13;
catch java.util.NoSuchElementException from label11 to label12 with label14;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.util.NoSuchElementException from label16 to label17 with label19;
catch java.lang.IllegalArgumentException from label21 to label22 with label23;
catch java.util.NoSuchElementException from label21 to label22 with label24;
catch java.lang.IllegalArgumentException from label26 to label27 with label28;
catch java.util.NoSuchElementException from label26 to label27 with label29;
catch java.lang.IllegalArgumentException from label31 to label32 with label33;
catch java.util.NoSuchElementException from label31 to label32 with label34;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
catch java.util.NoSuchElementException from label36 to label37 with label39;
catch java.lang.IllegalArgumentException from label41 to label42 with label43;
catch java.util.NoSuchElementException from label41 to label42 with label44;
}
static void initGroup$io$quarkus$runtime$configuration$ConfigurationRuntimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("build-time-mismatch-at-runtime");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$33>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.configuration.ConfigurationRuntimeConfig: io.quarkus.runtime.configuration.ConfigurationRuntimeConfig$BuildTimeMismatchAtRuntime buildTimeMismatchAtRuntime> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$console$ConsoleRuntimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$6>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.console.ConsoleRuntimeConfig: java.util.Optional color> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$init$InitRuntimeConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v8;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v9;
boolean v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init-and-exit");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$4>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v2.<io.quarkus.runtime.init.InitRuntimeConfig: boolean initAndExit> = v7;
label2:
goto label5;
label3:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v8);
goto label5;
label4:
v9 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v9);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
static void initGroup$io$quarkus$runtime$logging$LogConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.quarkus.runtime.logging.ConsoleConfig v9;
org.eclipse.microprofile.config.spi.Converter v18, v5;
int v3;
java.lang.String v17, v4;
java.util.NoSuchElementException v21, v8;
io.quarkus.runtime.logging.FileConfig v10;
io.quarkus.runtime.logging.SyslogConfig v11;
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v20, v7;
java.util.TreeMap v12, v13, v14, v15, v16;
java.lang.Object v19, v2, v6;
java.lang.StringBuilder v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$5>;
label01:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.logging.LogConfig: java.util.logging.Level level> = v6;
label02:
goto label05;
label03:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label05;
label04:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label05:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("console");
v9 = new io.quarkus.runtime.logging.ConsoleConfig;
specialinvoke v9.<io.quarkus.runtime.logging.ConsoleConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$ConsoleConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v9);
v2.<io.quarkus.runtime.logging.LogConfig: io.quarkus.runtime.logging.ConsoleConfig console> = v9;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file");
v10 = new io.quarkus.runtime.logging.FileConfig;
specialinvoke v10.<io.quarkus.runtime.logging.FileConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$FileConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v10);
v2.<io.quarkus.runtime.logging.LogConfig: io.quarkus.runtime.logging.FileConfig file> = v10;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syslog");
v11 = new io.quarkus.runtime.logging.SyslogConfig;
specialinvoke v11.<io.quarkus.runtime.logging.SyslogConfig: void <init>()>();
staticinvoke <io.quarkus.runtime.generated.Config: void initGroup$io$quarkus$runtime$logging$SyslogConfig(io.smallrye.config.SmallRyeConfig,java.lang.StringBuilder,java.lang.Object)>(v0, v1, v11);
v2.<io.quarkus.runtime.logging.LogConfig: io.quarkus.runtime.logging.SyslogConfig syslog> = v11;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("category");
v12 = new java.util.TreeMap;
specialinvoke v12.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map categories> = v12;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handler.console");
v13 = new java.util.TreeMap;
specialinvoke v13.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map consoleHandlers> = v13;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handler.file");
v14 = new java.util.TreeMap;
specialinvoke v14.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map fileHandlers> = v14;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handler.syslog");
v15 = new java.util.TreeMap;
specialinvoke v15.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map syslogHandlers> = v15;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filter");
v16 = new java.util.TreeMap;
specialinvoke v16.<java.util.TreeMap: void <init>()>();
v2.<io.quarkus.runtime.logging.LogConfig: java.util.Map filters> = v16;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlers");
v17 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v18 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$1>;
label06:
v19 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v17, v18);
staticinvoke <io.quarkus.runtime.logging.LogConfig$$accessor: void set_handlers(java.lang.Object,java.lang.Object)>(v2, v19);
label07:
goto label10;
label08:
v20 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v17, v20);
goto label10;
label09:
v21 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v17, v21);
label10:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label01 to label02 with label03;
catch java.util.NoSuchElementException from label01 to label02 with label04;
catch java.lang.IllegalArgumentException from label06 to label07 with label08;
catch java.util.NoSuchElementException from label06 to label07 with label09;
}
static void initGroup$io$quarkus$runtime$shutdown$ShutdownConfig(io.smallrye.config.SmallRyeConfig, java.lang.StringBuilder, java.lang.Object)
{
io.smallrye.config.SmallRyeConfig v0;
java.lang.IllegalArgumentException v7;
org.eclipse.microprofile.config.spi.Converter v5;
int v3;
java.lang.Object v2, v6;
java.lang.StringBuilder v1;
java.lang.String v4;
java.util.NoSuchElementException v8;
v0 := @parameter0: io.smallrye.config.SmallRyeConfig;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeout");
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = <io.quarkus.runtime.generated.Config: org.eclipse.microprofile.config.spi.Converter conv$29>;
label1:
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfig: java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)>(v4, v5);
v2.<io.quarkus.runtime.shutdown.ShutdownConfig: java.util.Optional timeout> = v6;
label2:
goto label5;
label3:
v7 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void invalidValue(java.lang.String,java.lang.IllegalArgumentException)>(v4, v7);
goto label5;
label4:
v8 := @caughtexception;
staticinvoke <io.quarkus.runtime.configuration.ConfigDiagnostic: void missingValue(java.lang.String,java.util.NoSuchElementException)>(v4, v8);
label5:
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v3);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.util.NoSuchElementException from label1 to label2 with label4;
}
public static void ensureInitialized()
{
return;
}
public static io.quarkus.runtime.generated.Config createBootstrapConfig()
{
io.quarkus.runtime.generated.Config v0;
v0 = new io.quarkus.runtime.generated.Config;
specialinvoke v0.<io.quarkus.runtime.generated.Config: void <init>()>();
<io.quarkus.runtime.generated.Config: io.quarkus.runtime.generated.Config INSTANCE> = v0;
virtualinvoke v0.<io.quarkus.runtime.generated.Config: void readBootstrapConfig()>();
return v0;
}
}