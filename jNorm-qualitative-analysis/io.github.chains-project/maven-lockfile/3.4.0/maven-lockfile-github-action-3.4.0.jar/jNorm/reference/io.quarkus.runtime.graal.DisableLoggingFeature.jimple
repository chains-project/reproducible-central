public class io.quarkus.runtime.graal.DisableLoggingFeature extends java.lang.Object implements org.graalvm.nativeimage.hosted.Feature
{
private static final java.lang.String[] CATEGORIES;
private final java.util.Map categoryMap;
public void <init>()
{
io.quarkus.runtime.graal.DisableLoggingFeature v0;
int v3;
java.lang.String[] v2;
java.util.HashMap v1;
v0 := @this: io.quarkus.runtime.graal.DisableLoggingFeature;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
v2 = <io.quarkus.runtime.graal.DisableLoggingFeature: java.lang.String[] CATEGORIES>;
v3 = lengthof v2;
specialinvoke v1.<java.util.HashMap: void <init>(int)>(v3);
v0.<io.quarkus.runtime.graal.DisableLoggingFeature: java.util.Map categoryMap> = v1;
return;
}
public void beforeAnalysis(org.graalvm.nativeimage.hosted.Feature$BeforeAnalysisAccess)
{
java.lang.String[] v2;
java.util.logging.Logger v6;
org.graalvm.nativeimage.hosted.Feature$BeforeAnalysisAccess v1;
java.util.logging.Level v8, v9;
io.quarkus.runtime.graal.DisableLoggingFeature v0;
java.util.Map v7;
int v3, v4;
java.lang.String v5;
v0 := @this: io.quarkus.runtime.graal.DisableLoggingFeature;
v1 := @parameter0: org.graalvm.nativeimage.hosted.Feature$BeforeAnalysisAccess;
v2 = <io.quarkus.runtime.graal.DisableLoggingFeature: java.lang.String[] CATEGORIES>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
v6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v5);
v7 = v0.<io.quarkus.runtime.graal.DisableLoggingFeature: java.util.Map categoryMap>;
v8 = virtualinvoke v6.<java.util.logging.Logger: java.util.logging.Level getLevel()>();
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v8);
v9 = <java.util.logging.Level: java.util.logging.Level WARNING>;
virtualinvoke v6.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(v9);
v4 = v4 + 1;
goto label1;
label2:
return;
}
public void afterAnalysis(org.graalvm.nativeimage.hosted.Feature$AfterAnalysisAccess)
{
org.graalvm.nativeimage.hosted.Feature$AfterAnalysisAccess v1;
java.lang.String[] v2;
java.util.logging.Logger v8;
io.quarkus.runtime.graal.DisableLoggingFeature v0;
java.util.Map v6;
int v3, v4;
java.lang.Object v7;
java.lang.String v5;
v0 := @this: io.quarkus.runtime.graal.DisableLoggingFeature;
v1 := @parameter0: org.graalvm.nativeimage.hosted.Feature$AfterAnalysisAccess;
v2 = <io.quarkus.runtime.graal.DisableLoggingFeature: java.lang.String[] CATEGORIES>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = v0.<io.quarkus.runtime.graal.DisableLoggingFeature: java.util.Map categoryMap>;
v7 = interfaceinvoke v6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v5);
if v7 == null goto label2;
v8 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v5);
virtualinvoke v8.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(v7);
label2:
v4 = v4 + 1;
goto label1;
label3:
return;
}
public java.lang.String getDescription()
{
io.quarkus.runtime.graal.DisableLoggingFeature v0;
v0 := @this: io.quarkus.runtime.graal.DisableLoggingFeature;
return "Disables INFO logging during the analysis phase";
}
static void <clinit>()
{
java.lang.String[] v0;
v0 = newarray (java.lang.String)[1];
v0[0] = "org.jboss.threads";
<io.quarkus.runtime.graal.DisableLoggingFeature: java.lang.String[] CATEGORIES> = v0;
return;
}
}