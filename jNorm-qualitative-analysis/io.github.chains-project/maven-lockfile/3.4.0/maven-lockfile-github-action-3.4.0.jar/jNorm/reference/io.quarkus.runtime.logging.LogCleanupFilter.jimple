public class io.quarkus.runtime.logging.LogCleanupFilter extends java.lang.Object implements java.util.logging.Filter
{
final java.util.Map filterElements;
public static final java.lang.String SHUTDOWN_MESSAGE;
private final io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier shutdownNotifier;
public void <init>(java.util.Collection, io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier)
{
java.util.Iterator v4;
java.util.Collection v1;
java.util.HashMap v3;
io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier v2;
io.quarkus.runtime.logging.LogCleanupFilter v0;
java.util.Map v7;
java.lang.Object v6;
java.lang.String v8;
boolean v5;
v0 := @this: io.quarkus.runtime.logging.LogCleanupFilter;
v1 := @parameter0: java.util.Collection;
v2 := @parameter1: io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
v0.<io.quarkus.runtime.logging.LogCleanupFilter: java.util.Map filterElements> = v3;
v0.<io.quarkus.runtime.logging.LogCleanupFilter: io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier shutdownNotifier> = v2;
v4 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = v0.<io.quarkus.runtime.logging.LogCleanupFilter: java.util.Map filterElements>;
v8 = virtualinvoke v6.<io.quarkus.runtime.logging.LogCleanupFilterElement: java.lang.String getLoggerName()>();
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v8, v6);
goto label1;
label2:
return;
}
public boolean isLoggable(java.util.logging.LogRecord)
{
java.util.Map v16;
boolean v21, v24, v32, v35, v7, v9;
java.util.logging.LogRecord v1;
java.util.List v19;
org.jboss.logging.Logger v31, v34;
java.util.logging.Level v12, v14, v2, v25, v26;
io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier v6;
int v13, v15, v27, v29, v3, v5;
java.lang.String v10, v11, v17, v23, v30, v33, v8;
java.util.Iterator v20;
io.quarkus.runtime.logging.LogCleanupFilter v0;
org.jboss.logmanager.Level v28, v4;
java.lang.Object v18, v22;
v0 := @this: io.quarkus.runtime.logging.LogCleanupFilter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = virtualinvoke v1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
v3 = virtualinvoke v2.<java.util.logging.Level: int intValue()>();
v4 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level ERROR>;
v5 = virtualinvoke v4.<org.jboss.logmanager.Level: int intValue()>();
if v3 < v5 goto label1;
v6 = v0.<io.quarkus.runtime.logging.LogCleanupFilter: io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier shutdownNotifier>;
v7 = v6.<io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier: boolean shutdown>;
if v7 == 0 goto label1;
v8 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
v9 = virtualinvoke v8.<java.lang.String: boolean endsWith(java.lang.String)>(" [Error Occurred After Shutdown]");
if v9 != 0 goto label1;
v10 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 [Error Occurred After Shutdown]");
virtualinvoke v1.<java.util.logging.LogRecord: void setMessage(java.lang.String)>(v11);
label1:
v12 = virtualinvoke v1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
v13 = virtualinvoke v12.<java.util.logging.Level: int intValue()>();
v14 = <java.util.logging.Level: java.util.logging.Level WARNING>;
v15 = virtualinvoke v14.<java.util.logging.Level: int intValue()>();
if v13 <= v15 goto label2;
return 1;
label2:
v16 = v0.<io.quarkus.runtime.logging.LogCleanupFilter: java.util.Map filterElements>;
v17 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();
v18 = interfaceinvoke v16.<java.util.Map: java.lang.Object get(java.lang.Object)>(v17);
if v18 == null goto label5;
v19 = virtualinvoke v18.<io.quarkus.runtime.logging.LogCleanupFilterElement: java.util.List getMessageStarts()>();
v20 = interfaceinvoke v19.<java.util.List: java.util.Iterator iterator()>();
label3:
v21 = interfaceinvoke v20.<java.util.Iterator: boolean hasNext()>();
if v21 == 0 goto label5;
v22 = interfaceinvoke v20.<java.util.Iterator: java.lang.Object next()>();
v23 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
v24 = virtualinvoke v23.<java.lang.String: boolean startsWith(java.lang.String)>(v22);
if v24 == 0 goto label3;
v25 = virtualinvoke v18.<io.quarkus.runtime.logging.LogCleanupFilterElement: java.util.logging.Level getTargetLevel()>();
virtualinvoke v1.<java.util.logging.LogRecord: void setLevel(java.util.logging.Level)>(v25);
v26 = virtualinvoke v18.<io.quarkus.runtime.logging.LogCleanupFilterElement: java.util.logging.Level getTargetLevel()>();
v27 = virtualinvoke v26.<java.util.logging.Level: int intValue()>();
v28 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level TRACE>;
v29 = virtualinvoke v28.<org.jboss.logmanager.Level: int intValue()>();
if v27 > v29 goto label4;
v30 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();
v31 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.String)>(v30);
v32 = virtualinvoke v31.<org.jboss.logging.Logger: boolean isTraceEnabled()>();
return v32;
label4:
v33 = virtualinvoke v1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();
v34 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.String)>(v33);
v35 = virtualinvoke v34.<org.jboss.logging.Logger: boolean isDebugEnabled()>();
return v35;
label5:
return 1;
}
}