class io.quarkus.runtime.logging.LoggingSetupRecorder$7 extends java.util.logging.Handler
{
final java.util.logging.Handler val$delegate;
void <init>(java.util.logging.Handler)
{
io.quarkus.runtime.logging.LoggingSetupRecorder$7 v0;
java.util.logging.Handler v1;
v0 := @this: io.quarkus.runtime.logging.LoggingSetupRecorder$7;
v1 := @parameter0: java.util.logging.Handler;
v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$7: java.util.logging.Handler val$delegate> = v1;
specialinvoke v0.<java.util.logging.Handler: void <init>()>();
return;
}
public void publish(java.util.logging.LogRecord)
{
java.util.function.Consumer v4;
io.quarkus.runtime.logging.LoggingSetupRecorder$7 v0;
java.util.function.BiConsumer v2;
java.util.logging.Handler v3, v5;
java.util.logging.LogRecord v1;
v0 := @this: io.quarkus.runtime.logging.LoggingSetupRecorder$7;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = <io.quarkus.dev.console.CurrentAppExceptionHighlighter: java.util.function.BiConsumer THROWABLE_FORMATTER>;
if v2 == null goto label1;
v3 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$7: java.util.logging.Handler val$delegate>;
virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.quarkus.runtime.logging.LoggingSetupRecorder$7$publish__3030: java.util.function.Consumer bootstrap$(java.util.logging.Handler)>(v3);
interfaceinvoke v2.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v1, v4);
goto label2;
label1:
v5 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$7: java.util.logging.Handler val$delegate>;
virtualinvoke v5.<java.util.logging.Handler: void publish(java.util.logging.LogRecord)>(v1);
label2:
return;
}
public void flush()
{
io.quarkus.runtime.logging.LoggingSetupRecorder$7 v0;
java.util.logging.Handler v1;
v0 := @this: io.quarkus.runtime.logging.LoggingSetupRecorder$7;
v1 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$7: java.util.logging.Handler val$delegate>;
virtualinvoke v1.<java.util.logging.Handler: void flush()>();
return;
}
public void close() throws java.lang.SecurityException
{
io.quarkus.runtime.logging.LoggingSetupRecorder$7 v0;
java.util.logging.Handler v1;
v0 := @this: io.quarkus.runtime.logging.LoggingSetupRecorder$7;
v1 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$7: java.util.logging.Handler val$delegate>;
virtualinvoke v1.<java.util.logging.Handler: void close()>();
return;
}
}