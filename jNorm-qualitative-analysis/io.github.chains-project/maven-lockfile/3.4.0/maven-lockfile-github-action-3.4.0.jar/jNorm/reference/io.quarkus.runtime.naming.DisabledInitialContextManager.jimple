public class io.quarkus.runtime.naming.DisabledInitialContextManager extends java.lang.Object implements javax.naming.spi.InitialContextFactoryBuilder
{
public void <init>()
{
io.quarkus.runtime.naming.DisabledInitialContextManager v0;
v0 := @this: io.quarkus.runtime.naming.DisabledInitialContextManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static synchronized void register()
{
io.quarkus.runtime.naming.DisabledInitialContextManager v1;
java.lang.RuntimeException v3;
javax.naming.NamingException v2;
boolean v0;
v0 = staticinvoke <javax.naming.spi.NamingManager: boolean hasInitialContextFactoryBuilder()>();
if v0 != 0 goto label4;
label1:
v1 = new io.quarkus.runtime.naming.DisabledInitialContextManager;
specialinvoke v1.<io.quarkus.runtime.naming.DisabledInitialContextManager: void <init>()>();
staticinvoke <javax.naming.spi.NamingManager: void setInitialContextFactoryBuilder(javax.naming.spi.InitialContextFactoryBuilder)>(v1);
label2:
goto label4;
label3:
v2 := @caughtexception;
v3 = new java.lang.RuntimeException;
specialinvoke v3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to disable JNDI", v2);
throw v3;
label4:
return;
catch javax.naming.NamingException from label1 to label2 with label3;
}
public javax.naming.spi.InitialContextFactory createInitialContextFactory(java.util.Hashtable) throws javax.naming.NamingException
{
io.quarkus.runtime.naming.DisabledInitialContextManager v0;
java.util.Hashtable v1;
io.quarkus.runtime.naming.DisabledInitialContextManager$1 v2;
v0 := @this: io.quarkus.runtime.naming.DisabledInitialContextManager;
v1 := @parameter0: java.util.Hashtable;
v2 = new io.quarkus.runtime.naming.DisabledInitialContextManager$1;
specialinvoke v2.<io.quarkus.runtime.naming.DisabledInitialContextManager$1: void <init>(io.quarkus.runtime.naming.DisabledInitialContextManager)>(v0);
return v2;
}
}