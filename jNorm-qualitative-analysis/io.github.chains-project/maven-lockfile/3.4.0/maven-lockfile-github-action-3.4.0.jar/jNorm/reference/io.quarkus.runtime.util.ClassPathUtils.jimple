public class io.quarkus.runtime.util.ClassPathUtils extends java.lang.Object
{
private static final java.lang.String FILE;
private static final java.lang.String JAR;
public void <init>()
{
io.quarkus.runtime.util.ClassPathUtils v0;
v0 := @this: io.quarkus.runtime.util.ClassPathUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String toResourceName(java.nio.file.Path)
{
java.nio.file.FileSystem v1, v6;
java.lang.String v2, v4, v5, v7, v8;
java.nio.file.Path v0;
boolean v3;
v0 := @parameter0: java.nio.file.Path;
if v0 != null goto label1;
return null;
label1:
v1 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();
v2 = virtualinvoke v1.<java.nio.file.FileSystem: java.lang.String getSeparator()>();
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("/");
if v3 == 0 goto label2;
v4 = interfaceinvoke v0.<java.nio.file.Path: java.lang.String toString()>();
return v4;
label2:
v5 = interfaceinvoke v0.<java.nio.file.Path: java.lang.String toString()>();
v6 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();
v7 = virtualinvoke v6.<java.nio.file.FileSystem: java.lang.String getSeparator()>();
v8 = virtualinvoke v5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(v7, "/");
return v8;
}
public static void consumeAsStreams(java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v1;
java.lang.Thread v2;
java.lang.ClassLoader v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
staticinvoke <io.quarkus.runtime.util.ClassPathUtils: void consumeAsStreams(java.lang.ClassLoader,java.lang.String,java.util.function.Consumer)>(v3, v0, v1);
return;
}
public static void consumeAsStreams(java.lang.ClassLoader, java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v2;
java.util.Enumeration v3;
java.lang.Object v5;
java.lang.ClassLoader v0;
java.lang.String v1;
boolean v4;
v0 := @parameter0: java.lang.ClassLoader;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.function.Consumer;
v3 = virtualinvoke v0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(v1);
label1:
v4 = interfaceinvoke v3.<java.util.Enumeration: boolean hasMoreElements()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Enumeration: java.lang.Object nextElement()>();
staticinvoke <io.quarkus.runtime.util.ClassPathUtils: void consumeStream(java.net.URL,java.util.function.Consumer)>(v5, v2);
goto label1;
label2:
return;
}
public static void consumeAsPaths(java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v1;
java.lang.Thread v2;
java.lang.ClassLoader v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
staticinvoke <io.quarkus.runtime.util.ClassPathUtils: void consumeAsPaths(java.lang.ClassLoader,java.lang.String,java.util.function.Consumer)>(v3, v0, v1);
return;
}
public static void consumeAsPaths(java.lang.ClassLoader, java.lang.String, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v2;
java.util.Enumeration v3;
java.lang.Object v5;
java.lang.ClassLoader v0;
java.lang.String v1;
boolean v4;
v0 := @parameter0: java.lang.ClassLoader;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.function.Consumer;
v3 = virtualinvoke v0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(v1);
label1:
v4 = interfaceinvoke v3.<java.util.Enumeration: boolean hasMoreElements()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Enumeration: java.lang.Object nextElement()>();
staticinvoke <io.quarkus.runtime.util.ClassPathUtils: void consumeAsPath(java.net.URL,java.util.function.Consumer)>(v5, v2);
goto label1;
label2:
return;
}
public static void consumeAsPath(java.net.URL, java.util.function.Consumer)
{
java.util.function.Consumer v1;
java.util.function.Function v2;
java.net.URL v0;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <io.quarkus.runtime.util.ClassPathUtils$lambda_consumeAsPath_0__3035: java.util.function.Function bootstrap$(java.util.function.Consumer)>(v1);
staticinvoke <io.quarkus.runtime.util.ClassPathUtils: java.lang.Object processAsPath(java.net.URL,java.util.function.Function)>(v0, v2);
return;
}
public static java.lang.Object processAsPath(java.net.URL, java.util.function.Function)
{
java.net.URL v0, v7;
java.nio.file.Path v18, v28, v9;
boolean v27, v4;
java.nio.file.FileSystem v14;
java.io.UncheckedIOException v23;
java.lang.Throwable v21;
java.lang.String[] v17, v19;
java.util.function.Function v1;
int v15, v6;
java.lang.String v12, v13, v16, v2, v24, v25, v26, v3, v31, v32, v5, v8;
java.net.MalformedURLException v10;
java.io.IOException v22;
java.lang.RuntimeException v11;
java.lang.IllegalArgumentException v30;
java.lang.Object v20, v29;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Function;
v2 = "jar";
v3 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 == 0 goto label14;
v5 = virtualinvoke v0.<java.net.URL: java.lang.String getFile()>();
v6 = virtualinvoke v5.<java.lang.String: int lastIndexOf(int)>(33);
label01:
if v6 < 0 goto label02;
v7 = new java.net.URL;
v8 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v6);
specialinvoke v7.<java.net.URL: void <init>(java.lang.String)>(v8);
goto label03;
label02:
v7 = v0;
label03:
v9 = staticinvoke <io.quarkus.runtime.util.ClassPathUtils: java.nio.file.Path toLocalPath(java.net.URL)>(v7);
label04:
goto label06;
label05:
v10 := @caughtexception;
v11 = new java.lang.RuntimeException;
v12 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v6);
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to create a URL for \'\u0001\'");
specialinvoke v11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v13, v10);
throw v11;
label06:
v14 = staticinvoke <io.quarkus.fs.util.ZipUtils: java.nio.file.FileSystem newFileSystem(java.nio.file.Path)>(v9);
label07:
if v6 < 0 goto label08;
v15 = v6 + 1;
v16 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int)>(v15);
v17 = newarray (java.lang.String)[0];
v18 = virtualinvoke v14.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(v16, v17);
goto label09;
label08:
v19 = newarray (java.lang.String)[0];
v18 = virtualinvoke v14.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>("/", v19);
label09:
v20 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v18);
label10:
virtualinvoke v14.<java.nio.file.FileSystem: void close()>();
label11:
return v20;
label12:
v21 := @caughtexception;
throw v21;
label13:
v22 := @caughtexception;
v23 = new java.io.UncheckedIOException;
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.nio.file.Path)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to read \u0001");
specialinvoke v23.<java.io.UncheckedIOException: void <init>(java.lang.String,java.io.IOException)>(v24, v22);
throw v23;
label14:
v25 = "file";
v26 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v27 = virtualinvoke v25.<java.lang.String: boolean equals(java.lang.Object)>(v26);
if v27 == 0 goto label15;
v28 = staticinvoke <io.quarkus.runtime.util.ClassPathUtils: java.nio.file.Path toLocalPath(java.net.URL)>(v0);
v29 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v28);
return v29;
label15:
v30 = new java.lang.IllegalArgumentException;
v31 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v32 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.net.URL)>(v31, v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected protocol \u0001 for URL \u0001");
specialinvoke v30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v32);
throw v30;
catch java.net.MalformedURLException from label01 to label04 with label05;
catch java.lang.Throwable from label07 to label10 with label12;
catch java.io.IOException from label06 to label11 with label13;
}
public static void consumeStream(java.net.URL, java.util.function.Consumer) throws java.io.IOException
{
java.util.function.Consumer v1;
java.util.function.Function v2;
java.net.URL v0;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Consumer;
v2 = staticinvoke <io.quarkus.runtime.util.ClassPathUtils$lambda_consumeStream_1__3036: java.util.function.Function bootstrap$(java.util.function.Consumer)>(v1);
staticinvoke <io.quarkus.runtime.util.ClassPathUtils: java.lang.Object readStream(java.net.URL,java.util.function.Function)>(v0, v2);
return;
}
public static java.lang.Object readStream(java.net.URL, java.util.function.Function) throws java.io.IOException
{
java.lang.Throwable v16, v19, v8;
java.net.URL v0;
java.util.function.Function v1;
java.net.URLConnection v5;
java.nio.file.OpenOption[] v13;
java.lang.String v10, v2, v3, v9;
java.nio.file.Path v12;
boolean v11, v4;
java.lang.Object v15, v18, v7;
java.io.InputStream v14, v17, v6;
v0 := @parameter0: java.net.URL;
v1 := @parameter1: java.util.function.Function;
v2 = "jar";
v3 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 == 0 goto label05;
v5 = virtualinvoke v0.<java.net.URL: java.net.URLConnection openConnection()>();
virtualinvoke v5.<java.net.URLConnection: void setUseCaches(boolean)>(0);
v6 = virtualinvoke v5.<java.net.URLConnection: java.io.InputStream getInputStream()>();
label01:
v7 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v6);
label02:
if v6 == null goto label03;
virtualinvoke v6.<java.io.InputStream: void close()>();
label03:
return v7;
label04:
v8 := @caughtexception;
throw v8;
label05:
v9 = "file";
v10 = virtualinvoke v0.<java.net.URL: java.lang.String getProtocol()>();
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label10;
v12 = staticinvoke <io.quarkus.runtime.util.ClassPathUtils: java.nio.file.Path toLocalPath(java.net.URL)>(v0);
v13 = newarray (java.nio.file.OpenOption)[0];
v14 = staticinvoke <java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>(v12, v13);
label06:
v15 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v14);
label07:
if v14 == null goto label08;
virtualinvoke v14.<java.io.InputStream: void close()>();
label08:
return v15;
label09:
v16 := @caughtexception;
throw v16;
label10:
v17 = virtualinvoke v0.<java.net.URL: java.io.InputStream openStream()>();
label11:
v18 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v17);
label12:
if v17 == null goto label13;
virtualinvoke v17.<java.io.InputStream: void close()>();
label13:
return v18;
label14:
v19 := @caughtexception;
throw v19;
catch java.lang.Throwable from label01 to label02 with label04;
catch java.lang.Throwable from label06 to label07 with label09;
catch java.lang.Throwable from label11 to label12 with label14;
}
public static java.nio.file.Path toLocalPath(java.net.URL)
{
java.net.URL v0;
java.net.URISyntaxException v3;
java.lang.String v5;
java.net.URI v1;
java.lang.IllegalArgumentException v4;
java.nio.file.Path v2;
v0 := @parameter0: java.net.URL;
label1:
v1 = virtualinvoke v0.<java.net.URL: java.net.URI toURI()>();
v2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.net.URI)>(v1);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.net.URL)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to translate \u0001 to local path");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v3);
throw v4;
catch java.net.URISyntaxException from label1 to label2 with label3;
}
}