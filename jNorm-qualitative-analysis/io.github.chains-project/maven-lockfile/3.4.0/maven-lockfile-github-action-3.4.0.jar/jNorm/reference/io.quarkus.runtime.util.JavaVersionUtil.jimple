public class io.quarkus.runtime.util.JavaVersionUtil extends java.lang.Object
{
private static final java.util.regex.Pattern PATTERN;
private static boolean IS_JAVA_11_OR_NEWER;
private static boolean IS_JAVA_13_OR_NEWER;
private static boolean IS_GRAALVM_JDK;
private static boolean IS_JAVA_16_OR_OLDER;
private static boolean IS_JAVA_17_OR_NEWER;
public void <init>()
{
io.quarkus.runtime.util.JavaVersionUtil v0;
v0 := @this: io.quarkus.runtime.util.JavaVersionUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void performChecks()
{
java.util.regex.Matcher v2;
int v5;
java.lang.String v1, v10, v4;
java.util.regex.Pattern v0;
boolean v11, v12, v3, v6, v7, v8, v9;
v0 = <io.quarkus.runtime.util.JavaVersionUtil: java.util.regex.Pattern PATTERN>;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("java.specification.version", "");
v2 = virtualinvoke v0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v1);
v3 = virtualinvoke v2.<java.util.regex.Matcher: boolean matches()>();
if v3 == 0 goto label09;
v4 = virtualinvoke v2.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v4);
if v5 < 11 goto label01;
v6 = 1;
goto label02;
label01:
v6 = 0;
label02:
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_11_OR_NEWER> = v6;
if v5 < 13 goto label03;
v7 = 1;
goto label04;
label03:
v7 = 0;
label04:
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_13_OR_NEWER> = v7;
if v5 > 16 goto label05;
v8 = 1;
goto label06;
label05:
v8 = 0;
label06:
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_16_OR_OLDER> = v8;
if v5 < 17 goto label07;
v9 = 1;
goto label08;
label07:
v9 = 0;
label08:
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_17_OR_NEWER> = v9;
goto label10;
label09:
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_11_OR_NEWER> = 0;
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_13_OR_NEWER> = 0;
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_16_OR_OLDER> = 0;
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_17_OR_NEWER> = 0;
label10:
v10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor");
if v10 == null goto label11;
v11 = virtualinvoke v10.<java.lang.String: boolean startsWith(java.lang.String)>("GraalVM");
if v11 == 0 goto label11;
v12 = 1;
goto label12;
label11:
v12 = 0;
label12:
<io.quarkus.runtime.util.JavaVersionUtil: boolean IS_GRAALVM_JDK> = v12;
return;
}
public static boolean isJava11OrHigher()
{
boolean v0;
v0 = <io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_11_OR_NEWER>;
return v0;
}
public static boolean isJava13OrHigher()
{
boolean v0;
v0 = <io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_13_OR_NEWER>;
return v0;
}
public static boolean isJava16OrLower()
{
boolean v0;
v0 = <io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_16_OR_OLDER>;
return v0;
}
public static boolean isJava17OrHigher()
{
boolean v0;
v0 = <io.quarkus.runtime.util.JavaVersionUtil: boolean IS_JAVA_17_OR_NEWER>;
return v0;
}
public static boolean isGraalvmJdk()
{
boolean v0;
v0 = <io.quarkus.runtime.util.JavaVersionUtil: boolean IS_GRAALVM_JDK>;
return v0;
}
static void <clinit>()
{
java.util.regex.Pattern v0;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:1\\.)?(\\d+)");
<io.quarkus.runtime.util.JavaVersionUtil: java.util.regex.Pattern PATTERN> = v0;
staticinvoke <io.quarkus.runtime.util.JavaVersionUtil: void performChecks()>();
return;
}
}