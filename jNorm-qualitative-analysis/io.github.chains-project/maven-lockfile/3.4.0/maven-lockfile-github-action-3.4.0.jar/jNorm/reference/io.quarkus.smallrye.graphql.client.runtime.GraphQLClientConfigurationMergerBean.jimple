public class io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean extends java.lang.Object
{
private final org.jboss.logging.Logger logger;
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration upstreamConfigs;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig quarkusConfiguration;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientSupport support;
public void <init>()
{
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean v0;
org.jboss.logging.Logger v1;
v0 := @this: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/smallrye/graphql/client/runtime/GraphQLClientConfigurationMergerBean;");
v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: org.jboss.logging.Logger logger> = v1;
return;
}
void enhanceGraphQLConfiguration()
{
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean v0;
java.util.Map v10, v3;
boolean v11, v25, v6;
java.util.Set v4;
java.util.List v23;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v15, v16, v18, v28;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig v2;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientSupport v22, v9;
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v1, v14, v17, v27;
org.jboss.logging.Logger v30;
io.quarkus.runtime.LaunchMode v19, v20;
java.lang.String v21, v29, v31, v32;
java.util.Iterator v24, v5;
java.lang.Object v12, v13, v26, v7, v8;
v0 := @this: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean;
v1 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration getInstance()>();
v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration upstreamConfigs> = v1;
v2 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig quarkusConfiguration>;
v3 = v2.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientsConfig: java.util.Map clients>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label5;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientSupport support>;
v10 = virtualinvoke v9.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientSupport: java.util.Map getShortNamesToQualifiedNamesMapping()>();
if v10 == null goto label2;
v11 = interfaceinvoke v10.<java.util.Map: boolean containsKey(java.lang.Object)>(v8);
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Map: java.lang.Object get(java.lang.Object)>(v8);
goto label3;
label2:
v12 = v8;
label3:
v13 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
v14 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration upstreamConfigs>;
v15 = virtualinvoke v14.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientConfiguration getClient(java.lang.String)>(v12);
if v15 != null goto label4;
v16 = specialinvoke v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.smallrye.graphql.client.impl.GraphQLClientConfiguration toSmallRyeNativeConfiguration(io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig)>(v13);
v17 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration upstreamConfigs>;
virtualinvoke v17.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: void addClient(java.lang.String,io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v12, v16);
goto label1;
label4:
v18 = specialinvoke v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.smallrye.graphql.client.impl.GraphQLClientConfiguration toSmallRyeNativeConfiguration(io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig)>(v13);
virtualinvoke v15.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: io.smallrye.graphql.client.impl.GraphQLClientConfiguration merge(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v18);
goto label1;
label5:
v19 = staticinvoke <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode current()>();
v20 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode TEST>;
if v19 != v20 goto label8;
v21 = null;
v22 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientSupport support>;
v23 = virtualinvoke v22.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientSupport: java.util.List getKnownConfigKeys()>();
v24 = interfaceinvoke v23.<java.util.List: java.util.Iterator iterator()>();
label6:
v25 = interfaceinvoke v24.<java.util.Iterator: boolean hasNext()>();
if v25 == 0 goto label8;
v26 = interfaceinvoke v24.<java.util.Iterator: java.lang.Object next()>();
v27 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration upstreamConfigs>;
v28 = virtualinvoke v27.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientConfiguration getClient(java.lang.String)>(v26);
v29 = virtualinvoke v28.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getUrl()>();
if v29 != null goto label6;
if v21 != null goto label7;
v21 = specialinvoke v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: java.lang.String getTestingServerUrl()>();
label7:
v30 = v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: org.jboss.logging.Logger logger>;
v31 = specialinvoke v0.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean: java.lang.String maybeWithQuotes(java.lang.String)>(v26);
v32 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v26, v21, v31) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Automatically wiring the URL of GraphQL client named \u0001 to \u0001. If this is incorrect, please set it manually using the quarkus.smallrye-graphql-client.\u0001.url property. Also note that this autowiring is only supported during tests.");
virtualinvoke v30.<org.jboss.logging.Logger: void info(java.lang.Object)>(v32);
virtualinvoke v28.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setUrl(java.lang.String)>(v21);
goto label6;
label8:
return;
}
private java.lang.String maybeWithQuotes(java.lang.String)
{
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean v0;
java.lang.String v1, v3;
boolean v2;
v0 := @this: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");
if v2 == 0 goto label1;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\"\u0001\"");
return v3;
label1:
return v1;
}
private io.smallrye.graphql.client.impl.GraphQLClientConfiguration toSmallRyeNativeConfiguration(io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig)
{
java.util.function.IntConsumer v29, v35, v39;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean v0;
java.util.Map v3, v4;
java.util.Optional v11, v14, v16, v18, v20, v22, v24, v26, v30, v32, v36, v40, v5, v7, v9;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v2;
java.util.OptionalInt v28, v34, v38;
java.util.function.Function v6;
java.util.ArrayList v12;
java.util.function.Consumer v10, v15, v17, v19, v21, v23, v25, v27, v31, v33, v37, v41;
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig v1;
java.lang.Object v13, v8;
v0 := @this: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean;
v1 := @parameter0: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig;
v2 = new io.smallrye.graphql.client.impl.GraphQLClientConfiguration;
specialinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void <init>()>();
v3 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Map headers>;
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setHeaders(java.util.Map)>(v3);
v4 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Map initPayload>;
v5 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>(v4);
v6 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$lambda_toSmallRyeNativeConfiguration_0__294: java.util.function.Function bootstrap$()>();
v7 = virtualinvoke v5.<java.util.Optional: java.util.Optional map(java.util.function.Function)>(v6);
v8 = virtualinvoke v7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setInitPayload(java.util.Map)>(v8);
v9 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional url>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v10 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setUrl__295: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v9.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v10);
v11 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional subprotocols>;
v12 = new java.util.ArrayList;
specialinvoke v12.<java.util.ArrayList: void <init>()>();
v13 = virtualinvoke v11.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v12);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: void setWebsocketSubprotocols(java.util.List)>(v13);
v14 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional keyStore>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v15 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setKeyStore__296: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v14.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v15);
v16 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional keyStoreType>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v17 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setKeyStoreType__297: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v16.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v17);
v18 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional keyStorePassword>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v19 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setKeyStorePassword__298: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v18.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v19);
v20 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional trustStore>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v21 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setTrustStore__299: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v20.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v21);
v22 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional trustStoreType>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v23 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setTrustStoreType__300: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v22.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v23);
v24 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional trustStorePassword>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v25 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setTrustStorePassword__301: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v24.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v25);
v26 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional proxyHost>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v27 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setProxyHost__302: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v26.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v27);
v28 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.OptionalInt proxyPort>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v29 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setProxyPort__303: java.util.function.IntConsumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v28.<java.util.OptionalInt: void ifPresent(java.util.function.IntConsumer)>(v29);
v30 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional proxyUsername>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v31 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setProxyUsername__304: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v30.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v31);
v32 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional proxyPassword>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v33 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setProxyPassword__305: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v32.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v33);
v34 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.OptionalInt maxRedirects>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v35 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setMaxRedirects__306: java.util.function.IntConsumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v34.<java.util.OptionalInt: void ifPresent(java.util.function.IntConsumer)>(v35);
v36 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional executeSingleResultOperationsOverWebsocket>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v37 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setExecuteSingleOperationsOverWebsocket__307: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v36.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v37);
v38 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.OptionalInt websocketInitializationTimeout>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v39 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setWebsocketInitializationTimeout__308: java.util.function.IntConsumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v38.<java.util.OptionalInt: void ifPresent(java.util.function.IntConsumer)>(v39);
v40 = v1.<io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfig: java.util.Optional allowUnexpectedResponseFields>;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v41 = staticinvoke <io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean$setAllowUnexpectedResponseFields__309: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v2);
virtualinvoke v40.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v41);
return v2;
}
private java.lang.String getTestingServerUrl()
{
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean v0;
java.util.Optional v3;
java.lang.Class v2;
java.lang.Object v5;
java.lang.String v6;
org.eclipse.microprofile.config.Config v1;
java.lang.Integer v4;
v0 := @this: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean;
v1 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v2 = <java.lang.Integer: java.lang.Class TYPE>;
v3 = interfaceinvoke v1.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>("quarkus.http.test-port", v2);
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8081);
v5 = virtualinvoke v3.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v4);
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("http://localhost:\u0001/graphql");
return v6;
}
public void nothing()
{
io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean v0;
v0 := @this: io.quarkus.smallrye.graphql.client.runtime.GraphQLClientConfigurationMergerBean;
return;
}
}