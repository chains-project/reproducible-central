public final class io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896 extends java.lang.Object implements java.util.function.Consumer
{
io.vertx.core.Context cap0;
java.util.function.Supplier cap1;
public static java.util.function.Consumer bootstrap$(io.vertx.core.Context, java.util.function.Supplier)
{
io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896 v2;
io.vertx.core.Context v0;
java.util.function.Supplier v1;
v0 := @parameter0: io.vertx.core.Context;
v1 := @parameter1: java.util.function.Supplier;
v2 = new io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896;
specialinvoke v2.<io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896: void <init>(io.vertx.core.Context,java.util.function.Supplier)>(v0, v1);
return v2;
}
public void <init>(io.vertx.core.Context, java.util.function.Supplier)
{
io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896 v0;
io.vertx.core.Context v1;
java.util.function.Supplier v2;
v0 := @this: io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896;
v1 := @parameter0: io.vertx.core.Context;
v2 := @parameter1: java.util.function.Supplier;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896: io.vertx.core.Context cap0> = v1;
v0.<io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896: java.util.function.Supplier cap1> = v2;
return;
}
public void accept(java.lang.Object)
{
io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896 v0;
java.lang.Object v1;
io.vertx.core.Context v2;
java.util.function.Supplier v3;
v0 := @this: io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896: io.vertx.core.Context cap0>;
v3 = v0.<io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896: java.util.function.Supplier cap1>;
staticinvoke <io.quarkus.vertx.VertxContextSupport: void lambda$subscribeAndAwait$0(io.vertx.core.Context,java.util.function.Supplier,io.smallrye.mutiny.subscription.UniEmitter)>(v2, v3, v1);
return;
}
}