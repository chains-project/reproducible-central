final class io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext extends java.lang.Object implements io.quarkus.arc.CurrentContext
{
private final io.netty.util.concurrent.FastThreadLocal fallback;
private void <init>()
{
io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext v0;
io.netty.util.concurrent.FastThreadLocal v1;
v0 := @this: io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new io.netty.util.concurrent.FastThreadLocal;
specialinvoke v1.<io.netty.util.concurrent.FastThreadLocal: void <init>()>();
v0.<io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext: io.netty.util.concurrent.FastThreadLocal fallback> = v1;
return;
}
public io.quarkus.arc.InjectableContext$ContextState get()
{
io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext v0;
io.netty.util.concurrent.FastThreadLocal v4;
java.lang.Object v3, v5;
io.vertx.core.Context v1;
boolean v2;
v0 := @this: io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext;
v1 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
if v1 == null goto label1;
v2 = staticinvoke <io.smallrye.common.vertx.VertxContext: boolean isDuplicatedContext(io.vertx.core.Context)>(v1);
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<io.vertx.core.Context: java.lang.Object getLocal(java.lang.Object)>("io.quarkus.vertx.cdi-current-context");
return v3;
label1:
v4 = v0.<io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext: io.netty.util.concurrent.FastThreadLocal fallback>;
v5 = virtualinvoke v4.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
return v5;
}
public void set(io.quarkus.arc.InjectableContext$ContextState)
{
io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext v0;
io.netty.util.concurrent.FastThreadLocal v4;
io.vertx.core.Context v2;
boolean v3;
io.quarkus.arc.InjectableContext$ContextState v1;
v0 := @this: io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext;
v1 := @parameter0: io.quarkus.arc.InjectableContext$ContextState;
v2 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
if v2 == null goto label1;
v3 = staticinvoke <io.smallrye.common.vertx.VertxContext: boolean isDuplicatedContext(io.vertx.core.Context)>(v2);
if v3 == 0 goto label1;
staticinvoke <io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle: void setContextSafe(io.vertx.core.Context,boolean)>(v2, 1);
interfaceinvoke v2.<io.vertx.core.Context: void putLocal(java.lang.Object,java.lang.Object)>("io.quarkus.vertx.cdi-current-context", v1);
goto label2;
label1:
v4 = v0.<io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext: io.netty.util.concurrent.FastThreadLocal fallback>;
virtualinvoke v4.<io.netty.util.concurrent.FastThreadLocal: void set(java.lang.Object)>(v1);
label2:
return;
}
public void remove()
{
io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext v0;
io.netty.util.concurrent.FastThreadLocal v3;
io.vertx.core.Context v1;
boolean v2;
v0 := @this: io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext;
v1 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
if v1 == null goto label1;
v2 = staticinvoke <io.smallrye.common.vertx.VertxContext: boolean isDuplicatedContext(io.vertx.core.Context)>(v1);
if v2 != 0 goto label2;
label1:
v3 = v0.<io.quarkus.vertx.runtime.VertxCurrentContextFactory$VertxCurrentContext: io.netty.util.concurrent.FastThreadLocal fallback>;
virtualinvoke v3.<io.netty.util.concurrent.FastThreadLocal: void remove()>();
label2:
return;
}
}