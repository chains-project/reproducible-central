class io.quarkus.vertx.runtime.jackson.BufferDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
{
void <init>()
{
io.quarkus.vertx.runtime.jackson.BufferDeserializer v0;
v0 := @this: io.quarkus.vertx.runtime.jackson.BufferDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();
return;
}
public io.vertx.core.buffer.Buffer deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException
{
byte[] v5;
com.fasterxml.jackson.databind.exc.InvalidFormatException v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.Base64$Decoder v4;
java.lang.IllegalArgumentException v7;
io.vertx.core.buffer.Buffer v6;
io.quarkus.vertx.runtime.jackson.BufferDeserializer v0;
java.lang.String v3;
v0 := @this: io.quarkus.vertx.runtime.jackson.BufferDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
label1:
v4 = <io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
v5 = virtualinvoke v4.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v3);
v6 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new com.fasterxml.jackson.databind.exc.InvalidFormatException;
specialinvoke v8.<com.fasterxml.jackson.databind.exc.InvalidFormatException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v1, "Expected a base64 encoded byte array", v3, class "Lio/vertx/core/buffer/Buffer;");
throw v8;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
}