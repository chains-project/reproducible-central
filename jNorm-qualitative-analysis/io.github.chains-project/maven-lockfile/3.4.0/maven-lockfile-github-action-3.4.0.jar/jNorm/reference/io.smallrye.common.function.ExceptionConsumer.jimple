public interface  io.smallrye.common.function.ExceptionConsumer extends java.lang.Object
{
public abstract void accept(java.lang.Object) throws java.lang.Exception;
public io.smallrye.common.function.ExceptionConsumer andThen(io.smallrye.common.function.ExceptionConsumer)
{
io.smallrye.common.function.ExceptionConsumer v0, v1, v2;
v0 := @this: io.smallrye.common.function.ExceptionConsumer;
v1 := @parameter0: io.smallrye.common.function.ExceptionConsumer;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionConsumer$lambda_andThen_0__3206: io.smallrye.common.function.ExceptionConsumer bootstrap$(io.smallrye.common.function.ExceptionConsumer,io.smallrye.common.function.ExceptionConsumer)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionConsumer compose(io.smallrye.common.function.ExceptionConsumer)
{
io.smallrye.common.function.ExceptionConsumer v0, v1, v2;
v0 := @this: io.smallrye.common.function.ExceptionConsumer;
v1 := @parameter0: io.smallrye.common.function.ExceptionConsumer;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("before", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionConsumer$lambda_compose_1__3207: io.smallrye.common.function.ExceptionConsumer bootstrap$(io.smallrye.common.function.ExceptionConsumer,io.smallrye.common.function.ExceptionConsumer)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionRunnable compose(io.smallrye.common.function.ExceptionSupplier)
{
io.smallrye.common.function.ExceptionSupplier v1;
io.smallrye.common.function.ExceptionRunnable v2;
io.smallrye.common.function.ExceptionConsumer v0;
v0 := @this: io.smallrye.common.function.ExceptionConsumer;
v1 := @parameter0: io.smallrye.common.function.ExceptionSupplier;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("before", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionConsumer$lambda_compose_2__3208: io.smallrye.common.function.ExceptionRunnable bootstrap$(io.smallrye.common.function.ExceptionConsumer,io.smallrye.common.function.ExceptionSupplier)>(v0, v1);
return v2;
}
}