class io.smallrye.common.function.Functions$ExceptionSupplierFunction extends java.lang.Object implements io.smallrye.common.function.ExceptionFunction
{
static final io.smallrye.common.function.ExceptionFunction INSTANCE;
private void <init>()
{
io.smallrye.common.function.Functions$ExceptionSupplierFunction v0;
v0 := @this: io.smallrye.common.function.Functions$ExceptionSupplierFunction;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object apply(io.smallrye.common.function.ExceptionSupplier) throws java.lang.Exception
{
io.smallrye.common.function.Functions$ExceptionSupplierFunction v0;
java.lang.Object v2;
io.smallrye.common.function.ExceptionSupplier v1;
v0 := @this: io.smallrye.common.function.Functions$ExceptionSupplierFunction;
v1 := @parameter0: io.smallrye.common.function.ExceptionSupplier;
v2 = interfaceinvoke v1.<io.smallrye.common.function.ExceptionSupplier: java.lang.Object get()>();
return v2;
}
static void <clinit>()
{
io.smallrye.common.function.Functions$ExceptionSupplierFunction v0;
v0 = new io.smallrye.common.function.Functions$ExceptionSupplierFunction;
specialinvoke v0.<io.smallrye.common.function.Functions$ExceptionSupplierFunction: void <init>()>();
<io.smallrye.common.function.Functions$ExceptionSupplierFunction: io.smallrye.common.function.ExceptionFunction INSTANCE> = v0;
return;
}
}