public class io.smallrye.common.vertx.ContextLocals extends java.lang.Object
{
private void <init>()
{
io.smallrye.common.vertx.ContextLocals v0;
v0 := @this: io.smallrye.common.vertx.ContextLocals;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static io.vertx.core.Context ensureDuplicatedContext()
{
java.lang.UnsupportedOperationException v2;
io.vertx.core.Context v0;
boolean v1;
v0 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
if v0 == null goto label1;
v1 = staticinvoke <io.smallrye.common.vertx.VertxContext: boolean isDuplicatedContext(io.vertx.core.Context)>(v0);
if v1 != 0 goto label2;
label1:
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Access to Context Locals are forbidden from a \'root\' context  as it can leak data between unrelated processing. Make sure the method runs on a \'duplicated\' (local) Context");
throw v2;
label2:
return v0;
}
public static java.util.Optional get(java.lang.String)
{
java.util.Optional v4;
java.lang.Object v2, v3;
java.lang.String v0;
io.vertx.core.Context v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.smallrye.common.vertx.ContextLocals: io.vertx.core.Context ensureDuplicatedContext()>();
v2 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("key", v0);
v3 = interfaceinvoke v1.<io.vertx.core.Context: java.lang.Object getLocal(java.lang.Object)>(v2);
v4 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>(v3);
return v4;
}
public static java.lang.Object get(java.lang.String, java.lang.Object)
{
java.lang.Object v1, v3, v4;
java.lang.String v0;
io.vertx.core.Context v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 = staticinvoke <io.smallrye.common.vertx.ContextLocals: io.vertx.core.Context ensureDuplicatedContext()>();
v3 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("key", v0);
v4 = interfaceinvoke v2.<io.vertx.core.Context: java.lang.Object getLocal(java.lang.Object)>(v3);
if v4 != null goto label1;
return v1;
label1:
return v4;
}
public static void put(java.lang.String, java.lang.Object)
{
java.lang.Object v1, v3, v4;
java.lang.String v0;
io.vertx.core.Context v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 = staticinvoke <io.smallrye.common.vertx.ContextLocals: io.vertx.core.Context ensureDuplicatedContext()>();
v3 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("key", v0);
v4 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("value", v1);
interfaceinvoke v2.<io.vertx.core.Context: void putLocal(java.lang.Object,java.lang.Object)>(v3, v4);
return;
}
public static boolean remove(java.lang.String)
{
java.lang.Object v2;
java.lang.String v0;
io.vertx.core.Context v1;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.smallrye.common.vertx.ContextLocals: io.vertx.core.Context ensureDuplicatedContext()>();
v2 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("key", v0);
v3 = interfaceinvoke v1.<io.vertx.core.Context: boolean removeLocal(java.lang.Object)>(v2);
return v3;
}
}