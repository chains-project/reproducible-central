public final class io.smallrye.config.ConfigMappingInterface$LeafProperty extends io.smallrye.config.ConfigMappingInterface$MayBeOptionalProperty
{
private final java.lang.reflect.Type valueType;
private final java.lang.Class convertWith;
private final java.lang.Class rawType;
private final java.lang.String defaultValue;
void <init>(java.lang.reflect.Method, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.reflect.Type v3;
java.lang.Class v4, v6;
java.lang.String v2, v5;
java.lang.reflect.Method v1;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 := @parameter0: java.lang.reflect.Method;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.reflect.Type;
v4 := @parameter3: java.lang.Class;
v5 := @parameter4: java.lang.String;
specialinvoke v0.<io.smallrye.config.ConfigMappingInterface$MayBeOptionalProperty: void <init>(java.lang.reflect.Method,java.lang.String)>(v1, v2);
v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.reflect.Type valueType> = v3;
v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.Class convertWith> = v4;
v6 = staticinvoke <io.smallrye.config.ConfigMappingInterface: java.lang.Class rawTypeOf(java.lang.reflect.Type)>(v3);
v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.Class rawType> = v6;
v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.String defaultValue> = v5;
return;
}
public java.lang.reflect.Type getValueType()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.reflect.Type v1;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.reflect.Type valueType>;
return v1;
}
public java.lang.Class getConvertWith()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.Class v1;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.Class convertWith>;
return v1;
}
public boolean hasConvertWith()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.Class v1;
boolean v2;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.Class convertWith>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public java.lang.String getDefaultValue()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.String defaultValue>;
v2 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("defaultValue", v1);
return v2;
}
public boolean hasDefaultValue()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.String v1;
boolean v2;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.String defaultValue>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public java.lang.Class getValueRawType()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
java.lang.Class v1;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
v1 = v0.<io.smallrye.config.ConfigMappingInterface$LeafProperty: java.lang.Class rawType>;
return v1;
}
public boolean isLeaf()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
return 1;
}
public io.smallrye.config.ConfigMappingInterface$LeafProperty asLeaf()
{
io.smallrye.config.ConfigMappingInterface$LeafProperty v0;
v0 := @this: io.smallrye.config.ConfigMappingInterface$LeafProperty;
return v0;
}
}