final class io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen extends java.lang.Object implements java.util.function.BiConsumer
{
private final java.util.function.BiConsumer delegate;
void <init>(java.util.function.BiConsumer)
{
java.util.function.BiConsumer v1;
io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen v0;
v0 := @this: io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen;
v1 := @parameter0: java.util.function.BiConsumer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen: java.util.function.BiConsumer delegate> = v1;
return;
}
public void accept(io.smallrye.config.ConfigMappingContext, io.smallrye.config.NameIterator)
{
io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen v0;
io.smallrye.config.NameIterator v2;
java.util.function.BiConsumer v3;
io.smallrye.config.ConfigMappingContext v1;
v0 := @this: io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen;
v1 := @parameter0: io.smallrye.config.ConfigMappingContext;
v2 := @parameter1: io.smallrye.config.NameIterator;
virtualinvoke v2.<io.smallrye.config.NameIterator: void previous()>();
v3 = v0.<io.smallrye.config.ConfigMappingProvider$ConsumeOneAndThen: java.util.function.BiConsumer delegate>;
interfaceinvoke v3.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v1, v2);
virtualinvoke v2.<io.smallrye.config.NameIterator: void next()>();
return;
}
}