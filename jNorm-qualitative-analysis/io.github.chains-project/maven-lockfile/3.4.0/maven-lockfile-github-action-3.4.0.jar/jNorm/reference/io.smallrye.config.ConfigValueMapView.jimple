public final class io.smallrye.config.ConfigValueMapView extends java.util.AbstractMap
{
private final java.util.Map delegate;
private transient java.util.Set entrySet;
private transient java.util.Collection values;
void <init>(java.util.Map)
{
io.smallrye.config.ConfigValueMapView v0;
java.util.Map v1, v2;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<java.util.AbstractMap: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
v0.<io.smallrye.config.ConfigValueMapView: java.util.Map delegate> = v2;
return;
}
public int size()
{
int v2;
io.smallrye.config.ConfigValueMapView v0;
java.util.Map v1;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
return v2;
}
public boolean isEmpty()
{
io.smallrye.config.ConfigValueMapView v0;
boolean v2;
java.util.Map v1;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
return v2;
}
public boolean containsKey(java.lang.Object)
{
io.smallrye.config.ConfigValueMapView v0;
java.util.Map v2;
java.lang.Object v1;
boolean v3;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v3;
}
public boolean containsValue(java.lang.Object)
{
io.smallrye.config.ConfigValueMapView v0;
java.util.Collection v2;
java.lang.Object v1;
boolean v3;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigValueMapView: java.util.Collection values()>();
v3 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v1);
return v3;
}
public java.lang.String get(java.lang.Object)
{
io.smallrye.config.ConfigValueMapView v0;
java.util.Map v2;
java.lang.Object v1, v3;
java.lang.String v4;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
goto label2;
label1:
v4 = null;
label2:
return v4;
}
public java.util.Set keySet()
{
io.smallrye.config.ConfigValueMapView v0;
java.util.Set v2;
java.util.Map v1;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
public java.util.Set entrySet()
{
io.smallrye.config.ConfigValueMapView v0;
io.smallrye.config.ConfigValueMapView$1 v2;
java.util.Set v1, v3;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Set entrySet>;
if v1 != null goto label1;
v2 = new io.smallrye.config.ConfigValueMapView$1;
specialinvoke v2.<io.smallrye.config.ConfigValueMapView$1: void <init>(io.smallrye.config.ConfigValueMapView)>(v0);
v0.<io.smallrye.config.ConfigValueMapView: java.util.Set entrySet> = v2;
label1:
v3 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Set entrySet>;
return v3;
}
public java.util.Collection values()
{
io.smallrye.config.ConfigValueMapView v0;
io.smallrye.config.ConfigValueMapView$2 v2;
java.util.Collection v1, v3;
v0 := @this: io.smallrye.config.ConfigValueMapView;
v1 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Collection values>;
if v1 != null goto label1;
v2 = new io.smallrye.config.ConfigValueMapView$2;
specialinvoke v2.<io.smallrye.config.ConfigValueMapView$2: void <init>(io.smallrye.config.ConfigValueMapView)>(v0);
v0.<io.smallrye.config.ConfigValueMapView: java.util.Collection values> = v2;
label1:
v3 = v0.<io.smallrye.config.ConfigValueMapView: java.util.Collection values>;
return v3;
}
}