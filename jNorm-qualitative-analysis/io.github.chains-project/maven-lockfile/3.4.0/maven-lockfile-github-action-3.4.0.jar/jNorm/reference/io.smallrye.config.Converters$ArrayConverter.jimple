final class io.smallrye.config.Converters$ArrayConverter extends io.smallrye.config.common.AbstractDelegatingConverter
{
private static final long serialVersionUID;
private final java.lang.Class arrayType;
void <init>(org.eclipse.microprofile.config.spi.Converter, java.lang.Class)
{
java.lang.Class v2;
org.eclipse.microprofile.config.spi.Converter v1;
io.smallrye.config.Converters$ArrayConverter v0;
v0 := @this: io.smallrye.config.Converters$ArrayConverter;
v1 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<io.smallrye.config.common.AbstractDelegatingConverter: void <init>(org.eclipse.microprofile.config.spi.Converter)>(v1);
v0.<io.smallrye.config.Converters$ArrayConverter: java.lang.Class arrayType> = v2;
return;
}
io.smallrye.config.Converters$ArrayConverter create(org.eclipse.microprofile.config.spi.Converter)
{
org.eclipse.microprofile.config.spi.Converter v1;
io.smallrye.config.Converters$ArrayConverter v0, v2;
java.lang.Class v3;
v0 := @this: io.smallrye.config.Converters$ArrayConverter;
v1 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v2 = new io.smallrye.config.Converters$ArrayConverter;
v3 = v0.<io.smallrye.config.Converters$ArrayConverter: java.lang.Class arrayType>;
specialinvoke v2.<io.smallrye.config.Converters$ArrayConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,java.lang.Class)>(v1, v3);
return v2;
}
public java.lang.Object convert(java.lang.String)
{
java.lang.String[] v3;
org.eclipse.microprofile.config.spi.Converter v15;
int v10, v11, v12, v17, v19, v7;
java.lang.String v1, v13;
boolean v14, v2;
io.smallrye.config.Converters$ArrayConverter v0;
java.lang.Class v20, v4, v5, v6;
java.lang.Object v16, v18, v8, v9;
v0 := @this: io.smallrye.config.Converters$ArrayConverter;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label1;
return null;
label1:
v3 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String[] split(java.lang.String)>(v1);
v4 = v0.<io.smallrye.config.Converters$ArrayConverter: java.lang.Class arrayType>;
v5 = v0.<io.smallrye.config.Converters$ArrayConverter: java.lang.Class arrayType>;
v6 = virtualinvoke v5.<java.lang.Class: java.lang.Class getComponentType()>();
v7 = lengthof v3;
v8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v6, v7);
v9 = virtualinvoke v4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v8);
v10 = 0;
v11 = lengthof v3;
v12 = 0;
label2:
if v12 >= v11 goto label4;
v13 = v3[v12];
v14 = virtualinvoke v13.<java.lang.String: boolean isEmpty()>();
if v14 != 0 goto label3;
v15 = virtualinvoke v0.<io.smallrye.config.Converters$ArrayConverter: org.eclipse.microprofile.config.spi.Converter getDelegate()>();
v16 = interfaceinvoke v15.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v13);
if v16 == null goto label3;
v17 = v10;
v10 = v10 + 1;
staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(v9, v17, v16);
label3:
v12 = v12 + 1;
goto label2;
label4:
if v10 != 0 goto label5;
v18 = null;
goto label7;
label5:
v19 = lengthof v3;
if v10 >= v19 goto label6;
v20 = v0.<io.smallrye.config.Converters$ArrayConverter: java.lang.Class arrayType>;
v18 = staticinvoke <io.smallrye.config.Converters$ArrayConverter: java.lang.Object copyArray(java.lang.Object,java.lang.Class,int)>(v9, v20, v10);
goto label7;
label6:
v18 = v9;
label7:
return v18;
}
private static java.lang.Object copyArray(java.lang.Object, java.lang.Class, int)
{
byte[] v13;
int[] v19;
boolean v12, v15, v18, v21, v24, v27, v3, v6, v9;
short[] v16;
java.lang.Object[] v4;
double[] v28;
float[] v25;
io.smallrye.config.ConfigMessages v30;
long[] v22;
int v2;
boolean[] v7;
java.lang.IllegalArgumentException v31;
char[] v10;
java.lang.Class v1;
java.lang.Object v0, v11, v14, v17, v20, v23, v26, v29, v5, v8;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: int;
v3 = v0 instanceof java.lang.Object[];
if v3 == 0 goto label1;
v4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v0, v2);
v5 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v4);
return v5;
label1:
v6 = v0 instanceof boolean[];
if v6 == 0 goto label2;
v7 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>(v0, v2);
v8 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v7);
return v8;
label2:
v9 = v0 instanceof char[];
if v9 == 0 goto label3;
v10 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(v0, v2);
v11 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v10);
return v11;
label3:
v12 = v0 instanceof byte[];
if v12 == 0 goto label4;
v13 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(v0, v2);
v14 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v13);
return v14;
label4:
v15 = v0 instanceof short[];
if v15 == 0 goto label5;
v16 = staticinvoke <java.util.Arrays: short[] copyOf(short[],int)>(v0, v2);
v17 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v16);
return v17;
label5:
v18 = v0 instanceof int[];
if v18 == 0 goto label6;
v19 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(v0, v2);
v20 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v19);
return v20;
label6:
v21 = v0 instanceof long[];
if v21 == 0 goto label7;
v22 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>(v0, v2);
v23 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v22);
return v23;
label7:
v24 = v0 instanceof float[];
if v24 == 0 goto label8;
v25 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(v0, v2);
v26 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v25);
return v26;
label8:
v27 = v0 instanceof double[];
if v27 == 0 goto label9;
v28 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(v0, v2);
v29 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v28);
return v29;
label9:
v30 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v31 = interfaceinvoke v30.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException unknownArrayType()>();
throw v31;
}
}