public final class io.smallrye.config.Converters extends java.lang.Object
{
static final org.eclipse.microprofile.config.spi.Converter STRING_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter BOOLEAN_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter DOUBLE_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter FLOAT_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter LONG_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter INTEGER_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter CLASS_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter OPTIONAL_INT_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter OPTIONAL_LONG_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter OPTIONAL_DOUBLE_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter INET_ADDRESS_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter CHARACTER_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter SHORT_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter BYTE_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter UUID_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter CURRENCY_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter BITSET_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter PATTERN_CONVERTER;
static final org.eclipse.microprofile.config.spi.Converter PATH_CONVERTER;
static final java.util.Map PRIMITIVE_TYPES;
static final java.util.Map ALL_CONVERTERS;
static final boolean $assertionsDisabled;
private void <init>()
{
io.smallrye.config.Converters v0;
v0 := @this: io.smallrye.config.Converters;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.lang.Class wrapPrimitiveType(java.lang.Class)
{
java.util.Map v4;
java.lang.Class v0;
java.lang.Object v5;
java.lang.AssertionError v3;
boolean v1, v2;
v0 := @parameter0: java.lang.Class;
v1 = <io.smallrye.config.Converters: boolean $assertionsDisabled>;
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<java.lang.Class: boolean isPrimitive()>();
if v2 != 0 goto label1;
v3 = new java.lang.AssertionError;
specialinvoke v3.<java.lang.AssertionError: void <init>()>();
throw v3;
label1:
v4 = <io.smallrye.config.Converters: java.util.Map PRIMITIVE_TYPES>;
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
return v5;
}
public static java.lang.reflect.Type getConverterType(java.lang.Class)
{
java.lang.IllegalStateException v13;
io.smallrye.config.ConfigMessages v11;
int v10, v3, v4;
java.lang.String v12;
boolean v1, v6, v8;
java.lang.reflect.Type v14, v16, v5, v7;
java.lang.reflect.Type[] v2, v9;
java.lang.Class v0, v15;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Object;");
if v1 == 0 goto label1;
return null;
label1:
v2 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();
v3 = lengthof v2;
v4 = 0;
label2:
if v4 >= v3 goto label5;
v5 = v2[v4];
v6 = v5 instanceof java.lang.reflect.ParameterizedType;
if v6 == 0 goto label4;
v7 = interfaceinvoke v5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v8 = virtualinvoke v7.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/eclipse/microprofile/config/spi/Converter;");
if v8 == 0 goto label4;
v9 = interfaceinvoke v5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v10 = lengthof v9;
if v10 == 1 goto label3;
v11 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v12 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v13 = interfaceinvoke v11.<io.smallrye.config.ConfigMessages: java.lang.IllegalStateException singleTypeConverter(java.lang.String)>(v12);
throw v13;
label3:
v14 = v9[0];
return v14;
label4:
v4 = v4 + 1;
goto label2;
label5:
v15 = virtualinvoke v0.<java.lang.Class: java.lang.Class getSuperclass()>();
v16 = staticinvoke <io.smallrye.config.Converters: java.lang.reflect.Type getConverterType(java.lang.Class)>(v15);
return v16;
}
public static org.eclipse.microprofile.config.spi.Converter getImplicitConverter(java.lang.Class)
{
java.lang.Class v0;
org.eclipse.microprofile.config.spi.Converter v1;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <io.smallrye.config.ImplicitConverters: org.eclipse.microprofile.config.spi.Converter getConverter(java.lang.Class)>(v0);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter newCollectionConverter(org.eclipse.microprofile.config.spi.Converter, java.util.function.IntFunction)
{
io.smallrye.config.Converters$CollectionConverter v2;
org.eclipse.microprofile.config.spi.Converter v0;
java.util.function.IntFunction v1;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.util.function.IntFunction;
v2 = new io.smallrye.config.Converters$CollectionConverter;
specialinvoke v2.<io.smallrye.config.Converters$CollectionConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)>(v0, v1);
return v2;
}
public static org.eclipse.microprofile.config.spi.Converter newArrayConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.Class)
{
io.smallrye.config.ConfigMessages v3;
org.eclipse.microprofile.config.spi.Converter v0;
io.smallrye.config.Converters$ArrayConverter v6;
java.lang.Class v1;
java.lang.String v4;
java.lang.IllegalArgumentException v5;
boolean v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isArray()>();
if v2 != 0 goto label1;
v3 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v4 = virtualinvoke v1.<java.lang.Class: java.lang.String toString()>();
v5 = interfaceinvoke v3.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException notArrayType(java.lang.String)>(v4);
throw v5;
label1:
v6 = new io.smallrye.config.Converters$ArrayConverter;
specialinvoke v6.<io.smallrye.config.Converters$ArrayConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,java.lang.Class)>(v0, v1);
return v6;
}
public static org.eclipse.microprofile.config.spi.Converter newMapConverter(org.eclipse.microprofile.config.spi.Converter, org.eclipse.microprofile.config.spi.Converter)
{
org.eclipse.microprofile.config.spi.Converter v0, v1;
io.smallrye.config.Converters$MapConverter v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 = new io.smallrye.config.Converters$MapConverter;
specialinvoke v2.<io.smallrye.config.Converters$MapConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,org.eclipse.microprofile.config.spi.Converter)>(v0, v1);
return v2;
}
public static org.eclipse.microprofile.config.spi.Converter newOptionalConverter(org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.Converters$OptionalConverter v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = new io.smallrye.config.Converters$OptionalConverter;
specialinvoke v1.<io.smallrye.config.Converters$OptionalConverter: void <init>(org.eclipse.microprofile.config.spi.Converter)>(v0);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter newOptionalIntConverter(org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.Converters$OptionalIntConverter v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = new io.smallrye.config.Converters$OptionalIntConverter;
specialinvoke v1.<io.smallrye.config.Converters$OptionalIntConverter: void <init>(org.eclipse.microprofile.config.spi.Converter)>(v0);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter newOptionalLongConverter(org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.Converters$OptionalLongConverter v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = new io.smallrye.config.Converters$OptionalLongConverter;
specialinvoke v1.<io.smallrye.config.Converters$OptionalLongConverter: void <init>(org.eclipse.microprofile.config.spi.Converter)>(v0);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter newOptionalDoubleConverter(org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.Converters$OptionalDoubleConverter v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = new io.smallrye.config.Converters$OptionalDoubleConverter;
specialinvoke v1.<io.smallrye.config.Converters$OptionalDoubleConverter: void <init>(org.eclipse.microprofile.config.spi.Converter)>(v0);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.Object)
{
io.smallrye.config.Converters$EmptyValueConverter v2;
java.lang.Object v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.Object;
if v1 != null goto label1;
return v0;
label1:
v2 = new io.smallrye.config.Converters$EmptyValueConverter;
specialinvoke v2.<io.smallrye.config.Converters$EmptyValueConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,java.lang.Object)>(v0, v1);
return v2;
}
public static org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.Converters$EmptyValueConverter v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = new io.smallrye.config.Converters$EmptyValueConverter;
specialinvoke v1.<io.smallrye.config.Converters$EmptyValueConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,java.lang.Object)>(v0, null);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.Converters$TrimmingConverter v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = new io.smallrye.config.Converters$TrimmingConverter;
specialinvoke v1.<io.smallrye.config.Converters$TrimmingConverter: void <init>(org.eclipse.microprofile.config.spi.Converter)>(v0);
return v1;
}
public static org.eclipse.microprofile.config.spi.Converter minimumValueConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.Comparable, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v3;
org.eclipse.microprofile.config.spi.Converter v0;
java.lang.Comparable v1;
java.util.Comparator v4;
boolean v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.Comparable;
v2 := @parameter2: boolean;
v3 = new io.smallrye.config.Converters$RangeCheckConverter;
v4 = staticinvoke <java.util.Comparator: java.util.Comparator naturalOrder()>();
specialinvoke v3.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v4, v0, v1, v2, null, 0);
return v3;
}
public static org.eclipse.microprofile.config.spi.Converter minimumValueConverter(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.Object, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v4;
org.eclipse.microprofile.config.spi.Converter v1;
java.lang.Object v2;
java.util.Comparator v0;
boolean v3;
v0 := @parameter0: java.util.Comparator;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: boolean;
v4 = new io.smallrye.config.Converters$RangeCheckConverter;
specialinvoke v4.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v0, v1, v2, v3, null, 0);
return v4;
}
public static org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.String, boolean)
{
org.eclipse.microprofile.config.spi.Converter v0, v4;
java.lang.Object v3;
java.lang.String v1;
boolean v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 = interfaceinvoke v0.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v1);
v4 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter minimumValueConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.Comparable,boolean)>(v0, v3, v2);
return v4;
}
public static org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.String, boolean)
{
org.eclipse.microprofile.config.spi.Converter v1, v5;
java.lang.Object v4;
java.lang.String v2;
java.util.Comparator v0;
boolean v3;
v0 := @parameter0: java.util.Comparator;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: boolean;
v4 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v2);
v5 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter minimumValueConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean)>(v0, v1, v4, v3);
return v5;
}
public static org.eclipse.microprofile.config.spi.Converter maximumValueConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.Comparable, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v3;
org.eclipse.microprofile.config.spi.Converter v0;
java.lang.Comparable v1;
java.util.Comparator v4;
boolean v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.Comparable;
v2 := @parameter2: boolean;
v3 = new io.smallrye.config.Converters$RangeCheckConverter;
v4 = staticinvoke <java.util.Comparator: java.util.Comparator naturalOrder()>();
specialinvoke v3.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v4, v0, null, 0, v1, v2);
return v3;
}
public static org.eclipse.microprofile.config.spi.Converter maximumValueConverter(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.Object, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v4;
org.eclipse.microprofile.config.spi.Converter v1;
java.lang.Object v2;
java.util.Comparator v0;
boolean v3;
v0 := @parameter0: java.util.Comparator;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: boolean;
v4 = new io.smallrye.config.Converters$RangeCheckConverter;
specialinvoke v4.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v0, v1, null, 0, v2, v3);
return v4;
}
public static org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.String, boolean)
{
org.eclipse.microprofile.config.spi.Converter v0, v4;
java.lang.Object v3;
java.lang.String v1;
boolean v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 = interfaceinvoke v0.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v1);
v4 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter maximumValueConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.Comparable,boolean)>(v0, v3, v2);
return v4;
}
public static org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.String, boolean)
{
org.eclipse.microprofile.config.spi.Converter v1, v5;
java.lang.Object v4;
java.lang.String v2;
java.util.Comparator v0;
boolean v3;
v0 := @parameter0: java.util.Comparator;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: boolean;
v4 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v2);
v5 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter maximumValueConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean)>(v0, v1, v4, v3);
return v5;
}
public static org.eclipse.microprofile.config.spi.Converter rangeValueConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.Comparable, boolean, java.lang.Comparable, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v5;
org.eclipse.microprofile.config.spi.Converter v0;
java.lang.Comparable v1, v3;
java.util.Comparator v6;
boolean v2, v4;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.Comparable;
v2 := @parameter2: boolean;
v3 := @parameter3: java.lang.Comparable;
v4 := @parameter4: boolean;
v5 = new io.smallrye.config.Converters$RangeCheckConverter;
v6 = staticinvoke <java.util.Comparator: java.util.Comparator naturalOrder()>();
specialinvoke v5.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v6, v0, v1, v2, v3, v4);
return v5;
}
public static org.eclipse.microprofile.config.spi.Converter rangeValueConverter(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.Object, boolean, java.lang.Object, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v6;
org.eclipse.microprofile.config.spi.Converter v1;
java.lang.Object v2, v4;
java.util.Comparator v0;
boolean v3, v5;
v0 := @parameter0: java.util.Comparator;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: boolean;
v4 := @parameter4: java.lang.Object;
v5 := @parameter5: boolean;
v6 = new io.smallrye.config.Converters$RangeCheckConverter;
specialinvoke v6.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v0, v1, v2, v3, v4, v5);
return v6;
}
public static org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.String, boolean, java.lang.String, boolean)
{
org.eclipse.microprofile.config.spi.Converter v0, v7;
java.lang.Object v5, v6;
java.lang.String v1, v3;
boolean v2, v4;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 := @parameter3: java.lang.String;
v4 := @parameter4: boolean;
v5 = interfaceinvoke v0.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v1);
v6 = interfaceinvoke v0.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v3);
v7 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter rangeValueConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.Comparable,boolean,java.lang.Comparable,boolean)>(v0, v5, v2, v6, v4);
return v7;
}
public static org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.String, boolean, java.lang.String, boolean)
{
org.eclipse.microprofile.config.spi.Converter v1, v8;
java.lang.Object v6, v7;
java.lang.String v2, v4;
java.util.Comparator v0;
boolean v3, v5;
v0 := @parameter0: java.util.Comparator;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: boolean;
v4 := @parameter4: java.lang.String;
v5 := @parameter5: boolean;
v6 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v2);
v7 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v4);
v8 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter rangeValueConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v0, v1, v6, v3, v7, v5);
return v8;
}
public static org.eclipse.microprofile.config.spi.Converter patternValidatingConverter(org.eclipse.microprofile.config.spi.Converter, java.util.regex.Pattern)
{
io.smallrye.config.Converters$PatternCheckConverter v2;
java.util.regex.Pattern v1;
org.eclipse.microprofile.config.spi.Converter v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.util.regex.Pattern;
v2 = new io.smallrye.config.Converters$PatternCheckConverter;
specialinvoke v2.<io.smallrye.config.Converters$PatternCheckConverter: void <init>(org.eclipse.microprofile.config.spi.Converter,java.util.regex.Pattern)>(v0, v1);
return v2;
}
public static org.eclipse.microprofile.config.spi.Converter patternValidatingConverter(org.eclipse.microprofile.config.spi.Converter, java.lang.String)
{
org.eclipse.microprofile.config.spi.Converter v0, v3;
java.lang.String v1;
java.util.regex.Pattern v2;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(v1);
v3 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter patternValidatingConverter(org.eclipse.microprofile.config.spi.Converter,java.util.regex.Pattern)>(v0, v2);
return v3;
}
static boolean isOptionalConverter(org.eclipse.microprofile.config.spi.Converter)
{
org.eclipse.microprofile.config.spi.Converter v0, v2, v4, v6;
boolean v1, v3, v5, v7, v8;
v0 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v1 = v0 instanceof io.smallrye.config.Converters$OptionalConverter;
if v1 != 0 goto label1;
v2 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_INT_CONVERTER>;
v3 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v3 != 0 goto label1;
v4 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_LONG_CONVERTER>;
v5 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
if v5 != 0 goto label1;
v6 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_DOUBLE_CONVERTER>;
v7 = virtualinvoke v0.<java.lang.Object: boolean equals(java.lang.Object)>(v6);
if v7 == 0 goto label2;
label1:
v8 = 1;
goto label3;
label2:
v8 = 0;
label3:
return v8;
}
static void <clinit>()
{
org.eclipse.microprofile.config.spi.Converter v10, v101, v103, v105, v107, v109, v11, v111, v12, v14, v15, v16, v18, v19, v20, v22, v23, v24, v26, v27, v28, v3, v30, v31, v33, v34, v36, v37, v39, v4, v40, v41, v43, v44, v46, v47, v48, v50, v51, v52, v54, v55, v56, v58, v59, v6, v60, v62, v63, v64, v66, v67, v68, v7, v70, v71, v75, v77, v79, v8, v81, v83, v85, v87, v89, v91, v93, v95, v97, v99;
java.util.Map v100, v102, v104, v106, v108, v110, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96, v98;
io.smallrye.config.Converters$BuiltInConverter v13, v17, v21, v25, v29, v32, v35, v38, v42, v45, v49, v5, v53, v57, v61, v65, v69, v72, v9;
boolean v1, v2;
java.util.HashMap v112, v73;
java.lang.Class v0, v113, v114, v115, v116, v117, v118, v119, v120, v121;
v0 = class "Lio/smallrye/config/Converters;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.smallrye.config.Converters: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <io.smallrye.config.Converters$lambda_static_7721f290_1__3132: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v4 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v3);
v5 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(0, v4);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter STRING_CONVERTER> = v5;
v6 = staticinvoke <io.smallrye.config.Converters$lambda_static_c2201d0f_1__3133: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v7 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v6);
v8 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v7);
v9 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(1, v8);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter BOOLEAN_CONVERTER> = v9;
v10 = staticinvoke <io.smallrye.config.Converters$lambda_static_496cfed0_1__3134: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v11 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v10);
v12 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v11);
v13 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(2, v12);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter DOUBLE_CONVERTER> = v13;
v14 = staticinvoke <io.smallrye.config.Converters$lambda_static_bd55751b_1__3135: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v15 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v14);
v16 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v15);
v17 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(3, v16);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter FLOAT_CONVERTER> = v17;
v18 = staticinvoke <io.smallrye.config.Converters$lambda_static_c244dc85_1__3136: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v19 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v18);
v20 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v19);
v21 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(4, v20);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter LONG_CONVERTER> = v21;
v22 = staticinvoke <io.smallrye.config.Converters$lambda_static_60db1e39_1__3137: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v23 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v22);
v24 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v23);
v25 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(5, v24);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter INTEGER_CONVERTER> = v25;
v26 = staticinvoke <io.smallrye.config.Converters$lambda_static_7c03a47f_1__3138: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v27 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v26);
v28 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v27);
v29 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(6, v28);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter CLASS_CONVERTER> = v29;
v30 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter INTEGER_CONVERTER>;
v31 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalIntConverter(org.eclipse.microprofile.config.spi.Converter)>(v30);
v32 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(7, v31);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_INT_CONVERTER> = v32;
v33 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter LONG_CONVERTER>;
v34 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalLongConverter(org.eclipse.microprofile.config.spi.Converter)>(v33);
v35 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(8, v34);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_LONG_CONVERTER> = v35;
v36 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter DOUBLE_CONVERTER>;
v37 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newOptionalDoubleConverter(org.eclipse.microprofile.config.spi.Converter)>(v36);
v38 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(9, v37);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_DOUBLE_CONVERTER> = v38;
v39 = staticinvoke <io.smallrye.config.Converters$lambda_static_d34d10b8_1__3139: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v40 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v39);
v41 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v40);
v42 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(10, v41);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter INET_ADDRESS_CONVERTER> = v42;
v43 = staticinvoke <io.smallrye.config.Converters$lambda_static_fc2a8cae_1__3140: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v44 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v43);
v45 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(11, v44);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter CHARACTER_CONVERTER> = v45;
v46 = staticinvoke <io.smallrye.config.Converters$valueOf__3141: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v47 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v46);
v48 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v47);
v49 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(12, v48);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter SHORT_CONVERTER> = v49;
v50 = staticinvoke <io.smallrye.config.Converters$valueOf__3142: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v51 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v50);
v52 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v51);
v53 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(13, v52);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter BYTE_CONVERTER> = v53;
v54 = staticinvoke <io.smallrye.config.Converters$lambda_static_768a41e6_1__3143: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v55 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v54);
v56 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v55);
v57 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(14, v56);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter UUID_CONVERTER> = v57;
v58 = staticinvoke <io.smallrye.config.Converters$lambda_static_c8acc150_1__3144: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v59 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v58);
v60 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v59);
v61 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(15, v60);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter CURRENCY_CONVERTER> = v61;
v62 = staticinvoke <io.smallrye.config.Converters$lambda_static_f2608bec_1__3145: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v63 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v62);
v64 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v63);
v65 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(16, v64);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter BITSET_CONVERTER> = v65;
v66 = staticinvoke <io.smallrye.config.Converters$compile__3146: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v67 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v66);
v68 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v67);
v69 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(17, v68);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter PATTERN_CONVERTER> = v69;
v70 = staticinvoke <io.smallrye.config.Converters$lambda_static_6e554b3c_1__3147: org.eclipse.microprofile.config.spi.Converter bootstrap$()>();
v71 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newEmptyValueConverter(org.eclipse.microprofile.config.spi.Converter)>(v70);
v72 = staticinvoke <io.smallrye.config.Converters$BuiltInConverter: io.smallrye.config.Converters$BuiltInConverter of(int,org.eclipse.microprofile.config.spi.Converter)>(18, v71);
<io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter PATH_CONVERTER> = v72;
v73 = new java.util.HashMap;
specialinvoke v73.<java.util.HashMap: void <init>()>();
<io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS> = v73;
v74 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v75 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter STRING_CONVERTER>;
interfaceinvoke v74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", v75);
v76 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v77 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter BOOLEAN_CONVERTER>;
interfaceinvoke v76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", v77);
v78 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v79 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter DOUBLE_CONVERTER>;
interfaceinvoke v78.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Double;", v79);
v80 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v81 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter FLOAT_CONVERTER>;
interfaceinvoke v80.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Float;", v81);
v82 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v83 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter LONG_CONVERTER>;
interfaceinvoke v82.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", v83);
v84 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v85 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter INTEGER_CONVERTER>;
interfaceinvoke v84.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", v85);
v86 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v87 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter SHORT_CONVERTER>;
interfaceinvoke v86.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", v87);
v88 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v89 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter CLASS_CONVERTER>;
interfaceinvoke v88.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Class;", v89);
v90 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v91 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter INET_ADDRESS_CONVERTER>;
interfaceinvoke v90.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/InetAddress;", v91);
v92 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v93 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_INT_CONVERTER>;
interfaceinvoke v92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/OptionalInt;", v93);
v94 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v95 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_LONG_CONVERTER>;
interfaceinvoke v94.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/OptionalLong;", v95);
v96 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v97 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter OPTIONAL_DOUBLE_CONVERTER>;
interfaceinvoke v96.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/OptionalDouble;", v97);
v98 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v99 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter CHARACTER_CONVERTER>;
interfaceinvoke v98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Character;", v99);
v100 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v101 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter BYTE_CONVERTER>;
interfaceinvoke v100.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Byte;", v101);
v102 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v103 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter UUID_CONVERTER>;
interfaceinvoke v102.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/UUID;", v103);
v104 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v105 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter CURRENCY_CONVERTER>;
interfaceinvoke v104.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Currency;", v105);
v106 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v107 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter BITSET_CONVERTER>;
interfaceinvoke v106.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/BitSet;", v107);
v108 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v109 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter PATTERN_CONVERTER>;
interfaceinvoke v108.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/regex/Pattern;", v109);
v110 = <io.smallrye.config.Converters: java.util.Map ALL_CONVERTERS>;
v111 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter PATH_CONVERTER>;
interfaceinvoke v110.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/nio/file/Path;", v111);
v112 = new java.util.HashMap;
specialinvoke v112.<java.util.HashMap: void <init>(int)>(9);
v113 = <java.lang.Byte: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v113, class "Ljava/lang/Byte;");
v114 = <java.lang.Short: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v114, class "Ljava/lang/Short;");
v115 = <java.lang.Integer: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v115, class "Ljava/lang/Integer;");
v116 = <java.lang.Long: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v116, class "Ljava/lang/Long;");
v117 = <java.lang.Float: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v117, class "Ljava/lang/Float;");
v118 = <java.lang.Double: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v118, class "Ljava/lang/Double;");
v119 = <java.lang.Character: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v119, class "Ljava/lang/Character;");
v120 = <java.lang.Boolean: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v120, class "Ljava/lang/Boolean;");
v121 = <java.lang.Void: java.lang.Class TYPE>;
interfaceinvoke v112.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v121, class "Ljava/lang/Void;");
<io.smallrye.config.Converters: java.util.Map PRIMITIVE_TYPES> = v112;
return;
}
}