class io.smallrye.config.ImplicitConverters$HyphenateEnumConverter extends java.lang.Object implements org.eclipse.microprofile.config.spi.Converter, java.io.Serializable
{
private static final long serialVersionUID;
private final java.lang.Class enumType;
private final java.util.Map values;
public void <init>(java.lang.Class)
{
java.lang.Object[] v4;
java.util.HashMap v2;
io.smallrye.config.ImplicitConverters$HyphenateEnumConverter v0;
java.lang.Enum v7;
java.util.Map v8;
int v5, v6;
java.lang.Class v1, v3;
java.lang.String v10, v9;
v0 := @this: io.smallrye.config.ImplicitConverters$HyphenateEnumConverter;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.util.Map values> = v2;
v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.lang.Class enumType> = v1;
v3 = v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.lang.Class enumType>;
v4 = virtualinvoke v3.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
v8 = v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.util.Map values>;
v9 = virtualinvoke v7.<java.lang.Enum: java.lang.String name()>();
v10 = staticinvoke <io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.lang.String hyphenate(java.lang.String)>(v9);
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v7);
v6 = v6 + 1;
goto label1;
label2:
return;
}
public java.lang.Enum convert(java.lang.String) throws java.lang.IllegalArgumentException, java.lang.NullPointerException
{
java.lang.Object[] v10;
java.lang.IllegalArgumentException v9;
io.smallrye.config.ImplicitConverters$HyphenateEnumConverter v0;
java.util.Map v5;
java.lang.Class v11, v7;
java.lang.Object v6, v8;
java.lang.String v1, v12, v2, v4;
boolean v3;
v0 := @this: io.smallrye.config.ImplicitConverters$HyphenateEnumConverter;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: java.lang.String trim()>();
v3 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label1;
return null;
label1:
v4 = staticinvoke <io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.lang.String hyphenate(java.lang.String)>(v2);
v5 = v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.util.Map values>;
v6 = interfaceinvoke v5.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
if v6 == null goto label2;
v7 = v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.lang.Class enumType>;
v8 = virtualinvoke v7.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v6);
return v8;
label2:
v9 = new java.lang.IllegalArgumentException;
v10 = newarray (java.lang.Object)[2];
v10[0] = v1;
v11 = v0.<io.smallrye.config.ImplicitConverters$HyphenateEnumConverter: java.lang.Class enumType>;
v10[1] = v11;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot convert %s to enum %s", v10);
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v9;
}
private static java.lang.String hyphenate(java.lang.String)
{
java.lang.String v0, v1, v2, v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String skewer(java.lang.String)>(v0);
v2 = virtualinvoke v1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_-", "-");
v3 = virtualinvoke v2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_", "-");
return v3;
}
}