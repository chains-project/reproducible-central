public class io.smallrye.context.SmallRyeContextManagerProvider extends java.lang.Object implements org.eclipse.microprofile.context.spi.ContextManagerProvider
{
private static org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration registration;
private java.util.Map contextManagersForClassLoader;
public void <init>()
{
java.util.HashMap v1;
io.smallrye.context.SmallRyeContextManagerProvider v0;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v0.<io.smallrye.context.SmallRyeContextManagerProvider: java.util.Map contextManagersForClassLoader> = v1;
return;
}
public static void register()
{
org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration v0, v2;
io.smallrye.context.SmallRyeContextManagerProvider v1;
v0 = <io.smallrye.context.SmallRyeContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration registration>;
if v0 != null goto label1;
v1 = new io.smallrye.context.SmallRyeContextManagerProvider;
specialinvoke v1.<io.smallrye.context.SmallRyeContextManagerProvider: void <init>()>();
v2 = staticinvoke <org.eclipse.microprofile.context.spi.ContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration register(org.eclipse.microprofile.context.spi.ContextManagerProvider)>(v1);
<io.smallrye.context.SmallRyeContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration registration> = v2;
label1:
return;
}
public static void unregister()
{
org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration v0;
v0 = <io.smallrye.context.SmallRyeContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration registration>;
virtualinvoke v0.<org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration: void unregister()>();
<io.smallrye.context.SmallRyeContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProviderRegistration registration> = null;
return;
}
public io.smallrye.context.SmallRyeContextManager getContextManager()
{
io.smallrye.context.SmallRyeContextManagerProvider v0;
java.lang.Thread v1;
io.smallrye.context.SmallRyeContextManager v3;
java.lang.ClassLoader v2;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = virtualinvoke v1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v3 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManagerProvider: io.smallrye.context.SmallRyeContextManager getContextManager(java.lang.ClassLoader)>(v2);
return v3;
}
public io.smallrye.context.SmallRyeContextManager getContextManager(java.lang.ClassLoader)
{
io.smallrye.context.SmallRyeContextManager$Builder v5, v6, v7, v8, v9;
java.lang.Throwable v10;
io.smallrye.context.SmallRyeContextManagerProvider v0;
java.util.Map v2, v4;
java.lang.Object v3;
java.lang.ClassLoader v1;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
v1 := @parameter0: java.lang.ClassLoader;
v2 = v0.<io.smallrye.context.SmallRyeContextManagerProvider: java.util.Map contextManagersForClassLoader>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label4;
entermonitor v0;
label1:
v4 = v0.<io.smallrye.context.SmallRyeContextManagerProvider: java.util.Map contextManagersForClassLoader>;
interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v5 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManagerProvider: io.smallrye.context.SmallRyeContextManager$Builder getContextManagerBuilder()>();
v6 = virtualinvoke v5.<io.smallrye.context.SmallRyeContextManager$Builder: io.smallrye.context.SmallRyeContextManager$Builder forClassLoader(java.lang.ClassLoader)>(v1);
v7 = virtualinvoke v6.<io.smallrye.context.SmallRyeContextManager$Builder: io.smallrye.context.SmallRyeContextManager$Builder registerOnProvider()>();
v8 = virtualinvoke v7.<io.smallrye.context.SmallRyeContextManager$Builder: io.smallrye.context.SmallRyeContextManager$Builder addDiscoveredThreadContextProviders()>();
v9 = virtualinvoke v8.<io.smallrye.context.SmallRyeContextManager$Builder: io.smallrye.context.SmallRyeContextManager$Builder addDiscoveredContextManagerExtensions()>();
v3 = virtualinvoke v9.<io.smallrye.context.SmallRyeContextManager$Builder: io.smallrye.context.SmallRyeContextManager build()>();
exitmonitor v0;
label2:
goto label4;
label3:
v10 := @caughtexception;
exitmonitor v0;
throw v10;
label4:
return v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.smallrye.context.SmallRyeContextManager$Builder getContextManagerBuilder()
{
io.smallrye.context.SmallRyeContextManager$Builder v1;
io.smallrye.context.SmallRyeContextManagerProvider v0;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
v1 = new io.smallrye.context.SmallRyeContextManager$Builder;
specialinvoke v1.<io.smallrye.context.SmallRyeContextManager$Builder: void <init>()>();
return v1;
}
public void registerContextManager(org.eclipse.microprofile.context.spi.ContextManager, java.lang.ClassLoader)
{
java.lang.Throwable v7;
io.smallrye.context.SmallRyeContextManagerProvider v0;
java.lang.IllegalArgumentException v4;
org.eclipse.microprofile.context.spi.ContextManager v1;
java.util.Map v6;
java.lang.ClassLoader v2;
java.lang.String v5;
boolean v3;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
v1 := @parameter0: org.eclipse.microprofile.context.spi.ContextManager;
v2 := @parameter1: java.lang.ClassLoader;
v3 = v1 instanceof io.smallrye.context.SmallRyeContextManager;
if v3 != 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.eclipse.microprofile.context.spi.ContextManager)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Only instances of SmallRyeContextManager are supported: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
entermonitor v0;
label2:
v6 = v0.<io.smallrye.context.SmallRyeContextManagerProvider: java.util.Map contextManagersForClassLoader>;
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v1);
exitmonitor v0;
label3:
goto label5;
label4:
v7 := @caughtexception;
exitmonitor v0;
throw v7;
label5:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
public void releaseContextManager(org.eclipse.microprofile.context.spi.ContextManager)
{
java.lang.Throwable v8;
java.util.Iterator v4;
io.smallrye.context.SmallRyeContextManagerProvider v0;
java.util.Set v3;
org.eclipse.microprofile.context.spi.ContextManager v1;
java.util.Map v2;
java.lang.Object v6, v7;
boolean v5;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
v1 := @parameter0: org.eclipse.microprofile.context.spi.ContextManager;
entermonitor v0;
label1:
v2 = v0.<io.smallrye.context.SmallRyeContextManagerProvider: java.util.Map contextManagersForClassLoader>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label2:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
if v7 != v1 goto label2;
interfaceinvoke v4.<java.util.Iterator: void remove()>();
exitmonitor v0;
label3:
return;
label4:
exitmonitor v0;
label5:
goto label7;
label6:
v8 := @caughtexception;
exitmonitor v0;
throw v8;
label7:
return;
catch java.lang.Throwable from label1 to label3 with label6;
catch java.lang.Throwable from label4 to label5 with label6;
}
public org.eclipse.microprofile.context.spi.ContextManager findContextManager(java.lang.ClassLoader)
{
io.smallrye.context.SmallRyeContextManagerProvider v0;
java.util.Map v2;
java.lang.Object v3;
java.lang.ClassLoader v1;
v0 := @this: io.smallrye.context.SmallRyeContextManagerProvider;
v1 := @parameter0: java.lang.ClassLoader;
v2 = v0.<io.smallrye.context.SmallRyeContextManagerProvider: java.util.Map contextManagersForClassLoader>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public static io.smallrye.context.SmallRyeContextManager getManager()
{
io.smallrye.context.SmallRyeContextManager v1;
io.smallrye.context.SmallRyeContextManagerProvider v0;
v0 = staticinvoke <io.smallrye.context.SmallRyeContextManagerProvider: io.smallrye.context.SmallRyeContextManagerProvider instance()>();
v1 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManagerProvider: io.smallrye.context.SmallRyeContextManager getContextManager()>();
return v1;
}
public static io.smallrye.context.SmallRyeContextManagerProvider instance()
{
org.eclipse.microprofile.context.spi.ContextManagerProvider v0;
v0 = staticinvoke <org.eclipse.microprofile.context.spi.ContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProvider instance()>();
return v0;
}
}