public class io.smallrye.context.SmallRyeManagedExecutor$Builder extends java.lang.Object implements org.eclipse.microprofile.context.ManagedExecutor$Builder
{
private io.smallrye.context.SmallRyeContextManager manager;
private int maxAsync;
private int maxQueued;
private java.lang.String[] propagated;
private java.lang.String[] cleared;
private java.lang.String injectionPointName;
private java.util.concurrent.ExecutorService executorService;
public void <init>(io.smallrye.context.SmallRyeContextManager)
{
java.lang.String[] v3, v4;
io.smallrye.context.SmallRyeContextManager v1;
io.smallrye.context.impl.DefaultValues v2;
int v5, v6;
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.util.concurrent.ExecutorService v7;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: io.smallrye.context.SmallRyeContextManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String injectionPointName> = null;
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: io.smallrye.context.SmallRyeContextManager manager> = v1;
v2 = virtualinvoke v1.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.impl.DefaultValues getDefaultValues()>();
v3 = virtualinvoke v2.<io.smallrye.context.impl.DefaultValues: java.lang.String[] getExecutorPropagated()>();
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String[] propagated> = v3;
v4 = virtualinvoke v2.<io.smallrye.context.impl.DefaultValues: java.lang.String[] getExecutorCleared()>();
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String[] cleared> = v4;
v5 = virtualinvoke v2.<io.smallrye.context.impl.DefaultValues: int getExecutorAsync()>();
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxAsync> = v5;
v6 = virtualinvoke v2.<io.smallrye.context.impl.DefaultValues: int getExecutorQueue()>();
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxQueued> = v6;
v7 = virtualinvoke v1.<io.smallrye.context.SmallRyeContextManager: java.util.concurrent.ExecutorService getDefaultExecutorService()>();
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.util.concurrent.ExecutorService executorService> = v7;
return;
}
public io.smallrye.context.SmallRyeManagedExecutor build()
{
org.jboss.threads.ViewExecutor$Builder v11, v3, v7;
java.lang.String[] v20, v21, v22;
int v10, v13, v14, v16, v17, v4, v5, v6, v8, v9;
java.lang.String v23;
java.util.concurrent.ExecutorService v1, v12, v2;
io.smallrye.context.SmallRyeContextManager v19;
io.smallrye.context.SmallRyeThreadContext v18;
io.smallrye.context.SmallRyeManagedExecutor v15;
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.util.concurrent.ExecutorService executorService>;
if v1 == null goto label5;
v2 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.util.concurrent.ExecutorService executorService>;
v3 = staticinvoke <org.jboss.threads.ViewExecutor: org.jboss.threads.ViewExecutor$Builder builder(java.util.concurrent.Executor)>(v2);
v4 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxAsync>;
v5 = (int) -1;
if v4 != v5 goto label1;
v6 = 32767;
goto label2;
label1:
v6 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxAsync>;
label2:
v7 = virtualinvoke v3.<org.jboss.threads.ViewExecutor$Builder: org.jboss.threads.ViewExecutor$Builder setMaxSize(int)>(v6);
v8 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxQueued>;
v9 = (int) -1;
if v8 != v9 goto label3;
v10 = 2147483647;
goto label4;
label3:
v10 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxQueued>;
label4:
v11 = virtualinvoke v7.<org.jboss.threads.ViewExecutor$Builder: org.jboss.threads.ViewExecutor$Builder setQueueLimit(int)>(v10);
v12 = virtualinvoke v11.<org.jboss.threads.ViewExecutor$Builder: org.jboss.threads.ViewExecutor build()>();
goto label6;
label5:
v13 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxAsync>;
v14 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxQueued>;
v12 = staticinvoke <io.smallrye.context.SmallRyeManagedExecutor: java.util.concurrent.ExecutorService newThreadPoolExecutor(int,int)>(v13, v14);
label6:
v15 = new io.smallrye.context.SmallRyeManagedExecutor;
v16 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxAsync>;
v17 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxQueued>;
v18 = new io.smallrye.context.SmallRyeThreadContext;
v19 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: io.smallrye.context.SmallRyeContextManager manager>;
v20 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String[] propagated>;
v21 = <io.smallrye.context.SmallRyeContextManager: java.lang.String[] NO_STRING>;
v22 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String[] cleared>;
specialinvoke v18.<io.smallrye.context.SmallRyeThreadContext: void <init>(io.smallrye.context.SmallRyeContextManager,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.util.concurrent.ExecutorService)>(v19, v20, v21, v22, null, v12);
v23 = v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String injectionPointName>;
specialinvoke v15.<io.smallrye.context.SmallRyeManagedExecutor: void <init>(int,int,io.smallrye.context.SmallRyeThreadContext,java.util.concurrent.ExecutorService,java.lang.String)>(v16, v17, v18, v12, v23);
return v15;
}
public transient io.smallrye.context.SmallRyeManagedExecutor$Builder propagated(java.lang.String[])
{
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.lang.String[] v1;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: java.lang.String[];
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String[] propagated> = v1;
return v0;
}
public io.smallrye.context.SmallRyeManagedExecutor$Builder maxAsync(int)
{
int v1, v2;
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.lang.IllegalArgumentException v3;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: int;
if v1 == 0 goto label1;
v2 = (int) -1;
if v1 >= v2 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ManagedExecutor parameter maxAsync cannot be 0 or lower then -1.");
throw v3;
label2:
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxAsync> = v1;
return v0;
}
public io.smallrye.context.SmallRyeManagedExecutor$Builder maxQueued(int)
{
int v1, v2;
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.lang.IllegalArgumentException v3;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: int;
if v1 == 0 goto label1;
v2 = (int) -1;
if v1 >= v2 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ManagedExecutor parameter maxQueued cannot be 0 or lower than -1.");
throw v3;
label2:
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: int maxQueued> = v1;
return v0;
}
public transient io.smallrye.context.SmallRyeManagedExecutor$Builder cleared(java.lang.String[])
{
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.lang.String[] v1;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: java.lang.String[];
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String[] cleared> = v1;
return v0;
}
public io.smallrye.context.SmallRyeManagedExecutor$Builder injectionPointName(java.lang.String)
{
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.lang.String v1;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: java.lang.String;
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.lang.String injectionPointName> = v1;
return v0;
}
public io.smallrye.context.SmallRyeManagedExecutor$Builder withExecutorService(java.util.concurrent.ExecutorService)
{
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
java.util.concurrent.ExecutorService v1;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v1 := @parameter0: java.util.concurrent.ExecutorService;
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.util.concurrent.ExecutorService executorService> = v1;
return v0;
}
public io.smallrye.context.SmallRyeManagedExecutor$Builder withNewExecutorService()
{
io.smallrye.context.SmallRyeManagedExecutor$Builder v0;
v0 := @this: io.smallrye.context.SmallRyeManagedExecutor$Builder;
v0.<io.smallrye.context.SmallRyeManagedExecutor$Builder: java.util.concurrent.ExecutorService executorService> = null;
return v0;
}
}