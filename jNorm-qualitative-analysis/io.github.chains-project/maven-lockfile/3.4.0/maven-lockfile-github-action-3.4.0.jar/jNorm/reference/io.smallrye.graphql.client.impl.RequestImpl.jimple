public class io.smallrye.graphql.client.impl.RequestImpl extends java.lang.Object implements io.smallrye.graphql.client.Request
{
private final java.lang.String document;
private java.util.Map variables;
private java.lang.String operationName;
public void <init>(java.lang.String)
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.HashMap v2;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document> = v1;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables> = v2;
return;
}
public java.lang.String toJson()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
jakarta.json.JsonObjectBuilder v1, v3;
java.util.Map v4;
jakarta.json.JsonObject v11, v6;
java.lang.String v10, v12, v2, v7, v8;
boolean v5, v9;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = staticinvoke <jakarta.json.Json: jakarta.json.JsonObjectBuilder createObjectBuilder()>();
v2 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document>;
v3 = interfaceinvoke v1.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("query", v2);
v4 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v5 = interfaceinvoke v4.<java.util.Map: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = specialinvoke v0.<io.smallrye.graphql.client.impl.RequestImpl: jakarta.json.JsonObject _formatJsonVariables()>();
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonValue)>("variables", v6);
label1:
v7 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
if v7 == null goto label2;
v8 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
v9 = virtualinvoke v8.<java.lang.String: boolean isEmpty()>();
if v9 != 0 goto label2;
v10 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("operationName", v10);
label2:
v11 = interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
v12 = virtualinvoke v11.<java.lang.Object: java.lang.String toString()>();
return v12;
}
public jakarta.json.JsonObject toJsonObject()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
jakarta.json.JsonObjectBuilder v1, v3;
java.util.Map v4;
jakarta.json.JsonObject v11, v6;
java.lang.String v10, v2, v7, v8;
boolean v5, v9;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = staticinvoke <jakarta.json.Json: jakarta.json.JsonObjectBuilder createObjectBuilder()>();
v2 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document>;
v3 = interfaceinvoke v1.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("query", v2);
v4 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v5 = interfaceinvoke v4.<java.util.Map: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = specialinvoke v0.<io.smallrye.graphql.client.impl.RequestImpl: jakarta.json.JsonObject _formatJsonVariables()>();
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonValue)>("variables", v6);
label1:
v7 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
if v7 == null goto label2;
v8 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
v9 = virtualinvoke v8.<java.lang.String: boolean isEmpty()>();
if v9 != 0 goto label2;
v10 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("operationName", v10);
label2:
v11 = interfaceinvoke v3.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
return v11;
}
private jakarta.json.JsonObject _formatJsonVariables()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
jakarta.json.JsonObjectBuilder v1;
java.util.Map v2;
jakarta.json.JsonObject v4;
java.util.function.BiConsumer v3;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = staticinvoke <jakarta.json.Json: jakarta.json.JsonObjectBuilder createObjectBuilder()>();
v2 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v3 = staticinvoke <io.smallrye.graphql.client.impl.RequestImpl$lambda__formatJsonVariables_0__703: java.util.function.BiConsumer bootstrap$(jakarta.json.JsonObjectBuilder)>(v1);
interfaceinvoke v2.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v3);
v4 = interfaceinvoke v1.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
return v4;
}
public java.lang.String getDocument()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document>;
return v1;
}
public java.util.Map getVariables()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
return v1;
}
public void setVariables(java.util.Map)
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 := @parameter0: java.util.Map;
v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables> = v1;
return;
}
public java.lang.Object getVariable(java.lang.String)
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public io.smallrye.graphql.client.Request setVariable(java.lang.String, java.lang.Object)
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v3;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public java.lang.String getOperationName()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName>;
return v1;
}
public void setOperationName(java.lang.String)
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.lang.String v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 := @parameter0: java.lang.String;
v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String operationName> = v1;
return;
}
public io.smallrye.graphql.client.Request resetVariables()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
interfaceinvoke v1.<java.util.Map: void clear()>();
return v0;
}
public java.lang.String toString()
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v2;
java.lang.String v1, v3;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document>;
v2 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.util.Map)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("GraphQLRequest{document=\u0001, variables=\u0001}");
return v3;
}
public boolean equals(java.lang.Object)
{
io.smallrye.graphql.client.impl.RequestImpl v0;
java.util.Map v7, v8;
java.lang.Class v2, v3;
java.lang.Object v1;
java.lang.String v4, v5;
boolean v6, v9;
v0 := @this: io.smallrye.graphql.client.impl.RequestImpl;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
return 0;
label3:
v4 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document>;
v5 = v1.<io.smallrye.graphql.client.impl.RequestImpl: java.lang.String document>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 != 0 goto label4;
return 0;
label4:
v7 = v0.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v8 = v1.<io.smallrye.graphql.client.impl.RequestImpl: java.util.Map variables>;
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
return v9;
}
}