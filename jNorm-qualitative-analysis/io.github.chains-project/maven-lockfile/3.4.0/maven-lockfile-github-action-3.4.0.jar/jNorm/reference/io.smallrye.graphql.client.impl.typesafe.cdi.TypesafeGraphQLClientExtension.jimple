public class io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension extends java.lang.Object implements jakarta.enterprise.inject.spi.Extension
{
private static final org.jboss.logging.Logger log;
private final java.util.List apis;
public void <init>()
{
io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension v0;
java.util.ArrayList v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension: java.util.List apis> = v1;
return;
}
public void registerGraphQLClientApis(jakarta.enterprise.inject.spi.ProcessAnnotatedType)
{
org.jboss.logging.Logger v5, v8;
java.lang.IllegalArgumentException v9;
io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension v0;
java.util.List v7;
jakarta.enterprise.inject.spi.ProcessAnnotatedType v1;
java.lang.Class v3;
jakarta.enterprise.inject.spi.AnnotatedType v2;
java.lang.String v10, v11, v6;
boolean v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension;
v1 := @parameter0: jakarta.enterprise.inject.spi.ProcessAnnotatedType;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.ProcessAnnotatedType: jakarta.enterprise.inject.spi.AnnotatedType getAnnotatedType()>();
v3 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.AnnotatedType: java.lang.Class getJavaClass()>();
v4 = virtualinvoke v3.<java.lang.Class: boolean isInterface()>();
if v4 == 0 goto label1;
v5 = <io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension: org.jboss.logging.Logger log>;
v6 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v5.<org.jboss.logging.Logger: void infof(java.lang.String,java.lang.Object)>("register %s", v6);
v7 = v0.<io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension: java.util.List apis>;
interfaceinvoke v7.<java.util.List: boolean add(java.lang.Object)>(v3);
goto label2;
label1:
v8 = <io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension: org.jboss.logging.Logger log>;
v9 = new java.lang.IllegalArgumentException;
v10 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("a GraphQlClientApi must be an interface: \u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
virtualinvoke v8.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("failed to register", v9);
label2:
return;
}
public void createProxies(jakarta.enterprise.inject.spi.AfterBeanDiscovery)
{
java.util.Iterator v4;
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v2;
io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension v0;
java.util.List v3;
jakarta.enterprise.inject.spi.AfterBeanDiscovery v1;
java.lang.Object v6;
io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientBean v7;
boolean v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension;
v1 := @parameter0: jakarta.enterprise.inject.spi.AfterBeanDiscovery;
v2 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration getInstance()>();
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension: java.util.List apis>;
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = new io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientBean;
specialinvoke v7.<io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientBean: void <init>(java.lang.Class)>(v6);
interfaceinvoke v1.<jakarta.enterprise.inject.spi.AfterBeanDiscovery: void addBean(jakarta.enterprise.inject.spi.Bean)>(v7);
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: void initTypesafeClientApi(java.lang.Class)>(v6);
goto label1;
label2:
return;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/smallrye/graphql/client/impl/typesafe/cdi/TypesafeGraphQLClientExtension;");
<io.smallrye.graphql.client.impl.typesafe.cdi.TypesafeGraphQLClientExtension: org.jboss.logging.Logger log> = v0;
return;
}
}