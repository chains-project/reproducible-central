public class io.smallrye.graphql.client.typesafe.api.ErrorOr extends java.lang.Object
{
private final java.lang.Object value;
private final java.util.List errors;
public static io.smallrye.graphql.client.typesafe.api.ErrorOr of(java.lang.Object)
{
java.lang.Object v0, v2;
io.smallrye.graphql.client.typesafe.api.ErrorOr v1;
v0 := @parameter0: java.lang.Object;
v1 = new io.smallrye.graphql.client.typesafe.api.ErrorOr;
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v0, "value must not be null");
specialinvoke v1.<io.smallrye.graphql.client.typesafe.api.ErrorOr: void <init>(java.lang.Object,java.util.List)>(v2, null);
return v1;
}
public static io.smallrye.graphql.client.typesafe.api.ErrorOr ofErrors(java.util.List)
{
java.util.List v0, v6;
io.smallrye.graphql.client.typesafe.api.ErrorOr v4;
java.lang.IllegalArgumentException v3;
java.lang.NullPointerException v1;
boolean v2;
java.util.ArrayList v5;
v0 := @parameter0: java.util.List;
if v0 != null goto label1;
v1 = new java.lang.NullPointerException;
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>("errors must not be null");
throw v1;
label1:
v2 = interfaceinvoke v0.<java.util.List: boolean isEmpty()>();
if v2 == 0 goto label2;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("errors must not be empty");
throw v3;
label2:
v4 = new io.smallrye.graphql.client.typesafe.api.ErrorOr;
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>(java.util.Collection)>(v0);
v6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v5);
specialinvoke v4.<io.smallrye.graphql.client.typesafe.api.ErrorOr: void <init>(java.lang.Object,java.util.List)>(null, v6);
return v4;
}
protected void <init>(java.lang.Object, java.util.List)
{
java.lang.Object v1;
java.util.List v2;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value> = v1;
v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors> = v2;
return;
}
public boolean equals(java.lang.Object)
{
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
java.util.List v7, v8;
java.lang.Class v2, v3;
java.lang.Object v1, v4, v5;
boolean v10, v6, v9;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v5 = v1.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 == 0 goto label4;
v7 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
v8 = v1.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 == 0 goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
}
public int hashCode()
{
java.util.List v3;
java.lang.Object[] v1;
int v4;
java.lang.Object v2;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v1[0] = v2;
v3 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
v1[1] = v3;
v4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v4;
}
public java.lang.String toString()
{
java.util.List v4;
java.lang.Object v2;
java.lang.String v3, v5;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v1 == 0 goto label1;
v2 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("value=\u0001");
goto label2;
label1:
v4 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.List)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("errors=\u0001");
label2:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("ErrorOr(\u0001)");
return v5;
}
public boolean isPresent()
{
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v1, v2;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean hasErrors()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasErrors()
{
java.util.List v1;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v2;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public java.lang.Object get()
{
java.util.List v3;
java.lang.Object v5;
java.lang.String v4;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean hasErrors()>();
if v1 == 0 goto label1;
v2 = new java.util.NoSuchElementException;
v3 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.List)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No value present, but \u0001");
specialinvoke v2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
v5 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
return v5;
}
public java.util.List getErrors()
{
java.util.List v5;
java.lang.Object v3;
java.lang.String v4;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v1 == 0 goto label1;
v2 = new java.util.NoSuchElementException;
v3 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No error present, but value \u0001");
specialinvoke v2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
v5 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
return v5;
}
public void ifPresent(java.util.function.Consumer)
{
java.util.function.Consumer v1;
java.lang.Object v3;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v2;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 := @parameter0: java.util.function.Consumer;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "ifPresent action must not be null");
v2 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
interfaceinvoke v1.<java.util.function.Consumer: void accept(java.lang.Object)>(v3);
label1:
return;
}
public void handle(java.util.function.Consumer, java.util.function.Consumer)
{
java.util.function.Consumer v1, v2;
java.util.List v5;
java.lang.Object v4;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v3;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.util.function.Consumer;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "handle dataAction must not be null");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "handle errorsAction must not be null");
v3 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
interfaceinvoke v1.<java.util.function.Consumer: void accept(java.lang.Object)>(v4);
goto label2;
label1:
v5 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.util.List errors>;
interfaceinvoke v2.<java.util.function.Consumer: void accept(java.lang.Object)>(v5);
label2:
return;
}
public io.smallrye.graphql.client.typesafe.api.ErrorOr map(java.util.function.Function)
{
java.lang.Object v3, v4;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0, v5;
java.util.function.Function v1;
boolean v2;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 := @parameter0: java.util.function.Function;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "map function must not be null");
v2 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v4 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
v5 = staticinvoke <io.smallrye.graphql.client.typesafe.api.ErrorOr: io.smallrye.graphql.client.typesafe.api.ErrorOr of(java.lang.Object)>(v4);
return v5;
label1:
return v0;
}
public io.smallrye.graphql.client.typesafe.api.ErrorOr flatMap(java.util.function.Function)
{
java.lang.Object v3, v4;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
java.util.function.Function v1;
boolean v2;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 := @parameter0: java.util.function.Function;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "flatMap function must not be null");
v2 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v4 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
return v4;
label1:
return v0;
}
public java.util.Optional optional()
{
java.util.Optional v3;
java.lang.Object v2;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v1 == 0 goto label1;
v2 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v3 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v2);
goto label2;
label1:
v3 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
label2:
return v3;
}
public java.util.stream.Stream stream()
{
java.util.stream.Stream v3;
java.lang.Object v2;
io.smallrye.graphql.client.typesafe.api.ErrorOr v0;
boolean v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.ErrorOr;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean isPresent()>();
if v1 == 0 goto label1;
v2 = v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: java.lang.Object value>;
v3 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object)>(v2);
goto label2;
label1:
v3 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream empty()>();
label2:
return v3;
}
}