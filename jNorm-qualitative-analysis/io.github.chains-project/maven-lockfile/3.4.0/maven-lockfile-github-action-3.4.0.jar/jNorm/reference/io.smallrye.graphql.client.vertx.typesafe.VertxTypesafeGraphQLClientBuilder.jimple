public class io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder extends java.lang.Object implements io.smallrye.graphql.client.typesafe.api.TypesafeGraphQLClientBuilder
{
private static final org.jboss.logging.Logger log;
private java.lang.String configKey;
private java.net.URI endpoint;
private java.lang.String websocketUrl;
private java.lang.Boolean executeSingleOperationsOverWebsocket;
private java.util.Map headers;
private java.util.Map initPayload;
private java.util.List subprotocols;
private io.vertx.core.Vertx vertx;
private io.vertx.core.http.HttpClientOptions options;
private io.vertx.ext.web.client.WebClient webClient;
private io.vertx.core.http.HttpClient httpClient;
private java.lang.Integer websocketInitializationTimeout;
private java.lang.Boolean allowUnexpectedResponseFields;
public void <init>()
{
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.util.ArrayList v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey> = null;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.List subprotocols> = v1;
return;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder configKey(java.lang.String)
{
java.lang.String v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.String;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey> = v1;
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder vertx(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: io.vertx.core.Vertx;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx> = v1;
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder client(io.vertx.ext.web.client.WebClient)
{
io.vertx.ext.web.client.WebClient v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: io.vertx.ext.web.client.WebClient;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.ext.web.client.WebClient webClient> = v1;
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder options(io.vertx.core.http.HttpClientOptions)
{
io.vertx.core.http.HttpClientOptions v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: io.vertx.core.http.HttpClientOptions;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options> = v1;
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder endpoint(java.net.URI)
{
java.net.URI v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.net.URI;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.net.URI endpoint> = v1;
return v0;
}
public io.smallrye.graphql.client.typesafe.api.TypesafeGraphQLClientBuilder websocketUrl(java.lang.String)
{
java.lang.String v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.String;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String websocketUrl> = v1;
return v0;
}
public io.smallrye.graphql.client.typesafe.api.TypesafeGraphQLClientBuilder executeSingleOperationsOverWebsocket(boolean)
{
java.lang.Boolean v2;
boolean v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean executeSingleOperationsOverWebsocket> = v2;
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder header(java.lang.String, java.lang.String)
{
java.util.LinkedHashMap v4;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.util.Map v3, v5;
java.lang.String v1, v2;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map headers>;
if v3 != null goto label1;
v4 = new java.util.LinkedHashMap;
specialinvoke v4.<java.util.LinkedHashMap: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map headers> = v4;
label1:
v5 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map headers>;
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder initPayload(java.util.Map)
{
java.util.LinkedHashMap v3;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.util.Map v1, v2, v4;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.util.Map;
v2 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map initPayload>;
if v2 != null goto label1;
v3 = new java.util.LinkedHashMap;
specialinvoke v3.<java.util.LinkedHashMap: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map initPayload> = v3;
label1:
v4 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map initPayload>;
interfaceinvoke v4.<java.util.Map: void putAll(java.util.Map)>(v1);
return v0;
}
public transient io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder subprotocols(io.smallrye.graphql.client.websocket.WebsocketSubprotocol[])
{
java.util.List v2, v3;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
io.smallrye.graphql.client.websocket.WebsocketSubprotocol[] v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: io.smallrye.graphql.client.websocket.WebsocketSubprotocol[];
v2 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.List subprotocols>;
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v3);
return v0;
}
public io.smallrye.graphql.client.typesafe.api.TypesafeGraphQLClientBuilder allowUnexpectedResponseFields(boolean)
{
java.lang.Boolean v2;
boolean v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean allowUnexpectedResponseFields> = v2;
return v0;
}
public io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder websocketInitializationTimeout(java.lang.Integer)
{
java.lang.Integer v1;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.Integer;
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Integer websocketInitializationTimeout> = v1;
return v0;
}
public java.lang.Object build(java.lang.Class)
{
io.vertx.ext.web.client.WebClientOptions v3;
java.lang.Integer v34;
java.util.Map v25, v26;
java.net.URI v17, v27, v6;
java.util.EnumSet v15;
boolean v12, v30, v36;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v24;
java.util.List v10, v11, v33;
java.lang.ClassLoader v37;
io.vertx.core.http.HttpClient v31;
io.vertx.ext.web.client.WebClient v32;
java.util.ArrayList v13;
java.lang.Boolean v20, v21, v22, v23, v29, v35;
io.vertx.core.http.HttpClientOptions v2;
java.lang.String v16, v18, v19, v28, v4, v5, v8;
io.smallrye.graphql.client.websocket.WebsocketSubprotocol v14;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.lang.Class[] v38;
java.lang.RuntimeException v9;
io.smallrye.graphql.client.impl.ErrorMessageProvider v7;
java.lang.Class v1;
java.lang.Object v40, v41;
java.lang.reflect.InvocationHandler v39;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.Class;
v2 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options>;
if v2 != null goto label1;
v3 = new io.vertx.ext.web.client.WebClientOptions;
specialinvoke v3.<io.vertx.ext.web.client.WebClientOptions: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options> = v3;
label1:
v4 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey>;
if v4 != null goto label2;
v5 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey(java.lang.Class)>(v1);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey> = v5;
label2:
specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: void applyConfigFor(java.lang.Class)>(v1);
v6 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.net.URI endpoint>;
if v6 != null goto label3;
v7 = staticinvoke <io.smallrye.graphql.client.impl.ErrorMessageProvider: io.smallrye.graphql.client.impl.ErrorMessageProvider get()>();
v8 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey>;
v9 = interfaceinvoke v7.<io.smallrye.graphql.client.impl.ErrorMessageProvider: java.lang.RuntimeException urlMissingErrorForNamedClient(java.lang.String)>(v8);
throw v9;
label3:
specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: void initClients()>();
v10 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.List subprotocols>;
if v10 == null goto label4;
v11 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.List subprotocols>;
v12 = interfaceinvoke v11.<java.util.List: boolean isEmpty()>();
if v12 == 0 goto label5;
label4:
v13 = new java.util.ArrayList;
v14 = <io.smallrye.graphql.client.websocket.WebsocketSubprotocol: io.smallrye.graphql.client.websocket.WebsocketSubprotocol GRAPHQL_TRANSPORT_WS>;
v15 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>(v14);
specialinvoke v13.<java.util.ArrayList: void <init>(java.util.Collection)>(v15);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.List subprotocols> = v13;
label5:
v16 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String websocketUrl>;
if v16 != null goto label6;
v17 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.net.URI endpoint>;
v18 = virtualinvoke v17.<java.net.URI: java.lang.String toString()>();
v19 = virtualinvoke v18.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("http", "ws");
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String websocketUrl> = v19;
label6:
v20 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean executeSingleOperationsOverWebsocket>;
if v20 != null goto label7;
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean executeSingleOperationsOverWebsocket> = v21;
label7:
v22 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean allowUnexpectedResponseFields>;
if v22 != null goto label8;
v23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean allowUnexpectedResponseFields> = v23;
label8:
v24 = new io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v25 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map headers>;
v26 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map initPayload>;
v27 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.net.URI endpoint>;
v28 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String websocketUrl>;
v29 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean executeSingleOperationsOverWebsocket>;
v30 = virtualinvoke v29.<java.lang.Boolean: boolean booleanValue()>();
v31 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClient httpClient>;
v32 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.ext.web.client.WebClient webClient>;
v33 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.List subprotocols>;
v34 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Integer websocketInitializationTimeout>;
v35 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean allowUnexpectedResponseFields>;
v36 = virtualinvoke v35.<java.lang.Boolean: boolean booleanValue()>();
specialinvoke v24.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: void <init>(java.lang.Class,java.util.Map,java.util.Map,java.net.URI,java.lang.String,boolean,io.vertx.core.http.HttpClient,io.vertx.ext.web.client.WebClient,java.util.List,java.lang.Integer,boolean)>(v1, v25, v26, v27, v28, v30, v31, v32, v33, v34, v36);
v37 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.ClassLoader getClassLoader(java.lang.Class)>(v1);
v38 = newarray (java.lang.Class)[1];
v38[0] = v1;
v39 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder$lambda_build_0__663: java.lang.reflect.InvocationHandler bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder,io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy)>(v0, v24);
v40 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(v37, v38, v39);
v41 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v40);
return v41;
}
private void applyConfigFor(java.lang.Class)
{
io.smallrye.graphql.client.impl.GraphQLClientsConfiguration v2;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.lang.Class v1;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v4;
java.lang.String v3;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientsConfiguration getInstance()>();
virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: void initTypesafeClientApi(java.lang.Class)>(v1);
v3 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String configKey>;
v4 = virtualinvoke v2.<io.smallrye.graphql.client.impl.GraphQLClientsConfiguration: io.smallrye.graphql.client.impl.GraphQLClientConfiguration getClient(java.lang.String)>(v3);
if v4 == null goto label1;
specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: void applyConfig(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v4);
label1:
return;
}
private void initClients()
{
io.vertx.ext.web.client.WebClient v1, v9;
io.vertx.core.http.HttpClientOptions v11, v13, v3, v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
io.vertx.core.Vertx v12, v15, v4, v7;
io.vertx.core.http.HttpClient v10, v14, v2, v6, v8;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.ext.web.client.WebClient webClient>;
if v1 != null goto label4;
v2 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClient httpClient>;
if v2 != null goto label3;
v3 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options>;
if v3 == null goto label1;
v4 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx()>();
v5 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options>;
v6 = interfaceinvoke v4.<io.vertx.core.Vertx: io.vertx.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)>(v5);
goto label2;
label1:
v7 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx()>();
v6 = interfaceinvoke v7.<io.vertx.core.Vertx: io.vertx.core.http.HttpClient createHttpClient()>();
label2:
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClient httpClient> = v6;
label3:
v8 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClient httpClient>;
v9 = staticinvoke <io.vertx.ext.web.client.WebClient: io.vertx.ext.web.client.WebClient wrap(io.vertx.core.http.HttpClient)>(v8);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.ext.web.client.WebClient webClient> = v9;
goto label7;
label4:
v10 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClient httpClient>;
if v10 != null goto label7;
v11 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options>;
if v11 == null goto label5;
v12 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx()>();
v13 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options>;
v14 = interfaceinvoke v12.<io.vertx.core.Vertx: io.vertx.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)>(v13);
goto label6;
label5:
v15 = specialinvoke v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx()>();
v14 = interfaceinvoke v15.<io.vertx.core.Vertx: io.vertx.core.http.HttpClient createHttpClient()>();
label6:
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClient httpClient> = v14;
label7:
return;
}
private io.vertx.core.Vertx vertx()
{
io.vertx.core.Vertx v1, v2;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx>;
if v1 == null goto label1;
v2 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.Vertx vertx>;
goto label2;
label1:
v2 = staticinvoke <io.smallrye.graphql.client.vertx.VertxManager: io.vertx.core.Vertx get()>();
label2:
return v2;
}
private transient java.lang.Object invoke(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy, java.lang.reflect.Method, java.lang.Object[])
{
java.lang.Object[] v3;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v4;
java.lang.Object v6;
java.lang.reflect.Method v2;
boolean v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy;
v2 := @parameter1: java.lang.reflect.Method;
v3 := @parameter2: java.lang.Object[];
v4 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation of(java.lang.reflect.Method,java.lang.Object[])>(v2, v3);
v5 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isDeclaredInCloseable()>();
if v5 == 0 goto label1;
virtualinvoke v1.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: void close()>();
return null;
label1:
v6 = virtualinvoke v1.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy: java.lang.Object invoke(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v4);
return v6;
}
private java.lang.ClassLoader getClassLoader(java.lang.Class)
{
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.lang.Class v1;
java.lang.Object v5;
java.lang.ClassLoader v3;
java.security.PrivilegedAction v4;
java.lang.SecurityManager v2;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 != null goto label1;
v3 = virtualinvoke v1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
return v3;
label1:
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder$getClassLoader__664: java.security.PrivilegedAction bootstrap$(java.lang.Class)>(v1);
v5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v4);
return v5;
}
private void applyConfig(io.smallrye.graphql.client.impl.GraphQLClientConfiguration)
{
java.lang.Integer v15, v16, v17;
java.util.Map v10, v11, v12, v13, v14, v9;
java.lang.Boolean v18, v19, v20, v21, v22, v23;
io.vertx.core.http.HttpClientOptions v27;
java.lang.String v3, v4, v6, v7, v8;
java.net.URI v2, v5;
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.util.function.Consumer v26;
java.util.List v24, v25;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v1;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: io.smallrye.graphql.client.impl.GraphQLClientConfiguration;
v2 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.net.URI endpoint>;
if v2 != null goto label1;
v3 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getUrl()>();
if v3 == null goto label1;
v4 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getUrl()>();
v5 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v4);
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.net.URI endpoint> = v5;
label1:
v6 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String websocketUrl>;
if v6 != null goto label2;
v7 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getWebsocketUrl()>();
if v7 == null goto label2;
v8 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getWebsocketUrl()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.String websocketUrl> = v8;
label2:
v9 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map headers>;
if v9 != null goto label3;
v10 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.Map getHeaders()>();
if v10 == null goto label3;
v11 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.Map getHeaders()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map headers> = v11;
label3:
v12 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map initPayload>;
if v12 != null goto label4;
v13 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.Map getInitPayload()>();
if v13 == null goto label4;
v14 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.Map getInitPayload()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.util.Map initPayload> = v14;
label4:
v15 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Integer websocketInitializationTimeout>;
if v15 != null goto label5;
v16 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Integer getWebsocketInitializationTimeout()>();
if v16 == null goto label5;
v17 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Integer getWebsocketInitializationTimeout()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Integer websocketInitializationTimeout> = v17;
label5:
v18 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean executeSingleOperationsOverWebsocket>;
if v18 != null goto label6;
v19 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Boolean getExecuteSingleOperationsOverWebsocket()>();
if v19 == null goto label6;
v20 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Boolean getExecuteSingleOperationsOverWebsocket()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean executeSingleOperationsOverWebsocket> = v20;
label6:
v21 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean allowUnexpectedResponseFields>;
if v21 != null goto label7;
v22 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Boolean getAllowUnexpectedResponseFields()>();
if v22 == null goto label7;
v23 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Boolean getAllowUnexpectedResponseFields()>();
v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: java.lang.Boolean allowUnexpectedResponseFields> = v23;
label7:
v24 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.List getWebsocketSubprotocols()>();
if v24 == null goto label8;
v25 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.util.List getWebsocketSubprotocols()>();
v26 = staticinvoke <io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder$lambda_applyConfig_1__665: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder)>(v0);
interfaceinvoke v25.<java.util.List: void forEach(java.util.function.Consumer)>(v26);
label8:
v27 = v0.<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: io.vertx.core.http.HttpClientOptions options>;
staticinvoke <io.smallrye.graphql.client.vertx.VertxClientOptionsHelper: void applyConfigToVertxOptions(io.vertx.core.http.HttpClientOptions,io.smallrye.graphql.client.impl.GraphQLClientConfiguration)>(v27, v1);
return;
}
private java.lang.String configKey(java.lang.Class)
{
io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder v0;
java.lang.'annotation'.Annotation v2;
java.lang.Class v1;
java.lang.String v3, v4, v6;
boolean v5;
v0 := @this: io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/graphql/client/typesafe/api/GraphQLClientApi;");
if v2 != null goto label1;
v3 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
return v3;
label1:
v4 = interfaceinvoke v2.<io.smallrye.graphql.client.typesafe.api.GraphQLClientApi: java.lang.String configKey()>();
v5 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
goto label3;
label2:
v6 = v4;
label3:
return v6;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/smallrye/graphql/client/vertx/typesafe/VertxTypesafeGraphQLClientBuilder;");
<io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientBuilder: org.jboss.logging.Logger log> = v0;
return;
}
}