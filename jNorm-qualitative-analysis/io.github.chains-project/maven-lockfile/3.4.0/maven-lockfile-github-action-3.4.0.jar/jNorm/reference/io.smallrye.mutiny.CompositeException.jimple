public class io.smallrye.mutiny.CompositeException extends java.lang.RuntimeException
{
public void <init>(java.util.List)
{
java.lang.Throwable v2;
io.smallrye.mutiny.CompositeException v0;
java.util.List v1;
int v3, v4;
java.lang.Object v5;
v0 := @this: io.smallrye.mutiny.CompositeException;
v1 := @parameter0: java.util.List;
v2 = staticinvoke <io.smallrye.mutiny.CompositeException: java.lang.Throwable getFirstOrFail(java.util.List)>(v1);
specialinvoke v0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Multiple exceptions caught:", v2);
v3 = 1;
label1:
v4 = interfaceinvoke v1.<java.util.List: int size()>();
if v3 >= v4 goto label2;
v5 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.CompositeException: void addSuppressed(java.lang.Throwable)>(v5);
v3 = v3 + 1;
goto label1;
label2:
return;
}
private static java.lang.Throwable getFirstOrFail(java.util.List)
{
java.util.List v0;
java.lang.Object v3, v4;
java.lang.IllegalArgumentException v2;
boolean v1;
v0 := @parameter0: java.util.List;
if v0 == null goto label1;
v1 = interfaceinvoke v0.<java.util.List: boolean isEmpty()>();
if v1 == 0 goto label2;
label1:
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Composite Exception must contains at least one cause");
throw v2;
label2:
v3 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "cause");
return v4;
}
private static java.lang.Throwable getFirstOrFail(java.lang.Throwable[])
{
java.lang.Throwable v3;
java.lang.Throwable[] v0;
int v1;
java.lang.Object v4;
java.lang.IllegalArgumentException v2;
v0 := @parameter0: java.lang.Throwable[];
if v0 == null goto label1;
v1 = lengthof v0;
if v1 != 0 goto label2;
label1:
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Composite Exception must contains at least one cause");
throw v2;
label2:
v3 = v0[0];
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "cause");
return v4;
}
public transient void <init>(java.lang.Throwable[])
{
java.lang.Throwable v2, v5;
io.smallrye.mutiny.CompositeException v0;
java.lang.Throwable[] v1;
int v3, v4;
v0 := @this: io.smallrye.mutiny.CompositeException;
v1 := @parameter0: java.lang.Throwable[];
v2 = staticinvoke <io.smallrye.mutiny.CompositeException: java.lang.Throwable getFirstOrFail(java.lang.Throwable[])>(v1);
specialinvoke v0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Multiple exceptions caught:", v2);
v3 = 1;
label1:
v4 = lengthof v1;
if v3 >= v4 goto label2;
v5 = v1[v3];
virtualinvoke v0.<io.smallrye.mutiny.CompositeException: void addSuppressed(java.lang.Throwable)>(v5);
v3 = v3 + 1;
goto label1;
label2:
return;
}
public void <init>(io.smallrye.mutiny.CompositeException, java.lang.Throwable)
{
java.lang.Throwable v2, v6, v7;
io.smallrye.mutiny.CompositeException v0, v1;
java.lang.Throwable[] v3;
int v4, v5;
v0 := @this: io.smallrye.mutiny.CompositeException;
v1 := @parameter0: io.smallrye.mutiny.CompositeException;
v2 := @parameter1: java.lang.Throwable;
specialinvoke v0.<java.lang.RuntimeException: void <init>()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.CompositeException: java.lang.Throwable[] getSuppressed()>();
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v3[v5];
virtualinvoke v0.<io.smallrye.mutiny.CompositeException: void addSuppressed(java.lang.Throwable)>(v6);
v5 = v5 + 1;
goto label1;
label2:
virtualinvoke v0.<io.smallrye.mutiny.CompositeException: void addSuppressed(java.lang.Throwable)>(v2);
v7 = virtualinvoke v1.<io.smallrye.mutiny.CompositeException: java.lang.Throwable getCause()>();
virtualinvoke v0.<io.smallrye.mutiny.CompositeException: java.lang.Throwable initCause(java.lang.Throwable)>(v7);
return;
}
public java.lang.String getMessage()
{
java.lang.Throwable v10, v6;
int v12, v8, v9;
java.lang.String v1, v15;
io.smallrye.mutiny.CompositeException v0;
java.lang.Throwable[] v7;
java.lang.StringBuilder v11, v13, v14, v2, v3, v4, v5;
v0 := @this: io.smallrye.mutiny.CompositeException;
v1 = specialinvoke v0.<java.lang.RuntimeException: java.lang.String getMessage()>();
if v1 == null goto label1;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>(java.lang.String)>(v1);
v3 = v2;
goto label2;
label1:
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
v3 = v4;
label2:
v5 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t[Exception 0] ");
v6 = virtualinvoke v0.<io.smallrye.mutiny.CompositeException: java.lang.Throwable getCause()>();
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v6);
v7 = virtualinvoke v0.<io.smallrye.mutiny.CompositeException: java.lang.Throwable[] getSuppressed()>();
v8 = 0;
label3:
v9 = lengthof v7;
if v8 >= v9 goto label4;
v10 = v7[v8];
v11 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t[Exception ");
v12 = v8 + 1;
v13 = virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v12);
v14 = virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");
virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v10);
v8 = v8 + 1;
goto label3;
label4:
v15 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v15;
}
public java.util.List getCauses()
{
java.lang.Throwable v2;
io.smallrye.mutiny.CompositeException v0;
java.util.List v4;
java.lang.Throwable[] v3;
java.util.ArrayList v1;
v0 := @this: io.smallrye.mutiny.CompositeException;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.CompositeException: java.lang.Throwable getCause()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v2);
v3 = virtualinvoke v0.<io.smallrye.mutiny.CompositeException: java.lang.Throwable[] getSuppressed()>();
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v4);
return v1;
}
}