class io.smallrye.mutiny.context.MutinyContextManagerExtension$1 extends java.lang.Object implements java.util.function.UnaryOperator
{
final io.smallrye.mutiny.context.MutinyContextManagerExtension this$0;
void <init>(io.smallrye.mutiny.context.MutinyContextManagerExtension)
{
io.smallrye.mutiny.context.MutinyContextManagerExtension v1;
io.smallrye.mutiny.context.MutinyContextManagerExtension$1 v0;
v0 := @this: io.smallrye.mutiny.context.MutinyContextManagerExtension$1;
v1 := @parameter0: io.smallrye.mutiny.context.MutinyContextManagerExtension;
v0.<io.smallrye.mutiny.context.MutinyContextManagerExtension$1: io.smallrye.mutiny.context.MutinyContextManagerExtension this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.concurrent.CompletableFuture apply(java.util.concurrent.CompletableFuture)
{
io.smallrye.context.SmallRyeThreadContext v2;
io.smallrye.mutiny.context.MutinyContextManagerExtension$1 v0;
java.util.concurrent.CompletableFuture v1, v3;
v0 := @this: io.smallrye.mutiny.context.MutinyContextManagerExtension$1;
v1 := @parameter0: java.util.concurrent.CompletableFuture;
v2 = staticinvoke <io.smallrye.context.SmallRyeThreadContext: io.smallrye.context.SmallRyeThreadContext getCurrentThreadContextOrDefaultContexts()>();
v3 = interfaceinvoke v2.<org.eclipse.microprofile.context.ThreadContext: java.util.concurrent.CompletableFuture withContextCapture(java.util.concurrent.CompletableFuture)>(v1);
return v3;
}
}