public class io.smallrye.mutiny.converters.multi.FromCompletionStage extends java.lang.Object implements io.smallrye.mutiny.converters.MultiConverter
{
public static final io.smallrye.mutiny.converters.multi.FromCompletionStage INSTANCE;
private void <init>()
{
io.smallrye.mutiny.converters.multi.FromCompletionStage v0;
v0 := @this: io.smallrye.mutiny.converters.multi.FromCompletionStage;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.mutiny.Multi 'from'(java.util.concurrent.CompletionStage)
{
io.smallrye.mutiny.converters.multi.FromCompletionStage v0;
java.util.concurrent.CompletionStage v1;
io.smallrye.mutiny.groups.MultiCreate v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.converters.multi.FromCompletionStage;
v1 := @parameter0: java.util.concurrent.CompletionStage;
v2 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi completionStage(java.util.concurrent.CompletionStage)>(v1);
return v3;
}
static void <clinit>()
{
io.smallrye.mutiny.converters.multi.FromCompletionStage v0;
v0 = new io.smallrye.mutiny.converters.multi.FromCompletionStage;
specialinvoke v0.<io.smallrye.mutiny.converters.multi.FromCompletionStage: void <init>()>();
<io.smallrye.mutiny.converters.multi.FromCompletionStage: io.smallrye.mutiny.converters.multi.FromCompletionStage INSTANCE> = v0;
return;
}
}