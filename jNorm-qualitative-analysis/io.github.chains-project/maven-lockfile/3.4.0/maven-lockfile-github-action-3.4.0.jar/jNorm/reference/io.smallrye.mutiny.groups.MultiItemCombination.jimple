public class io.smallrye.mutiny.groups.MultiItemCombination extends java.lang.Object
{
public void <init>()
{
io.smallrye.mutiny.groups.MultiItemCombination v0;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.mutiny.groups.MultiItemCombine2 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
io.smallrye.mutiny.groups.MultiItemCombine2 v3;
java.util.concurrent.Flow$Publisher[] v4;
java.util.List v7;
java.util.concurrent.Flow$Publisher v1, v2;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.lang.Object v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 = new io.smallrye.mutiny.groups.MultiItemCombine2;
v4 = newarray (java.util.concurrent.Flow$Publisher)[2];
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v4[0] = v5;
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v4[1] = v6;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v4);
specialinvoke v3.<io.smallrye.mutiny.groups.MultiItemCombine2: void <init>(java.lang.Iterable)>(v7);
return v3;
}
public io.smallrye.mutiny.groups.MultiItemCombine3 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
io.smallrye.mutiny.groups.MultiItemCombine3 v4;
java.util.concurrent.Flow$Publisher[] v5;
java.util.List v9;
java.util.concurrent.Flow$Publisher v1, v2, v3;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.lang.Object v6, v7, v8;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 = new io.smallrye.mutiny.groups.MultiItemCombine3;
v5 = newarray (java.util.concurrent.Flow$Publisher)[3];
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v5[0] = v6;
v7 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v5[1] = v7;
v8 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v5[2] = v8;
v9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v5);
specialinvoke v4.<io.smallrye.mutiny.groups.MultiItemCombine3: void <init>(java.lang.Iterable)>(v9);
return v4;
}
public io.smallrye.mutiny.groups.MultiItemCombine4 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
io.smallrye.mutiny.groups.MultiItemCombine4 v5;
java.util.concurrent.Flow$Publisher[] v6;
java.util.List v11;
java.util.concurrent.Flow$Publisher v1, v2, v3, v4;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.lang.Object v10, v7, v8, v9;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 := @parameter3: java.util.concurrent.Flow$Publisher;
v5 = new io.smallrye.mutiny.groups.MultiItemCombine4;
v6 = newarray (java.util.concurrent.Flow$Publisher)[4];
v7 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v6[0] = v7;
v8 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v6[1] = v8;
v9 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v6[2] = v9;
v10 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "d");
v6[3] = v10;
v11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v6);
specialinvoke v5.<io.smallrye.mutiny.groups.MultiItemCombine4: void <init>(java.lang.Iterable)>(v11);
return v5;
}
public io.smallrye.mutiny.groups.MultiItemCombine5 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
io.smallrye.mutiny.groups.MultiItemCombine5 v6;
java.util.concurrent.Flow$Publisher[] v7;
java.util.List v13;
java.util.concurrent.Flow$Publisher v1, v2, v3, v4, v5;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.lang.Object v10, v11, v12, v8, v9;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 := @parameter3: java.util.concurrent.Flow$Publisher;
v5 := @parameter4: java.util.concurrent.Flow$Publisher;
v6 = new io.smallrye.mutiny.groups.MultiItemCombine5;
v7 = newarray (java.util.concurrent.Flow$Publisher)[5];
v8 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v7[0] = v8;
v9 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v7[1] = v9;
v10 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v7[2] = v10;
v11 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "d");
v7[3] = v11;
v12 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "e");
v7[4] = v12;
v13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v7);
specialinvoke v6.<io.smallrye.mutiny.groups.MultiItemCombine5: void <init>(java.lang.Iterable)>(v13);
return v6;
}
public io.smallrye.mutiny.groups.MultiItemCombine6 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher[] v8;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.util.List v15;
java.util.concurrent.Flow$Publisher v1, v2, v3, v4, v5, v6;
java.lang.Object v10, v11, v12, v13, v14, v9;
io.smallrye.mutiny.groups.MultiItemCombine6 v7;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 := @parameter3: java.util.concurrent.Flow$Publisher;
v5 := @parameter4: java.util.concurrent.Flow$Publisher;
v6 := @parameter5: java.util.concurrent.Flow$Publisher;
v7 = new io.smallrye.mutiny.groups.MultiItemCombine6;
v8 = newarray (java.util.concurrent.Flow$Publisher)[6];
v9 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v8[0] = v9;
v10 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v8[1] = v10;
v11 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v8[2] = v11;
v12 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "d");
v8[3] = v12;
v13 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "e");
v8[4] = v13;
v14 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v6, "f");
v8[5] = v14;
v15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v8);
specialinvoke v7.<io.smallrye.mutiny.groups.MultiItemCombine6: void <init>(java.lang.Iterable)>(v15);
return v7;
}
public io.smallrye.mutiny.groups.MultiItemCombine7 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher[] v9;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.util.List v17;
java.util.concurrent.Flow$Publisher v1, v2, v3, v4, v5, v6, v7;
java.lang.Object v10, v11, v12, v13, v14, v15, v16;
io.smallrye.mutiny.groups.MultiItemCombine7 v8;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 := @parameter3: java.util.concurrent.Flow$Publisher;
v5 := @parameter4: java.util.concurrent.Flow$Publisher;
v6 := @parameter5: java.util.concurrent.Flow$Publisher;
v7 := @parameter6: java.util.concurrent.Flow$Publisher;
v8 = new io.smallrye.mutiny.groups.MultiItemCombine7;
v9 = newarray (java.util.concurrent.Flow$Publisher)[7];
v10 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v9[0] = v10;
v11 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v9[1] = v11;
v12 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v9[2] = v12;
v13 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "d");
v9[3] = v13;
v14 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "e");
v9[4] = v14;
v15 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v6, "f");
v9[5] = v15;
v16 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v7, "g");
v9[6] = v16;
v17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v9);
specialinvoke v8.<io.smallrye.mutiny.groups.MultiItemCombine7: void <init>(java.lang.Iterable)>(v17);
return v8;
}
public io.smallrye.mutiny.groups.MultiItemCombine8 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher[] v10;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.util.List v19;
java.util.concurrent.Flow$Publisher v1, v2, v3, v4, v5, v6, v7, v8;
java.lang.Object v11, v12, v13, v14, v15, v16, v17, v18;
io.smallrye.mutiny.groups.MultiItemCombine8 v9;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 := @parameter3: java.util.concurrent.Flow$Publisher;
v5 := @parameter4: java.util.concurrent.Flow$Publisher;
v6 := @parameter5: java.util.concurrent.Flow$Publisher;
v7 := @parameter6: java.util.concurrent.Flow$Publisher;
v8 := @parameter7: java.util.concurrent.Flow$Publisher;
v9 = new io.smallrye.mutiny.groups.MultiItemCombine8;
v10 = newarray (java.util.concurrent.Flow$Publisher)[8];
v11 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v10[0] = v11;
v12 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v10[1] = v12;
v13 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v10[2] = v13;
v14 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "d");
v10[3] = v14;
v15 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "e");
v10[4] = v15;
v16 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v6, "f");
v10[5] = v16;
v17 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v7, "g");
v10[6] = v17;
v18 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v8, "h");
v10[7] = v18;
v19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v10);
specialinvoke v9.<io.smallrye.mutiny.groups.MultiItemCombine8: void <init>(java.lang.Iterable)>(v19);
return v9;
}
public io.smallrye.mutiny.groups.MultiItemCombine9 streams(java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher, java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher[] v11;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.util.List v21;
java.util.concurrent.Flow$Publisher v1, v2, v3, v4, v5, v6, v7, v8, v9;
java.lang.Object v12, v13, v14, v15, v16, v17, v18, v19, v20;
io.smallrye.mutiny.groups.MultiItemCombine9 v10;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 := @parameter1: java.util.concurrent.Flow$Publisher;
v3 := @parameter2: java.util.concurrent.Flow$Publisher;
v4 := @parameter3: java.util.concurrent.Flow$Publisher;
v5 := @parameter4: java.util.concurrent.Flow$Publisher;
v6 := @parameter5: java.util.concurrent.Flow$Publisher;
v7 := @parameter6: java.util.concurrent.Flow$Publisher;
v8 := @parameter7: java.util.concurrent.Flow$Publisher;
v9 := @parameter8: java.util.concurrent.Flow$Publisher;
v10 = new io.smallrye.mutiny.groups.MultiItemCombine9;
v11 = newarray (java.util.concurrent.Flow$Publisher)[9];
v12 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "a");
v11[0] = v12;
v13 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "b");
v11[1] = v13;
v14 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "c");
v11[2] = v14;
v15 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "d");
v11[3] = v15;
v16 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "e");
v11[4] = v16;
v17 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v6, "f");
v11[5] = v17;
v18 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v7, "g");
v11[6] = v18;
v19 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v8, "h");
v11[7] = v19;
v20 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v9, "i");
v11[8] = v20;
v21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v11);
specialinvoke v10.<io.smallrye.mutiny.groups.MultiItemCombine9: void <init>(java.lang.Iterable)>(v21);
return v10;
}
public io.smallrye.mutiny.groups.MultiItemCombineIterable streams(java.lang.Iterable)
{
io.smallrye.mutiny.groups.MultiItemCombineIterable v2;
io.smallrye.mutiny.groups.MultiItemCombination v0;
java.lang.Object v3;
java.lang.Iterable v1;
v0 := @this: io.smallrye.mutiny.groups.MultiItemCombination;
v1 := @parameter0: java.lang.Iterable;
v2 = new io.smallrye.mutiny.groups.MultiItemCombineIterable;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "iterable");
specialinvoke v2.<io.smallrye.mutiny.groups.MultiItemCombineIterable: void <init>(java.lang.Iterable)>(v3);
return v2;
}
}