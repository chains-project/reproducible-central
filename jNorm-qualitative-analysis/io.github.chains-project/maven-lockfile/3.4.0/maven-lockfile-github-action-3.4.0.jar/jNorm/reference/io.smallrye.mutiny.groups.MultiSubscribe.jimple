public class io.smallrye.mutiny.groups.MultiSubscribe extends java.lang.Object
{
private final io.smallrye.mutiny.operators.AbstractMulti upstream;
public void <init>(io.smallrye.mutiny.operators.AbstractMulti)
{
io.smallrye.mutiny.operators.AbstractMulti v1;
io.smallrye.mutiny.groups.MultiSubscribe v0;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.operators.AbstractMulti;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.operators.AbstractMulti upstream> = v2;
return;
}
public java.util.concurrent.Flow$Subscriber withSubscriber(java.util.concurrent.Flow$Subscriber)
{
io.smallrye.mutiny.operators.AbstractMulti v2, v4;
java.util.concurrent.Flow$Subscriber v1, v3;
io.smallrye.mutiny.groups.MultiSubscribe v0;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.concurrent.Flow$Subscriber;
v2 = v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.operators.AbstractMulti upstream>;
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.Flow$Subscriber onMultiSubscription(java.util.concurrent.Flow$Publisher,java.util.concurrent.Flow$Subscriber)>(v2, v1);
v4 = v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.operators.AbstractMulti upstream>;
virtualinvoke v4.<io.smallrye.mutiny.operators.AbstractMulti: void subscribe(java.util.concurrent.Flow$Subscriber)>(v3);
return v1;
}
public io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.AbstractMulti v2;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.operators.AbstractMulti upstream>;
virtualinvoke v2.<io.smallrye.mutiny.operators.AbstractMulti: void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
return v1;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer, java.util.function.Consumer, java.util.function.Consumer, java.lang.Runnable)
{
java.util.function.Consumer v1, v2, v3;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.subscription.Cancellable v6;
io.smallrye.mutiny.Context v5;
java.lang.Runnable v4;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.util.function.Consumer;
v4 := @parameter3: java.lang.Runnable;
v5 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
v6 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable)>(v5, v1, v2, v3, v4);
return v6;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context, java.util.function.Consumer, java.util.function.Consumer, java.util.function.Consumer, java.lang.Runnable)
{
io.smallrye.mutiny.subscription.CancellableSubscriber v11;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.Context v1;
java.lang.Runnable v5;
java.util.function.Consumer v2, v3, v4;
java.lang.Object v10, v6, v7, v8, v9;
io.smallrye.mutiny.subscription.MultiSubscriber v12;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.util.function.Consumer;
v4 := @parameter3: java.util.function.Consumer;
v5 := @parameter4: java.lang.Runnable;
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "context");
v7 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "onItem");
v8 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "onFailure");
v9 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v5, "onComplete");
v10 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onSubscription");
v11 = staticinvoke <io.smallrye.mutiny.subscription.Subscribers: io.smallrye.mutiny.subscription.CancellableSubscriber 'from'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.Consumer)>(v6, v7, v8, v9, v10);
v12 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v11);
return v12;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer, java.util.function.Consumer, java.lang.Runnable)
{
java.util.function.Consumer v1, v2;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.subscription.Cancellable v5;
io.smallrye.mutiny.Context v4;
java.lang.Runnable v3;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.lang.Runnable;
v4 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable)>(v4, v1, v2, v3);
return v5;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context, java.util.function.Consumer, java.util.function.Consumer, java.lang.Runnable)
{
io.smallrye.mutiny.subscription.CancellableSubscriber v10;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.Context v1;
java.lang.Runnable v4;
java.util.function.Consumer v2, v3, v9;
java.lang.Object v5, v6, v7, v8;
io.smallrye.mutiny.subscription.MultiSubscriber v11;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.util.function.Consumer;
v4 := @parameter3: java.lang.Runnable;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "onFailure");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "onComplete");
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "context");
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
v7 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "onFailure");
v8 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v4, "onComplete");
v9 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_with_0__2920: java.util.function.Consumer bootstrap$()>();
v10 = staticinvoke <io.smallrye.mutiny.subscription.Subscribers: io.smallrye.mutiny.subscription.CancellableSubscriber 'from'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.Consumer)>(v5, v6, v7, v8, v9);
v11 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v10);
return v11;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer, java.util.function.Consumer)
{
java.util.function.Consumer v1, v2;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.subscription.Cancellable v4;
io.smallrye.mutiny.Context v3;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.util.function.Consumer;
v3 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer)>(v3, v1, v2);
return v4;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context, java.util.function.Consumer, java.util.function.Consumer)
{
io.smallrye.mutiny.subscription.CancellableSubscriber v8;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.Context v1;
java.util.function.Consumer v2, v3, v7;
java.lang.Object v4, v5, v6;
io.smallrye.mutiny.subscription.MultiSubscriber v9;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.util.function.Consumer;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "onFailure");
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "context");
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "onFailure");
v7 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_with_1__2921: java.util.function.Consumer bootstrap$()>();
v8 = staticinvoke <io.smallrye.mutiny.subscription.Subscribers: io.smallrye.mutiny.subscription.CancellableSubscriber 'from'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.Consumer)>(v4, v5, v6, null, v7);
v9 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v8);
return v9;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.subscription.Cancellable v3;
io.smallrye.mutiny.Context v2;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer)>(v2, v1);
return v3;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context, java.util.function.Consumer)
{
io.smallrye.mutiny.subscription.CancellableSubscriber v8;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.Context v1;
java.util.function.Consumer v2, v4, v6, v7;
java.lang.Object v3, v5;
io.smallrye.mutiny.subscription.MultiSubscriber v9;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 := @parameter1: java.util.function.Consumer;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "context");
v6 = <io.smallrye.mutiny.subscription.Subscribers: java.util.function.Consumer NO_ON_FAILURE>;
v7 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_with_2__2922: java.util.function.Consumer bootstrap$()>();
v8 = staticinvoke <io.smallrye.mutiny.subscription.Subscribers: io.smallrye.mutiny.subscription.CancellableSubscriber 'from'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.Consumer)>(v5, v4, v6, null, v7);
v9 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v8);
return v9;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer, java.lang.Runnable)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.subscription.Cancellable v4;
io.smallrye.mutiny.Context v3;
java.lang.Runnable v2;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.lang.Runnable;
v3 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.lang.Runnable)>(v3, v1, v2);
return v4;
}
public io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context, java.util.function.Consumer, java.lang.Runnable)
{
io.smallrye.mutiny.subscription.CancellableSubscriber v7;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.Context v1;
java.lang.Runnable v3;
java.util.function.Consumer v2, v6;
java.lang.Object v4, v5;
io.smallrye.mutiny.subscription.MultiSubscriber v8;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.lang.Runnable;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "onComplete");
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "context");
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "onItem");
v6 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_with_3__2923: java.util.function.Consumer bootstrap$()>();
v7 = staticinvoke <io.smallrye.mutiny.subscription.Subscribers: io.smallrye.mutiny.subscription.CancellableSubscriber 'from'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.Consumer)>(v4, v5, null, v3, v6);
v8 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v7);
return v8;
}
public io.smallrye.mutiny.helpers.BlockingIterable asIterable()
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.helpers.BlockingIterable v2;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_asIterable_4__2924: java.util.function.Supplier bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.helpers.BlockingIterable asIterable(int,java.util.function.Supplier)>(256, v1);
return v2;
}
public io.smallrye.mutiny.helpers.BlockingIterable asIterable(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.helpers.BlockingIterable v3;
java.util.function.Supplier v1, v2;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_asIterable_5__2925: java.util.function.Supplier bootstrap$()>();
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.helpers.BlockingIterable asIterable(java.util.function.Supplier,int,java.util.function.Supplier)>(v1, 256, v2);
return v3;
}
public io.smallrye.mutiny.helpers.BlockingIterable asIterable(int, java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.helpers.BlockingIterable v4;
int v1;
java.util.function.Supplier v2, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: int;
v2 := @parameter1: java.util.function.Supplier;
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$empty__2926: java.util.function.Supplier bootstrap$()>();
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.helpers.BlockingIterable asIterable(java.util.function.Supplier,int,java.util.function.Supplier)>(v3, v1, v2);
return v4;
}
public io.smallrye.mutiny.helpers.BlockingIterable asIterable(java.util.function.Supplier, int, java.util.function.Supplier)
{
io.smallrye.mutiny.operators.AbstractMulti v5;
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.helpers.BlockingIterable v4;
int v2;
java.util.function.Supplier v1, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: int;
v3 := @parameter2: java.util.function.Supplier;
v4 = new io.smallrye.mutiny.helpers.BlockingIterable;
v5 = v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.operators.AbstractMulti upstream>;
specialinvoke v4.<io.smallrye.mutiny.helpers.BlockingIterable: void <init>(io.smallrye.mutiny.Multi,int,java.util.function.Supplier,java.util.function.Supplier)>(v5, v2, v3, v1);
return v4;
}
public java.util.stream.Stream asStream()
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
java.util.stream.Stream v2;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_asStream_6__2927: java.util.function.Supplier bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: java.util.stream.Stream asStream(int,java.util.function.Supplier)>(256, v1);
return v2;
}
public java.util.stream.Stream asStream(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
java.util.stream.Stream v3;
java.util.function.Supplier v1, v2;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiSubscribe$lambda_asStream_7__2928: java.util.function.Supplier bootstrap$()>();
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: java.util.stream.Stream asStream(java.util.function.Supplier,int,java.util.function.Supplier)>(v1, 256, v2);
return v3;
}
public java.util.stream.Stream asStream(int, java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.helpers.BlockingIterable v3;
java.util.stream.Stream v4;
int v1;
java.util.function.Supplier v2;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: int;
v2 := @parameter1: java.util.function.Supplier;
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.helpers.BlockingIterable asIterable(int,java.util.function.Supplier)>(v1, v2);
v4 = virtualinvoke v3.<io.smallrye.mutiny.helpers.BlockingIterable: java.util.stream.Stream stream()>();
return v4;
}
public java.util.stream.Stream asStream(java.util.function.Supplier, int, java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiSubscribe v0;
io.smallrye.mutiny.helpers.BlockingIterable v4;
java.util.stream.Stream v5;
int v2;
java.util.function.Supplier v1, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiSubscribe;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: int;
v3 := @parameter2: java.util.function.Supplier;
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.helpers.BlockingIterable asIterable(java.util.function.Supplier,int,java.util.function.Supplier)>(v1, v2, v3);
v5 = virtualinvoke v4.<io.smallrye.mutiny.helpers.BlockingIterable: java.util.stream.Stream stream()>();
return v5;
}
}