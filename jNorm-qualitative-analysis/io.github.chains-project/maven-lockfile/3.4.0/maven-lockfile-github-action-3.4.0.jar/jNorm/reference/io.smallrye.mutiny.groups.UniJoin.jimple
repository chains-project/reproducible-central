public class io.smallrye.mutiny.groups.UniJoin extends java.lang.Object
{
public static final io.smallrye.mutiny.groups.UniJoin SHARED_INSTANCE;
private void <init>()
{
io.smallrye.mutiny.groups.UniJoin v0;
v0 := @this: io.smallrye.mutiny.groups.UniJoin;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public final transient io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy all(io.smallrye.mutiny.Uni[])
{
io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy v4;
io.smallrye.mutiny.groups.UniJoin v0;
java.util.List v3;
java.lang.Object v2;
io.smallrye.mutiny.Uni[] v1;
v0 := @this: io.smallrye.mutiny.groups.UniJoin;
v1 := @parameter0: io.smallrye.mutiny.Uni[];
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "unis");
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniJoin: io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy all(java.util.List)>(v3);
return v4;
}
public final io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy all(java.util.List)
{
io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy v2;
io.smallrye.mutiny.groups.UniJoin v0;
java.util.List v1;
v0 := @this: io.smallrye.mutiny.groups.UniJoin;
v1 := @parameter0: java.util.List;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Iterable doesNotContainNull(java.lang.Iterable,java.lang.String)>(v1, "unis");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.util.Collection isNotEmpty(java.util.Collection,java.lang.String)>(v1, "unis");
v2 = new io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy;
specialinvoke v2.<io.smallrye.mutiny.groups.UniJoin$JoinAllStrategy: void <init>(java.util.List)>(v1);
return v2;
}
public final transient io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy first(io.smallrye.mutiny.Uni[])
{
io.smallrye.mutiny.groups.UniJoin v0;
io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy v4;
java.util.List v3;
java.lang.Object v2;
io.smallrye.mutiny.Uni[] v1;
v0 := @this: io.smallrye.mutiny.groups.UniJoin;
v1 := @parameter0: io.smallrye.mutiny.Uni[];
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "unis");
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniJoin: io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy first(java.util.List)>(v3);
return v4;
}
public final io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy first(java.util.List)
{
io.smallrye.mutiny.groups.UniJoin v0;
io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy v2;
java.util.List v1;
v0 := @this: io.smallrye.mutiny.groups.UniJoin;
v1 := @parameter0: java.util.List;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Iterable doesNotContainNull(java.lang.Iterable,java.lang.String)>(v1, "unis");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.util.Collection isNotEmpty(java.util.Collection,java.lang.String)>(v1, "unis");
v2 = new io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy;
specialinvoke v2.<io.smallrye.mutiny.groups.UniJoin$JoinFirstStrategy: void <init>(java.util.List)>(v1);
return v2;
}
public io.smallrye.mutiny.groups.UniJoin$Builder builder()
{
io.smallrye.mutiny.groups.UniJoin v0;
io.smallrye.mutiny.groups.UniJoin$Builder v1;
v0 := @this: io.smallrye.mutiny.groups.UniJoin;
v1 = new io.smallrye.mutiny.groups.UniJoin$Builder;
specialinvoke v1.<io.smallrye.mutiny.groups.UniJoin$Builder: void <init>(io.smallrye.mutiny.groups.UniJoin)>(v0);
return v1;
}
static void <clinit>()
{
io.smallrye.mutiny.groups.UniJoin v0;
v0 = new io.smallrye.mutiny.groups.UniJoin;
specialinvoke v0.<io.smallrye.mutiny.groups.UniJoin: void <init>()>();
<io.smallrye.mutiny.groups.UniJoin: io.smallrye.mutiny.groups.UniJoin SHARED_INSTANCE> = v0;
return;
}
}