public final class io.smallrye.mutiny.helpers.queues.MpscLinkedQueue extends java.lang.Object implements java.util.Queue
{
private final java.util.concurrent.atomic.AtomicReference producerNode;
private final java.util.concurrent.atomic.AtomicReference consumerNode;
public void <init>()
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode v3;
java.util.concurrent.atomic.AtomicReference v1, v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v1.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference producerNode> = v1;
v2 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v2.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference consumerNode> = v2;
v3 = new io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode;
specialinvoke v3.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: void <init>()>();
virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: void spConsumerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode xchgProducerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)>(v3);
return;
}
public boolean add(java.lang.Object)
{
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean remove(java.lang.Object)
{
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean containsAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.util.Collection;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean addAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.util.Collection;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean removeAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.util.Collection;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean retainAll(java.util.Collection)
{
java.lang.UnsupportedOperationException v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.util.Collection;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean offer(java.lang.Object)
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode v3, v4;
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
java.lang.NullPointerException v2;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.lang.Object;
if null != v1 goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null is not a valid element");
throw v2;
label1:
v3 = new io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode;
specialinvoke v3.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: void <init>(java.lang.Object)>(v1);
v4 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode xchgProducerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)>(v3);
virtualinvoke v4.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: void soNext(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)>(v3);
return 1;
}
public java.lang.Object remove()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.Object poll()
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode v1, v2, v4, v5;
java.lang.Object v3, v6;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lpConsumerNode()>();
v2 = virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvNext()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: java.lang.Object getAndNullValue()>();
virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: void spConsumerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)>(v2);
return v3;
label1:
v4 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvProducerNode()>();
if v1 == v4 goto label3;
label2:
v5 = virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvNext()>();
if v5 == null goto label2;
v6 = virtualinvoke v5.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode: java.lang.Object getAndNullValue()>();
virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: void spConsumerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)>(v5);
return v6;
label3:
return null;
}
public java.lang.Object element()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.Object peek()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void clear()
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
boolean v2;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
label1:
v1 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.lang.Object poll()>();
if v1 == null goto label2;
v2 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: boolean isEmpty()>();
if v2 == 0 goto label1;
label2:
return;
}
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvProducerNode()
{
java.lang.Object v2;
java.util.concurrent.atomic.AtomicReference v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference producerNode>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
return v2;
}
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode xchgProducerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode v1;
java.lang.Object v3;
java.util.concurrent.atomic.AtomicReference v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode;
v2 = v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference producerNode>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(v1);
return v3;
}
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvConsumerNode()
{
java.lang.Object v2;
java.util.concurrent.atomic.AtomicReference v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference consumerNode>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
return v2;
}
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lpConsumerNode()
{
java.lang.Object v2;
java.util.concurrent.atomic.AtomicReference v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference consumerNode>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
return v2;
}
void spConsumerNode(io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode)
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode v1;
java.util.concurrent.atomic.AtomicReference v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode;
v2 = v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference consumerNode>;
virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: void lazySet(java.lang.Object)>(v1);
return;
}
public int size()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean isEmpty()
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode v1, v2;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvConsumerNode()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue$LinkedQueueNode lvProducerNode()>();
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean contains(java.lang.Object)
{
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public java.util.Iterator iterator()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.Object[] toArray()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.Object[] toArray(java.lang.Object[])
{
java.lang.UnsupportedOperationException v2;
java.lang.Object[] v1;
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
v1 := @parameter0: java.lang.Object[];
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
}