public class io.smallrye.mutiny.helpers.queues.Queues extends java.lang.Object
{
public static final int TO_LARGE_TO_BE_BOUNDED;
public static final int BUFFER_XS;
public static final int BUFFER_S;
static final java.util.function.Supplier EMPTY_QUEUE_SUPPLIER;
static final java.util.function.Supplier SINGLETON_QUEUE_SUPPLIER;
static final java.util.function.Supplier XS_QUEUE_SUPPLIER;
static final java.util.function.Supplier S_QUEUE_SUPPLIER;
static final java.util.function.Supplier UNBOUNDED_QUEUE_SUPPLIER;
static final java.util.function.Supplier XS_UNBOUNDED_QUEUE_SUPPLIER;
private void <init>()
{
io.smallrye.mutiny.helpers.queues.Queues v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.Queues;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.function.Supplier getXsQueueSupplier()
{
java.util.function.Supplier v0;
v0 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier XS_QUEUE_SUPPLIER>;
return v0;
}
public static java.util.function.Supplier get(int)
{
java.util.function.Supplier v2, v4, v5, v6, v8, v9;
int v0, v1, v3, v7;
v0 := @parameter0: int;
v1 = <io.smallrye.mutiny.helpers.queues.Queues: int BUFFER_XS>;
if v0 != v1 goto label1;
v2 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier XS_QUEUE_SUPPLIER>;
return v2;
label1:
v3 = <io.smallrye.mutiny.helpers.queues.Queues: int BUFFER_S>;
if v0 != v3 goto label2;
v4 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier S_QUEUE_SUPPLIER>;
return v4;
label2:
if v0 != 1 goto label3;
v5 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier SINGLETON_QUEUE_SUPPLIER>;
return v5;
label3:
if v0 != 0 goto label4;
v6 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier EMPTY_QUEUE_SUPPLIER>;
return v6;
label4:
v7 = staticinvoke <java.lang.Math: int max(int,int)>(8, v0);
if v7 <= 10000000 goto label5;
v8 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier UNBOUNDED_QUEUE_SUPPLIER>;
return v8;
label5:
v9 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$lambda_get_4__2785: java.util.function.Supplier bootstrap$(int)>(v7);
return v9;
}
public static java.util.function.Supplier unbounded(int)
{
int v0, v1, v3;
java.util.function.Supplier v2, v4, v5;
v0 := @parameter0: int;
v1 = <io.smallrye.mutiny.helpers.queues.Queues: int BUFFER_XS>;
if v0 != v1 goto label1;
v2 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier XS_UNBOUNDED_QUEUE_SUPPLIER>;
return v2;
label1:
if v0 == 2147483647 goto label2;
v3 = <io.smallrye.mutiny.helpers.queues.Queues: int BUFFER_S>;
if v0 != v3 goto label3;
label2:
v4 = <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier UNBOUNDED_QUEUE_SUPPLIER>;
return v4;
label3:
v5 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$lambda_unbounded_5__2786: java.util.function.Supplier bootstrap$(int)>(v0);
return v5;
}
public static java.util.Queue createMpscQueue()
{
io.smallrye.mutiny.helpers.queues.MpscLinkedQueue v0;
v0 = new io.smallrye.mutiny.helpers.queues.MpscLinkedQueue;
specialinvoke v0.<io.smallrye.mutiny.helpers.queues.MpscLinkedQueue: void <init>()>();
return v0;
}
public static java.util.Queue createStrictSizeQueue(int)
{
int v0;
java.util.concurrent.ArrayBlockingQueue v1;
v0 := @parameter0: int;
v1 = new java.util.concurrent.ArrayBlockingQueue;
specialinvoke v1.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(v0);
return v1;
}
static void <clinit>()
{
java.util.function.Supplier v10, v11, v6, v7, v8, v9;
int v1, v2, v4, v5;
java.lang.String v0, v3;
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("mutiny.buffer-size.xs", "32");
v1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
v2 = staticinvoke <java.lang.Math: int max(int,int)>(8, v1);
<io.smallrye.mutiny.helpers.queues.Queues: int BUFFER_XS> = v2;
v3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("mutiny.buffer-size.s", "256");
v4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v3);
v5 = staticinvoke <java.lang.Math: int max(int,int)>(16, v4);
<io.smallrye.mutiny.helpers.queues.Queues: int BUFFER_S> = v5;
v6 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$init__2787: java.util.function.Supplier bootstrap$()>();
<io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier EMPTY_QUEUE_SUPPLIER> = v6;
v7 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$init__2788: java.util.function.Supplier bootstrap$()>();
<io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier SINGLETON_QUEUE_SUPPLIER> = v7;
v8 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$lambda_static_0__2789: java.util.function.Supplier bootstrap$()>();
<io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier XS_QUEUE_SUPPLIER> = v8;
v9 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$lambda_static_1__2790: java.util.function.Supplier bootstrap$()>();
<io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier S_QUEUE_SUPPLIER> = v9;
v10 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$lambda_static_2__2791: java.util.function.Supplier bootstrap$()>();
<io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier UNBOUNDED_QUEUE_SUPPLIER> = v10;
v11 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues$lambda_static_3__2792: java.util.function.Supplier bootstrap$()>();
<io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier XS_UNBOUNDED_QUEUE_SUPPLIER> = v11;
return;
}
}