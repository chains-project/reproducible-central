public class io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy extends io.smallrye.mutiny.helpers.spies.MultiSpyBase
{
private java.util.function.Predicate predicate;
private java.lang.Class typeOfFailure;
private volatile java.lang.Throwable lastFailure;
public java.lang.Throwable lastFailure()
{
java.lang.Throwable v1;
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.lang.Throwable lastFailure>;
return v1;
}
void <init>(io.smallrye.mutiny.Multi)
{
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void <init>(io.smallrye.mutiny.Multi)>(v1);
return;
}
void <init>(io.smallrye.mutiny.Multi, java.util.function.Predicate)
{
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
java.util.function.Predicate v2;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.function.Predicate;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.util.function.Predicate predicate> = v2;
return;
}
void <init>(io.smallrye.mutiny.Multi, java.lang.Class)
{
java.lang.Class v2;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.lang.Class typeOfFailure> = v2;
return;
}
public void reset()
{
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void reset()>();
v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.lang.Throwable lastFailure> = null;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v12;
java.util.function.Predicate v2, v4;
io.smallrye.mutiny.Multi v11, v3, v7, v9;
java.util.function.Consumer v10;
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
java.lang.Class v6, v8;
io.smallrye.mutiny.groups.MultiOnFailure v5;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.util.function.Predicate predicate>;
if v2 == null goto label1;
v3 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: io.smallrye.mutiny.Multi upstream>;
v4 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.util.function.Predicate predicate>;
v5 = interfaceinvoke v3.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnFailure onFailure(java.util.function.Predicate)>(v4);
goto label3;
label1:
v6 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.lang.Class typeOfFailure>;
if v6 == null goto label2;
v7 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: io.smallrye.mutiny.Multi upstream>;
v8 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.lang.Class typeOfFailure>;
v5 = interfaceinvoke v7.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnFailure onFailure(java.lang.Class)>(v8);
goto label3;
label2:
v9 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: io.smallrye.mutiny.Multi upstream>;
v5 = interfaceinvoke v9.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnFailure onFailure()>();
label3:
v10 = staticinvoke <io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy$lambda_subscribe_0__2778: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy)>(v0);
v11 = virtualinvoke v5.<io.smallrye.mutiny.groups.MultiOnFailure: io.smallrye.mutiny.Multi invoke(java.util.function.Consumer)>(v10);
v12 = interfaceinvoke v11.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
virtualinvoke v12.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
return;
}
public java.lang.String toString()
{
java.lang.Throwable v1;
io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy v0;
java.lang.String v2, v3;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy;
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnFailureSpy: java.lang.Throwable lastFailure>;
v2 = specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: java.lang.String toString()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Throwable,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("MultiOnFailureSpy{lastFailure=\u0001} \u0001");
return v3;
}
}