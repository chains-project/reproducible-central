public class io.smallrye.mutiny.operators.multi.MultiBroadcaster extends java.lang.Object
{
public static io.smallrye.mutiny.Multi publish(io.smallrye.mutiny.Multi, int, boolean, java.time.Duration)
{
java.time.Duration v3;
int v1;
io.smallrye.mutiny.Multi v0, v4, v5;
boolean v2;
v0 := @parameter0: io.smallrye.mutiny.Multi;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: java.time.Duration;
if v1 <= 0 goto label1;
v4 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiBroadcaster: io.smallrye.mutiny.Multi createPublishWithSubscribersThreshold(io.smallrye.mutiny.Multi,int,boolean,java.time.Duration)>(v0, v1, v2, v3);
return v4;
label1:
v5 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiBroadcaster: io.smallrye.mutiny.Multi createPublishImmediate(io.smallrye.mutiny.Multi,boolean,java.time.Duration)>(v0, v2, v3);
return v5;
}
private static io.smallrye.mutiny.Multi createPublishImmediate(io.smallrye.mutiny.Multi, boolean, java.time.Duration)
{
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v3, v6, v9;
io.smallrye.mutiny.Multi v0, v10, v11, v4, v5, v7, v8;
java.time.Duration v2;
boolean v1;
v0 := @parameter0: io.smallrye.mutiny.Multi;
v1 := @parameter1: boolean;
v2 := @parameter2: java.time.Duration;
if v1 == 0 goto label2;
if v2 == null goto label1;
v3 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti create(io.smallrye.mutiny.Multi)>(v0);
v4 = virtualinvoke v3.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.Multi referenceCount(int,java.time.Duration)>(1, v2);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
label1:
v6 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti create(io.smallrye.mutiny.Multi)>(v0);
v7 = virtualinvoke v6.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.Multi referenceCount()>();
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v7);
return v8;
label2:
v9 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti create(io.smallrye.mutiny.Multi)>(v0);
v10 = virtualinvoke v9.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.Multi connectAfter(int)>(1);
v11 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v10);
return v11;
}
private static io.smallrye.mutiny.Multi createPublishWithSubscribersThreshold(io.smallrye.mutiny.Multi, int, boolean, java.time.Duration)
{
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v10, v4, v7;
io.smallrye.mutiny.Multi v0, v11, v12, v5, v6, v8, v9;
java.time.Duration v3;
int v1;
boolean v2;
v0 := @parameter0: io.smallrye.mutiny.Multi;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: java.time.Duration;
if v2 == 0 goto label2;
if v3 == null goto label1;
v4 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti create(io.smallrye.mutiny.Multi)>(v0);
v5 = virtualinvoke v4.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.Multi referenceCount(int,java.time.Duration)>(v1, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v5);
return v6;
label1:
v7 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti create(io.smallrye.mutiny.Multi)>(v0);
v8 = virtualinvoke v7.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.Multi referenceCount(int,java.time.Duration)>(v1, null);
v9 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v8);
return v9;
label2:
v10 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti create(io.smallrye.mutiny.Multi)>(v0);
v11 = virtualinvoke v10.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.Multi connectAfter(int)>(v1);
v12 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v11);
return v12;
}
private void <init>()
{
io.smallrye.mutiny.operators.multi.MultiBroadcaster v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiBroadcaster;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}