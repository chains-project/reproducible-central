public class io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
public void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
return;
}
public void onSubscribe(java.util.concurrent.Flow$Subscription)
{
io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v3;
boolean v2;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor;
v1 := @parameter0: java.util.concurrent.Flow$Subscription;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor: boolean compareAndSetUpstreamSubscription(java.util.concurrent.Flow$Subscription,java.util.concurrent.Flow$Subscription)>(null, v1);
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v3.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v0);
interfaceinvoke v1.<java.util.concurrent.Flow$Subscription: void request(long)>(9223372036854775807L);
goto label2;
label1:
interfaceinvoke v1.<java.util.concurrent.Flow$Subscription: void cancel()>();
label2:
return;
}
public void request(long)
{
byte v2;
long v1;
java.lang.IllegalArgumentException v3;
io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 > 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid number of request, must be greater than 0");
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor: void onFailure(java.lang.Throwable)>(v3);
label1:
return;
}
public void onItem(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiIgnoreOp$MultiIgnoreProcessor;
v1 := @parameter0: java.lang.Object;
return;
}
}