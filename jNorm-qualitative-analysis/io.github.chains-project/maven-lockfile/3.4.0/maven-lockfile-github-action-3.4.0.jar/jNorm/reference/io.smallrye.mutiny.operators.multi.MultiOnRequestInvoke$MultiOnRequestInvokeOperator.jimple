class io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
final io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke this$0;
public void <init>(io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke, io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke v1;
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator v0;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v0.<io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
return;
}
public void request(long)
{
java.lang.Throwable v4;
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke v2;
long v1;
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator v0;
java.util.function.LongConsumer v3;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator;
v1 := @parameter0: long;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke this$0>;
v3 = v2.<io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke: java.util.function.LongConsumer consumer>;
interfaceinvoke v3.<java.util.function.LongConsumer: void accept(long)>(v1);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void request(long)>(v1);
label2:
goto label4;
label3:
v4 := @caughtexception;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v4);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}