class io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.concurrent.atomic.AtomicBoolean actionInvoke;
final io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke this$0;
public void <init>(io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke, io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke v1;
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor v0;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: java.util.concurrent.atomic.AtomicBoolean actionInvoke> = v3;
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1, v3;
io.smallrye.mutiny.CompositeException v4;
java.lang.Throwable[] v5;
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor v0;
java.lang.Boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor;
v1 := @parameter0: java.lang.Throwable;
label1:
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: void execute(java.lang.Throwable,java.lang.Boolean)>(v1, v2);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new io.smallrye.mutiny.CompositeException;
v5 = newarray (java.lang.Throwable)[2];
v5[0] = v1;
v5[1] = v3;
specialinvoke v4.<io.smallrye.mutiny.CompositeException: void <init>(java.lang.Throwable[])>(v5);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v4);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor v0;
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor v0;
java.lang.Throwable v2;
java.lang.Boolean v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor;
label1:
v1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: void execute(java.lang.Throwable,java.lang.Boolean)>(null, v1);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v2);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void cancel()
{
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor v0;
java.lang.Throwable v2;
java.lang.Boolean v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor;
label1:
v1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: void execute(java.lang.Throwable,java.lang.Boolean)>(null, v1);
label2:
goto label4;
label3:
v2 := @caughtexception;
staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: void handleDroppedException(java.lang.Throwable)>(v2);
label4:
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void cancel()>();
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void execute(java.lang.Throwable, java.lang.Boolean)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke v5;
io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor v0;
java.util.function.BiConsumer v6;
java.lang.Boolean v2;
java.util.concurrent.atomic.AtomicBoolean v3;
boolean v4;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.Boolean;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: java.util.concurrent.atomic.AtomicBoolean actionInvoke>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v4 == 0 goto label1;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke$MultiOnTerminationInvokeProcessor: io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke this$0>;
v6 = v5.<io.smallrye.mutiny.operators.multi.MultiOnTerminationInvoke: java.util.function.BiConsumer callback>;
interfaceinvoke v6.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v1, v2);
label1:
return;
}
}