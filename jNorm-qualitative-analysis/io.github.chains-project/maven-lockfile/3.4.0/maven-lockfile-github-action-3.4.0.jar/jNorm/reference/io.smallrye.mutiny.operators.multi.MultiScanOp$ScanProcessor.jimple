final class io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.function.BiFunction accumulator;
private java.lang.Object current;
void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, java.util.function.BiFunction)
{
io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
java.util.function.BiFunction v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: java.util.function.BiFunction;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.util.function.BiFunction accumulator> = v2;
return;
}
public void onItem(java.lang.Object)
{
java.lang.Throwable v7;
java.util.function.BiFunction v5;
java.lang.NullPointerException v8;
java.lang.Object v1, v3, v4, v6;
io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v9;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: boolean isDone()>();
if v2 == 0 goto label1;
return;
label1:
v3 = v1;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.lang.Object current>;
if v4 == null goto label6;
label2:
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.util.function.BiFunction accumulator>;
v6 = v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.lang.Object current>;
v3 = interfaceinvoke v5.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v6, v1);
label3:
goto label5;
label4:
v7 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: void onFailure(java.lang.Throwable)>(v7);
return;
label5:
if v3 != null goto label6;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>(java.lang.String)>("The mapper returned `null`");
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: void onFailure(java.lang.Throwable)>(v8);
return;
label6:
v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.lang.Object current> = v3;
v9 = v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v9.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v3);
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.lang.Object current> = null;
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
v0.<io.smallrye.mutiny.operators.multi.MultiScanOp$ScanProcessor: java.lang.Object current> = null;
return;
}
}