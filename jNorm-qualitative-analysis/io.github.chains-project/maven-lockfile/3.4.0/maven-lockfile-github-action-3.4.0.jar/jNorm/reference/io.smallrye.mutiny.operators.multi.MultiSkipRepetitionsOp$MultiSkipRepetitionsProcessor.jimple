final class io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.Comparator comparator;
private java.lang.Object last;
public void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, java.util.Comparator)
{
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor v0;
java.util.Comparator v2, v3;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: java.util.Comparator;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
if v2 != null goto label1;
v3 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor$lambda_new_0__2652: java.util.Comparator bootstrap$()>();
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.util.Comparator comparator> = v3;
goto label2;
label1:
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.util.Comparator comparator> = v2;
label2:
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor v0;
java.lang.Exception v8;
int v6;
java.lang.Object v1, v3, v5;
java.util.Comparator v4;
io.smallrye.mutiny.subscription.MultiSubscriber v7;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: boolean isDone()>();
if v2 == 0 goto label1;
return;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.lang.Object last>;
if v3 == null goto label2;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.util.Comparator comparator>;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.lang.Object last>;
v6 = interfaceinvoke v4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v5, v1);
if v6 == 0 goto label3;
label2:
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.lang.Object last> = v1;
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v7.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
goto label6;
label3:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: void request(long)>(1L);
label4:
goto label6;
label5:
v8 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: void onFailure(java.lang.Throwable)>(v8);
label6:
return;
catch java.lang.Exception from label1 to label4 with label5;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.lang.Object last> = null;
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.lang.Object last> = null;
return;
}
public void cancel()
{
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void cancel()>();
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: java.lang.Object last> = null;
return;
}
}