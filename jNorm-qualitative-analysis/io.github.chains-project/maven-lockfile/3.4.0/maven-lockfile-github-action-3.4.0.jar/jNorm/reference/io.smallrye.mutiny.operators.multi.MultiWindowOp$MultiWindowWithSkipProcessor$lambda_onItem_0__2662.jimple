public final class io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662 extends java.lang.Object implements java.lang.Runnable
{
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor cap0;
public static java.lang.Runnable bootstrap$(io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor)
{
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor v0;
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662 v1;
v0 := @parameter0: io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor;
v1 = new io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662;
specialinvoke v1.<io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662: void <init>(io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor)>(v0);
return v1;
}
public void <init>(io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor)
{
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor v1;
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662 v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662: io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor cap0> = v1;
return;
}
public void run()
{
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor v1;
io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662 v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor$lambda_onItem_0__2662: io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor cap0>;
specialinvoke v1.<io.smallrye.mutiny.operators.multi.MultiWindowOp$MultiWindowWithSkipProcessor: void lambda$onItem$0()>();
return;
}
}