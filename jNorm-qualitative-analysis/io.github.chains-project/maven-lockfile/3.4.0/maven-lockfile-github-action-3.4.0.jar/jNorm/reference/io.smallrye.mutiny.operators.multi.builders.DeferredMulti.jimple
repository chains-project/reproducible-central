public class io.smallrye.mutiny.operators.multi.builders.DeferredMulti extends io.smallrye.mutiny.operators.AbstractMulti
{
private final java.util.function.Supplier supplier;
public void <init>(java.util.function.Supplier)
{
io.smallrye.mutiny.operators.multi.builders.DeferredMulti v0;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.DeferredMulti;
v1 := @parameter0: java.util.function.Supplier;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.builders.DeferredMulti: java.util.function.Supplier supplier> = v1;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
java.lang.Throwable v5;
java.util.concurrent.Flow$Subscriber v6;
java.lang.Object v3;
io.smallrye.mutiny.operators.multi.builders.DeferredMulti v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
java.lang.NullPointerException v4;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.DeferredMulti;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.DeferredMulti: java.util.function.Supplier supplier>;
v3 = interfaceinvoke v2.<java.util.function.Supplier: java.lang.Object get()>();
if v3 != null goto label3;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("The supplier returned `null`");
throw v4;
label2:
v5 := @caughtexception;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void fail(java.util.concurrent.Flow$Subscriber,java.lang.Throwable)>(v1, v5);
return;
label3:
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.Flow$Subscriber onMultiSubscription(java.util.concurrent.Flow$Publisher,java.util.concurrent.Flow$Subscriber)>(v3, v1);
interfaceinvoke v3.<java.util.concurrent.Flow$Publisher: void subscribe(java.util.concurrent.Flow$Subscriber)>(v6);
return;
catch java.lang.Throwable from label1 to label2 with label2;
}
}