public final class io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti extends io.smallrye.mutiny.operators.AbstractMulti
{
public static final int HINT;
private final java.util.function.Consumer consumer;
private final io.smallrye.mutiny.subscription.BackPressureStrategy backpressure;
private final int bufferSize;
public void <init>(java.util.function.Consumer, io.smallrye.mutiny.subscription.BackPressureStrategy)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti v0;
int v3;
io.smallrye.mutiny.subscription.BackPressureStrategy v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: io.smallrye.mutiny.subscription.BackPressureStrategy;
v3 = (int) -1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: void <init>(java.util.function.Consumer,io.smallrye.mutiny.subscription.BackPressureStrategy,int)>(v1, v2, v3);
return;
}
public void <init>(java.util.function.Consumer, io.smallrye.mutiny.subscription.BackPressureStrategy, int)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti v0;
int v3;
io.smallrye.mutiny.subscription.BackPressureStrategy v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: io.smallrye.mutiny.subscription.BackPressureStrategy;
v3 := @parameter2: int;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: java.util.function.Consumer consumer> = v1;
v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: io.smallrye.mutiny.subscription.BackPressureStrategy backpressure> = v2;
v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: int bufferSize> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
java.lang.Throwable v21;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti v0;
io.smallrye.mutiny.operators.multi.builders.BufferItemMultiEmitter v13, v16;
java.util.function.Supplier v14;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$ErrorOnOverflowMultiEmitter v8;
int[] v2;
int v11, v12, v17, v4, v5;
io.smallrye.mutiny.operators.multi.builders.BaseMultiEmitter v7;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$IgnoreBackPressureMultiEmitter v9;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$DropLatestOnOverflowMultiEmitter v10;
io.smallrye.mutiny.subscription.MultiEmitter v20;
io.smallrye.mutiny.subscription.BackPressureStrategy v3;
java.util.function.Consumer v19;
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$DropItemOnOverflowMultiEmitter v6;
java.lang.Object v15;
java.util.Queue v18;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = <io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$1: int[] $SwitchMap$io$smallrye$mutiny$subscription$BackPressureStrategy>;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: io.smallrye.mutiny.subscription.BackPressureStrategy backpressure>;
v4 = virtualinvoke v3.<io.smallrye.mutiny.subscription.BackPressureStrategy: int ordinal()>();
v5 = v2[v4];
tableswitch(v5)
{
case 1: goto label01;
case 2: goto label02;
case 3: goto label03;
case 4: goto label04;
default: goto label05;
};
label01:
v6 = new io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$DropItemOnOverflowMultiEmitter;
specialinvoke v6.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$DropItemOnOverflowMultiEmitter: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v7 = v6;
goto label07;
label02:
v8 = new io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$ErrorOnOverflowMultiEmitter;
specialinvoke v8.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$ErrorOnOverflowMultiEmitter: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v7 = v8;
goto label07;
label03:
v9 = new io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$IgnoreBackPressureMultiEmitter;
specialinvoke v9.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$IgnoreBackPressureMultiEmitter: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v7 = v9;
goto label07;
label04:
v10 = new io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$DropLatestOnOverflowMultiEmitter;
specialinvoke v10.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti$DropLatestOnOverflowMultiEmitter: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v7 = v10;
goto label07;
label05:
v11 = v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: int bufferSize>;
v12 = (int) -1;
if v11 != v12 goto label06;
v13 = new io.smallrye.mutiny.operators.multi.builders.BufferItemMultiEmitter;
v14 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues: java.util.function.Supplier unbounded(int)>(16);
v15 = interfaceinvoke v14.<java.util.function.Supplier: java.lang.Object get()>();
specialinvoke v13.<io.smallrye.mutiny.operators.multi.builders.BufferItemMultiEmitter: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.Queue)>(v1, v15);
v7 = v13;
goto label07;
label06:
v16 = new io.smallrye.mutiny.operators.multi.builders.BufferItemMultiEmitter;
v17 = v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: int bufferSize>;
v18 = staticinvoke <io.smallrye.mutiny.helpers.queues.Queues: java.util.Queue createStrictSizeQueue(int)>(v17);
specialinvoke v16.<io.smallrye.mutiny.operators.multi.builders.BufferItemMultiEmitter: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.Queue)>(v1, v18);
v7 = v16;
label07:
interfaceinvoke v1.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v7);
label08:
v19 = v0.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: java.util.function.Consumer consumer>;
v20 = virtualinvoke v7.<io.smallrye.mutiny.operators.multi.builders.BaseMultiEmitter: io.smallrye.mutiny.subscription.MultiEmitter serialize()>();
interfaceinvoke v19.<java.util.function.Consumer: void accept(java.lang.Object)>(v20);
label09:
goto label11;
label10:
v21 := @caughtexception;
virtualinvoke v7.<io.smallrye.mutiny.operators.multi.builders.BaseMultiEmitter: void fail(java.lang.Throwable)>(v21);
label11:
return;
catch java.lang.Throwable from label08 to label09 with label10;
}
}