public class io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.concurrent.atomic.AtomicBoolean done;
private final io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount parent;
private final io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection;
void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount, io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)
{
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v2;
java.util.concurrent.atomic.AtomicBoolean v4;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v3;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber v0;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v3 := @parameter2: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v4 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v4.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: java.util.concurrent.atomic.AtomicBoolean done> = v4;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount parent> = v2;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection> = v3;
return;
}
public void onItem(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber v0;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v4;
java.util.concurrent.atomic.AtomicBoolean v2;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v5;
boolean v3;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber v0;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: java.util.concurrent.atomic.AtomicBoolean done>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount parent>;
v5 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
virtualinvoke v4.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: void terminated(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v5);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onFailure(java.lang.Throwable)>(v1);
goto label2;
label1:
staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: void handleDroppedException(java.lang.Throwable)>(v1);
label2:
return;
}
public void onCompletion()
{
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v3;
java.util.concurrent.atomic.AtomicBoolean v1;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v4;
boolean v2;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber v0;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber;
v1 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: java.util.concurrent.atomic.AtomicBoolean done>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount parent>;
v4 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
virtualinvoke v3.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: void terminated(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v4);
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void onCompletion()>();
label1:
return;
}
public void cancel()
{
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v3;
java.util.concurrent.atomic.AtomicBoolean v1;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v4;
boolean v2;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber v0;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void cancel()>();
v1 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: java.util.concurrent.atomic.AtomicBoolean done>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount parent>;
v4 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
virtualinvoke v3.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: void cancel(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v4);
label1:
return;
}
}