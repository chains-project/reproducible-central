class io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor extends io.smallrye.mutiny.operators.uni.UniOperatorProcessor
{
private final java.util.function.Supplier supplier;
private volatile io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State state;
private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater;
public void <init>(java.util.function.Supplier, io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State v3;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor v0;
io.smallrye.mutiny.subscription.UniSubscriber v2;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v2);
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State INIT>;
v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State state> = v3;
v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: java.util.function.Supplier supplier> = v1;
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State v3, v4;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor v0;
java.lang.Object v1;
io.smallrye.mutiny.subscription.UniSubscriber v6;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor;
v1 := @parameter0: java.lang.Object;
v2 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater>;
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State INIT>;
v4 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State DONE>;
v5 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v3, v4);
if v5 == 0 goto label1;
v6 = v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v1);
label1:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State v3, v4;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v2;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor v0;
io.smallrye.mutiny.subscription.UniSubscriber v6;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater>;
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State INIT>;
v4 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State DONE>;
v5 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v3, v4);
if v5 == 0 goto label1;
v6 = v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
label1:
return;
}
public void cancel()
{
io.smallrye.mutiny.subscription.UniSubscription v5, v6;
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v1;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor v0;
io.smallrye.mutiny.Uni v7;
java.util.function.Consumer v10, v9;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State v2, v3;
io.smallrye.mutiny.groups.UniSubscribe v8;
boolean v4;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor;
v1 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater>;
v2 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State INIT>;
v3 = <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$State CANCELLED>;
v4 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v2, v3);
if v4 == 0 goto label1;
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription CANCELLED>;
v6 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: io.smallrye.mutiny.subscription.UniSubscription getAndSetUpstreamSubscription(io.smallrye.mutiny.subscription.UniSubscription)>(v5);
v7 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: io.smallrye.mutiny.Uni execute()>();
v8 = interfaceinvoke v7.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v9 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor$lambda_cancel_0__2732: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.subscription.UniSubscription)>(v6);
v10 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor$lambda_cancel_1__2733: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.subscription.UniSubscription)>(v6);
virtualinvoke v8.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v9, v10);
label1:
return;
}
private io.smallrye.mutiny.Uni execute()
{
java.lang.Throwable v4;
io.smallrye.mutiny.groups.UniCreate v5;
io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor v0;
java.lang.Object v2, v3;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v6;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor;
label1:
v1 = v0.<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: java.util.function.Supplier supplier>;
v2 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "uni");
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v6 = virtualinvoke v5.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni failure(java.lang.Throwable)>(v4);
return v6;
catch java.lang.Throwable from label1 to label2 with label3;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicReferenceFieldUpdater v0;
v0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lio/smallrye/mutiny/operators/uni/UniOnCancellationCall$UniOnCancellationCallProcessor;", class "Lio/smallrye/mutiny/operators/uni/UniOnCancellationCall$State;", "state");
<io.smallrye.mutiny.operators.uni.UniOnCancellationCall$UniOnCancellationCallProcessor: java.util.concurrent.atomic.AtomicReferenceFieldUpdater stateUpdater> = v0;
return;
}
}