class io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor extends io.smallrye.mutiny.operators.uni.UniOperatorProcessor
{
private volatile io.smallrye.mutiny.subscription.Cancellable cancellable;
private final java.util.concurrent.atomic.AtomicBoolean invoked;
final io.smallrye.mutiny.operators.uni.UniOnTerminationCall this$0;
public void <init>(io.smallrye.mutiny.operators.uni.UniOnTerminationCall, io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.operators.uni.UniOnTerminationCall v1;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.UniSubscriber v2;
io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor v0;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.uni.UniOnTerminationCall;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.operators.uni.UniOnTerminationCall this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v2);
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: java.util.concurrent.atomic.AtomicBoolean invoked> = v3;
return;
}
public void cancel()
{
io.smallrye.mutiny.Uni v5;
java.util.function.Consumer v7, v8;
java.lang.Boolean v4;
io.smallrye.mutiny.groups.UniSubscribe v6;
io.smallrye.mutiny.subscription.Cancellable v2, v3;
io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor v0;
boolean v1;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor;
v1 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: boolean isCancelled()>();
if v1 != 0 goto label2;
v2 = v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable>;
if v2 == null goto label1;
v3 = v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable>;
interfaceinvoke v3.<io.smallrye.mutiny.subscription.Cancellable: void cancel()>();
specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOperatorProcessor: void cancel()>();
goto label2;
label1:
v4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
v5 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.Uni execute(java.lang.Object,java.lang.Throwable,java.lang.Boolean)>(null, null, v4);
v6 = interfaceinvoke v5.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v7 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor$lambda_cancel_0__2712: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor)>(v0);
v8 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor$lambda_cancel_1__2713: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor)>(v0);
virtualinvoke v6.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v7, v8);
label2:
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.subscription.UniSubscriber v7;
io.smallrye.mutiny.Uni v4;
java.util.function.Consumer v6, v8;
java.lang.Boolean v3;
io.smallrye.mutiny.groups.UniSubscribe v5;
java.lang.Object v1;
io.smallrye.mutiny.subscription.Cancellable v9;
io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor v0;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: boolean isCancelled()>();
if v2 != 0 goto label1;
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v4 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.Uni execute(java.lang.Object,java.lang.Throwable,java.lang.Boolean)>(v1, null, v3);
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v6 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor$lambda_onItem_2__2714: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor,java.lang.Object)>(v0, v1);
v7 = v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
virtualinvoke v7.<java.lang.Object: java.lang.Class getClass()>();
v8 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor$onFailure__2715: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.subscription.UniSubscriber)>(v7);
v9 = virtualinvoke v5.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v6, v8);
v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable> = v9;
label1:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.Uni v4;
java.util.function.Consumer v6, v7;
java.lang.Boolean v3;
io.smallrye.mutiny.groups.UniSubscribe v5;
io.smallrye.mutiny.subscription.Cancellable v8;
io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor v0;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: boolean isCancelled()>();
if v2 != 0 goto label1;
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v4 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.Uni execute(java.lang.Object,java.lang.Throwable,java.lang.Boolean)>(null, v1, v3);
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v6 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor$lambda_onFailure_3__2716: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor,java.lang.Throwable)>(v0, v1);
v7 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor$lambda_onFailure_4__2717: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor,java.lang.Throwable)>(v0, v1);
v8 = virtualinvoke v5.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v6, v7);
v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable> = v8;
goto label2;
label1:
staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: void handleDroppedException(java.lang.Throwable)>(v1);
label2:
return;
}
private io.smallrye.mutiny.Uni execute(java.lang.Object, java.lang.Throwable, java.lang.Boolean)
{
java.lang.Throwable v10, v2;
java.util.concurrent.atomic.AtomicBoolean v4;
io.smallrye.mutiny.Uni v12, v14;
io.smallrye.mutiny.operators.uni.UniOnTerminationCall v6;
io.smallrye.mutiny.groups.UniCreate v11, v13;
java.lang.Boolean v3;
java.lang.Object v1, v8, v9;
io.smallrye.mutiny.tuples.Functions$Function3 v7;
io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor v0;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Boolean;
v4 = v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: java.util.concurrent.atomic.AtomicBoolean invoked>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v5 == 0 goto label4;
label1:
v6 = v0.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall$UniOnTerminationCallProcessor: io.smallrye.mutiny.operators.uni.UniOnTerminationCall this$0>;
v7 = v6.<io.smallrye.mutiny.operators.uni.UniOnTerminationCall: io.smallrye.mutiny.tuples.Functions$Function3 mapper>;
v8 = interfaceinvoke v7.<io.smallrye.mutiny.tuples.Functions$Function3: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v8, "Uni should not be null");
label2:
return v9;
label3:
v10 := @caughtexception;
v11 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v12 = virtualinvoke v11.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni failure(java.lang.Throwable)>(v10);
return v12;
label4:
v13 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v14 = virtualinvoke v13.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni nullItem()>();
return v14;
catch java.lang.Throwable from label1 to label2 with label3;
}
}