public class io.smallrye.mutiny.operators.uni.builders.StateHolder extends java.lang.Object
{
private final java.util.function.Supplier supplier;
private boolean once;
private volatile java.lang.Object state;
public void <init>(java.util.function.Supplier)
{
io.smallrye.mutiny.operators.uni.builders.StateHolder v0;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.StateHolder;
v1 := @parameter0: java.util.function.Supplier;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: boolean once> = 0;
v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.util.function.Supplier supplier> = v1;
return;
}
public java.lang.Object get()
{
java.lang.Throwable v5;
java.lang.IllegalStateException v7;
io.smallrye.mutiny.operators.uni.builders.StateHolder v0;
java.util.function.Supplier v2;
java.lang.Object v3, v4, v6, v8;
boolean v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.StateHolder;
entermonitor v0;
label1:
v1 = v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: boolean once>;
if v1 != 0 goto label2;
v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: boolean once> = 1;
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.util.function.Supplier supplier>;
v3 = interfaceinvoke v2.<java.util.function.Supplier: java.lang.Object get()>();
v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object state> = v3;
v4 = v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object state>;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v4, "The supplier returned `null`");
label2:
exitmonitor v0;
label3:
goto label5;
label4:
v5 := @caughtexception;
exitmonitor v0;
throw v5;
label5:
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object state>;
if v6 != null goto label6;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid shared state");
throw v7;
label6:
v8 = v0.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object state>;
return v8;
catch java.lang.Throwable from label1 to label3 with label4;
}
}