public class io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState extends io.smallrye.mutiny.operators.AbstractUni
{
private final java.util.function.BiConsumer consumer;
private final io.smallrye.mutiny.operators.uni.builders.StateHolder holder;
public void <init>(java.util.function.Supplier, java.util.function.BiConsumer)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState v0;
java.util.function.BiConsumer v2;
io.smallrye.mutiny.operators.uni.builders.StateHolder v3;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.BiConsumer;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractUni: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState: java.util.function.BiConsumer consumer> = v2;
v3 = new io.smallrye.mutiny.operators.uni.builders.StateHolder;
specialinvoke v3.<io.smallrye.mutiny.operators.uni.builders.StateHolder: void <init>(java.util.function.Supplier)>(v1);
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState: io.smallrye.mutiny.operators.uni.builders.StateHolder holder> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
java.lang.Throwable v4, v8;
io.smallrye.mutiny.subscription.UniSubscription v5;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState v0;
io.smallrye.mutiny.operators.uni.builders.StateHolder v2;
io.smallrye.mutiny.subscription.UniSubscriber v1;
io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter v6;
java.util.function.BiConsumer v7;
java.lang.Object v3;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
label1:
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState: io.smallrye.mutiny.operators.uni.builders.StateHolder holder>;
v3 = virtualinvoke v2.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object get()>();
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v5);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v4);
return;
label4:
v6 = new io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter;
specialinvoke v6.<io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v1);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v6);
label5:
v7 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState: java.util.function.BiConsumer consumer>;
interfaceinvoke v7.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v3, v6);
label6:
goto label8;
label7:
v8 := @caughtexception;
virtualinvoke v6.<io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter: void fail(java.lang.Throwable)>(v8);
label8:
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch java.lang.Throwable from label5 to label6 with label7;
}
}