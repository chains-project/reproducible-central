class io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription extends java.lang.Object implements io.smallrye.mutiny.subscription.UniSubscription
{
private final io.smallrye.mutiny.subscription.UniSubscriber subscriber;
private final java.util.concurrent.atomic.AtomicReferenceArray subscriptions;
private final java.util.concurrent.atomic.AtomicBoolean cancelled;
private final java.util.concurrent.atomic.AtomicReferenceArray items;
private final java.util.List failures;
private final java.util.concurrent.atomic.AtomicInteger completionSignalsCount;
private java.util.concurrent.atomic.AtomicInteger nextSubscriptionIndex;
final io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0;
public void <init>(io.smallrye.mutiny.operators.uni.builders.UniJoinAll, io.smallrye.mutiny.subscription.UniSubscriber)
{
java.util.concurrent.atomic.AtomicBoolean v7;
io.smallrye.mutiny.subscription.UniSubscriber v2;
java.util.ArrayList v12;
java.util.concurrent.atomic.AtomicReferenceArray v3, v8;
java.util.List v10, v13, v5;
java.util.concurrent.atomic.AtomicInteger v14;
int v11, v6;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll v1, v4, v9;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 := @parameter0: io.smallrye.mutiny.operators.uni.builders.UniJoinAll;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.concurrent.atomic.AtomicReferenceArray;
v4 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v5 = v4.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
specialinvoke v3.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(v6);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicReferenceArray subscriptions> = v3;
v7 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v7.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled> = v7;
v8 = new java.util.concurrent.atomic.AtomicReferenceArray;
v9 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v10 = v9.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v11 = interfaceinvoke v10.<java.util.List: int size()>();
specialinvoke v8.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(v11);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicReferenceArray items> = v8;
v12 = new java.util.ArrayList;
specialinvoke v12.<java.util.ArrayList: void <init>()>();
v13 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>(v12);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.List failures> = v13;
v14 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v14.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicInteger completionSignalsCount> = v14;
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber> = v2;
return;
}
public void triggerSubscriptions()
{
java.util.concurrent.atomic.AtomicInteger v10;
int v12, v13, v16, v2, v3, v5, v8, v9;
boolean v20;
java.util.List v15, v18, v7;
java.lang.Object v19;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll v1, v11, v14, v17, v4, v6;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v2 = v1.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: int concurrency>;
v3 = (int) -1;
if v2 == v3 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v5 = v4.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: int concurrency>;
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v7 = v6.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v8 = interfaceinvoke v7.<java.util.List: int size()>();
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v5, v8);
v10 = new java.util.concurrent.atomic.AtomicInteger;
v11 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v12 = v11.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: int concurrency>;
v13 = v12 - 1;
specialinvoke v10.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(v13);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicInteger nextSubscriptionIndex> = v10;
goto label2;
label1:
v14 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v15 = v14.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v9 = interfaceinvoke v15.<java.util.List: int size()>();
label2:
v16 = 0;
label3:
if v16 >= v9 goto label4;
v17 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v18 = v17.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v19 = interfaceinvoke v18.<java.util.List: java.lang.Object get(int)>(v16);
v20 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: boolean trySubscribe(int,io.smallrye.mutiny.Uni)>(v16, v19);
if v20 == 0 goto label4;
v16 = v16 + 1;
goto label3;
label4:
return;
}
private boolean trySubscribe(int, io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniOnSubscribe v7;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.UniSubscriber v11;
io.smallrye.mutiny.Context v12;
io.smallrye.mutiny.Uni v2, v9;
java.util.function.Consumer v13, v14, v8;
int v1;
io.smallrye.mutiny.groups.UniSubscribe v10;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
boolean v4, v5, v6;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 := @parameter0: int;
v2 := @parameter1: io.smallrye.mutiny.Uni;
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v6 = v5;
if v5 == 0 goto label3;
v7 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnSubscribe onSubscription()>();
v8 = staticinvoke <io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription$lambda_trySubscribe_0__2740: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription,int)>(v0, v1);
v9 = virtualinvoke v7.<io.smallrye.mutiny.groups.UniOnSubscribe: io.smallrye.mutiny.Uni invoke(java.util.function.Consumer)>(v8);
v10 = interfaceinvoke v9.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v11 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
v12 = interfaceinvoke v11.<io.smallrye.mutiny.subscription.UniSubscriber: io.smallrye.mutiny.Context context()>();
v13 = staticinvoke <io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription$lambda_trySubscribe_1__2741: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription,int)>(v0, v1);
v14 = staticinvoke <io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription$onFailure__2742: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription)>(v0);
virtualinvoke v10.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer)>(v12, v13, v14);
label3:
return v6;
}
public void cancel()
{
java.util.concurrent.atomic.AtomicBoolean v1;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: void cancelSubscriptions()>();
return;
}
private void cancelSubscriptions()
{
java.util.List v3;
int v1, v4;
java.lang.Object v6;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll v2;
java.util.concurrent.atomic.AtomicReferenceArray v5;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 = 0;
label1:
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v3 = v2.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v1 >= v4 goto label3;
v5 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicReferenceArray subscriptions>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(v1);
if v6 == null goto label2;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label2:
v1 = v1 + 1;
goto label1;
label3:
return;
}
private void onSubscribe(int, io.smallrye.mutiny.subscription.UniSubscription)
{
io.smallrye.mutiny.subscription.UniSubscription v2;
int v1;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
boolean v4;
java.util.concurrent.atomic.AtomicReferenceArray v5;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 := @parameter0: int;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscription;
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v4 != 0 goto label1;
v5 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicReferenceArray subscriptions>;
virtualinvoke v5.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(v1, v2);
goto label2;
label1:
interfaceinvoke v2.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label2:
return;
}
private void onItem(int, java.lang.Object)
{
int v1;
java.util.concurrent.atomic.AtomicBoolean v3;
java.lang.Object v2;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
boolean v4;
java.util.concurrent.atomic.AtomicReferenceArray v5;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v4 != 0 goto label1;
v5 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicReferenceArray items>;
virtualinvoke v5.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(v1, v2);
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: void forwardSignalWhenCompleteOrSubscribeNext()>();
label1:
return;
}
private void forwardSignalWhenCompleteOrSubscribeNext()
{
io.smallrye.mutiny.subscription.UniSubscriber v19, v20;
java.util.concurrent.atomic.AtomicReferenceArray v17;
java.util.concurrent.atomic.AtomicInteger v1, v26;
boolean v8;
java.util.List v11, v15, v22, v29, v32, v4, v7;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll v10, v14, v23, v28, v3, v31;
java.util.concurrent.atomic.AtomicBoolean v6;
java.util.ArrayList v9;
int v12, v13, v16, v2, v24, v25, v27, v30, v5;
io.smallrye.mutiny.CompositeException v21;
java.lang.Object v18, v33;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicInteger completionSignalsCount>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v4 = v3.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v5 = interfaceinvoke v4.<java.util.List: int size()>();
if v2 != v5 goto label4;
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
virtualinvoke v6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);
v7 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.List failures>;
v8 = interfaceinvoke v7.<java.util.List: boolean isEmpty()>();
if v8 == 0 goto label3;
v9 = new java.util.ArrayList;
v10 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v11 = v10.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v12 = interfaceinvoke v11.<java.util.List: int size()>();
specialinvoke v9.<java.util.ArrayList: void <init>(int)>(v12);
v13 = 0;
label1:
v14 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v15 = v14.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v16 = interfaceinvoke v15.<java.util.List: int size()>();
if v13 >= v16 goto label2;
v17 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicReferenceArray items>;
v18 = virtualinvoke v17.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(v13);
virtualinvoke v9.<java.util.ArrayList: boolean add(java.lang.Object)>(v18);
v13 = v13 + 1;
goto label1;
label2:
v19 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
interfaceinvoke v19.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v9);
goto label5;
label3:
v20 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
v21 = new io.smallrye.mutiny.CompositeException;
v22 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.List failures>;
specialinvoke v21.<io.smallrye.mutiny.CompositeException: void <init>(java.util.List)>(v22);
interfaceinvoke v20.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v21);
goto label5;
label4:
v23 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v24 = v23.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: int concurrency>;
v25 = (int) -1;
if v24 == v25 goto label5;
v26 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicInteger nextSubscriptionIndex>;
v27 = virtualinvoke v26.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
v28 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v29 = v28.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v30 = interfaceinvoke v29.<java.util.List: int size()>();
if v27 >= v30 goto label5;
v31 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v32 = v31.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: java.util.List unis>;
v33 = interfaceinvoke v32.<java.util.List: java.lang.Object get(int)>(v27);
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: boolean trySubscribe(int,io.smallrye.mutiny.Uni)>(v27, v33);
label5:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
java.util.concurrent.atomic.AtomicBoolean v10, v7;
io.smallrye.mutiny.subscription.UniSubscriber v12;
java.util.List v9;
int[] v2;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$Mode v4;
int v5, v6;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription v0;
io.smallrye.mutiny.operators.uni.builders.UniJoinAll v3;
boolean v11, v8;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription;
v1 := @parameter0: java.lang.Throwable;
v2 = <io.smallrye.mutiny.operators.uni.builders.UniJoinAll$1: int[] $SwitchMap$io$smallrye$mutiny$operators$uni$builders$UniJoinAll$Mode>;
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinAll this$0>;
v4 = v3.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll: io.smallrye.mutiny.operators.uni.builders.UniJoinAll$Mode mode>;
v5 = virtualinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$Mode: int ordinal()>();
v6 = v2[v5];
lookupswitch(v6)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
v7 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v8 = virtualinvoke v7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v8 != 0 goto label3;
v9 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.List failures>;
interfaceinvoke v9.<java.util.List: boolean add(java.lang.Object)>(v1);
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: void forwardSignalWhenCompleteOrSubscribeNext()>();
goto label3;
label2:
v10 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v11 = virtualinvoke v10.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v11 == 0 goto label3;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: void cancelSubscriptions()>();
v12 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinAll$UniJoinAllSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
interfaceinvoke v12.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
label3:
return;
}
}