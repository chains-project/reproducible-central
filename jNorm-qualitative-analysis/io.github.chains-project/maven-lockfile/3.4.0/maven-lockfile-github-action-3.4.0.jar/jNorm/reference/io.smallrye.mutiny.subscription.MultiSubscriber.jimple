public interface  io.smallrye.mutiny.subscription.MultiSubscriber extends java.lang.Object implements java.util.concurrent.Flow$Subscriber
{
public abstract void onItem(java.lang.Object);
public abstract void onFailure(java.lang.Throwable);
public abstract void onCompletion();
public void onNext(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v0;
v0 := @this: io.smallrye.mutiny.subscription.MultiSubscriber;
v1 := @parameter0: java.lang.Object;
interfaceinvoke v0.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
return;
}
public void onError(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.subscription.MultiSubscriber v0;
v0 := @this: io.smallrye.mutiny.subscription.MultiSubscriber;
v1 := @parameter0: java.lang.Throwable;
interfaceinvoke v0.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v1);
return;
}
public void onComplete()
{
io.smallrye.mutiny.subscription.MultiSubscriber v0;
v0 := @this: io.smallrye.mutiny.subscription.MultiSubscriber;
interfaceinvoke v0.<io.smallrye.mutiny.subscription.MultiSubscriber: void onCompletion()>();
return;
}
}