public class io.smallrye.mutiny.tuples.Tuple5 extends io.smallrye.mutiny.tuples.Tuple4 implements io.smallrye.mutiny.tuples.Tuple
{
final java.lang.Object item5;
void <init>(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2, v3, v4, v5;
io.smallrye.mutiny.tuples.Tuple5 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: java.lang.Object;
specialinvoke v0.<io.smallrye.mutiny.tuples.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v1, v2, v3, v4);
v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5> = v5;
return;
}
public static io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
{
java.lang.Object v0, v1, v2, v3, v4;
io.smallrye.mutiny.tuples.Tuple5 v5;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: java.lang.Object;
v4 := @parameter4: java.lang.Object;
v5 = new io.smallrye.mutiny.tuples.Tuple5;
specialinvoke v5.<io.smallrye.mutiny.tuples.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v1, v2, v3, v4);
return v5;
}
public java.lang.Object getItem5()
{
java.lang.Object v1;
io.smallrye.mutiny.tuples.Tuple5 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
return v1;
}
public io.smallrye.mutiny.tuples.Tuple5 mapItem1(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple5 v0, v8;
java.util.function.Function v1;
java.lang.Object v2, v3, v4, v5, v6, v7;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v3 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v2);
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v6 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v7 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v8 = staticinvoke <io.smallrye.mutiny.tuples.Tuple5: io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v3, v4, v5, v6, v7);
return v8;
}
public io.smallrye.mutiny.tuples.Tuple5 mapItem2(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple5 v0, v8;
java.util.function.Function v1;
java.lang.Object v2, v3, v4, v5, v6, v7;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v4 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v6 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v7 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v8 = staticinvoke <io.smallrye.mutiny.tuples.Tuple5: io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v4, v5, v6, v7);
return v8;
}
public io.smallrye.mutiny.tuples.Tuple5 mapItem3(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple5 v0, v8;
java.util.function.Function v1;
java.lang.Object v2, v3, v4, v5, v6, v7;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v5 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v4);
v6 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v7 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v8 = staticinvoke <io.smallrye.mutiny.tuples.Tuple5: io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v5, v6, v7);
return v8;
}
public io.smallrye.mutiny.tuples.Tuple5 mapItem4(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple5 v0, v8;
java.util.function.Function v1;
java.lang.Object v2, v3, v4, v5, v6, v7;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v6 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v5);
v7 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v8 = staticinvoke <io.smallrye.mutiny.tuples.Tuple5: io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v4, v6, v7);
return v8;
}
public io.smallrye.mutiny.tuples.Tuple5 mapItem5(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple5 v0, v8;
java.util.function.Function v1;
java.lang.Object v2, v3, v4, v5, v6, v7;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v6 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v7 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v6);
v8 = staticinvoke <io.smallrye.mutiny.tuples.Tuple5: io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v4, v5, v7);
return v8;
}
public java.lang.Object nth(int)
{
int v1;
java.lang.Object v2, v3;
io.smallrye.mutiny.tuples.Tuple5 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: int;
virtualinvoke v0.<io.smallrye.mutiny.tuples.Tuple5: void assertIndexInBounds(int)>(v1);
if v1 != 4 goto label1;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
return v2;
label1:
v3 = specialinvoke v0.<io.smallrye.mutiny.tuples.Tuple4: java.lang.Object nth(int)>(v1);
return v3;
}
public java.util.List asList()
{
java.lang.Object[] v1;
io.smallrye.mutiny.tuples.Tuple5 v0;
java.util.List v7;
java.lang.Object v2, v3, v4, v5, v6;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 = newarray (java.lang.Object)[5];
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v1[0] = v2;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v1[1] = v3;
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v1[2] = v4;
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v1[3] = v5;
v6 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v1[4] = v6;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v7;
}
public int size()
{
io.smallrye.mutiny.tuples.Tuple5 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
return 5;
}
public java.lang.String toString()
{
java.lang.Object v1, v2, v3, v4, v5;
io.smallrye.mutiny.tuples.Tuple5 v0;
java.lang.String v6;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item1>;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item2>;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item3>;
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item4>;
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v1, v2, v3, v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Tuple{item1=\u0001,item2=\u0001,item3=\u0001,item4=\u0001,item5=\u0001}");
return v6;
}
public boolean equals(java.lang.Object)
{
io.smallrye.mutiny.tuples.Tuple5 v0;
java.lang.Class v2, v3;
java.lang.Object v1, v5, v6;
boolean v4, v7;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = specialinvoke v0.<io.smallrye.mutiny.tuples.Tuple4: boolean equals(java.lang.Object)>(v1);
if v4 != 0 goto label4;
return 0;
label4:
v5 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v6 = v1.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v5, v6);
return v7;
}
public int hashCode()
{
java.lang.Object[] v1;
int v2, v5;
java.lang.Object v4;
io.smallrye.mutiny.tuples.Tuple5 v0;
java.lang.Integer v3;
v0 := @this: io.smallrye.mutiny.tuples.Tuple5;
v1 = newarray (java.lang.Object)[2];
v2 = specialinvoke v0.<io.smallrye.mutiny.tuples.Tuple4: int hashCode()>();
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v1[0] = v3;
v4 = v0.<io.smallrye.mutiny.tuples.Tuple5: java.lang.Object item5>;
v1[1] = v4;
v5 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v5;
}
}