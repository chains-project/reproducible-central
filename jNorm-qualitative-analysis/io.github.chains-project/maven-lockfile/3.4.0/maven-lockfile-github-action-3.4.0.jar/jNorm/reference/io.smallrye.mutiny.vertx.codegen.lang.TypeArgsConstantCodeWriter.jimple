public class io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter extends java.lang.Object implements io.smallrye.mutiny.vertx.codegen.lang.ConditionalCodeWriter
{
public void <init>()
{
io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void generate(io.vertx.codegen.ClassModel, java.io.PrintWriter)
{
java.io.PrintWriter v2;
io.vertx.codegen.type.ClassTypeInfo v3;
io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter v0;
io.vertx.codegen.ClassModel v1;
java.lang.Class v5, v8;
java.lang.String v10, v11, v4, v6, v7, v9;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: java.io.PrintWriter;
v3 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v4 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getSimpleName()>();
v5 = class "Lio/smallrye/mutiny/vertx/TypeArg;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  public static final \u0001<");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v7);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v4);
v8 = class "Lio/smallrye/mutiny/vertx/TypeArg;";
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("> __TYPE_ARG = new \u0001<>(");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v10);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("    obj -> new ");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v4);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("((");
v11 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v11);
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(") obj),");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("    ");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v4);
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>("::getDelegate");
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>("  );");
virtualinvoke v2.<java.io.PrintWriter: void println()>();
return;
}
public boolean test(io.vertx.codegen.ClassModel)
{
io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter v0;
io.vertx.codegen.ClassModel v1;
boolean v2;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.TypeArgsConstantCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isConcrete()>();
return v2;
}
}