public class io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator extends java.lang.Object
{
protected final java.io.PrintWriter writer;
public void <init>(java.io.PrintWriter)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator v0;
java.io.PrintWriter v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator;
v1 := @parameter0: java.io.PrintWriter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer> = v1;
return;
}
public void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.io.PrintWriter v12, v16, v17, v18, v22, v24, v27, v28, v29, v31, v34, v35, v38, v45, v46, v48, v53, v54, v58, v64, v66, v71, v76, v80, v81, v83, v87;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v1;
java.util.Set v7;
io.vertx.codegen.doc.Doc v4;
java.lang.String v11, v20, v21, v25, v26, v32, v33, v36, v37, v39, v40, v47, v56, v68, v69, v73, v74, v78, v79, v85, v86;
io.vertx.codegen.doc.Text v49, v50, v59, v61, v82, v84;
boolean v13, v23, v30, v43, v5, v57, v60, v65, v70, v75;
io.vertx.codegen.type.TypeInfo v55, v72, v77;
java.util.List v14, v41, v51, v62;
java.util.function.Function v15, v52, v63;
java.util.Iterator v42, v8;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator v0;
java.lang.Class v19, v67;
java.lang.Object v44, v9;
io.vertx.codegen.MethodInfo v10, v2, v3, v6;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator;
v1 := @parameter0: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v2 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getOriginalMethod()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v4 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.doc.Doc getDoc()>();
v5 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isDeprecated()>();
v6 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v7 = virtualinvoke v6.<io.vertx.codegen.MethodInfo: java.util.Set getOwnerTypes()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
v9 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v11 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String renderLinkToHtml(io.vertx.codegen.type.ClassTypeInfo,io.vertx.codegen.MethodInfo)>(v9, v10);
if v4 == null goto label13;
v12 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v12.<java.io.PrintWriter: void println(java.lang.String)>("  /**");
v13 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isUniMethod()>();
if v13 == 0 goto label01;
v14 = virtualinvoke v4.<io.vertx.codegen.doc.Doc: java.util.List getTokens()>();
v15 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator$renderLinkToHtml__2361: java.util.function.Function bootstrap$()>();
v16 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
staticinvoke <io.vertx.codegen.doc.Token: void toHtml(java.util.List,java.lang.String,java.util.function.Function,java.lang.String,java.io.PrintWriter)>(v14, "   *", v15, "\n", v16);
v17 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v17.<java.io.PrintWriter: void println(java.lang.String)>("   * <p>");
v18 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v19 = class "Lio/smallrye/mutiny/Uni;";
v20 = virtualinvoke v19.<java.lang.Class: java.lang.String getName()>();
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("   * Unlike the <em>bare</em> Vert.x variant, this method returns a {@link \u0001 Uni}.");
virtualinvoke v18.<java.io.PrintWriter: void println(java.lang.String)>(v21);
v22 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v22.<java.io.PrintWriter: void println(java.lang.String)>("   * Don\'t forget to <em>subscribe</em> on it to trigger the operation.");
goto label03;
label01:
v23 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isAwaitMethod()>();
if v23 == 0 goto label02;
v24 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v25 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.lang.String sanitize(java.lang.String)>(v11);
v26 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v25) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("   * Blocking variant of \u0001.");
virtualinvoke v24.<java.io.PrintWriter: void println(java.lang.String)>(v26);
v27 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v27.<java.io.PrintWriter: void println(java.lang.String)>("   * <p>");
v28 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v28.<java.io.PrintWriter: void println(java.lang.String)>("   * This method waits for the completion of the underlying asynchronous operation.");
v29 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v29.<java.io.PrintWriter: void println(java.lang.String)>("   * If the operation completes successfully, the result is returned, otherwise the failure is thrown (potentially wrapped in a RuntimeException).");
goto label03;
label02:
v30 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isForgetMethod()>();
if v30 == 0 goto label03;
v31 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v32 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.lang.String sanitize(java.lang.String)>(v11);
v33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v32) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("   * Variant of \u0001 that ignores the result of the operation.");
virtualinvoke v31.<java.io.PrintWriter: void println(java.lang.String)>(v33);
v34 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v34.<java.io.PrintWriter: void println(java.lang.String)>("   * <p>");
v35 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v36 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.lang.String sanitize(java.lang.String)>(v11);
v37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v36) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("   * This method subscribes on the result of \u0001, but discards the outcome (item or failure).");
virtualinvoke v35.<java.io.PrintWriter: void println(java.lang.String)>(v37);
v38 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v39 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.lang.String sanitize(java.lang.String)>(v11);
v40 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v39) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("   * This method is useful to trigger the asynchronous operation from \u0001 but you don\'t need to compose it with other operations.");
virtualinvoke v38.<java.io.PrintWriter: void println(java.lang.String)>(v40);
label03:
v41 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v42 = interfaceinvoke v41.<java.util.List: java.util.Iterator iterator()>();
label04:
v43 = interfaceinvoke v42.<java.util.Iterator: boolean hasNext()>();
if v43 == 0 goto label06;
v44 = interfaceinvoke v42.<java.util.Iterator: java.lang.Object next()>();
v45 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v45.<java.io.PrintWriter: void print(java.lang.String)>("   * @param ");
v46 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v47 = virtualinvoke v44.<io.vertx.codegen.ParamInfo: java.lang.String getName()>();
virtualinvoke v46.<java.io.PrintWriter: void print(java.lang.String)>(v47);
v48 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v48.<java.io.PrintWriter: void print(java.lang.String)>(" ");
v49 = virtualinvoke v44.<io.vertx.codegen.ParamInfo: io.vertx.codegen.doc.Text getDescription()>();
if v49 == null goto label05;
v50 = virtualinvoke v44.<io.vertx.codegen.ParamInfo: io.vertx.codegen.doc.Text getDescription()>();
v51 = virtualinvoke v50.<io.vertx.codegen.doc.Text: java.util.List getTokens()>();
v52 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator$renderLinkToHtml__2360: java.util.function.Function bootstrap$()>();
v53 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
staticinvoke <io.vertx.codegen.doc.Token: void toHtml(java.util.List,java.lang.String,java.util.function.Function,java.lang.String,java.io.PrintWriter)>(v51, "", v52, "", v53);
label05:
v54 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v54.<java.io.PrintWriter: void println()>();
goto label04;
label06:
v55 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v56 = virtualinvoke v55.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
v57 = virtualinvoke v56.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("void");
if v57 != 0 goto label11;
v58 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v58.<java.io.PrintWriter: void print(java.lang.String)>("   * @return ");
v59 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.doc.Text getReturnDescription()>();
if v59 == null goto label07;
v60 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isSimple()>();
if v60 == 0 goto label07;
v61 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.doc.Text getReturnDescription()>();
v62 = virtualinvoke v61.<io.vertx.codegen.doc.Text: java.util.List getTokens()>();
v63 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator$renderLinkToHtml__2359: java.util.function.Function bootstrap$()>();
v64 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
staticinvoke <io.vertx.codegen.doc.Token: void toHtml(java.util.List,java.lang.String,java.util.function.Function,java.lang.String,java.io.PrintWriter)>(v62, "", v63, "", v64);
goto label10;
label07:
v65 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isUniMethod()>();
if v65 == 0 goto label08;
v66 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v67 = class "Lio/smallrye/mutiny/Uni;";
v68 = virtualinvoke v67.<java.lang.Class: java.lang.String getName()>();
v69 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v68) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("the {@link \u0001 uni} firing the result of the operation when completed, or a failure if the operation failed.");
virtualinvoke v66.<java.io.PrintWriter: void print(java.lang.String)>(v69);
goto label10;
label08:
v70 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isAwaitMethod()>();
if v70 == 0 goto label09;
v71 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v72 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v73 = virtualinvoke v72.<io.vertx.codegen.type.TypeInfo: java.lang.String getSimpleName()>();
v74 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v73) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("the \u0001 instance produced by the operation.");
virtualinvoke v71.<java.io.PrintWriter: void print(java.lang.String)>(v74);
goto label10;
label09:
v75 = v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean fluent>;
if v75 == 0 goto label10;
v76 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v77 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v78 = virtualinvoke v77.<io.vertx.codegen.type.TypeInfo: java.lang.String getSimpleName()>();
v79 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v78) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("the instance of \u0001 to chain method calls.");
virtualinvoke v76.<java.io.PrintWriter: void print(java.lang.String)>(v79);
label10:
v80 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v80.<java.io.PrintWriter: void println()>();
label11:
if v5 == 0 goto label12;
v81 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v81.<java.io.PrintWriter: void print(java.lang.String)>("   * @deprecated");
v82 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.doc.Text getDeprecatedDesc()>();
if v82 == null goto label12;
v83 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v84 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.doc.Text getDeprecatedDesc()>();
v85 = virtualinvoke v84.<io.vertx.codegen.doc.Text: java.lang.String getValue()>();
v86 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v85) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" \u0001");
virtualinvoke v83.<java.io.PrintWriter: void print(java.lang.String)>(v86);
label12:
v87 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v87.<java.io.PrintWriter: void println(java.lang.String)>("   */");
label13:
return;
}
public static java.lang.String sanitize(java.lang.String)
{
char v8;
int v6, v7;
char[] v5;
java.lang.StringBuilder v3;
java.lang.String v0, v1, v2, v9;
boolean v4;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("AndAwait", "");
v2 = virtualinvoke v1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("AndForget", "");
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = 0;
v5 = virtualinvoke v2.<java.lang.String: char[] toCharArray()>();
v6 = lengthof v5;
v7 = 0;
label1:
if v7 >= v6 goto label5;
v8 = v5[v7];
if v8 != 60 goto label2;
if v4 != 0 goto label2;
v4 = 1;
goto label4;
label2:
if v8 != 62 goto label3;
if v4 == 0 goto label3;
v4 = 0;
goto label4;
label3:
if v4 != 0 goto label4;
if v8 == 62 goto label4;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
label4:
v7 = v7 + 1;
goto label1;
label5:
v9 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v9;
}
public void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.util.stream.Collector v19, v42;
boolean v10, v22, v23, v25, v28, v3, v5, v7;
java.io.PrintWriter v11, v14, v21, v24, v29, v30, v33, v34, v36, v37, v4, v44, v6, v8, v9;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v1;
io.vertx.codegen.type.TypeInfo v27, v31;
java.util.List v12, v15, v38;
java.util.stream.Stream v16, v18, v39, v41;
java.util.function.Function v17, v40;
int v13;
java.lang.String v32, v35;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator v0;
java.lang.Object v20, v43;
io.vertx.codegen.MethodInfo v2, v26;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator;
v1 := @parameter0: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v2 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isDeprecated()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println(java.lang.String)>("  @Deprecated");
label1:
v5 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isFluent()>();
if v5 == 0 goto label2;
v6 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v6.<java.io.PrintWriter: void println(java.lang.String)>("  @Fluent");
label2:
v7 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isPrivate()>();
if v7 == 0 goto label3;
v8 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v8.<java.io.PrintWriter: void print(java.lang.String)>("  private ");
goto label4;
label3:
v9 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v9.<java.io.PrintWriter: void print(java.lang.String)>("  public ");
label4:
v10 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: boolean isStaticMethod()>();
if v10 == 0 goto label5;
v11 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v11.<java.io.PrintWriter: void print(java.lang.String)>("static ");
label5:
v12 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getTypeParams()>();
v13 = interfaceinvoke v12.<java.util.List: int size()>();
if v13 <= 0 goto label6;
v14 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v15 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getTypeParams()>();
v16 = interfaceinvoke v15.<java.util.List: java.util.stream.Stream stream()>();
v17 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator$getName__2363: java.util.function.Function bootstrap$()>();
v18 = interfaceinvoke v16.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v17);
v19 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(", ", "<", ">");
v20 = interfaceinvoke v18.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v19);
virtualinvoke v14.<java.io.PrintWriter: void print(java.lang.String)>(v20);
v21 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v21.<java.io.PrintWriter: void print(java.lang.String)>(" ");
label6:
v22 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isForgetMethod()>();
if v22 == 0 goto label7;
v23 = v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean fluent>;
if v23 != 0 goto label7;
v24 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v24.<java.io.PrintWriter: void print(java.lang.String)>("void");
goto label9;
label7:
v25 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isAwaitMethod()>();
if v25 == 0 goto label8;
v26 = virtualinvoke v1.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getMethod()>();
v27 = virtualinvoke v26.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v28 = virtualinvoke v27.<io.vertx.codegen.type.TypeInfo: boolean isVoid()>();
if v28 == 0 goto label8;
v29 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v29.<java.io.PrintWriter: void print(java.lang.String)>("void");
goto label9;
label8:
v30 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v31 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v32 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genTranslatedTypeName(io.vertx.codegen.type.TypeInfo)>(v31);
virtualinvoke v30.<java.io.PrintWriter: void print(java.lang.String)>(v32);
label9:
v33 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v33.<java.io.PrintWriter: void print(java.lang.String)>(" ");
v34 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v35 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
virtualinvoke v34.<java.io.PrintWriter: void print(java.lang.String)>(v35);
v36 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v36.<java.io.PrintWriter: void print(java.lang.String)>("(");
v37 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
v38 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v39 = interfaceinvoke v38.<java.util.List: java.util.stream.Stream stream()>();
v40 = staticinvoke <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator$lambda_generateMethodDeclaration_0__2362: java.util.function.Function bootstrap$()>();
v41 = interfaceinvoke v39.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v40);
v42 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(", ");
v43 = interfaceinvoke v41.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v42);
virtualinvoke v37.<java.io.PrintWriter: void print(java.lang.String)>(v43);
v44 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v44.<java.io.PrintWriter: void print(java.lang.String)>(")");
return;
}
}