public class io.vertx.codegen.EnumModel extends java.lang.Object implements io.vertx.codegen.Model
{
private final io.vertx.codegen.doc.Doc$Factory docFactory;
protected final javax.lang.model.util.Elements elementUtils;
protected final javax.lang.model.util.Types typeUtils;
protected final javax.lang.model.element.TypeElement modelElt;
protected final io.vertx.codegen.type.TypeMirrorFactory typeMirrorFactory;
protected io.vertx.codegen.type.EnumTypeInfo type;
private final io.vertx.codegen.type.AnnotationValueInfoFactory annotationValueInfoFactory;
private io.vertx.codegen.doc.Doc doc;
private java.util.List values;
private java.util.List annotations;
private boolean processed;
private boolean deprecated;
private io.vertx.codegen.doc.Text deprecatedDesc;
public void <init>(javax.'annotation'.processing.ProcessingEnvironment, javax.lang.model.element.TypeElement)
{
io.vertx.codegen.EnumModel v0;
javax.lang.model.element.TypeElement v2;
javax.lang.model.util.Elements v10, v4, v6;
io.vertx.codegen.type.AnnotationValueInfoFactory v13;
io.vertx.codegen.doc.Doc$Factory v8;
javax.'annotation'.processing.Messager v9;
boolean v16;
io.vertx.codegen.type.TypeMirrorFactory v12, v14, v5;
javax.lang.model.util.Types v11, v3, v7;
java.lang.'annotation'.Annotation v15;
javax.'annotation'.processing.ProcessingEnvironment v1;
v0 := @this: io.vertx.codegen.EnumModel;
v1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;
v2 := @parameter1: javax.lang.model.element.TypeElement;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = interfaceinvoke v1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();
v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Types typeUtils> = v3;
v4 = interfaceinvoke v1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();
v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Elements elementUtils> = v4;
v5 = new io.vertx.codegen.type.TypeMirrorFactory;
v6 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Elements elementUtils>;
v7 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Types typeUtils>;
specialinvoke v5.<io.vertx.codegen.type.TypeMirrorFactory: void <init>(javax.lang.model.util.Elements,javax.lang.model.util.Types)>(v6, v7);
v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.TypeMirrorFactory typeMirrorFactory> = v5;
v8 = new io.vertx.codegen.doc.Doc$Factory;
v9 = interfaceinvoke v1.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();
v10 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Elements elementUtils>;
v11 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Types typeUtils>;
v12 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.TypeMirrorFactory typeMirrorFactory>;
specialinvoke v8.<io.vertx.codegen.doc.Doc$Factory: void <init>(javax.'annotation'.processing.Messager,javax.lang.model.util.Elements,javax.lang.model.util.Types,io.vertx.codegen.type.TypeMirrorFactory,javax.lang.model.element.TypeElement)>(v9, v10, v11, v12, v2);
v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc$Factory docFactory> = v8;
v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt> = v2;
v13 = new io.vertx.codegen.type.AnnotationValueInfoFactory;
v14 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.TypeMirrorFactory typeMirrorFactory>;
specialinvoke v13.<io.vertx.codegen.type.AnnotationValueInfoFactory: void <init>(io.vertx.codegen.type.TypeMirrorFactory)>(v14);
v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.AnnotationValueInfoFactory annotationValueInfoFactory> = v13;
v15 = interfaceinvoke v2.<javax.lang.model.element.TypeElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljava/lang/Deprecated;");
if v15 == null goto label1;
v16 = 1;
goto label2;
label1:
v16 = 0;
label2:
v0.<io.vertx.codegen.EnumModel: boolean deprecated> = v16;
return;
}
public boolean process()
{
javax.lang.model.element.TypeElement v12, v2, v23, v27, v41, v6, v7;
javax.lang.model.util.Elements v26;
java.util.stream.Collector v36;
boolean v1, v39;
io.vertx.codegen.type.TypeMirrorFactory v22;
java.util.function.Predicate v18, v30;
io.vertx.codegen.type.TypeInfo v25;
java.util.List v16, v28, v38;
java.util.stream.Stream v17, v19, v29, v31, v33, v35;
io.vertx.codegen.doc.Doc v13, v14, v15;
java.util.Optional v20;
io.vertx.codegen.EnumModel v0;
java.util.function.Function v32, v34;
io.vertx.codegen.GenException v40, v5;
java.lang.String v10, v9;
io.vertx.codegen.doc.Doc$Factory v11;
javax.lang.model.element.ElementKind v3, v4;
java.util.function.Consumer v21;
javax.lang.model.type.TypeMirror v24, v8;
java.lang.Object v37;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: boolean processed>;
if v1 != 0 goto label4;
v2 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v3 = interfaceinvoke v2.<javax.lang.model.element.TypeElement: javax.lang.model.element.ElementKind getKind()>();
v4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind ENUM>;
if v3 == v4 goto label1;
v5 = new io.vertx.codegen.GenException;
v6 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v7 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v8 = interfaceinvoke v7.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();
v9 = interfaceinvoke v8.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("@VertxGen can only be used with interfaces or enums\u0001");
specialinvoke v5.<io.vertx.codegen.GenException: void <init>(javax.lang.model.element.Element,java.lang.String)>(v6, v10);
throw v5;
label1:
v11 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc$Factory docFactory>;
v12 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v13 = virtualinvoke v11.<io.vertx.codegen.doc.Doc$Factory: io.vertx.codegen.doc.Doc createDoc(javax.lang.model.element.Element)>(v12);
v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc doc> = v13;
v14 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc doc>;
if v14 == null goto label2;
v15 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc doc>;
v16 = virtualinvoke v15.<io.vertx.codegen.doc.Doc: java.util.List getBlockTags()>();
v17 = interfaceinvoke v16.<java.util.List: java.util.stream.Stream stream()>();
v18 = staticinvoke <io.vertx.codegen.EnumModel$lambda_process_0__2432: java.util.function.Predicate bootstrap$()>();
v19 = interfaceinvoke v17.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v18);
v20 = interfaceinvoke v19.<java.util.stream.Stream: java.util.Optional findFirst()>();
v21 = staticinvoke <io.vertx.codegen.EnumModel$lambda_process_1__2433: java.util.function.Consumer bootstrap$(io.vertx.codegen.EnumModel)>(v0);
virtualinvoke v20.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v21);
label2:
v22 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.TypeMirrorFactory typeMirrorFactory>;
v23 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v24 = interfaceinvoke v23.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();
v25 = virtualinvoke v22.<io.vertx.codegen.type.TypeMirrorFactory: io.vertx.codegen.type.TypeInfo create(javax.lang.model.type.TypeMirror)>(v24);
v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.EnumTypeInfo type> = v25;
staticinvoke <io.vertx.codegen.Helper: void checkUnderModule(io.vertx.codegen.Model,java.lang.String)>(v0, "@VertxGen");
v26 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Elements elementUtils>;
v27 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v28 = interfaceinvoke v26.<javax.lang.model.util.Elements: java.util.List getAllMembers(javax.lang.model.element.TypeElement)>(v27);
v29 = interfaceinvoke v28.<java.util.List: java.util.stream.Stream stream()>();
v30 = staticinvoke <io.vertx.codegen.EnumModel$lambda_process_2__2430: java.util.function.Predicate bootstrap$()>();
v31 = interfaceinvoke v29.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v30);
v32 = staticinvoke <io.vertx.codegen.Helper: java.util.function.Function cast(java.lang.Class)>(class "Ljavax/lang/model/element/VariableElement;");
v33 = interfaceinvoke v31.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(v32);
v34 = staticinvoke <io.vertx.codegen.EnumModel$lambda_process_4__2431: java.util.function.Function bootstrap$(io.vertx.codegen.EnumModel)>(v0);
v35 = interfaceinvoke v33.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v34);
v36 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v37 = interfaceinvoke v35.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v36);
v0.<io.vertx.codegen.EnumModel: java.util.List values> = v37;
v38 = v0.<io.vertx.codegen.EnumModel: java.util.List values>;
v39 = interfaceinvoke v38.<java.util.List: boolean isEmpty()>();
if v39 == 0 goto label3;
v40 = new io.vertx.codegen.GenException;
v41 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
specialinvoke v40.<io.vertx.codegen.GenException: void <init>(javax.lang.model.element.Element,java.lang.String)>(v41, "No empty enums");
throw v40;
label3:
v0.<io.vertx.codegen.EnumModel: boolean processed> = 1;
return 1;
label4:
return 0;
}
private void processTypeAnnotations()
{
io.vertx.codegen.EnumModel v0;
javax.lang.model.element.TypeElement v2;
java.util.function.Function v6;
javax.lang.model.util.Elements v1;
java.util.List v3;
java.util.stream.Stream v4, v7;
io.vertx.codegen.type.AnnotationValueInfoFactory v5;
java.lang.Object v9;
java.util.stream.Collector v8;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.util.Elements elementUtils>;
v2 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v3 = interfaceinvoke v1.<javax.lang.model.util.Elements: java.util.List getAllAnnotationMirrors(javax.lang.model.element.Element)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.stream.Stream stream()>();
v5 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.AnnotationValueInfoFactory annotationValueInfoFactory>;
virtualinvoke v5.<java.lang.Object: java.lang.Class getClass()>();
v6 = staticinvoke <io.vertx.codegen.EnumModel$processAnnotation__2434: java.util.function.Function bootstrap$(io.vertx.codegen.type.AnnotationValueInfoFactory)>(v5);
v7 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v6);
v8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v8);
v0.<io.vertx.codegen.EnumModel: java.util.List annotations> = v9;
return;
}
public io.vertx.codegen.type.EnumTypeInfo getType()
{
io.vertx.codegen.EnumModel v0;
io.vertx.codegen.type.EnumTypeInfo v1;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.EnumTypeInfo type>;
return v1;
}
public java.util.List getValues()
{
java.util.List v1;
io.vertx.codegen.EnumModel v0;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: java.util.List values>;
return v1;
}
public io.vertx.codegen.doc.Doc getDoc()
{
io.vertx.codegen.EnumModel v0;
io.vertx.codegen.doc.Doc v1;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc doc>;
return v1;
}
public java.lang.String getKind()
{
io.vertx.codegen.EnumModel v0;
v0 := @this: io.vertx.codegen.EnumModel;
return "enum";
}
public javax.lang.model.element.Element getElement()
{
javax.lang.model.element.TypeElement v1;
io.vertx.codegen.EnumModel v0;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
return v1;
}
public java.lang.String getFqn()
{
io.vertx.codegen.EnumModel v0;
javax.lang.model.element.TypeElement v1;
java.lang.String v3;
javax.lang.model.element.Name v2;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: javax.lang.model.element.TypeElement modelElt>;
v2 = interfaceinvoke v1.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
return v3;
}
public boolean isDeprecated()
{
io.vertx.codegen.EnumModel v0;
boolean v1;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: boolean deprecated>;
return v1;
}
public io.vertx.codegen.doc.Text getDeprecatedDesc()
{
io.vertx.codegen.EnumModel v0;
io.vertx.codegen.doc.Text v1;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Text deprecatedDesc>;
return v1;
}
public java.util.Map getVars()
{
io.vertx.codegen.EnumModel v0;
io.vertx.codegen.type.EnumTypeInfo v2;
java.util.List v4;
io.vertx.codegen.doc.Doc v3;
io.vertx.codegen.doc.Text v7;
java.util.Map v1;
java.lang.Boolean v6;
boolean v5;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = specialinvoke v0.<io.vertx.codegen.Model: java.util.Map getVars()>();
v2 = virtualinvoke v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.EnumTypeInfo getType()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", v2);
v3 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Doc doc>;
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("doc", v3);
v4 = v0.<io.vertx.codegen.EnumModel: java.util.List values>;
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("values", v4);
v5 = v0.<io.vertx.codegen.EnumModel: boolean deprecated>;
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deprecated", v6);
v7 = virtualinvoke v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.doc.Text getDeprecatedDesc()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deprecatedDesc", v7);
return v1;
}
public io.vertx.codegen.ModuleInfo getModule()
{
io.vertx.codegen.ModuleInfo v2;
io.vertx.codegen.EnumModel v0;
io.vertx.codegen.type.EnumTypeInfo v1;
v0 := @this: io.vertx.codegen.EnumModel;
v1 = v0.<io.vertx.codegen.EnumModel: io.vertx.codegen.type.EnumTypeInfo type>;
v2 = virtualinvoke v1.<io.vertx.codegen.type.EnumTypeInfo: io.vertx.codegen.ModuleInfo getModule()>();
return v2;
}
}