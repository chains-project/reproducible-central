public class io.vertx.codegen.ModuleInfo extends java.lang.Object
{
private final java.lang.String packageName;
private final java.lang.String name;
private final java.lang.String groupPackage;
final boolean useFutures;
private static final java.util.function.BiFunction getPackageElementJava8;
private static final java.util.function.BiFunction getPackageElement;
public void <init>(java.lang.String, java.lang.String, java.lang.String, boolean)
{
io.vertx.codegen.ModuleInfo v0;
java.lang.String v1, v2, v3;
boolean v4;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.ModuleInfo: java.lang.String packageName> = v1;
v0.<io.vertx.codegen.ModuleInfo: java.lang.String name> = v2;
v0.<io.vertx.codegen.ModuleInfo: java.lang.String groupPackage> = v3;
v0.<io.vertx.codegen.ModuleInfo: boolean useFutures> = v4;
return;
}
public static io.vertx.codegen.ModuleInfo resolve(javax.lang.model.util.Elements, javax.lang.model.element.PackageElement)
{
javax.lang.model.element.PackageElement v1, v2;
javax.lang.model.util.Elements v0;
java.lang.'annotation'.Annotation v3;
io.vertx.codegen.ModuleInfo v4;
java.lang.String v6, v7, v8;
boolean v9;
javax.lang.model.element.Name v5;
v0 := @parameter0: javax.lang.model.util.Elements;
v1 := @parameter1: javax.lang.model.element.PackageElement;
v2 = staticinvoke <io.vertx.codegen.ModuleInfo: javax.lang.model.element.PackageElement resolveFirstModuleGenAnnotatedPackageElement(javax.lang.model.util.Elements,javax.lang.model.element.PackageElement)>(v0, v1);
if v2 == null goto label1;
v3 = interfaceinvoke v2.<javax.lang.model.element.PackageElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/vertx/codegen/annotations/ModuleGen;");
v4 = new io.vertx.codegen.ModuleInfo;
v5 = interfaceinvoke v2.<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>();
v6 = virtualinvoke v5.<java.lang.Object: java.lang.String toString()>();
v7 = interfaceinvoke v3.<io.vertx.codegen.annotations.ModuleGen: java.lang.String name()>();
v8 = interfaceinvoke v3.<io.vertx.codegen.annotations.ModuleGen: java.lang.String groupPackage()>();
v9 = interfaceinvoke v3.<io.vertx.codegen.annotations.ModuleGen: boolean useFutures()>();
specialinvoke v4.<io.vertx.codegen.ModuleInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>(v6, v7, v8, v9);
return v4;
label1:
return null;
}
public static javax.lang.model.type.DeclaredType resolveJsonMapper(javax.lang.model.util.Elements, javax.lang.model.util.Types, javax.lang.model.element.PackageElement, javax.lang.model.type.DeclaredType)
{
javax.lang.model.element.PackageElement v2, v4;
javax.lang.model.element.TypeElement v5;
java.util.function.Function v12, v16, v18;
javax.lang.model.util.Elements v0;
javax.lang.model.type.DeclaredType v3;
java.util.function.Predicate v10, v14, v20;
javax.lang.model.util.Types v1;
java.util.List v6, v8;
java.util.stream.Stream v11, v13, v15, v17, v19, v21, v9;
java.util.Optional v22;
java.lang.Object v23, v7;
v0 := @parameter0: javax.lang.model.util.Elements;
v1 := @parameter1: javax.lang.model.util.Types;
v2 := @parameter2: javax.lang.model.element.PackageElement;
v3 := @parameter3: javax.lang.model.type.DeclaredType;
v4 = staticinvoke <io.vertx.codegen.ModuleInfo: javax.lang.model.element.PackageElement resolveFirstModuleGenAnnotatedPackageElement(javax.lang.model.util.Elements,javax.lang.model.element.PackageElement)>(v0, v2);
if v4 == null goto label1;
v5 = interfaceinvoke v0.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>("io.vertx.core.spi.json.JsonMapper");
v6 = interfaceinvoke v5.<javax.lang.model.element.TypeElement: java.util.List getTypeParameters()>();
v7 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<javax.lang.model.util.Elements: java.util.List getAllAnnotationMirrors(javax.lang.model.element.Element)>(v2);
v9 = interfaceinvoke v8.<java.util.List: java.util.stream.Stream stream()>();
v10 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_resolveJsonMapper_2__2400: java.util.function.Predicate bootstrap$()>();
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v10);
v12 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_resolveJsonMapper_3__2401: java.util.function.Function bootstrap$()>();
v13 = interfaceinvoke v11.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(v12);
v14 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_resolveJsonMapper_4__2402: java.util.function.Predicate bootstrap$()>();
v15 = interfaceinvoke v13.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v14);
v16 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_resolveJsonMapper_5__2403: java.util.function.Function bootstrap$()>();
v17 = interfaceinvoke v15.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(v16);
v18 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_resolveJsonMapper_6__2404: java.util.function.Function bootstrap$()>();
v19 = interfaceinvoke v17.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v18);
v20 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_resolveJsonMapper_7__2405: java.util.function.Predicate bootstrap$(javax.lang.model.util.Types,javax.lang.model.element.TypeParameterElement,javax.lang.model.type.DeclaredType)>(v1, v7, v3);
v21 = interfaceinvoke v19.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v20);
v22 = interfaceinvoke v21.<java.util.stream.Stream: java.util.Optional findFirst()>();
v23 = virtualinvoke v22.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
return v23;
label1:
return null;
}
public static javax.lang.model.element.PackageElement resolveFirstModuleGenAnnotatedPackageElement(javax.lang.model.util.Elements, javax.lang.model.element.PackageElement)
{
java.util.Iterator v10;
javax.lang.model.element.PackageElement v1;
java.util.function.BiFunction v7;
javax.lang.model.util.Elements v0;
int v5, v6;
java.lang.'annotation'.Annotation v4;
java.lang.Object v11, v8;
java.lang.String v3;
boolean v9;
javax.lang.model.element.Name v2;
v0 := @parameter0: javax.lang.model.util.Elements;
v1 := @parameter1: javax.lang.model.element.PackageElement;
if v1 != null goto label1;
return null;
label1:
v2 = interfaceinvoke v1.<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
label2:
if v1 == null goto label3;
v4 = interfaceinvoke v1.<javax.lang.model.element.PackageElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/vertx/codegen/annotations/ModuleGen;");
if v4 == null goto label3;
return v1;
label3:
v5 = virtualinvoke v3.<java.lang.String: int lastIndexOf(int)>(46);
v6 = (int) -1;
if v5 == v6 goto label5;
v3 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
v7 = <io.vertx.codegen.ModuleInfo: java.util.function.BiFunction getPackageElement>;
v8 = interfaceinvoke v7.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v0, v3);
v9 = interfaceinvoke v8.<java.util.Set: boolean isEmpty()>();
if v9 != 0 goto label4;
v10 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
v11 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
label4:
v1 = v11;
goto label2;
label5:
return null;
}
public java.lang.String getGroupPackage()
{
io.vertx.codegen.ModuleInfo v0;
java.lang.String v1;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 = v0.<io.vertx.codegen.ModuleInfo: java.lang.String groupPackage>;
return v1;
}
public java.lang.String getPackageName()
{
io.vertx.codegen.ModuleInfo v0;
java.lang.String v1;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 = v0.<io.vertx.codegen.ModuleInfo: java.lang.String packageName>;
return v1;
}
public java.lang.String translatePackageName(java.lang.String)
{
io.vertx.codegen.ModuleInfo v0;
java.lang.String v1, v2, v3;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.codegen.ModuleInfo: java.lang.String packageName>;
v3 = virtualinvoke v0.<io.vertx.codegen.ModuleInfo: java.lang.String translateQualifiedName(java.lang.String,java.lang.String)>(v2, v1);
return v3;
}
public java.lang.String translateQualifiedName(java.lang.String, java.lang.String)
{
io.vertx.codegen.ModuleInfo v0;
java.lang.String v1, v2, v4;
io.vertx.codegen.type.TypeNameTranslator v3;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = staticinvoke <io.vertx.codegen.type.TypeNameTranslator: io.vertx.codegen.type.TypeNameTranslator hierarchical(java.lang.String)>(v2);
v4 = interfaceinvoke v3.<io.vertx.codegen.type.TypeNameTranslator: java.lang.String translate(io.vertx.codegen.ModuleInfo,java.lang.String)>(v0, v1);
return v4;
}
public java.lang.String getName()
{
io.vertx.codegen.ModuleInfo v0;
java.lang.String v1;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 = v0.<io.vertx.codegen.ModuleInfo: java.lang.String name>;
return v1;
}
public java.lang.String getName(io.vertx.codegen.format.Case)
{
java.util.List v4;
io.vertx.codegen.format.Case v1, v2;
io.vertx.codegen.ModuleInfo v0;
java.lang.String v3, v5;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 := @parameter0: io.vertx.codegen.format.Case;
v2 = <io.vertx.codegen.format.KebabCase: io.vertx.codegen.format.Case INSTANCE>;
v3 = v0.<io.vertx.codegen.ModuleInfo: java.lang.String name>;
v4 = virtualinvoke v2.<io.vertx.codegen.format.Case: java.util.List parse(java.lang.String)>(v3);
v5 = virtualinvoke v1.<io.vertx.codegen.format.Case: java.lang.String format(java.lang.Iterable)>(v4);
return v5;
}
public boolean getUseFutures()
{
io.vertx.codegen.ModuleInfo v0;
boolean v1;
v0 := @this: io.vertx.codegen.ModuleInfo;
v1 = v0.<io.vertx.codegen.ModuleInfo: boolean useFutures>;
return v1;
}
static void <clinit>()
{
java.lang.NoSuchMethodException v5;
java.util.function.BiFunction v0, v1;
java.lang.Class[] v3;
java.lang.Class v2;
java.lang.reflect.Method v4;
v0 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_static_0__2406: java.util.function.BiFunction bootstrap$()>();
<io.vertx.codegen.ModuleInfo: java.util.function.BiFunction getPackageElementJava8> = v0;
v1 = <io.vertx.codegen.ModuleInfo: java.util.function.BiFunction getPackageElementJava8>;
label1:
v2 = class "Ljavax/lang/model/util/Elements;";
v3 = newarray (java.lang.Class)[1];
v3[0] = class "Ljava/lang/CharSequence;";
v4 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getAllPackageElements", v3);
v1 = staticinvoke <io.vertx.codegen.ModuleInfo$lambda_static_1__2407: java.util.function.BiFunction bootstrap$(java.lang.reflect.Method)>(v4);
label2:
goto label4;
label3:
v5 := @caughtexception;
label4:
<io.vertx.codegen.ModuleInfo: java.util.function.BiFunction getPackageElement> = v1;
return;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
}
}