public final class io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440 extends java.lang.Object implements java.util.function.Predicate
{
javax.lang.model.util.Types cap0;
javax.lang.model.type.DeclaredType cap1;
public static java.util.function.Predicate bootstrap$(javax.lang.model.util.Types, javax.lang.model.type.DeclaredType)
{
io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440 v2;
javax.lang.model.util.Types v0;
javax.lang.model.type.DeclaredType v1;
v0 := @parameter0: javax.lang.model.util.Types;
v1 := @parameter1: javax.lang.model.type.DeclaredType;
v2 = new io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440;
specialinvoke v2.<io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440: void <init>(javax.lang.model.util.Types,javax.lang.model.type.DeclaredType)>(v0, v1);
return v2;
}
public void <init>(javax.lang.model.util.Types, javax.lang.model.type.DeclaredType)
{
io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440 v0;
javax.lang.model.util.Types v1;
javax.lang.model.type.DeclaredType v2;
v0 := @this: io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440;
v1 := @parameter0: javax.lang.model.util.Types;
v2 := @parameter1: javax.lang.model.type.DeclaredType;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440: javax.lang.model.util.Types cap0> = v1;
v0.<io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440: javax.lang.model.type.DeclaredType cap1> = v2;
return;
}
public boolean test(java.lang.Object)
{
javax.lang.model.type.DeclaredType v3;
io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440 v0;
java.lang.Object v1;
javax.lang.model.util.Types v2;
boolean v4;
v0 := @this: io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440: javax.lang.model.util.Types cap0>;
v3 = v0.<io.vertx.codegen.ModuleModel$lambda_isLegalJsonMapper_6__2440: javax.lang.model.type.DeclaredType cap1>;
v4 = staticinvoke <io.vertx.codegen.ModuleModel: boolean lambda$isLegalJsonMapper$6(javax.lang.model.util.Types,javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>(v2, v3, v1);
return v4;
}
}