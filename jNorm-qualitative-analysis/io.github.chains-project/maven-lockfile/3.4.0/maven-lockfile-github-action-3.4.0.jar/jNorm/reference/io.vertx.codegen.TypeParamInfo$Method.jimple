public class io.vertx.codegen.TypeParamInfo$Method extends io.vertx.codegen.TypeParamInfo
{
private final java.lang.String typeName;
private final java.lang.String methodName;
public void <init>(java.lang.String, java.lang.String, int, java.lang.String)
{
io.vertx.codegen.TypeParamInfo$Method v0;
int v3;
java.lang.String v1, v2, v4;
v0 := @this: io.vertx.codegen.TypeParamInfo$Method;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: int;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<io.vertx.codegen.TypeParamInfo: void <init>(int,java.lang.String)>(v3, v4);
v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String typeName> = v1;
v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String methodName> = v2;
return;
}
public boolean isMethod()
{
io.vertx.codegen.TypeParamInfo$Method v0;
v0 := @this: io.vertx.codegen.TypeParamInfo$Method;
return 1;
}
public boolean equals(java.lang.Object)
{
io.vertx.codegen.TypeParamInfo$Method v0;
int v10, v9;
java.lang.Object v1;
java.lang.String v3, v4, v6, v7;
boolean v11, v2, v5, v8;
v0 := @this: io.vertx.codegen.TypeParamInfo$Method;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.vertx.codegen.TypeParamInfo$Method;
if v2 == 0 goto label3;
v3 = v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String typeName>;
v4 = v1.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String typeName>;
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String methodName>;
v7 = v1.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String methodName>;
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label1;
v9 = v0.<io.vertx.codegen.TypeParamInfo$Method: int index>;
v10 = virtualinvoke v1.<io.vertx.codegen.TypeParamInfo$Method: int getIndex()>();
if v9 != v10 goto label1;
v11 = 1;
goto label2;
label1:
v11 = 0;
label2:
return v11;
label3:
return 0;
}
public java.lang.String toString()
{
io.vertx.codegen.TypeParamInfo$Method v0;
java.lang.String v1, v2, v3, v4;
v0 := @this: io.vertx.codegen.TypeParamInfo$Method;
v1 = v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String name>;
v2 = v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String typeName>;
v3 = v0.<io.vertx.codegen.TypeParamInfo$Method: java.lang.String methodName>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("TypeParamInfo.Method[name=\u0001,typeName=\u0001,methodName\u0001]");
return v4;
}
}