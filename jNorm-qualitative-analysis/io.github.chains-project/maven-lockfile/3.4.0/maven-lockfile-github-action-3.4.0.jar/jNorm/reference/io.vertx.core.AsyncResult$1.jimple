class io.vertx.core.AsyncResult$1 extends java.lang.Object implements io.vertx.core.AsyncResult
{
final java.util.function.Function val$mapper;
final io.vertx.core.AsyncResult this$0;
void <init>(io.vertx.core.AsyncResult, java.util.function.Function)
{
io.vertx.core.AsyncResult v1;
java.util.function.Function v2;
io.vertx.core.AsyncResult$1 v0;
v0 := @this: io.vertx.core.AsyncResult$1;
v1 := @parameter0: io.vertx.core.AsyncResult;
v2 := @parameter1: java.util.function.Function;
v0.<io.vertx.core.AsyncResult$1: io.vertx.core.AsyncResult this$0> = v1;
v0.<io.vertx.core.AsyncResult$1: java.util.function.Function val$mapper> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object result()
{
io.vertx.core.AsyncResult$1 v0;
java.lang.Object v4, v5;
io.vertx.core.AsyncResult v3;
java.util.function.Function v2;
boolean v1;
v0 := @this: io.vertx.core.AsyncResult$1;
v1 = virtualinvoke v0.<io.vertx.core.AsyncResult$1: boolean succeeded()>();
if v1 == 0 goto label1;
v2 = v0.<io.vertx.core.AsyncResult$1: java.util.function.Function val$mapper>;
v3 = v0.<io.vertx.core.AsyncResult$1: io.vertx.core.AsyncResult this$0>;
v4 = interfaceinvoke v3.<io.vertx.core.AsyncResult: java.lang.Object result()>();
v5 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v4);
return v5;
label1:
return null;
}
public java.lang.Throwable cause()
{
java.lang.Throwable v2;
io.vertx.core.AsyncResult v1;
io.vertx.core.AsyncResult$1 v0;
v0 := @this: io.vertx.core.AsyncResult$1;
v1 = v0.<io.vertx.core.AsyncResult$1: io.vertx.core.AsyncResult this$0>;
v2 = interfaceinvoke v1.<io.vertx.core.AsyncResult: java.lang.Throwable cause()>();
return v2;
}
public boolean succeeded()
{
io.vertx.core.AsyncResult v1;
io.vertx.core.AsyncResult$1 v0;
boolean v2;
v0 := @this: io.vertx.core.AsyncResult$1;
v1 = v0.<io.vertx.core.AsyncResult$1: io.vertx.core.AsyncResult this$0>;
v2 = interfaceinvoke v1.<io.vertx.core.AsyncResult: boolean succeeded()>();
return v2;
}
public boolean failed()
{
io.vertx.core.AsyncResult v1;
io.vertx.core.AsyncResult$1 v0;
boolean v2;
v0 := @this: io.vertx.core.AsyncResult$1;
v1 = v0.<io.vertx.core.AsyncResult$1: io.vertx.core.AsyncResult this$0>;
v2 = interfaceinvoke v1.<io.vertx.core.AsyncResult: boolean failed()>();
return v2;
}
}