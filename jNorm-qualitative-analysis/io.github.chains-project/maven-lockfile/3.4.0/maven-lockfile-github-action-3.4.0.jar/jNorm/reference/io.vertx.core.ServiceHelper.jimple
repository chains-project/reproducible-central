public class io.vertx.core.ServiceHelper extends java.lang.Object
{
public void <init>()
{
io.vertx.core.ServiceHelper v0;
v0 := @this: io.vertx.core.ServiceHelper;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Object loadFactory(java.lang.Class)
{
java.lang.IllegalStateException v2;
java.lang.Class v0;
java.lang.Object v1;
java.lang.String v3, v4;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <io.vertx.core.ServiceHelper: java.lang.Object loadFactoryOrNull(java.lang.Class)>(v0);
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot find META-INF/services/\u0001 on classpath");
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
return v1;
}
public static java.lang.Object loadFactoryOrNull(java.lang.Class)
{
java.util.Iterator v3;
java.util.Collection v1;
java.lang.Class v0;
java.lang.Object v4;
boolean v2;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <io.vertx.core.ServiceHelper: java.util.Collection loadFactories(java.lang.Class)>(v0);
v2 = interfaceinvoke v1.<java.util.Collection: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
v4 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
return v4;
label1:
return null;
}
public static java.util.Collection loadFactories(java.lang.Class)
{
java.lang.Class v0;
java.util.Collection v1;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <io.vertx.core.ServiceHelper: java.util.Collection loadFactories(java.lang.Class,java.lang.ClassLoader)>(v0, null);
return v1;
}
public static java.util.Collection loadFactories(java.lang.Class, java.lang.ClassLoader)
{
java.util.ArrayList v2;
boolean v12, v5;
java.util.Iterator v11, v13, v4, v6;
java.util.ServiceLoader v10, v3;
java.util.function.Consumer v14, v7;
java.util.List v15;
java.lang.Class v0, v8;
java.lang.ClassLoader v1, v9;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.ClassLoader;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
if v1 == null goto label1;
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(v0, v1);
goto label2;
label1:
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(v0);
label2:
v4 = virtualinvoke v3.<java.util.ServiceLoader: java.util.Iterator iterator()>();
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = virtualinvoke v3.<java.util.ServiceLoader: java.util.Iterator iterator()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v7 = staticinvoke <io.vertx.core.ServiceHelper$add__908: java.util.function.Consumer bootstrap$(java.util.List)>(v2);
interfaceinvoke v6.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>(v7);
return v2;
label3:
v8 = class "Lio/vertx/core/ServiceHelper;";
v9 = virtualinvoke v8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v10 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(v0, v9);
v11 = virtualinvoke v10.<java.util.ServiceLoader: java.util.Iterator iterator()>();
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label4;
v13 = virtualinvoke v10.<java.util.ServiceLoader: java.util.Iterator iterator()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v14 = staticinvoke <io.vertx.core.ServiceHelper$add__907: java.util.function.Consumer bootstrap$(java.util.List)>(v2);
interfaceinvoke v13.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>(v14);
return v2;
label4:
v15 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v15;
}
}