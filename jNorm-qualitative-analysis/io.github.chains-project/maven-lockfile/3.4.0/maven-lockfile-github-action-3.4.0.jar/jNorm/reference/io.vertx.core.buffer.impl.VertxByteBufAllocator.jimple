public abstract class io.vertx.core.buffer.impl.VertxByteBufAllocator extends io.netty.buffer.AbstractByteBufAllocator
{
public static final io.netty.buffer.ByteBufAllocator POOLED_ALLOCATOR;
public static final io.netty.buffer.ByteBufAllocator UNPOOLED_ALLOCATOR;
private static final io.vertx.core.buffer.impl.VertxByteBufAllocator UNSAFE_IMPL;
private static final io.vertx.core.buffer.impl.VertxByteBufAllocator IMPL;
public static final io.vertx.core.buffer.impl.VertxByteBufAllocator DEFAULT;
public void <init>()
{
io.vertx.core.buffer.impl.VertxByteBufAllocator v0;
v0 := @this: io.vertx.core.buffer.impl.VertxByteBufAllocator;
specialinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: void <init>()>();
return;
}
protected io.netty.buffer.ByteBuf newDirectBuffer(int, int)
{
io.vertx.core.buffer.impl.VertxByteBufAllocator v0;
io.netty.buffer.ByteBuf v4;
io.netty.buffer.ByteBufAllocator v3;
int v1, v2;
v0 := @this: io.vertx.core.buffer.impl.VertxByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = <io.vertx.core.buffer.impl.VertxByteBufAllocator: io.netty.buffer.ByteBufAllocator UNPOOLED_ALLOCATOR>;
v4 = interfaceinvoke v3.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int,int)>(v1, v2);
return v4;
}
public boolean isDirectBufferPooled()
{
io.vertx.core.buffer.impl.VertxByteBufAllocator v0;
v0 := @this: io.vertx.core.buffer.impl.VertxByteBufAllocator;
return 0;
}
static void <clinit>()
{
io.netty.buffer.UnpooledByteBufAllocator v1;
io.vertx.core.buffer.impl.VertxByteBufAllocator v5;
io.vertx.core.buffer.impl.VertxByteBufAllocator$1 v2;
io.vertx.core.buffer.impl.VertxByteBufAllocator$2 v3;
io.netty.buffer.PooledByteBufAllocator v0;
boolean v4;
v0 = new io.netty.buffer.PooledByteBufAllocator;
specialinvoke v0.<io.netty.buffer.PooledByteBufAllocator: void <init>(boolean)>(1);
<io.vertx.core.buffer.impl.VertxByteBufAllocator: io.netty.buffer.ByteBufAllocator POOLED_ALLOCATOR> = v0;
v1 = new io.netty.buffer.UnpooledByteBufAllocator;
specialinvoke v1.<io.netty.buffer.UnpooledByteBufAllocator: void <init>(boolean)>(0);
<io.vertx.core.buffer.impl.VertxByteBufAllocator: io.netty.buffer.ByteBufAllocator UNPOOLED_ALLOCATOR> = v1;
v2 = new io.vertx.core.buffer.impl.VertxByteBufAllocator$1;
specialinvoke v2.<io.vertx.core.buffer.impl.VertxByteBufAllocator$1: void <init>()>();
<io.vertx.core.buffer.impl.VertxByteBufAllocator: io.vertx.core.buffer.impl.VertxByteBufAllocator UNSAFE_IMPL> = v2;
v3 = new io.vertx.core.buffer.impl.VertxByteBufAllocator$2;
specialinvoke v3.<io.vertx.core.buffer.impl.VertxByteBufAllocator$2: void <init>()>();
<io.vertx.core.buffer.impl.VertxByteBufAllocator: io.vertx.core.buffer.impl.VertxByteBufAllocator IMPL> = v3;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v4 == 0 goto label1;
v5 = <io.vertx.core.buffer.impl.VertxByteBufAllocator: io.vertx.core.buffer.impl.VertxByteBufAllocator UNSAFE_IMPL>;
goto label2;
label1:
v5 = <io.vertx.core.buffer.impl.VertxByteBufAllocator: io.vertx.core.buffer.impl.VertxByteBufAllocator IMPL>;
label2:
<io.vertx.core.buffer.impl.VertxByteBufAllocator: io.vertx.core.buffer.impl.VertxByteBufAllocator DEFAULT> = v5;
return;
}
}