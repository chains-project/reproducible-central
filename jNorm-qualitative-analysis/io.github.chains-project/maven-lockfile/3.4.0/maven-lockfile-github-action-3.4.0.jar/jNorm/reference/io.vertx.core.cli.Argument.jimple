public class io.vertx.core.cli.Argument extends java.lang.Object
{
public static final java.lang.String DEFAULT_ARG_NAME;
protected int index;
protected java.lang.String argName;
protected java.lang.String description;
protected boolean hidden;
protected boolean required;
protected java.lang.String defaultValue;
protected boolean multiValued;
public void <init>()
{
int v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = (int) -1;
v0.<io.vertx.core.cli.Argument: int index> = v1;
v0.<io.vertx.core.cli.Argument: java.lang.String argName> = "value";
v0.<io.vertx.core.cli.Argument: boolean required> = 1;
v0.<io.vertx.core.cli.Argument: boolean multiValued> = 0;
return;
}
public void <init>(io.vertx.core.cli.Argument)
{
io.vertx.core.cli.Argument v0, v1;
int v2;
java.lang.String v3, v4, v7;
boolean v5, v6, v8;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: io.vertx.core.cli.Argument;
specialinvoke v0.<io.vertx.core.cli.Argument: void <init>()>();
v2 = v1.<io.vertx.core.cli.Argument: int index>;
v0.<io.vertx.core.cli.Argument: int index> = v2;
v3 = v1.<io.vertx.core.cli.Argument: java.lang.String argName>;
v0.<io.vertx.core.cli.Argument: java.lang.String argName> = v3;
v4 = v1.<io.vertx.core.cli.Argument: java.lang.String description>;
v0.<io.vertx.core.cli.Argument: java.lang.String description> = v4;
v5 = v1.<io.vertx.core.cli.Argument: boolean hidden>;
v0.<io.vertx.core.cli.Argument: boolean hidden> = v5;
v6 = v1.<io.vertx.core.cli.Argument: boolean required>;
v0.<io.vertx.core.cli.Argument: boolean required> = v6;
v7 = v1.<io.vertx.core.cli.Argument: java.lang.String defaultValue>;
v0.<io.vertx.core.cli.Argument: java.lang.String defaultValue> = v7;
v8 = v1.<io.vertx.core.cli.Argument: boolean multiValued>;
v0.<io.vertx.core.cli.Argument: boolean multiValued> = v8;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<io.vertx.core.cli.Argument: void <init>()>();
staticinvoke <io.vertx.core.cli.ArgumentConverter: void fromJson(java.lang.Iterable,io.vertx.core.cli.Argument)>(v1, v0);
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.core.cli.ArgumentConverter: void toJson(io.vertx.core.cli.Argument,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
public java.lang.String getArgName()
{
java.lang.String v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: java.lang.String argName>;
return v1;
}
public io.vertx.core.cli.Argument setArgName(java.lang.String)
{
java.lang.String v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<io.vertx.core.cli.Argument: java.lang.String argName> = v1;
return v0;
}
public java.lang.String getDescription()
{
java.lang.String v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: java.lang.String description>;
return v1;
}
public io.vertx.core.cli.Argument setDescription(java.lang.String)
{
java.lang.String v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<io.vertx.core.cli.Argument: java.lang.String description> = v1;
return v0;
}
public boolean isHidden()
{
io.vertx.core.cli.Argument v0;
boolean v1;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: boolean hidden>;
return v1;
}
public io.vertx.core.cli.Argument setHidden(boolean)
{
io.vertx.core.cli.Argument v0;
boolean v1;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: boolean;
v0.<io.vertx.core.cli.Argument: boolean hidden> = v1;
return v0;
}
public int getIndex()
{
int v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: int index>;
return v1;
}
public io.vertx.core.cli.Argument setIndex(int)
{
int v1;
java.lang.IllegalArgumentException v2;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: int;
if v1 >= 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument index cannot be negative");
throw v2;
label1:
v0.<io.vertx.core.cli.Argument: int index> = v1;
return v0;
}
public boolean isRequired()
{
io.vertx.core.cli.Argument v0;
boolean v1;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: boolean required>;
return v1;
}
public io.vertx.core.cli.Argument setRequired(boolean)
{
io.vertx.core.cli.Argument v0;
boolean v1;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: boolean;
v0.<io.vertx.core.cli.Argument: boolean required> = v1;
return v0;
}
public java.lang.String getDefaultValue()
{
java.lang.String v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: java.lang.String defaultValue>;
return v1;
}
public io.vertx.core.cli.Argument setDefaultValue(java.lang.String)
{
java.lang.String v1;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.cli.Argument: java.lang.String defaultValue> = v1;
return v0;
}
public boolean isMultiValued()
{
io.vertx.core.cli.Argument v0;
boolean v1;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: boolean multiValued>;
return v1;
}
public io.vertx.core.cli.Argument setMultiValued(boolean)
{
io.vertx.core.cli.Argument v0;
boolean v1;
v0 := @this: io.vertx.core.cli.Argument;
v1 := @parameter0: boolean;
v0.<io.vertx.core.cli.Argument: boolean multiValued> = v1;
return v0;
}
public void ensureValidity()
{
int v1;
java.lang.IllegalArgumentException v2;
io.vertx.core.cli.Argument v0;
v0 := @this: io.vertx.core.cli.Argument;
v1 = v0.<io.vertx.core.cli.Argument: int index>;
if v1 >= 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The index cannot be negative");
throw v2;
label1:
return;
}
}