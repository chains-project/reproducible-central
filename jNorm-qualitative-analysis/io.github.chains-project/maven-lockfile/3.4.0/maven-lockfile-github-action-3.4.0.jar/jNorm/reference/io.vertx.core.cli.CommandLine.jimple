public interface  io.vertx.core.cli.CommandLine extends java.lang.Object
{
public static io.vertx.core.cli.CommandLine create(io.vertx.core.cli.CLI)
{
io.vertx.core.cli.CLI v0;
io.vertx.core.cli.impl.DefaultCommandLine v1;
v0 := @parameter0: io.vertx.core.cli.CLI;
v1 = new io.vertx.core.cli.impl.DefaultCommandLine;
specialinvoke v1.<io.vertx.core.cli.impl.DefaultCommandLine: void <init>(io.vertx.core.cli.CLI)>(v0);
return v1;
}
public abstract io.vertx.core.cli.CLI cli();
public abstract java.util.List allArguments();
public abstract java.lang.Object getOptionValue(java.lang.String);
public abstract java.lang.Object getArgumentValue(java.lang.String);
public abstract java.lang.Object getArgumentValue(int);
public abstract java.util.List getOptionValues(java.lang.String);
public abstract java.util.List getArgumentValues(int);
public abstract boolean isFlagEnabled(java.lang.String);
public abstract boolean isOptionAssigned(io.vertx.core.cli.Option);
public java.util.List getRawValues(io.vertx.core.cli.Option)
{
io.vertx.core.cli.Option v1;
java.util.List v2;
io.vertx.core.cli.CommandLine v0;
v0 := @this: io.vertx.core.cli.CommandLine;
v1 := @parameter0: io.vertx.core.cli.Option;
v2 = interfaceinvoke v0.<io.vertx.core.cli.CommandLine: java.util.List getRawValuesForOption(io.vertx.core.cli.Option)>(v1);
return v2;
}
public abstract java.util.List getRawValuesForOption(io.vertx.core.cli.Option);
public abstract java.util.List getRawValuesForArgument(io.vertx.core.cli.Argument);
public abstract java.lang.String getRawValueForOption(io.vertx.core.cli.Option);
public abstract boolean acceptMoreValues(io.vertx.core.cli.Option);
public abstract java.lang.String getRawValueForArgument(io.vertx.core.cli.Argument);
public abstract boolean isArgumentAssigned(io.vertx.core.cli.Argument);
public abstract boolean isSeenInCommandLine(io.vertx.core.cli.Option);
public abstract boolean isValid();
public abstract boolean isAskingForHelp();
}