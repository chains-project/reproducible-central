public interface  io.vertx.core.eventbus.Message extends java.lang.Object
{
public abstract java.lang.String address();
public abstract io.vertx.core.MultiMap headers();
public abstract java.lang.Object body();
public abstract java.lang.String replyAddress();
public abstract boolean isSend();
public void reply(java.lang.Object)
{
io.vertx.core.eventbus.Message v0;
io.vertx.core.eventbus.DeliveryOptions v2;
java.lang.Object v1;
v0 := @this: io.vertx.core.eventbus.Message;
v1 := @parameter0: java.lang.Object;
v2 = new io.vertx.core.eventbus.DeliveryOptions;
specialinvoke v2.<io.vertx.core.eventbus.DeliveryOptions: void <init>()>();
interfaceinvoke v0.<io.vertx.core.eventbus.Message: void reply(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)>(v1, v2);
return;
}
public abstract void reply(java.lang.Object, io.vertx.core.eventbus.DeliveryOptions);
public void replyAndRequest(java.lang.Object, io.vertx.core.Handler)
{
io.vertx.core.eventbus.DeliveryOptions v3;
io.vertx.core.eventbus.Message v0;
java.lang.Object v1;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.eventbus.Message;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.Handler;
v3 = new io.vertx.core.eventbus.DeliveryOptions;
specialinvoke v3.<io.vertx.core.eventbus.DeliveryOptions: void <init>()>();
interfaceinvoke v0.<io.vertx.core.eventbus.Message: void replyAndRequest(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)>(v1, v3, v2);
return;
}
public io.vertx.core.Future replyAndRequest(java.lang.Object)
{
io.vertx.core.eventbus.DeliveryOptions v2;
io.vertx.core.eventbus.Message v0;
java.lang.Object v1;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.eventbus.Message;
v1 := @parameter0: java.lang.Object;
v2 = new io.vertx.core.eventbus.DeliveryOptions;
specialinvoke v2.<io.vertx.core.eventbus.DeliveryOptions: void <init>()>();
v3 = interfaceinvoke v0.<io.vertx.core.eventbus.Message: io.vertx.core.Future replyAndRequest(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)>(v1, v2);
return v3;
}
public void replyAndRequest(java.lang.Object, io.vertx.core.eventbus.DeliveryOptions, io.vertx.core.Handler)
{
io.vertx.core.eventbus.DeliveryOptions v2;
io.vertx.core.eventbus.Message v0;
java.lang.Object v1;
io.vertx.core.Handler v3;
io.vertx.core.Future v4;
v0 := @this: io.vertx.core.eventbus.Message;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.eventbus.DeliveryOptions;
v3 := @parameter2: io.vertx.core.Handler;
v4 = interfaceinvoke v0.<io.vertx.core.eventbus.Message: io.vertx.core.Future replyAndRequest(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)>(v1, v2);
interfaceinvoke v4.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v3);
return;
}
public abstract io.vertx.core.Future replyAndRequest(java.lang.Object, io.vertx.core.eventbus.DeliveryOptions);
public void fail(int, java.lang.String)
{
int v1;
io.vertx.core.eventbus.Message v0;
io.vertx.core.eventbus.ReplyFailure v4;
java.lang.String v2;
io.vertx.core.eventbus.ReplyException v3;
v0 := @this: io.vertx.core.eventbus.Message;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = new io.vertx.core.eventbus.ReplyException;
v4 = <io.vertx.core.eventbus.ReplyFailure: io.vertx.core.eventbus.ReplyFailure RECIPIENT_FAILURE>;
specialinvoke v3.<io.vertx.core.eventbus.ReplyException: void <init>(io.vertx.core.eventbus.ReplyFailure,int,java.lang.String)>(v4, v1, v2);
interfaceinvoke v0.<io.vertx.core.eventbus.Message: void reply(java.lang.Object)>(v3);
return;
}
}