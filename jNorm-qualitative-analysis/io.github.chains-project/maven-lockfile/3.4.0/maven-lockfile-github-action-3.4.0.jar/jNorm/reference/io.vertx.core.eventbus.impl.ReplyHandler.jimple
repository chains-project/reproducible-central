class io.vertx.core.eventbus.impl.ReplyHandler extends io.vertx.core.eventbus.impl.HandlerRegistration implements io.vertx.core.Handler
{
private final io.vertx.core.eventbus.impl.EventBusImpl eventBus;
private final io.vertx.core.impl.ContextInternal context;
private final io.vertx.core.Promise result;
private final long timeoutID;
private final long timeout;
private final boolean src;
private final java.lang.String repliedAddress;
java.lang.Object trace;
void <init>(io.vertx.core.eventbus.impl.EventBusImpl, io.vertx.core.impl.ContextInternal, java.lang.String, java.lang.String, boolean, long)
{
io.vertx.core.eventbus.impl.EventBusImpl v1;
io.vertx.core.impl.VertxInternal v8;
io.vertx.core.impl.future.PromiseInternal v7;
io.vertx.core.impl.ContextInternal v2;
long v6, v9;
io.vertx.core.eventbus.impl.ReplyHandler v0;
java.lang.String v3, v4;
boolean v5;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: io.vertx.core.eventbus.impl.EventBusImpl;
v2 := @parameter1: io.vertx.core.impl.ContextInternal;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: boolean;
v6 := @parameter5: long;
specialinvoke v0.<io.vertx.core.eventbus.impl.HandlerRegistration: void <init>(io.vertx.core.impl.ContextInternal,io.vertx.core.eventbus.impl.EventBusImpl,java.lang.String,boolean)>(v2, v1, v3, v5);
v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.eventbus.impl.EventBusImpl eventBus> = v1;
v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.impl.ContextInternal context> = v2;
v7 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise()>();
v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Promise result> = v7;
v0.<io.vertx.core.eventbus.impl.ReplyHandler: boolean src> = v5;
v0.<io.vertx.core.eventbus.impl.ReplyHandler: java.lang.String repliedAddress> = v4;
v8 = v1.<io.vertx.core.eventbus.impl.EventBusImpl: io.vertx.core.impl.VertxInternal vertx>;
v9 = interfaceinvoke v8.<io.vertx.core.impl.VertxInternal: long setTimer(long,io.vertx.core.Handler)>(v6, v0);
v0.<io.vertx.core.eventbus.impl.ReplyHandler: long timeoutID> = v9;
v0.<io.vertx.core.eventbus.impl.ReplyHandler: long timeout> = v6;
return;
}
private void trace(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.spi.tracing.TagExtractor v8;
io.vertx.core.impl.ContextInternal v3, v7;
io.vertx.core.spi.tracing.VertxTracer v4;
io.vertx.core.eventbus.impl.ReplyHandler v0;
java.lang.Object v1, v5;
boolean v6;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.impl.ContextInternal context>;
v4 = interfaceinvoke v3.<io.vertx.core.impl.ContextInternal: io.vertx.core.spi.tracing.VertxTracer tracer()>();
v5 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: java.lang.Object trace>;
if v4 == null goto label1;
v6 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: boolean src>;
if v6 == 0 goto label1;
if v5 == null goto label1;
v7 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.impl.ContextInternal context>;
v8 = staticinvoke <io.vertx.core.spi.tracing.TagExtractor: io.vertx.core.spi.tracing.TagExtractor empty()>();
interfaceinvoke v4.<io.vertx.core.spi.tracing.VertxTracer: void receiveResponse(io.vertx.core.Context,java.lang.Object,java.lang.Object,java.lang.Throwable,io.vertx.core.spi.tracing.TagExtractor)>(v7, v1, v5, v2, v8);
label1:
return;
}
io.vertx.core.Future result()
{
io.vertx.core.Future v2;
io.vertx.core.Promise v1;
io.vertx.core.eventbus.impl.ReplyHandler v0;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Promise result>;
v2 = interfaceinvoke v1.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v2;
}
void fail(io.vertx.core.eventbus.ReplyException)
{
io.vertx.core.eventbus.impl.EventBusImpl v2;
io.vertx.core.impl.VertxInternal v3;
io.vertx.core.eventbus.impl.ReplyHandler v0;
long v4;
boolean v5;
io.vertx.core.eventbus.ReplyException v1;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: io.vertx.core.eventbus.ReplyException;
v2 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.eventbus.impl.EventBusImpl eventBus>;
v3 = v2.<io.vertx.core.eventbus.impl.EventBusImpl: io.vertx.core.impl.VertxInternal vertx>;
v4 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: long timeoutID>;
v5 = interfaceinvoke v3.<io.vertx.core.impl.VertxInternal: boolean cancelTimer(long)>(v4);
if v5 == 0 goto label1;
virtualinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Future unregister()>();
specialinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void doFail(io.vertx.core.eventbus.ReplyException)>(v1);
label1:
return;
}
private void doFail(io.vertx.core.eventbus.ReplyException)
{
io.vertx.core.eventbus.impl.EventBusImpl v3, v5;
io.vertx.core.Promise v2;
io.vertx.core.spi.metrics.EventBusMetrics v4, v6;
io.vertx.core.eventbus.impl.ReplyHandler v0;
io.vertx.core.eventbus.ReplyFailure v8;
java.lang.String v7;
io.vertx.core.eventbus.ReplyException v1;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: io.vertx.core.eventbus.ReplyException;
specialinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void trace(java.lang.Object,java.lang.Throwable)>(null, v1);
v2 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Promise result>;
interfaceinvoke v2.<io.vertx.core.Promise: void fail(java.lang.Throwable)>(v1);
v3 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.eventbus.impl.EventBusImpl eventBus>;
v4 = v3.<io.vertx.core.eventbus.impl.EventBusImpl: io.vertx.core.spi.metrics.EventBusMetrics metrics>;
if v4 == null goto label1;
v5 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.eventbus.impl.EventBusImpl eventBus>;
v6 = v5.<io.vertx.core.eventbus.impl.EventBusImpl: io.vertx.core.spi.metrics.EventBusMetrics metrics>;
v7 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: java.lang.String repliedAddress>;
v8 = virtualinvoke v1.<io.vertx.core.eventbus.ReplyException: io.vertx.core.eventbus.ReplyFailure failureType()>();
interfaceinvoke v6.<io.vertx.core.spi.metrics.EventBusMetrics: void replyFailure(java.lang.String,io.vertx.core.eventbus.ReplyFailure)>(v7, v8);
label1:
return;
}
public void handle(java.lang.Long)
{
long v4;
java.lang.Long v1;
io.vertx.core.eventbus.impl.ReplyHandler v0;
io.vertx.core.eventbus.ReplyFailure v3;
java.lang.String v5, v6, v7;
io.vertx.core.eventbus.ReplyException v2;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: java.lang.Long;
virtualinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Future unregister()>();
v2 = new io.vertx.core.eventbus.ReplyException;
v3 = <io.vertx.core.eventbus.ReplyFailure: io.vertx.core.eventbus.ReplyFailure TIMEOUT>;
v4 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: long timeout>;
v5 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: java.lang.String address>;
v6 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: java.lang.String repliedAddress>;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long,java.lang.String,java.lang.String)>(v4, v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Timed out after waiting \u0001(ms) for a reply. address: \u0001, repliedAddress: \u0001");
specialinvoke v2.<io.vertx.core.eventbus.ReplyException: void <init>(io.vertx.core.eventbus.ReplyFailure,java.lang.String)>(v3, v7);
specialinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void doFail(io.vertx.core.eventbus.ReplyException)>(v2);
return;
}
protected boolean doReceive(io.vertx.core.eventbus.Message)
{
io.vertx.core.eventbus.Message v1;
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.eventbus.impl.ReplyHandler v0;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: io.vertx.core.eventbus.Message;
v2 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.impl.ContextInternal context>;
virtualinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void dispatch(io.vertx.core.Handler,io.vertx.core.eventbus.Message,io.vertx.core.impl.ContextInternal)>(null, v1, v2);
return 1;
}
void register()
{
java.lang.String v1;
io.vertx.core.eventbus.impl.ReplyHandler v0;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: java.lang.String repliedAddress>;
virtualinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void register(java.lang.String,boolean,io.vertx.core.Promise)>(v1, 1, null);
return;
}
protected void dispatch(io.vertx.core.eventbus.Message, io.vertx.core.impl.ContextInternal, io.vertx.core.Handler)
{
io.vertx.core.eventbus.impl.EventBusImpl v4;
io.vertx.core.impl.VertxInternal v5;
io.vertx.core.Promise v11;
io.vertx.core.eventbus.Message v1;
io.vertx.core.impl.ContextInternal v2;
long v6;
io.vertx.core.eventbus.impl.ReplyHandler v0;
java.lang.Object v10, v8;
io.vertx.core.Handler v3;
boolean v7, v9;
v0 := @this: io.vertx.core.eventbus.impl.ReplyHandler;
v1 := @parameter0: io.vertx.core.eventbus.Message;
v2 := @parameter1: io.vertx.core.impl.ContextInternal;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.eventbus.impl.EventBusImpl eventBus>;
v5 = v4.<io.vertx.core.eventbus.impl.EventBusImpl: io.vertx.core.impl.VertxInternal vertx>;
v6 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: long timeoutID>;
v7 = interfaceinvoke v5.<io.vertx.core.impl.VertxInternal: boolean cancelTimer(long)>(v6);
if v7 == 0 goto label2;
virtualinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Future unregister()>();
v8 = interfaceinvoke v1.<io.vertx.core.eventbus.Message: java.lang.Object body()>();
v9 = v8 instanceof io.vertx.core.eventbus.ReplyException;
if v9 == 0 goto label1;
v10 = interfaceinvoke v1.<io.vertx.core.eventbus.Message: java.lang.Object body()>();
specialinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void doFail(io.vertx.core.eventbus.ReplyException)>(v10);
goto label2;
label1:
specialinvoke v0.<io.vertx.core.eventbus.impl.ReplyHandler: void trace(java.lang.Object,java.lang.Throwable)>(v1, null);
v11 = v0.<io.vertx.core.eventbus.impl.ReplyHandler: io.vertx.core.Promise result>;
interfaceinvoke v11.<io.vertx.core.Promise: void complete(java.lang.Object)>(v1);
label2:
return;
}
}