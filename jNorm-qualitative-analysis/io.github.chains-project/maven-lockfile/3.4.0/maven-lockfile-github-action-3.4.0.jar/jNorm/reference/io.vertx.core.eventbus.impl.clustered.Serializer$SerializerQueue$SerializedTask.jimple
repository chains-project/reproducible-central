class io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask extends java.lang.Object implements io.vertx.core.Handler
{
final io.vertx.core.eventbus.Message msg;
final java.util.function.BiConsumer selectHandler;
final io.vertx.core.Promise internalPromise;
final io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue this$1;
void <init>(io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue, io.vertx.core.impl.ContextInternal, io.vertx.core.eventbus.Message, java.util.function.BiConsumer)
{
io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue v1;
io.vertx.core.impl.future.PromiseInternal v5;
java.util.function.BiConsumer v4;
io.vertx.core.eventbus.Message v3;
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask v0;
v0 := @this: io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask;
v1 := @parameter0: io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue;
v2 := @parameter1: io.vertx.core.impl.ContextInternal;
v3 := @parameter2: io.vertx.core.eventbus.Message;
v4 := @parameter3: java.util.function.BiConsumer;
v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue this$1> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: io.vertx.core.eventbus.Message msg> = v3;
v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: java.util.function.BiConsumer selectHandler> = v4;
v5 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise()>();
v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: io.vertx.core.Promise internalPromise> = v5;
return;
}
void process()
{
io.vertx.core.Promise v3;
java.util.function.BiConsumer v1;
io.vertx.core.eventbus.Message v2;
io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask v0;
v0 := @this: io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask;
v1 = v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: java.util.function.BiConsumer selectHandler>;
v2 = v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: io.vertx.core.eventbus.Message msg>;
v3 = v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: io.vertx.core.Promise internalPromise>;
interfaceinvoke v1.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v2, v3);
return;
}
public void handle(io.vertx.core.AsyncResult)
{
io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue v2;
io.vertx.core.AsyncResult v1;
io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask v0;
v0 := @this: io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask;
v1 := @parameter0: io.vertx.core.AsyncResult;
v2 = v0.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue$SerializedTask: io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue this$1>;
virtualinvoke v2.<io.vertx.core.eventbus.impl.clustered.Serializer$SerializerQueue: void processed()>();
return;
}
}