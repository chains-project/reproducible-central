public interface  io.vertx.core.file.FileSystem extends java.lang.Object
{
public abstract io.vertx.core.file.FileSystem copy(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future copy(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem copy(java.lang.String, java.lang.String, io.vertx.core.file.CopyOptions, io.vertx.core.Handler);
public abstract io.vertx.core.Future copy(java.lang.String, java.lang.String, io.vertx.core.file.CopyOptions);
public abstract io.vertx.core.file.FileSystem copyBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem copyRecursive(java.lang.String, java.lang.String, boolean, io.vertx.core.Handler);
public abstract io.vertx.core.Future copyRecursive(java.lang.String, java.lang.String, boolean);
public abstract io.vertx.core.file.FileSystem copyRecursiveBlocking(java.lang.String, java.lang.String, boolean);
public abstract io.vertx.core.file.FileSystem move(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future move(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem move(java.lang.String, java.lang.String, io.vertx.core.file.CopyOptions, io.vertx.core.Handler);
public abstract io.vertx.core.Future move(java.lang.String, java.lang.String, io.vertx.core.file.CopyOptions);
public abstract io.vertx.core.file.FileSystem moveBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem truncate(java.lang.String, long, io.vertx.core.Handler);
public abstract io.vertx.core.Future truncate(java.lang.String, long);
public abstract io.vertx.core.file.FileSystem truncateBlocking(java.lang.String, long);
public abstract io.vertx.core.file.FileSystem chmod(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future chmod(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem chmodBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem chmodRecursive(java.lang.String, java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future chmodRecursive(java.lang.String, java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem chmodRecursiveBlocking(java.lang.String, java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem chown(java.lang.String, java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future chown(java.lang.String, java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem chownBlocking(java.lang.String, java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem props(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future props(java.lang.String);
public abstract io.vertx.core.file.FileProps propsBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem lprops(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future lprops(java.lang.String);
public abstract io.vertx.core.file.FileProps lpropsBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem link(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future link(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem linkBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem symlink(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future symlink(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem symlinkBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem unlink(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future unlink(java.lang.String);
public abstract io.vertx.core.file.FileSystem unlinkBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem readSymlink(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future readSymlink(java.lang.String);
public abstract java.lang.String readSymlinkBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem delete(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future delete(java.lang.String);
public abstract io.vertx.core.file.FileSystem deleteBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem deleteRecursive(java.lang.String, boolean, io.vertx.core.Handler);
public abstract io.vertx.core.Future deleteRecursive(java.lang.String, boolean);
public abstract io.vertx.core.file.FileSystem deleteRecursiveBlocking(java.lang.String, boolean);
public abstract io.vertx.core.file.FileSystem mkdir(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future mkdir(java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdirBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdir(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future mkdir(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdirBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdirs(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future mkdirs(java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdirsBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdirs(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future mkdirs(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem mkdirsBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem readDir(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future readDir(java.lang.String);
public abstract java.util.List readDirBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem readDir(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future readDir(java.lang.String, java.lang.String);
public abstract java.util.List readDirBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem readFile(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future readFile(java.lang.String);
public abstract io.vertx.core.buffer.Buffer readFileBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem writeFile(java.lang.String, io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.Future writeFile(java.lang.String, io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.file.FileSystem writeFileBlocking(java.lang.String, io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.file.FileSystem open(java.lang.String, io.vertx.core.file.OpenOptions, io.vertx.core.Handler);
public abstract io.vertx.core.Future open(java.lang.String, io.vertx.core.file.OpenOptions);
public abstract io.vertx.core.file.AsyncFile openBlocking(java.lang.String, io.vertx.core.file.OpenOptions);
public abstract io.vertx.core.file.FileSystem createFile(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createFile(java.lang.String);
public abstract io.vertx.core.file.FileSystem createFileBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem createFile(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createFile(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem createFileBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem exists(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future exists(java.lang.String);
public abstract boolean existsBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem fsProps(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future fsProps(java.lang.String);
public abstract io.vertx.core.file.FileSystemProps fsPropsBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem createTempDirectory(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createTempDirectory(java.lang.String);
public abstract java.lang.String createTempDirectoryBlocking(java.lang.String);
public abstract io.vertx.core.file.FileSystem createTempDirectory(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createTempDirectory(java.lang.String, java.lang.String);
public abstract java.lang.String createTempDirectoryBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem createTempDirectory(java.lang.String, java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createTempDirectory(java.lang.String, java.lang.String, java.lang.String);
public abstract java.lang.String createTempDirectoryBlocking(java.lang.String, java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem createTempFile(java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createTempFile(java.lang.String, java.lang.String);
public abstract java.lang.String createTempFileBlocking(java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem createTempFile(java.lang.String, java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createTempFile(java.lang.String, java.lang.String, java.lang.String);
public abstract java.lang.String createTempFileBlocking(java.lang.String, java.lang.String, java.lang.String);
public abstract io.vertx.core.file.FileSystem createTempFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future createTempFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
public abstract java.lang.String createTempFileBlocking(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}