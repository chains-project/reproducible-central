class io.vertx.core.file.impl.FileSystemImpl$21 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$path;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String)
{
io.vertx.core.file.impl.FileSystemImpl v1;
java.lang.String v2;
io.vertx.core.file.impl.FileSystemImpl$21 v0;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$21;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v0.<io.vertx.core.file.impl.FileSystemImpl$21: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$21: java.lang.String val$path> = v2;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public io.vertx.core.file.FileSystemProps perform()
{
io.vertx.core.impl.VertxInternal v2;
java.nio.file.FileStore v6;
java.io.IOException v11;
long v10, v8, v9;
io.vertx.core.file.FileSystemException v12;
java.io.File v4;
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemPropsImpl v7;
java.lang.String v13, v14, v3;
java.nio.file.Path v5;
io.vertx.core.file.impl.FileSystemImpl$21 v0;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$21;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$21: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$21: java.lang.String val$path>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = staticinvoke <java.nio.file.Files: java.nio.file.FileStore getFileStore(java.nio.file.Path)>(v5);
v7 = new io.vertx.core.file.impl.FileSystemPropsImpl;
v8 = virtualinvoke v6.<java.nio.file.FileStore: long getTotalSpace()>();
v9 = virtualinvoke v6.<java.nio.file.FileStore: long getUnallocatedSpace()>();
v10 = virtualinvoke v6.<java.nio.file.FileStore: long getUsableSpace()>();
specialinvoke v7.<io.vertx.core.file.impl.FileSystemPropsImpl: void <init>(long,long,long)>(v8, v9, v10);
label2:
return v7;
label3:
v11 := @caughtexception;
v12 = new io.vertx.core.file.FileSystemException;
v13 = v0.<io.vertx.core.file.impl.FileSystemImpl$21: java.lang.String val$path>;
v14 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileAccessErrorMessage(java.lang.String,java.lang.String)>("analyse", v13);
specialinvoke v12.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v14, v11);
throw v12;
catch java.io.IOException from label1 to label2 with label3;
}
}