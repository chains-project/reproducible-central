public class io.vertx.core.http.GoAwayConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.http.GoAwayConverter v0;
v0 := @this: io.vertx.core.http.GoAwayConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.http.GoAway)
{
byte[] v15;
java.util.Base64$Decoder v13;
long v20;
java.lang.Iterable v0;
byte v6;
int v24, v7;
boolean v10, v12, v18, v22, v3, v8, v9;
java.util.Iterator v2;
io.vertx.core.http.GoAway v1;
io.vertx.core.buffer.Buffer v16;
java.lang.Object v11, v14, v17, v19, v21, v23, v4, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.http.GoAway;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label9;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -198731619: goto label2;
case 70482289: goto label4;
case 329035797: goto label3;
default: goto label5;
};
label2:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("debugData");
if v8 == 0 goto label5;
v6 = 0;
goto label5;
label3:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("errorCode");
if v9 == 0 goto label5;
v6 = 1;
goto label5;
label4:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("lastStreamId");
if v10 == 0 goto label5;
v6 = 2;
label5:
tableswitch(v6)
{
case 0: goto label6;
case 1: goto label7;
case 2: goto label8;
default: goto label1;
};
label6:
v11 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v12 = v11 instanceof java.lang.String;
if v12 == 0 goto label1;
v13 = <io.vertx.core.http.GoAwayConverter: java.util.Base64$Decoder BASE64_DECODER>;
v14 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v15 = virtualinvoke v13.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v14);
v16 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v15);
virtualinvoke v1.<io.vertx.core.http.GoAway: io.vertx.core.http.GoAway setDebugData(io.vertx.core.buffer.Buffer)>(v16);
goto label1;
label7:
v17 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v18 = v17 instanceof java.lang.Number;
if v18 == 0 goto label1;
v19 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v20 = virtualinvoke v19.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.http.GoAway: io.vertx.core.http.GoAway setErrorCode(long)>(v20);
goto label1;
label8:
v21 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v22 = v21 instanceof java.lang.Number;
if v22 == 0 goto label1;
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v24 = virtualinvoke v23.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.http.GoAway: io.vertx.core.http.GoAway setLastStreamId(int)>(v24);
goto label1;
label9:
return;
}
static void toJson(io.vertx.core.http.GoAway, io.vertx.core.json.JsonObject)
{
io.vertx.core.http.GoAway v0;
io.vertx.core.json.JsonObject v1;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.http.GoAway;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.http.GoAwayConverter: void toJson(io.vertx.core.http.GoAway,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.http.GoAway, java.util.Map)
{
byte[] v5;
io.vertx.core.http.GoAway v0;
java.util.Base64$Encoder v3;
long v7;
java.lang.Integer v10;
io.vertx.core.buffer.Buffer v2, v4;
java.lang.Long v8;
java.util.Map v1;
int v9;
java.lang.String v6;
v0 := @parameter0: io.vertx.core.http.GoAway;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.http.GoAway: io.vertx.core.buffer.Buffer getDebugData()>();
if v2 == null goto label1;
v3 = <io.vertx.core.http.GoAwayConverter: java.util.Base64$Encoder BASE64_ENCODER>;
v4 = virtualinvoke v0.<io.vertx.core.http.GoAway: io.vertx.core.buffer.Buffer getDebugData()>();
v5 = interfaceinvoke v4.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
v6 = virtualinvoke v3.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("debugData", v6);
label1:
v7 = virtualinvoke v0.<io.vertx.core.http.GoAway: long getErrorCode()>();
v8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v7);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("errorCode", v8);
v9 = virtualinvoke v0.<io.vertx.core.http.GoAway: int getLastStreamId()>();
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lastStreamId", v10);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.http.GoAwayConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.http.GoAwayConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}