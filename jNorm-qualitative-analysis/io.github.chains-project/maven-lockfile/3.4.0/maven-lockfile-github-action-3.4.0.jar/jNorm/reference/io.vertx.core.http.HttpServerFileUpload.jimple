public interface  io.vertx.core.http.HttpServerFileUpload extends java.lang.Object implements io.vertx.core.streams.ReadStream
{
public abstract io.vertx.core.http.HttpServerFileUpload exceptionHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.HttpServerFileUpload handler(io.vertx.core.Handler);
public abstract io.vertx.core.http.HttpServerFileUpload endHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.HttpServerFileUpload pause();
public abstract io.vertx.core.http.HttpServerFileUpload resume();
public abstract io.vertx.core.http.HttpServerFileUpload fetch(long);
public abstract void streamToFileSystem(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.Future streamToFileSystem(java.lang.String);
public abstract boolean cancelStreamToFileSystem() throws java.lang.IllegalStateException;
public abstract java.lang.String filename();
public abstract java.lang.String name();
public abstract java.lang.String contentType();
public abstract java.lang.String contentTransferEncoding();
public abstract java.lang.String charset();
public abstract long size();
public abstract boolean isSizeAvailable();
public abstract io.vertx.core.file.AsyncFile file();
}