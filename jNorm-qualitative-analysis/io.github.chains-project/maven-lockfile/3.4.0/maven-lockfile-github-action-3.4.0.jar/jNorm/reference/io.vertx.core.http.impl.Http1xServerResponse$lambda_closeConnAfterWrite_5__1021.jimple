public final class io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021 extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
io.vertx.core.http.impl.Http1xServerResponse cap0;
public static io.netty.util.concurrent.GenericFutureListener bootstrap$(io.vertx.core.http.impl.Http1xServerResponse)
{
io.vertx.core.http.impl.Http1xServerResponse v0;
io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021 v1;
v0 := @parameter0: io.vertx.core.http.impl.Http1xServerResponse;
v1 = new io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021;
specialinvoke v1.<io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021: void <init>(io.vertx.core.http.impl.Http1xServerResponse)>(v0);
return v1;
}
public void <init>(io.vertx.core.http.impl.Http1xServerResponse)
{
io.vertx.core.http.impl.Http1xServerResponse v1;
io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021 v0;
v0 := @this: io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021;
v1 := @parameter0: io.vertx.core.http.impl.Http1xServerResponse;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021: io.vertx.core.http.impl.Http1xServerResponse cap0> = v1;
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
io.vertx.core.http.impl.Http1xServerResponse v2;
io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021 v0;
io.netty.util.concurrent.Future v1;
v0 := @this: io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.vertx.core.http.impl.Http1xServerResponse$lambda_closeConnAfterWrite_5__1021: io.vertx.core.http.impl.Http1xServerResponse cap0>;
specialinvoke v2.<io.vertx.core.http.impl.Http1xServerResponse: void lambda$closeConnAfterWrite$5(io.netty.util.concurrent.Future)>(v1);
return;
}
}