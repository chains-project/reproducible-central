class io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler extends io.netty.channel.ChannelInboundHandlerAdapter
{
final io.netty.channel.ChannelPipeline val$pipeline;
final io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream this$0;
void <init>(io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream, io.netty.channel.ChannelPipeline)
{
io.netty.channel.ChannelPipeline v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler v0;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler;
v1 := @parameter0: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream;
v2 := @parameter1: io.netty.channel.ChannelPipeline;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream this$0> = v1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler: io.netty.channel.ChannelPipeline val$pipeline> = v2;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void <init>()>();
return;
}
public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.channel.ChannelPipeline v3;
io.vertx.core.http.impl.Http2UpgradeClientConnection v13;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler v0;
io.netty.channel.ChannelHandlerContext v1, v10;
int[] v5;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream v12, v8;
int v6, v7;
io.netty.channel.ChannelHandler v11;
java.lang.Object v2;
io.vertx.core.http.impl.Http1xClientConnection v9;
boolean v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v4 = v2 instanceof io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent;
if v4 == 0 goto label3;
v5 = <io.vertx.core.http.impl.Http2UpgradeClientConnection$1: int[] $SwitchMap$io$netty$handler$codec$http$HttpClientUpgradeHandler$UpgradeEvent>;
v6 = virtualinvoke v2.<io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent: int ordinal()>();
v7 = v5[v6];
lookupswitch(v7)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
v8 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream this$0>;
v9 = v8.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http1xClientConnection upgradingConnection>;
v10 = virtualinvoke v9.<io.vertx.core.http.impl.Http1xClientConnection: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
v11 = interfaceinvoke v10.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandler handler()>();
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v11);
label2:
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
v12 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream this$0>;
v13 = v12.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream: io.vertx.core.http.impl.Http2UpgradeClientConnection upgradedConnection>;
v13.<io.vertx.core.http.impl.Http2UpgradeClientConnection: boolean upgradeProcessed> = 1;
label3:
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.vertx.core.MultiMap v8;
io.netty.util.AsciiString v10, v9;
io.netty.handler.codec.http.HttpResponseStatus v6;
io.netty.channel.ChannelPipeline v4;
io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler v0;
io.netty.channel.ChannelHandlerContext v1;
int v5, v7;
java.lang.Object v2;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.vertx.core.http.impl.HttpResponseHead;
if v3 == 0 goto label1;
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection$UpgradingStream$1UpgradeRequestHandler: io.netty.channel.ChannelPipeline val$pipeline>;
interfaceinvoke v4.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
v5 = v2.<io.vertx.core.http.impl.HttpResponseHead: int statusCode>;
v6 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS>;
v7 = virtualinvoke v6.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v5 == v7 goto label1;
v8 = v2.<io.vertx.core.http.impl.HttpResponseHead: io.vertx.core.MultiMap headers>;
v9 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v10 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString CLOSE>;
interfaceinvoke v8.<io.vertx.core.MultiMap: io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence)>(v9, v10);
label1:
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
}
}