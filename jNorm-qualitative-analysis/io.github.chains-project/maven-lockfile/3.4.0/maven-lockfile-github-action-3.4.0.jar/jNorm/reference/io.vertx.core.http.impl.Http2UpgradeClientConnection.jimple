public class io.vertx.core.http.impl.Http2UpgradeClientConnection extends java.lang.Object implements io.vertx.core.http.impl.HttpClientConnection
{
private static final java.lang.Object SEND_BUFFERED_MESSAGES;
private static final io.vertx.core.impl.logging.Logger log;
private io.vertx.core.http.impl.HttpClientImpl client;
private io.vertx.core.http.impl.HttpClientConnection current;
private boolean upgradeProcessed;
private io.vertx.core.Handler closeHandler;
private io.vertx.core.Handler shutdownHandler;
private io.vertx.core.Handler goAwayHandler;
private io.vertx.core.Handler exceptionHandler;
private io.vertx.core.Handler pingHandler;
private io.vertx.core.Handler evictionHandler;
private io.vertx.core.Handler concurrencyChangeHandler;
private io.vertx.core.Handler remoteSettingsHandler;
void <init>(io.vertx.core.http.impl.HttpClientImpl, io.vertx.core.http.impl.Http1xClientConnection)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientImpl v1;
io.vertx.core.http.impl.Http1xClientConnection v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.http.impl.HttpClientImpl;
v2 := @parameter1: io.vertx.core.http.impl.Http1xClientConnection;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientImpl client> = v1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current> = v2;
return;
}
public io.vertx.core.http.impl.HttpClientConnection unwrap()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
return v1;
}
public long concurrency()
{
long v3;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2;
boolean v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: boolean upgradeProcessed>;
if v1 == 0 goto label1;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: long concurrency()>();
goto label2;
label1:
v3 = 1L;
label2:
return v3;
}
public io.netty.channel.ChannelHandlerContext channelHandlerContext()
{
io.netty.channel.ChannelHandlerContext v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
return v2;
}
public io.netty.channel.Channel channel()
{
io.netty.channel.Channel v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.netty.channel.Channel channel()>();
return v2;
}
public io.vertx.core.Future close()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.Future v2;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.Future close()>();
return v2;
}
public java.lang.Object metric()
{
java.lang.Object v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: java.lang.Object metric()>();
return v2;
}
public long lastResponseReceivedTimestamp()
{
long v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: long lastResponseReceivedTimestamp()>();
return v2;
}
public void createStream(io.vertx.core.impl.ContextInternal, io.vertx.core.Handler)
{
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v3, v6, v8;
io.vertx.core.Handler v2, v7, v9;
boolean v4, v5;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v4 = v3 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v4 == 0 goto label1;
v5 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: boolean upgradeProcessed>;
if v5 != 0 goto label1;
v6 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v7 = staticinvoke <io.vertx.core.http.impl.Http2UpgradeClientConnection$lambda_createStream_0__1011: io.vertx.core.Handler bootstrap$(io.vertx.core.http.impl.Http2UpgradeClientConnection,io.vertx.core.Handler)>(v0, v2);
interfaceinvoke v6.<io.vertx.core.http.impl.HttpClientConnection: void createStream(io.vertx.core.impl.ContextInternal,io.vertx.core.Handler)>(v1, v7);
goto label2;
label1:
v8 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v9 = staticinvoke <io.vertx.core.http.impl.Http2UpgradeClientConnection$lambda_createStream_1__1010: io.vertx.core.Handler bootstrap$(io.vertx.core.http.impl.Http2UpgradeClientConnection,io.vertx.core.Handler)>(v0, v2);
interfaceinvoke v8.<io.vertx.core.http.impl.HttpClientConnection: void createStream(io.vertx.core.impl.ContextInternal,io.vertx.core.Handler)>(v1, v9);
label2:
return;
}
public io.vertx.core.impl.ContextInternal getContext()
{
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.impl.ContextInternal getContext()>();
return v2;
}
public io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler remoteSettingsHandler> = v1;
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler)>(v1);
label2:
return v0;
}
public io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler pingHandler> = v1;
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler)>(v1);
label2:
return v0;
}
public io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler goAwayHandler> = v1;
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler)>(v1);
label2:
return v0;
}
public io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler shutdownHandler> = v1;
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler)>(v1);
label2:
return v0;
}
public io.vertx.core.http.HttpConnection closeHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler closeHandler> = v1;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection closeHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.core.http.HttpConnection exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler exceptionHandler> = v1;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection exceptionHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.core.http.impl.HttpClientConnection evictionHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler evictionHandler> = v1;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.impl.HttpClientConnection evictionHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.core.http.impl.HttpClientConnection concurrencyChangeHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2, v4;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = v2 instanceof io.vertx.core.http.impl.Http1xClientConnection;
if v3 == 0 goto label1;
v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.Handler concurrencyChangeHandler> = v1;
label1:
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.impl.HttpClientConnection concurrencyChangeHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.core.http.HttpConnection goAway(long, int, io.vertx.core.buffer.Buffer)
{
io.vertx.core.buffer.Buffer v3;
int v2;
long v1;
io.vertx.core.http.HttpConnection v5;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v4;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: long;
v2 := @parameter1: int;
v3 := @parameter2: io.vertx.core.buffer.Buffer;
v4 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v5 = interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer)>(v1, v2, v3);
return v5;
}
public void shutdown(long, io.vertx.core.Handler)
{
long v1;
io.vertx.core.Handler v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: long;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientConnection: void shutdown(long,io.vertx.core.Handler)>(v1, v2);
return;
}
public io.vertx.core.Future shutdown(long)
{
long v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.Future v3;
io.vertx.core.http.impl.HttpClientConnection v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: long;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.Future shutdown(long)>(v1);
return v3;
}
public io.vertx.core.Future updateSettings(io.vertx.core.http.Http2Settings)
{
io.vertx.core.http.Http2Settings v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.Future v3;
io.vertx.core.http.impl.HttpClientConnection v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.http.Http2Settings;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.Future updateSettings(io.vertx.core.http.Http2Settings)>(v1);
return v3;
}
public io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings, io.vertx.core.Handler)
{
io.vertx.core.http.Http2Settings v1;
io.vertx.core.http.HttpConnection v4;
io.vertx.core.Handler v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.http.Http2Settings;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v4 = interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler)>(v1, v2);
return v4;
}
public io.vertx.core.http.Http2Settings settings()
{
io.vertx.core.http.Http2Settings v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.Http2Settings settings()>();
return v2;
}
public io.vertx.core.http.Http2Settings remoteSettings()
{
io.vertx.core.http.Http2Settings v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.Http2Settings remoteSettings()>();
return v2;
}
public io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer, io.vertx.core.Handler)
{
io.vertx.core.buffer.Buffer v1;
io.vertx.core.http.HttpConnection v4;
io.vertx.core.Handler v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v4 = interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler)>(v1, v2);
return v4;
}
public io.vertx.core.Future ping(io.vertx.core.buffer.Buffer)
{
io.vertx.core.buffer.Buffer v1;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.Future v3;
io.vertx.core.http.impl.HttpClientConnection v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.Future ping(io.vertx.core.buffer.Buffer)>(v1);
return v3;
}
public io.vertx.core.net.SocketAddress remoteAddress()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
io.vertx.core.net.SocketAddress v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.net.SocketAddress remoteAddress()>();
return v2;
}
public io.vertx.core.net.SocketAddress remoteAddress(boolean)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2;
boolean v1;
io.vertx.core.net.SocketAddress v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: boolean;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.net.SocketAddress remoteAddress(boolean)>(v1);
return v3;
}
public io.vertx.core.net.SocketAddress localAddress()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
io.vertx.core.net.SocketAddress v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.net.SocketAddress localAddress()>();
return v2;
}
public io.vertx.core.net.SocketAddress localAddress(boolean)
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v2;
boolean v1;
io.vertx.core.net.SocketAddress v3;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 := @parameter0: boolean;
v2 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.net.SocketAddress localAddress(boolean)>(v1);
return v3;
}
public boolean isSsl()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
boolean v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: boolean isSsl()>();
return v2;
}
public javax.net.ssl.SSLSession sslSession()
{
javax.net.ssl.SSLSession v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: javax.net.ssl.SSLSession sslSession()>();
return v2;
}
public javax.security.cert.X509Certificate[] peerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException
{
javax.security.cert.X509Certificate[] v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: javax.security.cert.X509Certificate[] peerCertificateChain()>();
return v2;
}
public java.util.List peerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException
{
java.util.List v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: java.util.List peerCertificates()>();
return v2;
}
public boolean isValid()
{
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
boolean v2;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: boolean isValid()>();
return v2;
}
public java.lang.String indicatedServerName()
{
java.lang.String v2;
io.vertx.core.http.impl.Http2UpgradeClientConnection v0;
io.vertx.core.http.impl.HttpClientConnection v1;
v0 := @this: io.vertx.core.http.impl.Http2UpgradeClientConnection;
v1 = v0.<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.http.impl.HttpClientConnection current>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientConnection: java.lang.String indicatedServerName()>();
return v2;
}
static void <clinit>()
{
io.vertx.core.impl.logging.Logger v1;
java.lang.Object v0;
v0 = new java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
<io.vertx.core.http.impl.Http2UpgradeClientConnection: java.lang.Object SEND_BUFFERED_MESSAGES> = v0;
v1 = staticinvoke <io.vertx.core.impl.logging.LoggerFactory: io.vertx.core.impl.logging.Logger getLogger(java.lang.Class)>(class "Lio/vertx/core/http/impl/Http2UpgradeClientConnection;");
<io.vertx.core.http.impl.Http2UpgradeClientConnection: io.vertx.core.impl.logging.Logger log> = v1;
return;
}
}