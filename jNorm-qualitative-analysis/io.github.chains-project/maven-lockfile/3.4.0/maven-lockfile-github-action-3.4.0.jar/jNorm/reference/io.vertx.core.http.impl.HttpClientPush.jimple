public class io.vertx.core.http.impl.HttpClientPush extends java.lang.Object implements io.vertx.core.spi.observability.HttpRequest
{
final int port;
final java.lang.String uri;
final io.vertx.core.http.HttpMethod method;
final java.lang.String host;
final io.vertx.core.http.impl.HttpClientStream stream;
final io.vertx.core.MultiMap headers;
public void <init>(io.netty.handler.codec.http2.Http2Headers, io.vertx.core.http.impl.HttpClientStream)
{
io.vertx.core.http.impl.headers.Http2HeadersAdaptor v9;
int v10, v11, v12, v14, v16;
java.lang.String v13, v15, v19, v4, v7, v8;
java.lang.CharSequence v18, v3, v5, v6;
io.vertx.core.http.impl.HttpClientStream v2;
io.vertx.core.http.impl.HttpClientPush v0;
io.netty.handler.codec.http2.Http2Headers v1;
io.vertx.core.http.HttpMethod v17;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Headers;
v2 := @parameter1: io.vertx.core.http.impl.HttpClientStream;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Headers: java.lang.CharSequence method()>();
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
v5 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Headers: java.lang.CharSequence authority()>();
if v5 == null goto label1;
v6 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Headers: java.lang.CharSequence authority()>();
v7 = virtualinvoke v6.<java.lang.Object: java.lang.String toString()>();
goto label2;
label1:
v7 = null;
label2:
v8 = v7;
v9 = new io.vertx.core.http.impl.headers.Http2HeadersAdaptor;
specialinvoke v9.<io.vertx.core.http.impl.headers.Http2HeadersAdaptor: void <init>(io.netty.handler.codec.http2.Http2Headers)>(v1);
if v7 != null goto label3;
v10 = (int) -1;
v11 = v10;
goto label4;
label3:
v11 = virtualinvoke v7.<java.lang.String: int indexOf(int)>(58);
label4:
v12 = (int) -1;
if v11 != v12 goto label5;
v0.<io.vertx.core.http.impl.HttpClientPush: java.lang.String host> = v8;
v0.<io.vertx.core.http.impl.HttpClientPush: int port> = 80;
goto label6;
label5:
v13 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int,int)>(0, v11);
v0.<io.vertx.core.http.impl.HttpClientPush: java.lang.String host> = v13;
v14 = v11 + 1;
v15 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int)>(v14);
v16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v15);
v0.<io.vertx.core.http.impl.HttpClientPush: int port> = v16;
label6:
v17 = staticinvoke <io.vertx.core.http.HttpMethod: io.vertx.core.http.HttpMethod valueOf(java.lang.String)>(v4);
v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.http.HttpMethod method> = v17;
v18 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Headers: java.lang.CharSequence path()>();
v19 = virtualinvoke v18.<java.lang.Object: java.lang.String toString()>();
v0.<io.vertx.core.http.impl.HttpClientPush: java.lang.String uri> = v19;
v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.http.impl.HttpClientStream stream> = v2;
v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.MultiMap headers> = v9;
return;
}
public int id()
{
int v2;
io.vertx.core.http.impl.HttpClientPush v0;
io.vertx.core.http.impl.HttpClientStream v1;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
v1 = v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.http.impl.HttpClientStream stream>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: int id()>();
return v2;
}
public io.vertx.core.MultiMap headers()
{
io.vertx.core.MultiMap v1;
io.vertx.core.http.impl.HttpClientPush v0;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
v1 = v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.MultiMap headers>;
return v1;
}
public java.lang.String absoluteURI()
{
io.vertx.core.http.impl.HttpClientPush v0;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
return null;
}
public io.vertx.core.net.SocketAddress remoteAddress()
{
io.vertx.core.http.impl.HttpClientPush v0;
io.vertx.core.http.impl.HttpClientStream v1;
io.vertx.core.http.impl.HttpClientConnection v2;
io.vertx.core.net.SocketAddress v3;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
v1 = v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.http.impl.HttpClientStream stream>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientStream: io.vertx.core.http.impl.HttpClientConnection connection()>();
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientConnection: io.vertx.core.net.SocketAddress remoteAddress()>();
return v3;
}
public java.lang.String uri()
{
java.lang.String v1;
io.vertx.core.http.impl.HttpClientPush v0;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
v1 = v0.<io.vertx.core.http.impl.HttpClientPush: java.lang.String uri>;
return v1;
}
public io.vertx.core.http.HttpMethod method()
{
io.vertx.core.http.impl.HttpClientPush v0;
io.vertx.core.http.HttpMethod v1;
v0 := @this: io.vertx.core.http.impl.HttpClientPush;
v1 = v0.<io.vertx.core.http.impl.HttpClientPush: io.vertx.core.http.HttpMethod method>;
return v1;
}
}