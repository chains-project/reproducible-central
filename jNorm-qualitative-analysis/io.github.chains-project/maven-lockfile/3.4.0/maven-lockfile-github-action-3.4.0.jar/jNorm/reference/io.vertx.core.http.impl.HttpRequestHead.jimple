public class io.vertx.core.http.impl.HttpRequestHead extends java.lang.Object implements io.vertx.core.spi.observability.HttpRequest
{
int id;
io.vertx.core.net.SocketAddress remoteAddress;
public final io.vertx.core.http.HttpMethod method;
public final java.lang.String uri;
public final io.vertx.core.MultiMap headers;
public final java.lang.String authority;
public final java.lang.String absoluteURI;
public final java.lang.String traceOperation;
public void <init>(io.vertx.core.http.HttpMethod, java.lang.String, io.vertx.core.MultiMap, java.lang.String, java.lang.String, java.lang.String)
{
io.vertx.core.MultiMap v3;
java.lang.IllegalArgumentException v8;
io.vertx.core.http.impl.HttpRequestHead v0;
io.vertx.core.http.HttpMethod v1;
java.lang.String v2, v4, v5, v6;
boolean v7;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.core.MultiMap;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v2 == null goto label1;
v7 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v7 == 0 goto label2;
label1:
v8 = new java.lang.IllegalArgumentException;
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request URI");
throw v8;
label2:
v0.<io.vertx.core.http.impl.HttpRequestHead: io.vertx.core.http.HttpMethod method> = v1;
v0.<io.vertx.core.http.impl.HttpRequestHead: java.lang.String uri> = v2;
v0.<io.vertx.core.http.impl.HttpRequestHead: io.vertx.core.MultiMap headers> = v3;
v0.<io.vertx.core.http.impl.HttpRequestHead: java.lang.String authority> = v4;
v0.<io.vertx.core.http.impl.HttpRequestHead: java.lang.String absoluteURI> = v5;
v0.<io.vertx.core.http.impl.HttpRequestHead: java.lang.String traceOperation> = v6;
return;
}
public io.vertx.core.MultiMap headers()
{
io.vertx.core.MultiMap v1;
io.vertx.core.http.impl.HttpRequestHead v0;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 = v0.<io.vertx.core.http.impl.HttpRequestHead: io.vertx.core.MultiMap headers>;
return v1;
}
public io.vertx.core.net.SocketAddress remoteAddress()
{
io.vertx.core.http.impl.HttpRequestHead v0;
io.vertx.core.net.SocketAddress v1;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 = v0.<io.vertx.core.http.impl.HttpRequestHead: io.vertx.core.net.SocketAddress remoteAddress>;
return v1;
}
public java.lang.String absoluteURI()
{
io.vertx.core.http.impl.HttpRequestHead v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 = v0.<io.vertx.core.http.impl.HttpRequestHead: java.lang.String absoluteURI>;
return v1;
}
public int id()
{
int v1;
io.vertx.core.http.impl.HttpRequestHead v0;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 = v0.<io.vertx.core.http.impl.HttpRequestHead: int id>;
return v1;
}
public java.lang.String uri()
{
io.vertx.core.http.impl.HttpRequestHead v0;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 = v0.<io.vertx.core.http.impl.HttpRequestHead: java.lang.String uri>;
return v1;
}
public io.vertx.core.http.HttpMethod method()
{
io.vertx.core.http.impl.HttpRequestHead v0;
io.vertx.core.http.HttpMethod v1;
v0 := @this: io.vertx.core.http.impl.HttpRequestHead;
v1 = v0.<io.vertx.core.http.impl.HttpRequestHead: io.vertx.core.http.HttpMethod method>;
return v1;
}
}