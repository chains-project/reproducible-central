public final class io.vertx.core.http.impl.VertxHttp2Stream$write__1093 extends java.lang.Object implements io.vertx.core.Handler
{
io.vertx.core.streams.impl.InboundBuffer cap0;
public static io.vertx.core.Handler bootstrap$(io.vertx.core.streams.impl.InboundBuffer)
{
io.vertx.core.streams.impl.InboundBuffer v0;
io.vertx.core.http.impl.VertxHttp2Stream$write__1093 v1;
v0 := @parameter0: io.vertx.core.streams.impl.InboundBuffer;
v1 = new io.vertx.core.http.impl.VertxHttp2Stream$write__1093;
specialinvoke v1.<io.vertx.core.http.impl.VertxHttp2Stream$write__1093: void <init>(io.vertx.core.streams.impl.InboundBuffer)>(v0);
return v1;
}
public void <init>(io.vertx.core.streams.impl.InboundBuffer)
{
io.vertx.core.streams.impl.InboundBuffer v1;
io.vertx.core.http.impl.VertxHttp2Stream$write__1093 v0;
v0 := @this: io.vertx.core.http.impl.VertxHttp2Stream$write__1093;
v1 := @parameter0: io.vertx.core.streams.impl.InboundBuffer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.VertxHttp2Stream$write__1093: io.vertx.core.streams.impl.InboundBuffer cap0> = v1;
return;
}
public void handle(java.lang.Object)
{
java.lang.Object v1;
io.vertx.core.streams.impl.InboundBuffer v2;
io.vertx.core.http.impl.VertxHttp2Stream$write__1093 v0;
v0 := @this: io.vertx.core.http.impl.VertxHttp2Stream$write__1093;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.http.impl.VertxHttp2Stream$write__1093: io.vertx.core.streams.impl.InboundBuffer cap0>;
virtualinvoke v2.<io.vertx.core.streams.impl.InboundBuffer: boolean write(java.lang.Object)>(v1);
return;
}
}