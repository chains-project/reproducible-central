class io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2 extends java.lang.Object implements java.util.Iterator
{
final java.util.Iterator val$i;
final io.vertx.core.http.impl.headers.Http2HeadersAdaptor this$0;
void <init>(io.vertx.core.http.impl.headers.Http2HeadersAdaptor, java.util.Iterator)
{
io.vertx.core.http.impl.headers.Http2HeadersAdaptor v1;
java.util.Iterator v2;
io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2 v0;
v0 := @this: io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2;
v1 := @parameter0: io.vertx.core.http.impl.headers.Http2HeadersAdaptor;
v2 := @parameter1: java.util.Iterator;
v0.<io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2: io.vertx.core.http.impl.headers.Http2HeadersAdaptor this$0> = v1;
v0.<io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2: java.util.Iterator val$i> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean hasNext()
{
java.util.Iterator v1;
io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2 v0;
boolean v2;
v0 := @this: io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2;
v1 = v0.<io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2: java.util.Iterator val$i>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.util.Map$Entry next()
{
java.util.Iterator v1;
java.lang.Object v2;
io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2$1 v3;
io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2 v0;
v0 := @this: io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2;
v1 = v0.<io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2: java.util.Iterator val$i>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v3 = new io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2$1;
specialinvoke v3.<io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2$1: void <init>(io.vertx.core.http.impl.headers.Http2HeadersAdaptor$2,java.util.Map$Entry)>(v0, v2);
return v3;
}
}