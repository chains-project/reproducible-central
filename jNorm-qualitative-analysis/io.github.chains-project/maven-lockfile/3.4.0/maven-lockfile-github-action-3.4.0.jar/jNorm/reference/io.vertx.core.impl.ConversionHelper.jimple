public class io.vertx.core.impl.ConversionHelper extends java.lang.Object
{
public void <init>()
{
io.vertx.core.impl.ConversionHelper v0;
v0 := @this: io.vertx.core.impl.ConversionHelper;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Object toObject(java.lang.Object)
{
io.vertx.core.json.JsonArray v4;
io.vertx.core.json.JsonObject v2;
java.lang.Object v0;
java.lang.String v6;
boolean v1, v3, v5;
v0 := @parameter0: java.lang.Object;
v1 = v0 instanceof java.util.Map;
if v1 == 0 goto label1;
v2 = staticinvoke <io.vertx.core.impl.ConversionHelper: io.vertx.core.json.JsonObject toJsonObject(java.util.Map)>(v0);
return v2;
label1:
v3 = v0 instanceof java.util.List;
if v3 == 0 goto label2;
v4 = staticinvoke <io.vertx.core.impl.ConversionHelper: io.vertx.core.json.JsonArray toJsonArray(java.util.List)>(v0);
return v4;
label2:
v5 = v0 instanceof java.lang.CharSequence;
if v5 == 0 goto label3;
v6 = virtualinvoke v0.<java.lang.Object: java.lang.String toString()>();
return v6;
label3:
return v0;
}
private static java.lang.Object toJsonElement(java.lang.Object)
{
byte[] v9;
java.util.Base64$Encoder v8;
io.vertx.core.json.JsonArray v4;
io.vertx.core.json.JsonObject v2;
java.lang.Object v0;
java.lang.String v10, v6;
boolean v1, v3, v5, v7;
v0 := @parameter0: java.lang.Object;
v1 = v0 instanceof java.util.Map;
if v1 == 0 goto label1;
v2 = staticinvoke <io.vertx.core.impl.ConversionHelper: io.vertx.core.json.JsonObject toJsonObject(java.util.Map)>(v0);
return v2;
label1:
v3 = v0 instanceof java.util.List;
if v3 == 0 goto label2;
v4 = staticinvoke <io.vertx.core.impl.ConversionHelper: io.vertx.core.json.JsonArray toJsonArray(java.util.List)>(v0);
return v4;
label2:
v5 = v0 instanceof java.lang.CharSequence;
if v5 == 0 goto label3;
v6 = virtualinvoke v0.<java.lang.Object: java.lang.String toString()>();
return v6;
label3:
v7 = v0 instanceof io.vertx.core.buffer.Buffer;
if v7 == 0 goto label4;
v8 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v9 = interfaceinvoke v0.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
v10 = virtualinvoke v8.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v9);
return v10;
label4:
return v0;
}
public static io.vertx.core.json.JsonObject toJsonObject(java.util.Map)
{
java.util.LinkedHashMap v1;
java.util.function.Consumer v3;
java.util.Map v0;
java.util.Set v2;
io.vertx.core.json.JsonObject v4;
v0 := @parameter0: java.util.Map;
if v0 != null goto label1;
return null;
label1:
v1 = new java.util.LinkedHashMap;
specialinvoke v1.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v0);
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = staticinvoke <io.vertx.core.impl.ConversionHelper$lambda_toJsonObject_0__1524: java.util.function.Consumer bootstrap$()>();
interfaceinvoke v2.<java.util.Set: void forEach(java.util.function.Consumer)>(v3);
v4 = new io.vertx.core.json.JsonObject;
specialinvoke v4.<io.vertx.core.json.JsonObject: void <init>(java.util.Map)>(v1);
return v4;
}
public static io.vertx.core.json.JsonArray toJsonArray(java.util.List)
{
io.vertx.core.json.JsonArray v6;
java.util.List v0;
int v2, v3;
java.lang.Object v4, v5;
java.util.ArrayList v1;
v0 := @parameter0: java.util.List;
if v0 != null goto label1;
return null;
label1:
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v0);
v2 = 0;
label2:
v3 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 >= v3 goto label3;
v4 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v2);
v5 = staticinvoke <io.vertx.core.impl.ConversionHelper: java.lang.Object toJsonElement(java.lang.Object)>(v4);
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v2, v5);
v2 = v2 + 1;
goto label2;
label3:
v6 = new io.vertx.core.json.JsonArray;
specialinvoke v6.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v1);
return v6;
}
public static java.lang.Object fromObject(java.lang.Object)
{
java.util.Base64$Encoder v9;
java.util.List v4;
java.time.format.DateTimeFormatter v6;
java.util.Map v2;
java.lang.Object v0;
java.lang.String v10, v12, v7;
boolean v1, v11, v3, v5, v8;
v0 := @parameter0: java.lang.Object;
v1 = v0 instanceof io.vertx.core.json.JsonObject;
if v1 == 0 goto label1;
v2 = staticinvoke <io.vertx.core.impl.ConversionHelper: java.util.Map fromJsonObject(io.vertx.core.json.JsonObject)>(v0);
return v2;
label1:
v3 = v0 instanceof io.vertx.core.json.JsonArray;
if v3 == 0 goto label2;
v4 = staticinvoke <io.vertx.core.impl.ConversionHelper: java.util.List fromJsonArray(io.vertx.core.json.JsonArray)>(v0);
return v4;
label2:
v5 = v0 instanceof java.time.Instant;
if v5 == 0 goto label3;
v6 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v7 = virtualinvoke v6.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v0);
return v7;
label3:
v8 = v0 instanceof byte[];
if v8 == 0 goto label4;
v9 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v10 = virtualinvoke v9.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v0);
return v10;
label4:
v11 = v0 instanceof java.lang.Enum;
if v11 == 0 goto label5;
v12 = virtualinvoke v0.<java.lang.Enum: java.lang.String name()>();
return v12;
label5:
return v0;
}
public static java.util.Map fromJsonObject(io.vertx.core.json.JsonObject)
{
java.util.LinkedHashMap v1;
java.util.function.Consumer v4;
java.util.Map v2;
java.util.Set v3;
io.vertx.core.json.JsonObject v0;
v0 := @parameter0: io.vertx.core.json.JsonObject;
if v0 != null goto label1;
return null;
label1:
v1 = new java.util.LinkedHashMap;
v2 = virtualinvoke v0.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
specialinvoke v1.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v2);
v3 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v4 = staticinvoke <io.vertx.core.impl.ConversionHelper$lambda_fromJsonObject_1__1525: java.util.function.Consumer bootstrap$()>();
interfaceinvoke v3.<java.util.Set: void forEach(java.util.function.Consumer)>(v4);
return v1;
}
public static java.util.List fromJsonArray(io.vertx.core.json.JsonArray)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v3, v4;
java.lang.Object v5, v6;
java.util.ArrayList v1;
v0 := @parameter0: io.vertx.core.json.JsonArray;
if v0 != null goto label1;
return null;
label1:
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<io.vertx.core.json.JsonArray: java.util.List getList()>();
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v3 = 0;
label2:
v4 = interfaceinvoke v1.<java.util.List: int size()>();
if v3 >= v4 goto label3;
v5 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v3);
v6 = staticinvoke <io.vertx.core.impl.ConversionHelper: java.lang.Object fromObject(java.lang.Object)>(v5);
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v3, v6);
v3 = v3 + 1;
goto label2;
label3:
return v1;
}
}