class io.vertx.core.impl.DeploymentManager$VerticleHolder extends java.lang.Object
{
final io.vertx.core.Verticle verticle;
final io.vertx.core.impl.ContextBase context;
final io.vertx.core.impl.WorkerPool workerPool;
final io.vertx.core.impl.CloseFuture closeFuture;
void <init>(io.vertx.core.Verticle, io.vertx.core.impl.ContextBase, io.vertx.core.impl.WorkerPool, io.vertx.core.impl.CloseFuture)
{
io.vertx.core.impl.ContextBase v2;
io.vertx.core.impl.CloseFuture v4;
io.vertx.core.Verticle v1;
io.vertx.core.impl.WorkerPool v3;
io.vertx.core.impl.DeploymentManager$VerticleHolder v0;
v0 := @this: io.vertx.core.impl.DeploymentManager$VerticleHolder;
v1 := @parameter0: io.vertx.core.Verticle;
v2 := @parameter1: io.vertx.core.impl.ContextBase;
v3 := @parameter2: io.vertx.core.impl.WorkerPool;
v4 := @parameter3: io.vertx.core.impl.CloseFuture;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.impl.DeploymentManager$VerticleHolder: io.vertx.core.Verticle verticle> = v1;
v0.<io.vertx.core.impl.DeploymentManager$VerticleHolder: io.vertx.core.impl.ContextBase context> = v2;
v0.<io.vertx.core.impl.DeploymentManager$VerticleHolder: io.vertx.core.impl.WorkerPool workerPool> = v3;
v0.<io.vertx.core.impl.DeploymentManager$VerticleHolder: io.vertx.core.impl.CloseFuture closeFuture> = v4;
return;
}
void close(io.vertx.core.Handler)
{
io.vertx.core.impl.CloseFuture v2;
io.vertx.core.Handler v1, v4;
io.vertx.core.impl.DeploymentManager$VerticleHolder v0;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.impl.DeploymentManager$VerticleHolder;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.impl.DeploymentManager$VerticleHolder: io.vertx.core.impl.CloseFuture closeFuture>;
v3 = virtualinvoke v2.<io.vertx.core.impl.CloseFuture: io.vertx.core.Future close()>();
v4 = staticinvoke <io.vertx.core.impl.DeploymentManager$VerticleHolder$lambda_close_0__1500: io.vertx.core.Handler bootstrap$(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.Handler)>(v0, v1);
interfaceinvoke v3.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v4);
return;
}
}