class io.vertx.core.impl.SharedClientHolder$Hook extends java.lang.Object implements io.vertx.core.Closeable
{
private final io.vertx.core.Vertx vertx;
private final io.vertx.core.impl.CloseFuture closeFuture;
private final java.lang.String clientKey;
private final java.lang.String clientName;
private void <init>(io.vertx.core.Vertx, java.lang.String, java.lang.String)
{
io.vertx.core.impl.CloseFuture v4;
io.vertx.core.Vertx v1;
java.lang.String v2, v3;
io.vertx.core.impl.SharedClientHolder$Hook v0;
v0 := @this: io.vertx.core.impl.SharedClientHolder$Hook;
v1 := @parameter0: io.vertx.core.Vertx;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.impl.SharedClientHolder$Hook: io.vertx.core.Vertx vertx> = v1;
v4 = new io.vertx.core.impl.CloseFuture;
specialinvoke v4.<io.vertx.core.impl.CloseFuture: void <init>()>();
v0.<io.vertx.core.impl.SharedClientHolder$Hook: io.vertx.core.impl.CloseFuture closeFuture> = v4;
v0.<io.vertx.core.impl.SharedClientHolder$Hook: java.lang.String clientKey> = v2;
v0.<io.vertx.core.impl.SharedClientHolder$Hook: java.lang.String clientName> = v3;
return;
}
public void close(io.vertx.core.Promise)
{
io.vertx.core.Promise v1;
java.util.function.BiFunction v7;
io.vertx.core.Vertx v2;
io.vertx.core.impl.SharedClientHolder$Hook v0;
io.vertx.core.shareddata.SharedData v3;
io.vertx.core.shareddata.LocalMap v5;
io.vertx.core.impl.CloseFuture v9;
java.lang.Object v8;
java.lang.String v4, v6;
v0 := @this: io.vertx.core.impl.SharedClientHolder$Hook;
v1 := @parameter0: io.vertx.core.Promise;
v2 = v0.<io.vertx.core.impl.SharedClientHolder$Hook: io.vertx.core.Vertx vertx>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.shareddata.SharedData sharedData()>();
v4 = v0.<io.vertx.core.impl.SharedClientHolder$Hook: java.lang.String clientKey>;
v5 = interfaceinvoke v3.<io.vertx.core.shareddata.SharedData: io.vertx.core.shareddata.LocalMap getLocalMap(java.lang.String)>(v4);
v6 = v0.<io.vertx.core.impl.SharedClientHolder$Hook: java.lang.String clientName>;
v7 = staticinvoke <io.vertx.core.impl.SharedClientHolder$Hook$lambda_close_0__1532: java.util.function.BiFunction bootstrap$(io.vertx.core.impl.SharedClientHolder$Hook)>(v0);
v8 = interfaceinvoke v5.<io.vertx.core.shareddata.LocalMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>(v6, v7);
if v8 != null goto label1;
v9 = v0.<io.vertx.core.impl.SharedClientHolder$Hook: io.vertx.core.impl.CloseFuture closeFuture>;
virtualinvoke v9.<io.vertx.core.impl.CloseFuture: void close(io.vertx.core.Promise)>(v1);
goto label2;
label1:
interfaceinvoke v1.<io.vertx.core.Promise: void complete()>();
label2:
return;
}
}