class io.vertx.core.impl.VertxImpl$1 extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
final io.vertx.core.Handler val$completionHandler;
final io.vertx.core.impl.VertxImpl this$0;
void <init>(io.vertx.core.impl.VertxImpl, io.vertx.core.Handler)
{
io.vertx.core.impl.VertxImpl v1;
io.vertx.core.Handler v2;
io.vertx.core.impl.VertxImpl$1 v0;
v0 := @this: io.vertx.core.impl.VertxImpl$1;
v1 := @parameter0: io.vertx.core.impl.VertxImpl;
v2 := @parameter1: io.vertx.core.Handler;
v0.<io.vertx.core.impl.VertxImpl$1: io.vertx.core.impl.VertxImpl this$0> = v1;
v0.<io.vertx.core.impl.VertxImpl$1: io.vertx.core.Handler val$completionHandler> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
io.vertx.core.impl.logging.Logger v3;
java.lang.Throwable v4;
io.vertx.core.impl.VertxImpl v5;
io.netty.channel.EventLoopGroup v6;
io.vertx.core.impl.VertxImpl$1 v0;
io.vertx.core.impl.VertxImpl$1$1 v9;
java.util.concurrent.TimeUnit v7;
io.netty.util.concurrent.Future v1, v8;
boolean v2;
v0 := @this: io.vertx.core.impl.VertxImpl$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 != 0 goto label1;
v3 = <io.vertx.core.impl.VertxImpl: io.vertx.core.impl.logging.Logger log>;
v4 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
interfaceinvoke v3.<io.vertx.core.impl.logging.Logger: void warn(java.lang.Object,java.lang.Throwable)>("Failure in shutting down acceptor event loop group", v4);
label1:
v5 = v0.<io.vertx.core.impl.VertxImpl$1: io.vertx.core.impl.VertxImpl this$0>;
v6 = v5.<io.vertx.core.impl.VertxImpl: io.netty.channel.EventLoopGroup eventLoopGroup>;
v7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
v8 = interfaceinvoke v6.<io.netty.channel.EventLoopGroup: io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit)>(0L, 10L, v7);
v9 = new io.vertx.core.impl.VertxImpl$1$1;
specialinvoke v9.<io.vertx.core.impl.VertxImpl$1$1: void <init>(io.vertx.core.impl.VertxImpl$1)>(v0);
interfaceinvoke v8.<io.netty.util.concurrent.Future: io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)>(v9);
return;
}
}