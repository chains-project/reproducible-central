class io.vertx.core.impl.future.Transformation extends io.vertx.core.impl.future.Operation implements io.vertx.core.impl.future.Listener
{
private final io.vertx.core.Future future;
private final java.util.function.Function mapper;
void <init>(io.vertx.core.impl.ContextInternal, io.vertx.core.Future, java.util.function.Function)
{
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.Future v2;
java.util.function.Function v3;
io.vertx.core.impl.future.Transformation v0;
v0 := @this: io.vertx.core.impl.future.Transformation;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: io.vertx.core.Future;
v3 := @parameter2: java.util.function.Function;
specialinvoke v0.<io.vertx.core.impl.future.Operation: void <init>(io.vertx.core.impl.ContextInternal)>(v1);
v0.<io.vertx.core.impl.future.Transformation: io.vertx.core.Future future> = v2;
v0.<io.vertx.core.impl.future.Transformation: java.util.function.Function mapper> = v3;
return;
}
public void onSuccess(java.lang.Object)
{
java.lang.Throwable v5;
java.lang.Object v1, v4;
io.vertx.core.impl.future.Listener v6;
io.vertx.core.Future v3;
java.util.function.Function v2;
io.vertx.core.impl.future.Transformation v0;
v0 := @this: io.vertx.core.impl.future.Transformation;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<io.vertx.core.impl.future.Transformation: java.util.function.Function mapper>;
v3 = v0.<io.vertx.core.impl.future.Transformation: io.vertx.core.Future future>;
v4 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.future.Transformation: boolean tryFail(java.lang.Throwable)>(v5);
return;
label4:
v6 = specialinvoke v0.<io.vertx.core.impl.future.Transformation: io.vertx.core.impl.future.Listener newListener()>();
interfaceinvoke v4.<io.vertx.core.impl.future.FutureInternal: void addListener(io.vertx.core.impl.future.Listener)>(v6);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1, v5;
java.lang.Object v4;
io.vertx.core.impl.future.Listener v6;
io.vertx.core.Future v3;
java.util.function.Function v2;
io.vertx.core.impl.future.Transformation v0;
v0 := @this: io.vertx.core.impl.future.Transformation;
v1 := @parameter0: java.lang.Throwable;
label1:
v2 = v0.<io.vertx.core.impl.future.Transformation: java.util.function.Function mapper>;
v3 = v0.<io.vertx.core.impl.future.Transformation: io.vertx.core.Future future>;
v4 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.future.Transformation: boolean tryFail(java.lang.Throwable)>(v5);
return;
label4:
v6 = specialinvoke v0.<io.vertx.core.impl.future.Transformation: io.vertx.core.impl.future.Listener newListener()>();
interfaceinvoke v4.<io.vertx.core.impl.future.FutureInternal: void addListener(io.vertx.core.impl.future.Listener)>(v6);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private io.vertx.core.impl.future.Listener newListener()
{
io.vertx.core.impl.future.Transformation$1 v1;
io.vertx.core.impl.future.Transformation v0;
v0 := @this: io.vertx.core.impl.future.Transformation;
v1 = new io.vertx.core.impl.future.Transformation$1;
specialinvoke v1.<io.vertx.core.impl.future.Transformation$1: void <init>(io.vertx.core.impl.future.Transformation)>(v0);
return v1;
}
}