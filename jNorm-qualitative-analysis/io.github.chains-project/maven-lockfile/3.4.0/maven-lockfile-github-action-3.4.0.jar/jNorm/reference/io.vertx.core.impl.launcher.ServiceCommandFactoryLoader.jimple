public class io.vertx.core.impl.launcher.ServiceCommandFactoryLoader extends java.lang.Object implements io.vertx.core.spi.launcher.CommandFactoryLookup
{
private java.util.Collection commands;
public void <init>()
{
io.vertx.core.impl.launcher.ServiceCommandFactoryLoader v0;
java.util.Collection v3;
java.lang.Class v1;
java.lang.ClassLoader v2;
v0 := @this: io.vertx.core.impl.launcher.ServiceCommandFactoryLoader;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v3 = staticinvoke <io.vertx.core.ServiceHelper: java.util.Collection loadFactories(java.lang.Class,java.lang.ClassLoader)>(class "Lio/vertx/core/spi/launcher/CommandFactory;", v2);
v0.<io.vertx.core.impl.launcher.ServiceCommandFactoryLoader: java.util.Collection commands> = v3;
return;
}
public void <init>(java.lang.ClassLoader)
{
java.lang.ClassLoader v1;
io.vertx.core.impl.launcher.ServiceCommandFactoryLoader v0;
java.util.Collection v2;
v0 := @this: io.vertx.core.impl.launcher.ServiceCommandFactoryLoader;
v1 := @parameter0: java.lang.ClassLoader;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.vertx.core.ServiceHelper: java.util.Collection loadFactories(java.lang.Class,java.lang.ClassLoader)>(class "Lio/vertx/core/spi/launcher/CommandFactory;", v1);
v0.<io.vertx.core.impl.launcher.ServiceCommandFactoryLoader: java.util.Collection commands> = v2;
return;
}
public java.util.Collection lookup()
{
java.util.function.Consumer v4;
java.util.stream.Stream v3;
io.vertx.core.impl.launcher.ServiceCommandFactoryLoader v0;
java.util.Collection v2;
java.util.ArrayList v1;
v0 := @this: io.vertx.core.impl.launcher.ServiceCommandFactoryLoader;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<io.vertx.core.impl.launcher.ServiceCommandFactoryLoader: java.util.Collection commands>;
v3 = interfaceinvoke v2.<java.util.Collection: java.util.stream.Stream stream()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.vertx.core.impl.launcher.ServiceCommandFactoryLoader$add__1562: java.util.function.Consumer bootstrap$(java.util.List)>(v1);
interfaceinvoke v3.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v4);
return v1;
}
}