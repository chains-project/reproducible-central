public class io.vertx.core.impl.launcher.VertxCommandLauncher extends io.vertx.core.cli.UsageMessageFormatter
{
protected static java.util.List PROCESS_ARGS;
protected final java.util.List lookups;
protected final java.util.Map commandByName;
protected java.lang.Object main;
public static java.util.List getProcessArguments()
{
java.util.List v0;
v0 = <io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.List PROCESS_ARGS>;
return v0;
}
public void <init>()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.util.List v2;
io.vertx.core.impl.launcher.ServiceCommandFactoryLoader v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = new io.vertx.core.impl.launcher.ServiceCommandFactoryLoader;
specialinvoke v1.<io.vertx.core.impl.launcher.ServiceCommandFactoryLoader: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
specialinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void <init>(java.util.Collection)>(v2);
return;
}
public void <init>(java.util.Collection)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.util.TreeMap v3;
java.util.Collection v1;
java.util.ArrayList v2;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.util.Collection;
specialinvoke v0.<io.vertx.core.cli.UsageMessageFormatter: void <init>()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>(java.util.Collection)>(v1);
v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.List lookups> = v2;
v3 = new java.util.TreeMap;
specialinvoke v3.<java.util.TreeMap: void <init>()>();
v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName> = v3;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void load()>();
return;
}
protected void load()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.util.function.Consumer v6;
java.util.List v1;
java.util.Iterator v2;
java.util.Collection v5;
java.lang.Object v4;
boolean v3;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.List lookups>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<io.vertx.core.spi.launcher.CommandFactoryLookup: java.util.Collection lookup()>();
v6 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher$lambda_load_0__1563: java.util.function.Consumer bootstrap$(io.vertx.core.impl.launcher.VertxCommandLauncher)>(v0);
interfaceinvoke v5.<java.util.Collection: void forEach(java.util.function.Consumer)>(v6);
goto label1;
label2:
return;
}
public io.vertx.core.impl.launcher.VertxCommandLauncher register(io.vertx.core.spi.launcher.CommandFactory)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
io.vertx.core.cli.CLI v2;
io.vertx.core.spi.launcher.CommandFactory v1;
java.util.Map v3;
io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration v5;
java.lang.String v4;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: io.vertx.core.spi.launcher.CommandFactory;
v2 = interfaceinvoke v1.<io.vertx.core.spi.launcher.CommandFactory: io.vertx.core.cli.CLI define()>();
v3 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v4 = interfaceinvoke v2.<io.vertx.core.cli.CLI: java.lang.String getName()>();
v5 = new io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration;
specialinvoke v5.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: void <init>(io.vertx.core.spi.launcher.CommandFactory,io.vertx.core.cli.CLI)>(v1, v2);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v5);
return v0;
}
public io.vertx.core.impl.launcher.VertxCommandLauncher register(java.lang.Class)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
io.vertx.core.cli.CLI v3;
java.util.Map v4;
io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration v6;
java.lang.Class v1;
java.lang.String v5;
io.vertx.core.spi.launcher.DefaultCommandFactory v2;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.Class;
v2 = new io.vertx.core.spi.launcher.DefaultCommandFactory;
specialinvoke v2.<io.vertx.core.spi.launcher.DefaultCommandFactory: void <init>(java.lang.Class)>(v1);
v3 = virtualinvoke v2.<io.vertx.core.spi.launcher.DefaultCommandFactory: io.vertx.core.cli.CLI define()>();
v4 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v5 = interfaceinvoke v3.<io.vertx.core.cli.CLI: java.lang.String getName()>();
v6 = new io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration;
specialinvoke v6.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: void <init>(io.vertx.core.spi.launcher.CommandFactory,io.vertx.core.cli.CLI)>(v2, v3);
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v6);
return v0;
}
public io.vertx.core.impl.launcher.VertxCommandLauncher register(java.lang.Class, java.util.function.Supplier)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration v7;
java.util.function.Supplier v2;
io.vertx.core.cli.CLI v4;
java.util.Map v5;
java.lang.Class v1;
java.lang.String v6;
io.vertx.core.spi.launcher.DefaultCommandFactory v3;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.function.Supplier;
v3 = new io.vertx.core.spi.launcher.DefaultCommandFactory;
specialinvoke v3.<io.vertx.core.spi.launcher.DefaultCommandFactory: void <init>(java.lang.Class,java.util.function.Supplier)>(v1, v2);
v4 = virtualinvoke v3.<io.vertx.core.spi.launcher.DefaultCommandFactory: io.vertx.core.cli.CLI define()>();
v5 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v6 = interfaceinvoke v4.<io.vertx.core.cli.CLI: java.lang.String getName()>();
v7 = new io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration;
specialinvoke v7.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: void <init>(io.vertx.core.spi.launcher.CommandFactory,io.vertx.core.cli.CLI)>(v3, v4);
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v7);
return v0;
}
public io.vertx.core.impl.launcher.VertxCommandLauncher unregister(java.lang.String)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.String v1;
java.util.Map v2;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return v0;
}
public java.util.Collection getCommandNames()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.util.Set v2;
java.util.Map v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
protected io.vertx.core.spi.launcher.Command getNewCommandInstance(java.lang.String, io.vertx.core.cli.CommandLine)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
io.vertx.core.cli.CommandLine v2;
io.vertx.core.spi.launcher.CommandFactory v5;
java.util.Map v3;
java.lang.Object v4;
io.vertx.core.spi.launcher.Command v6;
java.lang.String v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.cli.CommandLine;
v3 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v4 == null goto label1;
v5 = v4.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: io.vertx.core.spi.launcher.CommandFactory factory>;
v6 = interfaceinvoke v5.<io.vertx.core.spi.launcher.CommandFactory: io.vertx.core.spi.launcher.Command create(io.vertx.core.cli.CommandLine)>(v2);
virtualinvoke v4.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: void addCommand(io.vertx.core.spi.launcher.Command)>(v6);
return v6;
label1:
return null;
}
public io.vertx.core.spi.launcher.Command getExistingCommandInstance(java.lang.String)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.util.Map v2;
java.lang.Object v3;
io.vertx.core.spi.launcher.Command v4;
java.lang.String v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: io.vertx.core.spi.launcher.Command getCommand()>();
return v4;
label1:
return null;
}
public transient void execute(java.lang.String, java.lang.String[])
{
io.vertx.core.spi.launcher.ExecutionContext v15;
java.lang.Throwable v25, v27;
io.vertx.core.cli.CommandLine v13;
java.lang.String[] v2, v4;
java.util.Map v6;
int v9;
java.lang.String v1, v10, v20, v21;
boolean v11, v26, v3, v5;
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
io.vertx.core.cli.CLIException v22, v23;
java.lang.RuntimeException v24;
java.util.List v12;
io.vertx.core.cli.CLI v8;
java.lang.Class v19;
java.lang.Object v16, v17, v18, v7;
io.vertx.core.spi.launcher.Command v14;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String[];
if v1 == null goto label02;
v3 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher: boolean isAskingForVersion(java.lang.String)>(v1);
if v3 == 0 goto label01;
v4 = newarray (java.lang.String)[0];
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>("version", v4);
return;
label01:
if v1 == null goto label02;
v5 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher: boolean isAskingForHelp(java.lang.String)>(v1);
if v5 == 0 goto label03;
label02:
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printGlobalUsage()>();
return;
label03:
v6 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v7 = interfaceinvoke v6.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v7 != null goto label04;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printCommandNotFound(java.lang.String)>(v1);
return;
label04:
v8 = v7.<io.vertx.core.impl.launcher.VertxCommandLauncher$CommandRegistration: io.vertx.core.cli.CLI cli>;
label05:
v9 = lengthof v2;
if v9 < 1 goto label07;
v10 = v2[0];
v11 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher: boolean isAskingForHelp(java.lang.String)>(v10);
if v11 == 0 goto label07;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printCommandUsage(io.vertx.core.cli.CLI)>(v8);
label06:
return;
label07:
v12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v13 = interfaceinvoke v8.<io.vertx.core.cli.CLI: io.vertx.core.cli.CommandLine parse(java.util.List)>(v12);
v14 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: io.vertx.core.spi.launcher.Command getNewCommandInstance(java.lang.String,io.vertx.core.cli.CommandLine)>(v1, v13);
v15 = new io.vertx.core.spi.launcher.ExecutionContext;
specialinvoke v15.<io.vertx.core.spi.launcher.ExecutionContext: void <init>(io.vertx.core.spi.launcher.Command,io.vertx.core.impl.launcher.VertxCommandLauncher,io.vertx.core.cli.CommandLine)>(v14, v0, v13);
v16 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.Object main>;
if v16 == null goto label08;
v17 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.Object main>;
virtualinvoke v15.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object put(java.lang.Object,java.lang.Object)>("Main", v17);
v18 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.Object main>;
v19 = virtualinvoke v18.<java.lang.Object: java.lang.Class getClass()>();
v20 = virtualinvoke v19.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v15.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object put(java.lang.Object,java.lang.Object)>("Main-Class", v20);
v21 = specialinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getFromManifest(java.lang.String)>("Default-Verticle-Factory");
virtualinvoke v15.<io.vertx.core.spi.launcher.ExecutionContext: java.lang.Object put(java.lang.Object,java.lang.Object)>("Default-Verticle-Factory", v21);
label08:
staticinvoke <io.vertx.core.cli.annotations.CLIConfigurator: void inject(io.vertx.core.cli.CommandLine,java.lang.Object)>(v13, v14);
interfaceinvoke v14.<io.vertx.core.spi.launcher.Command: void setUp(io.vertx.core.spi.launcher.ExecutionContext)>(v15);
interfaceinvoke v14.<io.vertx.core.spi.launcher.Command: void run()>();
interfaceinvoke v14.<io.vertx.core.spi.launcher.Command: void tearDown()>();
label09:
goto label14;
label10:
v22 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printSpecificException(io.vertx.core.cli.CLI,java.lang.Exception)>(v8, v22);
goto label14;
label11:
v23 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printGenericExecutionError(io.vertx.core.cli.CLI,io.vertx.core.cli.CLIException)>(v8, v23);
goto label14;
label12:
v24 := @caughtexception;
v25 = virtualinvoke v24.<java.lang.RuntimeException: java.lang.Throwable getCause()>();
v26 = v25 instanceof io.vertx.core.cli.CLIException;
if v26 == 0 goto label13;
v27 = virtualinvoke v24.<java.lang.RuntimeException: java.lang.Throwable getCause()>();
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printGenericExecutionError(io.vertx.core.cli.CLI,io.vertx.core.cli.CLIException)>(v8, v27);
return;
label13:
throw v24;
label14:
return;
catch io.vertx.core.cli.MissingOptionException from label05 to label06 with label10;
catch io.vertx.core.cli.MissingValueException from label05 to label06 with label10;
catch io.vertx.core.cli.InvalidValueException from label05 to label06 with label10;
catch io.vertx.core.cli.MissingOptionException from label07 to label09 with label10;
catch io.vertx.core.cli.MissingValueException from label07 to label09 with label10;
catch io.vertx.core.cli.InvalidValueException from label07 to label09 with label10;
catch io.vertx.core.cli.CLIException from label05 to label06 with label11;
catch io.vertx.core.cli.CLIException from label07 to label09 with label11;
catch java.lang.RuntimeException from label05 to label06 with label12;
catch java.lang.RuntimeException from label07 to label09 with label12;
}
protected void printCommandUsage(io.vertx.core.cli.CLI)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.PrintStream v4;
io.vertx.core.cli.CLI v1;
java.lang.StringBuilder v2;
java.lang.String v3, v5;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: io.vertx.core.cli.CLI;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getCommandLinePrefix()>();
interfaceinvoke v1.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI usage(java.lang.StringBuilder,java.lang.String)>(v2, v3);
v4 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.io.PrintStream getPrintStream()>();
v5 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v4.<java.io.PrintStream: void println(java.lang.String)>(v5);
return;
}
protected void printGenericExecutionError(io.vertx.core.cli.CLI, io.vertx.core.cli.CLIException)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.PrintStream v10, v3;
java.lang.Throwable v8, v9;
io.vertx.core.cli.CLIException v2;
io.vertx.core.cli.CLI v1;
java.lang.String v4, v5, v6, v7;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: io.vertx.core.cli.CLI;
v2 := @parameter1: io.vertx.core.cli.CLIException;
v3 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.io.PrintStream getPrintStream()>();
v4 = interfaceinvoke v1.<io.vertx.core.cli.CLI: java.lang.String getName()>();
v5 = virtualinvoke v2.<io.vertx.core.cli.CLIException: java.lang.String getMessage()>();
v6 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v4, v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error while executing command \u0001: \u0001\u0001");
virtualinvoke v3.<java.io.PrintStream: void println(java.lang.String)>(v7);
v8 = virtualinvoke v2.<io.vertx.core.cli.CLIException: java.lang.Throwable getCause()>();
if v8 == null goto label1;
v9 = virtualinvoke v2.<io.vertx.core.cli.CLIException: java.lang.Throwable getCause()>();
v10 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.io.PrintStream getPrintStream()>();
virtualinvoke v9.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(v10);
label1:
return;
}
protected void printSpecificException(io.vertx.core.cli.CLI, java.lang.Exception)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.PrintStream v3;
io.vertx.core.cli.CLI v1;
java.lang.String v4, v5, v6;
java.lang.Exception v2;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: io.vertx.core.cli.CLI;
v2 := @parameter1: java.lang.Exception;
v3 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.io.PrintStream getPrintStream()>();
v4 = virtualinvoke v2.<java.lang.Exception: java.lang.String getMessage()>();
v5 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
virtualinvoke v3.<java.io.PrintStream: void println(java.lang.String)>(v6);
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printCommandUsage(io.vertx.core.cli.CLI)>(v1);
return;
}
protected void printCommandNotFound(java.lang.String)
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.PrintStream v6;
java.lang.StringBuilder v2;
java.lang.String v1, v3, v4, v5, v7;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
v4 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getCommandLinePrefix()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v1, v3, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The command \'\u0001\' is not a valid command.\u0001See \'\u0001 --help\'");
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void buildWrapped(java.lang.StringBuilder,int,java.lang.String)>(v2, 0, v5);
v6 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.io.PrintStream getPrintStream()>();
v7 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v6.<java.io.PrintStream: void println(java.lang.String)>(v7);
return;
}
protected void printGlobalUsage()
{
java.util.function.Function v10;
java.util.Map v7;
java.lang.String v14, v16, v17, v18, v2, v20, v3, v4, v6;
java.util.stream.Collector v12;
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.PrintStream v19;
java.util.Collection v8;
java.util.stream.Stream v11, v9;
java.lang.Object v13;
java.lang.StringBuilder v1, v15, v5;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getCommandLinePrefix()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 [COMMAND] [OPTIONS] [arg...]");
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void computeUsage(java.lang.StringBuilder,java.lang.String)>(v1, v3);
v4 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
v5 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commands:");
v6 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
v7 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v8 = interfaceinvoke v7.<java.util.Map: java.util.Collection values()>();
v9 = interfaceinvoke v8.<java.util.Collection: java.util.stream.Stream stream()>();
v10 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher$lambda_printGlobalUsage_1__1564: java.util.function.Function bootstrap$()>();
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v10);
v12 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v13 = interfaceinvoke v11.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v12);
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.StringBuilder renderCommands(java.lang.StringBuilder,java.util.Collection)>(v1, v13);
v14 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
v15 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v14);
v16 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getNewLine()>();
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v16);
v17 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getCommandLinePrefix()>();
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Run \'\u0001 COMMAND --help\' for more information on a command.");
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void buildWrapped(java.lang.StringBuilder,int,java.lang.String)>(v1, 0, v18);
v19 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.io.PrintStream getPrintStream()>();
v20 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v19.<java.io.PrintStream: void println(java.lang.String)>(v20);
return;
}
protected java.lang.String getCommandLinePrefix()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.String v1, v2, v3, v4, v5;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("vertx.cli.usage.prefix");
if v1 == null goto label1;
return v1;
label1:
v2 = staticinvoke <io.vertx.core.impl.launcher.CommandLineUtils: java.lang.String getJar()>();
if v2 == null goto label2;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("java -jar \u0001");
return v3;
label2:
v4 = staticinvoke <io.vertx.core.impl.launcher.CommandLineUtils: java.lang.String getFirstSegmentOfCommand()>();
if v4 == null goto label3;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("java \u0001");
return v5;
label3:
return "vertx";
}
protected static boolean isAskingForHelp(java.lang.String)
{
java.lang.String v0;
boolean v1, v2, v3, v4, v5, v6;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("--help");
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-help");
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-h");
if v3 != 0 goto label1;
v4 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("?");
if v4 != 0 goto label1;
v5 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("/?");
if v5 == 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
protected static boolean isAskingForVersion(java.lang.String)
{
java.lang.String v0;
boolean v1, v2, v3;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-version");
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("--version");
if v2 == 0 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
public void dispatch(java.lang.String[])
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.String[] v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String[];
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void dispatch(java.lang.Object,java.lang.String[])>(null, v1);
return;
}
public void dispatch(java.lang.Object, java.lang.String[])
{
java.util.Map v14;
boolean v11, v22, v34, v8;
java.util.List v4, v5;
java.lang.Object[] v19, v36;
java.lang.String[] v12, v2, v24, v29;
int v13, v18, v20, v27, v28, v30, v32, v35, v6, v9;
java.lang.String v10, v15, v17, v21, v23, v25, v26, v31, v33, v37, v7;
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.Object v1, v16, v3;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String[];
if v1 != null goto label01;
v3 = v0;
goto label02;
label01:
v3 = v1;
label02:
v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.Object main> = v3;
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v4);
<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.List PROCESS_ARGS> = v5;
v6 = lengthof v2;
if v6 < 1 goto label03;
v7 = v2[0];
v8 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher: boolean isAskingForHelp(java.lang.String)>(v7);
if v8 == 0 goto label03;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printGlobalUsage()>();
return;
label03:
v9 = lengthof v2;
if v9 < 1 goto label04;
v10 = v2[0];
v11 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher: boolean isAskingForVersion(java.lang.String)>(v10);
if v11 == 0 goto label04;
v12 = newarray (java.lang.String)[0];
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>("version", v12);
return;
label04:
v13 = lengthof v2;
if v13 < 1 goto label05;
v14 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.Map commandByName>;
v15 = v2[0];
v16 = interfaceinvoke v14.<java.util.Map: java.lang.Object get(java.lang.Object)>(v15);
if v16 == null goto label05;
v17 = v2[0];
v18 = lengthof v2;
v19 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(v2, 1, v18);
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>(v17, v19);
return;
label05:
v20 = lengthof v2;
if v20 < 2 goto label06;
v21 = v2[1];
v22 = staticinvoke <io.vertx.core.impl.launcher.VertxCommandLauncher: boolean isAskingForHelp(java.lang.String)>(v21);
if v22 == 0 goto label06;
v23 = v2[0];
v24 = newarray (java.lang.String)[1];
v24[0] = "--help";
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>(v23, v24);
return;
label06:
v25 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getMainVerticle()>();
v26 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getCommandFromManifest()>();
if v25 == null goto label07;
v27 = lengthof v2;
v28 = v27 + 1;
v29 = newarray (java.lang.String)[v28];
v29[0] = v25;
v30 = lengthof v2;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v29, 1, v30);
v31 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getDefaultCommand()>();
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>(v31, v29);
return;
label07:
if v26 == null goto label08;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>(v26, v2);
return;
label08:
v32 = lengthof v2;
if v32 != 0 goto label09;
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printGlobalUsage()>();
goto label11;
label09:
v33 = v2[0];
v34 = virtualinvoke v33.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-ha");
if v34 == 0 goto label10;
v35 = lengthof v2;
v36 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(v2, 1, v35);
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void execute(java.lang.String,java.lang.String[])>("bare", v36);
goto label11;
label10:
v37 = v2[0];
virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void printCommandNotFound(java.lang.String)>(v37);
label11:
return;
}
protected java.lang.String getDefaultCommand()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.String v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = virtualinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getCommandFromManifest()>();
if v1 != null goto label1;
return "run";
label1:
return v1;
}
protected java.lang.String getCommandFromManifest()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.String v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = specialinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getFromManifest(java.lang.String)>("Main-Command");
return v1;
}
private java.lang.String getFromManifest(java.lang.String)
{
java.lang.Throwable v16;
java.util.jar.Manifest v8;
java.lang.IllegalStateException v18;
java.util.Enumeration v4;
java.lang.String v1, v10, v13, v15, v19;
boolean v14, v5;
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.IOException v17;
java.util.jar.Attributes v9;
java.lang.Class v12, v2;
java.lang.Object v11, v6;
java.lang.ClassLoader v3;
java.io.InputStream v7;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 := @parameter0: java.lang.String;
label1:
v2 = class "Lio/vertx/core/impl/launcher/commands/RunCommand;";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v4 = virtualinvoke v3.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>("META-INF/MANIFEST.MF");
label2:
v5 = interfaceinvoke v4.<java.util.Enumeration: boolean hasMoreElements()>();
if v5 == 0 goto label9;
v6 = interfaceinvoke v4.<java.util.Enumeration: java.lang.Object nextElement()>();
v7 = virtualinvoke v6.<java.net.URL: java.io.InputStream openStream()>();
label3:
v8 = new java.util.jar.Manifest;
specialinvoke v8.<java.util.jar.Manifest: void <init>(java.io.InputStream)>(v7);
v9 = virtualinvoke v8.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
v10 = virtualinvoke v9.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>("Main-Class");
v11 = v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.Object main>;
v12 = virtualinvoke v11.<java.lang.Object: java.lang.Class getClass()>();
v13 = virtualinvoke v12.<java.lang.Class: java.lang.String getName()>();
v14 = virtualinvoke v13.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v14 == 0 goto label6;
v15 = virtualinvoke v9.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(v1);
if v15 == null goto label6;
label4:
if v7 == null goto label5;
virtualinvoke v7.<java.io.InputStream: void close()>();
label5:
return v15;
label6:
if v7 == null goto label2;
virtualinvoke v7.<java.io.InputStream: void close()>();
goto label2;
label7:
v16 := @caughtexception;
throw v16;
label8:
v17 := @caughtexception;
v18 = new java.lang.IllegalStateException;
v19 = virtualinvoke v17.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v18.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v19);
throw v18;
label9:
return null;
catch java.lang.Throwable from label3 to label4 with label7;
catch java.io.IOException from label1 to label5 with label8;
catch java.io.IOException from label6 to label8 with label8;
}
public java.io.PrintStream getPrintStream()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.io.PrintStream v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = <java.lang.System: java.io.PrintStream out>;
return v1;
}
protected java.lang.String getMainVerticle()
{
io.vertx.core.impl.launcher.VertxCommandLauncher v0;
java.lang.String v1;
v0 := @this: io.vertx.core.impl.launcher.VertxCommandLauncher;
v1 = specialinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: java.lang.String getFromManifest(java.lang.String)>("Main-Verticle");
return v1;
}
public static void resetProcessArguments()
{
<io.vertx.core.impl.launcher.VertxCommandLauncher: java.util.List PROCESS_ARGS> = null;
return;
}
}