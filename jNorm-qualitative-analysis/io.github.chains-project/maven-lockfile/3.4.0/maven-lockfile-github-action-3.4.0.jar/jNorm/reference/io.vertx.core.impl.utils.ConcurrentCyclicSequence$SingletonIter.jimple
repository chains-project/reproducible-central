class io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter extends java.lang.Object implements java.util.Iterator
{
boolean next;
final io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0;
private void <init>(io.vertx.core.impl.utils.ConcurrentCyclicSequence)
{
io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter v0;
io.vertx.core.impl.utils.ConcurrentCyclicSequence v1;
v0 := @this: io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter;
v1 := @parameter0: io.vertx.core.impl.utils.ConcurrentCyclicSequence;
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter: boolean next> = 1;
return;
}
public boolean hasNext()
{
io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter v0;
boolean v1;
v0 := @this: io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter;
v1 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter: boolean next>;
return v1;
}
public java.lang.Object next()
{
io.vertx.core.impl.utils.ConcurrentCyclicSequence v2;
java.lang.Object[] v3;
io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter v0;
java.lang.Object v4;
java.util.NoSuchElementException v5;
boolean v1;
v0 := @this: io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter;
v1 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter: boolean next>;
if v1 == 0 goto label1;
v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter: boolean next> = 0;
v2 = v0.<io.vertx.core.impl.utils.ConcurrentCyclicSequence$SingletonIter: io.vertx.core.impl.utils.ConcurrentCyclicSequence this$0>;
v3 = v2.<io.vertx.core.impl.utils.ConcurrentCyclicSequence: java.lang.Object[] elements>;
v4 = v3[0];
return v4;
label1:
v5 = new java.util.NoSuchElementException;
specialinvoke v5.<java.util.NoSuchElementException: void <init>()>();
throw v5;
}
}