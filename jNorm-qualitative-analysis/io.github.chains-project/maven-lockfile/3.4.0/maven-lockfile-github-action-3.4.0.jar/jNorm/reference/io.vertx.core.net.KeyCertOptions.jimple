public interface  io.vertx.core.net.KeyCertOptions extends java.lang.Object
{
public abstract io.vertx.core.net.KeyCertOptions copy();
public abstract javax.net.ssl.KeyManagerFactory getKeyManagerFactory(io.vertx.core.Vertx) throws java.lang.Exception;
public abstract java.util.function.Function keyManagerMapper(io.vertx.core.Vertx) throws java.lang.Exception;
public java.util.function.Function keyManagerFactoryMapper(io.vertx.core.Vertx) throws java.lang.Exception
{
io.vertx.core.net.KeyCertOptions v0;
io.vertx.core.Vertx v1;
java.util.function.Function v2, v3;
v0 := @this: io.vertx.core.net.KeyCertOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = interfaceinvoke v0.<io.vertx.core.net.KeyCertOptions: java.util.function.Function keyManagerMapper(io.vertx.core.Vertx)>(v1);
v3 = staticinvoke <io.vertx.core.net.KeyCertOptions$lambda_keyManagerFactoryMapper_0__1311: java.util.function.Function bootstrap$(java.util.function.Function)>(v2);
return v3;
}
public static io.vertx.core.net.KeyCertOptions wrap(javax.net.ssl.X509KeyManager)
{
javax.net.ssl.X509KeyManager v0;
io.vertx.core.net.KeyManagerFactoryOptions v1;
v0 := @parameter0: javax.net.ssl.X509KeyManager;
v1 = new io.vertx.core.net.KeyManagerFactoryOptions;
specialinvoke v1.<io.vertx.core.net.KeyManagerFactoryOptions: void <init>(javax.net.ssl.X509KeyManager)>(v0);
return v1;
}
public static io.vertx.core.net.KeyCertOptions wrap(javax.net.ssl.KeyManagerFactory)
{
javax.net.ssl.KeyManagerFactory v0;
io.vertx.core.net.KeyManagerFactoryOptions v1;
v0 := @parameter0: javax.net.ssl.KeyManagerFactory;
v1 = new io.vertx.core.net.KeyManagerFactoryOptions;
specialinvoke v1.<io.vertx.core.net.KeyManagerFactoryOptions: void <init>(javax.net.ssl.KeyManagerFactory)>(v0);
return v1;
}
}