class io.vertx.core.net.KeyManagerFactoryWrapper extends javax.net.ssl.KeyManagerFactory
{
private static final org.slf4j.Logger LOGGER;
private static final java.lang.String KEY_MANAGER_FACTORY_ALGORITHM;
private static final java.security.Provider PROVIDER;
void <init>(javax.net.ssl.KeyManager)
{
io.vertx.core.net.KeyManagerFactoryWrapper v0;
io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper v2;
javax.net.ssl.KeyManager v1;
java.security.Provider v3;
v0 := @this: io.vertx.core.net.KeyManagerFactoryWrapper;
v1 := @parameter0: javax.net.ssl.KeyManager;
v2 = new io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper;
specialinvoke v2.<io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper: void <init>(javax.net.ssl.KeyManager)>(v1);
v3 = <io.vertx.core.net.KeyManagerFactoryWrapper: java.security.Provider PROVIDER>;
specialinvoke v0.<javax.net.ssl.KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactorySpi,java.security.Provider,java.lang.String)>(v2, v3, "no-algorithm");
return;
}
static void <clinit>()
{
org.slf4j.Logger v0;
io.vertx.core.net.KeyManagerFactoryWrapper$1 v1;
v0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lio/vertx/core/net/KeyManagerFactoryWrapper;");
<io.vertx.core.net.KeyManagerFactoryWrapper: org.slf4j.Logger LOGGER> = v0;
v1 = new io.vertx.core.net.KeyManagerFactoryWrapper$1;
specialinvoke v1.<io.vertx.core.net.KeyManagerFactoryWrapper$1: void <init>(java.lang.String,double,java.lang.String)>("", 1.0, "");
<io.vertx.core.net.KeyManagerFactoryWrapper: java.security.Provider PROVIDER> = v1;
return;
}
}