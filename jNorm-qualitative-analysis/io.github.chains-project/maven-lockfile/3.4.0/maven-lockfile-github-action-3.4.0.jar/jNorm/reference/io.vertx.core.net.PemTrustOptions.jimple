public class io.vertx.core.net.PemTrustOptions extends java.lang.Object implements io.vertx.core.net.TrustOptions, java.lang.Cloneable
{
private io.vertx.core.net.impl.KeyStoreHelper helper;
private java.util.ArrayList certPaths;
private java.util.ArrayList certValues;
public void <init>()
{
io.vertx.core.net.PemTrustOptions v0;
java.util.ArrayList v1, v2;
v0 := @this: io.vertx.core.net.PemTrustOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certPaths> = v1;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certValues> = v2;
return;
}
public void <init>(io.vertx.core.net.PemTrustOptions)
{
java.util.List v3, v5;
io.vertx.core.net.PemTrustOptions v0, v1;
java.util.ArrayList v2, v4;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.net.PemTrustOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.ArrayList;
v3 = virtualinvoke v1.<io.vertx.core.net.PemTrustOptions: java.util.List getCertPaths()>();
specialinvoke v2.<java.util.ArrayList: void <init>(java.util.Collection)>(v3);
v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certPaths> = v2;
v4 = new java.util.ArrayList;
v5 = virtualinvoke v1.<io.vertx.core.net.PemTrustOptions: java.util.List getCertValues()>();
specialinvoke v4.<java.util.ArrayList: void <init>(java.util.Collection)>(v5);
v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certValues> = v4;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.PemTrustOptions v0;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<io.vertx.core.net.PemTrustOptions: void <init>()>();
staticinvoke <io.vertx.core.net.PemTrustOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.core.net.PemTrustOptions)>(v1, v0);
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.PemTrustOptions v0;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.core.net.PemTrustOptionsConverter: void toJson(io.vertx.core.net.PemTrustOptions,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
public java.util.List getCertPaths()
{
io.vertx.core.net.PemTrustOptions v0;
java.util.ArrayList v1;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 = v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certPaths>;
return v1;
}
public io.vertx.core.net.PemTrustOptions addCertPath(java.lang.String) throws java.lang.NullPointerException
{
java.lang.String v1;
io.vertx.core.net.PemTrustOptions v0;
boolean v2, v3;
java.util.ArrayList v4;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: java.lang.String;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "No null certificate accepted");
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
staticinvoke <io.vertx.core.impl.Arguments: void require(boolean,java.lang.String)>(v3, "No empty certificate path accepted");
v4 = v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certPaths>;
virtualinvoke v4.<java.util.ArrayList: boolean add(java.lang.Object)>(v1);
return v0;
}
public java.util.List getCertValues()
{
io.vertx.core.net.PemTrustOptions v0;
java.util.ArrayList v1;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 = v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certValues>;
return v1;
}
public io.vertx.core.net.PemTrustOptions addCertValue(io.vertx.core.buffer.Buffer) throws java.lang.NullPointerException
{
io.vertx.core.buffer.Buffer v1;
io.vertx.core.net.PemTrustOptions v0;
java.util.ArrayList v2;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "No null certificate accepted");
v2 = v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certValues>;
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v1);
return v0;
}
public java.security.KeyStore loadKeyStore(io.vertx.core.Vertx) throws java.lang.Exception
{
io.vertx.core.Vertx v1;
java.security.KeyStore v3;
io.vertx.core.net.PemTrustOptions v0;
io.vertx.core.net.impl.KeyStoreHelper v2;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = virtualinvoke v0.<io.vertx.core.net.PemTrustOptions: io.vertx.core.net.impl.KeyStoreHelper getHelper(io.vertx.core.Vertx)>(v1);
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore store()>();
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public javax.net.ssl.TrustManagerFactory getTrustManagerFactory(io.vertx.core.Vertx) throws java.lang.Exception
{
javax.net.ssl.TrustManagerFactory v3;
io.vertx.core.Vertx v1;
io.vertx.core.net.PemTrustOptions v0;
io.vertx.core.net.impl.KeyStoreHelper v2;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = virtualinvoke v0.<io.vertx.core.net.PemTrustOptions: io.vertx.core.net.impl.KeyStoreHelper getHelper(io.vertx.core.Vertx)>(v1);
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.vertx.core.net.impl.KeyStoreHelper: javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal)>(v1);
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public java.util.function.Function trustManagerMapper(io.vertx.core.Vertx) throws java.lang.Exception
{
io.vertx.core.Vertx v1;
io.vertx.core.net.PemTrustOptions v0;
java.util.function.Function v3;
io.vertx.core.net.impl.KeyStoreHelper v2;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = virtualinvoke v0.<io.vertx.core.net.PemTrustOptions: io.vertx.core.net.impl.KeyStoreHelper getHelper(io.vertx.core.Vertx)>(v1);
if v2 == null goto label1;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <io.vertx.core.net.PemTrustOptions$getTrustMgr__1308: java.util.function.Function bootstrap$(io.vertx.core.net.impl.KeyStoreHelper)>(v2);
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public io.vertx.core.net.PemTrustOptions copy()
{
io.vertx.core.net.PemTrustOptions v0, v1;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 = new io.vertx.core.net.PemTrustOptions;
specialinvoke v1.<io.vertx.core.net.PemTrustOptions: void <init>(io.vertx.core.net.PemTrustOptions)>(v0);
return v1;
}
io.vertx.core.net.impl.KeyStoreHelper getHelper(io.vertx.core.Vertx) throws java.lang.Exception
{
java.util.function.Function v5, v8;
io.vertx.core.net.impl.KeyStoreHelper v13, v15, v2;
java.util.ArrayList v10, v3;
io.vertx.core.net.PemTrustOptions v0;
io.vertx.core.Vertx v1;
java.security.KeyStore v14;
java.util.stream.Stream v11, v12, v4, v6, v9;
io.vertx.core.file.FileSystem v7;
v0 := @this: io.vertx.core.net.PemTrustOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = v0.<io.vertx.core.net.PemTrustOptions: io.vertx.core.net.impl.KeyStoreHelper helper>;
if v2 != null goto label1;
v3 = v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certPaths>;
v4 = virtualinvoke v3.<java.util.ArrayList: java.util.stream.Stream stream()>();
v5 = staticinvoke <io.vertx.core.net.PemTrustOptions$lambda_getHelper_0__1309: java.util.function.Function bootstrap$(io.vertx.core.Vertx)>(v1);
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v5);
v7 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.file.FileSystem fileSystem()>();
virtualinvoke v7.<java.lang.Object: java.lang.Class getClass()>();
v8 = staticinvoke <io.vertx.core.net.PemTrustOptions$readFileBlocking__1310: java.util.function.Function bootstrap$(io.vertx.core.file.FileSystem)>(v7);
v9 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v8);
v10 = v0.<io.vertx.core.net.PemTrustOptions: java.util.ArrayList certValues>;
v11 = virtualinvoke v10.<java.util.ArrayList: java.util.stream.Stream stream()>();
v12 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(v9, v11);
v13 = new io.vertx.core.net.impl.KeyStoreHelper;
v14 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore loadCA(java.util.stream.Stream)>(v12);
specialinvoke v13.<io.vertx.core.net.impl.KeyStoreHelper: void <init>(java.security.KeyStore,java.lang.String,java.lang.String)>(v14, null, null);
v0.<io.vertx.core.net.PemTrustOptions: io.vertx.core.net.impl.KeyStoreHelper helper> = v13;
label1:
v15 = v0.<io.vertx.core.net.PemTrustOptions: io.vertx.core.net.impl.KeyStoreHelper helper>;
return v15;
}
}