public class io.vertx.core.net.impl.KeyStoreHelper extends java.lang.Object
{
public static final java.lang.String DUMMY_PASSWORD;
private static final java.lang.String DUMMY_CERT_ALIAS;
private static final java.util.regex.Pattern BEGIN_PATTERN;
private static final java.util.regex.Pattern END_PATTERN;
private final java.lang.String password;
private final java.security.KeyStore store;
private final java.lang.String aliasPassword;
private final java.util.Map wildcardMgrMap;
private final java.util.Map mgrMap;
private final java.util.Map wildcardMgrFactoryMap;
private final java.util.Map mgrFactoryMap;
private final java.util.Map trustMgrMap;
public void <init>(java.security.KeyStore, java.lang.String, java.lang.String) throws java.lang.Exception
{
java.util.Enumeration v9;
io.vertx.core.net.impl.KeyStoreHelper$1 v40;
io.vertx.core.net.impl.KeyStoreHelper v0;
java.util.Map v18, v46, v48, v50, v51;
boolean v10, v13, v14, v19, v20, v24, v28, v36, v43, v45;
javax.net.ssl.TrustManagerFactory v17;
java.util.Collection v21;
java.security.KeyStore v1, v15;
java.security.Key v38;
java.util.List v35;
java.security.cert.Certificate v12;
java.security.cert.Certificate[] v39;
javax.security.auth.x500.X500Principal v33;
java.util.HashMap v4, v5, v6, v7, v8;
java.util.ArrayList v22;
int v26, v30;
java.lang.String v16, v2, v3, v32, v34, v47, v49;
java.util.Iterator v23, v42;
javax.net.ssl.KeyManagerFactory v41;
char[] v37;
java.lang.Object v11, v25, v27, v29, v31, v44;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: java.security.KeyStore;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrMap> = v4;
v5 = new java.util.HashMap;
specialinvoke v5.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map mgrMap> = v5;
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrFactoryMap> = v6;
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map mgrFactoryMap> = v7;
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map trustMgrMap> = v8;
v9 = virtualinvoke v1.<java.security.KeyStore: java.util.Enumeration aliases()>();
label1:
v10 = interfaceinvoke v9.<java.util.Enumeration: boolean hasMoreElements()>();
if v10 == 0 goto label7;
v11 = interfaceinvoke v9.<java.util.Enumeration: java.lang.Object nextElement()>();
v12 = virtualinvoke v1.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(v11);
v13 = virtualinvoke v1.<java.security.KeyStore: boolean isCertificateEntry(java.lang.String)>(v11);
if v13 == 0 goto label2;
v14 = virtualinvoke v11.<java.lang.String: boolean startsWith(java.lang.String)>("cert-");
if v14 != 0 goto label2;
v15 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore createEmptyKeyStore()>();
virtualinvoke v15.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>("cert-1", v12);
v16 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();
v17 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(v16);
virtualinvoke v17.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(v15);
v18 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map trustMgrMap>;
interfaceinvoke v18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v17);
label2:
v19 = virtualinvoke v1.<java.security.KeyStore: boolean isKeyEntry(java.lang.String)>(v11);
if v19 == 0 goto label1;
v20 = v12 instanceof java.security.cert.X509Certificate;
if v20 == 0 goto label1;
v21 = virtualinvoke v12.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>();
v22 = new java.util.ArrayList;
specialinvoke v22.<java.util.ArrayList: void <init>()>();
if v21 == null goto label4;
v23 = interfaceinvoke v21.<java.util.Collection: java.util.Iterator iterator()>();
label3:
v24 = interfaceinvoke v23.<java.util.Iterator: boolean hasNext()>();
if v24 == 0 goto label4;
v25 = interfaceinvoke v23.<java.util.Iterator: java.lang.Object next()>();
v26 = interfaceinvoke v25.<java.util.List: int size()>();
if v26 != 2 goto label3;
v27 = interfaceinvoke v25.<java.util.List: java.lang.Object get(int)>(0);
v28 = v27 instanceof java.lang.Number;
if v28 == 0 goto label3;
v29 = interfaceinvoke v25.<java.util.List: java.lang.Object get(int)>(0);
v30 = virtualinvoke v29.<java.lang.Number: int intValue()>();
if v30 != 2 goto label3;
v31 = interfaceinvoke v25.<java.util.List: java.lang.Object get(int)>(1);
v32 = virtualinvoke v31.<java.lang.Object: java.lang.String toString()>();
interfaceinvoke v22.<java.util.List: boolean add(java.lang.Object)>(v32);
goto label3;
label4:
v33 = virtualinvoke v12.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();
v34 = virtualinvoke v33.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();
v35 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.util.List getX509CertificateCommonNames(java.lang.String)>(v34);
interfaceinvoke v22.<java.util.List: boolean addAll(java.util.Collection)>(v35);
v36 = interfaceinvoke v22.<java.util.List: boolean isEmpty()>();
if v36 != 0 goto label1;
v37 = specialinvoke v0.<io.vertx.core.net.impl.KeyStoreHelper: char[] keyPassword(java.lang.String,java.lang.String)>(v3, v2);
v38 = virtualinvoke v1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(v11, v37);
v39 = virtualinvoke v1.<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)>(v11);
if v39 == null goto label1;
v40 = new io.vertx.core.net.impl.KeyStoreHelper$1;
specialinvoke v40.<io.vertx.core.net.impl.KeyStoreHelper$1: void <init>(io.vertx.core.net.impl.KeyStoreHelper,java.security.cert.Certificate[],java.security.PrivateKey)>(v0, v39, v38);
v41 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: javax.net.ssl.KeyManagerFactory toKeyManagerFactory(javax.net.ssl.X509KeyManager)>(v40);
v42 = interfaceinvoke v22.<java.util.List: java.util.Iterator iterator()>();
label5:
v43 = interfaceinvoke v42.<java.util.Iterator: boolean hasNext()>();
if v43 == 0 goto label1;
v44 = interfaceinvoke v42.<java.util.Iterator: java.lang.Object next()>();
v45 = virtualinvoke v44.<java.lang.String: boolean startsWith(java.lang.String)>("*.");
if v45 == 0 goto label6;
v46 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrMap>;
v47 = virtualinvoke v44.<java.lang.String: java.lang.String substring(int)>(2);
interfaceinvoke v46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v47, v40);
v48 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrFactoryMap>;
v49 = virtualinvoke v44.<java.lang.String: java.lang.String substring(int)>(2);
interfaceinvoke v48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v49, v41);
goto label5;
label6:
v50 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map mgrMap>;
interfaceinvoke v50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v44, v40);
v51 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map mgrFactoryMap>;
interfaceinvoke v51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v44, v41);
goto label5;
label7:
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore store> = v1;
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.lang.String password> = v2;
v0.<io.vertx.core.net.impl.KeyStoreHelper: java.lang.String aliasPassword> = v3;
return;
}
public static javax.net.ssl.KeyManagerFactory toKeyManagerFactory(javax.net.ssl.X509KeyManager) throws java.lang.Exception
{
javax.net.ssl.X509KeyManager v0;
javax.net.ssl.KeyManagerFactory v7;
java.security.KeyStore v2;
java.security.PrivateKey v3;
char[] v4, v8;
java.lang.String v1, v6;
java.security.cert.X509Certificate[] v5;
v0 := @parameter0: javax.net.ssl.X509KeyManager;
v1 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(v1);
virtualinvoke v2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);
v3 = interfaceinvoke v0.<javax.net.ssl.X509KeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>(null);
v4 = newarray (char)[0];
v5 = interfaceinvoke v0.<javax.net.ssl.X509KeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>(null);
virtualinvoke v2.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>("key", v3, v4, v5);
v6 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();
v7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(v6);
v8 = newarray (char)[0];
virtualinvoke v7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(v2, v8);
return v7;
}
public javax.net.ssl.KeyManagerFactory getKeyMgrFactory() throws java.lang.Exception
{
char[] v5;
javax.net.ssl.KeyManagerFactory v2;
java.security.KeyStore v6;
java.lang.String v1, v3, v4;
io.vertx.core.net.impl.KeyStoreHelper v0;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();
v2 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(v1);
v3 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.lang.String aliasPassword>;
v4 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.lang.String password>;
v5 = specialinvoke v0.<io.vertx.core.net.impl.KeyStoreHelper: char[] keyPassword(java.lang.String,java.lang.String)>(v3, v4);
v6 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore store>;
virtualinvoke v2.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(v6, v5);
return v2;
}
private char[] keyPassword(java.lang.String, java.lang.String)
{
char[] v3, v4;
java.lang.String v1, v2;
io.vertx.core.net.impl.KeyStoreHelper v0;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v1 == null goto label1;
v3 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
return v3;
label1:
if v2 == null goto label2;
v4 = virtualinvoke v2.<java.lang.String: char[] toCharArray()>();
goto label3;
label2:
v4 = null;
label3:
return v4;
}
public javax.net.ssl.X509KeyManager getKeyMgr(java.lang.String)
{
io.vertx.core.net.impl.KeyStoreHelper v0;
java.util.Map v2, v4, v9;
int v6, v7;
java.lang.Object v3;
java.lang.String v1, v8;
boolean v5;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map mgrMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrMap>;
v5 = interfaceinvoke v4.<java.util.Map: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(46);
v7 = v6 + 1;
if v7 <= 0 goto label1;
v8 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v7);
v9 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrMap>;
interfaceinvoke v9.<java.util.Map: java.lang.Object get(java.lang.Object)>(v8);
label1:
return v3;
}
public javax.net.ssl.KeyManagerFactory getKeyMgrFactory(java.lang.String)
{
io.vertx.core.net.impl.KeyStoreHelper v0;
java.util.Map v2, v4, v9;
int v6, v7;
java.lang.Object v3;
java.lang.String v1, v8;
boolean v5;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map mgrFactoryMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrMap>;
v5 = interfaceinvoke v4.<java.util.Map: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(46);
v7 = v6 + 1;
if v7 <= 0 goto label1;
v8 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v7);
v9 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map wildcardMgrFactoryMap>;
interfaceinvoke v9.<java.util.Map: java.lang.Object get(java.lang.Object)>(v8);
label1:
return v3;
}
public javax.net.ssl.KeyManager[] getKeyMgr() throws java.lang.Exception
{
javax.net.ssl.KeyManagerFactory v1;
io.vertx.core.net.impl.KeyStoreHelper v0;
javax.net.ssl.KeyManager[] v2;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 = virtualinvoke v0.<io.vertx.core.net.impl.KeyStoreHelper: javax.net.ssl.KeyManagerFactory getKeyMgrFactory()>();
v2 = virtualinvoke v1.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
return v2;
}
public javax.net.ssl.TrustManager[] getTrustMgr(java.lang.String)
{
javax.net.ssl.TrustManager[] v4;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
io.vertx.core.net.impl.KeyStoreHelper v0;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.util.Map trustMgrMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
goto label2;
label1:
v4 = null;
label2:
return v4;
}
public javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal) throws java.lang.Exception
{
io.vertx.core.impl.VertxInternal v1;
javax.net.ssl.TrustManagerFactory v3;
java.security.KeyStore v4;
java.lang.String v2;
io.vertx.core.net.impl.KeyStoreHelper v0;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: io.vertx.core.impl.VertxInternal;
v2 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();
v3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(v2);
v4 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore store>;
virtualinvoke v3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(v4);
return v3;
}
public javax.net.ssl.TrustManager[] getTrustMgrs(io.vertx.core.impl.VertxInternal) throws java.lang.Exception
{
io.vertx.core.impl.VertxInternal v1;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.TrustManager[] v3;
io.vertx.core.net.impl.KeyStoreHelper v0;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 := @parameter0: io.vertx.core.impl.VertxInternal;
v2 = virtualinvoke v0.<io.vertx.core.net.impl.KeyStoreHelper: javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal)>(v1);
v3 = virtualinvoke v2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
return v3;
}
public java.security.KeyStore store()
{
java.security.KeyStore v1;
io.vertx.core.net.impl.KeyStoreHelper v0;
v0 := @this: io.vertx.core.net.impl.KeyStoreHelper;
v1 = v0.<io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore store>;
return v1;
}
public static java.util.List getX509CertificateCommonNames(java.lang.String) throws java.lang.Exception
{
javax.naming.ldap.LdapName v3;
java.lang.String[] v13, v18;
java.util.ArrayList v1;
int v14, v15, v19;
java.lang.String v0, v11, v12, v16, v17, v20, v21, v23, v8;
boolean v2, v22, v6, v9;
java.util.Iterator v5;
java.util.List v4;
java.lang.Object v10, v7;
v0 := @parameter0: java.lang.String;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean isAndroid()>();
if v2 != 0 goto label2;
v3 = new javax.naming.ldap.LdapName;
specialinvoke v3.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>(v0);
v4 = virtualinvoke v3.<javax.naming.ldap.LdapName: java.util.List getRdns()>();
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label5;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v7.<javax.naming.ldap.Rdn: java.lang.String getType()>();
v9 = virtualinvoke v8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cn");
if v9 == 0 goto label1;
v10 = virtualinvoke v7.<javax.naming.ldap.Rdn: java.lang.Object getValue()>();
v11 = virtualinvoke v10.<java.lang.Object: java.lang.String toString()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v11);
goto label1;
label2:
v12 = virtualinvoke v0.<java.lang.String: java.lang.String trim()>();
v13 = virtualinvoke v12.<java.lang.String: java.lang.String[] split(java.lang.String)>("[,;]");
v14 = lengthof v13;
v15 = 0;
label3:
if v15 >= v14 goto label5;
v16 = v13[v15];
v17 = virtualinvoke v16.<java.lang.String: java.lang.String trim()>();
v18 = virtualinvoke v17.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");
v19 = lengthof v18;
if v19 != 2 goto label4;
v20 = "cn";
v21 = v18[0];
v22 = virtualinvoke v20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v21);
if v22 == 0 goto label4;
v23 = v18[1];
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v23);
label4:
v15 = v15 + 1;
goto label3;
label5:
return v1;
}
public static java.security.KeyStore loadKeyStore(java.lang.String, java.lang.String, java.lang.String, java.util.function.Supplier, java.lang.String) throws java.lang.Exception
{
java.lang.Throwable v13;
byte[] v11;
java.util.Enumeration v17;
java.util.function.Supplier v3;
java.util.ArrayList v18;
java.io.ByteArrayInputStream v9;
java.lang.String v0, v1, v16, v2, v4;
boolean v14, v20, v22;
java.util.Iterator v19;
java.security.KeyStore v5, v6;
java.lang.IllegalArgumentException v15;
char[] v12, v8;
java.lang.Object v10, v21, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.util.function.Supplier;
v4 := @parameter4: java.lang.String;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v1 != null goto label01;
v5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(v0);
goto label02;
label01:
v5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(v0, v1);
label02:
v6 = v5;
v7 = interfaceinvoke v3.<java.util.function.Supplier: java.lang.Object get()>();
if v7 != null goto label05;
if v2 == null goto label03;
v8 = virtualinvoke v2.<java.lang.String: char[] toCharArray()>();
goto label04;
label03:
v8 = null;
label04:
virtualinvoke v6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, v8);
goto label11;
label05:
v9 = new java.io.ByteArrayInputStream;
v10 = interfaceinvoke v3.<java.util.function.Supplier: java.lang.Object get()>();
v11 = interfaceinvoke v10.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
specialinvoke v9.<java.io.ByteArrayInputStream: void <init>(byte[])>(v11);
label06:
if v2 == null goto label07;
v12 = virtualinvoke v2.<java.lang.String: char[] toCharArray()>();
goto label08;
label07:
v12 = null;
label08:
virtualinvoke v6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(v9, v12);
label09:
virtualinvoke v9.<java.io.InputStream: void close()>();
goto label11;
label10:
v13 := @caughtexception;
throw v13;
label11:
if v4 == null goto label14;
v14 = virtualinvoke v6.<java.security.KeyStore: boolean containsAlias(java.lang.String)>(v4);
if v14 != 0 goto label12;
v15 = new java.lang.IllegalArgumentException;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("alias does not exist in the keystore: \u0001");
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v15;
label12:
v17 = virtualinvoke v6.<java.security.KeyStore: java.util.Enumeration aliases()>();
v18 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>(v17);
v19 = interfaceinvoke v18.<java.util.List: java.util.Iterator iterator()>();
label13:
v20 = interfaceinvoke v19.<java.util.Iterator: boolean hasNext()>();
if v20 == 0 goto label14;
v21 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
v22 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v21);
if v22 != 0 goto label13;
virtualinvoke v6.<java.security.KeyStore: void deleteEntry(java.lang.String)>(v21);
goto label13;
label14:
return v6;
catch java.lang.Throwable from label06 to label09 with label10;
}
public static java.security.KeyStore loadKeyCert(java.util.List, java.util.List) throws java.lang.Exception
{
io.vertx.core.VertxException v4, v7;
int v11, v18, v2, v3, v5, v6;
java.lang.String v19, v22;
boolean v12, v13;
java.util.Iterator v10, v9;
java.security.KeyStore v8;
java.util.List v0, v1;
java.security.PrivateKey v15;
java.security.KeyStore$PasswordProtection v21;
char[] v23;
java.lang.Object v14, v16;
java.security.KeyStore$PrivateKeyEntry v20;
java.security.cert.X509Certificate[] v17;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.util.List;
v2 = interfaceinvoke v0.<java.util.List: int size()>();
v3 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 >= v3 goto label1;
v4 = new io.vertx.core.VertxException;
specialinvoke v4.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Missing private key");
throw v4;
label1:
v5 = interfaceinvoke v0.<java.util.List: int size()>();
v6 = interfaceinvoke v1.<java.util.List: int size()>();
if v5 <= v6 goto label2;
v7 = new io.vertx.core.VertxException;
specialinvoke v7.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Missing X.509 certificate");
throw v7;
label2:
v8 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore createEmptyKeyStore()>();
v9 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
v10 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
v11 = 0;
label3:
v12 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label4;
v13 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label4;
v14 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v15 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.PrivateKey loadPrivateKey(io.vertx.core.buffer.Buffer)>(v14);
v16 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v17 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.cert.X509Certificate[] loadCerts(io.vertx.core.buffer.Buffer)>(v16);
v18 = v11;
v11 = v11 + 1;
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("dummy-entry-\u0001");
v20 = new java.security.KeyStore$PrivateKeyEntry;
specialinvoke v20.<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[])>(v15, v17);
v21 = new java.security.KeyStore$PasswordProtection;
v22 = "dummy";
v23 = virtualinvoke v22.<java.lang.String: char[] toCharArray()>();
specialinvoke v21.<java.security.KeyStore$PasswordProtection: void <init>(char[])>(v23);
virtualinvoke v8.<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>(v19, v20, v21);
goto label3;
label4:
return v8;
}
private static java.security.PrivateKey loadPrivateKey(io.vertx.core.buffer.Buffer) throws java.lang.Exception
{
java.util.function.BiFunction v4;
java.lang.RuntimeException v1, v7;
java.security.KeyFactory v2, v3;
java.util.List v5;
io.vertx.core.buffer.Buffer v0;
java.lang.Object v8;
boolean v6;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
if v0 != null goto label1;
v1 = new java.lang.RuntimeException;
specialinvoke v1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Missing private key path");
throw v1;
label1:
v2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");
v3 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyFactory getECKeyFactory()>();
v4 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper$lambda_loadPrivateKey_0__1375: java.util.function.BiFunction bootstrap$(java.security.KeyFactory,java.security.KeyFactory)>(v3, v2);
v5 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.util.List loadPems(io.vertx.core.buffer.Buffer,java.util.function.BiFunction)>(v0, v4);
v6 = interfaceinvoke v5.<java.util.List: boolean isEmpty()>();
if v6 == 0 goto label2;
v7 = new java.lang.RuntimeException;
specialinvoke v7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Missing -----BEGIN PRIVATE KEY----- or -----BEGIN RSA PRIVATE KEY----- or -----BEGIN EC PRIVATE KEY----- delimiter");
throw v7;
label2:
v8 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(0);
return v8;
}
private static java.security.KeyFactory getECKeyFactory()
{
java.security.KeyFactory v0;
java.security.NoSuchAlgorithmException v1;
label1:
v0 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("EC");
label2:
return v0;
label3:
v1 := @caughtexception;
return null;
catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
}
public static java.security.KeyStore loadCA(java.util.stream.Stream) throws java.lang.Exception
{
java.security.cert.X509Certificate v10;
java.util.Iterator v4;
java.security.KeyStore v1;
java.lang.Iterable v3;
java.util.stream.Stream v0;
int v11, v2, v8, v9;
java.lang.Object v6;
java.lang.String v12;
java.security.cert.X509Certificate[] v7;
boolean v5;
v0 := @parameter0: java.util.stream.Stream;
v1 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.KeyStore createEmptyKeyStore()>();
virtualinvoke v1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);
v2 = 0;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper$iterator__1376: java.lang.Iterable bootstrap$(java.util.stream.Stream)>(v0);
v4 = interfaceinvoke v3.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.security.cert.X509Certificate[] loadCerts(io.vertx.core.buffer.Buffer)>(v6);
v8 = lengthof v7;
v9 = 0;
label2:
if v9 >= v8 goto label1;
v10 = v7[v9];
v11 = v2;
v2 = v2 + 1;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("cert-\u0001");
virtualinvoke v1.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(v12, v10);
v9 = v9 + 1;
goto label2;
label3:
return v1;
}
private static java.util.List loadPems(io.vertx.core.buffer.Buffer, java.util.function.BiFunction) throws java.io.IOException
{
byte[] v24;
java.util.Base64$Decoder v23;
java.util.function.BiFunction v1;
java.util.ArrayList v3;
java.util.regex.Matcher v5, v7;
int v17, v18, v21;
java.lang.String v12, v13, v16, v19, v2, v20, v9;
boolean v10, v14, v8;
java.lang.RuntimeException v11, v15, v22;
io.vertx.core.buffer.Buffer v0;
java.lang.Object v25;
java.util.regex.Pattern v4, v6;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
v1 := @parameter1: java.util.function.BiFunction;
v2 = interfaceinvoke v0.<io.vertx.core.buffer.Buffer: java.lang.String toString()>();
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = <io.vertx.core.net.impl.KeyStoreHelper: java.util.regex.Pattern BEGIN_PATTERN>;
v5 = virtualinvoke v4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v2);
v6 = <io.vertx.core.net.impl.KeyStoreHelper: java.util.regex.Pattern END_PATTERN>;
v7 = virtualinvoke v6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v2);
label1:
v8 = virtualinvoke v5.<java.util.regex.Matcher: boolean find()>();
if v8 == 0 goto label5;
v9 = virtualinvoke v5.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v10 = virtualinvoke v7.<java.util.regex.Matcher: boolean find()>();
if v10 != 0 goto label2;
v11 = new java.lang.RuntimeException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing -----END \u0001----- delimiter");
specialinvoke v11.<java.lang.RuntimeException: void <init>(java.lang.String)>(v12);
throw v11;
label2:
v13 = virtualinvoke v7.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v14 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v13);
if v14 != 0 goto label3;
v15 = new java.lang.RuntimeException;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing -----END \u0001----- delimiter");
specialinvoke v15.<java.lang.RuntimeException: void <init>(java.lang.String)>(v16);
throw v15;
label3:
v17 = virtualinvoke v5.<java.util.regex.Matcher: int end()>();
v18 = virtualinvoke v7.<java.util.regex.Matcher: int start()>();
v19 = virtualinvoke v2.<java.lang.String: java.lang.String substring(int,int)>(v17, v18);
v20 = virtualinvoke v19.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s", "");
v21 = virtualinvoke v20.<java.lang.String: int length()>();
if v21 != 0 goto label4;
v22 = new java.lang.RuntimeException;
specialinvoke v22.<java.lang.RuntimeException: void <init>(java.lang.String)>("Empty pem file");
throw v22;
label4:
v23 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();
v24 = virtualinvoke v23.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v20);
v25 = interfaceinvoke v1.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v13, v24);
interfaceinvoke v3.<java.util.List: boolean addAll(java.util.Collection)>(v25);
goto label1;
label5:
return v3;
}
private static java.security.cert.X509Certificate[] loadCerts(io.vertx.core.buffer.Buffer) throws java.lang.Exception
{
java.lang.Object[] v8;
java.security.cert.CertificateFactory v2;
java.util.function.BiFunction v3;
java.lang.RuntimeException v1, v6;
java.util.List v4;
io.vertx.core.buffer.Buffer v0;
java.security.cert.X509Certificate[] v7;
boolean v5;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
if v0 != null goto label1;
v1 = new java.lang.RuntimeException;
specialinvoke v1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Missing X.509 certificate path");
throw v1;
label1:
v2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");
v3 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper$lambda_loadCerts_1__1377: java.util.function.BiFunction bootstrap$(java.security.cert.CertificateFactory)>(v2);
v4 = staticinvoke <io.vertx.core.net.impl.KeyStoreHelper: java.util.List loadPems(io.vertx.core.buffer.Buffer,java.util.function.BiFunction)>(v0, v3);
v5 = interfaceinvoke v4.<java.util.List: boolean isEmpty()>();
if v5 == 0 goto label2;
v6 = new java.lang.RuntimeException;
specialinvoke v6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Missing -----BEGIN CERTIFICATE----- delimiter");
throw v6;
label2:
v7 = newarray (java.security.cert.X509Certificate)[0];
v8 = interfaceinvoke v4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v7);
return v8;
}
private static java.security.KeyStore createEmptyKeyStore() throws java.security.KeyStoreException
{
java.util.Set v2;
java.security.KeyStore v4;
java.lang.String v0;
java.security.KeyStoreException v6;
java.lang.Exception v5;
boolean v1, v3;
v0 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v1 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("jks");
if v1 == 0 goto label1;
v2 = staticinvoke <java.security.Security: java.util.Set getAlgorithms(java.lang.String)>("KeyStore");
v3 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>("PKCS12");
if v3 == 0 goto label1;
v4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("PKCS12");
goto label2;
label1:
v4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(v0);
label2:
virtualinvoke v4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);
label3:
goto label5;
label4:
v5 := @caughtexception;
v6 = new java.security.KeyStoreException;
specialinvoke v6.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to initialize the keystore", v5);
throw v6;
label5:
return v4;
catch java.security.cert.CertificateException from label2 to label3 with label4;
catch java.security.NoSuchAlgorithmException from label2 to label3 with label4;
catch java.io.IOException from label2 to label3 with label4;
}
static void <clinit>()
{
java.util.regex.Pattern v0, v1;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-----BEGIN ([A-Z ]+)-----");
<io.vertx.core.net.impl.KeyStoreHelper: java.util.regex.Pattern BEGIN_PATTERN> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-----END ([A-Z ]+)-----");
<io.vertx.core.net.impl.KeyStoreHelper: java.util.regex.Pattern END_PATTERN> = v1;
return;
}
}