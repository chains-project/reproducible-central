class io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler extends java.lang.Object implements io.vertx.core.Handler
{
final io.vertx.core.net.impl.NetSocketImpl this$0;
private void <init>(io.vertx.core.net.impl.NetSocketImpl)
{
io.vertx.core.net.impl.NetSocketImpl v1;
io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler v0;
v0 := @this: io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler;
v1 := @parameter0: io.vertx.core.net.impl.NetSocketImpl;
v0.<io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler: io.vertx.core.net.impl.NetSocketImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void handle(java.lang.Object)
{
io.vertx.core.net.impl.NetSocketImpl v5, v8;
io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler v0;
io.vertx.core.streams.impl.InboundBuffer v6;
io.netty.buffer.ByteBuf v3;
io.vertx.core.buffer.Buffer v4;
java.lang.Object v1;
boolean v2, v7;
v0 := @this: io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.buffer.ByteBuf;
if v2 == 0 goto label1;
v3 = staticinvoke <io.vertx.core.net.impl.VertxHandler: io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBuf)>(v1);
v4 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v3);
v5 = v0.<io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler: io.vertx.core.net.impl.NetSocketImpl this$0>;
v6 = v5.<io.vertx.core.net.impl.NetSocketImpl: io.vertx.core.streams.impl.InboundBuffer pending>;
v7 = virtualinvoke v6.<io.vertx.core.streams.impl.InboundBuffer: boolean write(java.lang.Object)>(v4);
if v7 != 0 goto label2;
v8 = v0.<io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler: io.vertx.core.net.impl.NetSocketImpl this$0>;
virtualinvoke v8.<io.vertx.core.net.impl.NetSocketImpl: void doPause()>();
goto label2;
label1:
specialinvoke v0.<io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler: void handleInvalid(java.lang.Object)>(v1);
label2:
return;
}
private void handleInvalid(java.lang.Object)
{
io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler v0;
java.lang.Object v1;
boolean v2, v3;
v0 := @this: io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.util.ReferenceCounted;
if v2 == 0 goto label1;
v3 = v1 instanceof io.netty.buffer.ByteBuf;
if v3 != 0 goto label1;
interfaceinvoke v1.<io.netty.util.ReferenceCounted: boolean release()>();
label1:
return;
}
}