class io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1 extends io.vertx.core.net.impl.pool.Task
{
final io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1 v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire this$0> = v1;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire v1, v4;
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.Handler v5;
io.vertx.core.Future v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1 v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire this$0>;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: io.vertx.core.impl.ContextInternal context>;
v3 = <io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.Future POOL_CLOSED>;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire this$0>;
v5 = v4.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: io.vertx.core.Handler handler>;
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: void emit(java.lang.Object,io.vertx.core.Handler)>(v3, v5);
return;
}
}