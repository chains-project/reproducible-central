class io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle extends java.lang.Object implements io.vertx.core.net.impl.pool.Executor$Action
{
private final io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot;
public void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot> = v1;
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1 v15;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v13, v16, v3, v5, v7;
long v8;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v12;
byte v9;
int v6;
boolean v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle v0;
io.vertx.core.net.impl.pool.PoolWaiter v11;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v10;
java.lang.Object v4;
io.vertx.core.Handler v14;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: boolean closed>;
if v2 != 0 goto label2;
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v4 = v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
if v4 == null goto label2;
v5 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v6 = v5.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage>;
v7 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v8 = v7.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency>;
v9 = v6 cmp v8;
if v9 > 0 goto label1;
v10 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v11 = virtualinvoke v10.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter poll()>();
if v11 == null goto label1;
v12 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v13 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v14 = v11.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.Handler handler>;
specialinvoke v12.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot,io.vertx.core.Handler)>(v13, v14);
v15 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1;
specialinvoke v15.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle,io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)>(v0, v12);
return v15;
label1:
v16 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Recycle: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int access$810(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)>(v16);
label2:
return null;
}
}