public interface  io.vertx.core.spi.VertxThreadFactory extends java.lang.Object implements io.vertx.core.spi.VertxServiceProvider
{
public static final io.vertx.core.spi.VertxThreadFactory INSTANCE;
public void init(io.vertx.core.impl.VertxBuilder)
{
io.vertx.core.impl.VertxBuilder v1;
io.vertx.core.spi.VertxThreadFactory v0, v2;
v0 := @this: io.vertx.core.spi.VertxThreadFactory;
v1 := @parameter0: io.vertx.core.impl.VertxBuilder;
v2 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.spi.VertxThreadFactory threadFactory()>();
if v2 != null goto label1;
virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.impl.VertxBuilder threadFactory(io.vertx.core.spi.VertxThreadFactory)>(v0);
label1:
return;
}
public io.vertx.core.impl.VertxThread newVertxThread(java.lang.Runnable, java.lang.String, boolean, long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v5;
io.vertx.core.impl.VertxThread v6;
io.vertx.core.spi.VertxThreadFactory v0;
long v4;
java.lang.String v2;
java.lang.Runnable v1;
boolean v3;
v0 := @this: io.vertx.core.spi.VertxThreadFactory;
v1 := @parameter0: java.lang.Runnable;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: long;
v5 := @parameter4: java.util.concurrent.TimeUnit;
v6 = new io.vertx.core.impl.VertxThread;
specialinvoke v6.<io.vertx.core.impl.VertxThread: void <init>(java.lang.Runnable,java.lang.String,boolean,long,java.util.concurrent.TimeUnit)>(v1, v2, v3, v4, v5);
return v6;
}
static void <clinit>()
{
io.vertx.core.spi.VertxThreadFactory$1 v0;
v0 = new io.vertx.core.spi.VertxThreadFactory$1;
specialinvoke v0.<io.vertx.core.spi.VertxThreadFactory$1: void <init>()>();
<io.vertx.core.spi.VertxThreadFactory: io.vertx.core.spi.VertxThreadFactory INSTANCE> = v0;
return;
}
}