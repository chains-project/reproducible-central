public abstract class io.vertx.core.spi.launcher.DefaultCommand extends java.lang.Object implements io.vertx.core.spi.launcher.Command
{
private java.io.File cwd;
protected java.util.List systemProperties;
protected io.vertx.core.spi.launcher.ExecutionContext executionContext;
protected java.io.PrintStream out;
public void <init>()
{
io.vertx.core.spi.launcher.DefaultCommand v0;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.io.File getCwd()
{
io.vertx.core.spi.launcher.DefaultCommand v0;
java.io.File v1, v2;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
v1 = v0.<io.vertx.core.spi.launcher.DefaultCommand: java.io.File cwd>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.spi.launcher.DefaultCommand: java.io.File cwd>;
goto label2;
label1:
v2 = new java.io.File;
specialinvoke v2.<java.io.File: void <init>(java.lang.String)>(".");
label2:
return v2;
}
public void setCwd(java.io.File)
{
io.vertx.core.spi.launcher.DefaultCommand v0;
java.io.File v1;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
v1 := @parameter0: java.io.File;
v0.<io.vertx.core.spi.launcher.DefaultCommand: java.io.File cwd> = v1;
return;
}
public void setSystemProps(java.util.List)
{
java.util.List v1;
io.vertx.core.spi.launcher.DefaultCommand v0;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
v1 := @parameter0: java.util.List;
v0.<io.vertx.core.spi.launcher.DefaultCommand: java.util.List systemProperties> = v1;
return;
}
public void setUp(io.vertx.core.spi.launcher.ExecutionContext) throws io.vertx.core.cli.CLIException
{
io.vertx.core.spi.launcher.ExecutionContext v1, v2;
java.io.PrintStream v3;
io.vertx.core.spi.launcher.DefaultCommand v0;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
v1 := @parameter0: io.vertx.core.spi.launcher.ExecutionContext;
v0.<io.vertx.core.spi.launcher.DefaultCommand: io.vertx.core.spi.launcher.ExecutionContext executionContext> = v1;
v2 = v0.<io.vertx.core.spi.launcher.DefaultCommand: io.vertx.core.spi.launcher.ExecutionContext executionContext>;
v3 = virtualinvoke v2.<io.vertx.core.spi.launcher.ExecutionContext: java.io.PrintStream getPrintStream()>();
v0.<io.vertx.core.spi.launcher.DefaultCommand: java.io.PrintStream out> = v3;
virtualinvoke v0.<io.vertx.core.spi.launcher.DefaultCommand: void applySystemProperties()>();
return;
}
public java.io.PrintStream out()
{
io.vertx.core.spi.launcher.ExecutionContext v1;
java.io.PrintStream v2;
io.vertx.core.spi.launcher.DefaultCommand v0;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
v1 = v0.<io.vertx.core.spi.launcher.DefaultCommand: io.vertx.core.spi.launcher.ExecutionContext executionContext>;
v2 = virtualinvoke v1.<io.vertx.core.spi.launcher.ExecutionContext: java.io.PrintStream getPrintStream()>();
return v2;
}
public void tearDown() throws io.vertx.core.cli.CLIException
{
io.vertx.core.spi.launcher.DefaultCommand v0;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
return;
}
protected void applySystemProperties()
{
java.util.Iterator v3;
java.util.List v1, v2;
int v6, v8;
java.lang.Object v5;
java.lang.String v7, v9;
io.vertx.core.spi.launcher.DefaultCommand v0;
boolean v4;
v0 := @this: io.vertx.core.spi.launcher.DefaultCommand;
v1 = v0.<io.vertx.core.spi.launcher.DefaultCommand: java.util.List systemProperties>;
if v1 == null goto label2;
v2 = v0.<io.vertx.core.spi.launcher.DefaultCommand: java.util.List systemProperties>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<java.lang.String: int indexOf(int)>(61);
if v6 <= 0 goto label1;
v7 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v6);
v8 = v6 + 1;
v9 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int)>(v8);
staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(v7, v9);
goto label1;
label2:
return;
}
}