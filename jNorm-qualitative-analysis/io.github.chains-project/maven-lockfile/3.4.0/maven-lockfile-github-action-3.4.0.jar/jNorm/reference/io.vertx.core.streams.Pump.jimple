public interface  io.vertx.core.streams.Pump extends java.lang.Object
{
public static io.vertx.core.streams.Pump pump(io.vertx.core.streams.ReadStream, io.vertx.core.streams.WriteStream)
{
io.vertx.core.streams.ReadStream v0;
io.vertx.core.streams.impl.PumpImpl v2;
io.vertx.core.streams.WriteStream v1;
v0 := @parameter0: io.vertx.core.streams.ReadStream;
v1 := @parameter1: io.vertx.core.streams.WriteStream;
v2 = new io.vertx.core.streams.impl.PumpImpl;
specialinvoke v2.<io.vertx.core.streams.impl.PumpImpl: void <init>(io.vertx.core.streams.ReadStream,io.vertx.core.streams.WriteStream)>(v0, v1);
return v2;
}
public static io.vertx.core.streams.Pump pump(io.vertx.core.streams.ReadStream, io.vertx.core.streams.WriteStream, int)
{
io.vertx.core.streams.impl.PumpImpl v3;
io.vertx.core.streams.WriteStream v1;
int v2;
io.vertx.core.streams.ReadStream v0;
v0 := @parameter0: io.vertx.core.streams.ReadStream;
v1 := @parameter1: io.vertx.core.streams.WriteStream;
v2 := @parameter2: int;
v3 = new io.vertx.core.streams.impl.PumpImpl;
specialinvoke v3.<io.vertx.core.streams.impl.PumpImpl: void <init>(io.vertx.core.streams.ReadStream,io.vertx.core.streams.WriteStream,int)>(v0, v1, v2);
return v3;
}
public abstract io.vertx.core.streams.Pump setWriteQueueMaxSize(int);
public abstract io.vertx.core.streams.Pump start();
public abstract io.vertx.core.streams.Pump stop();
public abstract int numberPumped();
}