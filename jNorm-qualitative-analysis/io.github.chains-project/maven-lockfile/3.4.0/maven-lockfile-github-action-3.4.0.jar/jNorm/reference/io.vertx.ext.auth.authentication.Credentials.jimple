public interface  io.vertx.ext.auth.authentication.Credentials extends java.lang.Object
{
public void checkValid(java.lang.Object) throws io.vertx.ext.auth.authentication.CredentialValidationException
{
java.lang.Object v1;
io.vertx.ext.auth.authentication.Credentials v0;
v0 := @this: io.vertx.ext.auth.authentication.Credentials;
v1 := @parameter0: java.lang.Object;
return;
}
public abstract io.vertx.core.json.JsonObject toJson();
public io.vertx.ext.auth.authentication.Credentials applyHttpChallenge(java.lang.String, io.vertx.core.http.HttpMethod, java.lang.String, java.lang.Integer, java.lang.String) throws io.vertx.ext.auth.authentication.CredentialValidationException
{
io.vertx.ext.auth.authentication.CredentialValidationException v6;
io.vertx.core.http.HttpMethod v2;
java.lang.String v1, v3, v5;
java.lang.Integer v4;
io.vertx.ext.auth.authentication.Credentials v0;
v0 := @this: io.vertx.ext.auth.authentication.Credentials;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.http.HttpMethod;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Integer;
v5 := @parameter4: java.lang.String;
if v1 == null goto label1;
v6 = new io.vertx.ext.auth.authentication.CredentialValidationException;
specialinvoke v6.<io.vertx.ext.auth.authentication.CredentialValidationException: void <init>(java.lang.String)>("This implementation can\'t handle HTTP Authentication");
throw v6;
label1:
return v0;
}
public io.vertx.ext.auth.authentication.Credentials applyHttpChallenge(java.lang.String, io.vertx.core.http.HttpMethod, java.lang.String) throws io.vertx.ext.auth.authentication.CredentialValidationException
{
io.vertx.core.http.HttpMethod v2;
java.lang.String v1, v3;
io.vertx.ext.auth.authentication.Credentials v0, v4;
v0 := @this: io.vertx.ext.auth.authentication.Credentials;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.http.HttpMethod;
v3 := @parameter2: java.lang.String;
v4 = interfaceinvoke v0.<io.vertx.ext.auth.authentication.Credentials: io.vertx.ext.auth.authentication.Credentials applyHttpChallenge(java.lang.String,io.vertx.core.http.HttpMethod,java.lang.String,java.lang.Integer,java.lang.String)>(v1, v2, v3, null, null);
return v4;
}
public io.vertx.ext.auth.authentication.Credentials applyHttpChallenge(java.lang.String) throws io.vertx.ext.auth.authentication.CredentialValidationException
{
java.lang.String v1;
io.vertx.ext.auth.authentication.Credentials v0, v2;
v0 := @this: io.vertx.ext.auth.authentication.Credentials;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<io.vertx.ext.auth.authentication.Credentials: io.vertx.ext.auth.authentication.Credentials applyHttpChallenge(java.lang.String,io.vertx.core.http.HttpMethod,java.lang.String,java.lang.Integer,java.lang.String)>(v1, null, null, null, null);
return v2;
}
public java.lang.String toHttpAuthorization()
{
java.lang.UnsupportedOperationException v1;
java.lang.Class v2;
java.lang.String v3, v4;
io.vertx.ext.auth.authentication.Credentials v0;
v0 := @this: io.vertx.ext.auth.authentication.Credentials;
v1 = new java.lang.UnsupportedOperationException;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 cannot be converted to a HTTP Authorization");
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v4);
throw v1;
}
}