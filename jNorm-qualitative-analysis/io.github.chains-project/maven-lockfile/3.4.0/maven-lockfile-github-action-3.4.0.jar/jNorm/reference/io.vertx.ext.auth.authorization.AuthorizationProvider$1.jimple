class io.vertx.ext.auth.authorization.AuthorizationProvider$1 extends java.lang.Object implements io.vertx.ext.auth.authorization.AuthorizationProvider
{
final java.lang.String val$id;
final java.util.Set val$_authorizations;
void <init>(java.lang.String, java.util.Set)
{
io.vertx.ext.auth.authorization.AuthorizationProvider$1 v0;
java.util.Set v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.auth.authorization.AuthorizationProvider$1;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v0.<io.vertx.ext.auth.authorization.AuthorizationProvider$1: java.lang.String val$id> = v1;
v0.<io.vertx.ext.auth.authorization.AuthorizationProvider$1: java.util.Set val$_authorizations> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.String getId()
{
io.vertx.ext.auth.authorization.AuthorizationProvider$1 v0;
java.lang.String v1;
v0 := @this: io.vertx.ext.auth.authorization.AuthorizationProvider$1;
v1 = v0.<io.vertx.ext.auth.authorization.AuthorizationProvider$1: java.lang.String val$id>;
return v1;
}
public void getAuthorizations(io.vertx.ext.auth.User, io.vertx.core.Handler)
{
io.vertx.ext.auth.authorization.AuthorizationProvider$1 v0;
io.vertx.ext.auth.User v1;
io.vertx.core.Handler v2;
io.vertx.core.Future v3;
v0 := @this: io.vertx.ext.auth.authorization.AuthorizationProvider$1;
v1 := @parameter0: io.vertx.ext.auth.User;
v2 := @parameter1: io.vertx.core.Handler;
v3 = virtualinvoke v0.<io.vertx.ext.auth.authorization.AuthorizationProvider$1: io.vertx.core.Future getAuthorizations(io.vertx.ext.auth.User)>(v1);
interfaceinvoke v3.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v2);
return;
}
public io.vertx.core.Future getAuthorizations(io.vertx.ext.auth.User)
{
io.vertx.ext.auth.authorization.AuthorizationProvider$1 v0;
io.vertx.ext.auth.User v1;
io.vertx.ext.auth.authorization.Authorizations v2;
java.util.Set v4;
java.lang.String v3;
io.vertx.core.Future v5;
v0 := @this: io.vertx.ext.auth.authorization.AuthorizationProvider$1;
v1 := @parameter0: io.vertx.ext.auth.User;
v2 = interfaceinvoke v1.<io.vertx.ext.auth.User: io.vertx.ext.auth.authorization.Authorizations authorizations()>();
v3 = virtualinvoke v0.<io.vertx.ext.auth.authorization.AuthorizationProvider$1: java.lang.String getId()>();
v4 = v0.<io.vertx.ext.auth.authorization.AuthorizationProvider$1: java.util.Set val$_authorizations>;
interfaceinvoke v2.<io.vertx.ext.auth.authorization.Authorizations: io.vertx.ext.auth.authorization.Authorizations add(java.lang.String,java.util.Set)>(v3, v4);
v5 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture()>();
return v5;
}
}