public class io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl extends java.lang.Object implements io.vertx.ext.auth.authorization.NotAuthorization
{
private io.vertx.ext.auth.authorization.Authorization authorization;
public void <init>()
{
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void <init>(io.vertx.ext.auth.authorization.Authorization)
{
java.lang.Object v2;
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
io.vertx.ext.auth.authorization.Authorization v1;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
v1 := @parameter0: io.vertx.ext.auth.authorization.Authorization;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: io.vertx.ext.auth.authorization.Authorization authorization> = v2;
return;
}
public boolean equals(java.lang.Object)
{
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
io.vertx.ext.auth.authorization.Authorization v3, v4;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: io.vertx.ext.auth.authorization.Authorization authorization>;
v4 = v1.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: io.vertx.ext.auth.authorization.Authorization authorization>;
v5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v3, v4);
return v5;
}
public io.vertx.ext.auth.authorization.Authorization getAuthorization()
{
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
io.vertx.ext.auth.authorization.Authorization v1;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
v1 = v0.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: io.vertx.ext.auth.authorization.Authorization authorization>;
return v1;
}
public int hashCode()
{
java.lang.Object[] v1;
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
io.vertx.ext.auth.authorization.Authorization v2;
int v3;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
v1 = newarray (java.lang.Object)[1];
v2 = v0.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: io.vertx.ext.auth.authorization.Authorization authorization>;
v1[0] = v2;
v3 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v3;
}
public boolean match(io.vertx.ext.auth.authorization.AuthorizationContext)
{
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
io.vertx.ext.auth.authorization.Authorization v2;
io.vertx.ext.auth.authorization.AuthorizationContext v1;
boolean v3, v4;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
v1 := @parameter0: io.vertx.ext.auth.authorization.AuthorizationContext;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: io.vertx.ext.auth.authorization.Authorization authorization>;
v3 = interfaceinvoke v2.<io.vertx.ext.auth.authorization.Authorization: boolean match(io.vertx.ext.auth.authorization.AuthorizationContext)>(v1);
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean verify(io.vertx.ext.auth.authorization.Authorization)
{
io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl v0;
boolean v2;
io.vertx.ext.auth.authorization.Authorization v1;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl;
v1 := @parameter0: io.vertx.ext.auth.authorization.Authorization;
v2 = virtualinvoke v0.<io.vertx.ext.auth.authorization.impl.NotAuthorizationImpl: boolean equals(java.lang.Object)>(v1);
return v2;
}
}