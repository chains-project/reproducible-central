public final class io.vertx.ext.auth.impl.CertificateHelper$CertInfo extends java.lang.Object
{
private final java.util.Map subject;
private final int version;
private final int basicConstraintsCA;
private void <init>(java.util.Map, int, int)
{
io.vertx.ext.auth.impl.CertificateHelper$CertInfo v0;
java.util.Map v1;
int v2, v3;
v0 := @this: io.vertx.ext.auth.impl.CertificateHelper$CertInfo;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject> = v1;
v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: int version> = v2;
v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: int basicConstraintsCA> = v3;
return;
}
public boolean subjectHas(java.lang.String)
{
io.vertx.ext.auth.impl.CertificateHelper$CertInfo v0;
java.util.Map v2, v3;
java.lang.String v1;
boolean v4;
v0 := @this: io.vertx.ext.auth.impl.CertificateHelper$CertInfo;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject>;
if v2 == null goto label1;
v3 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject>;
v4 = interfaceinvoke v3.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v4;
label1:
return 0;
}
public java.lang.String subject(java.lang.String)
{
io.vertx.ext.auth.impl.CertificateHelper$CertInfo v0;
java.util.Map v2, v3;
java.lang.Object v4;
java.lang.String v1;
v0 := @this: io.vertx.ext.auth.impl.CertificateHelper$CertInfo;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject>;
if v2 == null goto label1;
v3 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v4;
label1:
return null;
}
public int version()
{
int v1;
io.vertx.ext.auth.impl.CertificateHelper$CertInfo v0;
v0 := @this: io.vertx.ext.auth.impl.CertificateHelper$CertInfo;
v1 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: int version>;
return v1;
}
public int basicConstraintsCA()
{
int v1;
io.vertx.ext.auth.impl.CertificateHelper$CertInfo v0;
v0 := @this: io.vertx.ext.auth.impl.CertificateHelper$CertInfo;
v1 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: int basicConstraintsCA>;
return v1;
}
public boolean isEmpty()
{
io.vertx.ext.auth.impl.CertificateHelper$CertInfo v0;
java.util.Map v1, v2;
boolean v3;
v0 := @this: io.vertx.ext.auth.impl.CertificateHelper$CertInfo;
v1 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject>;
if v1 == null goto label1;
v2 = v0.<io.vertx.ext.auth.impl.CertificateHelper$CertInfo: java.util.Map subject>;
v3 = interfaceinvoke v2.<java.util.Map: boolean isEmpty()>();
return v3;
label1:
return 1;
}
}