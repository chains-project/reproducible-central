public abstract class io.vertx.ext.auth.impl.hash.AbstractMDHash extends java.lang.Object implements io.vertx.ext.auth.HashingAlgorithm
{
private final java.security.MessageDigest md;
void <init>(java.lang.String)
{
io.vertx.ext.auth.impl.hash.AbstractMDHash v0;
java.security.MessageDigest v2;
java.security.NoSuchAlgorithmException v3;
java.lang.RuntimeException v4;
java.lang.String v1, v5;
v0 := @this: io.vertx.ext.auth.impl.hash.AbstractMDHash;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
label1:
v2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(v1);
v0.<io.vertx.ext.auth.impl.hash.AbstractMDHash: java.security.MessageDigest md> = v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.RuntimeException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not available");
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v3);
throw v4;
label4:
return;
catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
}
public java.lang.String hash(io.vertx.ext.auth.HashString, java.lang.String)
{
byte[] v5, v6;
io.vertx.ext.auth.impl.hash.AbstractMDHash v0;
java.security.MessageDigest v3;
java.nio.charset.Charset v4;
io.vertx.ext.auth.HashString v1;
java.lang.String v2, v7;
v0 := @this: io.vertx.ext.auth.impl.hash.AbstractMDHash;
v1 := @parameter0: io.vertx.ext.auth.HashString;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.vertx.ext.auth.impl.hash.AbstractMDHash: java.security.MessageDigest md>;
v4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v5 = virtualinvoke v2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v4);
v6 = virtualinvoke v3.<java.security.MessageDigest: byte[] digest(byte[])>(v5);
v7 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64EncodeWithoutPadding(byte[])>(v6);
return v7;
}
}