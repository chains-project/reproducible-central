public interface  io.vertx.ext.web.client.HttpResponse extends java.lang.Object
{
public abstract io.vertx.core.http.HttpVersion version();
public abstract int statusCode();
public abstract java.lang.String statusMessage();
public abstract io.vertx.core.MultiMap headers();
public abstract java.lang.String getHeader(java.lang.String);
public abstract io.vertx.core.MultiMap trailers();
public abstract java.lang.String getTrailer(java.lang.String);
public abstract java.util.List cookies();
public abstract java.lang.Object body();
public abstract io.vertx.core.buffer.Buffer bodyAsBuffer();
public abstract java.util.List followedRedirects();
public java.lang.String bodyAsString()
{
io.vertx.ext.web.client.HttpResponse v0;
io.vertx.core.buffer.Buffer v1;
java.lang.Object v3;
java.util.function.Function v2;
v0 := @this: io.vertx.ext.web.client.HttpResponse;
v1 = interfaceinvoke v0.<io.vertx.ext.web.client.HttpResponse: io.vertx.core.buffer.Buffer bodyAsBuffer()>();
if v1 == null goto label1;
v2 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: java.util.function.Function UTF8_DECODER>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public java.lang.String bodyAsString(java.lang.String)
{
io.vertx.ext.web.client.HttpResponse v0;
io.vertx.core.buffer.Buffer v2;
java.lang.String v1, v3;
v0 := @this: io.vertx.ext.web.client.HttpResponse;
v1 := @parameter0: java.lang.String;
v2 = interfaceinvoke v0.<io.vertx.ext.web.client.HttpResponse: io.vertx.core.buffer.Buffer bodyAsBuffer()>();
if v2 == null goto label1;
v3 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: java.lang.String toString(java.lang.String)>(v1);
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public io.vertx.core.json.JsonObject bodyAsJsonObject()
{
io.vertx.ext.web.client.HttpResponse v0;
io.vertx.core.buffer.Buffer v1;
java.lang.Object v3;
java.util.function.Function v2;
v0 := @this: io.vertx.ext.web.client.HttpResponse;
v1 = interfaceinvoke v0.<io.vertx.ext.web.client.HttpResponse: io.vertx.core.buffer.Buffer bodyAsBuffer()>();
if v1 == null goto label1;
v2 = <io.vertx.ext.web.codec.impl.BodyCodecImpl: java.util.function.Function JSON_OBJECT_DECODER>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public abstract io.vertx.core.json.JsonArray bodyAsJsonArray();
public java.lang.Object bodyAsJson(java.lang.Class)
{
io.vertx.ext.web.client.HttpResponse v0;
io.vertx.core.buffer.Buffer v2;
java.lang.Class v1;
java.lang.Object v4;
java.util.function.Function v3;
v0 := @this: io.vertx.ext.web.client.HttpResponse;
v1 := @parameter0: java.lang.Class;
v2 = interfaceinvoke v0.<io.vertx.ext.web.client.HttpResponse: io.vertx.core.buffer.Buffer bodyAsBuffer()>();
if v2 == null goto label1;
v3 = staticinvoke <io.vertx.ext.web.codec.impl.BodyCodecImpl: java.util.function.Function jsonDecoder(java.lang.Class)>(v1);
v4 = interfaceinvoke v3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v2);
goto label2;
label1:
v4 = null;
label2:
return v4;
}
}