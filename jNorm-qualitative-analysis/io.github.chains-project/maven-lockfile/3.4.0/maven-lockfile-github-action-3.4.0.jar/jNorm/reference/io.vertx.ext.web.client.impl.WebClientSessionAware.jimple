public class io.vertx.ext.web.client.impl.WebClientSessionAware extends io.vertx.ext.web.client.impl.WebClientBase implements io.vertx.ext.web.client.WebClientSession
{
private final io.vertx.ext.web.client.spi.CookieStore cookieStore;
private final io.vertx.ext.web.client.spi.CacheStore cacheStore;
private io.vertx.core.MultiMap headers;
public void <init>(io.vertx.ext.web.client.WebClient, io.vertx.ext.web.client.spi.CookieStore)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
io.vertx.ext.web.client.WebClient v1;
io.vertx.ext.web.client.impl.SessionAwareInterceptor v4;
io.vertx.ext.web.client.spi.CacheStore v3;
io.vertx.ext.web.client.spi.CookieStore v2;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: io.vertx.ext.web.client.WebClient;
v2 := @parameter1: io.vertx.ext.web.client.spi.CookieStore;
specialinvoke v0.<io.vertx.ext.web.client.impl.WebClientBase: void <init>(io.vertx.ext.web.client.impl.WebClientBase)>(v1);
v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CookieStore cookieStore> = v2;
v3 = staticinvoke <io.vertx.ext.web.client.spi.CacheStore: io.vertx.ext.web.client.spi.CacheStore localStore()>();
v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CacheStore cacheStore> = v3;
v4 = new io.vertx.ext.web.client.impl.SessionAwareInterceptor;
specialinvoke v4.<io.vertx.ext.web.client.impl.SessionAwareInterceptor: void <init>(io.vertx.ext.web.client.impl.WebClientSessionAware)>(v0);
virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.impl.WebClientInternal addInterceptor(io.vertx.core.Handler)>(v4);
return;
}
public io.vertx.ext.web.client.spi.CookieStore cookieStore()
{
io.vertx.ext.web.client.spi.CookieStore v1;
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 = v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CookieStore cookieStore>;
return v1;
}
protected io.vertx.core.MultiMap headers()
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
io.vertx.core.MultiMap v1, v2, v3;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 = v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers>;
if v1 != null goto label1;
v2 = staticinvoke <io.vertx.core.http.HttpHeaders: io.vertx.core.MultiMap headers()>();
v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers> = v2;
label1:
v3 = v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers>;
return v3;
}
public io.vertx.ext.web.client.WebClientSession addHeader(java.lang.CharSequence, java.lang.CharSequence)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
java.lang.CharSequence v1, v2;
io.vertx.core.MultiMap v3;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.CharSequence)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.WebClientSession addHeader(java.lang.String, java.lang.String)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
io.vertx.core.MultiMap v3;
java.lang.String v1, v2;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap add(java.lang.String,java.lang.String)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.WebClientSession addHeader(java.lang.CharSequence, java.lang.Iterable)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
java.lang.CharSequence v1;
io.vertx.core.MultiMap v3;
java.lang.Iterable v2;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Iterable;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.WebClientSession addHeader(java.lang.String, java.lang.Iterable)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
io.vertx.core.MultiMap v3;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Iterable;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.WebClientSession removeHeader(java.lang.CharSequence)
{
io.vertx.core.MultiMap v2;
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
java.lang.CharSequence v1;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v2.<io.vertx.core.MultiMap: io.vertx.core.MultiMap remove(java.lang.CharSequence)>(v1);
return v0;
}
public io.vertx.ext.web.client.WebClientSession removeHeader(java.lang.String)
{
io.vertx.core.MultiMap v2;
java.lang.String v1;
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.core.MultiMap headers()>();
interfaceinvoke v2.<io.vertx.core.MultiMap: io.vertx.core.MultiMap remove(java.lang.String)>(v1);
return v0;
}
public io.vertx.ext.web.client.impl.HttpContext createContext(io.vertx.core.Handler)
{
io.vertx.ext.web.client.impl.WebClientSessionAware v0;
io.vertx.ext.web.client.spi.CacheStore v3;
io.vertx.core.Handler v1;
io.vertx.ext.web.client.impl.HttpContext v2, v4;
v0 := @this: io.vertx.ext.web.client.impl.WebClientSessionAware;
v1 := @parameter0: io.vertx.core.Handler;
v2 = specialinvoke v0.<io.vertx.ext.web.client.impl.WebClientBase: io.vertx.ext.web.client.impl.HttpContext createContext(io.vertx.core.Handler)>(v1);
v3 = v0.<io.vertx.ext.web.client.impl.WebClientSessionAware: io.vertx.ext.web.client.spi.CacheStore cacheStore>;
v4 = virtualinvoke v2.<io.vertx.ext.web.client.impl.HttpContext: io.vertx.ext.web.client.impl.HttpContext privateCacheStore(io.vertx.ext.web.client.spi.CacheStore)>(v3);
return v4;
}
}