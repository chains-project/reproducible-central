public class io.vertx.ext.web.client.impl.cache.CacheControl extends java.lang.Object
{
private final java.util.Set directives;
private final java.util.Map timeDirectives;
private final java.time.Instant expires;
private final java.time.Instant date;
private final java.lang.String etag;
private final java.lang.String vary;
private final long maxAge;
static io.vertx.ext.web.client.impl.cache.CacheControl parse(io.vertx.core.MultiMap)
{
io.vertx.core.MultiMap v0;
io.vertx.ext.web.client.impl.cache.CacheControl v1;
v0 := @parameter0: io.vertx.core.MultiMap;
v1 = new io.vertx.ext.web.client.impl.cache.CacheControl;
specialinvoke v1.<io.vertx.ext.web.client.impl.cache.CacheControl: void <init>(io.vertx.core.MultiMap)>(v0);
return v1;
}
private void <init>(io.vertx.core.MultiMap)
{
java.util.Date v12, v19;
io.vertx.core.MultiMap v1;
java.util.HashMap v3;
long v21;
java.util.HashSet v2;
java.lang.String v11, v18, v5, v7;
boolean v16, v9;
java.lang.CharSequence v10, v15, v17, v4, v6, v8;
java.time.Instant v13, v14, v20;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 := @parameter0: io.vertx.core.MultiMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives> = v2;
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Map timeDirectives> = v3;
v4 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence ETAG>;
v5 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.lang.String get(java.lang.CharSequence)>(v4);
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.lang.String etag> = v5;
v6 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence VARY>;
v7 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.lang.String get(java.lang.CharSequence)>(v6);
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.lang.String vary> = v7;
v8 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence DATE>;
v9 = interfaceinvoke v1.<io.vertx.core.MultiMap: boolean contains(java.lang.CharSequence)>(v8);
if v9 == 0 goto label1;
v10 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence DATE>;
v11 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.lang.String get(java.lang.CharSequence)>(v10);
v12 = staticinvoke <io.netty.handler.codec.DateFormatter: java.util.Date parseHttpDate(java.lang.CharSequence)>(v11);
v13 = virtualinvoke v12.<java.util.Date: java.time.Instant toInstant()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant date> = v13;
goto label2;
label1:
v14 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant date> = v14;
label2:
v15 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence EXPIRES>;
v16 = interfaceinvoke v1.<io.vertx.core.MultiMap: boolean contains(java.lang.CharSequence)>(v15);
if v16 == 0 goto label3;
v17 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence EXPIRES>;
v18 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.lang.String get(java.lang.CharSequence)>(v17);
v19 = staticinvoke <io.netty.handler.codec.DateFormatter: java.util.Date parseHttpDate(java.lang.CharSequence)>(v18);
v20 = virtualinvoke v19.<java.util.Date: java.time.Instant toInstant()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant expires> = v20;
goto label4;
label3:
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant expires> = null;
label4:
specialinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheControl: void parseAllCacheControl(io.vertx.core.MultiMap)>(v1);
v21 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheControl: long computeMaxAge()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheControl: long maxAge> = v21;
return;
}
public java.util.Set getDirectives()
{
java.util.Set v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
return v1;
}
public java.util.Map getTimeDirectives()
{
io.vertx.ext.web.client.impl.cache.CacheControl v0;
java.util.Map v1;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Map timeDirectives>;
return v1;
}
public java.lang.String getEtag()
{
java.lang.String v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.lang.String etag>;
return v1;
}
public long getMaxAge()
{
long v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: long maxAge>;
return v1;
}
public java.util.Set variations()
{
java.lang.CharSequence v14, v9;
java.util.Set v2;
java.util.HashSet v3;
int v10, v5;
java.lang.String v1, v12, v13, v4, v6, v7, v8;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v11;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.lang.String vary>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v2;
label1:
v3 = new java.util.HashSet;
specialinvoke v3.<java.util.HashSet: void <init>()>();
v4 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.lang.String vary>;
v5 = virtualinvoke v4.<java.lang.String: int indexOf(int)>(44);
label2:
if v5 <= 0 goto label3;
v6 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
v7 = virtualinvoke v6.<java.lang.String: java.lang.String trim()>();
v8 = virtualinvoke v7.<java.lang.String: java.lang.String toLowerCase()>();
v9 = staticinvoke <io.vertx.core.http.HttpHeaders: java.lang.CharSequence createOptimized(java.lang.String)>(v8);
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>(v9);
v10 = v5 + 1;
v4 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int)>(v10);
v5 = virtualinvoke v4.<java.lang.String: int indexOf(int)>(44);
goto label2;
label3:
v11 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v11 != 0 goto label4;
v12 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v13 = virtualinvoke v12.<java.lang.String: java.lang.String toLowerCase()>();
v14 = staticinvoke <io.vertx.core.http.HttpHeaders: java.lang.CharSequence createOptimized(java.lang.String)>(v13);
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>(v14);
label4:
return v3;
}
public boolean isCacheable()
{
java.util.Set v1;
long v7;
byte v8;
io.vertx.ext.web.client.impl.cache.CacheControlDirective v2;
java.lang.String v4, v5;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v3, v6, v9;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
v2 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective NO_STORE>;
v3 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v2);
if v3 == 0 goto label1;
return 0;
label1:
v4 = "*";
v5 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.lang.String vary>;
v6 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label2;
return 0;
label2:
v7 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: long maxAge>;
v8 = v7 cmp 0L;
if v8 <= 0 goto label3;
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
return v9;
}
public boolean isPublic()
{
io.vertx.ext.web.client.impl.cache.CacheControlDirective v2;
java.util.Set v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v3, v4, v5;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
v2 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective PUBLIC>;
v3 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v2);
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheControl: boolean isPrivate()>();
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public boolean isPrivate()
{
io.vertx.ext.web.client.impl.cache.CacheControlDirective v2;
java.util.Set v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
v2 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective PRIVATE>;
v3 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v2);
return v3;
}
public boolean isVarying()
{
java.util.Set v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v2, v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = virtualinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set variations()>();
v2 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean noStore()
{
io.vertx.ext.web.client.impl.cache.CacheControlDirective v2;
java.util.Set v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
v2 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective NO_STORE>;
v3 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v2);
return v3;
}
public boolean noCache()
{
io.vertx.ext.web.client.impl.cache.CacheControlDirective v3;
java.util.Set v2;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v1, v4, v5;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = virtualinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheControl: boolean noStore()>();
if v1 != 0 goto label1;
v2 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
v3 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective NO_CACHE>;
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public boolean mustRevalidate()
{
io.vertx.ext.web.client.impl.cache.CacheControlDirective v2;
java.util.Set v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
boolean v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Set directives>;
v2 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective MUST_REVALIDATE>;
v3 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v2);
return v3;
}
private long computeMaxAge()
{
long v15, v20, v8;
io.vertx.ext.web.client.impl.cache.CacheControlDirective v10, v13, v3, v6;
java.time.Duration v19;
java.util.Map v12, v2, v5, v9;
boolean v1, v11, v4;
java.time.Instant v16, v17, v18;
java.lang.Object v14, v7;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 = virtualinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheControl: boolean isPrivate()>();
if v1 != 0 goto label1;
v2 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Map timeDirectives>;
v3 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective SHARED_MAX_AGE>;
v4 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v3);
if v4 == 0 goto label1;
v5 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Map timeDirectives>;
v6 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective SHARED_MAX_AGE>;
v7 = interfaceinvoke v5.<java.util.Map: java.lang.Object get(java.lang.Object)>(v6);
v8 = virtualinvoke v7.<java.lang.Long: long longValue()>();
return v8;
label1:
v9 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Map timeDirectives>;
v10 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective MAX_AGE>;
v11 = interfaceinvoke v9.<java.util.Map: boolean containsKey(java.lang.Object)>(v10);
if v11 == 0 goto label2;
v12 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.util.Map timeDirectives>;
v13 = <io.vertx.ext.web.client.impl.cache.CacheControlDirective: io.vertx.ext.web.client.impl.cache.CacheControlDirective MAX_AGE>;
v14 = interfaceinvoke v12.<java.util.Map: java.lang.Object get(java.lang.Object)>(v13);
v15 = virtualinvoke v14.<java.lang.Long: long longValue()>();
return v15;
label2:
v16 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant expires>;
if v16 == null goto label3;
v17 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant date>;
v18 = v0.<io.vertx.ext.web.client.impl.cache.CacheControl: java.time.Instant expires>;
v19 = staticinvoke <java.time.Duration: java.time.Duration between(java.time.temporal.Temporal,java.time.temporal.Temporal)>(v17, v18);
v20 = virtualinvoke v19.<java.time.Duration: long getSeconds()>();
return v20;
label3:
return 9223372036854775807L;
}
private void parseAllCacheControl(io.vertx.core.MultiMap)
{
java.util.function.Consumer v4;
java.util.List v3;
java.lang.CharSequence v2;
io.vertx.core.MultiMap v1;
io.vertx.ext.web.client.impl.cache.CacheControl v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheControl;
v1 := @parameter0: io.vertx.core.MultiMap;
v2 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence CACHE_CONTROL>;
v3 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.util.List getAll(java.lang.CharSequence)>(v2);
v4 = staticinvoke <io.vertx.ext.web.client.impl.cache.CacheControl$lambda_parseAllCacheControl_0__836: java.util.function.Consumer bootstrap$(io.vertx.ext.web.client.impl.cache.CacheControl)>(v0);
interfaceinvoke v3.<java.util.List: void forEach(java.util.function.Consumer)>(v4);
return;
}
}