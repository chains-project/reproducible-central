class io.vertx.ext.web.client.impl.cache.CacheVariationsKey extends java.lang.Object
{
protected final java.lang.String host;
protected final int port;
protected final java.lang.String path;
protected final java.lang.String queryString;
void <init>(io.vertx.core.http.RequestOptions)
{
io.vertx.core.http.RequestOptions v1;
java.lang.Integer v5;
java.util.Map v8;
int v6;
io.netty.handler.codec.http.QueryStringDecoder v3;
io.vertx.ext.web.client.impl.cache.CacheVariationsKey v0;
java.lang.String v2, v4, v7, v9;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheVariationsKey;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<io.vertx.core.http.RequestOptions: java.lang.String getURI()>();
v3 = new io.netty.handler.codec.http.QueryStringDecoder;
specialinvoke v3.<io.netty.handler.codec.http.QueryStringDecoder: void <init>(java.lang.String)>(v2);
v4 = virtualinvoke v1.<io.vertx.core.http.RequestOptions: java.lang.String getHost()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String host> = v4;
v5 = virtualinvoke v1.<io.vertx.core.http.RequestOptions: java.lang.Integer getPort()>();
v6 = virtualinvoke v5.<java.lang.Integer: int intValue()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: int port> = v6;
v7 = virtualinvoke v3.<io.netty.handler.codec.http.QueryStringDecoder: java.lang.String path()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String path> = v7;
v8 = virtualinvoke v3.<io.netty.handler.codec.http.QueryStringDecoder: java.util.Map parameters()>();
v9 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String queryString(java.util.Map)>(v8);
v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String queryString> = v9;
return;
}
public java.lang.String toString()
{
int v2;
io.vertx.ext.web.client.impl.cache.CacheVariationsKey v0;
java.lang.String v1, v3, v4, v5;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheVariationsKey;
v1 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String host>;
v2 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: int port>;
v3 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String path>;
v4 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String queryString>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int,java.lang.String,java.lang.String)>(v1, v2, v3, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001\u0001?\u0001");
return v5;
}
public boolean equals(java.lang.Object)
{
int v4, v5;
java.lang.String v10, v12, v13, v6, v7, v9;
boolean v11, v14, v15, v8;
io.vertx.ext.web.client.impl.cache.CacheVariationsKey v0;
java.lang.Class v2, v3;
java.lang.Object v1;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheVariationsKey;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: int port>;
v5 = v1.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: int port>;
if v4 != v5 goto label4;
v6 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String host>;
v7 = v1.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String host>;
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label4;
v9 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String path>;
v10 = v1.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String path>;
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label4;
v12 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String queryString>;
v13 = v1.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String queryString>;
v14 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>(v13);
if v14 == 0 goto label4;
v15 = 1;
goto label5;
label4:
v15 = 0;
label5:
return v15;
}
public int hashCode()
{
java.lang.Object[] v1;
java.lang.Integer v4;
int v3, v7;
io.vertx.ext.web.client.impl.cache.CacheVariationsKey v0;
java.lang.String v2, v5, v6;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheVariationsKey;
v1 = newarray (java.lang.Object)[4];
v2 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String host>;
v1[0] = v2;
v3 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: int port>;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v1[1] = v4;
v5 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String path>;
v1[2] = v5;
v6 = v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String queryString>;
v1[3] = v6;
v7 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v7;
}
private java.lang.String queryString(java.util.Map)
{
io.vertx.core.MultiMap v2;
java.util.function.Function v8;
java.util.List v4;
java.util.stream.Stream v5, v7, v9;
java.util.Map v1;
java.util.function.BiConsumer v3;
io.vertx.ext.web.client.impl.cache.CacheVariationsKey v0;
java.lang.Object v11;
java.util.stream.Collector v10;
java.util.Comparator v6;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheVariationsKey;
v1 := @parameter0: java.util.Map;
v2 = staticinvoke <io.vertx.core.MultiMap: io.vertx.core.MultiMap caseInsensitiveMultiMap()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <io.vertx.ext.web.client.impl.cache.CacheVariationsKey$set__833: java.util.function.BiConsumer bootstrap$(io.vertx.core.MultiMap)>(v2);
interfaceinvoke v1.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v3);
v4 = interfaceinvoke v2.<io.vertx.core.MultiMap: java.util.List entries()>();
v5 = interfaceinvoke v4.<java.util.List: java.util.stream.Stream stream()>();
v6 = staticinvoke <io.vertx.ext.web.client.impl.cache.CacheVariationsKey$lambda_queryString_0__834: java.util.Comparator bootstrap$()>();
v7 = interfaceinvoke v5.<java.util.stream.Stream: java.util.stream.Stream sorted(java.util.Comparator)>(v6);
v8 = staticinvoke <io.vertx.ext.web.client.impl.cache.CacheVariationsKey$lambda_queryString_1__835: java.util.function.Function bootstrap$()>();
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v8);
v10 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>("&");
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v10);
return v11;
}
}