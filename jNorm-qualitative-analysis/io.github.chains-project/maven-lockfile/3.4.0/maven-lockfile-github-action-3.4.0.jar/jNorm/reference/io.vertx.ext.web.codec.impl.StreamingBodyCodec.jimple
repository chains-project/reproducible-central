public class io.vertx.ext.web.codec.impl.StreamingBodyCodec extends java.lang.Object implements io.vertx.ext.web.codec.BodyCodec
{
private final io.vertx.core.streams.WriteStream stream;
private final boolean close;
private java.lang.Throwable error;
public void <init>(io.vertx.core.streams.WriteStream)
{
io.vertx.ext.web.codec.impl.StreamingBodyCodec v0;
io.vertx.core.streams.WriteStream v1;
v0 := @this: io.vertx.ext.web.codec.impl.StreamingBodyCodec;
v1 := @parameter0: io.vertx.core.streams.WriteStream;
specialinvoke v0.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: void <init>(io.vertx.core.streams.WriteStream,boolean)>(v1, 1);
return;
}
public void <init>(io.vertx.core.streams.WriteStream, boolean)
{
io.vertx.ext.web.codec.impl.StreamingBodyCodec v0;
io.vertx.core.streams.WriteStream v1;
boolean v2;
v0 := @this: io.vertx.ext.web.codec.impl.StreamingBodyCodec;
v1 := @parameter0: io.vertx.core.streams.WriteStream;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: io.vertx.core.streams.WriteStream stream> = v1;
v0.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: boolean close> = v2;
return;
}
public void init()
{
io.vertx.core.Handler v2;
io.vertx.ext.web.codec.impl.StreamingBodyCodec v0;
io.vertx.core.streams.WriteStream v1;
v0 := @this: io.vertx.ext.web.codec.impl.StreamingBodyCodec;
v1 = v0.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: io.vertx.core.streams.WriteStream stream>;
v2 = staticinvoke <io.vertx.ext.web.codec.impl.StreamingBodyCodec$lambda_init_0__863: io.vertx.core.Handler bootstrap$(io.vertx.ext.web.codec.impl.StreamingBodyCodec)>(v0);
interfaceinvoke v1.<io.vertx.core.streams.WriteStream: io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler)>(v2);
return;
}
public void create(io.vertx.core.Handler)
{
java.lang.Throwable v2, v3, v6;
io.vertx.ext.web.codec.impl.StreamingBodyCodec v0;
io.vertx.ext.web.codec.impl.StreamingBodyCodec$1 v5;
io.vertx.core.Handler v1;
io.vertx.core.Future v4;
v0 := @this: io.vertx.ext.web.codec.impl.StreamingBodyCodec;
v1 := @parameter0: io.vertx.core.Handler;
entermonitor v0;
label1:
v2 = v0.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: java.lang.Throwable error>;
if v2 == null goto label2;
v3 = v0.<io.vertx.ext.web.codec.impl.StreamingBodyCodec: java.lang.Throwable error>;
v4 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future failedFuture(java.lang.Throwable)>(v3);
goto label3;
label2:
v5 = new io.vertx.ext.web.codec.impl.StreamingBodyCodec$1;
specialinvoke v5.<io.vertx.ext.web.codec.impl.StreamingBodyCodec$1: void <init>(io.vertx.ext.web.codec.impl.StreamingBodyCodec)>(v0);
v4 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v5);
label3:
exitmonitor v0;
label4:
goto label6;
label5:
v6 := @caughtexception;
exitmonitor v0;
throw v6;
label6:
interfaceinvoke v1.<io.vertx.core.Handler: void handle(java.lang.Object)>(v4);
return;
catch java.lang.Throwable from label1 to label4 with label5;
}
}