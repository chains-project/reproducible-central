public class io.vertx.mutiny.core.parsetools.JsonParser extends java.lang.Object implements io.vertx.mutiny.core.streams.ReadStream, io.vertx.core.Handler, java.util.function.Consumer
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.parsetools.JsonParser delegate;
static final io.smallrye.mutiny.vertx.TypeArg TYPE_ARG_0;
private io.smallrye.mutiny.Multi multi;
public void <init>(io.vertx.core.parsetools.JsonParser)
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.core.parsetools.JsonParser;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
java.lang.Object v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate> = null;
return;
}
public io.vertx.core.parsetools.JsonParser getDelegate()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
return v1;
}
public java.lang.String toString()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
java.lang.String v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.parsetools.JsonParser v4, v5;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v5 = v1.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public void handle(io.vertx.mutiny.core.buffer.Buffer)
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.buffer.Buffer v3;
io.vertx.mutiny.core.buffer.Buffer v1;
io.vertx.core.parsetools.JsonParser v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v3 = virtualinvoke v1.<io.vertx.mutiny.core.buffer.Buffer: io.vertx.core.buffer.Buffer getDelegate()>();
interfaceinvoke v2.<io.vertx.core.parsetools.JsonParser: void handle(java.lang.Object)>(v3);
return;
}
public io.vertx.mutiny.core.streams.Pipe pipe()
{
io.vertx.mutiny.core.streams.Pipe v4;
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.streams.Pipe v2;
io.smallrye.mutiny.vertx.TypeArg v3;
io.vertx.core.parsetools.JsonParser v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.streams.Pipe pipe()>();
v3 = <io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.vertx.TypeArg TYPE_ARG_0>;
v4 = staticinvoke <io.vertx.mutiny.core.streams.Pipe: io.vertx.mutiny.core.streams.Pipe newInstance(io.vertx.core.streams.Pipe,io.smallrye.mutiny.vertx.TypeArg)>(v2, v3);
return v4;
}
public io.smallrye.mutiny.Uni pipeTo(io.vertx.mutiny.core.streams.WriteStream)
{
io.vertx.mutiny.core.streams.WriteStream v1;
java.util.function.Consumer v2;
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.mutiny.core.streams.WriteStream;
v2 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda_pipeTo_3__2003: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.parsetools.JsonParser,io.vertx.mutiny.core.streams.WriteStream)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.Void pipeToAndAwait(io.vertx.mutiny.core.streams.WriteStream)
{
io.vertx.mutiny.core.streams.WriteStream v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.smallrye.mutiny.groups.UniAwait v3;
java.lang.Object v4;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.mutiny.core.streams.WriteStream;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Uni pipeTo(io.vertx.mutiny.core.streams.WriteStream)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void pipeToAndForget(io.vertx.mutiny.core.streams.WriteStream)
{
io.vertx.mutiny.core.streams.WriteStream v1;
java.util.function.Consumer v4;
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.mutiny.core.streams.WriteStream;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Uni pipeTo(io.vertx.mutiny.core.streams.WriteStream)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public static io.vertx.mutiny.core.parsetools.JsonParser newParser()
{
io.vertx.core.parsetools.JsonParser v0;
io.vertx.mutiny.core.parsetools.JsonParser v1;
v0 = staticinvoke <io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser newParser()>();
v1 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.mutiny.core.parsetools.JsonParser newInstance(io.vertx.core.parsetools.JsonParser)>(v0);
return v1;
}
public static io.vertx.mutiny.core.parsetools.JsonParser newParser(io.vertx.mutiny.core.streams.ReadStream)
{
io.vertx.mutiny.core.parsetools.JsonParser v3;
io.vertx.mutiny.core.streams.ReadStream v0;
io.vertx.core.parsetools.JsonParser v2;
io.vertx.core.streams.ReadStream v1;
v0 := @parameter0: io.vertx.mutiny.core.streams.ReadStream;
v1 = interfaceinvoke v0.<io.vertx.mutiny.core.streams.ReadStream: io.vertx.core.streams.ReadStream getDelegate()>();
v2 = staticinvoke <io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser newParser(io.vertx.core.streams.ReadStream)>(v1);
v3 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.mutiny.core.parsetools.JsonParser newInstance(io.vertx.core.parsetools.JsonParser)>(v2);
return v3;
}
public static io.vertx.mutiny.core.parsetools.JsonParser newParser(java.util.concurrent.Flow$Publisher)
{
io.vertx.mutiny.core.parsetools.JsonParser v5;
java.util.concurrent.Flow$Publisher v0;
io.vertx.core.parsetools.JsonParser v4;
io.vertx.core.streams.ReadStream v2, v3;
java.util.function.Function v1;
v0 := @parameter0: java.util.concurrent.Flow$Publisher;
v1 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda_newParser_4__2004: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.smallrye.mutiny.vertx.ReadStreamSubscriber: io.vertx.core.streams.ReadStream asReadStream(java.util.concurrent.Flow$Publisher,java.util.function.Function)>(v0, v1);
v3 = interfaceinvoke v2.<io.vertx.core.streams.ReadStream: io.vertx.core.streams.ReadStream resume()>();
v4 = staticinvoke <io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser newParser(io.vertx.core.streams.ReadStream)>(v3);
v5 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.mutiny.core.parsetools.JsonParser newInstance(io.vertx.core.parsetools.JsonParser)>(v4);
return v5;
}
public io.vertx.mutiny.core.parsetools.JsonParser write(io.vertx.mutiny.core.buffer.Buffer)
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.buffer.Buffer v3;
io.vertx.mutiny.core.buffer.Buffer v1;
io.vertx.core.parsetools.JsonParser v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v3 = virtualinvoke v1.<io.vertx.mutiny.core.buffer.Buffer: io.vertx.core.buffer.Buffer getDelegate()>();
interfaceinvoke v2.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser write(io.vertx.core.buffer.Buffer)>(v3);
return v0;
}
public void end()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: void end()>();
return;
}
public io.vertx.mutiny.core.parsetools.JsonParser objectEventMode()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser objectEventMode()>();
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser objectValueMode()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser objectValueMode()>();
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser arrayEventMode()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser arrayEventMode()>();
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser arrayValueMode()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser arrayValueMode()>();
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser pause()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser pause()>();
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser resume()
{
io.vertx.core.parsetools.JsonParser v1;
io.vertx.mutiny.core.parsetools.JsonParser v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v1.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser resume()>();
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser fetch(long)
{
io.vertx.core.parsetools.JsonParser v2;
io.vertx.mutiny.core.parsetools.JsonParser v0;
long v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: long;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v2.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser fetch(long)>(v1);
return v0;
}
private io.vertx.mutiny.core.parsetools.JsonParser __endHandler(io.vertx.core.Handler)
{
io.vertx.core.parsetools.JsonParser v2;
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v2.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser endHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser endHandler(java.lang.Runnable)
{
io.vertx.mutiny.core.parsetools.JsonParser v0, v3;
io.vertx.core.Handler v2;
java.lang.Runnable v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda_endHandler_5__2005: io.vertx.core.Handler bootstrap$(java.lang.Runnable)>(v1);
v3 = specialinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.mutiny.core.parsetools.JsonParser __endHandler(io.vertx.core.Handler)>(v2);
return v3;
}
private io.vertx.mutiny.core.parsetools.JsonParser __handler(io.vertx.core.Handler)
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.smallrye.mutiny.vertx.DelegatingHandler v3;
io.vertx.core.parsetools.JsonParser v2;
io.vertx.core.Handler v1;
java.util.function.Function v4;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v3 = new io.smallrye.mutiny.vertx.DelegatingHandler;
v4 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda___handler_6__2006: java.util.function.Function bootstrap$()>();
specialinvoke v3.<io.smallrye.mutiny.vertx.DelegatingHandler: void <init>(io.vertx.core.Handler,java.util.function.Function)>(v1, v4);
interfaceinvoke v2.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser handler(io.vertx.core.Handler)>(v3);
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser handler(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.vertx.mutiny.core.parsetools.JsonParser v0, v3;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: java.util.function.Consumer;
if v1 == null goto label1;
v2 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v2.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v1);
goto label2;
label1:
v2 = null;
label2:
v3 = specialinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.mutiny.core.parsetools.JsonParser __handler(io.vertx.core.Handler)>(v2);
return v3;
}
private io.vertx.mutiny.core.parsetools.JsonParser __exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.parsetools.JsonParser v2;
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
interfaceinvoke v2.<io.vertx.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser exceptionHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.mutiny.core.parsetools.JsonParser exceptionHandler(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.vertx.mutiny.core.parsetools.JsonParser v0, v3;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: java.util.function.Consumer;
if v1 == null goto label1;
v2 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v2.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v1);
goto label2;
label1:
v2 = null;
label2:
v3 = specialinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.mutiny.core.parsetools.JsonParser __exceptionHandler(io.vertx.core.Handler)>(v2);
return v3;
}
public synchronized io.smallrye.mutiny.Multi toMulti()
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.core.parsetools.JsonParser v3;
java.util.function.Function v2;
io.smallrye.mutiny.Multi v1, v4, v5;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Multi multi>;
if v1 != null goto label1;
v2 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$newInstance__2007: java.util.function.Function bootstrap$()>();
v3 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.vertx.core.parsetools.JsonParser delegate>;
v4 = staticinvoke <io.smallrye.mutiny.vertx.MultiHelper: io.smallrye.mutiny.Multi toMulti(io.vertx.core.streams.ReadStream,java.util.function.Function)>(v3, v2);
v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Multi multi> = v4;
label1:
v5 = v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Multi multi>;
return v5;
}
public java.lang.Iterable toBlockingIterable()
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.smallrye.mutiny.groups.MultiSubscribe v2;
io.smallrye.mutiny.helpers.BlockingIterable v3;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Multi toMulti()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.helpers.BlockingIterable asIterable()>();
return v3;
}
public java.util.stream.Stream toBlockingStream()
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.smallrye.mutiny.groups.MultiSubscribe v2;
java.util.stream.Stream v3;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.Multi toMulti()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiSubscribe: java.util.stream.Stream asStream()>();
return v3;
}
public void accept(io.vertx.mutiny.core.buffer.Buffer)
{
io.vertx.mutiny.core.parsetools.JsonParser v0;
io.vertx.mutiny.core.buffer.Buffer v1;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonParser;
v1 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
virtualinvoke v0.<io.vertx.mutiny.core.parsetools.JsonParser: void handle(io.vertx.mutiny.core.buffer.Buffer)>(v1);
return;
}
public static io.vertx.mutiny.core.parsetools.JsonParser newInstance(io.vertx.core.parsetools.JsonParser)
{
io.vertx.core.parsetools.JsonParser v0;
io.vertx.mutiny.core.parsetools.JsonParser v1;
v0 := @parameter0: io.vertx.core.parsetools.JsonParser;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.parsetools.JsonParser;
specialinvoke v1.<io.vertx.mutiny.core.parsetools.JsonParser: void <init>(io.vertx.core.parsetools.JsonParser)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
io.smallrye.mutiny.vertx.TypeArg v0, v3;
java.util.function.Function v1, v2, v4, v5;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda_static_0__2008: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$getDelegate__2009: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
v3 = new io.smallrye.mutiny.vertx.TypeArg;
v4 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda_static_1__2010: java.util.function.Function bootstrap$()>();
v5 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonParser$lambda_static_2__2011: java.util.function.Function bootstrap$()>();
specialinvoke v3.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v4, v5);
<io.vertx.mutiny.core.parsetools.JsonParser: io.smallrye.mutiny.vertx.TypeArg TYPE_ARG_0> = v3;
return;
}
}