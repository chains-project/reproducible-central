public interface  io.vertx.mutiny.core.streams.ReadStream extends java.lang.Object implements io.vertx.mutiny.core.streams.StreamBase
{
public abstract io.vertx.core.streams.ReadStream getDelegate();
public abstract io.smallrye.mutiny.Multi toMulti();
public abstract io.vertx.mutiny.core.streams.ReadStream exceptionHandler(java.util.function.Consumer);
public abstract io.vertx.mutiny.core.streams.ReadStream handler(java.util.function.Consumer);
public abstract io.vertx.mutiny.core.streams.ReadStream pause();
public abstract io.vertx.mutiny.core.streams.ReadStream resume();
public abstract io.vertx.mutiny.core.streams.ReadStream fetch(long);
public abstract io.vertx.mutiny.core.streams.ReadStream endHandler(java.lang.Runnable);
public abstract io.vertx.mutiny.core.streams.Pipe pipe();
public abstract io.smallrye.mutiny.Uni pipeTo(io.vertx.mutiny.core.streams.WriteStream);
public abstract java.lang.Void pipeToAndAwait(io.vertx.mutiny.core.streams.WriteStream);
public abstract void pipeToAndForget(io.vertx.mutiny.core.streams.WriteStream);
public static io.vertx.mutiny.core.streams.ReadStream newInstance(io.vertx.core.streams.ReadStream)
{
io.vertx.core.streams.ReadStream v0;
io.vertx.mutiny.core.streams.ReadStreamImpl v1;
v0 := @parameter0: io.vertx.core.streams.ReadStream;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.streams.ReadStreamImpl;
specialinvoke v1.<io.vertx.mutiny.core.streams.ReadStreamImpl: void <init>(io.vertx.core.streams.ReadStream)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
public static io.vertx.mutiny.core.streams.ReadStream newInstance(io.vertx.core.streams.ReadStream, io.smallrye.mutiny.vertx.TypeArg)
{
io.vertx.core.streams.ReadStream v0;
io.vertx.mutiny.core.streams.ReadStreamImpl v2;
io.smallrye.mutiny.vertx.TypeArg v1;
v0 := @parameter0: io.vertx.core.streams.ReadStream;
v1 := @parameter1: io.smallrye.mutiny.vertx.TypeArg;
if v0 == null goto label1;
v2 = new io.vertx.mutiny.core.streams.ReadStreamImpl;
specialinvoke v2.<io.vertx.mutiny.core.streams.ReadStreamImpl: void <init>(io.vertx.core.streams.ReadStream,io.smallrye.mutiny.vertx.TypeArg)>(v0, v1);
goto label2;
label1:
v2 = null;
label2:
return v2;
}
}