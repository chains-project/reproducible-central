public abstract class jakarta.el.ELContext extends java.lang.Object
{
private boolean resolved;
private java.util.HashMap map;
private transient java.util.List listeners;
private java.util.Stack lambdaArgs;
private jakarta.el.ImportHandler importHandler;
private java.util.Locale locale;
public void <init>()
{
jakarta.el.ELContext v0;
java.util.HashMap v1;
v0 := @this: jakarta.el.ELContext;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v0.<jakarta.el.ELContext: java.util.HashMap map> = v1;
return;
}
public void setPropertyResolved(boolean)
{
jakarta.el.ELContext v0;
boolean v1;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: boolean;
v0.<jakarta.el.ELContext: boolean resolved> = v1;
return;
}
public void setPropertyResolved(java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v0;
java.lang.Object v1, v2;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
virtualinvoke v0.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(1);
virtualinvoke v0.<jakarta.el.ELContext: void notifyPropertyResolved(java.lang.Object,java.lang.Object)>(v1, v2);
return;
}
public boolean isPropertyResolved()
{
jakarta.el.ELContext v0;
boolean v1;
v0 := @this: jakarta.el.ELContext;
v1 = v0.<jakarta.el.ELContext: boolean resolved>;
return v1;
}
public void putContext(java.lang.Class, java.lang.Object)
{
jakarta.el.ELContext v0;
java.lang.Class v1;
java.lang.Object v2;
java.util.HashMap v4;
java.lang.NullPointerException v3;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Object;
if v1 == null goto label1;
if v2 != null goto label2;
label1:
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>()>();
throw v3;
label2:
v4 = v0.<jakarta.el.ELContext: java.util.HashMap map>;
virtualinvoke v4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return;
}
public java.lang.Object getContext(java.lang.Class)
{
jakarta.el.ELContext v0;
java.lang.Class v1;
java.lang.Object v4;
java.util.HashMap v3;
java.lang.NullPointerException v2;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.Class;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
v3 = v0.<jakarta.el.ELContext: java.util.HashMap map>;
v4 = virtualinvoke v3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v1);
return v4;
}
public abstract jakarta.el.ELResolver getELResolver();
public jakarta.el.ImportHandler getImportHandler()
{
jakarta.el.ELContext v0;
jakarta.el.ImportHandler v1, v2, v3;
v0 := @this: jakarta.el.ELContext;
v1 = v0.<jakarta.el.ELContext: jakarta.el.ImportHandler importHandler>;
if v1 != null goto label1;
v2 = new jakarta.el.ImportHandler;
specialinvoke v2.<jakarta.el.ImportHandler: void <init>()>();
v0.<jakarta.el.ELContext: jakarta.el.ImportHandler importHandler> = v2;
label1:
v3 = v0.<jakarta.el.ELContext: jakarta.el.ImportHandler importHandler>;
return v3;
}
public abstract jakarta.el.FunctionMapper getFunctionMapper();
public java.util.Locale getLocale()
{
jakarta.el.ELContext v0;
java.util.Locale v1;
v0 := @this: jakarta.el.ELContext;
v1 = v0.<jakarta.el.ELContext: java.util.Locale locale>;
return v1;
}
public void setLocale(java.util.Locale)
{
jakarta.el.ELContext v0;
java.util.Locale v1;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.util.Locale;
v0.<jakarta.el.ELContext: java.util.Locale locale> = v1;
return;
}
public abstract jakarta.el.VariableMapper getVariableMapper();
public void addEvaluationListener(jakarta.el.EvaluationListener)
{
jakarta.el.ELContext v0;
java.util.List v2, v4;
jakarta.el.EvaluationListener v1;
java.util.ArrayList v3;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: jakarta.el.EvaluationListener;
v2 = v0.<jakarta.el.ELContext: java.util.List listeners>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<jakarta.el.ELContext: java.util.List listeners> = v3;
label1:
v4 = v0.<jakarta.el.ELContext: java.util.List listeners>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return;
}
public java.util.List getEvaluationListeners()
{
jakarta.el.ELContext v0;
java.util.List v1;
v0 := @this: jakarta.el.ELContext;
v1 = v0.<jakarta.el.ELContext: java.util.List listeners>;
return v1;
}
public void notifyBeforeEvaluation(java.lang.String)
{
jakarta.el.ELContext v0;
java.util.List v2, v3;
java.util.Iterator v4;
java.lang.Object v6;
java.lang.String v1;
boolean v5;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.el.ELContext: java.util.List getEvaluationListeners()>();
if v2 != null goto label1;
return;
label1:
v3 = virtualinvoke v0.<jakarta.el.ELContext: java.util.List getEvaluationListeners()>();
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label2:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v6.<jakarta.el.EvaluationListener: void beforeEvaluation(jakarta.el.ELContext,java.lang.String)>(v0, v1);
goto label2;
label3:
return;
}
public void notifyAfterEvaluation(java.lang.String)
{
jakarta.el.ELContext v0;
java.util.List v2, v3;
java.util.Iterator v4;
java.lang.Object v6;
java.lang.String v1;
boolean v5;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.el.ELContext: java.util.List getEvaluationListeners()>();
if v2 != null goto label1;
return;
label1:
v3 = virtualinvoke v0.<jakarta.el.ELContext: java.util.List getEvaluationListeners()>();
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label2:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v6.<jakarta.el.EvaluationListener: void afterEvaluation(jakarta.el.ELContext,java.lang.String)>(v0, v1);
goto label2;
label3:
return;
}
public void notifyPropertyResolved(java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v0;
java.util.Iterator v5;
java.util.List v3, v4;
java.lang.Object v1, v2, v7;
boolean v6;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<jakarta.el.ELContext: java.util.List getEvaluationListeners()>();
if v3 != null goto label1;
return;
label1:
v4 = virtualinvoke v0.<jakarta.el.ELContext: java.util.List getEvaluationListeners()>();
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label2:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v7.<jakarta.el.EvaluationListener: void propertyResolved(jakarta.el.ELContext,java.lang.Object,java.lang.Object)>(v0, v1, v2);
goto label2;
label3:
return;
}
public boolean isLambdaArgument(java.lang.String)
{
jakarta.el.ELContext v0;
java.util.Stack v2, v3, v6;
int v4, v5;
java.lang.Object v7;
java.lang.String v1;
boolean v8;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.String;
v2 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
if v2 != null goto label1;
return 0;
label1:
v3 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
v4 = virtualinvoke v3.<java.util.Stack: int size()>();
v5 = v4 - 1;
label2:
if v5 < 0 goto label4;
v6 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
v7 = virtualinvoke v6.<java.util.Stack: java.lang.Object elementAt(int)>(v5);
v8 = interfaceinvoke v7.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
if v8 == 0 goto label3;
return 1;
label3:
v5 = v5 - 1;
goto label2;
label4:
return 0;
}
public java.lang.Object getLambdaArgument(java.lang.String)
{
jakarta.el.ELContext v0;
java.util.Stack v2, v3, v6;
int v4, v5;
java.lang.Object v7, v8;
java.lang.String v1;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.String;
v2 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
if v2 != null goto label1;
return null;
label1:
v3 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
v4 = virtualinvoke v3.<java.util.Stack: int size()>();
v5 = v4 - 1;
label2:
if v5 < 0 goto label4;
v6 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
v7 = virtualinvoke v6.<java.util.Stack: java.lang.Object elementAt(int)>(v5);
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v8 == null goto label3;
return v8;
label3:
v5 = v5 - 1;
goto label2;
label4:
return null;
}
public void enterLambdaScope(java.util.Map)
{
jakarta.el.ELContext v0;
java.util.Map v1;
java.util.Stack v2, v3, v4;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.util.Map;
v2 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
if v2 != null goto label1;
v3 = new java.util.Stack;
specialinvoke v3.<java.util.Stack: void <init>()>();
v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs> = v3;
label1:
v4 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
virtualinvoke v4.<java.util.Stack: java.lang.Object push(java.lang.Object)>(v1);
return;
}
public void exitLambdaScope()
{
jakarta.el.ELContext v0;
java.util.Stack v1, v2;
v0 := @this: jakarta.el.ELContext;
v1 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
if v1 == null goto label1;
v2 = v0.<jakarta.el.ELContext: java.util.Stack lambdaArgs>;
virtualinvoke v2.<java.util.Stack: java.lang.Object pop()>();
label1:
return;
}
public java.lang.Object convertToType(java.lang.Object, java.lang.Class)
{
java.lang.Throwable v10;
jakarta.el.ELContext v0;
jakarta.el.ELResolver v4;
jakarta.el.ELException v7, v9;
java.lang.Exception v8;
java.lang.Class v2;
java.lang.Object v1, v11, v12, v5;
boolean v3, v6;
v0 := @this: jakarta.el.ELContext;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v0.<jakarta.el.ELContext: boolean isPropertyResolved()>();
label1:
virtualinvoke v0.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(0);
v4 = virtualinvoke v0.<jakarta.el.ELContext: jakarta.el.ELResolver getELResolver()>();
if v4 == null goto label3;
v5 = virtualinvoke v4.<jakarta.el.ELResolver: java.lang.Object convertToType(jakarta.el.ELContext,java.lang.Object,java.lang.Class)>(v0, v1, v2);
v6 = virtualinvoke v0.<jakarta.el.ELContext: boolean isPropertyResolved()>();
if v6 == 0 goto label3;
label2:
virtualinvoke v0.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(v3);
return v5;
label3:
virtualinvoke v0.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(v3);
goto label7;
label4:
v7 := @caughtexception;
throw v7;
label5:
v8 := @caughtexception;
v9 = new jakarta.el.ELException;
specialinvoke v9.<jakarta.el.ELException: void <init>(java.lang.Throwable)>(v8);
throw v9;
label6:
v10 := @caughtexception;
virtualinvoke v0.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(v3);
throw v10;
label7:
v11 = virtualinvoke v0.<jakarta.el.ELContext: java.lang.Object getContext(java.lang.Class)>(class "Ljakarta/el/ExpressionFactory;");
if v11 != null goto label8;
v11 = staticinvoke <jakarta.el.ELManager: jakarta.el.ExpressionFactory getExpressionFactory()>();
label8:
v12 = virtualinvoke v11.<jakarta.el.ExpressionFactory: java.lang.Object coerceToType(java.lang.Object,java.lang.Class)>(v1, v2);
return v12;
catch jakarta.el.ELException from label1 to label2 with label4;
catch java.lang.Exception from label1 to label2 with label5;
catch java.lang.Throwable from label1 to label2 with label6;
}
}