public class jakarta.el.StandardELContext extends jakarta.el.ELContext
{
private jakarta.el.ELResolver elResolver;
private jakarta.el.CompositeELResolver customResolvers;
private jakarta.el.ELResolver streamELResolver;
private jakarta.el.FunctionMapper functionMapper;
private java.util.Map initFunctionMap;
private jakarta.el.VariableMapper variableMapper;
private jakarta.el.ELContext delegate;
private java.util.Map beans;
public void <init>(jakarta.el.ExpressionFactory)
{
jakarta.el.ELResolver v3;
jakarta.el.ExpressionFactory v1;
java.util.Map v4;
jakarta.el.StandardELContext v0;
java.util.HashMap v2;
v0 := @this: jakarta.el.StandardELContext;
v1 := @parameter0: jakarta.el.ExpressionFactory;
specialinvoke v0.<jakarta.el.ELContext: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<jakarta.el.StandardELContext: java.util.Map beans> = v2;
v3 = virtualinvoke v1.<jakarta.el.ExpressionFactory: jakarta.el.ELResolver getStreamELResolver()>();
v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver streamELResolver> = v3;
v4 = virtualinvoke v1.<jakarta.el.ExpressionFactory: java.util.Map getInitFunctionMap()>();
v0.<jakarta.el.StandardELContext: java.util.Map initFunctionMap> = v4;
return;
}
public void <init>(jakarta.el.ELContext)
{
jakarta.el.ELContext v1;
jakarta.el.ELResolver v8;
jakarta.el.VariableMapper v10;
jakarta.el.StandardELContext$LocalBeanNameResolver v5;
jakarta.el.StandardELContext v0;
java.util.HashMap v2;
jakarta.el.CompositeELResolver v3, v6, v7;
jakarta.el.FunctionMapper v9;
java.util.Locale v11;
jakarta.el.BeanNameELResolver v4;
v0 := @this: jakarta.el.StandardELContext;
v1 := @parameter0: jakarta.el.ELContext;
specialinvoke v0.<jakarta.el.ELContext: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<jakarta.el.StandardELContext: java.util.Map beans> = v2;
v0.<jakarta.el.StandardELContext: jakarta.el.ELContext delegate> = v1;
v3 = new jakarta.el.CompositeELResolver;
specialinvoke v3.<jakarta.el.CompositeELResolver: void <init>()>();
v4 = new jakarta.el.BeanNameELResolver;
v5 = new jakarta.el.StandardELContext$LocalBeanNameResolver;
specialinvoke v5.<jakarta.el.StandardELContext$LocalBeanNameResolver: void <init>(jakarta.el.StandardELContext)>(v0);
specialinvoke v4.<jakarta.el.BeanNameELResolver: void <init>(jakarta.el.BeanNameResolver)>(v5);
virtualinvoke v3.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v4);
v6 = new jakarta.el.CompositeELResolver;
specialinvoke v6.<jakarta.el.CompositeELResolver: void <init>()>();
v0.<jakarta.el.StandardELContext: jakarta.el.CompositeELResolver customResolvers> = v6;
v7 = v0.<jakarta.el.StandardELContext: jakarta.el.CompositeELResolver customResolvers>;
virtualinvoke v3.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v7);
v8 = virtualinvoke v1.<jakarta.el.ELContext: jakarta.el.ELResolver getELResolver()>();
virtualinvoke v3.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v8);
v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver elResolver> = v3;
v9 = virtualinvoke v1.<jakarta.el.ELContext: jakarta.el.FunctionMapper getFunctionMapper()>();
v0.<jakarta.el.StandardELContext: jakarta.el.FunctionMapper functionMapper> = v9;
v10 = virtualinvoke v1.<jakarta.el.ELContext: jakarta.el.VariableMapper getVariableMapper()>();
v0.<jakarta.el.StandardELContext: jakarta.el.VariableMapper variableMapper> = v10;
v11 = virtualinvoke v1.<jakarta.el.ELContext: java.util.Locale getLocale()>();
virtualinvoke v0.<jakarta.el.StandardELContext: void setLocale(java.util.Locale)>(v11);
return;
}
public void putContext(java.lang.Class, java.lang.Object)
{
jakarta.el.ELContext v3, v4;
jakarta.el.StandardELContext v0;
java.lang.Class v1;
java.lang.Object v2;
v0 := @this: jakarta.el.StandardELContext;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Object;
v3 = v0.<jakarta.el.StandardELContext: jakarta.el.ELContext delegate>;
if v3 == null goto label1;
v4 = v0.<jakarta.el.StandardELContext: jakarta.el.ELContext delegate>;
virtualinvoke v4.<jakarta.el.ELContext: void putContext(java.lang.Class,java.lang.Object)>(v1, v2);
goto label2;
label1:
specialinvoke v0.<jakarta.el.ELContext: void putContext(java.lang.Class,java.lang.Object)>(v1, v2);
label2:
return;
}
public java.lang.Object getContext(java.lang.Class)
{
jakarta.el.ELContext v2, v4;
jakarta.el.StandardELContext v0;
java.lang.Class v1;
java.lang.Object v3, v5;
v0 := @this: jakarta.el.StandardELContext;
v1 := @parameter0: java.lang.Class;
v2 = v0.<jakarta.el.StandardELContext: jakarta.el.ELContext delegate>;
if v2 != null goto label1;
v3 = specialinvoke v0.<jakarta.el.ELContext: java.lang.Object getContext(java.lang.Class)>(v1);
return v3;
label1:
v4 = v0.<jakarta.el.StandardELContext: jakarta.el.ELContext delegate>;
v5 = virtualinvoke v4.<jakarta.el.ELContext: java.lang.Object getContext(java.lang.Class)>(v1);
return v5;
}
public jakarta.el.ELResolver getELResolver()
{
jakarta.el.ELResolver v1, v15, v7, v8;
jakarta.el.MapELResolver v10;
jakarta.el.StandardELContext v0;
jakarta.el.BeanELResolver v14;
jakarta.el.StaticFieldELResolver v9;
jakarta.el.CompositeELResolver v2, v5, v6;
jakarta.el.BeanNameELResolver v3;
jakarta.el.ListELResolver v12;
jakarta.el.StandardELContext$LocalBeanNameResolver v4;
jakarta.el.ArrayELResolver v13;
jakarta.el.ResourceBundleELResolver v11;
v0 := @this: jakarta.el.StandardELContext;
v1 = v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver elResolver>;
if v1 != null goto label2;
v2 = new jakarta.el.CompositeELResolver;
specialinvoke v2.<jakarta.el.CompositeELResolver: void <init>()>();
v3 = new jakarta.el.BeanNameELResolver;
v4 = new jakarta.el.StandardELContext$LocalBeanNameResolver;
specialinvoke v4.<jakarta.el.StandardELContext$LocalBeanNameResolver: void <init>(jakarta.el.StandardELContext)>(v0);
specialinvoke v3.<jakarta.el.BeanNameELResolver: void <init>(jakarta.el.BeanNameResolver)>(v4);
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v3);
v5 = new jakarta.el.CompositeELResolver;
specialinvoke v5.<jakarta.el.CompositeELResolver: void <init>()>();
v0.<jakarta.el.StandardELContext: jakarta.el.CompositeELResolver customResolvers> = v5;
v6 = v0.<jakarta.el.StandardELContext: jakarta.el.CompositeELResolver customResolvers>;
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v6);
v7 = v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver streamELResolver>;
if v7 == null goto label1;
v8 = v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver streamELResolver>;
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v8);
label1:
v9 = new jakarta.el.StaticFieldELResolver;
specialinvoke v9.<jakarta.el.StaticFieldELResolver: void <init>()>();
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v9);
v10 = new jakarta.el.MapELResolver;
specialinvoke v10.<jakarta.el.MapELResolver: void <init>()>();
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v10);
v11 = new jakarta.el.ResourceBundleELResolver;
specialinvoke v11.<jakarta.el.ResourceBundleELResolver: void <init>()>();
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v11);
v12 = new jakarta.el.ListELResolver;
specialinvoke v12.<jakarta.el.ListELResolver: void <init>()>();
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v12);
v13 = new jakarta.el.ArrayELResolver;
specialinvoke v13.<jakarta.el.ArrayELResolver: void <init>()>();
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v13);
v14 = new jakarta.el.BeanELResolver;
specialinvoke v14.<jakarta.el.BeanELResolver: void <init>()>();
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v14);
v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver elResolver> = v2;
label2:
v15 = v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver elResolver>;
return v15;
}
public void addELResolver(jakarta.el.ELResolver)
{
jakarta.el.StandardELContext v0;
jakarta.el.ELResolver v1;
jakarta.el.CompositeELResolver v2;
v0 := @this: jakarta.el.StandardELContext;
v1 := @parameter0: jakarta.el.ELResolver;
virtualinvoke v0.<jakarta.el.StandardELContext: jakarta.el.ELResolver getELResolver()>();
v2 = v0.<jakarta.el.StandardELContext: jakarta.el.CompositeELResolver customResolvers>;
virtualinvoke v2.<jakarta.el.CompositeELResolver: void add(jakarta.el.ELResolver)>(v1);
return;
}
java.util.Map getBeans()
{
jakarta.el.StandardELContext v0;
java.util.Map v1;
v0 := @this: jakarta.el.StandardELContext;
v1 = v0.<jakarta.el.StandardELContext: java.util.Map beans>;
return v1;
}
public jakarta.el.FunctionMapper getFunctionMapper()
{
jakarta.el.StandardELContext$DefaultFunctionMapper v2;
jakarta.el.FunctionMapper v1, v4;
java.util.Map v3;
jakarta.el.StandardELContext v0;
v0 := @this: jakarta.el.StandardELContext;
v1 = v0.<jakarta.el.StandardELContext: jakarta.el.FunctionMapper functionMapper>;
if v1 != null goto label1;
v2 = new jakarta.el.StandardELContext$DefaultFunctionMapper;
v3 = v0.<jakarta.el.StandardELContext: java.util.Map initFunctionMap>;
specialinvoke v2.<jakarta.el.StandardELContext$DefaultFunctionMapper: void <init>(java.util.Map)>(v3);
v0.<jakarta.el.StandardELContext: jakarta.el.FunctionMapper functionMapper> = v2;
label1:
v4 = v0.<jakarta.el.StandardELContext: jakarta.el.FunctionMapper functionMapper>;
return v4;
}
public jakarta.el.VariableMapper getVariableMapper()
{
jakarta.el.VariableMapper v1, v3;
jakarta.el.StandardELContext$DefaultVariableMapper v2;
jakarta.el.StandardELContext v0;
v0 := @this: jakarta.el.StandardELContext;
v1 = v0.<jakarta.el.StandardELContext: jakarta.el.VariableMapper variableMapper>;
if v1 != null goto label1;
v2 = new jakarta.el.StandardELContext$DefaultVariableMapper;
specialinvoke v2.<jakarta.el.StandardELContext$DefaultVariableMapper: void <init>()>();
v0.<jakarta.el.StandardELContext: jakarta.el.VariableMapper variableMapper> = v2;
label1:
v3 = v0.<jakarta.el.StandardELContext: jakarta.el.VariableMapper variableMapper>;
return v3;
}
}