public interface  jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder extends java.lang.Object
{
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder declaringClass(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder declaringClass(jakarta.enterprise.lang.model.declarations.ClassInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder qualifier(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder qualifier(jakarta.enterprise.lang.model.AnnotationInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder qualifier(java.lang.'annotation'.Annotation);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder priority(int);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder async(boolean);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder transactionPhase(jakarta.enterprise.event.TransactionPhase);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, boolean);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, boolean[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, int);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, int[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, long);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, long[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, double);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, double[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.String);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.String[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.Enum);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.Enum[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.Class[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.AnnotationInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.'annotation'.Annotation);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.AnnotationInfo[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder withParam(java.lang.String, java.lang.'annotation'.Annotation[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder observeWith(java.lang.Class);
}