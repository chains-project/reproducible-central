public interface  jakarta.enterprise.inject.spi.ObserverMethod extends java.lang.Object implements jakarta.enterprise.inject.spi.Prioritized
{
public static final int DEFAULT_PRIORITY;
public abstract java.lang.Class getBeanClass();
public jakarta.enterprise.inject.spi.Bean getDeclaringBean()
{
jakarta.enterprise.inject.spi.ObserverMethod v0;
v0 := @this: jakarta.enterprise.inject.spi.ObserverMethod;
return null;
}
public abstract java.lang.reflect.Type getObservedType();
public abstract java.util.Set getObservedQualifiers();
public abstract jakarta.enterprise.event.Reception getReception();
public abstract jakarta.enterprise.event.TransactionPhase getTransactionPhase();
public int getPriority()
{
jakarta.enterprise.inject.spi.ObserverMethod v0;
v0 := @this: jakarta.enterprise.inject.spi.ObserverMethod;
return 2500;
}
public void notify(java.lang.Object)
{
jakarta.enterprise.inject.spi.ObserverMethod v0;
java.lang.Object v1;
v0 := @this: jakarta.enterprise.inject.spi.ObserverMethod;
v1 := @parameter0: java.lang.Object;
return;
}
public void notify(jakarta.enterprise.inject.spi.EventContext)
{
jakarta.enterprise.inject.spi.ObserverMethod v0;
java.lang.Object v2;
jakarta.enterprise.inject.spi.EventContext v1;
v0 := @this: jakarta.enterprise.inject.spi.ObserverMethod;
v1 := @parameter0: jakarta.enterprise.inject.spi.EventContext;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.EventContext: java.lang.Object getEvent()>();
interfaceinvoke v0.<jakarta.enterprise.inject.spi.ObserverMethod: void notify(java.lang.Object)>(v2);
return;
}
public boolean isAsync()
{
jakarta.enterprise.inject.spi.ObserverMethod v0;
v0 := @this: jakarta.enterprise.inject.spi.ObserverMethod;
return 0;
}
}