public interface  jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator extends java.lang.Object
{
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addType(java.lang.reflect.Type);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addType(jakarta.enterprise.util.TypeLiteral);
public abstract transient jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addTypes(java.lang.reflect.Type[]);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addTypes(java.util.Set);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addTransitiveTypeClosure(java.lang.reflect.Type);
public abstract transient jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator types(java.lang.reflect.Type[]);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator types(java.util.Set);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator scope(java.lang.Class);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addQualifier(java.lang.'annotation'.Annotation);
public abstract transient jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addQualifiers(java.lang.'annotation'.Annotation[]);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addQualifiers(java.util.Set);
public abstract transient jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator qualifiers(java.lang.'annotation'.Annotation[]);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator qualifiers(java.util.Set);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addStereotype(java.lang.Class);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator addStereotypes(java.util.Set);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator stereotypes(java.util.Set);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator name(java.lang.String);
public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator alternative(boolean);
}