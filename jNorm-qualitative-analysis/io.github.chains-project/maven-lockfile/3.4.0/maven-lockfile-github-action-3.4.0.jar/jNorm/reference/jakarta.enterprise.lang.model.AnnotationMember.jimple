public interface  jakarta.enterprise.lang.model.AnnotationMember extends java.lang.Object
{
public static final java.lang.String VALUE;
public abstract jakarta.enterprise.lang.model.AnnotationMember$Kind kind();
public boolean isBoolean()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind BOOLEAN>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isByte()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind BYTE>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isShort()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind SHORT>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isInt()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind INT>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isLong()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind LONG>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isFloat()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind FLOAT>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isDouble()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind DOUBLE>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isChar()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind CHAR>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isString()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind STRING>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isEnum()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind ENUM>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isClass()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind CLASS>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isNestedAnnotation()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind NESTED_ANNOTATION>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isArray()
{
jakarta.enterprise.lang.model.AnnotationMember$Kind v1, v2;
jakarta.enterprise.lang.model.AnnotationMember v0;
boolean v3;
v0 := @this: jakarta.enterprise.lang.model.AnnotationMember;
v1 = interfaceinvoke v0.<jakarta.enterprise.lang.model.AnnotationMember: jakarta.enterprise.lang.model.AnnotationMember$Kind kind()>();
v2 = <jakarta.enterprise.lang.model.AnnotationMember$Kind: jakarta.enterprise.lang.model.AnnotationMember$Kind ARRAY>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public abstract boolean asBoolean();
public abstract byte asByte();
public abstract short asShort();
public abstract int asInt();
public abstract long asLong();
public abstract float asFloat();
public abstract double asDouble();
public abstract char asChar();
public abstract java.lang.String asString();
public abstract java.lang.Enum asEnum(java.lang.Class);
public abstract jakarta.enterprise.lang.model.declarations.ClassInfo asEnumClass();
public abstract java.lang.String asEnumConstant();
public abstract jakarta.enterprise.lang.model.types.Type asType();
public abstract jakarta.enterprise.lang.model.AnnotationInfo asNestedAnnotation();
public abstract java.util.List asArray();
}