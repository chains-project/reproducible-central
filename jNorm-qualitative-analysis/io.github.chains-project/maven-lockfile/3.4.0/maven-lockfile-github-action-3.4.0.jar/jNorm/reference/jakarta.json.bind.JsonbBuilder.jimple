public interface  jakarta.json.bind.JsonbBuilder extends java.lang.Object
{
public abstract jakarta.json.bind.JsonbBuilder withConfig(jakarta.json.bind.JsonbConfig);
public abstract jakarta.json.bind.JsonbBuilder withProvider(jakarta.json.spi.JsonProvider);
public abstract jakarta.json.bind.Jsonb build();
public static jakarta.json.bind.Jsonb create()
{
jakarta.json.bind.JsonbBuilder v1;
jakarta.json.bind.Jsonb v2;
jakarta.json.bind.spi.JsonbProvider v0;
v0 = staticinvoke <jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.spi.JsonbProvider provider()>();
v1 = virtualinvoke v0.<jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.JsonbBuilder create()>();
v2 = interfaceinvoke v1.<jakarta.json.bind.JsonbBuilder: jakarta.json.bind.Jsonb build()>();
return v2;
}
public static jakarta.json.bind.Jsonb create(jakarta.json.bind.JsonbConfig)
{
jakarta.json.bind.JsonbBuilder v2, v3;
jakarta.json.bind.JsonbConfig v0;
jakarta.json.bind.Jsonb v4;
jakarta.json.bind.spi.JsonbProvider v1;
v0 := @parameter0: jakarta.json.bind.JsonbConfig;
v1 = staticinvoke <jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.spi.JsonbProvider provider()>();
v2 = virtualinvoke v1.<jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.JsonbBuilder create()>();
v3 = interfaceinvoke v2.<jakarta.json.bind.JsonbBuilder: jakarta.json.bind.JsonbBuilder withConfig(jakarta.json.bind.JsonbConfig)>(v0);
v4 = interfaceinvoke v3.<jakarta.json.bind.JsonbBuilder: jakarta.json.bind.Jsonb build()>();
return v4;
}
public static jakarta.json.bind.JsonbBuilder newBuilder()
{
jakarta.json.bind.JsonbBuilder v1;
jakarta.json.bind.spi.JsonbProvider v0;
v0 = staticinvoke <jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.spi.JsonbProvider provider()>();
v1 = virtualinvoke v0.<jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.JsonbBuilder create()>();
return v1;
}
public static jakarta.json.bind.JsonbBuilder newBuilder(java.lang.String)
{
jakarta.json.bind.JsonbBuilder v2;
jakarta.json.bind.spi.JsonbProvider v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.spi.JsonbProvider provider(java.lang.String)>(v0);
v2 = virtualinvoke v1.<jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.JsonbBuilder create()>();
return v2;
}
public static jakarta.json.bind.JsonbBuilder newBuilder(jakarta.json.bind.spi.JsonbProvider)
{
jakarta.json.bind.JsonbBuilder v1;
jakarta.json.bind.spi.JsonbProvider v0;
v0 := @parameter0: jakarta.json.bind.spi.JsonbProvider;
v1 = virtualinvoke v0.<jakarta.json.bind.spi.JsonbProvider: jakarta.json.bind.JsonbBuilder create()>();
return v1;
}
}