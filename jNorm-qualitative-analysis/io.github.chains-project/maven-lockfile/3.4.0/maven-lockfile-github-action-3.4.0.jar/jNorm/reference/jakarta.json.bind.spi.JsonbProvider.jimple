public abstract class jakarta.json.bind.spi.JsonbProvider extends java.lang.Object
{
private static final java.lang.String DEFAULT_PROVIDER;
protected void <init>()
{
jakarta.json.bind.spi.JsonbProvider v0;
v0 := @this: jakarta.json.bind.spi.JsonbProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static jakarta.json.bind.spi.JsonbProvider provider()
{
java.util.Iterator v1;
java.util.ServiceLoader v0;
java.lang.Exception v8;
jakarta.json.bind.JsonbException v7, v9;
java.lang.Class v4;
java.lang.ClassNotFoundException v6;
java.lang.Object v3, v5;
java.lang.String v10;
boolean v2;
v0 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(class "Ljakarta/json/bind/spi/JsonbProvider;");
v1 = virtualinvoke v0.<java.util.ServiceLoader: java.util.Iterator iterator()>();
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
return v3;
label1:
v4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.eclipse.yasson.JsonBindingProvider");
v5 = virtualinvoke v4.<java.lang.Class: java.lang.Object newInstance()>();
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = new jakarta.json.bind.JsonbException;
specialinvoke v7.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>("JSON Binding provider org.eclipse.yasson.JsonBindingProvider not found", v6);
throw v7;
label4:
v8 := @caughtexception;
v9 = new jakarta.json.bind.JsonbException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Exception)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("JSON Binding provider org.eclipse.yasson.JsonBindingProvider could not be instantiated: \u0001");
specialinvoke v9.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v10, v8);
throw v9;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.Exception from label1 to label2 with label4;
}
public static jakarta.json.bind.spi.JsonbProvider provider(java.lang.String)
{
java.util.Iterator v3;
java.util.ServiceLoader v2;
java.lang.IllegalArgumentException v1;
jakarta.json.bind.JsonbException v9;
java.lang.Class v6;
java.lang.ClassNotFoundException v11;
java.lang.Object v5;
java.lang.String v0, v10, v7;
boolean v4, v8;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
v1 = new java.lang.IllegalArgumentException;
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>()>();
throw v1;
label1:
v2 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(class "Ljakarta/json/bind/spi/JsonbProvider;");
v3 = virtualinvoke v2.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label2:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label2;
return v5;
label3:
v9 = new jakarta.json.bind.JsonbException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("JSON Binding provider \u0001 not found");
v11 = new java.lang.ClassNotFoundException;
specialinvoke v11.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(v0);
specialinvoke v9.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v10, v11);
throw v9;
}
public abstract jakarta.json.bind.JsonbBuilder create();
}