public final enum class jakarta.transaction.Transactional$TxType extends java.lang.Enum
{
public static final enum jakarta.transaction.Transactional$TxType REQUIRED;
public static final enum jakarta.transaction.Transactional$TxType REQUIRES_NEW;
public static final enum jakarta.transaction.Transactional$TxType MANDATORY;
public static final enum jakarta.transaction.Transactional$TxType SUPPORTS;
public static final enum jakarta.transaction.Transactional$TxType NOT_SUPPORTED;
public static final enum jakarta.transaction.Transactional$TxType NEVER;
private static final jakarta.transaction.Transactional$TxType[] $VALUES;
public static jakarta.transaction.Transactional$TxType[] values()
{
java.lang.Object v1;
jakarta.transaction.Transactional$TxType[] v0;
v0 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static jakarta.transaction.Transactional$TxType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljakarta/transaction/Transactional$TxType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
jakarta.transaction.Transactional$TxType v0;
java.lang.String v1;
v0 := @this: jakarta.transaction.Transactional$TxType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static jakarta.transaction.Transactional$TxType[] $values()
{
jakarta.transaction.Transactional$TxType v1, v2, v3, v4, v5, v6;
jakarta.transaction.Transactional$TxType[] v0;
v0 = newarray (jakarta.transaction.Transactional$TxType)[6];
v1 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType REQUIRED>;
v0[0] = v1;
v2 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType REQUIRES_NEW>;
v0[1] = v2;
v3 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType MANDATORY>;
v0[2] = v3;
v4 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType SUPPORTS>;
v0[3] = v4;
v5 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType NOT_SUPPORTED>;
v0[4] = v5;
v6 = <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType NEVER>;
v0[5] = v6;
return v0;
}
static void <clinit>()
{
jakarta.transaction.Transactional$TxType v0, v1, v2, v3, v4, v5;
jakarta.transaction.Transactional$TxType[] v6;
v0 = new jakarta.transaction.Transactional$TxType;
specialinvoke v0.<jakarta.transaction.Transactional$TxType: void <init>(java.lang.String,int)>("REQUIRED", 0);
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType REQUIRED> = v0;
v1 = new jakarta.transaction.Transactional$TxType;
specialinvoke v1.<jakarta.transaction.Transactional$TxType: void <init>(java.lang.String,int)>("REQUIRES_NEW", 1);
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType REQUIRES_NEW> = v1;
v2 = new jakarta.transaction.Transactional$TxType;
specialinvoke v2.<jakarta.transaction.Transactional$TxType: void <init>(java.lang.String,int)>("MANDATORY", 2);
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType MANDATORY> = v2;
v3 = new jakarta.transaction.Transactional$TxType;
specialinvoke v3.<jakarta.transaction.Transactional$TxType: void <init>(java.lang.String,int)>("SUPPORTS", 3);
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType SUPPORTS> = v3;
v4 = new jakarta.transaction.Transactional$TxType;
specialinvoke v4.<jakarta.transaction.Transactional$TxType: void <init>(java.lang.String,int)>("NOT_SUPPORTED", 4);
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType NOT_SUPPORTED> = v4;
v5 = new jakarta.transaction.Transactional$TxType;
specialinvoke v5.<jakarta.transaction.Transactional$TxType: void <init>(java.lang.String,int)>("NEVER", 5);
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType NEVER> = v5;
v6 = staticinvoke <jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType[] $values()>();
<jakarta.transaction.Transactional$TxType: jakarta.transaction.Transactional$TxType[] $VALUES> = v6;
return;
}
}