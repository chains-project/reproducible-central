public class org.apache.commons.io.comparator.CompositeFileComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
{
private static final java.util.Comparator[] EMPTY_COMPARATOR_ARRAY;
private static final long serialVersionUID;
private static final java.util.Comparator[] NO_COMPARATORS;
private final java.util.Comparator[] delegates;
public transient void <init>(java.util.Comparator[])
{
int v3, v6;
org.apache.commons.io.comparator.CompositeFileComparator v0;
java.util.Comparator[] v1, v2, v4, v5;
v0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;
v1 := @parameter0: java.util.Comparator[];
specialinvoke v0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();
if v1 != null goto label1;
v2 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;
v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = v2;
goto label2;
label1:
v3 = lengthof v1;
v4 = newarray (java.util.Comparator)[v3];
v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = v4;
v5 = v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;
v6 = lengthof v1;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, 0, v5, 0, v6);
label2:
return;
}
public void <init>(java.lang.Iterable)
{
java.lang.Object[] v8;
java.util.Iterator v4;
org.apache.commons.io.comparator.CompositeFileComparator v0;
java.lang.Iterable v1;
java.util.ArrayList v3;
java.util.Comparator[] v2, v7;
java.lang.Object v6;
boolean v5;
v0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;
v1 := @parameter0: java.lang.Iterable;
specialinvoke v0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();
if v1 != null goto label1;
v2 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;
v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = v2;
goto label4;
label1:
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label2:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label2;
label3:
v7 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] EMPTY_COMPARATOR_ARRAY>;
v8 = interfaceinvoke v3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v7);
v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = v8;
label4:
return;
}
public int compare(java.io.File, java.io.File)
{
org.apache.commons.io.comparator.CompositeFileComparator v0;
java.io.File v1, v2;
java.util.Comparator[] v4;
int v3, v5, v6;
java.util.Comparator v7;
v0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 = 0;
v4 = v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
v3 = interfaceinvoke v7.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v1, v2);
if v3 != 0 goto label2;
v6 = v6 + 1;
goto label1;
label2:
return v3;
}
public java.lang.String toString()
{
org.apache.commons.io.comparator.CompositeFileComparator v0;
java.util.Comparator[] v4, v6;
int v3, v5;
java.lang.StringBuilder v1;
java.lang.String v2, v8;
java.util.Comparator v7;
v0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = specialinvoke v0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);
v3 = 0;
label1:
v4 = v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;
v5 = lengthof v4;
if v3 >= v5 goto label3;
if v3 <= 0 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
label2:
v6 = v0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;
v7 = v6[v3];
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v7);
v3 = v3 + 1;
goto label1;
label3:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
v8 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v8;
}
static void <clinit>()
{
java.util.Comparator[] v0, v1;
v0 = newarray (java.util.Comparator)[0];
<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] EMPTY_COMPARATOR_ARRAY> = v0;
v1 = newarray (java.util.Comparator)[0];
<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS> = v1;
return;
}
}