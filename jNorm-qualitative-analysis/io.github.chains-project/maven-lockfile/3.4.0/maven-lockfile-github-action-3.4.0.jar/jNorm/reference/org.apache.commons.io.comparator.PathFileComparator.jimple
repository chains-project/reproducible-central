public class org.apache.commons.io.comparator.PathFileComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
{
private static final long serialVersionUID;
public static final java.util.Comparator PATH_COMPARATOR;
public static final java.util.Comparator PATH_REVERSE;
public static final java.util.Comparator PATH_INSENSITIVE_COMPARATOR;
public static final java.util.Comparator PATH_INSENSITIVE_REVERSE;
public static final java.util.Comparator PATH_SYSTEM_COMPARATOR;
public static final java.util.Comparator PATH_SYSTEM_REVERSE;
private final org.apache.commons.io.IOCase caseSensitivity;
public void <init>()
{
org.apache.commons.io.IOCase v1;
org.apache.commons.io.comparator.PathFileComparator v0;
v0 := @this: org.apache.commons.io.comparator.PathFileComparator;
specialinvoke v0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();
v1 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
v0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity> = v1;
return;
}
public void <init>(org.apache.commons.io.IOCase)
{
org.apache.commons.io.IOCase v1, v2;
org.apache.commons.io.comparator.PathFileComparator v0;
v0 := @this: org.apache.commons.io.comparator.PathFileComparator;
v1 := @parameter0: org.apache.commons.io.IOCase;
specialinvoke v0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();
if v1 != null goto label1;
v2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
goto label2;
label1:
v2 = v1;
label2:
v0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity> = v2;
return;
}
public int compare(java.io.File, java.io.File)
{
org.apache.commons.io.IOCase v3;
int v6;
java.lang.String v4, v5;
java.io.File v1, v2;
org.apache.commons.io.comparator.PathFileComparator v0;
v0 := @this: org.apache.commons.io.comparator.PathFileComparator;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 = v0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity>;
v4 = virtualinvoke v1.<java.io.File: java.lang.String getPath()>();
v5 = virtualinvoke v2.<java.io.File: java.lang.String getPath()>();
v6 = virtualinvoke v3.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>(v4, v5);
return v6;
}
public java.lang.String toString()
{
org.apache.commons.io.IOCase v2;
java.lang.String v1, v3;
org.apache.commons.io.comparator.PathFileComparator v0;
v0 := @this: org.apache.commons.io.comparator.PathFileComparator;
v1 = specialinvoke v0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();
v2 = v0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.apache.commons.io.IOCase)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[caseSensitivity=\u0001]");
return v3;
}
static void <clinit>()
{
org.apache.commons.io.IOCase v4, v8;
org.apache.commons.io.comparator.ReverseFileComparator v1, v5, v9;
org.apache.commons.io.comparator.PathFileComparator v0, v3, v7;
java.util.Comparator v10, v2, v6;
v0 = new org.apache.commons.io.comparator.PathFileComparator;
specialinvoke v0.<org.apache.commons.io.comparator.PathFileComparator: void <init>()>();
<org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_COMPARATOR> = v0;
v1 = new org.apache.commons.io.comparator.ReverseFileComparator;
v2 = <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_COMPARATOR>;
specialinvoke v1.<org.apache.commons.io.comparator.ReverseFileComparator: void <init>(java.util.Comparator)>(v2);
<org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_REVERSE> = v1;
v3 = new org.apache.commons.io.comparator.PathFileComparator;
v4 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;
specialinvoke v3.<org.apache.commons.io.comparator.PathFileComparator: void <init>(org.apache.commons.io.IOCase)>(v4);
<org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_INSENSITIVE_COMPARATOR> = v3;
v5 = new org.apache.commons.io.comparator.ReverseFileComparator;
v6 = <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_INSENSITIVE_COMPARATOR>;
specialinvoke v5.<org.apache.commons.io.comparator.ReverseFileComparator: void <init>(java.util.Comparator)>(v6);
<org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_INSENSITIVE_REVERSE> = v5;
v7 = new org.apache.commons.io.comparator.PathFileComparator;
v8 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;
specialinvoke v7.<org.apache.commons.io.comparator.PathFileComparator: void <init>(org.apache.commons.io.IOCase)>(v8);
<org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_SYSTEM_COMPARATOR> = v7;
v9 = new org.apache.commons.io.comparator.ReverseFileComparator;
v10 = <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_SYSTEM_COMPARATOR>;
specialinvoke v9.<org.apache.commons.io.comparator.ReverseFileComparator: void <init>(java.util.Comparator)>(v10);
<org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_SYSTEM_REVERSE> = v9;
return;
}
}