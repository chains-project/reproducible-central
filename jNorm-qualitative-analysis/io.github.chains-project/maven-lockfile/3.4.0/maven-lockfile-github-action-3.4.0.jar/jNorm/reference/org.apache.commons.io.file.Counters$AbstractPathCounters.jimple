class org.apache.commons.io.file.Counters$AbstractPathCounters extends java.lang.Object implements org.apache.commons.io.file.Counters$PathCounters
{
private final org.apache.commons.io.file.Counters$Counter byteCounter;
private final org.apache.commons.io.file.Counters$Counter directoryCounter;
private final org.apache.commons.io.file.Counters$Counter fileCounter;
protected void <init>(org.apache.commons.io.file.Counters$Counter, org.apache.commons.io.file.Counters$Counter, org.apache.commons.io.file.Counters$Counter)
{
org.apache.commons.io.file.Counters$Counter v1, v2, v3;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 := @parameter0: org.apache.commons.io.file.Counters$Counter;
v2 := @parameter1: org.apache.commons.io.file.Counters$Counter;
v3 := @parameter2: org.apache.commons.io.file.Counters$Counter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter> = v1;
v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter> = v2;
v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter> = v3;
return;
}
public boolean equals(java.lang.Object)
{
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
org.apache.commons.io.file.Counters$Counter v10, v3, v4, v6, v7, v9;
java.lang.Object v1;
boolean v11, v12, v2, v5, v8;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof org.apache.commons.io.file.Counters$AbstractPathCounters;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter>;
v4 = v1.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter>;
v5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v3, v4);
if v5 == 0 goto label3;
v6 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter>;
v7 = v1.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter>;
v8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v6, v7);
if v8 == 0 goto label3;
v9 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter>;
v10 = v1.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter>;
v11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v9, v10);
if v11 == 0 goto label3;
v12 = 1;
goto label4;
label3:
v12 = 0;
label4:
return v12;
}
public org.apache.commons.io.file.Counters$Counter getByteCounter()
{
org.apache.commons.io.file.Counters$Counter v1;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter>;
return v1;
}
public org.apache.commons.io.file.Counters$Counter getDirectoryCounter()
{
org.apache.commons.io.file.Counters$Counter v1;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter>;
return v1;
}
public org.apache.commons.io.file.Counters$Counter getFileCounter()
{
org.apache.commons.io.file.Counters$Counter v1;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter>;
return v1;
}
public int hashCode()
{
org.apache.commons.io.file.Counters$Counter v2, v3, v4;
java.lang.Object[] v1;
int v5;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 = newarray (java.lang.Object)[3];
v2 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter>;
v1[0] = v2;
v3 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter>;
v1[1] = v3;
v4 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter>;
v1[2] = v4;
v5 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v5;
}
public void reset()
{
org.apache.commons.io.file.Counters$Counter v1, v2, v3;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter>;
interfaceinvoke v1.<org.apache.commons.io.file.Counters$Counter: void reset()>();
v2 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter>;
interfaceinvoke v2.<org.apache.commons.io.file.Counters$Counter: void reset()>();
v3 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter>;
interfaceinvoke v3.<org.apache.commons.io.file.Counters$Counter: void reset()>();
return;
}
public java.lang.String toString()
{
java.lang.Object[] v1;
long v3, v6, v9;
org.apache.commons.io.file.Counters$AbstractPathCounters v0;
org.apache.commons.io.file.Counters$Counter v2, v5, v8;
java.lang.Long v10, v4, v7;
java.lang.String v11;
v0 := @this: org.apache.commons.io.file.Counters$AbstractPathCounters;
v1 = newarray (java.lang.Object)[3];
v2 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter fileCounter>;
v3 = interfaceinvoke v2.<org.apache.commons.io.file.Counters$Counter: long get()>();
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
v1[0] = v4;
v5 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter directoryCounter>;
v6 = interfaceinvoke v5.<org.apache.commons.io.file.Counters$Counter: long get()>();
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v6);
v1[1] = v7;
v8 = v0.<org.apache.commons.io.file.Counters$AbstractPathCounters: org.apache.commons.io.file.Counters$Counter byteCounter>;
v9 = interfaceinvoke v8.<org.apache.commons.io.file.Counters$Counter: long get()>();
v10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v9);
v1[2] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%,d files, %,d directories, %,d bytes", v1);
return v11;
}
}