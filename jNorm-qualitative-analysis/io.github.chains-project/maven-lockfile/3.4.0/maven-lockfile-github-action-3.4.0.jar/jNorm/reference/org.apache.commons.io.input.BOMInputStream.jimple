public class org.apache.commons.io.input.BOMInputStream extends org.apache.commons.io.input.ProxyInputStream
{
private final boolean include;
private final java.util.List boms;
private org.apache.commons.io.ByteOrderMark byteOrderMark;
private int[] firstBytes;
private int fbLength;
private int fbIndex;
private int markFbIndex;
private boolean markedAtStart;
private static final java.util.Comparator ByteOrderMarkLengthComparator;
public void <init>(java.io.InputStream)
{
org.apache.commons.io.ByteOrderMark[] v2;
org.apache.commons.io.input.BOMInputStream v0;
org.apache.commons.io.ByteOrderMark v3;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: java.io.InputStream;
v2 = newarray (org.apache.commons.io.ByteOrderMark)[1];
v3 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;
v2[0] = v3;
specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(v1, 0, v2);
return;
}
public void <init>(java.io.InputStream, boolean)
{
org.apache.commons.io.ByteOrderMark[] v3;
org.apache.commons.io.input.BOMInputStream v0;
org.apache.commons.io.ByteOrderMark v4;
boolean v2;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: boolean;
v3 = newarray (org.apache.commons.io.ByteOrderMark)[1];
v4 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;
v3[0] = v4;
specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(v1, v2, v3);
return;
}
public transient void <init>(java.io.InputStream, org.apache.commons.io.ByteOrderMark[])
{
org.apache.commons.io.input.BOMInputStream v0;
org.apache.commons.io.ByteOrderMark[] v2;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: org.apache.commons.io.ByteOrderMark[];
specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(v1, 0, v2);
return;
}
public transient void <init>(java.io.InputStream, boolean, org.apache.commons.io.ByteOrderMark[])
{
java.lang.IllegalArgumentException v5;
java.util.List v6;
org.apache.commons.io.ByteOrderMark[] v3;
int v4;
org.apache.commons.io.input.BOMInputStream v0;
java.util.Comparator v7;
boolean v2;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: boolean;
v3 := @parameter2: org.apache.commons.io.ByteOrderMark[];
specialinvoke v0.<org.apache.commons.io.input.ProxyInputStream: void <init>(java.io.InputStream)>(v1);
v4 = staticinvoke <org.apache.commons.io.IOUtils: int length(java.lang.Object[])>(v3);
if v4 != 0 goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No BOMs specified");
throw v5;
label1:
v0.<org.apache.commons.io.input.BOMInputStream: boolean include> = v2;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
v7 = <org.apache.commons.io.input.BOMInputStream: java.util.Comparator ByteOrderMarkLengthComparator>;
interfaceinvoke v6.<java.util.List: void sort(java.util.Comparator)>(v7);
v0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms> = v6;
return;
}
public boolean hasBOM() throws java.io.IOException
{
org.apache.commons.io.input.BOMInputStream v0;
org.apache.commons.io.ByteOrderMark v1;
boolean v2;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 = virtualinvoke v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasBOM(org.apache.commons.io.ByteOrderMark) throws java.io.IOException
{
org.apache.commons.io.ByteOrderMark v1, v6, v7;
java.lang.IllegalArgumentException v4;
java.util.List v2;
org.apache.commons.io.input.BOMInputStream v0;
java.lang.String v5;
boolean v3, v8, v9;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: org.apache.commons.io.ByteOrderMark;
v2 = v0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;
v3 = interfaceinvoke v2.<java.util.List: boolean contains(java.lang.Object)>(v1);
if v3 != 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.apache.commons.io.ByteOrderMark)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Stream not configure to detect \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
virtualinvoke v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();
v6 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
if v6 == null goto label2;
v7 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
v8 = virtualinvoke v7.<org.apache.commons.io.ByteOrderMark: boolean equals(java.lang.Object)>(v1);
if v8 == 0 goto label2;
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
}
public org.apache.commons.io.ByteOrderMark getBOM() throws java.io.IOException
{
int[] v1, v14, v21, v5, v7, v9;
int v11, v12, v13, v15, v20, v22, v24, v4, v6, v8;
org.apache.commons.io.input.BOMInputStream v0;
boolean v18;
org.apache.commons.io.ByteOrderMark v16, v17, v19, v23, v25;
java.util.List v2;
java.lang.Object v3;
java.io.InputStream v10;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
if v1 != null goto label4;
v0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = 0;
v2 = v0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(0);
v4 = virtualinvoke v3.<org.apache.commons.io.ByteOrderMark: int length()>();
v5 = newarray (int)[v4];
v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes> = v5;
v6 = 0;
label1:
v7 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
v8 = lengthof v7;
if v6 >= v8 goto label2;
v9 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
v10 = v0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;
v11 = virtualinvoke v10.<java.io.InputStream: int read()>();
v9[v6] = v11;
v12 = v0.<org.apache.commons.io.input.BOMInputStream: int fbLength>;
v13 = v12 + 1;
v0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = v13;
v14 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
v15 = v14[v6];
if v15 < 0 goto label2;
v6 = v6 + 1;
goto label1;
label2:
v16 = specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark find()>();
v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark> = v16;
v17 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
if v17 == null goto label4;
v18 = v0.<org.apache.commons.io.input.BOMInputStream: boolean include>;
if v18 != 0 goto label4;
v19 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
v20 = virtualinvoke v19.<org.apache.commons.io.ByteOrderMark: int length()>();
v21 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
v22 = lengthof v21;
if v20 >= v22 goto label3;
v23 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
v24 = virtualinvoke v23.<org.apache.commons.io.ByteOrderMark: int length()>();
v0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = v24;
goto label4;
label3:
v0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = 0;
label4:
v25 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
return v25;
}
public java.lang.String getBOMCharsetName() throws java.io.IOException
{
org.apache.commons.io.input.BOMInputStream v0;
org.apache.commons.io.ByteOrderMark v1, v3;
java.lang.String v2;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
virtualinvoke v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();
v1 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v3 = v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;
v2 = virtualinvoke v3.<org.apache.commons.io.ByteOrderMark: java.lang.String getCharsetName()>();
label2:
return v2;
}
private int readFirstBytes() throws java.io.IOException
{
int[] v3;
int v1, v2, v4, v5, v6, v7;
org.apache.commons.io.input.BOMInputStream v0;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
virtualinvoke v0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();
v1 = v0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;
v2 = v0.<org.apache.commons.io.input.BOMInputStream: int fbLength>;
if v1 >= v2 goto label1;
v3 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
v4 = v0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;
v5 = v4 + 1;
v0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = v5;
v6 = v3[v4];
goto label2;
label1:
v7 = (int) -1;
v6 = v7;
label2:
return v6;
}
private org.apache.commons.io.ByteOrderMark find()
{
java.util.List v1;
java.util.Iterator v2;
org.apache.commons.io.input.BOMInputStream v0;
java.lang.Object v4;
boolean v3, v5;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 = v0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: boolean matches(org.apache.commons.io.ByteOrderMark)>(v4);
if v5 == 0 goto label1;
return v4;
label2:
return null;
}
private boolean matches(org.apache.commons.io.ByteOrderMark)
{
int[] v5;
int v2, v3, v4, v6;
org.apache.commons.io.input.BOMInputStream v0;
org.apache.commons.io.ByteOrderMark v1;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: org.apache.commons.io.ByteOrderMark;
v2 = 0;
label1:
v3 = virtualinvoke v1.<org.apache.commons.io.ByteOrderMark: int length()>();
if v2 >= v3 goto label3;
v4 = virtualinvoke v1.<org.apache.commons.io.ByteOrderMark: int get(int)>(v2);
v5 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
v6 = v5[v2];
if v4 == v6 goto label2;
return 0;
label2:
v2 = v2 + 1;
goto label1;
label3:
return 1;
}
public int read() throws java.io.IOException
{
int v1, v2;
org.apache.commons.io.input.BOMInputStream v0;
java.io.InputStream v3;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 = specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();
if v1 < 0 goto label1;
v2 = v1;
goto label2;
label1:
v3 = v0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;
v2 = virtualinvoke v3.<java.io.InputStream: int read()>();
label2:
return v2;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
int v10, v11, v2, v3, v4, v5, v6, v7, v9;
org.apache.commons.io.input.BOMInputStream v0;
java.io.InputStream v8;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = 0;
v5 = 0;
label1:
if v3 <= 0 goto label2;
if v5 < 0 goto label2;
v5 = specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();
if v5 < 0 goto label1;
v6 = v2;
v2 = v2 + 1;
v7 = v5 & 255;
v1[v6] = v7;
v3 = v3 - 1;
v4 = v4 + 1;
goto label1;
label2:
v8 = v0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;
v9 = virtualinvoke v8.<java.io.InputStream: int read(byte[],int,int)>(v1, v2, v3);
if v9 >= 0 goto label4;
if v4 <= 0 goto label3;
v10 = v4;
goto label5;
label3:
v11 = (int) -1;
v10 = v11;
goto label5;
label4:
v10 = v4 + v9;
label5:
return v10;
}
public int read(byte[]) throws java.io.IOException
{
byte[] v1;
int v2, v3;
org.apache.commons.io.input.BOMInputStream v0;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<org.apache.commons.io.input.BOMInputStream: int read(byte[],int,int)>(v1, 0, v2);
return v3;
}
public synchronized void mark(int)
{
int[] v3;
int v1, v2;
org.apache.commons.io.input.BOMInputStream v0;
boolean v4;
java.io.InputStream v5;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;
v0.<org.apache.commons.io.input.BOMInputStream: int markFbIndex> = v2;
v3 = v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;
if v3 != null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
v0.<org.apache.commons.io.input.BOMInputStream: boolean markedAtStart> = v4;
v5 = v0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;
virtualinvoke v5.<java.io.InputStream: void mark(int)>(v1);
return;
}
public synchronized void reset() throws java.io.IOException
{
int v1;
org.apache.commons.io.input.BOMInputStream v0;
boolean v2;
java.io.InputStream v3;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 = v0.<org.apache.commons.io.input.BOMInputStream: int markFbIndex>;
v0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = v1;
v2 = v0.<org.apache.commons.io.input.BOMInputStream: boolean markedAtStart>;
if v2 == 0 goto label1;
v0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes> = null;
label1:
v3 = v0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;
virtualinvoke v3.<java.io.InputStream: void reset()>();
return;
}
public long skip(long) throws java.io.IOException
{
long v1, v6, v7, v8;
byte v3;
int v2, v4;
org.apache.commons.io.input.BOMInputStream v0;
java.io.InputStream v5;
v0 := @this: org.apache.commons.io.input.BOMInputStream;
v1 := @parameter0: long;
v2 = 0;
label1:
v3 = v1 cmp v2;
if v3 <= 0 goto label2;
v4 = specialinvoke v0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();
if v4 < 0 goto label2;
v2 = v2 + 1;
goto label1;
label2:
v5 = v0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;
v6 = v1 - v2;
v7 = virtualinvoke v5.<java.io.InputStream: long skip(long)>(v6);
v8 = v7 + v2;
return v8;
}
static void <clinit>()
{
java.util.Comparator v0;
v0 = staticinvoke <org.apache.commons.io.input.BOMInputStream$lambda_static_0__273: java.util.Comparator bootstrap$()>();
<org.apache.commons.io.input.BOMInputStream: java.util.Comparator ByteOrderMarkLengthComparator> = v0;
return;
}
}