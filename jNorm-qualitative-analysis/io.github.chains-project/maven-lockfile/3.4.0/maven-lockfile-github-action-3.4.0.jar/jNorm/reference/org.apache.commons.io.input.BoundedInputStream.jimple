public class org.apache.commons.io.input.BoundedInputStream extends java.io.InputStream
{
private final java.io.InputStream in;
private final long max;
private long pos;
private long mark;
private boolean propagateClose;
public void <init>(java.io.InputStream, long)
{
long v2;
org.apache.commons.io.input.BoundedInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: long;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v0.<org.apache.commons.io.input.BoundedInputStream: long mark> = -1L;
v0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose> = 1;
v0.<org.apache.commons.io.input.BoundedInputStream: long max> = v2;
v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in> = v1;
return;
}
public void <init>(java.io.InputStream)
{
org.apache.commons.io.input.BoundedInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: java.io.InputStream;
specialinvoke v0.<org.apache.commons.io.input.BoundedInputStream: void <init>(java.io.InputStream,long)>(v1, -1L);
return;
}
public int read() throws java.io.IOException
{
org.apache.commons.io.input.BoundedInputStream v0;
long v1, v10, v3, v4, v9;
byte v2, v5;
int v6, v8;
java.io.InputStream v7;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v2 = v1 cmp 0L;
if v2 < 0 goto label1;
v3 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v4 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v5 = v3 cmp v4;
if v5 < 0 goto label1;
v6 = (int) -1;
return v6;
label1:
v7 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
v8 = virtualinvoke v7.<java.io.InputStream: int read()>();
v9 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v10 = v9 + 1L;
v0.<org.apache.commons.io.input.BoundedInputStream: long pos> = v10;
return v8;
}
public int read(byte[]) throws java.io.IOException
{
byte[] v1;
org.apache.commons.io.input.BoundedInputStream v0;
int v2, v3;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<org.apache.commons.io.input.BoundedInputStream: int read(byte[],int,int)>(v1, 0, v2);
return v3;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
org.apache.commons.io.input.BoundedInputStream v0;
long v10, v12, v13, v14, v19, v20, v4, v6, v7;
byte v11, v5, v8;
int v16, v17, v18, v2, v3, v9;
java.io.InputStream v15;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v5 = v4 cmp 0L;
if v5 < 0 goto label1;
v6 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v7 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v8 = v6 cmp v7;
if v8 < 0 goto label1;
v9 = (int) -1;
return v9;
label1:
v10 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v11 = v10 cmp 0L;
if v11 < 0 goto label2;
v12 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v13 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v14 = v12 - v13;
staticinvoke <java.lang.Math: long min(long,long)>(v3, v14);
label2:
v15 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
v16 = virtualinvoke v15.<java.io.InputStream: int read(byte[],int,int)>(v1, v2, v3);
v17 = (int) -1;
if v16 != v17 goto label3;
v18 = (int) -1;
return v18;
label3:
v19 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v20 = v19 + v16;
v0.<org.apache.commons.io.input.BoundedInputStream: long pos> = v20;
return v16;
}
public long skip(long) throws java.io.IOException
{
org.apache.commons.io.input.BoundedInputStream v0;
long v1, v10, v11, v2, v4, v5, v6, v7, v9;
byte v3;
java.io.InputStream v8;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: long;
v2 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v3 = v2 cmp 0L;
if v3 < 0 goto label1;
v4 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v5 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v6 = v4 - v5;
v7 = staticinvoke <java.lang.Math: long min(long,long)>(v1, v6);
goto label2;
label1:
v7 = v1;
label2:
v8 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
v9 = virtualinvoke v8.<java.io.InputStream: long skip(long)>(v7);
v10 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v11 = v10 + v9;
v0.<org.apache.commons.io.input.BoundedInputStream: long pos> = v11;
return v9;
}
public int available() throws java.io.IOException
{
org.apache.commons.io.input.BoundedInputStream v0;
long v1, v3, v4;
byte v2, v5;
int v7;
java.io.InputStream v6;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v2 = v1 cmp 0L;
if v2 < 0 goto label1;
v3 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v4 = v0.<org.apache.commons.io.input.BoundedInputStream: long max>;
v5 = v3 cmp v4;
if v5 < 0 goto label1;
return 0;
label1:
v6 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
v7 = virtualinvoke v6.<java.io.InputStream: int available()>();
return v7;
}
public java.lang.String toString()
{
java.lang.String v2;
org.apache.commons.io.input.BoundedInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public void close() throws java.io.IOException
{
org.apache.commons.io.input.BoundedInputStream v0;
boolean v1;
java.io.InputStream v2;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose>;
if v1 == 0 goto label1;
v2 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
virtualinvoke v2.<java.io.InputStream: void close()>();
label1:
return;
}
public synchronized void reset() throws java.io.IOException
{
long v2;
org.apache.commons.io.input.BoundedInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
virtualinvoke v1.<java.io.InputStream: void reset()>();
v2 = v0.<org.apache.commons.io.input.BoundedInputStream: long mark>;
v0.<org.apache.commons.io.input.BoundedInputStream: long pos> = v2;
return;
}
public synchronized void mark(int)
{
org.apache.commons.io.input.BoundedInputStream v0;
int v1;
long v3;
java.io.InputStream v2;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
virtualinvoke v2.<java.io.InputStream: void mark(int)>(v1);
v3 = v0.<org.apache.commons.io.input.BoundedInputStream: long pos>;
v0.<org.apache.commons.io.input.BoundedInputStream: long mark> = v3;
return;
}
public boolean markSupported()
{
org.apache.commons.io.input.BoundedInputStream v0;
boolean v2;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;
v2 = virtualinvoke v1.<java.io.InputStream: boolean markSupported()>();
return v2;
}
public boolean isPropagateClose()
{
org.apache.commons.io.input.BoundedInputStream v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 = v0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose>;
return v1;
}
public void setPropagateClose(boolean)
{
org.apache.commons.io.input.BoundedInputStream v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.BoundedInputStream;
v1 := @parameter0: boolean;
v0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose> = v1;
return;
}
}