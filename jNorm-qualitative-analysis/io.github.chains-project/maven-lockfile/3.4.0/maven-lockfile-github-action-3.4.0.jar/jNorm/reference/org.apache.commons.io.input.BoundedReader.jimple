public class org.apache.commons.io.input.BoundedReader extends java.io.Reader
{
private static final int INVALID;
private final java.io.Reader target;
private int charsRead;
private int markedAt;
private int readAheadLimit;
private final int maxCharsFromTargetReader;
public void <init>(java.io.Reader, int)
{
org.apache.commons.io.input.BoundedReader v0;
int v2, v3;
java.io.Reader v1;
v0 := @this: org.apache.commons.io.input.BoundedReader;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: int;
specialinvoke v0.<java.io.Reader: void <init>()>();
v3 = (int) -1;
v0.<org.apache.commons.io.input.BoundedReader: int markedAt> = v3;
v0.<org.apache.commons.io.input.BoundedReader: java.io.Reader target> = v1;
v0.<org.apache.commons.io.input.BoundedReader: int maxCharsFromTargetReader> = v2;
return;
}
public void close() throws java.io.IOException
{
java.io.Reader v1;
org.apache.commons.io.input.BoundedReader v0;
v0 := @this: org.apache.commons.io.input.BoundedReader;
v1 = v0.<org.apache.commons.io.input.BoundedReader: java.io.Reader target>;
virtualinvoke v1.<java.io.Reader: void close()>();
return;
}
public void reset() throws java.io.IOException
{
int v1;
java.io.Reader v2;
org.apache.commons.io.input.BoundedReader v0;
v0 := @this: org.apache.commons.io.input.BoundedReader;
v1 = v0.<org.apache.commons.io.input.BoundedReader: int markedAt>;
v0.<org.apache.commons.io.input.BoundedReader: int charsRead> = v1;
v2 = v0.<org.apache.commons.io.input.BoundedReader: java.io.Reader target>;
virtualinvoke v2.<java.io.Reader: void reset()>();
return;
}
public void mark(int) throws java.io.IOException
{
org.apache.commons.io.input.BoundedReader v0;
int v1, v2, v3, v4;
java.io.Reader v5;
v0 := @this: org.apache.commons.io.input.BoundedReader;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.input.BoundedReader: int charsRead>;
v3 = v1 - v2;
v0.<org.apache.commons.io.input.BoundedReader: int readAheadLimit> = v3;
v4 = v0.<org.apache.commons.io.input.BoundedReader: int charsRead>;
v0.<org.apache.commons.io.input.BoundedReader: int markedAt> = v4;
v5 = v0.<org.apache.commons.io.input.BoundedReader: java.io.Reader target>;
virtualinvoke v5.<java.io.Reader: void mark(int)>(v1);
return;
}
public int read() throws java.io.IOException
{
org.apache.commons.io.input.BoundedReader v0;
java.io.Reader v12;
int v1, v10, v11, v13, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.apache.commons.io.input.BoundedReader;
v1 = v0.<org.apache.commons.io.input.BoundedReader: int charsRead>;
v2 = v0.<org.apache.commons.io.input.BoundedReader: int maxCharsFromTargetReader>;
if v1 < v2 goto label1;
v3 = (int) -1;
return v3;
label1:
v4 = v0.<org.apache.commons.io.input.BoundedReader: int markedAt>;
if v4 < 0 goto label2;
v5 = v0.<org.apache.commons.io.input.BoundedReader: int charsRead>;
v6 = v0.<org.apache.commons.io.input.BoundedReader: int markedAt>;
v7 = v5 - v6;
v8 = v0.<org.apache.commons.io.input.BoundedReader: int readAheadLimit>;
if v7 < v8 goto label2;
v9 = (int) -1;
return v9;
label2:
v10 = v0.<org.apache.commons.io.input.BoundedReader: int charsRead>;
v11 = v10 + 1;
v0.<org.apache.commons.io.input.BoundedReader: int charsRead> = v11;
v12 = v0.<org.apache.commons.io.input.BoundedReader: java.io.Reader target>;
v13 = virtualinvoke v12.<java.io.Reader: int read()>();
return v13;
}
public int read(char[], int, int) throws java.io.IOException
{
org.apache.commons.io.input.BoundedReader v0;
int v2, v3, v4, v5, v6, v7, v8, v9;
char[] v1;
v0 := @this: org.apache.commons.io.input.BoundedReader;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = 0;
label1:
if v4 >= v3 goto label5;
v5 = virtualinvoke v0.<org.apache.commons.io.input.BoundedReader: int read()>();
v6 = (int) -1;
if v5 != v6 goto label4;
if v4 != 0 goto label2;
v7 = (int) -1;
v8 = v7;
goto label3;
label2:
v8 = v4;
label3:
return v8;
label4:
v9 = v2 + v4;
v1[v9] = v5;
v4 = v4 + 1;
goto label1;
label5:
return v3;
}
}