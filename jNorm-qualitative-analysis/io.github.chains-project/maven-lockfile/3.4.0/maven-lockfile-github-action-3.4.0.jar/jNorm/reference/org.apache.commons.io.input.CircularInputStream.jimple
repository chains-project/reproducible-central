public class org.apache.commons.io.input.CircularInputStream extends java.io.InputStream
{
private long byteCount;
private int position;
private final byte[] repeatedContent;
private final long targetByteCount;
private static byte[] validate(byte[])
{
byte[] v0;
byte v3;
int v1, v2, v4;
java.lang.IllegalArgumentException v5;
v0 := @parameter0: byte[];
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v0, "repeatContent");
v1 = lengthof v0;
v2 = 0;
label1:
if v2 >= v1 goto label3;
v3 = v0[v2];
v4 = (int) -1;
if v3 != v4 goto label2;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("repeatContent contains the end-of-stream marker -1");
throw v5;
label2:
v2 = v2 + 1;
goto label1;
label3:
return v0;
}
public void <init>(byte[], long)
{
byte[] v1, v4;
int v3, v5;
long v2;
java.lang.IllegalArgumentException v6;
org.apache.commons.io.input.CircularInputStream v0;
v0 := @this: org.apache.commons.io.input.CircularInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: long;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v3 = (int) -1;
v0.<org.apache.commons.io.input.CircularInputStream: int position> = v3;
v4 = staticinvoke <org.apache.commons.io.input.CircularInputStream: byte[] validate(byte[])>(v1);
v0.<org.apache.commons.io.input.CircularInputStream: byte[] repeatedContent> = v4;
v5 = lengthof v1;
if v5 != 0 goto label1;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("repeatContent is empty.");
throw v6;
label1:
v0.<org.apache.commons.io.input.CircularInputStream: long targetByteCount> = v2;
return;
}
public int read()
{
byte[] v11, v14;
long v1, v3, v4, v7, v8;
short v17;
byte v16, v2, v5;
int v10, v12, v13, v15, v6, v9;
org.apache.commons.io.input.CircularInputStream v0;
v0 := @this: org.apache.commons.io.input.CircularInputStream;
v1 = v0.<org.apache.commons.io.input.CircularInputStream: long targetByteCount>;
v2 = v1 cmp 0L;
if v2 < 0 goto label2;
v3 = v0.<org.apache.commons.io.input.CircularInputStream: long byteCount>;
v4 = v0.<org.apache.commons.io.input.CircularInputStream: long targetByteCount>;
v5 = v3 cmp v4;
if v5 != 0 goto label1;
v6 = (int) -1;
return v6;
label1:
v7 = v0.<org.apache.commons.io.input.CircularInputStream: long byteCount>;
v8 = v7 + 1L;
v0.<org.apache.commons.io.input.CircularInputStream: long byteCount> = v8;
label2:
v9 = v0.<org.apache.commons.io.input.CircularInputStream: int position>;
v10 = v9 + 1;
v11 = v0.<org.apache.commons.io.input.CircularInputStream: byte[] repeatedContent>;
v12 = lengthof v11;
v13 = v10 % v12;
v0.<org.apache.commons.io.input.CircularInputStream: int position> = v13;
v14 = v0.<org.apache.commons.io.input.CircularInputStream: byte[] repeatedContent>;
v15 = v0.<org.apache.commons.io.input.CircularInputStream: int position>;
v16 = v14[v15];
v17 = v16 & 255;
return v17;
}
}