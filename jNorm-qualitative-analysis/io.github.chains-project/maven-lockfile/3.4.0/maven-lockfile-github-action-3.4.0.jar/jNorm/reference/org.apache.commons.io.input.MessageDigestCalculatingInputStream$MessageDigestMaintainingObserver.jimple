public class org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver extends org.apache.commons.io.input.ObservableInputStream$Observer
{
private final java.security.MessageDigest messageDigest;
public void <init>(java.security.MessageDigest)
{
java.security.MessageDigest v1;
org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver v0;
v0 := @this: org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver;
v1 := @parameter0: java.security.MessageDigest;
specialinvoke v0.<org.apache.commons.io.input.ObservableInputStream$Observer: void <init>()>();
v0.<org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver: java.security.MessageDigest messageDigest> = v1;
return;
}
public void data(int) throws java.io.IOException
{
int v1;
java.security.MessageDigest v2;
org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver v0;
v0 := @this: org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver: java.security.MessageDigest messageDigest>;
virtualinvoke v2.<java.security.MessageDigest: void update(byte)>(v1);
return;
}
public void data(byte[], int, int) throws java.io.IOException
{
byte[] v1;
java.security.MessageDigest v4;
org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver v0;
int v2, v3;
v0 := @this: org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver: java.security.MessageDigest messageDigest>;
virtualinvoke v4.<java.security.MessageDigest: void update(byte[],int,int)>(v1, v2, v3);
return;
}
}