public class org.apache.commons.io.input.RandomAccessFileInputStream extends java.io.InputStream
{
private final boolean closeOnClose;
private final java.io.RandomAccessFile randomAccessFile;
public void <init>(java.io.RandomAccessFile)
{
java.io.RandomAccessFile v1;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 := @parameter0: java.io.RandomAccessFile;
specialinvoke v0.<org.apache.commons.io.input.RandomAccessFileInputStream: void <init>(java.io.RandomAccessFile,boolean)>(v1, 0);
return;
}
public void <init>(java.io.RandomAccessFile, boolean)
{
java.io.RandomAccessFile v1;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
java.lang.Object v3;
boolean v2;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 := @parameter0: java.io.RandomAccessFile;
v2 := @parameter1: boolean;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "file");
v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile> = v3;
v0.<org.apache.commons.io.input.RandomAccessFileInputStream: boolean closeOnClose> = v2;
return;
}
public int available() throws java.io.IOException
{
long v1;
byte v2;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 = virtualinvoke v0.<org.apache.commons.io.input.RandomAccessFileInputStream: long availableLong()>();
v2 = v1 cmp 2147483647L;
if v2 <= 0 goto label1;
return 2147483647;
label1:
return v1;
}
public long availableLong() throws java.io.IOException
{
java.io.RandomAccessFile v1, v3;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
long v2, v4, v5;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v2 = virtualinvoke v1.<java.io.RandomAccessFile: long length()>();
v3 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v4 = virtualinvoke v3.<java.io.RandomAccessFile: long getFilePointer()>();
v5 = v2 - v4;
return v5;
}
public void close() throws java.io.IOException
{
java.io.RandomAccessFile v2;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
specialinvoke v0.<java.io.InputStream: void close()>();
v1 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: boolean closeOnClose>;
if v1 == 0 goto label1;
v2 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
virtualinvoke v2.<java.io.RandomAccessFile: void close()>();
label1:
return;
}
public java.io.RandomAccessFile getRandomAccessFile()
{
java.io.RandomAccessFile v1;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
return v1;
}
public boolean isCloseOnClose()
{
org.apache.commons.io.input.RandomAccessFileInputStream v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: boolean closeOnClose>;
return v1;
}
public int read() throws java.io.IOException
{
int v2;
java.io.RandomAccessFile v1;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v2 = virtualinvoke v1.<java.io.RandomAccessFile: int read()>();
return v2;
}
public int read(byte[]) throws java.io.IOException
{
byte[] v1;
java.io.RandomAccessFile v2;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
int v3;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 := @parameter0: byte[];
v2 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v3 = virtualinvoke v2.<java.io.RandomAccessFile: int read(byte[])>(v1);
return v3;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
java.io.RandomAccessFile v4;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
int v2, v3, v5;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v5 = virtualinvoke v4.<java.io.RandomAccessFile: int read(byte[],int,int)>(v1, v2, v3);
return v5;
}
private void seek(long) throws java.io.IOException
{
java.io.RandomAccessFile v2;
long v1;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 := @parameter0: long;
v2 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
virtualinvoke v2.<java.io.RandomAccessFile: void seek(long)>(v1);
return;
}
public long skip(long) throws java.io.IOException
{
java.io.RandomAccessFile v12, v3, v5;
long v1, v10, v13, v14, v4, v6, v8;
byte v11, v2, v7, v9;
org.apache.commons.io.input.RandomAccessFileInputStream v0;
v0 := @this: org.apache.commons.io.input.RandomAccessFileInputStream;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 > 0 goto label1;
return 0L;
label1:
v3 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v4 = virtualinvoke v3.<java.io.RandomAccessFile: long getFilePointer()>();
v5 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v6 = virtualinvoke v5.<java.io.RandomAccessFile: long length()>();
v7 = v4 cmp v6;
if v7 < 0 goto label2;
return 0L;
label2:
v8 = v4 + v1;
v9 = v8 cmp v6;
if v9 <= 0 goto label3;
v10 = v6 - 1L;
goto label4;
label3:
v10 = v8;
label4:
v11 = v10 cmp 0L;
if v11 <= 0 goto label5;
specialinvoke v0.<org.apache.commons.io.input.RandomAccessFileInputStream: void seek(long)>(v10);
label5:
v12 = v0.<org.apache.commons.io.input.RandomAccessFileInputStream: java.io.RandomAccessFile randomAccessFile>;
v13 = virtualinvoke v12.<java.io.RandomAccessFile: long getFilePointer()>();
v14 = v13 - v4;
return v14;
}
}