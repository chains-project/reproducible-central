public class org.apache.commons.io.input.SwappedDataInputStream extends org.apache.commons.io.input.ProxyInputStream implements java.io.DataInput
{
public void <init>(java.io.InputStream)
{
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 := @parameter0: java.io.InputStream;
specialinvoke v0.<org.apache.commons.io.input.ProxyInputStream: void <init>(java.io.InputStream)>(v1);
return;
}
public boolean readBoolean() throws java.io.IOException, java.io.EOFException
{
org.apache.commons.io.input.SwappedDataInputStream v0;
byte v1;
boolean v2;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = virtualinvoke v0.<org.apache.commons.io.input.SwappedDataInputStream: byte readByte()>();
if 0 == v1 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public byte readByte() throws java.io.IOException, java.io.EOFException
{
int v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = virtualinvoke v1.<java.io.InputStream: int read()>();
return v2;
}
public char readChar() throws java.io.IOException, java.io.EOFException
{
short v1;
org.apache.commons.io.input.SwappedDataInputStream v0;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = virtualinvoke v0.<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>();
return v1;
}
public double readDouble() throws java.io.IOException, java.io.EOFException
{
org.apache.commons.io.input.SwappedDataInputStream v0;
double v2;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: double readSwappedDouble(java.io.InputStream)>(v1);
return v2;
}
public float readFloat() throws java.io.IOException, java.io.EOFException
{
float v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>(v1);
return v2;
}
public void readFully(byte[]) throws java.io.IOException, java.io.EOFException
{
int v2;
byte[] v1;
org.apache.commons.io.input.SwappedDataInputStream v0;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
virtualinvoke v0.<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>(v1, 0, v2);
return;
}
public void readFully(byte[], int, int) throws java.io.IOException, java.io.EOFException
{
byte[] v1;
java.io.EOFException v9;
org.apache.commons.io.input.SwappedDataInputStream v0;
int v2, v3, v4, v5, v6, v7, v8;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v3;
label1:
if v4 <= 0 goto label3;
v5 = v2 + v3;
v6 = v5 - v4;
v7 = virtualinvoke v0.<org.apache.commons.io.input.SwappedDataInputStream: int read(byte[],int,int)>(v1, v6, v4);
v8 = (int) -1;
if v8 != v7 goto label2;
v9 = new java.io.EOFException;
specialinvoke v9.<java.io.EOFException: void <init>()>();
throw v9;
label2:
v4 = v4 - v7;
goto label1;
label3:
return;
}
public int readInt() throws java.io.IOException, java.io.EOFException
{
int v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(v1);
return v2;
}
public java.lang.String readLine() throws java.io.IOException, java.io.EOFException
{
java.lang.UnsupportedOperationException v1;
org.apache.commons.io.input.SwappedDataInputStream v0;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException method(java.lang.String)>("readLine");
throw v1;
}
public long readLong() throws java.io.IOException, java.io.EOFException
{
long v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>(v1);
return v2;
}
public short readShort() throws java.io.IOException, java.io.EOFException
{
short v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>(v1);
return v2;
}
public int readUnsignedByte() throws java.io.IOException, java.io.EOFException
{
int v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = virtualinvoke v1.<java.io.InputStream: int read()>();
return v2;
}
public int readUnsignedShort() throws java.io.IOException, java.io.EOFException
{
int v2;
org.apache.commons.io.input.SwappedDataInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>(v1);
return v2;
}
public java.lang.String readUTF() throws java.io.IOException, java.io.EOFException
{
java.lang.UnsupportedOperationException v1;
org.apache.commons.io.input.SwappedDataInputStream v0;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException method(java.lang.String)>("readUTF");
throw v1;
}
public int skipBytes(int) throws java.io.IOException, java.io.EOFException
{
org.apache.commons.io.input.SwappedDataInputStream v0;
int v1;
long v3;
java.io.InputStream v2;
v0 := @this: org.apache.commons.io.input.SwappedDataInputStream;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.input.SwappedDataInputStream: java.io.InputStream in>;
v3 = virtualinvoke v2.<java.io.InputStream: long skip(long)>(v1);
return v3;
}
}