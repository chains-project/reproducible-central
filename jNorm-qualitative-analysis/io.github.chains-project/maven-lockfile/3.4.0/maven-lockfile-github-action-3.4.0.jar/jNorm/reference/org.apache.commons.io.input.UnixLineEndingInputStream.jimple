public class org.apache.commons.io.input.UnixLineEndingInputStream extends java.io.InputStream
{
private boolean slashNSeen;
private boolean slashRSeen;
private boolean eofSeen;
private final java.io.InputStream target;
private final boolean ensureLineFeedAtEndOfFile;
public void <init>(java.io.InputStream, boolean)
{
org.apache.commons.io.input.UnixLineEndingInputStream v0;
boolean v2;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: boolean;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v0.<org.apache.commons.io.input.UnixLineEndingInputStream: java.io.InputStream target> = v1;
v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean ensureLineFeedAtEndOfFile> = v2;
return;
}
private int readWithUpdate() throws java.io.IOException
{
org.apache.commons.io.input.UnixLineEndingInputStream v0;
int v2, v3;
boolean v4, v5, v6, v7;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;
v1 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: java.io.InputStream target>;
v2 = virtualinvoke v1.<java.io.InputStream: int read()>();
v3 = (int) -1;
if v2 != v3 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen> = v4;
v5 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen>;
if v5 == 0 goto label3;
return v2;
label3:
if v2 != 10 goto label4;
v6 = 1;
goto label5;
label4:
v6 = 0;
label5:
v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen> = v6;
if v2 != 13 goto label6;
v7 = 1;
goto label7;
label6:
v7 = 0;
label7:
v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen> = v7;
return v2;
}
public int read() throws java.io.IOException
{
org.apache.commons.io.input.UnixLineEndingInputStream v0;
int v3, v4, v6, v9;
boolean v1, v2, v5, v7, v8;
v0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;
v1 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen>;
v2 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen>;
if v2 == 0 goto label1;
v3 = specialinvoke v0.<org.apache.commons.io.input.UnixLineEndingInputStream: int eofGame(boolean)>(v1);
return v3;
label1:
v4 = specialinvoke v0.<org.apache.commons.io.input.UnixLineEndingInputStream: int readWithUpdate()>();
v5 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen>;
if v5 == 0 goto label2;
v6 = specialinvoke v0.<org.apache.commons.io.input.UnixLineEndingInputStream: int eofGame(boolean)>(v1);
return v6;
label2:
v7 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen>;
if v7 == 0 goto label3;
return 10;
label3:
if v1 == 0 goto label4;
v8 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen>;
if v8 == 0 goto label4;
v9 = virtualinvoke v0.<org.apache.commons.io.input.UnixLineEndingInputStream: int read()>();
return v9;
label4:
return v4;
}
private int eofGame(boolean)
{
org.apache.commons.io.input.UnixLineEndingInputStream v0;
int v3, v5;
boolean v1, v2, v4;
v0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;
v1 := @parameter0: boolean;
if v1 != 0 goto label1;
v2 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean ensureLineFeedAtEndOfFile>;
if v2 != 0 goto label2;
label1:
v3 = (int) -1;
return v3;
label2:
v4 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen>;
if v4 != 0 goto label3;
v0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen> = 1;
return 10;
label3:
v5 = (int) -1;
return v5;
}
public void close() throws java.io.IOException
{
org.apache.commons.io.input.UnixLineEndingInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;
specialinvoke v0.<java.io.InputStream: void close()>();
v1 = v0.<org.apache.commons.io.input.UnixLineEndingInputStream: java.io.InputStream target>;
virtualinvoke v1.<java.io.InputStream: void close()>();
return;
}
public synchronized void mark(int)
{
int v1;
java.lang.UnsupportedOperationException v2;
org.apache.commons.io.input.UnixLineEndingInputStream v0;
v0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;
v1 := @parameter0: int;
v2 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException mark()>();
throw v2;
}
}