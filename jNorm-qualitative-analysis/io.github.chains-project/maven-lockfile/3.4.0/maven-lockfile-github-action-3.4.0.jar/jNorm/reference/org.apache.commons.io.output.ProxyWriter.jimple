public class org.apache.commons.io.output.ProxyWriter extends java.io.FilterWriter
{
public void <init>(java.io.Writer)
{
java.io.Writer v1;
org.apache.commons.io.output.ProxyWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: java.io.Writer;
specialinvoke v0.<java.io.FilterWriter: void <init>(java.io.Writer)>(v1);
return;
}
public java.io.Writer append(char) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
java.io.Writer v2;
char v1;
java.io.IOException v3;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: char;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(1);
v2 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v2.<java.io.Writer: java.io.Writer append(char)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(1);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v3);
label4:
return v0;
catch java.io.IOException from label1 to label2 with label3;
}
public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
{
java.lang.CharSequence v1;
java.io.IOException v7;
org.apache.commons.io.output.ProxyWriter v0;
int v2, v3, v4, v6;
java.io.Writer v5;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
v4 = v3 - v2;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(v4);
v5 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>(v1, v2, v3);
v6 = v3 - v2;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(v6);
label2:
goto label4;
label3:
v7 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v7);
label4:
return v0;
catch java.io.IOException from label1 to label2 with label3;
}
public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
java.lang.CharSequence v1;
int v2;
java.io.Writer v3;
java.io.IOException v4;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: java.lang.CharSequence;
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(java.lang.CharSequence)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(v2);
v3 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v4);
label4:
return v0;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(int) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
int v1;
java.io.Writer v2;
java.io.IOException v3;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(1);
v2 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v2.<java.io.Writer: void write(int)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(1);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v3);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(char[]) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
int v2;
java.io.Writer v3;
char[] v1;
java.io.IOException v4;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: char[];
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(char[])>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(v2);
v3 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v3.<java.io.Writer: void write(char[])>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v4);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(char[], int, int) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
int v2, v3;
java.io.Writer v4;
char[] v1;
java.io.IOException v5;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(v3);
v4 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v4.<java.io.Writer: void write(char[],int,int)>(v1, v2, v3);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v5);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(java.lang.String) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
int v2;
java.io.Writer v3;
java.io.IOException v4;
java.lang.String v1;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: java.lang.String;
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(java.lang.CharSequence)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(v2);
v3 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v3.<java.io.Writer: void write(java.lang.String)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v4);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(java.lang.String, int, int) throws java.io.IOException
{
org.apache.commons.io.output.ProxyWriter v0;
int v2, v3;
java.io.Writer v4;
java.io.IOException v5;
java.lang.String v1;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(v3);
v4 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v4.<java.io.Writer: void write(java.lang.String,int,int)>(v1, v2, v3);
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v5);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void flush() throws java.io.IOException
{
java.io.Writer v1;
java.io.IOException v2;
org.apache.commons.io.output.ProxyWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
label1:
v1 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
virtualinvoke v1.<java.io.Writer: void flush()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(v2);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void close() throws java.io.IOException
{
java.io.Writer v1;
org.apache.commons.io.function.IOConsumer v2;
org.apache.commons.io.output.ProxyWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 = v0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;
v2 = staticinvoke <org.apache.commons.io.output.ProxyWriter$handleIOException__264: org.apache.commons.io.function.IOConsumer bootstrap$(org.apache.commons.io.output.ProxyWriter)>(v0);
staticinvoke <org.apache.commons.io.IOUtils: void close(java.io.Closeable,org.apache.commons.io.function.IOConsumer)>(v1, v2);
return;
}
protected void beforeWrite(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.ProxyWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: int;
return;
}
protected void afterWrite(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.ProxyWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: int;
return;
}
protected void handleIOException(java.io.IOException) throws java.io.IOException
{
java.io.IOException v1;
org.apache.commons.io.output.ProxyWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyWriter;
v1 := @parameter0: java.io.IOException;
throw v1;
}
}