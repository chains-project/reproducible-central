public class org.apache.commons.lang3.EnumUtils extends java.lang.Object
{
private static final java.lang.String NULL_ELEMENTS_NOT_PERMITTED;
private static final java.lang.String CANNOT_STORE_S_S_VALUES_IN_S_BITS;
private static final java.lang.String S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE;
private static final java.lang.String ENUM_CLASS_MUST_BE_DEFINED;
private static java.lang.Class asEnum(java.lang.Class)
{
java.lang.Object[] v1, v3;
java.lang.Class v0;
boolean v2;
v0 := @parameter0: java.lang.Class;
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "EnumClass must be defined.", v1);
v2 = virtualinvoke v0.<java.lang.Class: boolean isEnum()>();
v3 = newarray (java.lang.Object)[1];
v3[0] = v0;
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v2, "%s does not seem to be an Enum type", v3);
return v0;
}
private static java.lang.Class checkBitVectorable(java.lang.Class)
{
java.lang.Object[] v2, v5;
java.lang.Integer v7, v9;
int v3, v6;
java.lang.Class v0, v1;
java.lang.String v8;
boolean v4;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Class asEnum(java.lang.Class)>(v0);
v2 = virtualinvoke v1.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v3 = lengthof v2;
if v3 > 64 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
v5 = newarray (java.lang.Object)[3];
v6 = lengthof v2;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
v5[0] = v7;
v8 = virtualinvoke v0.<java.lang.Class: java.lang.String getSimpleName()>();
v5[1] = v8;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);
v5[2] = v9;
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v4, "Cannot store %s %s values in %s bits", v5);
return v0;
}
public static transient long generateBitVector(java.lang.Class, java.lang.Enum[])
{
java.util.List v2;
java.lang.Enum[] v1;
java.lang.Class v0;
long v3;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Enum[];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object[] noNullElements(java.lang.Object[])>(v1);
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = staticinvoke <org.apache.commons.lang3.EnumUtils: long generateBitVector(java.lang.Class,java.lang.Iterable)>(v0, v2);
return v3;
}
public static long generateBitVector(java.lang.Class, java.lang.Iterable)
{
java.lang.Object[] v6;
java.util.Iterator v3;
long v2, v8;
java.lang.Iterable v1;
int v7;
java.lang.Class v0;
java.lang.Object v5;
boolean v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Iterable;
staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Class checkBitVectorable(java.lang.Class)>(v0);
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object)>(v1);
v2 = 0L;
v3 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v5, "null elements not permitted", v6);
v7 = virtualinvoke v5.<java.lang.Enum: int ordinal()>();
v8 = 1L << v7;
v2 = v2 | v8;
goto label1;
label2:
return v2;
}
public static transient long[] generateBitVectors(java.lang.Class, java.lang.Enum[])
{
java.lang.Object[] v3;
long v14, v17, v18;
long[] v8;
int v12, v13, v15, v16, v4, v5, v6, v7;
java.util.EnumSet v2;
boolean v10;
java.util.Iterator v9;
java.lang.Enum[] v1;
java.lang.Class v0;
java.lang.Object v11;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Enum[];
staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Class asEnum(java.lang.Class)>(v0);
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object[] noNullElements(java.lang.Object[])>(v1);
v2 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(v0);
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v2, v1);
v3 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v4 = lengthof v3;
v5 = v4 - 1;
v6 = v5 / 64;
v7 = v6 + 1;
v8 = newarray (long)[v7];
v9 = virtualinvoke v2.<java.util.EnumSet: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v11.<java.lang.Enum: int ordinal()>();
v13 = v12 / 64;
v14 = v8[v13];
v15 = virtualinvoke v11.<java.lang.Enum: int ordinal()>();
v16 = v15 % 64;
v17 = 1L << v16;
v18 = v14 | v17;
v8[v13] = v18;
goto label1;
label2:
staticinvoke <org.apache.commons.lang3.ArrayUtils: void reverse(long[])>(v8);
return v8;
}
public static long[] generateBitVectors(java.lang.Class, java.lang.Iterable)
{
java.lang.Object[] v6, v7;
long v18, v21, v22;
java.lang.Iterable v1;
long[] v12;
int v10, v11, v16, v17, v19, v20, v8, v9;
java.util.EnumSet v2;
boolean v14, v4;
java.util.Iterator v13, v3;
java.lang.Class v0;
java.lang.Object v15, v5;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Iterable;
staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Class asEnum(java.lang.Class)>(v0);
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object)>(v1);
v2 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(v0);
v3 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v5, "null elements not permitted", v6);
virtualinvoke v2.<java.util.EnumSet: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v7 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v8 = lengthof v7;
v9 = v8 - 1;
v10 = v9 / 64;
v11 = v10 + 1;
v12 = newarray (long)[v11];
v13 = virtualinvoke v2.<java.util.EnumSet: java.util.Iterator iterator()>();
label3:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label4;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = virtualinvoke v15.<java.lang.Enum: int ordinal()>();
v17 = v16 / 64;
v18 = v12[v17];
v19 = virtualinvoke v15.<java.lang.Enum: int ordinal()>();
v20 = v19 % 64;
v21 = 1L << v20;
v22 = v18 | v21;
v12[v17] = v22;
goto label3;
label4:
staticinvoke <org.apache.commons.lang3.ArrayUtils: void reverse(long[])>(v12);
return v12;
}
public static java.lang.Enum getEnum(java.lang.Class, java.lang.String)
{
java.lang.Class v0;
java.lang.String v1;
java.lang.Enum v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Enum getEnum(java.lang.Class,java.lang.String,java.lang.Enum)>(v0, v1, null);
return v2;
}
public static java.lang.Enum getEnum(java.lang.Class, java.lang.String, java.lang.Enum)
{
java.lang.Enum v2, v3;
java.lang.Class v0;
java.lang.String v1;
java.lang.IllegalArgumentException v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Enum;
if v1 != null goto label1;
return v2;
label1:
v3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v0, v1);
label2:
return v3;
label3:
v4 := @caughtexception;
return v2;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public static java.lang.Enum getEnumIgnoreCase(java.lang.Class, java.lang.String)
{
java.lang.Class v0;
java.lang.String v1;
java.lang.Enum v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Enum getEnumIgnoreCase(java.lang.Class,java.lang.String,java.lang.Enum)>(v0, v1, null);
return v2;
}
public static java.lang.Enum getEnumIgnoreCase(java.lang.Class, java.lang.String, java.lang.Enum)
{
java.lang.Object[] v4;
java.lang.Enum v2, v7;
int v5, v6;
java.lang.Class v0;
java.lang.String v1, v8;
boolean v3, v9;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Enum;
if v1 == null goto label1;
v3 = virtualinvoke v0.<java.lang.Class: boolean isEnum()>();
if v3 != 0 goto label2;
label1:
return v2;
label2:
v4 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v5 = lengthof v4;
v6 = 0;
label3:
if v6 >= v5 goto label5;
v7 = v4[v6];
v8 = virtualinvoke v7.<java.lang.Enum: java.lang.String name()>();
v9 = virtualinvoke v8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v1);
if v9 == 0 goto label4;
return v7;
label4:
v6 = v6 + 1;
goto label3;
label5:
return v2;
}
public static java.util.List getEnumList(java.lang.Class)
{
java.util.List v3;
java.lang.Object[] v2;
java.lang.Class v0;
java.util.ArrayList v1;
v0 := @parameter0: java.lang.Class;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v3);
return v1;
}
public static java.util.Map getEnumMap(java.lang.Class)
{
java.util.LinkedHashMap v1;
java.lang.Object[] v2;
java.lang.Enum v5;
int v3, v4;
java.lang.Class v0;
java.lang.String v6;
v0 := @parameter0: java.lang.Class;
v1 = new java.util.LinkedHashMap;
specialinvoke v1.<java.util.LinkedHashMap: void <init>()>();
v2 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
v6 = virtualinvoke v5.<java.lang.Enum: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v5);
v4 = v4 + 1;
goto label1;
label2:
return v1;
}
public static boolean isValidEnum(java.lang.Class, java.lang.String)
{
java.lang.Enum v2;
java.lang.Class v0;
java.lang.String v1;
boolean v3;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Enum getEnum(java.lang.Class,java.lang.String)>(v0, v1);
if v2 == null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public static boolean isValidEnumIgnoreCase(java.lang.Class, java.lang.String)
{
java.lang.Enum v2;
java.lang.Class v0;
java.lang.String v1;
boolean v3;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Enum getEnumIgnoreCase(java.lang.Class,java.lang.String)>(v0, v1);
if v2 == null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public static java.util.EnumSet processBitVector(java.lang.Class, long)
{
long[] v3;
java.lang.Class v0, v2;
long v1;
java.util.EnumSet v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: long;
v2 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Class checkBitVectorable(java.lang.Class)>(v0);
virtualinvoke v2.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v3 = newarray (long)[1];
v3[0] = v1;
v4 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.util.EnumSet processBitVectors(java.lang.Class,long[])>(v0, v3);
return v4;
}
public static transient java.util.EnumSet processBitVectors(java.lang.Class, long[])
{
java.lang.Object[] v6;
long v13, v16, v17;
long[] v1, v5;
byte v18;
java.lang.Enum v9;
int v10, v11, v12, v14, v15, v7, v8;
java.util.EnumSet v3;
java.lang.Class v0, v2;
java.lang.Object v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: long[];
v2 = staticinvoke <org.apache.commons.lang3.EnumUtils: java.lang.Class asEnum(java.lang.Class)>(v0);
v3 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(v2);
v4 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object)>(v1);
v5 = staticinvoke <org.apache.commons.lang3.ArrayUtils: long[] clone(long[])>(v4);
staticinvoke <org.apache.commons.lang3.ArrayUtils: void reverse(long[])>(v5);
v6 = virtualinvoke v0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
v7 = lengthof v6;
v8 = 0;
label1:
if v8 >= v7 goto label3;
v9 = v6[v8];
v10 = virtualinvoke v9.<java.lang.Enum: int ordinal()>();
v11 = v10 / 64;
v12 = lengthof v5;
if v11 >= v12 goto label2;
v13 = v5[v11];
v14 = virtualinvoke v9.<java.lang.Enum: int ordinal()>();
v15 = v14 % 64;
v16 = 1L << v15;
v17 = v13 & v16;
v18 = v17 cmp 0L;
if v18 == 0 goto label2;
virtualinvoke v3.<java.util.EnumSet: boolean add(java.lang.Object)>(v9);
label2:
v8 = v8 + 1;
goto label1;
label3:
return v3;
}
public void <init>()
{
org.apache.commons.lang3.EnumUtils v0;
v0 := @this: org.apache.commons.lang3.EnumUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}