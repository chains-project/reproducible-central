public class org.apache.commons.lang3.LocaleUtils extends java.lang.Object
{
private static final java.util.concurrent.ConcurrentMap cLanguagesByCountry;
private static final java.util.concurrent.ConcurrentMap cCountriesByLanguage;
public static java.util.List availableLocaleList()
{
java.util.List v0;
v0 = <org.apache.commons.lang3.LocaleUtils$SyncAvoid: java.util.List AVAILABLE_LOCALE_LIST>;
return v0;
}
public static java.util.Set availableLocaleSet()
{
java.util.Set v0;
v0 = <org.apache.commons.lang3.LocaleUtils$SyncAvoid: java.util.Set AVAILABLE_LOCALE_SET>;
return v0;
}
public static java.util.List countriesByLanguage(java.lang.String)
{
java.util.ArrayList v4;
java.util.concurrent.ConcurrentMap v16, v17, v2;
java.lang.String v0, v11, v13, v9;
boolean v10, v12, v14, v7;
java.util.Iterator v6;
java.util.List v1, v15, v5;
java.lang.Object v3, v8;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v1;
label1:
v2 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
if v3 != null goto label4;
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.List availableLocaleList()>();
v6 = interfaceinvoke v5.<java.util.List: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label3;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = virtualinvoke v8.<java.util.Locale: java.lang.String getLanguage()>();
v10 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v9);
if v10 == 0 goto label2;
v11 = virtualinvoke v8.<java.util.Locale: java.lang.String getCountry()>();
v12 = virtualinvoke v11.<java.lang.String: boolean isEmpty()>();
if v12 != 0 goto label2;
v13 = virtualinvoke v8.<java.util.Locale: java.lang.String getVariant()>();
v14 = virtualinvoke v13.<java.lang.String: boolean isEmpty()>();
if v14 == 0 goto label2;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v8);
goto label2;
label3:
v15 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v4);
v16 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage>;
interfaceinvoke v16.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v0, v15);
v17 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage>;
interfaceinvoke v17.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
label4:
return v3;
}
public static boolean isAvailableLocale(java.util.Locale)
{
java.util.List v1;
java.util.Locale v0;
boolean v2;
v0 := @parameter0: java.util.Locale;
v1 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.List availableLocaleList()>();
v2 = interfaceinvoke v1.<java.util.List: boolean contains(java.lang.Object)>(v0);
return v2;
}
private static boolean isISO3166CountryCode(java.lang.String)
{
int v2;
java.lang.String v0;
boolean v1, v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isAllUpperCase(java.lang.CharSequence)>(v0);
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
if v2 != 2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
private static boolean isISO639LanguageCode(java.lang.String)
{
int v2, v3;
java.lang.String v0;
boolean v1, v4;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isAllLowerCase(java.lang.CharSequence)>(v0);
if v1 == 0 goto label2;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
if v2 == 2 goto label1;
v3 = virtualinvoke v0.<java.lang.String: int length()>();
if v3 != 3 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
private static boolean isNumericAreaCode(java.lang.String)
{
int v2;
java.lang.String v0;
boolean v1, v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNumeric(java.lang.CharSequence)>(v0);
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
if v2 != 3 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public static java.util.List languagesByCountry(java.lang.String)
{
java.util.ArrayList v4;
java.util.concurrent.ConcurrentMap v14, v15, v2;
java.lang.String v0, v11, v9;
boolean v10, v12, v7;
java.util.Iterator v6;
java.util.List v1, v13, v5;
java.lang.Object v3, v8;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v1;
label1:
v2 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
if v3 != null goto label4;
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.List availableLocaleList()>();
v6 = interfaceinvoke v5.<java.util.List: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label3;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = virtualinvoke v8.<java.util.Locale: java.lang.String getCountry()>();
v10 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v9);
if v10 == 0 goto label2;
v11 = virtualinvoke v8.<java.util.Locale: java.lang.String getVariant()>();
v12 = virtualinvoke v11.<java.lang.String: boolean isEmpty()>();
if v12 == 0 goto label2;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v8);
goto label2;
label3:
v13 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v4);
v14 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry>;
interfaceinvoke v14.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v0, v13);
v15 = <org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry>;
interfaceinvoke v15.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
label4:
return v3;
}
public static java.util.List localeLookupList(java.util.Locale)
{
java.util.List v1;
java.util.Locale v0;
v0 := @parameter0: java.util.Locale;
v1 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.List localeLookupList(java.util.Locale,java.util.Locale)>(v0, v0);
return v1;
}
public static java.util.List localeLookupList(java.util.Locale, java.util.Locale)
{
java.util.ArrayList v2;
java.util.List v13;
java.util.Locale v0, v1, v10, v5;
java.lang.String v11, v3, v6, v7, v8;
boolean v12, v4, v9;
v0 := @parameter0: java.util.Locale;
v1 := @parameter1: java.util.Locale;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(4);
if v0 == null goto label3;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v0);
v3 = virtualinvoke v0.<java.util.Locale: java.lang.String getVariant()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = new java.util.Locale;
v6 = virtualinvoke v0.<java.util.Locale: java.lang.String getLanguage()>();
v7 = virtualinvoke v0.<java.util.Locale: java.lang.String getCountry()>();
specialinvoke v5.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(v6, v7);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v5);
label1:
v8 = virtualinvoke v0.<java.util.Locale: java.lang.String getCountry()>();
v9 = virtualinvoke v8.<java.lang.String: boolean isEmpty()>();
if v9 != 0 goto label2;
v10 = new java.util.Locale;
v11 = virtualinvoke v0.<java.util.Locale: java.lang.String getLanguage()>();
specialinvoke v10.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(v11, "");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v10);
label2:
v12 = interfaceinvoke v2.<java.util.List: boolean contains(java.lang.Object)>(v1);
if v12 != 0 goto label3;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
label3:
v13 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v2);
return v13;
}
private static java.util.Locale parseLocale(java.lang.String)
{
java.lang.String[] v4;
java.util.Locale v11, v2, v20;
int v12, v3, v6;
java.lang.String v0, v13, v14, v22, v5, v7;
boolean v1, v10, v15, v16, v17, v18, v19, v8, v9;
java.lang.IllegalArgumentException v21;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isISO639LanguageCode(java.lang.String)>(v0);
if v1 == 0 goto label1;
v2 = new java.util.Locale;
specialinvoke v2.<java.util.Locale: void <init>(java.lang.String)>(v0);
return v2;
label1:
v3 = (int) -1;
v4 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("_", v3);
v5 = v4[0];
v6 = lengthof v4;
if v6 != 2 goto label4;
v7 = v4[1];
v8 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isISO639LanguageCode(java.lang.String)>(v5);
if v8 == 0 goto label2;
v9 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isISO3166CountryCode(java.lang.String)>(v7);
if v9 != 0 goto label3;
label2:
v10 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isNumericAreaCode(java.lang.String)>(v7);
if v10 == 0 goto label6;
label3:
v11 = new java.util.Locale;
specialinvoke v11.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(v5, v7);
return v11;
label4:
v12 = lengthof v4;
if v12 != 3 goto label6;
v13 = v4[1];
v14 = v4[2];
v15 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isISO639LanguageCode(java.lang.String)>(v5);
if v15 == 0 goto label6;
v16 = virtualinvoke v13.<java.lang.String: boolean isEmpty()>();
if v16 != 0 goto label5;
v17 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isISO3166CountryCode(java.lang.String)>(v13);
if v17 != 0 goto label5;
v18 = staticinvoke <org.apache.commons.lang3.LocaleUtils: boolean isNumericAreaCode(java.lang.String)>(v13);
if v18 == 0 goto label6;
label5:
v19 = virtualinvoke v14.<java.lang.String: boolean isEmpty()>();
if v19 != 0 goto label6;
v20 = new java.util.Locale;
specialinvoke v20.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v5, v13, v14);
return v20;
label6:
v21 = new java.lang.IllegalArgumentException;
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v22);
throw v21;
}
public static java.util.Locale toLocale(java.util.Locale)
{
java.util.Locale v0, v1;
v0 := @parameter0: java.util.Locale;
if v0 == null goto label1;
v1 = v0;
goto label2;
label1:
v1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
label2:
return v1;
}
public static java.util.Locale toLocale(java.lang.String)
{
java.util.Locale v18, v2, v25, v28;
int v6;
java.lang.String v0, v11, v17, v19, v21, v24, v26, v27, v5, v8;
boolean v1, v14, v15, v3;
char v12, v13, v22, v9;
java.lang.IllegalArgumentException v10, v16, v20, v23, v4, v7;
v0 := @parameter0: java.lang.String;
if v0 != null goto label01;
return null;
label01:
v1 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v1 == 0 goto label02;
v2 = new java.util.Locale;
specialinvoke v2.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("", "");
return v2;
label02:
v3 = virtualinvoke v0.<java.lang.String: boolean contains(java.lang.CharSequence)>("#");
if v3 == 0 goto label03;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label03:
v6 = virtualinvoke v0.<java.lang.String: int length()>();
if v6 >= 2 goto label04;
v7 = new java.lang.IllegalArgumentException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
throw v7;
label04:
v9 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v9 != 95 goto label11;
if v6 >= 3 goto label05;
v10 = new java.lang.IllegalArgumentException;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v10;
label05:
v12 = virtualinvoke v0.<java.lang.String: char charAt(int)>(1);
v13 = virtualinvoke v0.<java.lang.String: char charAt(int)>(2);
v14 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(v12);
if v14 == 0 goto label06;
v15 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(v13);
if v15 != 0 goto label07;
label06:
v16 = new java.lang.IllegalArgumentException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v16;
label07:
if v6 != 3 goto label08;
v18 = new java.util.Locale;
v19 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(1, 3);
specialinvoke v18.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("", v19);
return v18;
label08:
if v6 >= 5 goto label09;
v20 = new java.lang.IllegalArgumentException;
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v21);
throw v20;
label09:
v22 = virtualinvoke v0.<java.lang.String: char charAt(int)>(3);
if v22 == 95 goto label10;
v23 = new java.lang.IllegalArgumentException;
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid locale format: \u0001");
specialinvoke v23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v24);
throw v23;
label10:
v25 = new java.util.Locale;
v26 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(1, 3);
v27 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(4);
specialinvoke v25.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>("", v26, v27);
return v25;
label11:
v28 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale parseLocale(java.lang.String)>(v0);
return v28;
}
public void <init>()
{
org.apache.commons.lang3.LocaleUtils v0;
v0 := @this: org.apache.commons.lang3.LocaleUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.concurrent.ConcurrentHashMap v0, v1;
v0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
<org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cLanguagesByCountry> = v0;
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
<org.apache.commons.lang3.LocaleUtils: java.util.concurrent.ConcurrentMap cCountriesByLanguage> = v1;
return;
}
}