class org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream extends java.io.ObjectInputStream
{
private static final java.util.Map primitiveTypes;
private final java.lang.ClassLoader classLoader;
void <init>(java.io.InputStream, java.lang.ClassLoader) throws java.io.IOException
{
java.lang.ClassLoader v2;
org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream v0;
java.io.InputStream v1;
v0 := @this: org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: java.lang.ClassLoader;
specialinvoke v0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(v1);
v0.<org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.lang.ClassLoader classLoader> = v2;
return;
}
protected java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
{
java.io.ObjectStreamClass v1;
org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream v0;
java.lang.Thread v6;
java.util.Map v10;
java.lang.Class v4, v8;
java.lang.ClassNotFoundException v5, v9;
java.lang.Object v11;
java.lang.ClassLoader v3, v7;
java.lang.String v2;
v0 := @this: org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream;
v1 := @parameter0: java.io.ObjectStreamClass;
v2 = virtualinvoke v1.<java.io.ObjectStreamClass: java.lang.String getName()>();
label1:
v3 = v0.<org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.lang.ClassLoader classLoader>;
v4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v2, 0, v3);
label2:
return v4;
label3:
v5 := @caughtexception;
label4:
v6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v7 = virtualinvoke v6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v2, 0, v7);
label5:
return v8;
label6:
v9 := @caughtexception;
v10 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v11 = interfaceinvoke v10.<java.util.Map: java.lang.Object get(java.lang.Object)>(v2);
if v11 == null goto label7;
return v11;
label7:
throw v9;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.ClassNotFoundException from label4 to label5 with label6;
}
static void <clinit>()
{
java.util.HashMap v0;
java.util.Map v1, v11, v13, v15, v17, v3, v5, v7, v9;
java.lang.Class v10, v12, v14, v16, v18, v2, v4, v6, v8;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
<org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes> = v0;
v1 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v2 = <java.lang.Byte: java.lang.Class TYPE>;
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("byte", v2);
v3 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v4 = <java.lang.Short: java.lang.Class TYPE>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("short", v4);
v5 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v6 = <java.lang.Integer: java.lang.Class TYPE>;
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("int", v6);
v7 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v8 = <java.lang.Long: java.lang.Class TYPE>;
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("long", v8);
v9 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v10 = <java.lang.Float: java.lang.Class TYPE>;
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("float", v10);
v11 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v12 = <java.lang.Double: java.lang.Class TYPE>;
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("double", v12);
v13 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v14 = <java.lang.Boolean: java.lang.Class TYPE>;
interfaceinvoke v13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("boolean", v14);
v15 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v16 = <java.lang.Character: java.lang.Class TYPE>;
interfaceinvoke v15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("char", v16);
v17 = <org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.util.Map primitiveTypes>;
v18 = <java.lang.Void: java.lang.Class TYPE>;
interfaceinvoke v17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("void", v18);
return;
}
}