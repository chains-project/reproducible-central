public class org.apache.commons.lang3.SerializationUtils extends java.lang.Object
{
public static java.io.Serializable clone(java.io.Serializable)
{
java.lang.Throwable v7;
byte[] v1;
java.io.IOException v10;
org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream v3;
java.io.Serializable v0;
java.io.ByteArrayInputStream v2;
org.apache.commons.lang3.SerializationException v11, v9;
java.lang.Class v4;
java.lang.ClassNotFoundException v8;
java.lang.Object v6;
java.lang.ClassLoader v5;
v0 := @parameter0: java.io.Serializable;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <org.apache.commons.lang3.SerializationUtils: byte[] serialize(java.io.Serializable)>(v0);
v2 = new java.io.ByteArrayInputStream;
specialinvoke v2.<java.io.ByteArrayInputStream: void <init>(byte[])>(v1);
label2:
v3 = new org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream;
v4 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
specialinvoke v3.<org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: void <init>(java.io.InputStream,java.lang.ClassLoader)>(v2, v5);
label3:
v6 = virtualinvoke v3.<org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: java.lang.Object readObject()>();
label4:
virtualinvoke v3.<org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream: void close()>();
label5:
return v6;
label6:
v7 := @caughtexception;
throw v7;
label7:
v8 := @caughtexception;
v9 = new org.apache.commons.lang3.SerializationException;
specialinvoke v9.<org.apache.commons.lang3.SerializationException: void <init>(java.lang.String,java.lang.Throwable)>("ClassNotFoundException while reading cloned object data", v8);
throw v9;
label8:
v10 := @caughtexception;
v11 = new org.apache.commons.lang3.SerializationException;
specialinvoke v11.<org.apache.commons.lang3.SerializationException: void <init>(java.lang.String,java.lang.Throwable)>("IOException while reading or closing cloned object data", v10);
throw v11;
catch java.lang.Throwable from label3 to label4 with label6;
catch java.lang.ClassNotFoundException from label2 to label5 with label7;
catch java.io.IOException from label2 to label5 with label8;
catch java.io.IOException from label6 to label7 with label8;
}
public static java.lang.Object deserialize(byte[])
{
byte[] v0;
java.lang.Object[] v1;
java.io.ByteArrayInputStream v2;
java.lang.Object v3;
v0 := @parameter0: byte[];
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "objectData", v1);
v2 = new java.io.ByteArrayInputStream;
specialinvoke v2.<java.io.ByteArrayInputStream: void <init>(byte[])>(v0);
v3 = staticinvoke <org.apache.commons.lang3.SerializationUtils: java.lang.Object deserialize(java.io.InputStream)>(v2);
return v3;
}
public static java.lang.Object deserialize(java.io.InputStream)
{
java.lang.Throwable v4;
java.lang.Object[] v1;
org.apache.commons.lang3.SerializationException v6;
java.io.ObjectInputStream v2;
java.lang.Object v3;
java.lang.Exception v5;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "inputStream", v1);
label1:
v2 = new java.io.ObjectInputStream;
specialinvoke v2.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(v0);
label2:
v3 = virtualinvoke v2.<java.io.ObjectInputStream: java.lang.Object readObject()>();
label3:
virtualinvoke v2.<java.io.ObjectInputStream: void close()>();
label4:
return v3;
label5:
v4 := @caughtexception;
throw v4;
label6:
v5 := @caughtexception;
v6 = new org.apache.commons.lang3.SerializationException;
specialinvoke v6.<org.apache.commons.lang3.SerializationException: void <init>(java.lang.Throwable)>(v5);
throw v6;
catch java.lang.Throwable from label2 to label3 with label5;
catch java.lang.ClassNotFoundException from label1 to label4 with label6;
catch java.io.IOException from label1 to label4 with label6;
}
public static java.io.Serializable roundtrip(java.io.Serializable)
{
byte[] v1;
java.lang.Object v2;
java.io.Serializable v0;
v0 := @parameter0: java.io.Serializable;
v1 = staticinvoke <org.apache.commons.lang3.SerializationUtils: byte[] serialize(java.io.Serializable)>(v0);
v2 = staticinvoke <org.apache.commons.lang3.SerializationUtils: java.lang.Object deserialize(byte[])>(v1);
return v2;
}
public static byte[] serialize(java.io.Serializable)
{
byte[] v2;
java.io.ByteArrayOutputStream v1;
java.io.Serializable v0;
v0 := @parameter0: java.io.Serializable;
v1 = new java.io.ByteArrayOutputStream;
specialinvoke v1.<java.io.ByteArrayOutputStream: void <init>(int)>(512);
staticinvoke <org.apache.commons.lang3.SerializationUtils: void serialize(java.io.Serializable,java.io.OutputStream)>(v0, v1);
v2 = virtualinvoke v1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
return v2;
}
public static void serialize(java.io.Serializable, java.io.OutputStream)
{
java.io.OutputStream v1;
java.lang.Throwable v4;
java.lang.Object[] v2;
org.apache.commons.lang3.SerializationException v6;
java.io.IOException v5;
java.io.ObjectOutputStream v3;
java.io.Serializable v0;
v0 := @parameter0: java.io.Serializable;
v1 := @parameter1: java.io.OutputStream;
v2 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v1, "outputStream", v2);
label1:
v3 = new java.io.ObjectOutputStream;
specialinvoke v3.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(v1);
label2:
virtualinvoke v3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(v0);
label3:
virtualinvoke v3.<java.io.ObjectOutputStream: void close()>();
goto label6;
label4:
v4 := @caughtexception;
throw v4;
label5:
v5 := @caughtexception;
v6 = new org.apache.commons.lang3.SerializationException;
specialinvoke v6.<org.apache.commons.lang3.SerializationException: void <init>(java.lang.Throwable)>(v5);
throw v6;
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
catch java.io.IOException from label1 to label5 with label5;
}
public void <init>()
{
org.apache.commons.lang3.SerializationUtils v0;
v0 := @this: org.apache.commons.lang3.SerializationUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}