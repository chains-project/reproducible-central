public class org.apache.commons.lang3.builder.HashCodeBuilder extends java.lang.Object implements org.apache.commons.lang3.builder.Builder
{
private static final int DEFAULT_INITIAL_VALUE;
private static final int DEFAULT_MULTIPLIER_VALUE;
private static final java.lang.ThreadLocal REGISTRY;
private final int iConstant;
private int iTotal;
static java.util.Set getRegistry()
{
java.lang.Object v1;
java.lang.ThreadLocal v0;
v0 = <org.apache.commons.lang3.builder.HashCodeBuilder: java.lang.ThreadLocal REGISTRY>;
v1 = virtualinvoke v0.<java.lang.ThreadLocal: java.lang.Object get()>();
return v1;
}
static boolean isRegistered(java.lang.Object)
{
org.apache.commons.lang3.builder.IDKey v2;
java.util.Set v1;
java.lang.Object v0;
boolean v3, v4;
v0 := @parameter0: java.lang.Object;
v1 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: java.util.Set getRegistry()>();
if v1 == null goto label1;
v2 = new org.apache.commons.lang3.builder.IDKey;
specialinvoke v2.<org.apache.commons.lang3.builder.IDKey: void <init>(java.lang.Object)>(v0);
v3 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v2);
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
private static void reflectionAppend(java.lang.Object, java.lang.Class, org.apache.commons.lang3.builder.HashCodeBuilder, boolean, java.lang.String[])
{
java.lang.Throwable v25;
java.lang.Object[] v9;
java.lang.String[] v4;
java.util.function.Function v7;
int v10, v11, v17, v19;
org.apache.commons.lang3.builder.HashCodeBuilder v2;
java.lang.InternalError v24;
java.lang.String v13, v15;
boolean v14, v16, v18, v20, v21, v3, v5;
java.lang.IllegalAccessException v23;
java.lang.reflect.Field v12;
java.lang.reflect.Field[] v6;
java.lang.Class v1;
java.lang.Object v0, v22;
java.util.Comparator v8;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: org.apache.commons.lang3.builder.HashCodeBuilder;
v3 := @parameter3: boolean;
v4 := @parameter4: java.lang.String[];
v5 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: boolean isRegistered(java.lang.Object)>(v0);
if v5 == 0 goto label01;
return;
label01:
staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: void register(java.lang.Object)>(v0);
v6 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
v7 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder$getName__252: java.util.function.Function bootstrap$()>();
v8 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(v7);
v9 = staticinvoke <org.apache.commons.lang3.ArraySorter: java.lang.Object[] sort(java.lang.Object[],java.util.Comparator)>(v6, v8);
staticinvoke <java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>(v9, 1);
v10 = lengthof v9;
v11 = 0;
label02:
if v11 >= v10 goto label08;
v12 = v9[v11];
v13 = virtualinvoke v12.<java.lang.reflect.Field: java.lang.String getName()>();
v14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(v4, v13);
if v14 != 0 goto label07;
v15 = virtualinvoke v12.<java.lang.reflect.Field: java.lang.String getName()>();
v16 = virtualinvoke v15.<java.lang.String: boolean contains(java.lang.CharSequence)>("$");
if v16 != 0 goto label07;
if v3 != 0 goto label03;
v17 = virtualinvoke v12.<java.lang.reflect.Field: int getModifiers()>();
v18 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(v17);
if v18 != 0 goto label07;
label03:
v19 = virtualinvoke v12.<java.lang.reflect.Field: int getModifiers()>();
v20 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v19);
if v20 != 0 goto label07;
v21 = virtualinvoke v12.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/apache/commons/lang3/builder/HashCodeExclude;");
if v21 != 0 goto label07;
label04:
v22 = virtualinvoke v12.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v0);
virtualinvoke v2.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object)>(v22);
label05:
goto label07;
label06:
v23 := @caughtexception;
v24 = new java.lang.InternalError;
specialinvoke v24.<java.lang.InternalError: void <init>(java.lang.String)>("Unexpected IllegalAccessException");
throw v24;
label07:
v11 = v11 + 1;
goto label02;
label08:
staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: void unregister(java.lang.Object)>(v0);
goto label10;
label09:
v25 := @caughtexception;
staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: void unregister(java.lang.Object)>(v0);
throw v25;
label10:
return;
catch java.lang.IllegalAccessException from label04 to label05 with label06;
catch java.lang.Throwable from label01 to label08 with label09;
}
public static int reflectionHashCode(int, int, java.lang.Object)
{
int v0, v1, v4;
java.lang.Object v2;
java.lang.String[] v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.Object;
v3 = newarray (java.lang.String)[0];
v4 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(v0, v1, v2, 0, null, v3);
return v4;
}
public static int reflectionHashCode(int, int, java.lang.Object, boolean)
{
int v0, v1, v5;
java.lang.Object v2;
java.lang.String[] v4;
boolean v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: boolean;
v4 = newarray (java.lang.String)[0];
v5 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(v0, v1, v2, v3, null, v4);
return v5;
}
public static transient int reflectionHashCode(int, int, java.lang.Object, boolean, java.lang.Class, java.lang.String[])
{
java.lang.Object[] v6;
java.lang.String[] v5;
int v0, v1, v10;
org.apache.commons.lang3.builder.HashCodeBuilder v7;
java.lang.Class v4, v8, v9;
java.lang.Object v2;
boolean v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: boolean;
v4 := @parameter4: java.lang.Class;
v5 := @parameter5: java.lang.String[];
v6 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v2, "object", v6);
v7 = new org.apache.commons.lang3.builder.HashCodeBuilder;
specialinvoke v7.<org.apache.commons.lang3.builder.HashCodeBuilder: void <init>(int,int)>(v0, v1);
v8 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])>(v2, v8, v7, v3, v5);
label1:
v9 = virtualinvoke v8.<java.lang.Class: java.lang.Class getSuperclass()>();
if v9 == null goto label2;
if v8 == v4 goto label2;
v8 = virtualinvoke v8.<java.lang.Class: java.lang.Class getSuperclass()>();
staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])>(v2, v8, v7, v3, v5);
goto label1;
label2:
v10 = virtualinvoke v7.<org.apache.commons.lang3.builder.HashCodeBuilder: int toHashCode()>();
return v10;
}
public static int reflectionHashCode(java.lang.Object, boolean)
{
int v3;
java.lang.Object v0;
java.lang.String[] v2;
boolean v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: boolean;
v2 = newarray (java.lang.String)[0];
v3 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(17, 37, v0, v1, null, v2);
return v3;
}
public static int reflectionHashCode(java.lang.Object, java.util.Collection)
{
java.util.Collection v1;
int v3;
java.lang.Object v0;
java.lang.String[] v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.util.Collection;
v2 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.util.Collection)>(v1);
v3 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: int reflectionHashCode(java.lang.Object,java.lang.String[])>(v0, v2);
return v3;
}
public static transient int reflectionHashCode(java.lang.Object, java.lang.String[])
{
int v2;
java.lang.Object v0;
java.lang.String[] v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String[];
v2 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(17, 37, v0, 0, null, v1);
return v2;
}
private static void register(java.lang.Object)
{
java.util.HashSet v2;
java.lang.ThreadLocal v3;
org.apache.commons.lang3.builder.IDKey v4;
java.util.Set v1;
java.lang.Object v0;
v0 := @parameter0: java.lang.Object;
v1 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: java.util.Set getRegistry()>();
if v1 != null goto label1;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v1 = v2;
v3 = <org.apache.commons.lang3.builder.HashCodeBuilder: java.lang.ThreadLocal REGISTRY>;
virtualinvoke v3.<java.lang.ThreadLocal: void set(java.lang.Object)>(v2);
label1:
v4 = new org.apache.commons.lang3.builder.IDKey;
specialinvoke v4.<org.apache.commons.lang3.builder.IDKey: void <init>(java.lang.Object)>(v0);
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v4);
return;
}
private static void unregister(java.lang.Object)
{
java.lang.ThreadLocal v4;
org.apache.commons.lang3.builder.IDKey v2;
java.util.Set v1;
java.lang.Object v0;
boolean v3;
v0 := @parameter0: java.lang.Object;
v1 = staticinvoke <org.apache.commons.lang3.builder.HashCodeBuilder: java.util.Set getRegistry()>();
if v1 == null goto label1;
v2 = new org.apache.commons.lang3.builder.IDKey;
specialinvoke v2.<org.apache.commons.lang3.builder.IDKey: void <init>(java.lang.Object)>(v0);
interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v2);
v3 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = <org.apache.commons.lang3.builder.HashCodeBuilder: java.lang.ThreadLocal REGISTRY>;
virtualinvoke v4.<java.lang.ThreadLocal: void remove()>();
label1:
return;
}
public void <init>()
{
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant> = 37;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = 17;
return;
}
public void <init>(int, int)
{
java.lang.Object[] v5, v8;
int v1, v2, v3, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
boolean v4, v7;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: int;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = v1 % 2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
v5 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v4, "HashCodeBuilder requires an odd initial value", v5);
v6 = v2 % 2;
if v6 == 0 goto label3;
v7 = 1;
goto label4;
label3:
v7 = 0;
label4:
v8 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v7, "HashCodeBuilder requires an odd multiplier", v8);
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant> = v2;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v1;
return;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(boolean)
{
int v2, v3, v4, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
boolean v1, v5;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: boolean;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
if v1 == 0 goto label1;
v5 = 0;
goto label2;
label1:
v5 = 1;
label2:
v6 = v4 + v5;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v6;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[])
{
boolean[] v1;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
boolean v7;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: boolean[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(boolean)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(byte)
{
byte v1;
int v2, v3, v4, v5;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: byte;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = v4 + v1;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v5;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(byte[])
{
byte[] v1;
byte v7;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: byte[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(byte)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(char)
{
int v2, v3, v4, v5;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
char v1;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: char;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = v4 + v1;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v5;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(char[])
{
char v7;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
char[] v1;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: char[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(char)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(double)
{
org.apache.commons.lang3.builder.HashCodeBuilder v0, v3;
long v2;
double v1;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: double;
v2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(v1);
v3 = virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(long)>(v2);
return v3;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(double[])
{
double[] v1;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
double v7;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: double[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(double)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(float)
{
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
float v1;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: float;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(v1);
v6 = v4 + v5;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v6;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(float[])
{
float[] v1;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
float v7;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: float[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(float)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(int)
{
int v1, v2, v3, v4, v5;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = v4 + v1;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v5;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(int[])
{
int[] v1;
int v2, v3, v4, v5, v6, v7;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: int[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(int)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(long)
{
long v1, v5, v6;
int v2, v3, v4, v7;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: long;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = v1 >> 32;
v6 = v1 ^ v5;
v7 = v4 + v6;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v7;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(long[])
{
long v7;
long[] v1;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: long[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(long)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object)
{
int v10, v11, v2, v3, v4, v7, v8, v9;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
java.lang.Class v5;
java.lang.Object v1;
boolean v6;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: boolean isArray()>();
if v6 == 0 goto label2;
specialinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: void appendArray(java.lang.Object)>(v1);
goto label3;
label2:
v7 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v8 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v9 = v7 * v8;
v10 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
v11 = v9 + v10;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v11;
label3:
return v0;
}
private void appendArray(java.lang.Object)
{
org.apache.commons.lang3.builder.HashCodeBuilder v0;
java.lang.Object v1;
boolean v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof long[];
if v2 == 0 goto label1;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(long[])>(v1);
goto label9;
label1:
v3 = v1 instanceof int[];
if v3 == 0 goto label2;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(int[])>(v1);
goto label9;
label2:
v4 = v1 instanceof short[];
if v4 == 0 goto label3;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(short[])>(v1);
goto label9;
label3:
v5 = v1 instanceof char[];
if v5 == 0 goto label4;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(char[])>(v1);
goto label9;
label4:
v6 = v1 instanceof byte[];
if v6 == 0 goto label5;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(byte[])>(v1);
goto label9;
label5:
v7 = v1 instanceof double[];
if v7 == 0 goto label6;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(double[])>(v1);
goto label9;
label6:
v8 = v1 instanceof float[];
if v8 == 0 goto label7;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(float[])>(v1);
goto label9;
label7:
v9 = v1 instanceof boolean[];
if v9 == 0 goto label8;
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[])>(v1);
goto label9;
label8:
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[])>(v1);
label9:
return;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[])
{
java.lang.Object[] v1;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
java.lang.Object v7;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: java.lang.Object[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(short)
{
short v1;
int v2, v3, v4, v5;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: short;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = v4 + v1;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v5;
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder append(short[])
{
short v7;
int v2, v3, v4, v5, v6;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
short[] v1;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: short[];
if v1 != null goto label1;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v4;
goto label3;
label1:
v5 = lengthof v1;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v1[v6];
virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: org.apache.commons.lang3.builder.HashCodeBuilder append(short)>(v7);
v6 = v6 + 1;
goto label2;
label3:
return v0;
}
public org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(int)
{
int v1, v2, v3, v4, v5;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
v3 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iConstant>;
v4 = v2 * v3;
v5 = v4 + v1;
v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal> = v5;
return v0;
}
public int toHashCode()
{
int v1;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 = v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int iTotal>;
return v1;
}
public java.lang.Integer build()
{
int v1;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
java.lang.Integer v2;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 = virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int toHashCode()>();
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
return v2;
}
public int hashCode()
{
int v1;
org.apache.commons.lang3.builder.HashCodeBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.HashCodeBuilder;
v1 = virtualinvoke v0.<org.apache.commons.lang3.builder.HashCodeBuilder: int toHashCode()>();
return v1;
}
static void <clinit>()
{
java.lang.ThreadLocal v0;
v0 = new java.lang.ThreadLocal;
specialinvoke v0.<java.lang.ThreadLocal: void <init>()>();
<org.apache.commons.lang3.builder.HashCodeBuilder: java.lang.ThreadLocal REGISTRY> = v0;
return;
}
}