class org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
private final java.lang.Object target;
private final java.lang.String methodName;
private final java.util.Set eventTypes;
void <init>(java.lang.Object, java.lang.String, java.lang.String[])
{
java.util.HashSet v4;
java.util.List v5;
java.lang.Object v1;
java.lang.String[] v3;
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler v0;
java.lang.String v2;
v0 := @this: org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.Object target> = v1;
v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.String methodName> = v2;
v4 = new java.util.HashSet;
v5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
specialinvoke v4.<java.util.HashSet: void <init>(java.util.Collection)>(v5);
v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.util.Set eventTypes> = v4;
return;
}
public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
{
java.lang.Object[] v3;
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler v0;
java.lang.String v11, v14, v7;
java.lang.reflect.Method v2;
boolean v5, v8, v9;
java.util.Set v4, v6;
java.lang.Object v1, v10, v12, v13, v15;
v0 := @this: org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.reflect.Method;
v3 := @parameter2: java.lang.Object[];
v4 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.util.Set eventTypes>;
v5 = interfaceinvoke v4.<java.util.Set: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.util.Set eventTypes>;
v7 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.String getName()>();
v8 = interfaceinvoke v6.<java.util.Set: boolean contains(java.lang.Object)>(v7);
if v8 == 0 goto label3;
label1:
v9 = specialinvoke v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: boolean hasMatchingParametersMethod(java.lang.reflect.Method)>(v2);
if v9 == 0 goto label2;
v10 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.Object target>;
v11 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.String methodName>;
v12 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(v10, v11, v3);
return v12;
label2:
v13 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.Object target>;
v14 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.String methodName>;
v15 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String)>(v13, v14);
return v15;
label3:
return null;
}
private boolean hasMatchingParametersMethod(java.lang.reflect.Method)
{
java.lang.Class[] v5;
java.lang.Class v3;
java.lang.Object v2;
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler v0;
java.lang.String v4;
java.lang.reflect.Method v1, v6;
boolean v7;
v0 := @this: org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler;
v1 := @parameter0: java.lang.reflect.Method;
v2 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.Object target>;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = v0.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: java.lang.String methodName>;
v5 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
v6 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(v3, v4, v5);
if v6 == null goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
}
}