public interface  org.apache.commons.lang3.function.FailableObjDoubleConsumer extends java.lang.Object
{
public static final org.apache.commons.lang3.function.FailableObjDoubleConsumer NOP;
public static org.apache.commons.lang3.function.FailableObjDoubleConsumer 'nop'()
{
org.apache.commons.lang3.function.FailableObjDoubleConsumer v0;
v0 = <org.apache.commons.lang3.function.FailableObjDoubleConsumer: org.apache.commons.lang3.function.FailableObjDoubleConsumer NOP>;
return v0;
}
public abstract void accept(java.lang.Object, double) throws java.lang.Throwable;
static void <clinit>()
{
org.apache.commons.lang3.function.FailableObjDoubleConsumer v0;
v0 = staticinvoke <org.apache.commons.lang3.function.FailableObjDoubleConsumer$lambda_static_0__159: org.apache.commons.lang3.function.FailableObjDoubleConsumer bootstrap$()>();
<org.apache.commons.lang3.function.FailableObjDoubleConsumer: org.apache.commons.lang3.function.FailableObjDoubleConsumer NOP> = v0;
return;
}
}