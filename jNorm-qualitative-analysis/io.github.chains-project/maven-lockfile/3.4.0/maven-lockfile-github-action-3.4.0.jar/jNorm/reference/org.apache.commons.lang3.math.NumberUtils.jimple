public class org.apache.commons.lang3.math.NumberUtils extends java.lang.Object
{
public static final java.lang.Long LONG_ZERO;
public static final java.lang.Long LONG_ONE;
public static final java.lang.Long LONG_MINUS_ONE;
public static final java.lang.Integer INTEGER_ZERO;
public static final java.lang.Integer INTEGER_ONE;
public static final java.lang.Integer INTEGER_TWO;
public static final java.lang.Integer INTEGER_MINUS_ONE;
public static final java.lang.Short SHORT_ZERO;
public static final java.lang.Short SHORT_ONE;
public static final java.lang.Short SHORT_MINUS_ONE;
public static final java.lang.Byte BYTE_ZERO;
public static final java.lang.Byte BYTE_ONE;
public static final java.lang.Byte BYTE_MINUS_ONE;
public static final java.lang.Double DOUBLE_ZERO;
public static final java.lang.Double DOUBLE_ONE;
public static final java.lang.Double DOUBLE_MINUS_ONE;
public static final java.lang.Float FLOAT_ZERO;
public static final java.lang.Float FLOAT_ONE;
public static final java.lang.Float FLOAT_MINUS_ONE;
public static final java.lang.Long LONG_INT_MAX_VALUE;
public static final java.lang.Long LONG_INT_MIN_VALUE;
public void <init>()
{
org.apache.commons.lang3.math.NumberUtils v0;
v0 := @this: org.apache.commons.lang3.math.NumberUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static int toInt(java.lang.String)
{
int v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: int toInt(java.lang.String,int)>(v0, 0);
return v1;
}
public static int toInt(java.lang.String, int)
{
int v1, v2;
java.lang.NumberFormatException v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
if v0 != null goto label1;
return v1;
label1:
v2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
label2:
return v2;
label3:
v3 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public static long toLong(java.lang.String)
{
long v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: long toLong(java.lang.String,long)>(v0, 0L);
return v1;
}
public static long toLong(java.lang.String, long)
{
java.lang.NumberFormatException v3;
long v1, v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: long;
if v0 != null goto label1;
return v1;
label1:
v2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v0);
label2:
return v2;
label3:
v3 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public static float toFloat(java.lang.String)
{
float v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: float toFloat(java.lang.String,float)>(v0, 0.0F);
return v1;
}
public static float toFloat(java.lang.String, float)
{
float v1, v2;
java.lang.NumberFormatException v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: float;
if v0 != null goto label1;
return v1;
label1:
v2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(v0);
label2:
return v2;
label3:
v3 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public static double toDouble(java.lang.String)
{
java.lang.String v0;
double v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: double toDouble(java.lang.String,double)>(v0, 0.0);
return v1;
}
public static double toDouble(java.lang.String, double)
{
java.lang.NumberFormatException v3;
java.lang.String v0;
double v1, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: double;
if v0 != null goto label1;
return v1;
label1:
v2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(v0);
label2:
return v2;
label3:
v3 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public static double toDouble(java.math.BigDecimal)
{
java.math.BigDecimal v0;
double v1;
v0 := @parameter0: java.math.BigDecimal;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: double toDouble(java.math.BigDecimal,double)>(v0, 0.0);
return v1;
}
public static double toDouble(java.math.BigDecimal, double)
{
java.math.BigDecimal v0;
double v1, v2;
v0 := @parameter0: java.math.BigDecimal;
v1 := @parameter1: double;
if v0 != null goto label1;
v2 = v1;
goto label2;
label1:
v2 = virtualinvoke v0.<java.math.BigDecimal: double doubleValue()>();
label2:
return v2;
}
public static byte toByte(java.lang.String)
{
java.lang.String v0;
byte v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: byte toByte(java.lang.String,byte)>(v0, 0);
return v1;
}
public static byte toByte(java.lang.String, byte)
{
byte v1, v2;
java.lang.NumberFormatException v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: byte;
if v0 != null goto label1;
return v1;
label1:
v2 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>(v0);
label2:
return v2;
label3:
v3 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public static short toShort(java.lang.String)
{
short v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: short toShort(java.lang.String,short)>(v0, 0);
return v1;
}
public static short toShort(java.lang.String, short)
{
short v1, v2;
java.lang.NumberFormatException v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: short;
if v0 != null goto label1;
return v1;
label1:
v2 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>(v0);
label2:
return v2;
label3:
v3 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal)
{
java.math.BigDecimal v0, v4;
int v2;
java.lang.Integer v1;
java.math.RoundingMode v3;
v0 := @parameter0: java.math.BigDecimal;
v1 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_TWO>;
v2 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
v4 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal,int,java.math.RoundingMode)>(v0, v2, v3);
return v4;
}
public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal, int, java.math.RoundingMode)
{
java.math.BigDecimal v0, v3, v5;
int v1;
java.math.RoundingMode v2, v4;
v0 := @parameter0: java.math.BigDecimal;
v1 := @parameter1: int;
v2 := @parameter2: java.math.RoundingMode;
if v0 != null goto label1;
v3 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
return v3;
label1:
if v2 != null goto label2;
v4 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
goto label3;
label2:
v4 = v2;
label3:
v5 = virtualinvoke v0.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(v1, v4);
return v5;
}
public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float)
{
java.lang.Float v0;
java.math.BigDecimal v4;
int v2;
java.lang.Integer v1;
java.math.RoundingMode v3;
v0 := @parameter0: java.lang.Float;
v1 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_TWO>;
v2 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
v4 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.lang.Float,int,java.math.RoundingMode)>(v0, v2, v3);
return v4;
}
public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float, int, java.math.RoundingMode)
{
java.lang.Float v0;
java.math.BigDecimal v3, v5, v6;
int v1;
float v4;
java.math.RoundingMode v2;
v0 := @parameter0: java.lang.Float;
v1 := @parameter1: int;
v2 := @parameter2: java.math.RoundingMode;
if v0 != null goto label1;
v3 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
return v3;
label1:
v4 = virtualinvoke v0.<java.lang.Float: float floatValue()>();
v5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(v4);
v6 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal,int,java.math.RoundingMode)>(v5, v1, v2);
return v6;
}
public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double)
{
java.math.BigDecimal v4;
java.lang.Double v0;
int v2;
java.lang.Integer v1;
java.math.RoundingMode v3;
v0 := @parameter0: java.lang.Double;
v1 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_TWO>;
v2 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
v4 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.lang.Double,int,java.math.RoundingMode)>(v0, v2, v3);
return v4;
}
public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double, int, java.math.RoundingMode)
{
java.math.BigDecimal v3, v5, v6;
java.lang.Double v0;
int v1;
double v4;
java.math.RoundingMode v2;
v0 := @parameter0: java.lang.Double;
v1 := @parameter1: int;
v2 := @parameter2: java.math.RoundingMode;
if v0 != null goto label1;
v3 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
return v3;
label1:
v4 = virtualinvoke v0.<java.lang.Double: double doubleValue()>();
v5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(v4);
v6 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal,int,java.math.RoundingMode)>(v5, v1, v2);
return v6;
}
public static java.math.BigDecimal toScaledBigDecimal(java.lang.String)
{
java.math.BigDecimal v4;
int v2;
java.lang.String v0;
java.lang.Integer v1;
java.math.RoundingMode v3;
v0 := @parameter0: java.lang.String;
v1 = <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_TWO>;
v2 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
v4 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.lang.String,int,java.math.RoundingMode)>(v0, v2, v3);
return v4;
}
public static java.math.BigDecimal toScaledBigDecimal(java.lang.String, int, java.math.RoundingMode)
{
java.math.BigDecimal v3, v4, v5;
int v1;
java.lang.String v0;
java.math.RoundingMode v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: java.math.RoundingMode;
if v0 != null goto label1;
v3 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
return v3;
label1:
v4 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(v0);
v5 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal,int,java.math.RoundingMode)>(v4, v1, v2);
return v5;
}
public static java.lang.Number createNumber(java.lang.String)
{
java.lang.Float v57, v84;
java.lang.Integer v16, v75;
java.math.BigDecimal v100, v67, v95, v97;
byte v60, v65, v88, v94;
java.lang.Long v15, v52, v77;
java.math.BigInteger v14, v54, v79;
java.lang.Double v62, v85;
java.lang.String v0, v27, v29, v31, v34, v40, v42, v49, v56, v70, v74, v8, v89, v90;
java.lang.NumberFormatException v2, v26, v33, v53, v55, v61, v66, v68, v69, v76, v78, v99;
boolean v1, v35, v43, v44, v45, v46, v47, v50, v51, v58, v63, v80, v81, v82, v83, v86, v9, v91, v92;
float v59, v87;
java.lang.String[] v3;
int v10, v11, v12, v13, v17, v19, v20, v21, v22, v23, v24, v25, v28, v30, v32, v36, v37, v38, v39, v4, v41, v5, v6, v7, v71, v72, v73, v98;
double v64, v93, v96;
char v18, v48;
v0 := @parameter0: java.lang.String;
if v0 != null goto label01;
return null;
label01:
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(v0);
if v1 == 0 goto label02;
v2 = new java.lang.NumberFormatException;
specialinvoke v2.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number");
throw v2;
label02:
v3 = newarray (java.lang.String)[6];
v3[0] = "0x";
v3[1] = "0X";
v3[2] = "-0x";
v3[3] = "-0X";
v3[4] = "#";
v3[5] = "-#";
v4 = virtualinvoke v0.<java.lang.String: int length()>();
v5 = 0;
v6 = lengthof v3;
v7 = 0;
label03:
if v7 >= v6 goto label05;
v8 = v3[v7];
v9 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>(v8);
if v9 == 0 goto label04;
v10 = virtualinvoke v8.<java.lang.String: int length()>();
v5 = 0 + v10;
goto label05;
label04:
v7 = v7 + 1;
goto label03;
label05:
if v5 <= 0 goto label12;
v11 = 0;
v12 = v5;
label06:
if v12 >= v4 goto label07;
v11 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v12);
if v11 != 48 goto label07;
v5 = v5 + 1;
v12 = v12 + 1;
goto label06;
label07:
v13 = v4 - v5;
if v13 > 16 goto label08;
if v13 != 16 goto label09;
if v11 <= 55 goto label09;
label08:
v14 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(v0);
return v14;
label09:
if v13 > 8 goto label10;
if v13 != 8 goto label11;
if v11 <= 55 goto label11;
label10:
v15 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Long createLong(java.lang.String)>(v0);
return v15;
label11:
v16 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(v0);
return v16;
label12:
v17 = v4 - 1;
v18 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v17);
v19 = virtualinvoke v0.<java.lang.String: int indexOf(int)>(46);
v20 = virtualinvoke v0.<java.lang.String: int indexOf(int)>(101);
v21 = virtualinvoke v0.<java.lang.String: int indexOf(int)>(69);
v22 = v20 + v21;
v23 = v22 + 1;
v24 = (int) -1;
if v19 <= v24 goto label17;
v25 = (int) -1;
if v23 <= v25 goto label15;
if v23 < v19 goto label13;
if v23 <= v4 goto label14;
label13:
v26 = new java.lang.NumberFormatException;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.");
specialinvoke v26.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v27);
throw v26;
label14:
v28 = v19 + 1;
v29 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(v28, v23);
goto label16;
label15:
v30 = v19 + 1;
v29 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v30);
label16:
v31 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.String getMantissa(java.lang.String,int)>(v0, v19);
goto label21;
label17:
v32 = (int) -1;
if v23 <= v32 goto label19;
if v23 <= v4 goto label18;
v33 = new java.lang.NumberFormatException;
v34 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.");
specialinvoke v33.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v34);
throw v33;
label18:
v31 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.String getMantissa(java.lang.String,int)>(v0, v23);
goto label20;
label19:
v31 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.String getMantissa(java.lang.String)>(v0);
label20:
v29 = null;
label21:
v35 = staticinvoke <java.lang.Character: boolean isDigit(char)>(v18);
if v35 != 0 goto label42;
if v18 == 46 goto label42;
v36 = (int) -1;
if v23 <= v36 goto label22;
v37 = v4 - 1;
if v23 >= v37 goto label22;
v38 = v23 + 1;
v39 = v4 - 1;
v40 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(v38, v39);
goto label23;
label22:
v40 = null;
label23:
v41 = v4 - 1;
v42 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v41);
v43 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isAllZeros(java.lang.String)>(v31);
if v43 == 0 goto label24;
v44 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isAllZeros(java.lang.String)>(v40);
if v44 == 0 goto label24;
v45 = 1;
goto label25;
label24:
v45 = 0;
label25:
v46 = v45;
lookupswitch(v18)
{
case 68: goto label35;
case 70: goto label32;
case 76: goto label26;
case 100: goto label35;
case 102: goto label32;
case 108: goto label26;
default: goto label41;
};
label26:
if v29 != null goto label31;
if v40 != null goto label31;
v47 = virtualinvoke v42.<java.lang.String: boolean isEmpty()>();
if v47 != 0 goto label27;
v48 = virtualinvoke v42.<java.lang.String: char charAt(int)>(0);
if v48 != 45 goto label27;
v49 = virtualinvoke v42.<java.lang.String: java.lang.String substring(int)>(1);
v50 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isDigits(java.lang.String)>(v49);
if v50 != 0 goto label28;
label27:
v51 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isDigits(java.lang.String)>(v42);
if v51 == 0 goto label31;
label28:
v52 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Long createLong(java.lang.String)>(v42);
label29:
return v52;
label30:
v53 := @caughtexception;
v54 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(v42);
return v54;
label31:
v55 = new java.lang.NumberFormatException;
v56 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.");
specialinvoke v55.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v56);
throw v55;
label32:
v57 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Float createFloat(java.lang.String)>(v0);
v58 = virtualinvoke v57.<java.lang.Float: boolean isInfinite()>();
if v58 != 0 goto label35;
v59 = virtualinvoke v57.<java.lang.Float: float floatValue()>();
v60 = v59 cmpl 0.0F;
if v60 != 0 goto label33;
if v45 == 0 goto label35;
label33:
return v57;
label34:
v61 := @caughtexception;
label35:
v62 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Double createDouble(java.lang.String)>(v0);
v63 = virtualinvoke v62.<java.lang.Double: boolean isInfinite()>();
if v63 != 0 goto label38;
v64 = virtualinvoke v62.<java.lang.Double: double doubleValue()>();
v65 = v64 cmpl 0.0;
if v65 != 0 goto label36;
if v46 == 0 goto label38;
label36:
return v62;
label37:
v66 := @caughtexception;
label38:
v67 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(v42);
label39:
return v67;
label40:
v68 := @caughtexception;
label41:
v69 = new java.lang.NumberFormatException;
v70 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.");
specialinvoke v69.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v70);
throw v69;
label42:
v71 = (int) -1;
if v23 <= v71 goto label43;
v72 = v4 - 1;
if v23 >= v72 goto label43;
v73 = v23 + 1;
v74 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v73);
goto label44;
label43:
v74 = null;
label44:
if v29 != null goto label51;
if v74 != null goto label51;
label45:
v75 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(v0);
label46:
return v75;
label47:
v76 := @caughtexception;
label48:
v77 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Long createLong(java.lang.String)>(v0);
label49:
return v77;
label50:
v78 := @caughtexception;
v79 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(v0);
return v79;
label51:
v80 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isAllZeros(java.lang.String)>(v31);
if v80 == 0 goto label52;
v81 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isAllZeros(java.lang.String)>(v74);
if v81 == 0 goto label52;
v82 = 1;
goto label53;
label52:
v82 = 0;
label53:
v83 = v82;
label54:
v84 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Float createFloat(java.lang.String)>(v0);
v85 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.Double createDouble(java.lang.String)>(v0);
v86 = virtualinvoke v84.<java.lang.Float: boolean isInfinite()>();
if v86 != 0 goto label57;
v87 = virtualinvoke v84.<java.lang.Float: float floatValue()>();
v88 = v87 cmpl 0.0F;
if v88 != 0 goto label55;
if v82 == 0 goto label57;
label55:
v89 = virtualinvoke v84.<java.lang.Float: java.lang.String toString()>();
v90 = virtualinvoke v85.<java.lang.Double: java.lang.String toString()>();
v91 = virtualinvoke v89.<java.lang.String: boolean equals(java.lang.Object)>(v90);
if v91 == 0 goto label57;
label56:
return v84;
label57:
v92 = virtualinvoke v85.<java.lang.Double: boolean isInfinite()>();
if v92 != 0 goto label62;
v93 = virtualinvoke v85.<java.lang.Double: double doubleValue()>();
v94 = v93 cmpl 0.0;
if v94 != 0 goto label58;
if v83 == 0 goto label62;
label58:
v95 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(v0);
v96 = virtualinvoke v85.<java.lang.Double: double doubleValue()>();
v97 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(v96);
v98 = virtualinvoke v95.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(v97);
if v98 != 0 goto label60;
label59:
return v85;
label60:
return v95;
label61:
v99 := @caughtexception;
label62:
v100 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(v0);
return v100;
catch java.lang.NumberFormatException from label28 to label29 with label30;
catch java.lang.NumberFormatException from label32 to label33 with label34;
catch java.lang.NumberFormatException from label35 to label36 with label37;
catch java.lang.NumberFormatException from label38 to label39 with label40;
catch java.lang.NumberFormatException from label45 to label46 with label47;
catch java.lang.NumberFormatException from label48 to label49 with label50;
catch java.lang.NumberFormatException from label54 to label56 with label61;
catch java.lang.NumberFormatException from label57 to label59 with label61;
}
private static java.lang.String getMantissa(java.lang.String)
{
int v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
v2 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: java.lang.String getMantissa(java.lang.String,int)>(v0, v1);
return v2;
}
private static java.lang.String getMantissa(java.lang.String, int)
{
int v1;
char v2;
java.lang.String v0, v4;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v2 == 45 goto label1;
if v2 != 43 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
if v3 == 0 goto label4;
v4 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(1, v1);
goto label5;
label4:
v4 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v1);
label5:
return v4;
}
private static boolean isAllZeros(java.lang.String)
{
int v1, v2;
char v3;
java.lang.String v0;
boolean v4, v5;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return 1;
label1:
v1 = virtualinvoke v0.<java.lang.String: int length()>();
v2 = v1 - 1;
label2:
if v2 < 0 goto label4;
v3 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v2);
if v3 == 48 goto label3;
return 0;
label3:
v2 = v2 - 1;
goto label2;
label4:
v4 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v4 != 0 goto label5;
v5 = 1;
goto label6;
label5:
v5 = 0;
label6:
return v5;
}
public static java.lang.Float createFloat(java.lang.String)
{
java.lang.Float v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(v0);
return v1;
}
public static java.lang.Double createDouble(java.lang.String)
{
java.lang.String v0;
java.lang.Double v1;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(v0);
return v1;
}
public static java.lang.Integer createInteger(java.lang.String)
{
java.lang.String v0;
java.lang.Integer v1;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(v0);
return v1;
}
public static java.lang.Long createLong(java.lang.String)
{
java.lang.String v0;
java.lang.Long v1;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(v0);
return v1;
}
public static java.math.BigInteger createBigInteger(java.lang.String)
{
byte v2;
int v1, v10, v9;
java.math.BigInteger v11, v13;
java.lang.String v0, v12;
boolean v3, v4, v5, v6, v7, v8;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = 0;
v2 = 10;
v3 = 0;
v4 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>("-");
if v4 == 0 goto label2;
v3 = 1;
v1 = 1;
label2:
v5 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", v1);
if v5 != 0 goto label3;
v6 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", v1);
if v6 == 0 goto label4;
label3:
v2 = 16;
v1 = v1 + 2;
goto label6;
label4:
v7 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", v1);
if v7 == 0 goto label5;
v2 = 16;
v1 = v1 + 1;
goto label6;
label5:
v8 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", v1);
if v8 == 0 goto label6;
v9 = virtualinvoke v0.<java.lang.String: int length()>();
v10 = v1 + 1;
if v9 <= v10 goto label6;
v2 = 8;
v1 = v1 + 1;
label6:
v11 = new java.math.BigInteger;
v12 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v1);
specialinvoke v11.<java.math.BigInteger: void <init>(java.lang.String,int)>(v12, v2);
if v3 == 0 goto label7;
v13 = virtualinvoke v11.<java.math.BigInteger: java.math.BigInteger negate()>();
goto label8;
label7:
v13 = v11;
label8:
return v13;
}
public static java.math.BigDecimal createBigDecimal(java.lang.String)
{
java.math.BigDecimal v3;
java.lang.NumberFormatException v2;
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(v0);
if v1 == 0 goto label2;
v2 = new java.lang.NumberFormatException;
specialinvoke v2.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number");
throw v2;
label2:
v3 = new java.math.BigDecimal;
specialinvoke v3.<java.math.BigDecimal: void <init>(java.lang.String)>(v0);
return v3;
}
public static transient long min(long[])
{
long[] v0;
byte v5;
int v2, v3;
long v1, v4;
v0 := @parameter0: long[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
v5 = v4 cmp v1;
if v5 >= 0 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient int min(int[])
{
int[] v0;
int v1, v2, v3, v4;
v0 := @parameter0: int[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 >= v1 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient short min(short[])
{
short v1, v4;
int v2, v3;
short[] v0;
v0 := @parameter0: short[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 >= v1 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient byte min(byte[])
{
byte[] v0;
byte v1, v4;
int v2, v3;
v0 := @parameter0: byte[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 >= v1 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient double min(double[])
{
double[] v0;
byte v7;
int v2, v3;
boolean v5;
double v1, v4, v6;
v0 := @parameter0: double[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label4;
v4 = v0[v2];
v5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v4);
if v5 == 0 goto label2;
return #NaN;
label2:
v6 = v0[v2];
v7 = v6 cmpg v1;
if v7 >= 0 goto label3;
v1 = v0[v2];
label3:
v2 = v2 + 1;
goto label1;
label4:
return v1;
}
public static transient float min(float[])
{
float[] v0;
byte v7;
int v2, v3;
float v1, v4, v6;
boolean v5;
v0 := @parameter0: float[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label4;
v4 = v0[v2];
v5 = staticinvoke <java.lang.Float: boolean isNaN(float)>(v4);
if v5 == 0 goto label2;
return #NaNF;
label2:
v6 = v0[v2];
v7 = v6 cmpg v1;
if v7 >= 0 goto label3;
v1 = v0[v2];
label3:
v2 = v2 + 1;
goto label1;
label4:
return v1;
}
public static transient long max(long[])
{
long[] v0;
byte v5;
int v2, v3;
long v1, v4;
v0 := @parameter0: long[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
v5 = v4 cmp v1;
if v5 <= 0 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient int max(int[])
{
int[] v0;
int v1, v2, v3, v4;
v0 := @parameter0: int[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 <= v1 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient short max(short[])
{
short v1, v4;
int v2, v3;
short[] v0;
v0 := @parameter0: short[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 <= v1 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient byte max(byte[])
{
byte[] v0;
byte v1, v4;
int v2, v3;
v0 := @parameter0: byte[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label3;
v4 = v0[v2];
if v4 <= v1 goto label2;
v1 = v0[v2];
label2:
v2 = v2 + 1;
goto label1;
label3:
return v1;
}
public static transient double max(double[])
{
double[] v0;
byte v7;
int v2, v3;
boolean v5;
double v1, v4, v6;
v0 := @parameter0: double[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label4;
v4 = v0[v2];
v5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v4);
if v5 == 0 goto label2;
return #NaN;
label2:
v6 = v0[v2];
v7 = v6 cmpl v1;
if v7 <= 0 goto label3;
v1 = v0[v2];
label3:
v2 = v2 + 1;
goto label1;
label4:
return v1;
}
public static transient float max(float[])
{
float[] v0;
byte v7;
int v2, v3;
float v1, v4, v6;
boolean v5;
v0 := @parameter0: float[];
staticinvoke <org.apache.commons.lang3.math.NumberUtils: void validateArray(java.lang.Object)>(v0);
v1 = v0[0];
v2 = 1;
label1:
v3 = lengthof v0;
if v2 >= v3 goto label4;
v4 = v0[v2];
v5 = staticinvoke <java.lang.Float: boolean isNaN(float)>(v4);
if v5 == 0 goto label2;
return #NaNF;
label2:
v6 = v0[v2];
v7 = v6 cmpl v1;
if v7 <= 0 goto label3;
v1 = v0[v2];
label3:
v2 = v2 + 1;
goto label1;
label4:
return v1;
}
private static void validateArray(java.lang.Object)
{
java.lang.Object[] v1, v4;
int v2;
java.lang.Object v0;
boolean v3;
v0 := @parameter0: java.lang.Object;
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "array", v1);
v2 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(v0);
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v3, "Array cannot be empty.", v4);
return;
}
public static long min(long, long, long)
{
byte v3, v4;
long v0, v1, v2;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: long;
v3 = v1 cmp v0;
if v3 >= 0 goto label1;
v0 = v1;
label1:
v4 = v2 cmp v0;
if v4 >= 0 goto label2;
v0 = v2;
label2:
return v0;
}
public static int min(int, int, int)
{
int v0, v1, v2;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 >= v0 goto label1;
v0 = v1;
label1:
if v2 >= v0 goto label2;
v0 = v2;
label2:
return v0;
}
public static short min(short, short, short)
{
short v0, v1, v2;
v0 := @parameter0: short;
v1 := @parameter1: short;
v2 := @parameter2: short;
if v1 >= v0 goto label1;
v0 = v1;
label1:
if v2 >= v0 goto label2;
v0 = v2;
label2:
return v0;
}
public static byte min(byte, byte, byte)
{
byte v0, v1, v2;
v0 := @parameter0: byte;
v1 := @parameter1: byte;
v2 := @parameter2: byte;
if v1 >= v0 goto label1;
v0 = v1;
label1:
if v2 >= v0 goto label2;
v0 = v2;
label2:
return v0;
}
public static double min(double, double, double)
{
double v0, v1, v2, v3, v4;
v0 := @parameter0: double;
v1 := @parameter1: double;
v2 := @parameter2: double;
v3 = staticinvoke <java.lang.Math: double min(double,double)>(v0, v1);
v4 = staticinvoke <java.lang.Math: double min(double,double)>(v3, v2);
return v4;
}
public static float min(float, float, float)
{
float v0, v1, v2, v3, v4;
v0 := @parameter0: float;
v1 := @parameter1: float;
v2 := @parameter2: float;
v3 = staticinvoke <java.lang.Math: float min(float,float)>(v0, v1);
v4 = staticinvoke <java.lang.Math: float min(float,float)>(v3, v2);
return v4;
}
public static long max(long, long, long)
{
byte v3, v4;
long v0, v1, v2;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: long;
v3 = v1 cmp v0;
if v3 <= 0 goto label1;
v0 = v1;
label1:
v4 = v2 cmp v0;
if v4 <= 0 goto label2;
v0 = v2;
label2:
return v0;
}
public static int max(int, int, int)
{
int v0, v1, v2;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
if v1 <= v0 goto label1;
v0 = v1;
label1:
if v2 <= v0 goto label2;
v0 = v2;
label2:
return v0;
}
public static short max(short, short, short)
{
short v0, v1, v2;
v0 := @parameter0: short;
v1 := @parameter1: short;
v2 := @parameter2: short;
if v1 <= v0 goto label1;
v0 = v1;
label1:
if v2 <= v0 goto label2;
v0 = v2;
label2:
return v0;
}
public static byte max(byte, byte, byte)
{
byte v0, v1, v2;
v0 := @parameter0: byte;
v1 := @parameter1: byte;
v2 := @parameter2: byte;
if v1 <= v0 goto label1;
v0 = v1;
label1:
if v2 <= v0 goto label2;
v0 = v2;
label2:
return v0;
}
public static double max(double, double, double)
{
double v0, v1, v2, v3, v4;
v0 := @parameter0: double;
v1 := @parameter1: double;
v2 := @parameter2: double;
v3 = staticinvoke <java.lang.Math: double max(double,double)>(v0, v1);
v4 = staticinvoke <java.lang.Math: double max(double,double)>(v3, v2);
return v4;
}
public static float max(float, float, float)
{
float v0, v1, v2, v3, v4;
v0 := @parameter0: float;
v1 := @parameter1: float;
v2 := @parameter2: float;
v3 = staticinvoke <java.lang.Math: float max(float,float)>(v0, v1);
v4 = staticinvoke <java.lang.Math: float max(float,float)>(v3, v2);
return v4;
}
public static boolean isDigits(java.lang.String)
{
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNumeric(java.lang.CharSequence)>(v0);
return v1;
}
public static boolean isNumber(java.lang.String)
{
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean isCreatable(java.lang.String)>(v0);
return v1;
}
public static boolean isCreatable(java.lang.String)
{
byte v10, v11;
boolean v1, v14, v29, v4, v5, v56, v57, v6, v7;
int v12, v15, v17, v19, v20, v27, v3, v30, v31, v34, v35, v36, v44;
java.lang.String v0;
char v13, v16, v18, v21, v22, v23, v24, v25, v26, v28, v32, v33, v37, v38, v39, v40, v41, v42, v43, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v8, v9;
char[] v2;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(v0);
if v1 == 0 goto label01;
return 0;
label01:
v2 = virtualinvoke v0.<java.lang.String: char[] toCharArray()>();
v3 = lengthof v2;
v4 = 0;
v5 = 0;
v6 = 0;
v7 = 0;
v8 = v2[0];
if v8 == 45 goto label02;
v9 = v2[0];
if v9 != 43 goto label03;
label02:
v10 = 1;
goto label04;
label03:
v10 = 0;
label04:
v11 = v10;
v12 = v10 + 1;
if v3 <= v12 goto label17;
v13 = v2[v10];
if v13 != 48 goto label17;
v14 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean contains(java.lang.CharSequence,int)>(v0, 46);
if v14 != 0 goto label17;
v15 = v10 + 1;
v16 = v2[v15];
if v16 == 120 goto label05;
v17 = v10 + 1;
v18 = v2[v17];
if v18 != 88 goto label12;
label05:
v19 = v11 + 2;
if v19 != v3 goto label06;
return 0;
label06:
v20 = lengthof v2;
if v19 >= v20 goto label11;
v21 = v2[v19];
if v21 < 48 goto label07;
v22 = v2[v19];
if v22 <= 57 goto label10;
label07:
v23 = v2[v19];
if v23 < 97 goto label08;
v24 = v2[v19];
if v24 <= 102 goto label10;
label08:
v25 = v2[v19];
if v25 < 65 goto label09;
v26 = v2[v19];
if v26 <= 70 goto label10;
label09:
return 0;
label10:
v19 = v19 + 1;
goto label06;
label11:
return 1;
label12:
v27 = v10 + 1;
v28 = v2[v27];
v29 = staticinvoke <java.lang.Character: boolean isDigit(char)>(v28);
if v29 == 0 goto label17;
v30 = v10 + 1;
label13:
v31 = lengthof v2;
if v30 >= v31 goto label16;
v32 = v2[v30];
if v32 < 48 goto label14;
v33 = v2[v30];
if v33 <= 55 goto label15;
label14:
return 0;
label15:
v30 = v30 + 1;
goto label13;
label16:
return 1;
label17:
v34 = v3 - 1;
v35 = v11;
label18:
if v35 < v34 goto label19;
v36 = v34 + 1;
if v35 >= v36 goto label32;
if v6 == 0 goto label32;
if v7 != 0 goto label32;
label19:
v37 = v2[v35];
if v37 < 48 goto label20;
v38 = v2[v35];
if v38 > 57 goto label20;
v7 = 1;
v6 = 0;
goto label31;
label20:
v39 = v2[v35];
if v39 != 46 goto label23;
if v5 != 0 goto label21;
if v4 == 0 goto label22;
label21:
return 0;
label22:
v5 = 1;
goto label31;
label23:
v40 = v2[v35];
if v40 == 101 goto label24;
v41 = v2[v35];
if v41 != 69 goto label27;
label24:
if v4 == 0 goto label25;
return 0;
label25:
if v7 != 0 goto label26;
return 0;
label26:
v4 = 1;
v6 = 1;
goto label31;
label27:
v42 = v2[v35];
if v42 == 43 goto label28;
v43 = v2[v35];
if v43 != 45 goto label30;
label28:
if v6 != 0 goto label29;
return 0;
label29:
v6 = 0;
v7 = 0;
goto label31;
label30:
return 0;
label31:
v35 = v35 + 1;
goto label18;
label32:
v44 = lengthof v2;
if v35 >= v44 goto label45;
v45 = v2[v35];
if v45 < 48 goto label33;
v46 = v2[v35];
if v46 > 57 goto label33;
return 1;
label33:
v47 = v2[v35];
if v47 == 101 goto label34;
v48 = v2[v35];
if v48 != 69 goto label35;
label34:
return 0;
label35:
v49 = v2[v35];
if v49 != 46 goto label38;
if v5 != 0 goto label36;
if v4 == 0 goto label37;
label36:
return 0;
label37:
return v7;
label38:
if v6 != 0 goto label40;
v50 = v2[v35];
if v50 == 100 goto label39;
v51 = v2[v35];
if v51 == 68 goto label39;
v52 = v2[v35];
if v52 == 102 goto label39;
v53 = v2[v35];
if v53 != 70 goto label40;
label39:
return v7;
label40:
v54 = v2[v35];
if v54 == 108 goto label41;
v55 = v2[v35];
if v55 != 76 goto label44;
label41:
if v7 == 0 goto label42;
if v4 != 0 goto label42;
if v5 != 0 goto label42;
v56 = 1;
goto label43;
label42:
v56 = 0;
label43:
return v56;
label44:
return 0;
label45:
if v6 != 0 goto label46;
if v7 == 0 goto label46;
v57 = 1;
goto label47;
label46:
v57 = 0;
label47:
return v57;
}
public static boolean isParsable(java.lang.String)
{
char v4, v5;
int v2, v3, v6;
java.lang.String v0;
boolean v1, v7, v8;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(v0);
if v1 == 0 goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<java.lang.String: int length()>();
v3 = v2 - 1;
v4 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v3);
if v4 != 46 goto label2;
return 0;
label2:
v5 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v5 != 45 goto label4;
v6 = virtualinvoke v0.<java.lang.String: int length()>();
if v6 != 1 goto label3;
return 0;
label3:
v7 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean withDecimalsParsing(java.lang.String,int)>(v0, 1);
return v7;
label4:
v8 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: boolean withDecimalsParsing(java.lang.String,int)>(v0, 0);
return v8;
}
private static boolean withDecimalsParsing(java.lang.String, int)
{
char v5, v8;
int v1, v2, v3, v4;
java.lang.String v0;
boolean v6, v7, v9;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 = 0;
v3 = v1;
label1:
v4 = virtualinvoke v0.<java.lang.String: int length()>();
if v3 >= v4 goto label7;
v5 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v3);
if v5 != 46 goto label2;
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
v7 = v6;
if v6 == 0 goto label4;
v2 = v2 + 1;
label4:
if v2 <= 1 goto label5;
return 0;
label5:
if v7 != 0 goto label6;
v8 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v3);
v9 = staticinvoke <java.lang.Character: boolean isDigit(char)>(v8);
if v9 != 0 goto label6;
return 0;
label6:
v3 = v3 + 1;
goto label1;
label7:
return 1;
}
public static int compare(int, int)
{
int v0, v1;
byte v2;
v0 := @parameter0: int;
v1 := @parameter1: int;
if v0 != v1 goto label1;
return 0;
label1:
if v0 >= v1 goto label2;
v2 = -1;
goto label3;
label2:
v2 = 1;
label3:
return v2;
}
public static int compare(long, long)
{
byte v2, v3, v4;
long v0, v1;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 = v0 cmp v1;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v0 cmp v1;
if v3 >= 0 goto label2;
v4 = -1;
goto label3;
label2:
v4 = 1;
label3:
return v4;
}
public static int compare(short, short)
{
short v0, v1;
byte v2;
v0 := @parameter0: short;
v1 := @parameter1: short;
if v0 != v1 goto label1;
return 0;
label1:
if v0 >= v1 goto label2;
v2 = -1;
goto label3;
label2:
v2 = 1;
label3:
return v2;
}
public static int compare(byte, byte)
{
int v2;
byte v0, v1;
v0 := @parameter0: byte;
v1 := @parameter1: byte;
v2 = v0 - v1;
return v2;
}
static void <clinit>()
{
java.lang.Float v18, v19, v20;
java.lang.Double v15, v16, v17;
java.lang.Integer v3, v4, v5, v7;
short v10;
java.lang.Long v0, v1, v2, v21, v22;
java.lang.Short v11, v8, v9;
int v6;
java.lang.Byte v12, v13, v14;
v0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Long LONG_ZERO> = v0;
v1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Long LONG_ONE> = v1;
v2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Long LONG_MINUS_ONE> = v2;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_ZERO> = v3;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_ONE> = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_TWO> = v5;
v6 = (int) -1;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Integer INTEGER_MINUS_ONE> = v7;
v8 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Short SHORT_ZERO> = v8;
v9 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(1);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Short SHORT_ONE> = v9;
v10 = (short) -1;
v11 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v10);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Short SHORT_MINUS_ONE> = v11;
v12 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Byte BYTE_ZERO> = v12;
v13 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(1);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Byte BYTE_ONE> = v13;
v14 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-1);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Byte BYTE_MINUS_ONE> = v14;
v15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Double DOUBLE_ZERO> = v15;
v16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Double DOUBLE_ONE> = v16;
v17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(-1.0);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Double DOUBLE_MINUS_ONE> = v17;
v18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Float FLOAT_ZERO> = v18;
v19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Float FLOAT_ONE> = v19;
v20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-1.0F);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Float FLOAT_MINUS_ONE> = v20;
v21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2147483647L);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Long LONG_INT_MAX_VALUE> = v21;
v22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-2147483648L);
<org.apache.commons.lang3.math.NumberUtils: java.lang.Long LONG_INT_MIN_VALUE> = v22;
return;
}
}