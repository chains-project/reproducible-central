public class org.apache.commons.lang3.reflect.ConstructorUtils extends java.lang.Object
{
public void <init>()
{
org.apache.commons.lang3.reflect.ConstructorUtils v0;
v0 := @this: org.apache.commons.lang3.reflect.ConstructorUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static transient java.lang.Object invokeConstructor(java.lang.Class, java.lang.Object[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
{
java.lang.Object[] v1, v2;
java.lang.Class[] v3;
java.lang.Class v0;
java.lang.Object v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Object[];
v2 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(v1);
v3 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.Class[] toClass(java.lang.Object[])>(v2);
v4 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])>(v0, v2, v3);
return v4;
}
public static java.lang.Object invokeConstructor(java.lang.Class, java.lang.Object[], java.lang.Class[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
{
java.lang.Object[] v1, v3;
java.lang.NoSuchMethodException v6;
java.lang.Class[] v10, v2, v4;
java.lang.reflect.Constructor v5;
java.lang.Class v0;
java.lang.Object v11;
java.lang.String v7, v8;
boolean v9;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Object[];
v2 := @parameter2: java.lang.Class[];
v3 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(v1);
v4 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(v2);
v5 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])>(v0, v4);
if v5 != null goto label1;
v6 = new java.lang.NoSuchMethodException;
v7 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No such accessible constructor on object: \u0001");
specialinvoke v6.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>(v8);
throw v6;
label1:
v9 = virtualinvoke v5.<java.lang.reflect.Constructor: boolean isVarArgs()>();
if v9 == 0 goto label2;
v10 = virtualinvoke v5.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();
v3 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] getVarArgs(java.lang.Object[],java.lang.Class[])>(v3, v10);
label2:
v11 = virtualinvoke v5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v3);
return v11;
}
public static transient java.lang.Object invokeExactConstructor(java.lang.Class, java.lang.Object[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
{
java.lang.Object[] v1, v2;
java.lang.Class[] v3;
java.lang.Class v0;
java.lang.Object v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Object[];
v2 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(v1);
v3 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.Class[] toClass(java.lang.Object[])>(v2);
v4 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])>(v0, v2, v3);
return v4;
}
public static java.lang.Object invokeExactConstructor(java.lang.Class, java.lang.Object[], java.lang.Class[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
{
java.lang.Object[] v1, v3;
java.lang.NoSuchMethodException v6;
java.lang.Class[] v2, v4;
java.lang.reflect.Constructor v5;
java.lang.Class v0;
java.lang.Object v9;
java.lang.String v7, v8;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Object[];
v2 := @parameter2: java.lang.Class[];
v3 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(v1);
v4 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(v2);
v5 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[])>(v0, v4);
if v5 != null goto label1;
v6 = new java.lang.NoSuchMethodException;
v7 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No such accessible constructor on object: \u0001");
specialinvoke v6.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>(v8);
throw v6;
label1:
v9 = virtualinvoke v5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v3);
return v9;
}
public static transient java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class, java.lang.Class[])
{
java.lang.Object[] v2;
java.lang.NoSuchMethodException v5;
java.lang.Class[] v1;
java.lang.Class v0;
java.lang.reflect.Constructor v3, v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class[];
v2 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "cls", v2);
label1:
v3 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v1);
v4 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return null;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
}
public static java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)
{
java.lang.Object[] v1;
java.lang.Class v3;
java.lang.reflect.Constructor v0, v5;
boolean v2, v4;
v0 := @parameter0: java.lang.reflect.Constructor;
v1 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "ctor", v1);
v2 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean isAccessible(java.lang.reflect.Member)>(v0);
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();
v4 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: boolean isAccessible(java.lang.Class)>(v3);
if v4 == 0 goto label1;
v5 = v0;
goto label2;
label1:
v5 = null;
label2:
return v5;
}
public static transient java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class, java.lang.Class[])
{
java.lang.Object[] v2;
java.lang.NoSuchMethodException v4;
java.lang.Class[] v1;
java.lang.reflect.Constructor v11, v3, v5, v9;
java.lang.reflect.Constructor[] v6;
int v12, v7, v8;
java.lang.Class v0;
boolean v10;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class[];
v2 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, "cls", v2);
label1:
v3 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v1);
staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean setAccessibleWorkaround(java.lang.reflect.AccessibleObject)>(v3);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = null;
v6 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();
v7 = lengthof v6;
v8 = 0;
label4:
if v8 >= v7 goto label7;
v9 = v6[v8];
v10 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean isMatchingConstructor(java.lang.reflect.Constructor,java.lang.Class[])>(v9, v1);
if v10 == 0 goto label6;
v11 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)>(v9);
if v11 == null goto label6;
staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: boolean setAccessibleWorkaround(java.lang.reflect.AccessibleObject)>(v11);
if v5 == null goto label5;
v12 = staticinvoke <org.apache.commons.lang3.reflect.MemberUtils: int compareConstructorFit(java.lang.reflect.Constructor,java.lang.reflect.Constructor,java.lang.Class[])>(v11, v5, v1);
if v12 >= 0 goto label6;
label5:
v5 = v11;
label6:
v8 = v8 + 1;
goto label4;
label7:
return v5;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
}
private static boolean isAccessible(java.lang.Class)
{
int v2;
java.lang.Class v0, v1;
boolean v3;
v0 := @parameter0: java.lang.Class;
v1 = v0;
label1:
if v1 == null goto label3;
v2 = virtualinvoke v1.<java.lang.Class: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v2);
if v3 != 0 goto label2;
return 0;
label2:
v1 = virtualinvoke v1.<java.lang.Class: java.lang.Class getEnclosingClass()>();
goto label1;
label3:
return 1;
}
}