public final class org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140 extends java.lang.Object implements java.util.function.Consumer
{
java.lang.Class[] cap0;
java.util.TreeMap cap1;
public static java.util.function.Consumer bootstrap$(java.lang.Class[], java.util.TreeMap)
{
java.lang.Class[] v0;
org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140 v2;
java.util.TreeMap v1;
v0 := @parameter0: java.lang.Class[];
v1 := @parameter1: java.util.TreeMap;
v2 = new org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140;
specialinvoke v2.<org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140: void <init>(java.lang.Class[],java.util.TreeMap)>(v0, v1);
return v2;
}
public void <init>(java.lang.Class[], java.util.TreeMap)
{
java.lang.Class[] v1;
org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140 v0;
java.util.TreeMap v2;
v0 := @this: org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140;
v1 := @parameter0: java.lang.Class[];
v2 := @parameter1: java.util.TreeMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140: java.lang.Class[] cap0> = v1;
v0.<org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140: java.util.TreeMap cap1> = v2;
return;
}
public void accept(java.lang.Object)
{
java.util.TreeMap v3;
java.lang.Class[] v2;
org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140 v0;
java.lang.Object v1;
v0 := @this: org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140: java.lang.Class[] cap0>;
v3 = v0.<org.apache.commons.lang3.reflect.MethodUtils$lambda_getMatchingMethod_4__140: java.util.TreeMap cap1>;
staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: void lambda$getMatchingMethod$4(java.lang.Class[],java.util.TreeMap,java.lang.reflect.Method)>(v2, v3, v1);
return;
}
}