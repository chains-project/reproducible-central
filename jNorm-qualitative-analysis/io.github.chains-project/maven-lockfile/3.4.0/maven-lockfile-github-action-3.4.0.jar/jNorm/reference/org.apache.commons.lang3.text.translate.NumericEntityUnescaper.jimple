public class org.apache.commons.lang3.text.translate.NumericEntityUnescaper extends org.apache.commons.lang3.text.translate.CharSequenceTranslator
{
private final java.util.EnumSet options;
public transient void <init>(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])
{
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] v1;
org.apache.commons.lang3.text.translate.NumericEntityUnescaper v0;
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION v5;
java.util.List v3, v6;
int v2;
java.util.EnumSet v4, v7;
v0 := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
v1 := @parameter0: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[];
specialinvoke v0.<org.apache.commons.lang3.text.translate.CharSequenceTranslator: void <init>()>();
v2 = lengthof v1;
if v2 <= 0 goto label1;
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v4 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>(v3);
v0.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options> = v4;
goto label2;
label1:
v5 = <org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired>;
v6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v5);
v7 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>(v6);
v0.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options> = v7;
label2:
return;
}
public boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)
{
org.apache.commons.lang3.text.translate.NumericEntityUnescaper v0;
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION v1;
java.util.EnumSet v2, v3;
boolean v4, v5;
v0 := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
v1 := @parameter0: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION;
v2 = v0.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options>;
if v2 == null goto label1;
v3 = v0.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options>;
v4 = virtualinvoke v3.<java.util.EnumSet: boolean contains(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int translate(java.lang.CharSequence, int, java.io.Writer) throws java.io.IOException
{
boolean v10, v20, v21, v23, v25, v39, v41;
java.lang.CharSequence v1, v27, v30;
java.io.Writer v3;
int v12, v2, v29, v33, v37, v38, v4, v40, v42, v6, v7, v9;
java.lang.String v28, v31;
char v11, v13, v14, v15, v16, v17, v18, v19, v35, v36, v5, v8;
java.lang.NumberFormatException v32;
java.lang.IllegalArgumentException v26;
org.apache.commons.lang3.text.translate.NumericEntityUnescaper v0;
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION v22, v24;
char[] v34;
v0 := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: java.io.Writer;
v4 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
v5 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v2);
if v5 != 38 goto label22;
v6 = v4 - 2;
if v2 >= v6 goto label22;
v7 = v2 + 1;
v8 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v7);
if v8 != 35 goto label22;
v9 = v2 + 2;
v10 = 0;
v11 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v9);
if v11 == 120 goto label01;
if v11 != 88 goto label02;
label01:
v9 = v9 + 1;
v10 = 1;
if v9 != v4 goto label02;
return 0;
label02:
v12 = v9;
label03:
if v12 >= v4 goto label07;
v13 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v13 < 48 goto label04;
v14 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v14 <= 57 goto label06;
label04:
v15 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v15 < 97 goto label05;
v16 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v16 <= 102 goto label06;
label05:
v17 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v17 < 65 goto label07;
v18 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v18 > 70 goto label07;
label06:
v12 = v12 + 1;
goto label03;
label07:
if v12 == v4 goto label08;
v19 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v12);
if v19 != 59 goto label08;
v20 = 1;
goto label09;
label08:
v20 = 0;
label09:
v21 = v20;
if v20 != 0 goto label11;
v22 = <org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired>;
v23 = virtualinvoke v0.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)>(v22);
if v23 == 0 goto label10;
return 0;
label10:
v24 = <org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon>;
v25 = virtualinvoke v0.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)>(v24);
if v25 == 0 goto label11;
v26 = new java.lang.IllegalArgumentException;
specialinvoke v26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Semi-colon required at end of numeric entity");
throw v26;
label11:
if v10 == 0 goto label12;
v27 = interfaceinvoke v1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v9, v12);
v28 = virtualinvoke v27.<java.lang.Object: java.lang.String toString()>();
v29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(v28, 16);
goto label15;
label12:
v30 = interfaceinvoke v1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v9, v12);
v31 = virtualinvoke v30.<java.lang.Object: java.lang.String toString()>();
v29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(v31, 10);
label13:
goto label15;
label14:
v32 := @caughtexception;
return 0;
label15:
v33 = (int) 65535;
if v29 <= v33 goto label16;
v34 = staticinvoke <java.lang.Character: char[] toChars(int)>(v29);
v35 = v34[0];
virtualinvoke v3.<java.io.Writer: void write(int)>(v35);
v36 = v34[1];
virtualinvoke v3.<java.io.Writer: void write(int)>(v36);
goto label17;
label16:
virtualinvoke v3.<java.io.Writer: void write(int)>(v29);
label17:
v37 = 2 + v12;
v38 = v37 - v9;
if v10 == 0 goto label18;
v39 = 1;
goto label19;
label18:
v39 = 0;
label19:
v40 = v38 + v39;
if v21 == 0 goto label20;
v41 = 1;
goto label21;
label20:
v41 = 0;
label21:
v42 = v40 + v41;
return v42;
label22:
return 0;
catch java.lang.NumberFormatException from label11 to label13 with label14;
}
}