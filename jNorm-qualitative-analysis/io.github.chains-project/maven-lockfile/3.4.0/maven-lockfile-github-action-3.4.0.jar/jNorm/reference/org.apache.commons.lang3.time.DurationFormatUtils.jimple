public class org.apache.commons.lang3.time.DurationFormatUtils extends java.lang.Object
{
public static final java.lang.String ISO_EXTENDED_FORMAT_PATTERN;
static final java.lang.String y;
static final java.lang.String M;
static final java.lang.String d;
static final java.lang.String H;
static final java.lang.String m;
static final java.lang.String s;
static final java.lang.String S;
public void <init>()
{
org.apache.commons.lang3.time.DurationFormatUtils v0;
v0 := @this: org.apache.commons.lang3.time.DurationFormatUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String formatDurationHMS(long)
{
long v0;
java.lang.String v1;
v0 := @parameter0: long;
v1 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String)>(v0, "HH:mm:ss.SSS");
return v1;
}
public static java.lang.String formatDurationISO(long)
{
long v0;
java.lang.String v1;
v0 := @parameter0: long;
v1 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String,boolean)>(v0, "\'P\'yyyy\'Y\'M\'M\'d\'DT\'H\'H\'m\'M\'s.SSS\'S\'", 0);
return v1;
}
public static java.lang.String formatDuration(long, java.lang.String)
{
long v0;
java.lang.String v1, v2;
v0 := @parameter0: long;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String,boolean)>(v0, v1, 1);
return v2;
}
public static java.lang.String formatDuration(long, java.lang.String, boolean)
{
long v0, v10, v12, v14, v16, v4, v5, v6, v7, v8;
java.lang.String v1, v17;
boolean v11, v13, v15, v2, v9;
org.apache.commons.lang3.time.DurationFormatUtils$Token[] v3;
v0 := @parameter0: long;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
staticinvoke <org.apache.commons.lang3.Validate: void inclusiveBetween(long,long,long,java.lang.String)>(0L, 9223372036854775807L, v0, "durationMillis must not be negative");
v3 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String)>(v1);
v4 = 0L;
v5 = 0L;
v6 = 0L;
v7 = 0L;
v8 = v0;
v9 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v3, "d");
if v9 == 0 goto label1;
v4 = v0 / 86400000L;
v10 = v4 * 86400000L;
v8 = v0 - v10;
label1:
v11 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v3, "H");
if v11 == 0 goto label2;
v5 = v8 / 3600000L;
v12 = v5 * 3600000L;
v8 = v8 - v12;
label2:
v13 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v3, "m");
if v13 == 0 goto label3;
v6 = v8 / 60000L;
v14 = v6 * 60000L;
v8 = v8 - v14;
label3:
v15 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v3, "s");
if v15 == 0 goto label4;
v7 = v8 / 1000L;
v16 = v7 * 1000L;
v8 = v8 - v16;
label4:
v17 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)>(v3, 0L, 0L, v4, v5, v6, v7, v8, v2);
return v17;
}
public static java.lang.String formatDurationWords(long, boolean, boolean)
{
long v0;
int v11, v12, v15, v16, v18, v19, v21, v22, v5, v6, v8, v9;
java.lang.String v10, v14, v17, v20, v23, v24, v25, v26, v27, v28, v3, v4, v7;
boolean v1, v13, v2;
v0 := @parameter0: long;
v1 := @parameter1: boolean;
v2 := @parameter2: boolean;
v3 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String)>(v0, "d\' days \'H\' hours \'m\' minutes \'s\' seconds\'");
if v1 == 0 goto label2;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" \u0001");
v4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v3, " 0 days", "");
v5 = virtualinvoke v4.<java.lang.String: int length()>();
v6 = virtualinvoke v3.<java.lang.String: int length()>();
if v5 == v6 goto label1;
v3 = v4;
v7 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v4, " 0 hours", "");
v8 = virtualinvoke v7.<java.lang.String: int length()>();
v9 = virtualinvoke v4.<java.lang.String: int length()>();
if v8 == v9 goto label1;
v10 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v7, " 0 minutes", "");
v3 = v10;
v11 = virtualinvoke v10.<java.lang.String: int length()>();
v12 = virtualinvoke v10.<java.lang.String: int length()>();
if v11 == v12 goto label1;
v3 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v10, " 0 seconds", "");
label1:
v13 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v13 != 0 goto label2;
v3 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int)>(1);
label2:
if v2 == 0 goto label3;
v14 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v3, " 0 seconds", "");
v15 = virtualinvoke v14.<java.lang.String: int length()>();
v16 = virtualinvoke v3.<java.lang.String: int length()>();
if v15 == v16 goto label3;
v3 = v14;
v17 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v14, " 0 minutes", "");
v18 = virtualinvoke v17.<java.lang.String: int length()>();
v19 = virtualinvoke v14.<java.lang.String: int length()>();
if v18 == v19 goto label3;
v3 = v17;
v20 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v17, " 0 hours", "");
v21 = virtualinvoke v20.<java.lang.String: int length()>();
v22 = virtualinvoke v17.<java.lang.String: int length()>();
if v21 == v22 goto label3;
v3 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v20, " 0 days", "");
label3:
v23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" \u0001");
v24 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v23, " 1 seconds", " 1 second");
v25 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v24, " 1 minutes", " 1 minute");
v26 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v25, " 1 hours", " 1 hour");
v27 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(v26, " 1 days", " 1 day");
v28 = virtualinvoke v27.<java.lang.String: java.lang.String trim()>();
return v28;
}
public static java.lang.String formatPeriodISO(long, long)
{
java.util.TimeZone v2;
long v0, v1;
java.lang.String v3;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
v3 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)>(v0, v1, "\'P\'yyyy\'Y\'M\'M\'d\'DT\'H\'H\'m\'M\'s.SSS\'S\'", 0, v2);
return v3;
}
public static java.lang.String formatPeriod(long, long, java.lang.String)
{
java.util.TimeZone v3;
long v0, v1;
java.lang.String v2, v4;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: java.lang.String;
v3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
v4 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)>(v0, v1, v2, 1, v3);
return v4;
}
public static java.lang.String formatPeriod(long, long, java.lang.String, boolean, java.util.TimeZone)
{
java.util.Date v10, v12;
byte v5;
boolean v3, v34, v36, v38, v45, v53, v55, v57, v59, v6;
java.util.TimeZone v4;
org.apache.commons.lang3.time.DurationFormatUtils$Token[] v8;
java.lang.Object[] v7;
long v0, v1;
java.util.Calendar v11, v9;
int v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v35, v37, v39, v40, v41, v42, v43, v44, v46, v47, v48, v49, v50, v51, v52, v54, v56, v58, v60;
java.lang.String v2, v61;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: boolean;
v4 := @parameter4: java.util.TimeZone;
v5 = v0 cmp v1;
if v5 > 0 goto label01;
v6 = 1;
goto label02;
label01:
v6 = 0;
label02:
v7 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v6, "startMillis must not be greater than endMillis", v7);
v8 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String)>(v2);
v9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(v4);
v10 = new java.util.Date;
specialinvoke v10.<java.util.Date: void <init>(long)>(v0);
virtualinvoke v9.<java.util.Calendar: void setTime(java.util.Date)>(v10);
v11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(v4);
v12 = new java.util.Date;
specialinvoke v12.<java.util.Date: void <init>(long)>(v1);
virtualinvoke v11.<java.util.Calendar: void setTime(java.util.Date)>(v12);
v13 = virtualinvoke v11.<java.util.Calendar: int get(int)>(14);
v14 = virtualinvoke v9.<java.util.Calendar: int get(int)>(14);
v15 = v13 - v14;
v16 = virtualinvoke v11.<java.util.Calendar: int get(int)>(13);
v17 = virtualinvoke v9.<java.util.Calendar: int get(int)>(13);
v18 = v16 - v17;
v19 = virtualinvoke v11.<java.util.Calendar: int get(int)>(12);
v20 = virtualinvoke v9.<java.util.Calendar: int get(int)>(12);
v21 = v19 - v20;
v22 = virtualinvoke v11.<java.util.Calendar: int get(int)>(11);
v23 = virtualinvoke v9.<java.util.Calendar: int get(int)>(11);
v24 = v22 - v23;
v25 = virtualinvoke v11.<java.util.Calendar: int get(int)>(5);
v26 = virtualinvoke v9.<java.util.Calendar: int get(int)>(5);
v27 = v25 - v26;
v28 = virtualinvoke v11.<java.util.Calendar: int get(int)>(2);
v29 = virtualinvoke v9.<java.util.Calendar: int get(int)>(2);
v30 = v28 - v29;
v31 = virtualinvoke v11.<java.util.Calendar: int get(int)>(1);
v32 = virtualinvoke v9.<java.util.Calendar: int get(int)>(1);
v33 = v31 - v32;
label03:
if v15 >= 0 goto label04;
v15 = v15 + 1000;
v18 = v18 - 1;
goto label03;
label04:
if v18 >= 0 goto label05;
v18 = v18 + 60;
v21 = v21 - 1;
goto label04;
label05:
if v21 >= 0 goto label06;
v21 = v21 + 60;
v24 = v24 - 1;
goto label05;
label06:
if v24 >= 0 goto label07;
v24 = v24 + 24;
v27 = v27 - 1;
goto label06;
label07:
v34 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "M");
if v34 == 0 goto label12;
label08:
if v27 >= 0 goto label09;
v35 = virtualinvoke v9.<java.util.Calendar: int getActualMaximum(int)>(5);
v27 = v27 + v35;
v30 = v30 - 1;
virtualinvoke v9.<java.util.Calendar: void add(int,int)>(2, 1);
goto label08;
label09:
if v30 >= 0 goto label10;
v30 = v30 + 12;
v33 = v33 - 1;
goto label09;
label10:
v36 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "y");
if v36 != 0 goto label19;
if v33 == 0 goto label19;
label11:
if v33 == 0 goto label19;
v37 = 12 * v33;
v30 = v30 + v37;
v33 = 0;
goto label11;
label12:
v38 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "y");
if v38 != 0 goto label16;
v39 = virtualinvoke v11.<java.util.Calendar: int get(int)>(1);
if v30 >= 0 goto label13;
v39 = v39 - 1;
label13:
v40 = virtualinvoke v9.<java.util.Calendar: int get(int)>(1);
if v40 == v39 goto label15;
v41 = virtualinvoke v9.<java.util.Calendar: int getActualMaximum(int)>(6);
v42 = virtualinvoke v9.<java.util.Calendar: int get(int)>(6);
v43 = v41 - v42;
v44 = v27 + v43;
v45 = v9 instanceof java.util.GregorianCalendar;
if v45 == 0 goto label14;
v46 = virtualinvoke v9.<java.util.Calendar: int get(int)>(2);
if v46 != 1 goto label14;
v47 = virtualinvoke v9.<java.util.Calendar: int get(int)>(5);
if v47 != 29 goto label14;
v44 = v44 + 1;
label14:
virtualinvoke v9.<java.util.Calendar: void add(int,int)>(1, 1);
v48 = virtualinvoke v9.<java.util.Calendar: int get(int)>(6);
v27 = v44 + v48;
goto label13;
label15:
v33 = 0;
label16:
v49 = virtualinvoke v9.<java.util.Calendar: int get(int)>(2);
v50 = virtualinvoke v11.<java.util.Calendar: int get(int)>(2);
if v49 == v50 goto label17;
v51 = virtualinvoke v9.<java.util.Calendar: int getActualMaximum(int)>(5);
v27 = v27 + v51;
virtualinvoke v9.<java.util.Calendar: void add(int,int)>(2, 1);
goto label16;
label17:
v30 = 0;
label18:
if v27 >= 0 goto label19;
v52 = virtualinvoke v9.<java.util.Calendar: int getActualMaximum(int)>(5);
v27 = v27 + v52;
v30 = v30 - 1;
virtualinvoke v9.<java.util.Calendar: void add(int,int)>(2, 1);
goto label18;
label19:
v53 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "d");
if v53 != 0 goto label20;
v54 = 24 * v27;
v24 = v24 + v54;
v27 = 0;
label20:
v55 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "H");
if v55 != 0 goto label21;
v56 = 60 * v24;
v21 = v21 + v56;
v24 = 0;
label21:
v57 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "m");
if v57 != 0 goto label22;
v58 = 60 * v21;
v18 = v18 + v58;
v21 = 0;
label22:
v59 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object)>(v8, "s");
if v59 != 0 goto label23;
v60 = 1000 * v18;
v15 = v15 + v60;
v18 = 0;
label23:
v61 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)>(v8, v33, v30, v27, v24, v21, v18, v15, v3);
return v61;
}
static java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[], long, long, long, long, long, long, long, boolean)
{
boolean v10, v16, v18, v20, v22, v24, v26, v28, v30, v8;
org.apache.commons.lang3.time.DurationFormatUtils$Token v13;
java.lang.StringBuilder v9;
org.apache.commons.lang3.time.DurationFormatUtils$Token[] v0;
long v1, v2, v3, v4, v5, v6, v7;
int v11, v12, v15, v31;
java.lang.String v17, v19, v21, v23, v25, v27, v29, v32, v33, v34;
java.lang.Object v14;
v0 := @parameter0: org.apache.commons.lang3.time.DurationFormatUtils$Token[];
v1 := @parameter1: long;
v2 := @parameter2: long;
v3 := @parameter3: long;
v4 := @parameter4: long;
v5 := @parameter5: long;
v6 := @parameter6: long;
v7 := @parameter7: long;
v8 := @parameter8: boolean;
v9 = new java.lang.StringBuilder;
specialinvoke v9.<java.lang.StringBuilder: void <init>()>();
v10 = 0;
v11 = lengthof v0;
v12 = 0;
label01:
if v12 >= v11 goto label14;
v13 = v0[v12];
v14 = virtualinvoke v13.<org.apache.commons.lang3.time.DurationFormatUtils$Token: java.lang.Object getValue()>();
v15 = virtualinvoke v13.<org.apache.commons.lang3.time.DurationFormatUtils$Token: int getCount()>();
v16 = v14 instanceof java.lang.StringBuilder;
if v16 == 0 goto label02;
v17 = virtualinvoke v14.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v17);
goto label13;
label02:
v18 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("y");
if v18 == 0 goto label03;
v19 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v1, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v19);
v10 = 0;
goto label13;
label03:
v20 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("M");
if v20 == 0 goto label04;
v21 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v2, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v21);
v10 = 0;
goto label13;
label04:
v22 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("d");
if v22 == 0 goto label05;
v23 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v3, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v23);
v10 = 0;
goto label13;
label05:
v24 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("H");
if v24 == 0 goto label06;
v25 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v4, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v25);
v10 = 0;
goto label13;
label06:
v26 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("m");
if v26 == 0 goto label07;
v27 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v5, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v27);
v10 = 0;
goto label13;
label07:
v28 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("s");
if v28 == 0 goto label08;
v29 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v6, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v29);
v10 = 1;
goto label13;
label08:
v30 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>("S");
if v30 == 0 goto label13;
if v10 == 0 goto label11;
if v8 == 0 goto label09;
v31 = staticinvoke <java.lang.Math: int max(int,int)>(3, v15);
goto label10;
label09:
v31 = 3;
label10:
v32 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v7, 1, v31);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v32);
goto label12;
label11:
v33 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String paddedValue(long,boolean,int)>(v7, v8, v15);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v33);
label12:
v10 = 0;
label13:
v12 = v12 + 1;
goto label01;
label14:
v34 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.String toString()>();
return v34;
}
private static java.lang.String paddedValue(long, boolean, int)
{
int v2;
long v0;
java.lang.String v3, v4;
boolean v1;
v0 := @parameter0: long;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(v0);
if v1 == 0 goto label1;
v4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>(v3, v2, 48);
goto label2;
label1:
v4 = v3;
label2:
return v4;
}
static org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String)
{
java.lang.Object[] v20;
java.util.ArrayList v1;
int v2, v6, v7;
java.lang.String v0, v18, v9;
boolean v15, v3;
char v8;
java.lang.IllegalArgumentException v17;
org.apache.commons.lang3.time.DurationFormatUtils$Token v11, v13, v16, v5;
java.lang.Object v14;
java.lang.StringBuilder v10, v12, v4;
org.apache.commons.lang3.time.DurationFormatUtils$Token[] v19;
v0 := @parameter0: java.lang.String;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
specialinvoke v1.<java.util.ArrayList: void <init>(int)>(v2);
v3 = 0;
v4 = null;
v5 = null;
v6 = 0;
label01:
v7 = virtualinvoke v0.<java.lang.String: int length()>();
if v6 >= v7 goto label18;
v8 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v6);
if v3 == 0 goto label02;
if v8 == 39 goto label02;
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
goto label17;
label02:
v9 = null;
lookupswitch(v8)
{
case 39: goto label03;
case 72: goto label08;
case 77: goto label06;
case 83: goto label11;
case 100: goto label07;
case 109: goto label09;
case 115: goto label10;
case 121: goto label05;
default: goto label12;
};
label03:
if v3 == 0 goto label04;
v4 = null;
v3 = 0;
goto label14;
label04:
v10 = new java.lang.StringBuilder;
specialinvoke v10.<java.lang.StringBuilder: void <init>()>();
v4 = v10;
v11 = new org.apache.commons.lang3.time.DurationFormatUtils$Token;
specialinvoke v11.<org.apache.commons.lang3.time.DurationFormatUtils$Token: void <init>(java.lang.Object)>(v10);
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v11);
v3 = 1;
goto label14;
label05:
v9 = "y";
goto label14;
label06:
v9 = "M";
goto label14;
label07:
v9 = "d";
goto label14;
label08:
v9 = "H";
goto label14;
label09:
v9 = "m";
goto label14;
label10:
v9 = "s";
goto label14;
label11:
v9 = "S";
goto label14;
label12:
if v4 != null goto label13;
v12 = new java.lang.StringBuilder;
specialinvoke v12.<java.lang.StringBuilder: void <init>()>();
v4 = v12;
v13 = new org.apache.commons.lang3.time.DurationFormatUtils$Token;
specialinvoke v13.<org.apache.commons.lang3.time.DurationFormatUtils$Token: void <init>(java.lang.Object)>(v12);
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v13);
label13:
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
label14:
if v9 == null goto label17;
if v5 == null goto label15;
v14 = virtualinvoke v5.<org.apache.commons.lang3.time.DurationFormatUtils$Token: java.lang.Object getValue()>();
v15 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>(v9);
if v15 == 0 goto label15;
virtualinvoke v5.<org.apache.commons.lang3.time.DurationFormatUtils$Token: void increment()>();
goto label16;
label15:
v16 = new org.apache.commons.lang3.time.DurationFormatUtils$Token;
specialinvoke v16.<org.apache.commons.lang3.time.DurationFormatUtils$Token: void <init>(java.lang.Object)>(v9);
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v16);
v5 = v16;
label16:
v4 = null;
label17:
v6 = v6 + 1;
goto label01;
label18:
if v3 == 0 goto label19;
v17 = new java.lang.IllegalArgumentException;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unmatched quote in format: \u0001");
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v18);
throw v17;
label19:
v19 = <org.apache.commons.lang3.time.DurationFormatUtils$Token: org.apache.commons.lang3.time.DurationFormatUtils$Token[] EMPTY_ARRAY>;
v20 = virtualinvoke v1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(v19);
return v20;
}
}