class org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule extends java.lang.Object implements org.apache.commons.lang3.time.FastDatePrinter$Rule
{
static final org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS;
static final org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_MINUTES;
static final org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_COLON_MINUTES;
final int length;
static org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule getRule(int)
{
org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule v1, v2, v3;
int v0;
java.lang.IllegalArgumentException v4;
v0 := @parameter0: int;
tableswitch(v0)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
v1 = <org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS>;
return v1;
label2:
v2 = <org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_MINUTES>;
return v2;
label3:
v3 = <org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_COLON_MINUTES>;
return v3;
label4:
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid number of X");
throw v4;
}
void <init>(int)
{
int v1;
org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: int length> = v1;
return;
}
public int estimateLength()
{
int v1;
org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule;
v1 = v0.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: int length>;
return v1;
}
public void appendTo(java.lang.Appendable, java.util.Calendar) throws java.io.IOException
{
java.lang.Appendable v1;
org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule v0;
java.util.Calendar v2;
int v10, v11, v12, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule;
v1 := @parameter0: java.lang.Appendable;
v2 := @parameter1: java.util.Calendar;
v3 = virtualinvoke v2.<java.util.Calendar: int get(int)>(15);
v4 = virtualinvoke v2.<java.util.Calendar: int get(int)>(16);
v5 = v3 + v4;
if v5 != 0 goto label1;
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("Z");
return;
label1:
if v5 >= 0 goto label2;
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(char)>(45);
v5 = neg v5;
goto label3;
label2:
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(char)>(43);
label3:
v6 = v5 / 3600000;
staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: void appendDigits(java.lang.Appendable,int)>(v1, v6);
v7 = v0.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: int length>;
if v7 >= 5 goto label4;
return;
label4:
v8 = v0.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: int length>;
if v8 != 6 goto label5;
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(char)>(58);
label5:
v9 = (int) 60000;
v10 = v5 / v9;
v11 = 60 * v6;
v12 = v10 - v11;
staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: void appendDigits(java.lang.Appendable,int)>(v1, v12);
return;
}
static void <clinit>()
{
org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule v0, v1, v2;
v0 = new org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule;
specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: void <init>(int)>(3);
<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS> = v0;
v1 = new org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule;
specialinvoke v1.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: void <init>(int)>(5);
<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_MINUTES> = v1;
v2 = new org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule;
specialinvoke v2.<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: void <init>(int)>(6);
<org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule: org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule ISO8601_HOURS_COLON_MINUTES> = v2;
return;
}
}