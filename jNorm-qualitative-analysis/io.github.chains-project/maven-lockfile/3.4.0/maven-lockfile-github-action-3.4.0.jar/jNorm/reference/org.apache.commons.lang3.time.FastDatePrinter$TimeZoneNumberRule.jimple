class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule extends java.lang.Object implements org.apache.commons.lang3.time.FastDatePrinter$Rule
{
static final org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_COLON;
static final org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_NO_COLON;
final boolean mColon;
void <init>(boolean)
{
boolean v1;
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule;
v1 := @parameter0: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: boolean mColon> = v1;
return;
}
public int estimateLength()
{
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule;
return 5;
}
public void appendTo(java.lang.Appendable, java.util.Calendar) throws java.io.IOException
{
java.lang.Appendable v1;
java.util.Calendar v2;
int v10, v11, v3, v4, v5, v6, v8, v9;
boolean v7;
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule;
v1 := @parameter0: java.lang.Appendable;
v2 := @parameter1: java.util.Calendar;
v3 = virtualinvoke v2.<java.util.Calendar: int get(int)>(15);
v4 = virtualinvoke v2.<java.util.Calendar: int get(int)>(16);
v5 = v3 + v4;
if v5 >= 0 goto label1;
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(char)>(45);
v5 = neg v5;
goto label2;
label1:
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(char)>(43);
label2:
v6 = v5 / 3600000;
staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: void appendDigits(java.lang.Appendable,int)>(v1, v6);
v7 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: boolean mColon>;
if v7 == 0 goto label3;
interfaceinvoke v1.<java.lang.Appendable: java.lang.Appendable append(char)>(58);
label3:
v8 = (int) 60000;
v9 = v5 / v8;
v10 = 60 * v6;
v11 = v9 - v10;
staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: void appendDigits(java.lang.Appendable,int)>(v1, v11);
return;
}
static void <clinit>()
{
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule v0, v1;
v0 = new org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule;
specialinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: void <init>(boolean)>(1);
<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_COLON> = v0;
v1 = new org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule;
specialinvoke v1.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: void <init>(boolean)>(0);
<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_NO_COLON> = v1;
return;
}
}