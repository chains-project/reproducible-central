class org.buildobjects.process.StreamCopyRunner extends java.lang.Object implements java.lang.Runnable
{
java.io.InputStream in;
java.io.OutputStream out;
private boolean closeStreamAfterConsumingInput;
private static final int DEFAULT_BUFFER_SIZE;
void <init>(java.io.InputStream, java.io.OutputStream, boolean)
{
java.io.OutputStream v2;
org.buildobjects.process.StreamCopyRunner v0;
boolean v3;
java.io.InputStream v1;
v0 := @this: org.buildobjects.process.StreamCopyRunner;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: java.io.OutputStream;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.buildobjects.process.StreamCopyRunner: java.io.InputStream in> = v1;
v0.<org.buildobjects.process.StreamCopyRunner: java.io.OutputStream out> = v2;
v0.<org.buildobjects.process.StreamCopyRunner: boolean closeStreamAfterConsumingInput> = v3;
return;
}
public void run()
{
java.io.OutputStream v2, v7, v9;
byte[] v3;
java.io.IOException v10;
org.buildobjects.process.StreamCopyRunner v0;
java.lang.RuntimeException v11;
int v5, v6;
boolean v8;
java.io.InputStream v1, v4;
v0 := @this: org.buildobjects.process.StreamCopyRunner;
v1 = v0.<org.buildobjects.process.StreamCopyRunner: java.io.InputStream in>;
if v1 == null goto label1;
v2 = v0.<org.buildobjects.process.StreamCopyRunner: java.io.OutputStream out>;
if v2 != null goto label2;
label1:
return;
label2:
v3 = newarray (byte)[4096];
label3:
v4 = v0.<org.buildobjects.process.StreamCopyRunner: java.io.InputStream in>;
v5 = virtualinvoke v4.<java.io.InputStream: int read(byte[])>(v3);
v6 = (int) -1;
if v6 == v5 goto label4;
v7 = v0.<org.buildobjects.process.StreamCopyRunner: java.io.OutputStream out>;
virtualinvoke v7.<java.io.OutputStream: void write(byte[],int,int)>(v3, 0, v5);
goto label3;
label4:
v8 = v0.<org.buildobjects.process.StreamCopyRunner: boolean closeStreamAfterConsumingInput>;
if v8 == 0 goto label7;
v9 = v0.<org.buildobjects.process.StreamCopyRunner: java.io.OutputStream out>;
virtualinvoke v9.<java.io.OutputStream: void close()>();
label5:
goto label7;
label6:
v10 := @caughtexception;
v11 = new java.lang.RuntimeException;
specialinvoke v11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("", v10);
throw v11;
label7:
return;
catch java.io.IOException from label3 to label5 with label6;
}
}