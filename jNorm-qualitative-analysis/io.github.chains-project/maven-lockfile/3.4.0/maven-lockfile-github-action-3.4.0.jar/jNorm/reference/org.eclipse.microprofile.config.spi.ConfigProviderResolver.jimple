public abstract class org.eclipse.microprofile.config.spi.ConfigProviderResolver extends java.lang.Object
{
private static volatile org.eclipse.microprofile.config.spi.ConfigProviderResolver instance;
protected void <init>()
{
org.eclipse.microprofile.config.spi.ConfigProviderResolver v0;
v0 := @this: org.eclipse.microprofile.config.spi.ConfigProviderResolver;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract org.eclipse.microprofile.config.Config getConfig();
public abstract org.eclipse.microprofile.config.Config getConfig(java.lang.ClassLoader);
public abstract org.eclipse.microprofile.config.spi.ConfigBuilder getBuilder();
public abstract void registerConfig(org.eclipse.microprofile.config.Config, java.lang.ClassLoader);
public abstract void releaseConfig(org.eclipse.microprofile.config.Config);
public static org.eclipse.microprofile.config.spi.ConfigProviderResolver instance()
{
java.lang.Throwable v6;
org.eclipse.microprofile.config.spi.ConfigProviderResolver v0, v1, v2, v5, v7;
java.lang.Class v3;
java.lang.ClassLoader v4;
v0 = <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance>;
if v0 != null goto label6;
entermonitor class "Lorg/eclipse/microprofile/config/spi/ConfigProviderResolver;";
label1:
v1 = <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance>;
if v1 == null goto label3;
v2 = <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance>;
exitmonitor class "Lorg/eclipse/microprofile/config/spi/ConfigProviderResolver;";
label2:
return v2;
label3:
v3 = class "Lorg/eclipse/microprofile/config/spi/ConfigProviderResolver;";
v4 = virtualinvoke v3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v5 = staticinvoke <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver loadSpi(java.lang.ClassLoader)>(v4);
<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance> = v5;
exitmonitor class "Lorg/eclipse/microprofile/config/spi/ConfigProviderResolver;";
label4:
goto label6;
label5:
v6 := @caughtexception;
exitmonitor class "Lorg/eclipse/microprofile/config/spi/ConfigProviderResolver;";
throw v6;
label6:
v7 = <org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance>;
return v7;
catch java.lang.Throwable from label1 to label2 with label5;
catch java.lang.Throwable from label3 to label4 with label5;
}
private static org.eclipse.microprofile.config.spi.ConfigProviderResolver loadSpi(java.lang.ClassLoader)
{
java.lang.IllegalStateException v5;
java.util.Iterator v2;
java.lang.Object v4;
java.util.ServiceLoader v1;
java.lang.ClassLoader v0;
boolean v3;
v0 := @parameter0: java.lang.ClassLoader;
v1 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lorg/eclipse/microprofile/config/spi/ConfigProviderResolver;", v0);
v2 = virtualinvoke v1.<java.util.ServiceLoader: java.util.Iterator iterator()>();
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
return v4;
label1:
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No ConfigProviderResolver implementation found!");
throw v5;
}
public static void setInstance(org.eclipse.microprofile.config.spi.ConfigProviderResolver)
{
org.eclipse.microprofile.config.spi.ConfigProviderResolver v0;
v0 := @parameter0: org.eclipse.microprofile.config.spi.ConfigProviderResolver;
<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance> = v0;
return;
}
static void <clinit>()
{
<org.eclipse.microprofile.config.spi.ConfigProviderResolver: org.eclipse.microprofile.config.spi.ConfigProviderResolver instance> = null;
return;
}
}