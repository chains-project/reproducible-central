class org.eclipse.parsson.JsonArrayBuilderImpl extends java.lang.Object implements jakarta.json.JsonArrayBuilder
{
private java.util.ArrayList valueList;
private final org.eclipse.parsson.api.BufferPool bufferPool;
void <init>(org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v1;
return;
}
void <init>(jakarta.json.JsonArray, org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v2;
jakarta.json.JsonArray v1;
java.util.ArrayList v3, v4;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: jakarta.json.JsonArray;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v2;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList> = v3;
v4 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
virtualinvoke v4.<java.util.ArrayList: boolean addAll(java.util.Collection)>(v1);
return;
}
void <init>(java.util.Collection, org.eclipse.parsson.api.BufferPool)
{
java.util.Collection v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v2;
java.util.ArrayList v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: java.util.Collection;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v2;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList> = v3;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void populate(java.util.Collection)>(v1);
return;
}
public jakarta.json.JsonArrayBuilder add(jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: jakarta.json.JsonValue;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v1);
return v0;
}
public jakarta.json.JsonArrayBuilder add(java.lang.String)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.JsonStringImpl v2;
java.lang.String v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v1);
v2 = new org.eclipse.parsson.JsonStringImpl;
specialinvoke v2.<org.eclipse.parsson.JsonStringImpl: void <init>(java.lang.CharSequence)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(java.math.BigDecimal)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.math.BigDecimal v1;
jakarta.json.JsonNumber v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: java.math.BigDecimal;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v1);
v2 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(java.math.BigInteger)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v2;
java.math.BigInteger v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: java.math.BigInteger;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v1);
v2 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(int)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(long)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v2;
long v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: long;
v2 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(long)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(double)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v2;
double v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: double;
v2 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(double)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(boolean)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v2;
boolean v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
goto label2;
label1:
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
label2:
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v2);
return v0;
}
public jakarta.json.JsonArrayBuilder addNull()
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v1;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v1);
return v0;
}
public jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObjectBuilder v1;
jakarta.json.JsonObject v4;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v3;
java.lang.NullPointerException v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: jakarta.json.JsonObjectBuilder;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = interfaceinvoke v1.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v4);
return v0;
}
public jakarta.json.JsonArrayBuilder add(jakarta.json.JsonArrayBuilder)
{
jakarta.json.JsonArrayBuilder v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v3;
jakarta.json.JsonArray v4;
java.lang.NullPointerException v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: jakarta.json.JsonArrayBuilder;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_ARRAY_BUILDER_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = interfaceinvoke v1.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(jakarta.json.JsonValue)>(v4);
return v0;
}
public jakarta.json.JsonArrayBuilder addAll(jakarta.json.JsonArrayBuilder)
{
jakarta.json.JsonArrayBuilder v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.NullPointerException v2;
java.util.ArrayList v4, v5, v6;
java.lang.String v3;
jakarta.json.JsonArray v7;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: jakarta.json.JsonArrayBuilder;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_ARRAY_BUILDER_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
if v4 != null goto label2;
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList> = v5;
label2:
v6 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
v7 = interfaceinvoke v1.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
virtualinvoke v6.<java.util.ArrayList: boolean addAll(java.util.Collection)>(v7);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, jakarta.json.JsonValue)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonValue;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, java.lang.String)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.JsonStringImpl v3;
java.lang.String v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = new org.eclipse.parsson.JsonStringImpl;
specialinvoke v3.<org.eclipse.parsson.JsonStringImpl: void <init>(java.lang.CharSequence)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, java.math.BigDecimal)
{
java.math.BigDecimal v2;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigDecimal;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, java.math.BigInteger)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
java.math.BigInteger v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigInteger;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, int)
{
int v1, v2;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(int)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, long)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
long v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(long)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, double)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
double v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: double;
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(double)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, boolean)
{
jakarta.json.JsonValue v3;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
goto label2;
label1:
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
label2:
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder addNull(int)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v2);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObjectBuilder v2;
int v1;
jakarta.json.JsonObject v5;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v4;
java.lang.NullPointerException v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonObjectBuilder;
if v2 != null goto label1;
v3 = new java.lang.NullPointerException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = interfaceinvoke v2.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v5);
return v0;
}
public jakarta.json.JsonArrayBuilder add(int, jakarta.json.JsonArrayBuilder)
{
int v1;
jakarta.json.JsonArrayBuilder v2;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v4;
jakarta.json.JsonArray v5;
java.lang.NullPointerException v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonArrayBuilder;
if v2 != null goto label1;
v3 = new java.lang.NullPointerException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = interfaceinvoke v2.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void addValueList(int,jakarta.json.JsonValue)>(v1, v5);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, jakarta.json.JsonValue)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonValue;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v2);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, java.lang.String)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.JsonStringImpl v3;
java.lang.String v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = new org.eclipse.parsson.JsonStringImpl;
specialinvoke v3.<org.eclipse.parsson.JsonStringImpl: void <init>(java.lang.CharSequence)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, java.math.BigDecimal)
{
java.math.BigDecimal v2;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigDecimal;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, java.math.BigInteger)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
java.math.BigInteger v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.math.BigInteger;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, int)
{
int v1, v2;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(int)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, long)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
long v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(long)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, double)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonNumber v3;
double v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: double;
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(double)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, boolean)
{
jakarta.json.JsonValue v3;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
goto label2;
label1:
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
label2:
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonArrayBuilder setNull(int)
{
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
jakarta.json.JsonValue v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v2);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObjectBuilder v2;
int v1;
jakarta.json.JsonObject v5;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v4;
java.lang.NullPointerException v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonObjectBuilder;
if v2 != null goto label1;
v3 = new java.lang.NullPointerException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = interfaceinvoke v2.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v5);
return v0;
}
public jakarta.json.JsonArrayBuilder set(int, jakarta.json.JsonArrayBuilder)
{
int v1;
jakarta.json.JsonArrayBuilder v2;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v4;
jakarta.json.JsonArray v5;
java.lang.NullPointerException v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonArrayBuilder;
if v2 != null goto label1;
v3 = new java.lang.NullPointerException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = interfaceinvoke v2.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
specialinvoke v0.<org.eclipse.parsson.JsonArrayBuilderImpl: void setValueList(int,jakarta.json.JsonValue)>(v1, v5);
return v0;
}
public jakarta.json.JsonArrayBuilder remove(int)
{
java.lang.IndexOutOfBoundsException v3;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v4;
java.util.ArrayList v2, v5;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
if v2 != null goto label1;
v3 = new java.lang.IndexOutOfBoundsException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_VALUELIST_NULL(int,int)>(v1, 0);
specialinvoke v3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
virtualinvoke v5.<java.util.ArrayList: java.lang.Object remove(int)>(v1);
return v0;
}
public jakarta.json.JsonArray build()
{
java.util.List v2;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v5;
org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl v4;
java.util.ArrayList v1, v3;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
goto label2;
label1:
v3 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v3);
label2:
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList> = null;
v4 = new org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl;
v5 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v4.<org.eclipse.parsson.JsonArrayBuilderImpl$JsonArrayImpl: void <init>(java.util.List,org.eclipse.parsson.api.BufferPool)>(v2, v5);
return v4;
}
private void populate(java.util.Collection)
{
java.util.Iterator v2;
jakarta.json.JsonValue v9;
java.util.Collection v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.util.ArrayList v7;
java.util.function.Consumer v6;
java.lang.Object v4;
org.eclipse.parsson.api.BufferPool v8;
boolean v3, v5;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label3;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
if v4 == null goto label2;
v5 = v4 instanceof java.util.Optional;
if v5 == 0 goto label2;
v6 = staticinvoke <org.eclipse.parsson.JsonArrayBuilderImpl$lambda_populate_0__593: java.util.function.Consumer bootstrap$(org.eclipse.parsson.JsonArrayBuilderImpl)>(v0);
virtualinvoke v4.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v6);
goto label1;
label2:
v7 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
v8 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v9 = staticinvoke <org.eclipse.parsson.MapUtil: jakarta.json.JsonValue handle(java.lang.Object,org.eclipse.parsson.api.BufferPool)>(v4, v8);
virtualinvoke v7.<java.util.ArrayList: boolean add(java.lang.Object)>(v9);
goto label1;
label3:
return;
}
private void addValueList(jakarta.json.JsonValue)
{
jakarta.json.JsonValue v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.util.ArrayList v2, v3, v4;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: jakarta.json.JsonValue;
v2 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList> = v3;
label1:
v4 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
virtualinvoke v4.<java.util.ArrayList: boolean add(java.lang.Object)>(v1);
return;
}
private void addValueList(int, jakarta.json.JsonValue)
{
jakarta.json.JsonValue v2;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.util.ArrayList v3, v4, v5;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
if v3 != null goto label1;
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList> = v4;
label1:
v5 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
virtualinvoke v5.<java.util.ArrayList: void add(int,java.lang.Object)>(v1, v2);
return;
}
private void setValueList(int, jakarta.json.JsonValue)
{
java.lang.IndexOutOfBoundsException v4;
jakarta.json.JsonValue v2;
int v1;
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.String v5;
java.util.ArrayList v3, v6;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: int;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
if v3 != null goto label1;
v4 = new java.lang.IndexOutOfBoundsException;
v5 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_VALUELIST_NULL(int,int)>(v1, 0);
specialinvoke v4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v0.<org.eclipse.parsson.JsonArrayBuilderImpl: java.util.ArrayList valueList>;
virtualinvoke v6.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(v1, v2);
return;
}
private void validateValue(java.lang.Object)
{
org.eclipse.parsson.JsonArrayBuilderImpl v0;
java.lang.Object v1;
java.lang.String v3;
java.lang.NullPointerException v2;
v0 := @this: org.eclipse.parsson.JsonArrayBuilderImpl;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String ARRBUILDER_VALUE_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
return;
}
}