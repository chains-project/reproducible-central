class org.eclipse.parsson.JsonBuilderFactoryImpl extends java.lang.Object implements jakarta.json.JsonBuilderFactory
{
private final java.util.Map config;
private final org.eclipse.parsson.api.BufferPool bufferPool;
private final boolean rejectDuplicateKeys;
void <init>(org.eclipse.parsson.api.BufferPool, boolean)
{
java.util.Map v3;
org.eclipse.parsson.api.BufferPool v1;
boolean v2;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 := @parameter0: org.eclipse.parsson.api.BufferPool;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: java.util.Map config> = v3;
v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v1;
v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: boolean rejectDuplicateKeys> = v2;
return;
}
public jakarta.json.JsonObjectBuilder createObjectBuilder()
{
org.eclipse.parsson.JsonObjectBuilderImpl v1;
java.util.Map v4;
org.eclipse.parsson.api.BufferPool v2;
boolean v3;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v2 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v3 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: boolean rejectDuplicateKeys>;
v4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v1.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v2, v3, v4);
return v1;
}
public jakarta.json.JsonObjectBuilder createObjectBuilder(jakarta.json.JsonObject)
{
org.eclipse.parsson.JsonObjectBuilderImpl v2;
java.util.Map v5;
jakarta.json.JsonObject v1;
org.eclipse.parsson.api.BufferPool v3;
boolean v4;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v3 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v4 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: boolean rejectDuplicateKeys>;
v5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v2.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(jakarta.json.JsonObject,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v3, v4, v5);
return v2;
}
public jakarta.json.JsonObjectBuilder createObjectBuilder(java.util.Map)
{
org.eclipse.parsson.JsonObjectBuilderImpl v2;
java.util.Map v1, v5;
org.eclipse.parsson.api.BufferPool v3;
boolean v4;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 := @parameter0: java.util.Map;
v2 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v3 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v4 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: boolean rejectDuplicateKeys>;
v5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v2.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(java.util.Map,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v3, v4, v5);
return v2;
}
public jakarta.json.JsonArrayBuilder createArrayBuilder()
{
org.eclipse.parsson.JsonArrayBuilderImpl v1;
org.eclipse.parsson.api.BufferPool v2;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 = new org.eclipse.parsson.JsonArrayBuilderImpl;
v2 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v1.<org.eclipse.parsson.JsonArrayBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v2);
return v1;
}
public jakarta.json.JsonArrayBuilder createArrayBuilder(jakarta.json.JsonArray)
{
org.eclipse.parsson.JsonArrayBuilderImpl v2;
org.eclipse.parsson.api.BufferPool v3;
jakarta.json.JsonArray v1;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 := @parameter0: jakarta.json.JsonArray;
v2 = new org.eclipse.parsson.JsonArrayBuilderImpl;
v3 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v2.<org.eclipse.parsson.JsonArrayBuilderImpl: void <init>(jakarta.json.JsonArray,org.eclipse.parsson.api.BufferPool)>(v1, v3);
return v2;
}
public jakarta.json.JsonArrayBuilder createArrayBuilder(java.util.Collection)
{
java.util.Collection v1;
org.eclipse.parsson.JsonArrayBuilderImpl v2;
org.eclipse.parsson.api.BufferPool v3;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 := @parameter0: java.util.Collection;
v2 = new org.eclipse.parsson.JsonArrayBuilderImpl;
v3 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v2.<org.eclipse.parsson.JsonArrayBuilderImpl: void <init>(java.util.Collection,org.eclipse.parsson.api.BufferPool)>(v1, v3);
return v2;
}
public java.util.Map getConfigInUse()
{
java.util.Map v1;
org.eclipse.parsson.JsonBuilderFactoryImpl v0;
v0 := @this: org.eclipse.parsson.JsonBuilderFactoryImpl;
v1 = v0.<org.eclipse.parsson.JsonBuilderFactoryImpl: java.util.Map config>;
return v1;
}
}