class org.eclipse.parsson.JsonParserImpl$3 extends java.util.Spliterators$AbstractSpliterator
{
final org.eclipse.parsson.JsonParserImpl this$0;
void <init>(org.eclipse.parsson.JsonParserImpl, long, int)
{
int v3;
org.eclipse.parsson.JsonParserImpl v1;
long v2;
org.eclipse.parsson.JsonParserImpl$3 v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$3;
v1 := @parameter0: org.eclipse.parsson.JsonParserImpl;
v2 := @parameter1: long;
v3 := @parameter2: int;
v0.<org.eclipse.parsson.JsonParserImpl$3: org.eclipse.parsson.JsonParserImpl this$0> = v1;
specialinvoke v0.<java.util.Spliterators$AbstractSpliterator: void <init>(long,int)>(v2, v3);
return;
}
public java.util.Spliterator trySplit()
{
org.eclipse.parsson.JsonParserImpl$3 v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$3;
return null;
}
public boolean tryAdvance(java.util.function.Consumer)
{
jakarta.json.JsonValue v7;
org.eclipse.parsson.JsonParserImpl v3, v5, v6;
java.lang.NullPointerException v2;
java.util.function.Consumer v1;
org.eclipse.parsson.JsonParserImpl$3 v0;
boolean v4;
v0 := @this: org.eclipse.parsson.JsonParserImpl$3;
v1 := @parameter0: java.util.function.Consumer;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.eclipse.parsson.JsonParserImpl$3: org.eclipse.parsson.JsonParserImpl this$0>;
v4 = virtualinvoke v3.<org.eclipse.parsson.JsonParserImpl: boolean hasNext()>();
if v4 != 0 goto label2;
return 0;
label2:
v5 = v0.<org.eclipse.parsson.JsonParserImpl$3: org.eclipse.parsson.JsonParserImpl this$0>;
virtualinvoke v5.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParser$Event next()>();
v6 = v0.<org.eclipse.parsson.JsonParserImpl$3: org.eclipse.parsson.JsonParserImpl this$0>;
v7 = virtualinvoke v6.<org.eclipse.parsson.JsonParserImpl: jakarta.json.JsonValue getValue()>();
interfaceinvoke v1.<java.util.function.Consumer: void accept(java.lang.Object)>(v7);
return 1;
}
}