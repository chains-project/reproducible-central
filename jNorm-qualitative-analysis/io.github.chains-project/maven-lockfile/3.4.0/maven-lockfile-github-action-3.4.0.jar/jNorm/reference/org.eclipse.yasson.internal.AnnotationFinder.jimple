class org.eclipse.yasson.internal.AnnotationFinder extends java.lang.Object
{
private static final java.lang.String CONSTRUCTOR_PROPERTIES_ANNOTATION;
private static final java.util.logging.Logger LOGGER;
private final java.lang.String annotationClassName;
private final java.lang.Class annotationClass;
public static org.eclipse.yasson.internal.AnnotationFinder findAnnotation(java.lang.Class)
{
java.lang.Class v0;
java.lang.String v1;
org.eclipse.yasson.internal.AnnotationFinder v2;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <org.eclipse.yasson.internal.AnnotationFinder: org.eclipse.yasson.internal.AnnotationFinder findAnnotationByName(java.lang.String)>(v1);
return v2;
}
public static org.eclipse.yasson.internal.AnnotationFinder findAnnotationByName(java.lang.String)
{
java.lang.Class v2;
java.lang.String v0;
org.eclipse.yasson.internal.AnnotationFinder v1;
v0 := @parameter0: java.lang.String;
v1 = new org.eclipse.yasson.internal.AnnotationFinder;
v2 = staticinvoke <org.eclipse.yasson.internal.AnnotationFinder: java.lang.Class getOptionalAnnotationClass(java.lang.String)>(v0);
specialinvoke v1.<org.eclipse.yasson.internal.AnnotationFinder: void <init>(java.lang.String,java.lang.Class)>(v0, v2);
return v1;
}
public static org.eclipse.yasson.internal.AnnotationFinder findConstructorProperties()
{
org.eclipse.yasson.internal.AnnotationFinder v0;
v0 = staticinvoke <org.eclipse.yasson.internal.AnnotationFinder: org.eclipse.yasson.internal.AnnotationFinder findAnnotationByName(java.lang.String)>("java.beans.ConstructorProperties");
return v0;
}
private void <init>(java.lang.String, java.lang.Class)
{
java.lang.Class v2;
java.lang.String v1;
org.eclipse.yasson.internal.AnnotationFinder v0;
v0 := @this: org.eclipse.yasson.internal.AnnotationFinder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.String annotationClassName> = v1;
v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.Class annotationClass> = v2;
return;
}
public java.lang.'annotation'.Annotation in(java.lang.'annotation'.Annotation[])
{
java.util.HashSet v4;
java.lang.'annotation'.Annotation v5;
java.lang.Class v2, v3;
java.lang.'annotation'.Annotation[] v1;
org.eclipse.yasson.internal.AnnotationFinder v0;
v0 := @this: org.eclipse.yasson.internal.AnnotationFinder;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.Class annotationClass>;
if v2 != null goto label1;
return null;
label1:
v3 = v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.Class annotationClass>;
v4 = new java.util.HashSet;
specialinvoke v4.<java.util.HashSet: void <init>()>();
v5 = staticinvoke <org.eclipse.yasson.internal.AnnotationFinder: java.lang.'annotation'.Annotation findAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class,java.util.Set)>(v1, v3, v4);
return v5;
}
public java.lang.Object valueIn(java.lang.'annotation'.Annotation[])
{
java.lang.'annotation'.Annotation v2;
java.lang.Object v3;
java.lang.'annotation'.Annotation[] v1;
org.eclipse.yasson.internal.AnnotationFinder v0;
v0 := @this: org.eclipse.yasson.internal.AnnotationFinder;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = virtualinvoke v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.'annotation'.Annotation in(java.lang.'annotation'.Annotation[])>(v1);
v3 = specialinvoke v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.Object invocateValueMethod(java.lang.'annotation'.Annotation)>(v2);
return v3;
}
private java.lang.Object invocateValueMethod(java.lang.'annotation'.Annotation)
{
java.lang.Object[] v5, v9;
java.lang.Class[] v3;
org.eclipse.yasson.internal.properties.MessageKeys v8;
java.util.logging.Logger v13;
org.eclipse.yasson.internal.AnnotationFinder v0;
java.lang.Exception v7;
java.lang.'annotation'.Annotation v1;
java.lang.Class v10, v2;
java.lang.Object v6;
java.lang.String v11, v12;
java.lang.reflect.Method v4;
v0 := @this: org.eclipse.yasson.internal.AnnotationFinder;
v1 := @parameter0: java.lang.'annotation'.Annotation;
if v1 != null goto label1;
return null;
label1:
v2 = interfaceinvoke v1.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v3 = newarray (java.lang.Class)[0];
v4 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("value", v3);
v5 = newarray (java.lang.Object)[0];
v6 = virtualinvoke v4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys MISSING_VALUE_PROPERTY_IN_ANNOTATION>;
v9 = newarray (java.lang.Object)[1];
v10 = interfaceinvoke v1.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v11 = virtualinvoke v10.<java.lang.Class: java.lang.String getName()>();
v9[0] = v11;
v12 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v8, v9);
v13 = <org.eclipse.yasson.internal.AnnotationFinder: java.util.logging.Logger LOGGER>;
virtualinvoke v13.<java.util.logging.Logger: void finest(java.lang.String)>(v12);
return null;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
catch java.lang.SecurityException from label1 to label2 with label3;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
}
private static java.lang.Class getOptionalAnnotationClass(java.lang.String)
{
java.lang.Object[] v4;
java.lang.Class v1;
java.lang.ClassNotFoundException v2;
java.lang.String v0, v5;
org.eclipse.yasson.internal.properties.MessageKeys v3;
java.util.logging.Logger v6;
v0 := @parameter0: java.lang.String;
label1:
v1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(v0);
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys ANNOTATION_NOT_AVAILABLE>;
v4 = newarray (java.lang.Object)[1];
v4[0] = v0;
v5 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v3, v4);
v6 = <org.eclipse.yasson.internal.AnnotationFinder: java.util.logging.Logger LOGGER>;
virtualinvoke v6.<java.util.logging.Logger: void finest(java.lang.String)>(v5);
return null;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
public static java.lang.'annotation'.Annotation findAnnotation(java.lang.'annotation'.Annotation[], java.lang.Class, java.util.Set)
{
java.lang.Object[] v14;
java.lang.'annotation'.Annotation[] v0, v13, v9;
java.util.ArrayList v8;
int v11, v12, v3, v4;
boolean v7;
java.util.Set v2;
java.util.List v10;
java.lang.'annotation'.Annotation v15, v5;
java.lang.Class v1, v6;
v0 := @parameter0: java.lang.'annotation'.Annotation[];
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.util.Set;
v3 = lengthof v0;
v4 = 0;
label1:
if v4 >= v3 goto label4;
v5 = v0[v4];
v6 = interfaceinvoke v5.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v7 = virtualinvoke v6.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
if v7 == 0 goto label2;
return v5;
label2:
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
v8 = new java.util.ArrayList;
v9 = virtualinvoke v6.<java.lang.Class: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
v10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v9);
specialinvoke v8.<java.util.ArrayList: void <init>(java.util.Collection)>(v10);
interfaceinvoke v8.<java.util.List: boolean removeAll(java.util.Collection)>(v2);
v11 = interfaceinvoke v8.<java.util.List: int size()>();
if v11 <= 0 goto label3;
v12 = interfaceinvoke v8.<java.util.List: int size()>();
v13 = newarray (java.lang.'annotation'.Annotation)[v12];
v14 = interfaceinvoke v8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v13);
v15 = staticinvoke <org.eclipse.yasson.internal.AnnotationFinder: java.lang.'annotation'.Annotation findAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class,java.util.Set)>(v14, v1, v2);
if v15 == null goto label3;
return v15;
label3:
v4 = v4 + 1;
goto label1;
label4:
return null;
}
public java.lang.String toString()
{
java.lang.Class v2;
java.lang.String v1, v3;
org.eclipse.yasson.internal.AnnotationFinder v0;
v0 := @this: org.eclipse.yasson.internal.AnnotationFinder;
v1 = v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.String annotationClassName>;
v2 = v0.<org.eclipse.yasson.internal.AnnotationFinder: java.lang.Class annotationClass>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Class)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationFinder [annotationClassName=\u0001, annotationClass=\u0001]");
return v3;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lorg/eclipse/yasson/internal/AnnotationFinder;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<org.eclipse.yasson.internal.AnnotationFinder: java.util.logging.Logger LOGGER> = v2;
return;
}
}