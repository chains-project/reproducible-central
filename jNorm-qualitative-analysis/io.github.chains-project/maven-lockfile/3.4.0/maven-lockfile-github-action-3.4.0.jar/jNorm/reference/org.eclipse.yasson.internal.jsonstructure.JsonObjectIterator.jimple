public class org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator extends org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator
{
private final jakarta.json.JsonObject jsonObject;
private final java.util.Iterator keyIterator;
private java.lang.String currentKey;
private org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state;
void <init>(jakarta.json.JsonObject)
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
java.util.Iterator v4;
jakarta.json.JsonObject v1;
java.util.Set v3;
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State v2;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 := @parameter0: jakarta.json.JsonObject;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator: void <init>()>();
v2 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State START>;
v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state> = v2;
v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: jakarta.json.JsonObject jsonObject> = v1;
v3 = interfaceinvoke v1.<jakarta.json.JsonObject: java.util.Set keySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.util.Iterator keyIterator> = v4;
return;
}
private void nextKey()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
java.lang.Object[] v5;
java.util.Iterator v1, v7;
org.eclipse.yasson.internal.properties.MessageKeys v4;
jakarta.json.bind.JsonbException v3;
java.lang.Object v8;
java.lang.String v6;
boolean v2;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.util.Iterator keyIterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = new jakarta.json.bind.JsonbException;
v4 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys INTERNAL_ERROR>;
v5 = newarray (java.lang.Object)[1];
v5[0] = "Object is empty";
v6 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v4, v5);
specialinvoke v3.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.util.Iterator keyIterator>;
v8 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.lang.String currentKey> = v8;
return;
}
public jakarta.json.stream.JsonParser$Event next()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
jakarta.json.JsonValue v12;
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State v11, v16, v18, v2, v7, v9;
int[] v1;
int v3, v4;
jakarta.json.bind.JsonbException v20;
boolean v15, v6;
java.util.Iterator v14, v5;
jakarta.json.stream.JsonParser$Event v10, v13, v17, v19, v8;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$1: int[] $SwitchMap$org$eclipse$yasson$internal$jsonstructure$JsonObjectIterator$State>;
v2 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state>;
v3 = virtualinvoke v2.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: int ordinal()>();
v4 = v1[v3];
tableswitch(v4)
{
case 1: goto label1;
case 2: goto label3;
case 3: goto label4;
default: goto label6;
};
label1:
v5 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.util.Iterator keyIterator>;
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void nextKey()>();
v7 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State KEY>;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void setState(org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State)>(v7);
v8 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event KEY_NAME>;
return v8;
label2:
v9 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State END>;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void setState(org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State)>(v9);
v10 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_OBJECT>;
return v10;
label3:
v11 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State VALUE>;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void setState(org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State)>(v11);
v12 = virtualinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: jakarta.json.JsonValue getValue()>();
v13 = virtualinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: jakarta.json.stream.JsonParser$Event getValueEvent(jakarta.json.JsonValue)>(v12);
return v13;
label4:
v14 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.util.Iterator keyIterator>;
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label5;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void nextKey()>();
v16 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State KEY>;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void setState(org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State)>(v16);
v17 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event KEY_NAME>;
return v17;
label5:
v18 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State END>;
specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: void setState(org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State)>(v18);
v19 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_OBJECT>;
return v19;
label6:
v20 = new jakarta.json.bind.JsonbException;
specialinvoke v20.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>("Illegal state");
throw v20;
}
public boolean hasNext()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
boolean v3;
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State v1, v2;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state>;
v2 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State END>;
if v1 == v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public jakarta.json.JsonValue getValue()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State v1, v2;
jakarta.json.JsonObject v4, v5;
java.lang.Object v7;
java.lang.String v3, v6;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state>;
v2 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State START>;
if v1 != v2 goto label1;
v3 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.lang.String currentKey>;
if v3 != null goto label1;
v4 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: jakarta.json.JsonObject jsonObject>;
return v4;
label1:
v5 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: jakarta.json.JsonObject jsonObject>;
v6 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.lang.String currentKey>;
v7 = interfaceinvoke v5.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>(v6);
return v7;
}
java.lang.String getString()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
java.lang.String v3, v4;
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State v1, v2;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state>;
v2 = <org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State KEY>;
if v1 != v2 goto label1;
v3 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.lang.String currentKey>;
return v3;
label1:
v4 = specialinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator: java.lang.String getString()>();
return v4;
}
jakarta.json.bind.JsonbException createIncompatibleValueError()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
java.lang.Object[] v3;
jakarta.json.JsonValue v4;
org.eclipse.yasson.internal.properties.MessageKeys v2;
jakarta.json.JsonValue$ValueType v5;
jakarta.json.bind.JsonbException v1;
java.lang.String v6, v7;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = new jakarta.json.bind.JsonbException;
v2 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys NUMBER_INCOMPATIBLE_VALUE_TYPE_OBJECT>;
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: jakarta.json.JsonValue getValue()>();
v5 = interfaceinvoke v4.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v3[0] = v5;
v6 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.lang.String currentKey>;
v3[1] = v6;
v7 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v2, v3);
specialinvoke v1.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v7);
return v1;
}
private void setState(org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State)
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State v1;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 := @parameter0: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State;
v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator$State state> = v1;
return;
}
public java.lang.String getKey()
{
org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator v0;
java.lang.String v1;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator;
v1 = v0.<org.eclipse.yasson.internal.jsonstructure.JsonObjectIterator: java.lang.String currentKey>;
return v1;
}
}