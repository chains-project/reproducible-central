public final class org.eclipse.yasson.internal.model.PropertyModel extends java.lang.Object implements java.lang.Comparable
{
private static final java.lang.invoke.MethodHandles$Lookup LOOKUP;
private final java.lang.String propertyName;
private final java.lang.String readName;
private final java.lang.String writeName;
private final java.lang.reflect.Type propertyType;
private final org.eclipse.yasson.internal.model.ClassModel classModel;
private final org.eclipse.yasson.internal.model.Property property;
private final org.eclipse.yasson.internal.model.customization.PropertyCustomization customization;
private final java.lang.invoke.MethodHandle getValueHandle;
private final java.lang.invoke.MethodHandle setValueHandle;
private final java.lang.reflect.Field field;
private final java.lang.reflect.Method getter;
private final java.lang.reflect.Method setter;
private final java.lang.reflect.Type getterMethodType;
private final java.lang.reflect.Type setterMethodType;
public void <init>(org.eclipse.yasson.internal.model.PropertyModel, org.eclipse.yasson.internal.model.PropertyModel)
{
java.lang.IllegalStateException v4;
jakarta.json.bind.config.PropertyVisibilityStrategy v40;
org.eclipse.yasson.internal.model.customization.ClassCustomization v39;
org.eclipse.yasson.internal.model.customization.PropertyCustomization v11;
java.lang.reflect.Method v23, v26, v28, v31, v35, v37, v42, v43, v47, v48;
boolean v3, v44, v49;
org.eclipse.yasson.internal.model.ClassModel v38, v6;
org.eclipse.yasson.internal.model.PropertyModel v0, v1, v2;
java.lang.reflect.Type v10, v12, v13, v14, v15;
java.lang.invoke.MethodHandle v45, v50;
java.lang.String v5, v7, v8, v9;
org.eclipse.yasson.internal.model.Property v16, v17, v19, v20, v22, v24, v25, v27, v29, v30, v32, v34, v36;
java.lang.reflect.Field v18, v21, v33, v41, v46;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: org.eclipse.yasson.internal.model.PropertyModel;
v2 := @parameter1: org.eclipse.yasson.internal.model.PropertyModel;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = virtualinvoke v1.<org.eclipse.yasson.internal.model.PropertyModel: boolean equals(java.lang.Object)>(v2);
if v3 != 0 goto label1;
v4 = new java.lang.IllegalStateException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.eclipse.yasson.internal.model.PropertyModel,org.eclipse.yasson.internal.model.PropertyModel)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Property models \u0001 and \u0001 cannot be merged");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v1.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.ClassModel classModel>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.ClassModel classModel> = v6;
v7 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String propertyName>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String propertyName> = v7;
v8 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName> = v8;
v9 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName> = v9;
v10 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type propertyType>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type propertyType> = v10;
v11 = v1.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization> = v11;
v12 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType>;
if v12 == null goto label2;
v13 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType>;
goto label3;
label2:
v13 = v2.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType>;
label3:
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType> = v13;
v14 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType>;
if v14 == null goto label4;
v15 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType>;
goto label5;
label4:
v15 = v2.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType>;
label5:
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType> = v15;
v16 = v1.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property> = v16;
v17 = v2.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v18 = virtualinvoke v17.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Field getField()>();
if v18 == null goto label6;
v19 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v20 = v2.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v21 = virtualinvoke v20.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Field getField()>();
virtualinvoke v19.<org.eclipse.yasson.internal.model.Property: void setField(java.lang.reflect.Field)>(v21);
label6:
v22 = v2.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v23 = virtualinvoke v22.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getGetter()>();
if v23 == null goto label7;
v24 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v25 = v2.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v26 = virtualinvoke v25.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getGetter()>();
virtualinvoke v24.<org.eclipse.yasson.internal.model.Property: void setGetter(java.lang.reflect.Method)>(v26);
label7:
v27 = v2.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v28 = virtualinvoke v27.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getSetter()>();
if v28 == null goto label8;
v29 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v30 = v2.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v31 = virtualinvoke v30.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getSetter()>();
virtualinvoke v29.<org.eclipse.yasson.internal.model.Property: void setSetter(java.lang.reflect.Method)>(v31);
label8:
v32 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v33 = virtualinvoke v32.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Field getField()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field> = v33;
v34 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v35 = virtualinvoke v34.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getGetter()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter> = v35;
v36 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property>;
v37 = virtualinvoke v36.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getSetter()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter> = v37;
v38 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.ClassModel classModel>;
v39 = virtualinvoke v38.<org.eclipse.yasson.internal.model.ClassModel: org.eclipse.yasson.internal.model.customization.ClassCustomization getClassCustomization()>();
v40 = virtualinvoke v39.<org.eclipse.yasson.internal.model.customization.ClassCustomization: jakarta.json.bind.config.PropertyVisibilityStrategy getPropertyVisibilityStrategy()>();
v41 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field>;
v42 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter>;
v43 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter>;
v44 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isMethodVisible(java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v43, v40);
v45 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle createReadHandle(java.lang.reflect.Field,java.lang.reflect.Method,boolean,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v41, v42, v44, v40);
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle getValueHandle> = v45;
v46 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field>;
v47 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter>;
v48 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter>;
v49 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isMethodVisible(java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v48, v40);
v50 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle createWriteHandle(java.lang.reflect.Field,java.lang.reflect.Method,boolean,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v46, v47, v49, v40);
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle setValueHandle> = v50;
return;
}
public void <init>(org.eclipse.yasson.internal.model.ClassModel, org.eclipse.yasson.internal.model.Property, org.eclipse.yasson.internal.JsonbContext)
{
jakarta.json.bind.config.PropertyVisibilityStrategy v10;
org.eclipse.yasson.internal.model.customization.ClassCustomization v9;
org.eclipse.yasson.internal.model.customization.PropertyCustomization v23, v24, v30;
java.lang.reflect.Method v11, v13, v16, v19, v7, v8;
boolean v12, v14;
org.eclipse.yasson.internal.model.ClassModel v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
java.lang.reflect.Type v21, v22, v5;
org.eclipse.yasson.internal.JsonbConfigProperties v27, v33;
org.eclipse.yasson.internal.JsonbContext v3;
java.lang.invoke.MethodHandle v17, v20;
java.lang.String v25, v26, v29, v31, v32, v35, v4;
org.eclipse.yasson.internal.model.Property v2;
java.lang.reflect.Field v15, v18, v6;
jakarta.json.bind.config.PropertyNamingStrategy v28, v34;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: org.eclipse.yasson.internal.model.ClassModel;
v2 := @parameter1: org.eclipse.yasson.internal.model.Property;
v3 := @parameter2: org.eclipse.yasson.internal.JsonbContext;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.ClassModel classModel> = v1;
v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.Property property> = v2;
v4 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.String getName()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String propertyName> = v4;
v5 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Type getPropertyType()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type propertyType> = v5;
v6 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Field getField()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field> = v6;
v7 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getGetter()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter> = v7;
v8 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Method getSetter()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter> = v8;
v9 = virtualinvoke v1.<org.eclipse.yasson.internal.model.ClassModel: org.eclipse.yasson.internal.model.customization.ClassCustomization getClassCustomization()>();
v10 = virtualinvoke v9.<org.eclipse.yasson.internal.model.customization.ClassCustomization: jakarta.json.bind.config.PropertyVisibilityStrategy getPropertyVisibilityStrategy()>();
v11 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter>;
v12 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isMethodVisible(java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v11, v10);
v13 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter>;
v14 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isMethodVisible(java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v13, v10);
v15 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field>;
v16 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter>;
v17 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle createReadHandle(java.lang.reflect.Field,java.lang.reflect.Method,boolean,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v15, v16, v12, v10);
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle getValueHandle> = v17;
v18 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field>;
v19 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter>;
v20 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle createWriteHandle(java.lang.reflect.Field,java.lang.reflect.Method,boolean,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v18, v19, v14, v10);
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle setValueHandle> = v20;
if v12 == 0 goto label1;
v21 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Type getGetterType()>();
goto label2;
label1:
v21 = null;
label2:
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType> = v21;
if v14 == 0 goto label3;
v22 = virtualinvoke v2.<org.eclipse.yasson.internal.model.Property: java.lang.reflect.Type getSetterType()>();
goto label4;
label3:
v22 = null;
label4:
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType> = v22;
v23 = specialinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization introspectCustomization(org.eclipse.yasson.internal.model.Property,org.eclipse.yasson.internal.JsonbContext,org.eclipse.yasson.internal.model.ClassModel)>(v2, v3, v1);
v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization> = v23;
v24 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v25 = virtualinvoke v24.<org.eclipse.yasson.internal.model.customization.PropertyCustomization: java.lang.String getJsonReadName()>();
v26 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String propertyName>;
v27 = virtualinvoke v3.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.JsonbConfigProperties getConfigProperties()>();
v28 = virtualinvoke v27.<org.eclipse.yasson.internal.JsonbConfigProperties: jakarta.json.bind.config.PropertyNamingStrategy getPropertyNamingStrategy()>();
v29 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.String calculateReadWriteName(java.lang.String,java.lang.String,jakarta.json.bind.config.PropertyNamingStrategy)>(v25, v26, v28);
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName> = v29;
v30 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v31 = virtualinvoke v30.<org.eclipse.yasson.internal.model.customization.PropertyCustomization: java.lang.String getJsonWriteName()>();
v32 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String propertyName>;
v33 = virtualinvoke v3.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.JsonbConfigProperties getConfigProperties()>();
v34 = virtualinvoke v33.<org.eclipse.yasson.internal.JsonbConfigProperties: jakarta.json.bind.config.PropertyNamingStrategy getPropertyNamingStrategy()>();
v35 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.String calculateReadWriteName(java.lang.String,java.lang.String,jakarta.json.bind.config.PropertyNamingStrategy)>(v31, v32, v34);
v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName> = v35;
return;
}
public java.lang.reflect.Type getPropertyDeserializationType()
{
java.lang.reflect.Type v1, v2;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType>;
if v1 != null goto label1;
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type propertyType>;
goto label2;
label1:
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type setterMethodType>;
label2:
return v2;
}
public java.lang.reflect.Type getPropertySerializationType()
{
java.lang.reflect.Type v1, v2;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType>;
if v1 != null goto label1;
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type propertyType>;
goto label2;
label1:
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getterMethodType>;
label2:
return v2;
}
private org.eclipse.yasson.internal.components.SerializerBinding getUserSerializerBinding(org.eclipse.yasson.internal.model.Property, org.eclipse.yasson.internal.JsonbContext)
{
org.eclipse.yasson.internal.model.PropertyModel v0;
org.eclipse.yasson.internal.components.SerializerBinding v4;
java.lang.reflect.Type v6;
java.util.Optional v7;
java.lang.Object v8;
org.eclipse.yasson.internal.JsonbContext v2;
org.eclipse.yasson.internal.model.Property v1;
org.eclipse.yasson.internal.AnnotationIntrospector v3;
org.eclipse.yasson.internal.ComponentMatcher v5;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: org.eclipse.yasson.internal.model.Property;
v2 := @parameter1: org.eclipse.yasson.internal.JsonbContext;
v3 = virtualinvoke v2.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<org.eclipse.yasson.internal.AnnotationIntrospector: org.eclipse.yasson.internal.components.SerializerBinding getSerializerBinding(org.eclipse.yasson.internal.model.Property)>(v1);
if v4 == null goto label1;
return v4;
label1:
v5 = virtualinvoke v2.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.ComponentMatcher getComponentMatcher()>();
v6 = virtualinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getPropertySerializationType()>();
v7 = virtualinvoke v5.<org.eclipse.yasson.internal.ComponentMatcher: java.util.Optional getSerializerBinding(java.lang.reflect.Type,org.eclipse.yasson.internal.model.customization.ComponentBoundCustomization)>(v6, null);
v8 = virtualinvoke v7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
return v8;
}
private org.eclipse.yasson.internal.model.customization.PropertyCustomization introspectCustomization(org.eclipse.yasson.internal.model.Property, org.eclipse.yasson.internal.JsonbContext, org.eclipse.yasson.internal.model.ClassModel)
{
org.eclipse.yasson.internal.model.customization.ClassCustomization v37;
org.eclipse.yasson.internal.model.customization.PropertyCustomization v11, v14, v57;
org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder v5;
org.eclipse.yasson.internal.components.DeserializerBinding v45;
java.util.EnumSet v6;
boolean v12, v15, v19, v21, v23, v25, v27, v28, v31, v34, v38, v41, v43;
org.eclipse.yasson.internal.model.ClassModel v3, v7, v8;
org.eclipse.yasson.internal.model.PropertyModel v0, v10;
org.eclipse.yasson.internal.model.JsonbAnnotatedElement v29, v30, v32, v33;
org.eclipse.yasson.internal.model.AnnotationTarget v13, v16, v18, v20, v22, v24, v26;
java.lang.reflect.Type v49, v53;
java.util.Optional v36, v50, v54;
org.eclipse.yasson.internal.JsonbContext v2;
org.eclipse.yasson.internal.ComponentMatcher v48, v52;
int v17;
java.lang.Boolean v39;
org.eclipse.yasson.internal.components.AdapterBinding v47;
java.lang.String v35, v44, v9;
org.eclipse.yasson.internal.model.Property v1;
org.eclipse.yasson.internal.AnnotationIntrospector v4, v46;
org.eclipse.yasson.internal.components.SerializerBinding v42;
java.lang.Class v56;
java.lang.Object v40, v51, v55;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: org.eclipse.yasson.internal.model.Property;
v2 := @parameter1: org.eclipse.yasson.internal.JsonbContext;
v3 := @parameter2: org.eclipse.yasson.internal.model.ClassModel;
v4 = virtualinvoke v2.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.AnnotationIntrospector getAnnotationIntrospector()>();
v5 = staticinvoke <org.eclipse.yasson.internal.model.customization.PropertyCustomization: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder builder()>();
v6 = virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: java.util.EnumSet getJsonbTransientCategorized(org.eclipse.yasson.internal.model.Property)>(v1);
v7 = v3;
label01:
v8 = virtualinvoke v7.<org.eclipse.yasson.internal.model.ClassModel: org.eclipse.yasson.internal.model.ClassModel getParentClassModel()>();
v7 = v8;
if v8 == null goto label03;
v9 = virtualinvoke v1.<org.eclipse.yasson.internal.model.Property: java.lang.String getName()>();
v10 = virtualinvoke v8.<org.eclipse.yasson.internal.model.ClassModel: org.eclipse.yasson.internal.model.PropertyModel getPropertyModel(java.lang.String)>(v9);
if v10 == null goto label01;
v11 = v10.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v12 = virtualinvoke v11.<org.eclipse.yasson.internal.model.customization.PropertyCustomization: boolean isReadTransient()>();
if v12 == 0 goto label02;
v13 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget GETTER>;
virtualinvoke v6.<java.util.EnumSet: boolean add(java.lang.Object)>(v13);
label02:
v14 = v10.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v15 = virtualinvoke v14.<org.eclipse.yasson.internal.model.customization.PropertyCustomization: boolean isWriteTransient()>();
if v15 == 0 goto label01;
v16 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget SETTER>;
virtualinvoke v6.<java.util.EnumSet: boolean add(java.lang.Object)>(v16);
goto label01;
label03:
v17 = virtualinvoke v6.<java.util.EnumSet: int size()>();
if v17 == 0 goto label07;
v18 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget GETTER>;
v19 = virtualinvoke v6.<java.util.EnumSet: boolean contains(java.lang.Object)>(v18);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder readTransient(boolean)>(v19);
v20 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget SETTER>;
v21 = virtualinvoke v6.<java.util.EnumSet: boolean contains(java.lang.Object)>(v20);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder writeTransient(boolean)>(v21);
v22 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget PROPERTY>;
v23 = virtualinvoke v6.<java.util.EnumSet: boolean contains(java.lang.Object)>(v22);
if v23 == 0 goto label05;
v24 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget GETTER>;
v25 = virtualinvoke v6.<java.util.EnumSet: boolean contains(java.lang.Object)>(v24);
if v25 != 0 goto label04;
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder readTransient(boolean)>(1);
label04:
v26 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget SETTER>;
v27 = virtualinvoke v6.<java.util.EnumSet: boolean contains(java.lang.Object)>(v26);
if v27 != 0 goto label05;
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder writeTransient(boolean)>(1);
label05:
v28 = virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean readTransient()>();
if v28 == 0 goto label06;
v29 = virtualinvoke v1.<org.eclipse.yasson.internal.model.Property: org.eclipse.yasson.internal.model.JsonbAnnotatedElement getFieldElement()>();
virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: void checkTransientIncompatible(org.eclipse.yasson.internal.model.JsonbAnnotatedElement)>(v29);
v30 = virtualinvoke v1.<org.eclipse.yasson.internal.model.Property: org.eclipse.yasson.internal.model.JsonbAnnotatedElement getGetterElement()>();
virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: void checkTransientIncompatible(org.eclipse.yasson.internal.model.JsonbAnnotatedElement)>(v30);
label06:
v31 = virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean writeTransient()>();
if v31 == 0 goto label07;
v32 = virtualinvoke v1.<org.eclipse.yasson.internal.model.Property: org.eclipse.yasson.internal.model.JsonbAnnotatedElement getFieldElement()>();
virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: void checkTransientIncompatible(org.eclipse.yasson.internal.model.JsonbAnnotatedElement)>(v32);
v33 = virtualinvoke v1.<org.eclipse.yasson.internal.model.Property: org.eclipse.yasson.internal.model.JsonbAnnotatedElement getSetterElement()>();
virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: void checkTransientIncompatible(org.eclipse.yasson.internal.model.JsonbAnnotatedElement)>(v33);
label07:
v34 = virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean readTransient()>();
if v34 != 0 goto label08;
v35 = virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: java.lang.String getJsonbPropertyJsonWriteName(org.eclipse.yasson.internal.model.Property)>(v1);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder jsonWriteName(java.lang.String)>(v35);
v36 = virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: java.util.Optional isPropertyNillable(org.eclipse.yasson.internal.model.Property)>(v1);
v37 = virtualinvoke v3.<org.eclipse.yasson.internal.model.ClassModel: org.eclipse.yasson.internal.model.customization.ClassCustomization getClassCustomization()>();
v38 = virtualinvoke v37.<org.eclipse.yasson.internal.model.customization.ClassCustomization: boolean isNillable()>();
v39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v38);
v40 = virtualinvoke v36.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v39);
v41 = virtualinvoke v40.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.CustomizationBase$Builder nillable(boolean)>(v41);
v42 = specialinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.components.SerializerBinding getUserSerializerBinding(org.eclipse.yasson.internal.model.Property,org.eclipse.yasson.internal.JsonbContext)>(v1, v2);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.CustomizationBase$Builder serializerBinding(org.eclipse.yasson.internal.components.SerializerBinding)>(v42);
label08:
v43 = virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean writeTransient()>();
if v43 != 0 goto label09;
v44 = virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: java.lang.String getJsonbPropertyJsonReadName(org.eclipse.yasson.internal.model.Property)>(v1);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder jsonReadName(java.lang.String)>(v44);
v45 = virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: org.eclipse.yasson.internal.components.DeserializerBinding getDeserializerBinding(org.eclipse.yasson.internal.model.Property)>(v1);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.CustomizationBase$Builder deserializerBinding(org.eclipse.yasson.internal.components.DeserializerBinding)>(v45);
label09:
v46 = virtualinvoke v2.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.AnnotationIntrospector getAnnotationIntrospector()>();
v47 = virtualinvoke v46.<org.eclipse.yasson.internal.AnnotationIntrospector: org.eclipse.yasson.internal.components.AdapterBinding getAdapterBinding(org.eclipse.yasson.internal.model.Property)>(v1);
if v47 == null goto label10;
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder serializeAdapter(org.eclipse.yasson.internal.components.AdapterBinding)>(v47);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder deserializeAdapter(org.eclipse.yasson.internal.components.AdapterBinding)>(v47);
goto label11;
label10:
v48 = virtualinvoke v2.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.ComponentMatcher getComponentMatcher()>();
v49 = virtualinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getPropertySerializationType()>();
v50 = virtualinvoke v48.<org.eclipse.yasson.internal.ComponentMatcher: java.util.Optional getSerializeAdapterBinding(java.lang.reflect.Type,org.eclipse.yasson.internal.model.customization.ComponentBoundCustomization)>(v49, null);
v51 = virtualinvoke v50.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder serializeAdapter(org.eclipse.yasson.internal.components.AdapterBinding)>(v51);
v52 = virtualinvoke v2.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.ComponentMatcher getComponentMatcher()>();
v53 = virtualinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Type getPropertyDeserializationType()>();
v54 = virtualinvoke v52.<org.eclipse.yasson.internal.ComponentMatcher: java.util.Optional getDeserializeAdapterBinding(java.lang.reflect.Type,org.eclipse.yasson.internal.model.customization.ComponentBoundCustomization)>(v53, null);
v55 = virtualinvoke v54.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder deserializeAdapter(org.eclipse.yasson.internal.components.AdapterBinding)>(v55);
label11:
staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: void introspectDateFormatter(org.eclipse.yasson.internal.model.Property,org.eclipse.yasson.internal.AnnotationIntrospector,org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder,org.eclipse.yasson.internal.JsonbContext)>(v1, v4, v5, v2);
staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: void introspectNumberFormatter(org.eclipse.yasson.internal.model.Property,org.eclipse.yasson.internal.AnnotationIntrospector,org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder)>(v1, v4, v5);
v56 = virtualinvoke v4.<org.eclipse.yasson.internal.AnnotationIntrospector: java.lang.Class getImplementationClass(org.eclipse.yasson.internal.model.Property)>(v1);
virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder implementationClass(java.lang.Class)>(v56);
v57 = virtualinvoke v5.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization build()>();
return v57;
}
private static void introspectDateFormatter(org.eclipse.yasson.internal.model.Property, org.eclipse.yasson.internal.AnnotationIntrospector, org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder, org.eclipse.yasson.internal.JsonbContext)
{
org.eclipse.yasson.internal.JsonbDateFormatter v13, v20, v6;
org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder v2;
java.util.Map v4;
org.eclipse.yasson.internal.model.Property v0;
org.eclipse.yasson.internal.AnnotationIntrospector v1;
org.eclipse.yasson.internal.model.AnnotationTarget[] v15, v8;
boolean v14, v7;
org.eclipse.yasson.internal.model.AnnotationTarget v10, v11, v16, v17, v18, v9;
org.eclipse.yasson.internal.JsonbConfigProperties v5;
java.lang.Object v12, v19;
org.eclipse.yasson.internal.JsonbContext v3;
v0 := @parameter0: org.eclipse.yasson.internal.model.Property;
v1 := @parameter1: org.eclipse.yasson.internal.AnnotationIntrospector;
v2 := @parameter2: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder;
v3 := @parameter3: org.eclipse.yasson.internal.JsonbContext;
v4 = virtualinvoke v1.<org.eclipse.yasson.internal.AnnotationIntrospector: java.util.Map getJsonbDateFormatCategorized(org.eclipse.yasson.internal.model.Property)>(v0);
v5 = virtualinvoke v3.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.JsonbConfigProperties getConfigProperties()>();
v6 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbConfigProperties: org.eclipse.yasson.internal.JsonbDateFormatter getConfigDateFormatter()>();
v7 = virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean readTransient()>();
if v7 != 0 goto label3;
v8 = newarray (org.eclipse.yasson.internal.model.AnnotationTarget)[3];
v9 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget GETTER>;
v8[0] = v9;
v10 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget PROPERTY>;
v8[1] = v10;
v11 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget CLASS>;
v8[2] = v11;
v12 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.Object getTargetForMostPreciseScope(java.util.Map,org.eclipse.yasson.internal.model.AnnotationTarget[])>(v4, v8);
if v12 == null goto label1;
v13 = v12;
goto label2;
label1:
v13 = v6;
label2:
virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder serializeDateFormatter(org.eclipse.yasson.internal.JsonbDateFormatter)>(v13);
label3:
v14 = virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean writeTransient()>();
if v14 != 0 goto label6;
v15 = newarray (org.eclipse.yasson.internal.model.AnnotationTarget)[3];
v16 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget SETTER>;
v15[0] = v16;
v17 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget PROPERTY>;
v15[1] = v17;
v18 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget CLASS>;
v15[2] = v18;
v19 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.Object getTargetForMostPreciseScope(java.util.Map,org.eclipse.yasson.internal.model.AnnotationTarget[])>(v4, v15);
if v19 == null goto label4;
v20 = v19;
goto label5;
label4:
v20 = v6;
label5:
virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder deserializeDateFormatter(org.eclipse.yasson.internal.JsonbDateFormatter)>(v20);
label6:
return;
}
private static void introspectNumberFormatter(org.eclipse.yasson.internal.model.Property, org.eclipse.yasson.internal.AnnotationIntrospector, org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder)
{
org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder v2;
java.util.Map v3;
org.eclipse.yasson.internal.model.Property v0;
org.eclipse.yasson.internal.AnnotationIntrospector v1;
org.eclipse.yasson.internal.model.AnnotationTarget[] v11, v5;
boolean v10, v4;
org.eclipse.yasson.internal.model.AnnotationTarget v12, v13, v14, v6, v7, v8;
java.lang.Object v15, v9;
v0 := @parameter0: org.eclipse.yasson.internal.model.Property;
v1 := @parameter1: org.eclipse.yasson.internal.AnnotationIntrospector;
v2 := @parameter2: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder;
v3 = virtualinvoke v1.<org.eclipse.yasson.internal.AnnotationIntrospector: java.util.Map getJsonNumberFormatter(org.eclipse.yasson.internal.model.Property)>(v0);
v4 = virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean readTransient()>();
if v4 != 0 goto label1;
v5 = newarray (org.eclipse.yasson.internal.model.AnnotationTarget)[3];
v6 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget GETTER>;
v5[0] = v6;
v7 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget PROPERTY>;
v5[1] = v7;
v8 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget CLASS>;
v5[2] = v8;
v9 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.Object getTargetForMostPreciseScope(java.util.Map,org.eclipse.yasson.internal.model.AnnotationTarget[])>(v3, v5);
virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder serializeNumberFormatter(org.eclipse.yasson.internal.JsonbNumberFormatter)>(v9);
label1:
v10 = virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: boolean writeTransient()>();
if v10 != 0 goto label2;
v11 = newarray (org.eclipse.yasson.internal.model.AnnotationTarget)[3];
v12 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget SETTER>;
v11[0] = v12;
v13 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget PROPERTY>;
v11[1] = v13;
v14 = <org.eclipse.yasson.internal.model.AnnotationTarget: org.eclipse.yasson.internal.model.AnnotationTarget CLASS>;
v11[2] = v14;
v15 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.Object getTargetForMostPreciseScope(java.util.Map,org.eclipse.yasson.internal.model.AnnotationTarget[])>(v3, v11);
virtualinvoke v2.<org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder: org.eclipse.yasson.internal.model.customization.PropertyCustomization$Builder deserializeNumberFormatter(org.eclipse.yasson.internal.JsonbNumberFormatter)>(v15);
label2:
return;
}
private static transient java.lang.Object getTargetForMostPreciseScope(java.util.Map, org.eclipse.yasson.internal.model.AnnotationTarget[])
{
org.eclipse.yasson.internal.model.AnnotationTarget v4;
java.util.Map v0;
int v2, v3;
java.lang.Object v5;
org.eclipse.yasson.internal.model.AnnotationTarget[] v1;
v0 := @parameter0: java.util.Map;
v1 := @parameter1: org.eclipse.yasson.internal.model.AnnotationTarget[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = interfaceinvoke v0.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
if v5 == null goto label2;
return v5;
label2:
v3 = v3 + 1;
goto label1;
label3:
return null;
}
public java.lang.Object getValue(java.lang.Object)
{
java.lang.Throwable v4;
java.lang.invoke.MethodHandle v2;
org.eclipse.yasson.internal.model.PropertyModel v0;
jakarta.json.bind.JsonbException v5;
java.lang.Object v1, v3;
java.lang.String v6;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle getValueHandle>;
v3 = virtualinvoke v2.<java.lang.invoke.MethodHandle: java.lang.Object invoke(java.lang.Object)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = new jakarta.json.bind.JsonbException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error getting value on: \u0001");
specialinvoke v5.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v6, v4);
throw v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setValue(java.lang.Object, java.lang.Object)
{
java.lang.Throwable v5;
java.lang.invoke.MethodHandle v4;
org.eclipse.yasson.internal.model.PropertyModel v0;
jakarta.json.bind.JsonbException v6;
java.lang.Object v1, v2;
java.lang.String v7;
boolean v3;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel: boolean isWritable()>();
if v3 != 0 goto label1;
return;
label1:
v4 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle setValueHandle>;
virtualinvoke v4.<java.lang.invoke.MethodHandle: void invoke(java.lang.Object,java.lang.Object)>(v1, v2);
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = new jakarta.json.bind.JsonbException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error setting value on: \u0001");
specialinvoke v6.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public boolean isReadable()
{
java.lang.invoke.MethodHandle v3;
org.eclipse.yasson.internal.model.PropertyModel v0;
org.eclipse.yasson.internal.model.customization.PropertyCustomization v1;
boolean v2, v4;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v2 = virtualinvoke v1.<org.eclipse.yasson.internal.model.customization.PropertyCustomization: boolean isReadTransient()>();
if v2 != 0 goto label1;
v3 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle getValueHandle>;
if v3 == null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isWritable()
{
java.lang.invoke.MethodHandle v3;
org.eclipse.yasson.internal.model.PropertyModel v0;
org.eclipse.yasson.internal.model.customization.PropertyCustomization v1;
boolean v2, v4;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
v2 = virtualinvoke v1.<org.eclipse.yasson.internal.model.customization.PropertyCustomization: boolean isWriteTransient()>();
if v2 != 0 goto label1;
v3 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle setValueHandle>;
if v3 == null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public java.lang.String getPropertyName()
{
java.lang.String v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String propertyName>;
return v1;
}
public org.eclipse.yasson.internal.model.ClassModel getClassModel()
{
org.eclipse.yasson.internal.model.ClassModel v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.ClassModel classModel>;
return v1;
}
public org.eclipse.yasson.internal.model.customization.PropertyCustomization getCustomization()
{
org.eclipse.yasson.internal.model.PropertyModel v0;
org.eclipse.yasson.internal.model.customization.PropertyCustomization v1;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: org.eclipse.yasson.internal.model.customization.PropertyCustomization customization>;
return v1;
}
public int compareTo(org.eclipse.yasson.internal.model.PropertyModel)
{
org.eclipse.yasson.internal.model.PropertyModel v0, v1;
int v4, v7;
java.lang.String v2, v3, v5, v6;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: org.eclipse.yasson.internal.model.PropertyModel;
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
v3 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
v4 = virtualinvoke v2.<java.lang.String: int compareTo(java.lang.String)>(v3);
if v4 != 0 goto label1;
v5 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
v6 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
v7 = virtualinvoke v5.<java.lang.String: int compareTo(java.lang.String)>(v6);
goto label2;
label1:
v7 = v4;
label2:
return v7;
}
public boolean equals(java.lang.Object)
{
org.eclipse.yasson.internal.model.PropertyModel v0;
java.lang.Class v2, v3;
java.lang.Object v1;
java.lang.String v4, v5, v7, v8;
boolean v10, v6, v9;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
v5 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 == 0 goto label4;
v7 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
v8 = v1.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 == 0 goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
}
public int hashCode()
{
java.lang.Object[] v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
int v4;
java.lang.String v2, v3;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
v1[0] = v2;
v3 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
v1[1] = v3;
v4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v4;
}
public java.lang.String getReadName()
{
java.lang.String v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String readName>;
return v1;
}
public java.lang.String getWriteName()
{
java.lang.String v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.String writeName>;
return v1;
}
private static java.lang.String calculateReadWriteName(java.lang.String, java.lang.String, jakarta.json.bind.config.PropertyNamingStrategy)
{
java.lang.String v0, v1, v3;
jakarta.json.bind.config.PropertyNamingStrategy v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: jakarta.json.bind.config.PropertyNamingStrategy;
if v0 == null goto label1;
v3 = v0;
goto label2;
label1:
v3 = interfaceinvoke v2.<jakarta.json.bind.config.PropertyNamingStrategy: java.lang.String translateName(java.lang.String)>(v1);
label2:
return v3;
}
public java.lang.reflect.Field getField()
{
java.lang.reflect.Field v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Field field>;
return v1;
}
public java.lang.reflect.Method getGetter()
{
java.lang.reflect.Method v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method getter>;
return v1;
}
public java.lang.reflect.Method getSetter()
{
java.lang.reflect.Method v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.reflect.Method setter>;
return v1;
}
public static boolean isPropertyReadable(java.lang.reflect.Field, java.lang.reflect.Method, jakarta.json.bind.config.PropertyVisibilityStrategy)
{
java.lang.invoke.MethodHandle v4;
jakarta.json.bind.config.PropertyVisibilityStrategy v2;
java.lang.reflect.Field v0;
java.lang.reflect.Method v1;
boolean v3, v5;
v0 := @parameter0: java.lang.reflect.Field;
v1 := @parameter1: java.lang.reflect.Method;
v2 := @parameter2: jakarta.json.bind.config.PropertyVisibilityStrategy;
v3 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isMethodVisible(java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v1, v2);
v4 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle createReadHandle(java.lang.reflect.Field,java.lang.reflect.Method,boolean,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v0, v1, v3, v2);
if v4 == null goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
private static java.lang.invoke.MethodHandle createReadHandle(java.lang.reflect.Field, java.lang.reflect.Method, boolean, jakarta.json.bind.config.PropertyVisibilityStrategy)
{
java.lang.Throwable v9;
java.lang.invoke.MethodHandle v16, v8;
jakarta.json.bind.config.PropertyVisibilityStrategy v3;
int v4, v5;
jakarta.json.bind.JsonbException v10, v18;
java.lang.String v11, v13, v19, v21;
java.lang.reflect.Method v1;
boolean v14, v2, v6;
java.lang.IllegalAccessException v17;
java.lang.invoke.MethodHandles$Lookup v15, v7;
java.lang.reflect.Field v0;
java.lang.Class v12, v20;
v0 := @parameter0: java.lang.reflect.Field;
v1 := @parameter1: java.lang.reflect.Method;
v2 := @parameter2: boolean;
v3 := @parameter3: jakarta.json.bind.config.PropertyVisibilityStrategy;
if v0 == null goto label01;
v4 = virtualinvoke v0.<java.lang.reflect.Field: int getModifiers()>();
v5 = v4 & 136;
if v5 != 0 goto label02;
label01:
v6 = 1;
goto label03;
label02:
v6 = 0;
label03:
if v6 == 0 goto label11;
if v1 == null goto label07;
if v2 == 0 goto label07;
label04:
v7 = <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandles$Lookup LOOKUP>;
v8 = virtualinvoke v7.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflect(java.lang.reflect.Method)>(v1);
label05:
return v8;
label06:
v9 := @caughtexception;
v10 = new jakarta.json.bind.JsonbException;
v11 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.String getName()>();
v12 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Class)>(v11, v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error accessing getter \'\u0001\' declared in \'\u0001\'");
specialinvoke v10.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v13, v9);
throw v10;
label07:
v14 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isFieldVisible(java.lang.reflect.Field,java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v0, v1, v3);
if v14 == 0 goto label11;
label08:
v15 = <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandles$Lookup LOOKUP>;
v16 = virtualinvoke v15.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflectGetter(java.lang.reflect.Field)>(v0);
label09:
return v16;
label10:
v17 := @caughtexception;
v18 = new jakarta.json.bind.JsonbException;
v19 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.String getName()>();
v20 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Class)>(v19, v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error accessing field \'\u0001\' declared in \'\u0001\'");
specialinvoke v18.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v21, v17);
throw v18;
label11:
return null;
catch java.lang.Throwable from label04 to label05 with label06;
catch java.lang.IllegalAccessException from label08 to label09 with label10;
}
private static java.lang.invoke.MethodHandle createWriteHandle(java.lang.reflect.Field, java.lang.reflect.Method, boolean, jakarta.json.bind.config.PropertyVisibilityStrategy)
{
java.lang.invoke.MethodHandle v10, v20;
jakarta.json.bind.config.PropertyVisibilityStrategy v3;
int v4, v5;
jakarta.json.bind.JsonbException v12, v22;
java.lang.String v13, v15, v23, v25;
java.lang.reflect.Method v1;
boolean v16, v18, v2, v6, v8;
java.lang.IllegalAccessException v11, v21;
java.lang.invoke.MethodHandles$Lookup v19, v9;
java.lang.reflect.Field v0;
java.lang.Class v14, v17, v24, v7;
v0 := @parameter0: java.lang.reflect.Field;
v1 := @parameter1: java.lang.reflect.Method;
v2 := @parameter2: boolean;
v3 := @parameter3: jakarta.json.bind.config.PropertyVisibilityStrategy;
if v0 == null goto label01;
v4 = virtualinvoke v0.<java.lang.reflect.Field: int getModifiers()>();
v5 = v4 & 152;
if v5 != 0 goto label02;
label01:
v6 = 1;
goto label03;
label02:
v6 = 0;
label03:
if v6 == 0 goto label11;
if v1 == null goto label07;
if v2 == 0 goto label07;
v7 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v8 = virtualinvoke v7.<java.lang.Class: boolean isAnonymousClass()>();
if v8 != 0 goto label07;
label04:
v9 = <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandles$Lookup LOOKUP>;
v10 = virtualinvoke v9.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflect(java.lang.reflect.Method)>(v1);
label05:
return v10;
label06:
v11 := @caughtexception;
v12 = new jakarta.json.bind.JsonbException;
v13 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.String getName()>();
v14 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Class)>(v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error accessing setter \'\u0001\' declared in \'\u0001\'");
specialinvoke v12.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v15, v11);
throw v12;
label07:
v16 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isFieldVisible(java.lang.reflect.Field,java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v0, v1, v3);
if v16 == 0 goto label11;
v17 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
v18 = virtualinvoke v17.<java.lang.Class: boolean isAnonymousClass()>();
if v18 != 0 goto label11;
label08:
v19 = <org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandles$Lookup LOOKUP>;
v20 = virtualinvoke v19.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflectSetter(java.lang.reflect.Field)>(v0);
label09:
return v20;
label10:
v21 := @caughtexception;
v22 = new jakarta.json.bind.JsonbException;
v23 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.String getName()>();
v24 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Class)>(v23, v24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Error accessing field \'\u0001\' declared in \'\u0001\'");
specialinvoke v22.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v25, v21);
throw v22;
label11:
return null;
catch java.lang.IllegalAccessException from label04 to label05 with label06;
catch java.lang.IllegalAccessException from label08 to label09 with label10;
}
private static boolean isFieldVisible(java.lang.reflect.Field, java.lang.reflect.Method, jakarta.json.bind.config.PropertyVisibilityStrategy)
{
java.util.function.Predicate v3;
jakarta.json.bind.config.PropertyVisibilityStrategy v2;
java.lang.reflect.Field v0;
int v5;
java.lang.Class v7, v9;
java.lang.reflect.Method v1;
boolean v10, v4, v6, v8;
v0 := @parameter0: java.lang.reflect.Field;
v1 := @parameter1: java.lang.reflect.Method;
v2 := @parameter2: jakarta.json.bind.config.PropertyVisibilityStrategy;
if v0 != null goto label1;
return 0;
label1:
v3 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel$lambda_isFieldVisible_0__541: java.util.function.Predicate bootstrap$(java.lang.reflect.Field)>(v0);
v4 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isVisible(java.util.function.Predicate,java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v3, v1, v2);
if v4 == 0 goto label3;
v5 = virtualinvoke v0.<java.lang.reflect.Field: int getModifiers()>();
v6 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v5);
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
v8 = virtualinvoke v7.<java.lang.Class: boolean isAnonymousClass()>();
if v8 != 0 goto label2;
v9 = virtualinvoke v0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
v10 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isNotPublicAndNonNested(java.lang.Class)>(v9);
if v10 == 0 goto label3;
label2:
staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: void overrideAccessible(java.lang.reflect.AccessibleObject)>(v0);
label3:
return v4;
}
private static boolean isNotPublicAndNonNested(java.lang.Class)
{
int v2;
java.lang.Class v0;
boolean v1, v3, v4;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isMemberClass()>();
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<java.lang.Class: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v2);
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
private static boolean isMethodVisible(java.lang.reflect.Method, jakarta.json.bind.config.PropertyVisibilityStrategy)
{
java.util.function.Predicate v4;
jakarta.json.bind.config.PropertyVisibilityStrategy v1;
int v2, v6;
java.lang.Class v10, v8;
java.lang.reflect.Method v0;
boolean v11, v3, v5, v7, v9;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: jakarta.json.bind.config.PropertyVisibilityStrategy;
if v0 == null goto label1;
v2 = virtualinvoke v0.<java.lang.reflect.Method: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v2);
if v3 == 0 goto label2;
label1:
return 0;
label2:
v4 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel$lambda_isMethodVisible_1__542: java.util.function.Predicate bootstrap$(java.lang.reflect.Method)>(v0);
v5 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: boolean isVisible(java.util.function.Predicate,java.lang.reflect.Method,jakarta.json.bind.config.PropertyVisibilityStrategy)>(v4, v0, v1);
if v5 == 0 goto label4;
v6 = virtualinvoke v0.<java.lang.reflect.Method: int getModifiers()>();
v7 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v6);
if v7 == 0 goto label3;
v8 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v9 = virtualinvoke v8.<java.lang.Class: boolean isAnonymousClass()>();
if v9 != 0 goto label3;
v10 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v11 = virtualinvoke v10.<java.lang.Class: boolean isSynthetic()>();
if v11 == 0 goto label4;
label3:
staticinvoke <org.eclipse.yasson.internal.model.PropertyModel: void overrideAccessible(java.lang.reflect.AccessibleObject)>(v0);
label4:
return v5;
}
private static void overrideAccessible(java.lang.reflect.AccessibleObject)
{
java.lang.reflect.AccessibleObject v0;
java.security.PrivilegedAction v1;
v0 := @parameter0: java.lang.reflect.AccessibleObject;
v1 = staticinvoke <org.eclipse.yasson.internal.model.PropertyModel$lambda_overrideAccessible_2__543: java.security.PrivilegedAction bootstrap$(java.lang.reflect.AccessibleObject)>(v0);
staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v1);
return;
}
private static boolean isVisible(java.util.function.Predicate, java.lang.reflect.Method, jakarta.json.bind.config.PropertyVisibilityStrategy)
{
org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy v4;
java.util.function.Predicate v0;
jakarta.json.bind.config.PropertyVisibilityStrategy v2;
java.lang.reflect.Method v1;
boolean v3;
v0 := @parameter0: java.util.function.Predicate;
v1 := @parameter1: java.lang.reflect.Method;
v2 := @parameter2: jakarta.json.bind.config.PropertyVisibilityStrategy;
if v2 == null goto label1;
v3 = interfaceinvoke v0.<java.util.function.Predicate: boolean test(java.lang.Object)>(v2);
goto label2;
label1:
v4 = new org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy;
specialinvoke v4.<org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy: void <init>(java.lang.reflect.Method)>(v1);
v3 = interfaceinvoke v0.<java.util.function.Predicate: boolean test(java.lang.Object)>(v4);
label2:
return v3;
}
public java.lang.invoke.MethodHandle getGetValueHandle()
{
java.lang.invoke.MethodHandle v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle getValueHandle>;
return v1;
}
public java.lang.invoke.MethodHandle getSetValueHandle()
{
java.lang.invoke.MethodHandle v1;
org.eclipse.yasson.internal.model.PropertyModel v0;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel;
v1 = v0.<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandle setValueHandle>;
return v1;
}
static void <clinit>()
{
java.lang.invoke.MethodHandles$Lookup v0;
v0 = staticinvoke <org.eclipse.yasson.internal.model.ModulesUtil: java.lang.invoke.MethodHandles$Lookup lookup()>();
<org.eclipse.yasson.internal.model.PropertyModel: java.lang.invoke.MethodHandles$Lookup LOOKUP> = v0;
return;
}
}