class org.eclipse.yasson.internal.serializer.types.StringSerializer extends org.eclipse.yasson.internal.serializer.types.TypeSerializer
{
void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)
{
org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder v1;
org.eclipse.yasson.internal.serializer.types.StringSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.StringSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.TypeSerializer: void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)>(v1);
return;
}
void serializeValue(java.lang.String, jakarta.json.stream.JsonGenerator, org.eclipse.yasson.internal.SerializationContextImpl)
{
byte[] v9;
java.lang.Object[] v14;
org.eclipse.yasson.internal.properties.MessageKeys v13;
java.nio.charset.Charset v10, v8;
org.eclipse.yasson.internal.SerializationContextImpl v3;
jakarta.json.bind.JsonbException v12;
java.lang.String v1, v15, v7;
boolean v11, v6;
org.eclipse.yasson.internal.serializer.types.StringSerializer v0;
jakarta.json.stream.JsonGenerator v2;
org.eclipse.yasson.internal.JsonbConfigProperties v5;
org.eclipse.yasson.internal.JsonbContext v4;
v0 := @this: org.eclipse.yasson.internal.serializer.types.StringSerializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.stream.JsonGenerator;
v3 := @parameter2: org.eclipse.yasson.internal.SerializationContextImpl;
v4 = virtualinvoke v3.<org.eclipse.yasson.internal.SerializationContextImpl: org.eclipse.yasson.internal.JsonbContext getJsonbContext()>();
v5 = virtualinvoke v4.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.JsonbConfigProperties getConfigProperties()>();
v6 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbConfigProperties: boolean isStrictIJson()>();
if v6 == 0 goto label1;
v7 = new java.lang.String;
v8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v9 = virtualinvoke v1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v8);
v10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v7.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v9, v10);
v11 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v11 != 0 goto label1;
v12 = new jakarta.json.bind.JsonbException;
v13 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys UNPAIRED_SURROGATE>;
v14 = newarray (java.lang.Object)[0];
v15 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v13, v14);
specialinvoke v12.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v15);
throw v12;
label1:
interfaceinvoke v2.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String)>(v1);
return;
}
}