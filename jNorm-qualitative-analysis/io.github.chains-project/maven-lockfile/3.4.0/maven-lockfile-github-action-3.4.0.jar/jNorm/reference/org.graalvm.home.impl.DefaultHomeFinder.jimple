public final class org.graalvm.home.impl.DefaultHomeFinder extends org.graalvm.home.HomeFinder
{
private static final boolean STATIC_VERBOSE;
private static final java.nio.file.Path FORCE_GRAAL_HOME;
private static final java.nio.file.Path GRAAL_HOME_RELATIVE_PATH;
private static final java.util.Map LANGUAGE_RELATIVE_HOMES;
private static final java.lang.String GRAALVM_VERSION_PROPERTY;
private static final java.lang.String GRAALVM_VERSION;
private static final java.lang.Object HOME_NOT_FOUND;
private volatile java.lang.Boolean verbose;
private volatile java.lang.String version;
private volatile java.lang.Object graalVMHome;
private volatile java.util.Map languageHomes;
private volatile java.util.Map toolHomes;
static final boolean $assertionsDisabled;
public void <init>()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
specialinvoke v0.<org.graalvm.home.HomeFinder: void <init>()>();
return;
}
public java.nio.file.Path getHomeFolder()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.lang.AssertionError v8;
java.lang.Object v1, v3, v7;
java.nio.file.Path v2;
boolean v4, v5, v6;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = v0.<org.graalvm.home.impl.DefaultHomeFinder: java.lang.Object graalVMHome>;
if v1 != null goto label3;
v2 = specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path searchHomeFolder()>();
if v2 == null goto label1;
v3 = v2;
goto label2;
label1:
v3 = <org.graalvm.home.impl.DefaultHomeFinder: java.lang.Object HOME_NOT_FOUND>;
label2:
v1 = v3;
v4 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean inImageBuildtimeCode()>();
if v4 != 0 goto label3;
v0.<org.graalvm.home.impl.DefaultHomeFinder: java.lang.Object graalVMHome> = v3;
label3:
v5 = v1 instanceof java.nio.file.Path;
if v5 == 0 goto label4;
return v1;
label4:
v6 = <org.graalvm.home.impl.DefaultHomeFinder: boolean $assertionsDisabled>;
if v6 != 0 goto label5;
v7 = <org.graalvm.home.impl.DefaultHomeFinder: java.lang.Object HOME_NOT_FOUND>;
if v1 == v7 goto label5;
v8 = new java.lang.AssertionError;
specialinvoke v8.<java.lang.AssertionError: void <init>()>();
throw v8;
label5:
return null;
}
private java.nio.file.Path searchHomeFolder()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.util.Map v8;
java.nio.file.Path v17, v19, v20, v25, v3, v33, v38, v39, v6;
boolean v1, v11, v21, v28, v35, v41;
java.util.Set v9;
java.lang.Object[] v18, v23, v26, v44;
java.lang.String[] v24, v32, v37;
java.lang.AssertionError v29, v31, v36, v42;
java.lang.String v16, v22, v30, v4, v43, v7;
java.io.PrintStream v13, v2, v5;
java.nio.file.LinkOption[] v27, v34, v40;
java.util.Iterator v10;
java.lang.Object v12, v14, v15;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: boolean isVerbose()>();
if v1 == 0 goto label02;
v2 = <java.lang.System: java.io.PrintStream err>;
v3 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path FORCE_GRAAL_HOME>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.nio.file.Path)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("FORCE_GRAAL_HOME: \u0001");
virtualinvoke v2.<java.io.PrintStream: void println(java.lang.String)>(v4);
v5 = <java.lang.System: java.io.PrintStream err>;
v6 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path GRAAL_HOME_RELATIVE_PATH>;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.nio.file.Path)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("GRAAL_HOME_RELATIVE_PATH: \u0001");
virtualinvoke v5.<java.io.PrintStream: void println(java.lang.String)>(v7);
v8 = <org.graalvm.home.impl.DefaultHomeFinder: java.util.Map LANGUAGE_RELATIVE_HOMES>;
v9 = interfaceinvoke v8.<java.util.Map: java.util.Set entrySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label01:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label02;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = <java.lang.System: java.io.PrintStream err>;
v14 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getKey()>();
v15 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Object)>(v14, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("relative home of \u0001 from the launcher\'s directory: \u0001");
virtualinvoke v13.<java.io.PrintStream: void println(java.lang.String)>(v16);
goto label01;
label02:
v17 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path FORCE_GRAAL_HOME>;
if v17 == null goto label03;
v18 = newarray (java.lang.Object)[2];
v18[0] = "GraalVM home forced to: ";
v19 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path FORCE_GRAAL_HOME>;
v18[1] = v19;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v18);
v20 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path FORCE_GRAAL_HOME>;
return v20;
label03:
v21 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean inImageRuntimeCode()>();
if v21 == 0 goto label07;
v22 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.graalvm.home");
if v22 == null goto label04;
v23 = newarray (java.lang.Object)[2];
v23[0] = "GraalVM home already set to: ";
v23[1] = v22;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v23);
v24 = newarray (java.lang.String)[0];
v25 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v22, v24);
goto label05;
label04:
v25 = specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getGraalVmHomeNative()>();
v26 = newarray (java.lang.Object)[2];
v26[0] = "Found GraalVM home: ";
v26[1] = v25;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v26);
if v25 != null goto label05;
return null;
label05:
v27 = newarray (java.nio.file.LinkOption)[0];
v28 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(v25, v27);
if v28 != 0 goto label06;
v29 = new java.lang.AssertionError;
specialinvoke v29.<java.lang.AssertionError: void <init>(java.lang.Object)>("GraalVM home is not reachable.");
throw v29;
label06:
return v25;
label07:
v30 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
if v30 != null goto label08;
v31 = new java.lang.AssertionError;
specialinvoke v31.<java.lang.AssertionError: void <init>(java.lang.Object)>("The java.home system property is not set");
throw v31;
label08:
v32 = newarray (java.lang.String)[0];
v33 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v30, v32);
v34 = newarray (java.nio.file.LinkOption)[0];
v35 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(v33, v34);
if v35 != 0 goto label09;
v36 = new java.lang.AssertionError;
specialinvoke v36.<java.lang.AssertionError: void <init>(java.lang.Object)>("Java home is not reachable.");
throw v36;
label09:
v37 = newarray (java.lang.String)[1];
v37[0] = "modules";
v38 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("lib", v37);
v39 = interfaceinvoke v33.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v38);
v40 = newarray (java.nio.file.LinkOption)[0];
v41 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(v39, v40);
if v41 != 0 goto label10;
v42 = new java.lang.AssertionError;
v43 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.nio.file.Path)>(v33) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing jimage in java.home: \u0001");
specialinvoke v42.<java.lang.AssertionError: void <init>(java.lang.Object)>(v43);
throw v42;
label10:
v44 = newarray (java.lang.Object)[2];
v44[0] = "GraalVM home found by java.home property as: ";
v44[1] = v33;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v44);
return v33;
}
public java.lang.String getVersion()
{
java.lang.Throwable v18;
org.graalvm.home.impl.DefaultHomeFinder v0;
java.io.BufferedInputStream v7;
java.nio.file.OpenOption[] v8;
int v14, v16, v17;
java.lang.String v1, v2;
java.nio.file.Path v3, v4;
boolean v13, v15, v20, v6;
java.util.Properties v11;
java.nio.file.LinkOption[] v5;
java.nio.file.StandardOpenOption v9;
java.io.IOException v19;
java.lang.Object v12;
java.io.InputStream v10;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = v0.<org.graalvm.home.impl.DefaultHomeFinder: java.lang.String version>;
if v1 != null goto label9;
v2 = <org.graalvm.home.impl.DefaultHomeFinder: java.lang.String GRAALVM_VERSION>;
if v2 == null goto label1;
v1 = <org.graalvm.home.impl.DefaultHomeFinder: java.lang.String GRAALVM_VERSION>;
goto label8;
label1:
v1 = "snapshot";
v3 = virtualinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getHomeFolder()>();
if v3 == null goto label8;
v4 = interfaceinvoke v3.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>("release");
v5 = newarray (java.nio.file.LinkOption)[0];
v6 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(v4, v5);
if v6 == 0 goto label8;
label2:
v7 = new java.io.BufferedInputStream;
v8 = newarray (java.nio.file.OpenOption)[1];
v9 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption READ>;
v8[0] = v9;
v10 = staticinvoke <java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>(v4, v8);
specialinvoke v7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(v10);
label3:
v11 = new java.util.Properties;
specialinvoke v11.<java.util.Properties: void <init>()>();
virtualinvoke v11.<java.util.Properties: void load(java.io.InputStream)>(v7);
v12 = virtualinvoke v11.<java.util.Properties: java.lang.Object get(java.lang.Object)>("GRAALVM_VERSION");
if v12 == null goto label5;
v1 = virtualinvoke v12.<java.lang.Object: java.lang.String toString()>();
v13 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>("\"");
if v13 == 0 goto label4;
v14 = virtualinvoke v1.<java.lang.String: int length()>();
v1 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(1, v14);
label4:
v15 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>("\"");
if v15 == 0 goto label5;
v16 = virtualinvoke v1.<java.lang.String: int length()>();
v17 = v16 - 1;
v1 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v17);
label5:
virtualinvoke v7.<java.io.InputStream: void close()>();
goto label8;
label6:
v18 := @caughtexception;
throw v18;
label7:
v19 := @caughtexception;
label8:
v20 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean inImageBuildtimeCode()>();
if v20 != 0 goto label9;
v0.<org.graalvm.home.impl.DefaultHomeFinder: java.lang.String version> = v1;
label9:
return v1;
catch java.lang.Throwable from label3 to label5 with label6;
catch java.io.IOException from label2 to label7 with label7;
}
public java.util.Map getLanguageHomes()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.util.Map v1, v3, v7;
java.nio.file.Path v2, v30, v5, v6;
boolean v11, v13, v14, v15, v27, v31;
java.util.Set v9;
java.lang.String[] v29, v4;
int v17, v19, v21, v22, v24, v25;
java.lang.String v16, v18, v20, v23, v26, v28;
java.util.Properties v8;
java.util.Iterator v10;
java.lang.Object v12;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = v0.<org.graalvm.home.impl.DefaultHomeFinder: java.util.Map languageHomes>;
if v1 != null goto label5;
v2 = virtualinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getHomeFolder()>();
if v2 != null goto label1;
v3 = specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: java.util.Map collectStandaloneHomes()>();
v1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v3);
goto label4;
label1:
v4 = newarray (java.lang.String)[0];
v5 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("languages", v4);
v6 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v5);
v7 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.util.Map collectHomes(java.nio.file.Path)>(v6);
v8 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();
v9 = virtualinvoke v8.<java.util.Properties: java.util.Set keySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label2:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label3;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = v12 instanceof java.lang.String;
if v13 == 0 goto label2;
v14 = virtualinvoke v12.<java.lang.String: boolean startsWith(java.lang.String)>("org.graalvm.language.");
if v14 == 0 goto label2;
v15 = virtualinvoke v12.<java.lang.String: boolean endsWith(java.lang.String)>(".home");
if v15 == 0 goto label2;
v16 = "org.graalvm.language.";
v17 = virtualinvoke v16.<java.lang.String: int length()>();
v18 = virtualinvoke v12.<java.lang.String: java.lang.String substring(int)>(v17);
v19 = virtualinvoke v18.<java.lang.String: int length()>();
v20 = ".home";
v21 = virtualinvoke v20.<java.lang.String: int length()>();
if v19 <= v21 goto label2;
v22 = virtualinvoke v18.<java.lang.String: int length()>();
v23 = ".home";
v24 = virtualinvoke v23.<java.lang.String: int length()>();
v25 = v22 - v24;
v26 = virtualinvoke v18.<java.lang.String: java.lang.String substring(int,int)>(0, v25);
v27 = virtualinvoke v26.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");
if v27 != 0 goto label2;
v28 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(v12);
v29 = newarray (java.lang.String)[0];
v30 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v28, v29);
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v26, v30);
goto label2;
label3:
v1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v7);
label4:
v31 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean inImageBuildtimeCode()>();
if v31 != 0 goto label5;
v0.<org.graalvm.home.impl.DefaultHomeFinder: java.util.Map languageHomes> = v1;
label5:
return v1;
}
public java.util.Map getToolHomes()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.lang.String[] v3;
java.util.Map v1, v6;
java.nio.file.Path v2, v4, v5;
boolean v7;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = v0.<org.graalvm.home.impl.DefaultHomeFinder: java.util.Map toolHomes>;
if v1 != null goto label3;
v2 = virtualinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getHomeFolder()>();
if v2 != null goto label1;
v1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label2;
label1:
v3 = newarray (java.lang.String)[0];
v4 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("tools", v3);
v5 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v4);
v6 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.util.Map collectHomes(java.nio.file.Path)>(v5);
v1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v6);
label2:
v7 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean inImageBuildtimeCode()>();
if v7 != 0 goto label3;
v0.<org.graalvm.home.impl.DefaultHomeFinder: java.util.Map toolHomes> = v1;
label3:
return v1;
}
private static java.util.Map collectHomes(java.nio.file.Path)
{
java.lang.Throwable v11;
java.nio.file.LinkOption[] v2;
java.util.Iterator v6;
java.io.IOException v12;
java.util.HashMap v1;
java.lang.RuntimeException v13;
java.nio.file.DirectoryStream v5;
org.graalvm.home.impl.DefaultHomeFinder$1 v4;
java.lang.Object v8;
java.lang.String v10;
java.nio.file.Path v0, v9;
boolean v3, v7;
v0 := @parameter0: java.nio.file.Path;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = newarray (java.nio.file.LinkOption)[0];
v3 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(v0, v2);
if v3 == 0 goto label7;
label1:
v4 = new org.graalvm.home.impl.DefaultHomeFinder$1;
specialinvoke v4.<org.graalvm.home.impl.DefaultHomeFinder$1: void <init>()>();
v5 = staticinvoke <java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>(v0, v4);
label2:
v6 = interfaceinvoke v5.<java.nio.file.DirectoryStream: java.util.Iterator iterator()>();
label3:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label4;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = interfaceinvoke v8.<java.nio.file.Path: java.nio.file.Path getFileName()>();
if v9 == null goto label3;
v10 = interfaceinvoke v9.<java.nio.file.Path: java.lang.String toString()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v8);
goto label3;
label4:
interfaceinvoke v5.<java.nio.file.DirectoryStream: void close()>();
goto label7;
label5:
v11 := @caughtexception;
throw v11;
label6:
v12 := @caughtexception;
v13 = new java.lang.RuntimeException;
specialinvoke v13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v12);
throw v13;
label7:
return v1;
catch java.lang.Throwable from label2 to label4 with label5;
catch java.io.IOException from label1 to label6 with label6;
}
private java.util.Map collectStandaloneHomes()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.lang.Object[] v15;
java.util.HashMap v1;
java.util.Map v6;
java.nio.file.Path v12, v13, v2, v5;
boolean v3, v4, v9;
java.util.Iterator v8;
java.util.Set v7;
java.lang.Object v10, v11, v14;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = null;
v3 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean isExecutable()>();
if v3 == 0 goto label1;
v2 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getCurrentExecutablePath()>();
goto label2;
label1:
v4 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean isSharedLibrary()>();
if v4 == 0 goto label2;
v2 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getCurrentObjectFilePath()>();
label2:
if v2 == null goto label4;
v5 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path getParent()>();
v6 = <org.graalvm.home.impl.DefaultHomeFinder: java.util.Map LANGUAGE_RELATIVE_HOMES>;
v7 = interfaceinvoke v6.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label3:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label4;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
v12 = interfaceinvoke v5.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v11);
v13 = interfaceinvoke v12.<java.nio.file.Path: java.nio.file.Path normalize()>();
v14 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v14, v13);
v15 = newarray (java.lang.Object)[4];
v15[0] = "Resolved the ";
v15[1] = v14;
v15[2] = " home as ";
v15[3] = v13;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v15);
goto label3;
label4:
return v1;
}
private java.nio.file.Path getGraalVmHomeNative()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.lang.Object[] v3, v6;
java.nio.file.Path v1, v2, v4, v5;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getCurrentExecutablePath()>();
if v1 == null goto label1;
v2 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getGraalVmHomeFromRelativeLauncherPath(java.nio.file.Path)>(v1);
if v2 == null goto label1;
v3 = newarray (java.lang.Object)[2];
v3[0] = "GraalVM home found by executable as: ";
v3[1] = v2;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v3);
return v2;
label1:
v4 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getCurrentObjectFilePath()>();
if v4 == null goto label3;
v5 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getGraalVmHomeFromRelativeLauncherPath(java.nio.file.Path)>(v4);
if v5 != null goto label2;
v5 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path getGraalVmHomeLibPolyglotFallBack(java.nio.file.Path)>(v4);
label2:
if v5 == null goto label3;
v6 = newarray (java.lang.Object)[2];
v6[0] = "GraalVM home found by object file as: ";
v6[1] = v5;
specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: void verbose(java.lang.Object[])>(v6);
return v5;
label3:
return null;
}
private static java.nio.file.Path getGraalVmHomeFromRelativeLauncherPath(java.nio.file.Path)
{
java.nio.file.Path v0, v1, v2, v3;
v0 := @parameter0: java.nio.file.Path;
v1 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path GRAAL_HOME_RELATIVE_PATH>;
if v1 == null goto label1;
v2 = <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path GRAAL_HOME_RELATIVE_PATH>;
v3 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path trimAbsolutePath(java.nio.file.Path,java.nio.file.Path)>(v0, v2);
if v3 == null goto label1;
return v3;
label1:
return null;
}
private static java.nio.file.Path getGraalVmHomeLibPolyglotFallBack(java.nio.file.Path)
{
java.lang.String v2, v3, v6, v7;
java.nio.file.Path v0, v1, v10, v12, v5, v9;
boolean v11, v4, v8;
v0 := @parameter0: java.nio.file.Path;
v1 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.Path getParent()>();
if v1 == null goto label1;
v2 = "polyglot";
v3 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.lang.String getFileName(java.nio.file.Path)>(v1);
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 != 0 goto label2;
label1:
return null;
label2:
v5 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path getParent()>();
if v5 == null goto label3;
v6 = "lib";
v7 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: java.lang.String getFileName(java.nio.file.Path)>(v5);
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 != 0 goto label4;
label3:
return null;
label4:
v9 = null;
v10 = interfaceinvoke v5.<java.nio.file.Path: java.nio.file.Path getParent()>();
if v10 == null goto label5;
v9 = v10;
label5:
if v9 == null goto label6;
v11 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: boolean isJdkHome(java.nio.file.Path)>(v9);
if v11 == 0 goto label6;
v12 = v9;
goto label7;
label6:
v12 = null;
label7:
return v12;
}
private static boolean isJdkHome(java.nio.file.Path)
{
java.nio.file.LinkOption[] v5;
java.lang.String[] v1;
java.nio.file.Path v0, v2, v3;
boolean v4, v6, v7, v8;
v0 := @parameter0: java.nio.file.Path;
v1 = newarray (java.lang.String)[1];
v1[0] = "javac";
v2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("bin", v1);
v3 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v2);
v4 = staticinvoke <org.graalvm.home.impl.DefaultHomeFinder: boolean isJreHome(java.nio.file.Path)>(v0);
if v4 == 0 goto label1;
v5 = newarray (java.nio.file.LinkOption)[0];
v6 = staticinvoke <java.nio.file.Files: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])>(v3, v5);
if v6 == 0 goto label1;
v7 = staticinvoke <java.nio.file.Files: boolean isExecutable(java.nio.file.Path)>(v3);
if v7 == 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
return v8;
}
private static boolean isJreHome(java.nio.file.Path)
{
java.nio.file.LinkOption[] v4;
java.lang.String[] v1;
java.nio.file.Path v0, v2, v3;
boolean v5, v6, v7;
v0 := @parameter0: java.nio.file.Path;
v1 = newarray (java.lang.String)[1];
v1[0] = "java";
v2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("bin", v1);
v3 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v2);
v4 = newarray (java.nio.file.LinkOption)[0];
v5 = staticinvoke <java.nio.file.Files: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])>(v3, v4);
if v5 == 0 goto label1;
v6 = staticinvoke <java.nio.file.Files: boolean isExecutable(java.nio.file.Path)>(v3);
if v6 == 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
}
private static java.nio.file.Path trimAbsolutePath(java.nio.file.Path, java.nio.file.Path)
{
java.nio.file.Path v0, v1, v2, v3, v4, v5;
boolean v6;
v0 := @parameter0: java.nio.file.Path;
v1 := @parameter1: java.nio.file.Path;
v2 = v1;
v3 = v0;
label1:
if v2 == null goto label5;
if v3 != null goto label2;
return null;
label2:
v4 = interfaceinvoke v3.<java.nio.file.Path: java.nio.file.Path getFileName()>();
if v4 == null goto label3;
v5 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path getFileName()>();
v6 = interfaceinvoke v4.<java.nio.file.Path: boolean equals(java.lang.Object)>(v5);
if v6 != 0 goto label4;
label3:
return null;
label4:
v3 = interfaceinvoke v3.<java.nio.file.Path: java.nio.file.Path getParent()>();
v2 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path getParent()>();
goto label1;
label5:
return v3;
}
private static java.nio.file.Path getCurrentObjectFilePath()
{
java.lang.String[] v3;
java.lang.String v1;
java.nio.file.Path v2;
org.graalvm.nativeimage.c.function.CEntryPointLiteral v0;
v0 = <org.graalvm.home.impl.VmLocatorSymbol: org.graalvm.nativeimage.c.function.CEntryPointLiteral SYMBOL>;
v1 = staticinvoke <org.graalvm.nativeimage.ProcessProperties: java.lang.String getObjectFile(org.graalvm.nativeimage.c.function.CEntryPointLiteral)>(v0);
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v3 = newarray (java.lang.String)[0];
v2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v1, v3);
label2:
return v2;
}
private static java.nio.file.Path getCurrentExecutablePath()
{
java.lang.String[] v2;
java.lang.String v0;
java.nio.file.Path v1;
v0 = staticinvoke <org.graalvm.nativeimage.ProcessProperties: java.lang.String getExecutableName()>();
if v0 != null goto label1;
v1 = null;
goto label2;
label1:
v2 = newarray (java.lang.String)[0];
v1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v0, v2);
label2:
return v1;
}
private static java.lang.String getFileName(java.nio.file.Path)
{
java.lang.String v2;
java.nio.file.Path v0, v1;
v0 := @parameter0: java.nio.file.Path;
v1 = interfaceinvoke v0.<java.nio.file.Path: java.nio.file.Path getFileName()>();
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = interfaceinvoke v1.<java.nio.file.Path: java.lang.String toString()>();
label2:
return v2;
}
private boolean isVerbose()
{
org.graalvm.home.impl.DefaultHomeFinder v0;
java.lang.Boolean v3;
java.lang.String v5;
boolean v1, v2, v4, v6, v7, v8;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 = staticinvoke <org.graalvm.nativeimage.ImageInfo: boolean inImageBuildtimeCode()>();
if v1 == 0 goto label1;
v2 = <org.graalvm.home.impl.DefaultHomeFinder: boolean STATIC_VERBOSE>;
return v2;
label1:
v3 = v0.<org.graalvm.home.impl.DefaultHomeFinder: java.lang.Boolean verbose>;
if v3 != null goto label5;
v4 = <org.graalvm.home.impl.DefaultHomeFinder: boolean STATIC_VERBOSE>;
if v4 != 0 goto label2;
v5 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("VERBOSE_GRAALVM_LOCATOR");
v6 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(v5);
if v6 == 0 goto label3;
label2:
v7 = 1;
goto label4;
label3:
v7 = 0;
label4:
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v7);
v0.<org.graalvm.home.impl.DefaultHomeFinder: java.lang.Boolean verbose> = v3;
label5:
v8 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
return v8;
}
private transient void verbose(java.lang.Object[])
{
java.io.PrintStream v7;
org.graalvm.home.impl.DefaultHomeFinder v0;
java.lang.Object[] v1;
int v4, v5;
java.lang.Object v6;
java.lang.StringBuilder v3;
java.lang.String v8;
boolean v2;
v0 := @this: org.graalvm.home.impl.DefaultHomeFinder;
v1 := @parameter0: java.lang.Object[];
v2 = specialinvoke v0.<org.graalvm.home.impl.DefaultHomeFinder: boolean isVerbose()>();
if v2 == 0 goto label3;
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = lengthof v1;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v1[v5];
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v6);
v5 = v5 + 1;
goto label1;
label2:
v7 = <java.lang.System: java.io.PrintStream err>;
v8 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v7.<java.io.PrintStream: void println(java.lang.String)>(v8);
label3:
return;
}
static void <clinit>()
{
java.util.Map v32;
java.nio.file.Path v12, v35, v8;
boolean v1, v16, v18, v19, v2, v20, v3;
java.util.Set v14;
java.lang.String[] v11, v34, v7;
java.util.HashMap v4;
int v10, v22, v24, v26, v27, v29, v30, v6;
java.lang.String v21, v23, v25, v28, v31, v33, v36, v5, v9;
java.util.Properties v13;
java.util.Iterator v15;
java.lang.Class v0;
java.lang.Object v17, v37;
v0 = class "Lorg/graalvm/home/impl/DefaultHomeFinder;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.graalvm.home.impl.DefaultHomeFinder: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("com.oracle.graalvm.locator.verbose");
<org.graalvm.home.impl.DefaultHomeFinder: boolean STATIC_VERBOSE> = v3;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
<org.graalvm.home.impl.DefaultHomeFinder: java.util.Map LANGUAGE_RELATIVE_HOMES> = v4;
v5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.graalvm.launcher.home");
if v5 == null goto label3;
v6 = virtualinvoke v5.<java.lang.String: int length()>();
if v6 <= 0 goto label3;
v7 = newarray (java.lang.String)[0];
v8 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v5, v7);
<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path FORCE_GRAAL_HOME> = v8;
goto label4;
label3:
<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path FORCE_GRAAL_HOME> = null;
label4:
v9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.graalvm.launcher.relative.home");
if v9 == null goto label5;
v10 = virtualinvoke v9.<java.lang.String: int length()>();
if v10 <= 0 goto label5;
v11 = newarray (java.lang.String)[0];
v12 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v9, v11);
<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path GRAAL_HOME_RELATIVE_PATH> = v12;
goto label6;
label5:
<org.graalvm.home.impl.DefaultHomeFinder: java.nio.file.Path GRAAL_HOME_RELATIVE_PATH> = null;
label6:
v13 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();
v14 = virtualinvoke v13.<java.util.Properties: java.util.Set keySet()>();
v15 = interfaceinvoke v14.<java.util.Set: java.util.Iterator iterator()>();
label7:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label8;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = v17 instanceof java.lang.String;
if v18 == 0 goto label7;
v19 = virtualinvoke v17.<java.lang.String: boolean startsWith(java.lang.String)>("org.graalvm.launcher.relative.");
if v19 == 0 goto label7;
v20 = virtualinvoke v17.<java.lang.String: boolean endsWith(java.lang.String)>(".home");
if v20 == 0 goto label7;
v21 = "org.graalvm.launcher.relative.";
v22 = virtualinvoke v21.<java.lang.String: int length()>();
v23 = virtualinvoke v17.<java.lang.String: java.lang.String substring(int)>(v22);
v24 = virtualinvoke v23.<java.lang.String: int length()>();
v25 = ".home";
v26 = virtualinvoke v25.<java.lang.String: int length()>();
if v24 <= v26 goto label7;
v27 = virtualinvoke v23.<java.lang.String: int length()>();
v28 = ".home";
v29 = virtualinvoke v28.<java.lang.String: int length()>();
v30 = v27 - v29;
v31 = virtualinvoke v23.<java.lang.String: java.lang.String substring(int,int)>(0, v30);
v32 = <org.graalvm.home.impl.DefaultHomeFinder: java.util.Map LANGUAGE_RELATIVE_HOMES>;
v33 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(v17);
v34 = newarray (java.lang.String)[0];
v35 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v33, v34);
interfaceinvoke v32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v31, v35);
goto label7;
label8:
v36 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.graalvm.version");
<org.graalvm.home.impl.DefaultHomeFinder: java.lang.String GRAALVM_VERSION> = v36;
v37 = new java.lang.Object;
specialinvoke v37.<java.lang.Object: void <init>()>();
<org.graalvm.home.impl.DefaultHomeFinder: java.lang.Object HOME_NOT_FOUND> = v37;
return;
}
}