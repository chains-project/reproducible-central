public abstract class org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractHostAccess extends org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractDispatchClass
{
protected void <init>(org.graalvm.polyglot.impl.AbstractPolyglotImpl)
{
org.graalvm.polyglot.impl.AbstractPolyglotImpl v1;
org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractHostAccess v0;
v0 := @this: org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractHostAccess;
v1 := @parameter0: org.graalvm.polyglot.impl.AbstractPolyglotImpl;
specialinvoke v0.<org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractDispatchClass: void <init>()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
return;
}
public abstract java.lang.Object toGuestValue(java.lang.Object, java.lang.Object);
public abstract java.util.List toList(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.reflect.Type);
public abstract java.util.Map toMap(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type);
public abstract java.util.Map$Entry toMapEntry(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type);
public abstract java.util.function.Function toFunction(java.lang.Object, java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type);
public abstract java.lang.Object toObjectProxy(java.lang.Object, java.lang.Class, java.lang.Object) throws java.lang.IllegalArgumentException;
public abstract java.lang.Object toFunctionProxy(java.lang.Object, java.lang.Class, java.lang.Object);
public abstract java.lang.Iterable toIterable(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.reflect.Type);
public abstract java.util.Iterator toIterator(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.reflect.Type);
public abstract org.graalvm.polyglot.PolyglotException toPolyglotException(java.lang.Object, java.lang.Throwable);
public abstract org.graalvm.polyglot.Value toValue(java.lang.Object, java.lang.Object);
public abstract java.lang.String getValueInfo(java.lang.Object, java.lang.Object);
public abstract org.graalvm.polyglot.Value[] toValues(java.lang.Object, java.lang.Object[], int);
public abstract org.graalvm.polyglot.Value[] toValues(java.lang.Object, java.lang.Object[]);
public abstract void rethrowPolyglotException(java.lang.Object, org.graalvm.polyglot.PolyglotException);
public abstract java.lang.RuntimeException toEngineException(java.lang.RuntimeException);
public abstract boolean isEngineException(java.lang.RuntimeException);
public abstract java.lang.RuntimeException unboxEngineException(java.lang.RuntimeException);
}