final class org.jboss.logging.Slf4jLogger extends org.jboss.logging.Logger
{
private static final long serialVersionUID;
private final org.slf4j.Logger logger;
void <init>(java.lang.String, org.slf4j.Logger)
{
org.jboss.logging.Slf4jLogger v0;
java.lang.String v1;
org.slf4j.Logger v2;
v0 := @this: org.jboss.logging.Slf4jLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.slf4j.Logger;
specialinvoke v0.<org.jboss.logging.Logger: void <init>(java.lang.String)>(v1);
v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger> = v2;
return;
}
public boolean isEnabled(org.jboss.logging.Logger$Level)
{
org.slf4j.Logger v3, v6;
org.jboss.logging.Slf4jLogger v0;
org.jboss.logging.Logger$Level v1, v2, v5;
boolean v4, v7, v8;
v0 := @this: org.jboss.logging.Slf4jLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level TRACE>;
if v1 != v2 goto label1;
v3 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
v4 = interfaceinvoke v3.<org.slf4j.Logger: boolean isTraceEnabled()>();
return v4;
label1:
v5 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level DEBUG>;
if v1 != v5 goto label2;
v6 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
v7 = interfaceinvoke v6.<org.slf4j.Logger: boolean isDebugEnabled()>();
return v7;
label2:
v8 = specialinvoke v0.<org.jboss.logging.Slf4jLogger: boolean infoOrHigherEnabled(org.jboss.logging.Logger$Level)>(v1);
return v8;
}
private boolean infoOrHigherEnabled(org.jboss.logging.Logger$Level)
{
org.slf4j.Logger v10, v3, v6;
org.jboss.logging.Slf4jLogger v0;
org.jboss.logging.Logger$Level v1, v2, v5, v8, v9;
boolean v11, v4, v7;
v0 := @this: org.jboss.logging.Slf4jLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level INFO>;
if v1 != v2 goto label1;
v3 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
v4 = interfaceinvoke v3.<org.slf4j.Logger: boolean isInfoEnabled()>();
return v4;
label1:
v5 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level WARN>;
if v1 != v5 goto label2;
v6 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
v7 = interfaceinvoke v6.<org.slf4j.Logger: boolean isWarnEnabled()>();
return v7;
label2:
v8 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level ERROR>;
if v1 == v8 goto label3;
v9 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level FATAL>;
if v1 != v9 goto label4;
label3:
v10 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
v11 = interfaceinvoke v10.<org.slf4j.Logger: boolean isErrorEnabled()>();
return v11;
label4:
return 1;
}
protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v22, v5;
java.lang.Object[] v4;
int v7;
java.lang.String v10, v2, v8, v9;
boolean v6;
org.slf4j.Logger v12, v14, v17, v19, v21;
org.jboss.logging.Slf4jLogger v0;
org.jboss.logging.Logger$Level v1, v11, v13, v15, v16, v18, v20;
java.lang.Object v3;
v0 := @this: org.jboss.logging.Slf4jLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = virtualinvoke v0.<org.jboss.logging.Slf4jLogger: boolean isEnabled(org.jboss.logging.Logger$Level)>(v1);
if v6 == 0 goto label12;
label01:
if v4 == null goto label02;
v7 = lengthof v4;
if v7 != 0 goto label03;
label02:
v8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
goto label04;
label03:
v9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
v8 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(v9, v4);
label04:
v10 = v8;
v11 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level INFO>;
if v1 != v11 goto label05;
v12 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>(v8, v5);
goto label12;
label05:
v13 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level WARN>;
if v1 != v13 goto label06;
v14 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(v8, v5);
goto label12;
label06:
v15 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level ERROR>;
if v1 == v15 goto label07;
v16 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level FATAL>;
if v1 != v16 goto label08;
label07:
v17 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(v10, v5);
goto label12;
label08:
v18 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level DEBUG>;
if v1 != v18 goto label09;
v19 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(v8, v5);
goto label12;
label09:
v20 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level TRACE>;
if v1 != v20 goto label12;
v21 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(v8, v5);
label10:
goto label12;
label11:
v22 := @caughtexception;
label12:
return;
catch java.lang.Throwable from label01 to label10 with label11;
}
protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v21, v5;
java.lang.Object[] v4, v7;
java.lang.String v2, v3, v8, v9;
boolean v6;
org.slf4j.Logger v11, v13, v16, v18, v20;
org.jboss.logging.Slf4jLogger v0;
org.jboss.logging.Logger$Level v1, v10, v12, v14, v15, v17, v19;
v0 := @this: org.jboss.logging.Slf4jLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = virtualinvoke v0.<org.jboss.logging.Slf4jLogger: boolean isEnabled(org.jboss.logging.Logger$Level)>(v1);
if v6 == 0 goto label11;
label01:
if v4 != null goto label02;
v7 = newarray (java.lang.Object)[0];
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v3, v7);
goto label03;
label02:
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v3, v4);
label03:
v9 = v8;
v10 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level INFO>;
if v1 != v10 goto label04;
v11 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>(v8, v5);
goto label11;
label04:
v12 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level WARN>;
if v1 != v12 goto label05;
v13 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(v8, v5);
goto label11;
label05:
v14 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level ERROR>;
if v1 == v14 goto label06;
v15 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level FATAL>;
if v1 != v15 goto label07;
label06:
v16 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(v9, v5);
goto label11;
label07:
v17 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level DEBUG>;
if v1 != v17 goto label08;
v18 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(v8, v5);
goto label11;
label08:
v19 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level TRACE>;
if v1 != v19 goto label11;
v20 = v0.<org.jboss.logging.Slf4jLogger: org.slf4j.Logger logger>;
interfaceinvoke v20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(v8, v5);
label09:
goto label11;
label10:
v21 := @caughtexception;
label11:
return;
catch java.lang.Throwable from label01 to label09 with label10;
}
}