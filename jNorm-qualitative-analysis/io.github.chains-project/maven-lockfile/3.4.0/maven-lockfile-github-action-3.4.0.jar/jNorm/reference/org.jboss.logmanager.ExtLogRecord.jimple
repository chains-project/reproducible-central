public class org.jboss.logmanager.ExtLogRecord extends java.util.logging.LogRecord
{
private static final long serialVersionUID;
private final transient java.lang.String loggerClassName;
private transient boolean calculateCaller;
private java.lang.String ndc;
private org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle;
private java.util.Map mdcCopy;
private int sourceLineNumber;
private java.lang.String sourceFileName;
private java.lang.String threadName;
private java.lang.String hostName;
private java.lang.String processName;
private long processId;
private java.lang.String sourceModuleName;
private java.lang.String sourceModuleVersion;
private java.lang.Object marker;
public void <init>(java.util.logging.Level, java.lang.String, java.lang.String)
{
java.lang.String v2, v3;
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v4;
java.util.logging.Level v1;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void <init>(java.util.logging.Level,java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle,java.lang.String)>(v1, v2, v4, v3);
return;
}
public void <init>(java.util.logging.Level, java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle, java.lang.String)
{
long v12;
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v3, v6;
java.util.logging.Level v1;
java.lang.Thread v8;
int v5;
java.lang.String v10, v11, v2, v4, v7, v9;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.jboss.logmanager.ExtLogRecord$FormatStyle;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>(v1, v2);
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 1;
v5 = (int) -1;
v0.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber> = v5;
v0.<org.jboss.logmanager.ExtLogRecord: long processId> = -1L;
if v3 != null goto label1;
v6 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
goto label2;
label1:
v6 = v3;
label2:
v0.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle> = v6;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String loggerClassName> = v4;
v7 = staticinvoke <org.jboss.logmanager.NDC: java.lang.String get()>();
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String ndc> = v7;
v8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v9 = virtualinvoke v8.<java.lang.Thread: java.lang.String getName()>();
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String threadName> = v9;
v10 = staticinvoke <org.wildfly.common.net.HostName: java.lang.String getQualifiedHostName()>();
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String hostName> = v10;
v11 = staticinvoke <org.wildfly.common.os.Process: java.lang.String getProcessName()>();
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String processName> = v11;
v12 = staticinvoke <org.wildfly.common.os.Process: long getProcessId()>();
v0.<org.jboss.logmanager.ExtLogRecord: long processId> = v12;
return;
}
public void <init>(org.jboss.logmanager.ExtLogRecord)
{
java.lang.Throwable v12;
java.lang.Object[] v7;
long v10, v27, v6;
org.jboss.logmanager.ExtLogRecord v0, v1;
org.jboss.logmanager.ExtLogRecord$FormatStyle v20;
java.util.logging.Level v2;
java.util.ResourceBundle v8;
java.util.Map v21;
int v11, v17, v4;
java.lang.String v14, v15, v16, v18, v19, v22, v23, v24, v25, v26, v3, v5, v9;
boolean v13;
java.lang.Object v28;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.util.logging.Level getLevel()>();
v3 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getMessage()>();
specialinvoke v0.<java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>(v2, v3);
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 1;
v4 = (int) -1;
v0.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber> = v4;
v0.<org.jboss.logmanager.ExtLogRecord: long processId> = -1L;
v5 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getLoggerName()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setLoggerName(java.lang.String)>(v5);
v6 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: long getMillis()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setMillis(long)>(v6);
v7 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.Object[] getParameters()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setParameters(java.lang.Object[])>(v7);
v8 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.util.ResourceBundle getResourceBundle()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setResourceBundle(java.util.ResourceBundle)>(v8);
v9 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getResourceBundleName()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setResourceBundleName(java.lang.String)>(v9);
v10 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: long getSequenceNumber()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSequenceNumber(long)>(v10);
v11 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: int getThreadID()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setThreadID(int)>(v11);
v12 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.Throwable getThrown()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setThrown(java.lang.Throwable)>(v12);
v13 = v1.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller>;
if v13 != 0 goto label1;
v14 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getSourceClassName()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(v14);
v15 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getSourceMethodName()>();
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(v15);
v16 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceFileName>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceFileName> = v16;
v17 = v1.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber>;
v0.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber> = v17;
v18 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleName>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleName> = v18;
v19 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleVersion>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleVersion> = v19;
label1:
v20 = v1.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle>;
v0.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle> = v20;
v21 = v1.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy> = v21;
v22 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String ndc>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String ndc> = v22;
v23 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String loggerClassName>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String loggerClassName> = v23;
v24 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String threadName>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String threadName> = v24;
v25 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String hostName>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String hostName> = v25;
v26 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String processName>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String processName> = v26;
v27 = v1.<org.jboss.logmanager.ExtLogRecord: long processId>;
v0.<org.jboss.logmanager.ExtLogRecord: long processId> = v27;
v28 = v1.<org.jboss.logmanager.ExtLogRecord: java.lang.Object marker>;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.Object marker> = v28;
return;
}
public static org.jboss.logmanager.ExtLogRecord wrap(java.util.logging.LogRecord)
{
java.util.logging.LogRecord v0;
org.jboss.logmanager.WrappedExtLogRecord v2;
boolean v1;
v0 := @parameter0: java.util.logging.LogRecord;
if v0 != null goto label1;
return null;
label1:
v1 = v0 instanceof org.jboss.logmanager.ExtLogRecord;
if v1 == 0 goto label2;
return v0;
label2:
v2 = new org.jboss.logmanager.WrappedExtLogRecord;
specialinvoke v2.<org.jboss.logmanager.WrappedExtLogRecord: void <init>(java.util.logging.LogRecord)>(v0);
return v2;
}
private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
{
java.io.ObjectOutputStream v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.io.ObjectOutputStream;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void copyAll()>();
virtualinvoke v1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
return;
}
private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
{
org.jboss.logmanager.FastCopyHashMap v6;
java.io.ObjectInputStream v1;
long v14;
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v4;
int v8, v9;
java.io.ObjectInputStream$GetField v2;
java.lang.Object v10, v11, v12, v13, v15, v16, v17, v3, v5, v7;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.io.ObjectInputStream;
v2 = virtualinvoke v1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();
v3 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("ndc", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String ndc> = v3;
v4 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
v5 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("formatStyle", v4);
v0.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle> = v5;
v6 = new org.jboss.logmanager.FastCopyHashMap;
specialinvoke v6.<org.jboss.logmanager.FastCopyHashMap: void <init>()>();
v7 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("mdcCopy", v6);
v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy> = v7;
v8 = (int) -1;
v9 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("sourceLineNumber", v8);
v0.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber> = v9;
v10 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("sourceFileName", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceFileName> = v10;
v11 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("threadName", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String threadName> = v11;
v12 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("hostName", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String hostName> = v12;
v13 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("processName", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String processName> = v13;
v14 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: long get(java.lang.String,long)>("processId", -1L);
v0.<org.jboss.logmanager.ExtLogRecord: long processId> = v14;
v15 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("sourceModuleName", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleName> = v15;
v16 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("sourceModuleVersion", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleVersion> = v16;
v17 = virtualinvoke v2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("marker", null);
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.Object marker> = v17;
return;
}
public void disableCallerCalculation()
{
org.jboss.logmanager.ExtLogRecord v0;
boolean v1;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller>;
if v1 == 0 goto label1;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setUnknownCaller()>();
label1:
return;
}
public void copyAll()
{
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void copyMdc()>();
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
return;
}
public void copyMdc()
{
org.jboss.logmanager.ExtLogRecord v0;
java.util.Map v1, v2;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
if v1 != null goto label1;
v2 = staticinvoke <org.jboss.logmanager.MDC: java.util.Map copyObject()>();
v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy> = v2;
label1:
return;
}
public java.lang.String getMdc(java.lang.String)
{
java.util.Map v2;
java.lang.Object v4;
java.lang.String v1, v3, v5;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
if v2 != null goto label1;
v3 = staticinvoke <org.jboss.logmanager.MDC: java.lang.String get(java.lang.String)>(v1);
return v3;
label1:
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v4 != null goto label2;
v5 = null;
goto label3;
label2:
v5 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
label3:
return v5;
}
public java.util.Map getMdcCopy()
{
org.jboss.logmanager.FastCopyHashMap v3;
java.util.Iterator v6;
java.util.Set v5;
org.jboss.logmanager.ExtLogRecord v0;
java.util.Map v1, v2, v4;
java.lang.Object v10, v8, v9;
java.lang.String v11;
boolean v7;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
if v1 != null goto label1;
v2 = staticinvoke <org.jboss.logmanager.MDC: java.util.Map copyObject()>();
v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy> = v2;
label1:
v3 = new org.jboss.logmanager.FastCopyHashMap;
specialinvoke v3.<org.jboss.logmanager.FastCopyHashMap: void <init>()>();
v4 = v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
v5 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
v6 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label5;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = interfaceinvoke v8.<java.util.Map$Entry: java.lang.Object getKey()>();
v10 = interfaceinvoke v8.<java.util.Map$Entry: java.lang.Object getValue()>();
if v10 != null goto label3;
v11 = null;
goto label4;
label3:
v11 = virtualinvoke v10.<java.lang.Object: java.lang.String toString()>();
label4:
virtualinvoke v3.<org.jboss.logmanager.FastCopyHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v11);
goto label2;
label5:
return v3;
}
public java.lang.String putMdc(java.lang.String, java.lang.String)
{
java.util.Map v3;
java.lang.Object v4;
java.lang.String v1, v2, v5;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void copyMdc()>();
v3 = v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
if v4 != null goto label1;
v5 = null;
goto label2;
label1:
v5 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
label2:
return v5;
}
public java.lang.String removeMdc(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1, v4;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void copyMdc()>();
v2 = v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = null;
goto label2;
label1:
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
label2:
return v4;
}
public void setMdc(java.util.Map)
{
org.jboss.logmanager.FastCopyHashMap v2;
java.util.Iterator v4;
java.util.Set v3;
org.jboss.logmanager.ExtLogRecord v0;
java.util.Map v1;
java.lang.Object v6, v7, v8;
java.lang.String v9;
boolean v5;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.util.Map;
v2 = new org.jboss.logmanager.FastCopyHashMap;
specialinvoke v2.<org.jboss.logmanager.FastCopyHashMap: void <init>()>();
v3 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
if v7 == null goto label1;
if v8 == null goto label1;
v9 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v2.<org.jboss.logmanager.FastCopyHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v8);
goto label1;
label2:
v0.<org.jboss.logmanager.ExtLogRecord: java.util.Map mdcCopy> = v2;
return;
}
public java.lang.String getNdc()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String ndc>;
return v1;
}
public void setNdc(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String ndc> = v1;
return;
}
public java.lang.String getLoggerClassName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String loggerClassName>;
return v1;
}
public org.jboss.logmanager.ExtLogRecord$FormatStyle getFormatStyle()
{
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v1;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle>;
return v1;
}
private void calculateCaller()
{
org.jboss.logmanager.ExtLogRecord v0;
boolean v1;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller>;
if v1 != 0 goto label1;
return;
label1:
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
staticinvoke <org.jboss.logmanager.JDKSpecific: void calculateCaller(org.jboss.logmanager.ExtLogRecord)>(v0);
return;
}
void setUnknownCaller()
{
int v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceClassName(java.lang.String)>(null);
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceMethodName(java.lang.String)>(null);
v1 = (int) -1;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceLineNumber(int)>(v1);
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceFileName(java.lang.String)>(null);
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceModuleName(java.lang.String)>(null);
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setSourceModuleVersion(java.lang.String)>(null);
return;
}
public int getSourceLineNumber()
{
int v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
v1 = v0.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber>;
return v1;
}
public void setSourceLineNumber(int)
{
int v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: int;
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
v0.<org.jboss.logmanager.ExtLogRecord: int sourceLineNumber> = v1;
return;
}
public java.lang.String getSourceFileName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceFileName>;
return v1;
}
public void setSourceFileName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceFileName> = v1;
return;
}
public java.lang.String getSourceClassName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
v1 = specialinvoke v0.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();
return v1;
}
public void setSourceClassName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
specialinvoke v0.<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>(v1);
return;
}
public java.lang.String getSourceMethodName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
v1 = specialinvoke v0.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();
return v1;
}
public void setSourceMethodName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
specialinvoke v0.<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>(v1);
return;
}
public java.lang.String getSourceModuleName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleName>;
return v1;
}
public void setSourceModuleName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleName> = v1;
return;
}
public java.lang.String getSourceModuleVersion()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
specialinvoke v0.<org.jboss.logmanager.ExtLogRecord: void calculateCaller()>();
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleVersion>;
return v1;
}
public void setSourceModuleVersion(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: boolean calculateCaller> = 0;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String sourceModuleVersion> = v1;
return;
}
public java.lang.String getFormattedMessage()
{
java.lang.Object[] v4;
java.util.MissingResourceException v3;
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v7;
java.util.ResourceBundle v1;
int[] v6;
int v11, v5, v8, v9;
java.lang.String v10, v12, v2;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: java.util.ResourceBundle getResourceBundle()>();
v2 = virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String getMessage()>();
if v2 != null goto label01;
return null;
label01:
if v1 == null goto label05;
label02:
v2 = virtualinvoke v1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(v2);
label03:
goto label05;
label04:
v3 := @caughtexception;
label05:
v4 = virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: java.lang.Object[] getParameters()>();
if v4 == null goto label06;
v5 = lengthof v4;
if v5 != 0 goto label07;
label06:
return v2;
label07:
v6 = <org.jboss.logmanager.ExtLogRecord$1: int[] $SwitchMap$org$jboss$logmanager$ExtLogRecord$FormatStyle>;
v7 = v0.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle>;
v8 = virtualinvoke v7.<org.jboss.logmanager.ExtLogRecord$FormatStyle: int ordinal()>();
v9 = v6[v8];
lookupswitch(v9)
{
case 1: goto label08;
case 2: goto label09;
default: goto label12;
};
label08:
v10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v2, v4);
return v10;
label09:
v11 = virtualinvoke v2.<java.lang.String: int indexOf(int)>(123);
if v11 < 0 goto label10;
v12 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(v2, v4);
goto label11;
label10:
v12 = v2;
label11:
return v12;
label12:
return v2;
catch java.util.MissingResourceException from label02 to label03 with label04;
}
public java.lang.String getResourceKey()
{
java.util.ResourceBundle v3;
java.lang.String v1, v2;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String getMessage()>();
if v1 != null goto label1;
return null;
label1:
v2 = virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String getResourceBundleName()>();
if v2 != null goto label2;
v3 = virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: java.util.ResourceBundle getResourceBundle()>();
if v3 != null goto label2;
return null;
label2:
return v1;
}
public java.lang.String getThreadName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String threadName>;
return v1;
}
public void setThreadName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String threadName> = v1;
return;
}
public java.lang.String getHostName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String hostName>;
return v1;
}
public void setHostName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String hostName> = v1;
return;
}
public java.lang.String getProcessName()
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String processName>;
return v1;
}
public void setProcessName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.String processName> = v1;
return;
}
public long getProcessId()
{
long v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: long processId>;
return v1;
}
public void setProcessId(long)
{
long v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: long;
v0.<org.jboss.logmanager.ExtLogRecord: long processId> = v1;
return;
}
public void setMessage(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v2;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v2 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
virtualinvoke v0.<org.jboss.logmanager.ExtLogRecord: void setMessage(java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle)>(v1, v2);
return;
}
public void setMessage(java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
org.jboss.logmanager.ExtLogRecord$FormatStyle v2, v3;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.jboss.logmanager.ExtLogRecord$FormatStyle;
if v2 != null goto label1;
v3 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
goto label2;
label1:
v3 = v2;
label2:
v0.<org.jboss.logmanager.ExtLogRecord: org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle> = v3;
specialinvoke v0.<java.util.logging.LogRecord: void setMessage(java.lang.String)>(v1);
return;
}
public void setParameters(java.lang.Object[])
{
java.lang.Object[] v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.Object[];
specialinvoke v0.<java.util.logging.LogRecord: void setParameters(java.lang.Object[])>(v1);
return;
}
public void setResourceBundle(java.util.ResourceBundle)
{
java.util.ResourceBundle v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.util.ResourceBundle;
specialinvoke v0.<java.util.logging.LogRecord: void setResourceBundle(java.util.ResourceBundle)>(v1);
return;
}
public void setResourceBundleName(java.lang.String)
{
java.lang.String v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.util.logging.LogRecord: void setResourceBundleName(java.lang.String)>(v1);
return;
}
public void setMarker(java.lang.Object)
{
java.lang.Object v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 := @parameter0: java.lang.Object;
v0.<org.jboss.logmanager.ExtLogRecord: java.lang.Object marker> = v1;
return;
}
public java.lang.Object getMarker()
{
java.lang.Object v1;
org.jboss.logmanager.ExtLogRecord v0;
v0 := @this: org.jboss.logmanager.ExtLogRecord;
v1 = v0.<org.jboss.logmanager.ExtLogRecord: java.lang.Object marker>;
return v1;
}
}