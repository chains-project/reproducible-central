public final class org.jboss.logmanager.LogManager extends java.util.logging.LogManager
{
public void <init>()
{
org.jboss.logmanager.LogManager v0;
v0 := @this: org.jboss.logmanager.LogManager;
specialinvoke v0.<java.util.logging.LogManager: void <init>()>();
return;
}
public void readConfiguration() throws java.io.IOException, java.lang.SecurityException
{
org.jboss.logmanager.LogManager v0;
v0 := @this: org.jboss.logmanager.LogManager;
return;
}
public void readConfiguration(java.io.InputStream) throws java.io.IOException, java.lang.SecurityException
{
org.jboss.logmanager.LogManager v0;
java.io.InputStream v1;
v0 := @this: org.jboss.logmanager.LogManager;
v1 := @parameter0: java.io.InputStream;
return;
}
public void addPropertyChangeListener(java.beans.PropertyChangeListener)
{
org.jboss.logmanager.LogManager v0;
java.beans.PropertyChangeListener v1;
v0 := @this: org.jboss.logmanager.LogManager;
v1 := @parameter0: java.beans.PropertyChangeListener;
return;
}
public void removePropertyChangeListener(java.beans.PropertyChangeListener)
{
org.jboss.logmanager.LogManager v0;
java.beans.PropertyChangeListener v1;
v0 := @this: org.jboss.logmanager.LogManager;
v1 := @parameter0: java.beans.PropertyChangeListener;
return;
}
public java.lang.String getProperty(java.lang.String)
{
org.jboss.logmanager.LogManager v0;
java.lang.String v1;
v0 := @this: org.jboss.logmanager.LogManager;
v1 := @parameter0: java.lang.String;
return null;
}
public void reset()
{
org.jboss.logmanager.LogManager v0;
v0 := @this: org.jboss.logmanager.LogManager;
return;
}
public java.util.Enumeration getLoggerNames()
{
org.jboss.logmanager.LogContext v1;
org.jboss.logmanager.LogManager v0;
java.util.Enumeration v2;
v0 := @this: org.jboss.logmanager.LogManager;
v1 = staticinvoke <org.jboss.logmanager.LogContext: org.jboss.logmanager.LogContext getInstance()>();
v2 = virtualinvoke v1.<org.jboss.logmanager.LogContext: java.util.Enumeration getLoggerNames()>();
return v2;
}
public boolean addLogger(java.util.logging.Logger)
{
org.jboss.logmanager.LogManager v0;
java.util.logging.Logger v1;
v0 := @this: org.jboss.logmanager.LogManager;
v1 := @parameter0: java.util.logging.Logger;
return 0;
}
public org.jboss.logmanager.Logger getLogger(java.lang.String)
{
org.jboss.logmanager.Logger v3;
org.jboss.logmanager.LogContext v2;
org.jboss.logmanager.LogManager v0;
java.lang.String v1;
v0 := @this: org.jboss.logmanager.LogManager;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <org.jboss.logmanager.LogContext: org.jboss.logmanager.LogContext getInstance()>();
v3 = virtualinvoke v2.<org.jboss.logmanager.LogContext: org.jboss.logmanager.Logger getLogger(java.lang.String)>(v1);
return v3;
}
}