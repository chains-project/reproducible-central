public class org.jboss.logmanager.PropertyValues extends java.lang.Object
{
private static final int KEY;
private static final int VALUE;
public void <init>()
{
org.jboss.logmanager.PropertyValues v0;
v0 := @this: org.jboss.logmanager.PropertyValues;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.Map stringToMap(java.lang.String)
{
java.lang.IllegalStateException v13, v17, v24;
java.util.LinkedHashMap v3;
byte v7;
java.util.Map v2, v30;
int v11, v15, v19, v20, v25, v26, v8, v9;
java.lang.String v0, v14, v18, v21, v22, v23, v27, v28, v29;
boolean v1;
char v10, v12, v16;
char[] v6;
java.lang.StringBuilder v4, v5;
v0 := @parameter0: java.lang.String;
if v0 == null goto label01;
v1 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v1 == 0 goto label02;
label01:
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
return v2;
label02:
v3 = new java.util.LinkedHashMap;
specialinvoke v3.<java.util.LinkedHashMap: void <init>()>();
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
v5 = new java.lang.StringBuilder;
specialinvoke v5.<java.lang.StringBuilder: void <init>()>();
v6 = virtualinvoke v0.<java.lang.String: char[] toCharArray()>();
v7 = 0;
v8 = 0;
label03:
v9 = lengthof v6;
if v8 >= v9 goto label21;
v10 = v6[v8];
lookupswitch(v7)
{
case 0: goto label04;
case 1: goto label10;
default: goto label19;
};
label04:
lookupswitch(v10)
{
case 61: goto label08;
case 92: goto label05;
default: goto label09;
};
label05:
v11 = lengthof v6;
v8 = v8 + 1;
if v11 <= v8 goto label07;
v12 = v6[v8];
if v12 == 61 goto label06;
if v12 != 92 goto label07;
label06:
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v12);
goto label20;
label07:
v13 = new java.lang.IllegalStateException;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Escape character found at invalid position \u0001. Only characters \'=\' and \'\\\' need to be escaped for a key.");
specialinvoke v13.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v14);
throw v13;
label08:
v7 = 1;
goto label20;
label09:
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v10);
goto label20;
label10:
lookupswitch(v10)
{
case 44: goto label14;
case 92: goto label11;
default: goto label18;
};
label11:
v15 = lengthof v6;
v8 = v8 + 1;
if v15 <= v8 goto label13;
v16 = v6[v8];
if v16 == 44 goto label12;
if v16 != 92 goto label13;
label12:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v16);
goto label20;
label13:
v17 = new java.lang.IllegalStateException;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Escape character found at invalid position \u0001. Only characters \',\' and \'\\\' need to be escaped for a value.");
specialinvoke v17.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v18);
throw v17;
label14:
v19 = virtualinvoke v4.<java.lang.StringBuilder: int length()>();
if v19 <= 0 goto label17;
v20 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v20 != 0 goto label15;
v21 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v21, null);
goto label16;
label15:
v22 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
v23 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v22, v23);
label16:
virtualinvoke v4.<java.lang.StringBuilder: void setLength(int)>(0);
label17:
virtualinvoke v5.<java.lang.StringBuilder: void setLength(int)>(0);
v7 = 0;
goto label20;
label18:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v10);
goto label20;
label19:
v24 = new java.lang.IllegalStateException;
specialinvoke v24.<java.lang.IllegalStateException: void <init>()>();
throw v24;
label20:
v8 = v8 + 1;
goto label03;
label21:
v25 = virtualinvoke v4.<java.lang.StringBuilder: int length()>();
if v25 <= 0 goto label23;
v26 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v26 != 0 goto label22;
v27 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v27, null);
goto label23;
label22:
v28 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
v29 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v28, v29);
label23:
v30 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v3);
return v30;
}
public static java.util.EnumMap stringToEnumMap(java.lang.Class, java.lang.String)
{
java.lang.Class v0;
java.lang.String v1;
java.util.EnumMap v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.jboss.logmanager.PropertyValues: java.util.EnumMap stringToEnumMap(java.lang.Class,java.lang.String,boolean)>(v0, v1, 1);
return v2;
}
public static java.util.EnumMap stringToEnumMap(java.lang.Class, java.lang.String, boolean)
{
java.lang.IllegalStateException v15, v24;
byte v8;
java.lang.Enum v20, v22, v28, v30;
boolean v2, v4;
java.util.EnumMap v3;
java.lang.StringBuilder v5, v6;
int v10, v13, v17, v18, v25, v26, v9;
java.lang.String v1, v16, v19, v21, v23, v27, v29, v31;
char v11, v12, v14;
char[] v7;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 = new java.util.EnumMap;
specialinvoke v3.<java.util.EnumMap: void <init>(java.lang.Class)>(v0);
if v1 == null goto label01;
v4 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v4 == 0 goto label02;
label01:
return v3;
label02:
v5 = new java.lang.StringBuilder;
specialinvoke v5.<java.lang.StringBuilder: void <init>()>();
v6 = new java.lang.StringBuilder;
specialinvoke v6.<java.lang.StringBuilder: void <init>()>();
v7 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v8 = 0;
v9 = 0;
label03:
v10 = lengthof v7;
if v9 >= v10 goto label20;
v11 = v7[v9];
lookupswitch(v8)
{
case 0: goto label04;
case 1: goto label09;
default: goto label18;
};
label04:
lookupswitch(v11)
{
case 45: goto label06;
case 61: goto label05;
default: goto label07;
};
label05:
v8 = 1;
goto label19;
label06:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
goto label19;
label07:
if v2 == 0 goto label08;
v12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(v11);
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v12);
goto label19;
label08:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v11);
goto label19;
label09:
lookupswitch(v11)
{
case 44: goto label13;
case 92: goto label10;
default: goto label17;
};
label10:
v13 = lengthof v7;
v9 = v9 + 1;
if v13 <= v9 goto label12;
v14 = v7[v9];
if v14 == 44 goto label11;
if v14 != 92 goto label12;
label11:
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v14);
goto label19;
label12:
v15 = new java.lang.IllegalStateException;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Escape character found at invalid position \u0001. Only characters \',\' and \'\\\' need to be escaped for a value.");
specialinvoke v15.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v16);
throw v15;
label13:
v17 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v17 <= 0 goto label16;
v18 = virtualinvoke v6.<java.lang.StringBuilder: int length()>();
if v18 != 0 goto label14;
v19 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
v20 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v0, v19);
virtualinvoke v3.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>(v20, null);
goto label15;
label14:
v21 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
v22 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v0, v21);
v23 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v3.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>(v22, v23);
label15:
virtualinvoke v5.<java.lang.StringBuilder: void setLength(int)>(0);
label16:
virtualinvoke v6.<java.lang.StringBuilder: void setLength(int)>(0);
v8 = 0;
goto label19;
label17:
virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v11);
goto label19;
label18:
v24 = new java.lang.IllegalStateException;
specialinvoke v24.<java.lang.IllegalStateException: void <init>()>();
throw v24;
label19:
v9 = v9 + 1;
goto label03;
label20:
v25 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v25 <= 0 goto label22;
v26 = virtualinvoke v6.<java.lang.StringBuilder: int length()>();
if v26 != 0 goto label21;
v27 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
v28 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v0, v27);
virtualinvoke v3.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>(v28, null);
goto label22;
label21:
v29 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
v30 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v0, v29);
v31 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v3.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>(v30, v31);
label22:
return v3;
}
public static java.lang.String mapToString(java.util.Map)
{
java.util.Map v0;
int v5, v6;
java.lang.String v12, v15, v3;
boolean v1, v14, v2, v9;
java.util.Iterator v8;
java.util.Set v7;
java.lang.Object v10, v11, v13;
java.lang.StringBuilder v4;
v0 := @parameter0: java.util.Map;
if v0 == null goto label1;
v1 = interfaceinvoke v0.<java.util.Map: boolean isEmpty()>();
if v1 == 0 goto label2;
label1:
return null;
label2:
v2 = v0 instanceof java.util.EnumMap;
if v2 == 0 goto label3;
v3 = staticinvoke <org.jboss.logmanager.PropertyValues: java.lang.String mapToString(java.util.EnumMap)>(v0);
return v3;
label3:
v4 = new java.lang.StringBuilder;
v5 = interfaceinvoke v0.<java.util.Map: int size()>();
v6 = v5 * 32;
specialinvoke v4.<java.lang.StringBuilder: void <init>(int)>(v6);
v7 = interfaceinvoke v0.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label4:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label5;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v11);
staticinvoke <org.jboss.logmanager.PropertyValues: void escapeKey(java.lang.StringBuilder,java.lang.String)>(v4, v12);
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
v13 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <org.jboss.logmanager.PropertyValues: void escapeValue(java.lang.StringBuilder,java.lang.String)>(v4, v13);
v14 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label4;
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
goto label4;
label5:
v15 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
return v15;
}
public static java.lang.String mapToString(java.util.EnumMap)
{
java.util.Iterator v6;
java.util.EnumMap v0;
java.util.Set v5;
int v3, v4;
java.lang.Object v11, v8, v9;
java.lang.StringBuilder v2;
java.lang.String v10, v13;
boolean v1, v12, v7;
v0 := @parameter0: java.util.EnumMap;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.util.EnumMap: boolean isEmpty()>();
if v1 == 0 goto label2;
label1:
return null;
label2:
v2 = new java.lang.StringBuilder;
v3 = virtualinvoke v0.<java.util.EnumMap: int size()>();
v4 = v3 * 32;
specialinvoke v2.<java.lang.StringBuilder: void <init>(int)>(v4);
v5 = virtualinvoke v0.<java.util.EnumMap: java.util.Set entrySet()>();
v6 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
label3:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label4;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = interfaceinvoke v8.<java.util.Map$Entry: java.lang.Object getKey()>();
v10 = virtualinvoke v9.<java.lang.Enum: java.lang.String name()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
v11 = interfaceinvoke v8.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <org.jboss.logmanager.PropertyValues: void escapeValue(java.lang.StringBuilder,java.lang.String)>(v2, v11);
v12 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label3;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
goto label3;
label4:
v13 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v13;
}
public static void escapeKey(java.lang.StringBuilder, java.lang.String)
{
char v5, v9;
int v3, v4, v6, v7;
char[] v2;
java.lang.StringBuilder v0, v10, v11, v8;
java.lang.String v1;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v3 = 0;
label1:
v4 = lengthof v2;
if v3 >= v4 goto label8;
v5 = v2[v3];
if v5 != 92 goto label5;
v6 = v3 + 1;
v7 = lengthof v2;
if v6 < v7 goto label2;
v8 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
goto label7;
label2:
v9 = v2[v6];
if v9 == 92 goto label3;
if v9 != 61 goto label4;
label3:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v9);
v3 = v6;
goto label7;
label4:
v10 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
goto label7;
label5:
if v5 != 61 goto label6;
v11 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
goto label7;
label6:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
label7:
v3 = v3 + 1;
goto label1;
label8:
return;
}
public static void escapeValue(java.lang.StringBuilder, java.lang.String)
{
char v5, v9;
int v3, v4, v6, v7;
char[] v2;
java.lang.StringBuilder v0, v10, v11, v8;
java.lang.String v1;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.String;
if v1 == null goto label8;
v2 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v3 = 0;
label1:
v4 = lengthof v2;
if v3 >= v4 goto label8;
v5 = v2[v3];
if v5 != 92 goto label5;
v6 = v3 + 1;
v7 = lengthof v2;
if v6 < v7 goto label2;
v8 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
goto label7;
label2:
v9 = v2[v6];
if v9 == 92 goto label3;
if v9 != 44 goto label4;
label3:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v9);
v3 = v6;
goto label7;
label4:
v10 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
goto label7;
label5:
if v5 != 44 goto label6;
v11 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
goto label7;
label6:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
label7:
v3 = v3 + 1;
goto label1;
label8:
return;
}
}