public final class org.jboss.logmanager.filters.InvertFilter extends java.lang.Object implements java.util.logging.Filter
{
private final java.util.logging.Filter target;
public void <init>(java.util.logging.Filter)
{
java.util.logging.Filter v1;
org.jboss.logmanager.filters.InvertFilter v0;
v0 := @this: org.jboss.logmanager.filters.InvertFilter;
v1 := @parameter0: java.util.logging.Filter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.filters.InvertFilter: java.util.logging.Filter target> = v1;
return;
}
public boolean isLoggable(java.util.logging.LogRecord)
{
java.util.logging.Filter v2;
org.jboss.logmanager.filters.InvertFilter v0;
java.util.logging.LogRecord v1;
boolean v3, v4;
v0 := @this: org.jboss.logmanager.filters.InvertFilter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = v0.<org.jboss.logmanager.filters.InvertFilter: java.util.logging.Filter target>;
v3 = interfaceinvoke v2.<java.util.logging.Filter: boolean isLoggable(java.util.logging.LogRecord)>(v1);
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
}