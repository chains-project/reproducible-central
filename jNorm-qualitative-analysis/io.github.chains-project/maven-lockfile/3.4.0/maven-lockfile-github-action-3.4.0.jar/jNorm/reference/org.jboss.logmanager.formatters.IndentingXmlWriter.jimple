class org.jboss.logmanager.formatters.IndentingXmlWriter extends java.lang.Object implements javax.xml.stream.XMLStreamWriter, javax.xml.stream.XMLStreamConstants
{
private static final java.lang.String SPACES;
private final javax.xml.stream.XMLStreamWriter delegate;
private int index;
private int state;
private boolean indentEnd;
void <init>(javax.xml.stream.XMLStreamWriter)
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: javax.xml.stream.XMLStreamWriter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 7;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate> = v1;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index> = 0;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 0;
return;
}
private void indent() throws javax.xml.stream.XMLStreamException
{
int v1, v2;
javax.xml.stream.XMLStreamWriter v3;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index>;
if v1 <= 0 goto label2;
v2 = 0;
label1:
if v2 >= v1 goto label2;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("    ");
v2 = v2 + 1;
goto label1;
label2:
return;
}
private void newline() throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n");
return;
}
public void writeStartElement(java.lang.String) throws javax.xml.stream.XMLStreamException
{
int v3, v4;
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 0;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 1;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index>;
v4 = v3 + 1;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index> = v4;
return;
}
public void writeStartElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
int v4, v5;
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String)>(v1, v2);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 0;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 1;
v4 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index>;
v5 = v4 + 1;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index> = v5;
return;
}
public void writeStartElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
int v5, v6;
javax.xml.stream.XMLStreamWriter v4;
java.lang.String v1, v2, v3;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v4 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v4.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 0;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 1;
v5 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index>;
v6 = v5 + 1;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index> = v6;
return;
}
public void writeEmptyElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String,java.lang.String)>(v1, v2);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 2;
return;
}
public void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v4;
java.lang.String v1, v2, v3;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v4 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v4.<javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 2;
return;
}
public void writeEmptyElement(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 2;
return;
}
public void writeEndElement() throws javax.xml.stream.XMLStreamException
{
int v1, v2, v3;
javax.xml.stream.XMLStreamWriter v5;
boolean v4;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index>;
v2 = v1 - 1;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int index> = v2;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state>;
if v3 != 4 goto label1;
v4 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd>;
if v4 == 0 goto label2;
label1:
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 0;
label2:
v5 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v5.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 2;
return;
}
public void writeEndDocument() throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 8;
return;
}
public void close() throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void close()>();
return;
}
public void flush() throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void flush()>();
return;
}
public void writeAttribute(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>(v1, v2);
return;
}
public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v5;
java.lang.String v1, v2, v3, v4;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v5.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3, v4);
return;
}
public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v4;
java.lang.String v1, v2, v3;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v4.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
return;
}
public void writeNamespace(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(v1, v2);
return;
}
public void writeDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>(v1);
return;
}
public void writeComment(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeComment(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 5;
return;
}
public void writeProcessingInstruction(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 3;
return;
}
public void writeProcessingInstruction(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>(v1, v2);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 3;
return;
}
public void writeCData(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 12;
return;
}
public void writeDTD(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeDTD(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 11;
return;
}
public void writeEntityRef(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeEntityRef(java.lang.String)>(v1);
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 9;
return;
}
public void writeStartDocument() throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void writeStartDocument()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 7;
return;
}
public void writeStartDocument(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String)>(v1);
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 7;
return;
}
public void writeStartDocument(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String,java.lang.String)>(v1, v2);
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 7;
return;
}
public void writeCharacters(java.lang.String) throws javax.xml.stream.XMLStreamException
{
org.jboss.logmanager.formatters.IndentingXmlWriter$SplitIterator v3;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
java.lang.Object v5;
javax.xml.stream.XMLStreamWriter v7;
java.lang.String v1;
boolean v2, v4, v6, v8;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 0;
v2 = 1;
v3 = new org.jboss.logmanager.formatters.IndentingXmlWriter$SplitIterator;
specialinvoke v3.<org.jboss.logmanager.formatters.IndentingXmlWriter$SplitIterator: void <init>(java.lang.String,char)>(v1, 10);
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
if v2 == 0 goto label2;
v6 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v2 = 0;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
label2:
v7 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v7.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>(v5);
v8 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label1;
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void newline()>();
specialinvoke v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: void indent()>();
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: boolean indentEnd> = 1;
goto label1;
label3:
v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: int state> = 4;
return;
}
public void writeCharacters(char[], int, int) throws javax.xml.stream.XMLStreamException
{
int v2, v3;
char[] v1;
javax.xml.stream.XMLStreamWriter v4;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(char[],int,int)>(v1, v2, v3);
return;
}
public java.lang.String getPrefix(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1, v3;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
v3 = interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>(v1);
return v3;
}
public void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(v1, v2);
return;
}
public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(v1);
return;
}
public void setNamespaceContext(javax.xml.namespace.NamespaceContext) throws javax.xml.stream.XMLStreamException
{
javax.xml.namespace.NamespaceContext v1;
javax.xml.stream.XMLStreamWriter v2;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: javax.xml.namespace.NamespaceContext;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>(v1);
return;
}
public javax.xml.namespace.NamespaceContext getNamespaceContext()
{
javax.xml.namespace.NamespaceContext v2;
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
v2 = interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>();
return v2;
}
public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException
{
java.lang.Object v3;
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.IndentingXmlWriter v0;
v0 := @this: org.jboss.logmanager.formatters.IndentingXmlWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.IndentingXmlWriter: javax.xml.stream.XMLStreamWriter delegate>;
v3 = interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: java.lang.Object getProperty(java.lang.String)>(v1);
return v3;
}
}