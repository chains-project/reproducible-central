class org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator extends java.lang.Object implements org.jboss.logmanager.formatters.StructuredFormatter$Generator
{
private final jakarta.json.stream.JsonGenerator generator;
final org.jboss.logmanager.formatters.JsonFormatter this$0;
private void <init>(org.jboss.logmanager.formatters.JsonFormatter, jakarta.json.stream.JsonGenerator)
{
jakarta.json.stream.JsonGenerator v2;
org.jboss.logmanager.formatters.JsonFormatter v1;
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: org.jboss.logmanager.formatters.JsonFormatter;
v2 := @parameter1: jakarta.json.stream.JsonGenerator;
v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: org.jboss.logmanager.formatters.JsonFormatter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator> = v2;
return;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator begin()
{
jakarta.json.stream.JsonGenerator v1;
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v1.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeStartObject()>();
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, int)
{
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
int v2;
java.lang.String v1;
jakarta.json.stream.JsonGenerator v3;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,int)>(v1, v2);
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, long)
{
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
long v2;
java.lang.String v1;
jakarta.json.stream.JsonGenerator v3;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,long)>(v1, v2);
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, java.util.Map)
{
java.util.Iterator v5;
java.util.Set v4;
jakarta.json.stream.JsonGenerator v10, v3;
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
java.util.Map v2;
java.lang.Object v7, v8, v9;
java.lang.String v1;
boolean v6;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeStartObject(java.lang.String)>(v1);
if v2 == null goto label2;
v4 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: void writeObject(java.lang.String,java.lang.Object)>(v8, v9);
goto label1;
label2:
v10 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v10.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeEnd()>();
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, java.lang.String)
{
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
java.lang.String v1, v2;
jakarta.json.stream.JsonGenerator v3, v4;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v2 != null goto label1;
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeNull(java.lang.String)>(v1);
goto label2;
label1:
v4 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v4.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,java.lang.String)>(v1, v2);
label2:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator startObject(java.lang.String) throws java.lang.Exception
{
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
java.lang.String v1;
jakarta.json.stream.JsonGenerator v2, v3;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v2.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeStartObject()>();
goto label2;
label1:
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeStartObject(java.lang.String)>(v1);
label2:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator endObject() throws java.lang.Exception
{
jakarta.json.stream.JsonGenerator v1;
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v1.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeEnd()>();
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator startArray(java.lang.String) throws java.lang.Exception
{
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
java.lang.String v1;
jakarta.json.stream.JsonGenerator v2, v3;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v2.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeStartArray()>();
goto label2;
label1:
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeStartArray(java.lang.String)>(v1);
label2:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator endArray() throws java.lang.Exception
{
jakarta.json.stream.JsonGenerator v1;
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v1.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeEnd()>();
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator end()
{
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
jakarta.json.stream.JsonGenerator v1, v2, v3;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v1.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeEnd()>();
v2 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v2.<jakarta.json.stream.JsonGenerator: void flush()>();
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: void close()>();
return v0;
}
private void writeObject(java.lang.String, java.lang.Object)
{
boolean v10, v15, v20, v25, v28, v31, v34, v5, v7, v9;
long v17, v19;
org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator v0;
int v12, v14;
java.lang.String v1, v37;
double v22, v24;
jakarta.json.stream.JsonGenerator v11, v13, v16, v18, v21, v23, v26, v27, v29, v3, v30, v32, v33, v35, v36, v38, v39, v4, v6, v8;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label02;
if v1 != null goto label01;
v3 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v3.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeNull()>();
goto label20;
label01:
v4 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v4.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeNull(java.lang.String)>(v1);
goto label20;
label02:
v5 = v2 instanceof java.lang.Boolean;
if v5 == 0 goto label04;
if v1 != null goto label03;
v6 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v7 = virtualinvoke v2.<java.lang.Boolean: boolean booleanValue()>();
interfaceinvoke v6.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(boolean)>(v7);
goto label20;
label03:
v8 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v9 = virtualinvoke v2.<java.lang.Boolean: boolean booleanValue()>();
interfaceinvoke v8.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,boolean)>(v1, v9);
goto label20;
label04:
v10 = v2 instanceof java.lang.Integer;
if v10 == 0 goto label06;
if v1 != null goto label05;
v11 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v12 = virtualinvoke v2.<java.lang.Integer: int intValue()>();
interfaceinvoke v11.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(int)>(v12);
goto label20;
label05:
v13 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v14 = virtualinvoke v2.<java.lang.Integer: int intValue()>();
interfaceinvoke v13.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,int)>(v1, v14);
goto label20;
label06:
v15 = v2 instanceof java.lang.Long;
if v15 == 0 goto label08;
if v1 != null goto label07;
v16 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v17 = virtualinvoke v2.<java.lang.Long: long longValue()>();
interfaceinvoke v16.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(long)>(v17);
goto label20;
label07:
v18 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v19 = virtualinvoke v2.<java.lang.Long: long longValue()>();
interfaceinvoke v18.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,long)>(v1, v19);
goto label20;
label08:
v20 = v2 instanceof java.lang.Double;
if v20 == 0 goto label10;
if v1 != null goto label09;
v21 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v22 = virtualinvoke v2.<java.lang.Double: double doubleValue()>();
interfaceinvoke v21.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(double)>(v22);
goto label20;
label09:
v23 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
v24 = virtualinvoke v2.<java.lang.Double: double doubleValue()>();
interfaceinvoke v23.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,double)>(v1, v24);
goto label20;
label10:
v25 = v2 instanceof java.math.BigInteger;
if v25 == 0 goto label12;
if v1 != null goto label11;
v26 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v26.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.math.BigInteger)>(v2);
goto label20;
label11:
v27 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v27.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,java.math.BigInteger)>(v1, v2);
goto label20;
label12:
v28 = v2 instanceof java.math.BigDecimal;
if v28 == 0 goto label14;
if v1 != null goto label13;
v29 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v29.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.math.BigDecimal)>(v2);
goto label20;
label13:
v30 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v30.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,java.math.BigDecimal)>(v1, v2);
goto label20;
label14:
v31 = v2 instanceof java.lang.String;
if v31 == 0 goto label16;
if v1 != null goto label15;
v32 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v32.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String)>(v2);
goto label20;
label15:
v33 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v33.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,java.lang.String)>(v1, v2);
goto label20;
label16:
v34 = v2 instanceof jakarta.json.JsonValue;
if v34 == 0 goto label18;
if v1 != null goto label17;
v35 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v35.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(jakarta.json.JsonValue)>(v2);
goto label20;
label17:
v36 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v36.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,jakarta.json.JsonValue)>(v1, v2);
goto label20;
label18:
v37 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
if v1 != null goto label19;
v38 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v38.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String)>(v37);
goto label20;
label19:
v39 = v0.<org.jboss.logmanager.formatters.JsonFormatter$FormatterJsonGenerator: jakarta.json.stream.JsonGenerator generator>;
interfaceinvoke v39.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator write(java.lang.String,java.lang.String)>(v1, v37);
label20:
return;
}
}