public class org.jboss.logmanager.formatters.MultistepFormatter extends org.jboss.logmanager.ExtFormatter
{
private volatile org.jboss.logmanager.formatters.FormatStep[] steps;
private volatile int builderLength;
private volatile boolean callerCalculationRequired;
private static final org.jboss.logmanager.formatters.FormatStep[] EMPTY_STEPS;
public void <init>(org.jboss.logmanager.formatters.FormatStep[])
{
org.jboss.logmanager.formatters.MultistepFormatter v0;
org.jboss.logmanager.formatters.FormatStep[] v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
v1 := @parameter0: org.jboss.logmanager.formatters.FormatStep[];
specialinvoke v0.<org.jboss.logmanager.ExtFormatter: void <init>()>();
v0.<org.jboss.logmanager.formatters.MultistepFormatter: boolean callerCalculationRequired> = 0;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v0.<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] steps> = v2;
specialinvoke v0.<org.jboss.logmanager.formatters.MultistepFormatter: void calculateBuilderLength()>();
return;
}
private void calculateBuilderLength()
{
org.jboss.logmanager.formatters.FormatStep[] v3;
int v2, v4, v5, v7, v9;
org.jboss.logmanager.formatters.MultistepFormatter v0;
org.jboss.logmanager.formatters.FormatStep v6;
boolean v1, v8;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
v1 = 0;
v2 = 0;
v3 = v0.<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] steps>;
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label3;
v6 = v3[v5];
v7 = interfaceinvoke v6.<org.jboss.logmanager.formatters.FormatStep: int estimateLength()>();
v2 = v2 + v7;
v8 = interfaceinvoke v6.<org.jboss.logmanager.formatters.FormatStep: boolean isCallerInformationRequired()>();
if v8 == 0 goto label2;
v1 = 1;
label2:
v5 = v5 + 1;
goto label1;
label3:
v9 = staticinvoke <java.lang.Math: int max(int,int)>(32, v2);
v0.<org.jboss.logmanager.formatters.MultistepFormatter: int builderLength> = v9;
v0.<org.jboss.logmanager.formatters.MultistepFormatter: boolean callerCalculationRequired> = v1;
return;
}
public void <init>()
{
org.jboss.logmanager.formatters.MultistepFormatter v0;
org.jboss.logmanager.formatters.FormatStep[] v1;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
specialinvoke v0.<org.jboss.logmanager.ExtFormatter: void <init>()>();
v0.<org.jboss.logmanager.formatters.MultistepFormatter: boolean callerCalculationRequired> = 0;
v1 = <org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] EMPTY_STEPS>;
v0.<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] steps> = v1;
return;
}
public org.jboss.logmanager.formatters.FormatStep[] getSteps()
{
org.jboss.logmanager.formatters.MultistepFormatter v0;
org.jboss.logmanager.formatters.FormatStep[] v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
v1 = v0.<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] steps>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
public void setSteps(org.jboss.logmanager.formatters.FormatStep[])
{
int v2;
org.jboss.logmanager.formatters.MultistepFormatter v0;
org.jboss.logmanager.formatters.FormatStep[] v1, v3;
java.lang.Object v4;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
v1 := @parameter0: org.jboss.logmanager.formatters.FormatStep[];
if v1 == null goto label1;
v2 = lengthof v1;
if v2 != 0 goto label2;
label1:
v3 = <org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] EMPTY_STEPS>;
goto label3;
label2:
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
label3:
v0.<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] steps> = v4;
specialinvoke v0.<org.jboss.logmanager.formatters.MultistepFormatter: void calculateBuilderLength()>();
return;
}
public java.lang.String format(org.jboss.logmanager.ExtLogRecord)
{
org.jboss.logmanager.formatters.FormatStep[] v4;
org.jboss.logmanager.ExtLogRecord v1;
int v3, v5, v6;
org.jboss.logmanager.formatters.MultistepFormatter v0;
java.lang.StringBuilder v2;
org.jboss.logmanager.formatters.FormatStep v7;
java.lang.String v8;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = new java.lang.StringBuilder;
v3 = v0.<org.jboss.logmanager.formatters.MultistepFormatter: int builderLength>;
specialinvoke v2.<java.lang.StringBuilder: void <init>(int)>(v3);
v4 = v0.<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] steps>;
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
interfaceinvoke v7.<org.jboss.logmanager.formatters.FormatStep: void render(java.util.logging.Formatter,java.lang.StringBuilder,org.jboss.logmanager.ExtLogRecord)>(v0, v2, v1);
v6 = v6 + 1;
goto label1;
label2:
v8 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v8;
}
public boolean isCallerCalculationRequired()
{
org.jboss.logmanager.formatters.MultistepFormatter v0;
boolean v1;
v0 := @this: org.jboss.logmanager.formatters.MultistepFormatter;
v1 = v0.<org.jboss.logmanager.formatters.MultistepFormatter: boolean callerCalculationRequired>;
return v1;
}
static void <clinit>()
{
org.jboss.logmanager.formatters.FormatStep[] v0;
v0 = newarray (org.jboss.logmanager.formatters.FormatStep)[0];
<org.jboss.logmanager.formatters.MultistepFormatter: org.jboss.logmanager.formatters.FormatStep[] EMPTY_STEPS> = v0;
return;
}
}