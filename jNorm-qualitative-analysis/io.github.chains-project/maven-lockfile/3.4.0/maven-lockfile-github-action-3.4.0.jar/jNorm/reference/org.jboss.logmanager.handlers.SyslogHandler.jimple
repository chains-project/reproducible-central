public class org.jboss.logmanager.handlers.SyslogHandler extends org.jboss.logmanager.ExtHandler
{
public static final java.net.InetAddress DEFAULT_ADDRESS;
public static final int DEFAULT_PORT;
public static final int DEFAULT_SECURE_PORT;
public static final java.lang.String DEFAULT_ENCODING;
public static final org.jboss.logmanager.handlers.SyslogHandler$Facility DEFAULT_FACILITY;
public static final java.lang.String NILVALUE_SP;
private static final java.util.regex.Pattern PRINTABLE_ASCII_PATTERN;
private final java.lang.Object outputLock;
private java.net.InetAddress serverAddress;
private int port;
private java.lang.String appName;
private java.lang.String hostname;
private org.jboss.logmanager.handlers.SyslogHandler$Facility facility;
private org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType;
private final java.lang.String pid;
private java.io.OutputStream out;
private org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol;
private boolean useCountingFraming;
private boolean initializeConnection;
private boolean outputStreamSet;
private java.lang.String delimiter;
private boolean useDelimiter;
private boolean truncate;
private int maxLen;
private boolean blockOnReconnect;
private org.jboss.logmanager.handlers.ClientSocketFactory clientSocketFactory;
public void <init>() throws java.io.IOException
{
java.net.InetAddress v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = <org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress DEFAULT_ADDRESS>;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.net.InetAddress,int)>(v1, 514);
return;
}
public void <init>(java.lang.String, int) throws java.io.IOException
{
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
int v2;
java.lang.String v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = <org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility DEFAULT_FACILITY>;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.lang.String,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,java.lang.String)>(v1, v2, v3, null);
return;
}
public void <init>(java.net.InetAddress, int) throws java.io.IOException
{
java.net.InetAddress v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
int v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.net.InetAddress;
v2 := @parameter1: int;
v3 = <org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility DEFAULT_FACILITY>;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.net.InetAddress,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,java.lang.String)>(v1, v2, v3, null);
return;
}
public void <init>(java.lang.String, int, org.jboss.logmanager.handlers.SyslogHandler$Facility, java.lang.String) throws java.io.IOException
{
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
int v2;
java.lang.String v1, v4;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.lang.String,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,org.jboss.logmanager.handlers.SyslogHandler$SyslogType,java.lang.String)>(v1, v2, v3, null, v4);
return;
}
public void <init>(java.net.InetAddress, int, org.jboss.logmanager.handlers.SyslogHandler$Facility, java.lang.String) throws java.io.IOException
{
java.net.InetAddress v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
int v2;
java.lang.String v4;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.net.InetAddress;
v2 := @parameter1: int;
v3 := @parameter2: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.net.InetAddress,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,org.jboss.logmanager.handlers.SyslogHandler$SyslogType,java.lang.String)>(v1, v2, v3, null, v4);
return;
}
public void <init>(java.lang.String, int, org.jboss.logmanager.handlers.SyslogHandler$Facility, org.jboss.logmanager.handlers.SyslogHandler$SyslogType, java.lang.String) throws java.io.IOException
{
java.net.InetAddress v6;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v4;
int v2;
java.lang.String v1, v5;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v4 := @parameter3: org.jboss.logmanager.handlers.SyslogHandler$SyslogType;
v5 := @parameter4: java.lang.String;
v6 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v1);
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.net.InetAddress,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,org.jboss.logmanager.handlers.SyslogHandler$SyslogType,java.lang.String)>(v6, v2, v3, v4, v5);
return;
}
public void <init>(java.net.InetAddress, int, org.jboss.logmanager.handlers.SyslogHandler$Facility, org.jboss.logmanager.handlers.SyslogHandler$SyslogType, java.lang.String) throws java.io.IOException
{
java.net.InetAddress v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v4;
int v2;
java.lang.String v5;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.net.InetAddress;
v2 := @parameter1: int;
v3 := @parameter2: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v4 := @parameter3: org.jboss.logmanager.handlers.SyslogHandler$SyslogType;
v5 := @parameter4: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.net.InetAddress,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,org.jboss.logmanager.handlers.SyslogHandler$SyslogType,org.jboss.logmanager.handlers.SyslogHandler$Protocol,java.lang.String)>(v1, v2, v3, v4, null, v5);
return;
}
public void <init>(java.lang.String, int, org.jboss.logmanager.handlers.SyslogHandler$Facility, org.jboss.logmanager.handlers.SyslogHandler$SyslogType, org.jboss.logmanager.handlers.SyslogHandler$Protocol, java.lang.String) throws java.io.IOException
{
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
org.jboss.logmanager.handlers.SyslogHandler$Protocol v5;
java.net.InetAddress v7;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v4;
int v2;
java.lang.String v1, v6;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v4 := @parameter3: org.jboss.logmanager.handlers.SyslogHandler$SyslogType;
v5 := @parameter4: org.jboss.logmanager.handlers.SyslogHandler$Protocol;
v6 := @parameter5: java.lang.String;
v7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v1);
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void <init>(java.net.InetAddress,int,org.jboss.logmanager.handlers.SyslogHandler$Facility,org.jboss.logmanager.handlers.SyslogHandler$SyslogType,org.jboss.logmanager.handlers.SyslogHandler$Protocol,java.lang.String)>(v7, v2, v3, v4, v5, v6);
return;
}
public void <init>(java.net.InetAddress, int, org.jboss.logmanager.handlers.SyslogHandler$Facility, org.jboss.logmanager.handlers.SyslogHandler$SyslogType, org.jboss.logmanager.handlers.SyslogHandler$Protocol, java.lang.String) throws java.io.IOException
{
org.jboss.logmanager.handlers.SyslogHandler v0;
long v8;
java.net.InetAddress v1;
byte v9;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v12, v17, v18, v19, v20, v4;
int v2;
java.lang.String v10, v11, v6;
org.jboss.logmanager.handlers.SyslogHandler$Facility v3;
org.jboss.logmanager.handlers.SyslogHandler$Protocol v13, v14, v15, v16, v5;
java.lang.Object v7;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.net.InetAddress;
v2 := @parameter1: int;
v3 := @parameter2: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v4 := @parameter3: org.jboss.logmanager.handlers.SyslogHandler$SyslogType;
v5 := @parameter4: org.jboss.logmanager.handlers.SyslogHandler$Protocol;
v6 := @parameter5: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.ExtHandler: void <init>()>();
v7 = new java.lang.Object;
specialinvoke v7.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock> = v7;
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress serverAddress> = v1;
v0.<org.jboss.logmanager.handlers.SyslogHandler: int port> = v2;
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility facility> = v3;
v8 = staticinvoke <org.wildfly.common.os.Process: long getProcessId()>();
v9 = v8 cmp -1L;
if v9 == 0 goto label01;
v10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(v8);
goto label02;
label01:
v10 = null;
label02:
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String pid> = v10;
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName> = "java";
v11 = staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: java.lang.String checkPrintableAscii(java.lang.String,java.lang.String)>("host name", v6);
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname> = v11;
if v4 != null goto label03;
v12 = <org.jboss.logmanager.handlers.SyslogHandler$SyslogType: org.jboss.logmanager.handlers.SyslogHandler$SyslogType RFC5424>;
goto label04;
label03:
v12 = v4;
label04:
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType> = v12;
if v5 != null goto label05;
v13 = <org.jboss.logmanager.handlers.SyslogHandler$Protocol: org.jboss.logmanager.handlers.SyslogHandler$Protocol UDP>;
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol> = v13;
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter> = null;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter> = 0;
goto label08;
label05:
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol> = v5;
v14 = <org.jboss.logmanager.handlers.SyslogHandler$Protocol: org.jboss.logmanager.handlers.SyslogHandler$Protocol UDP>;
if v5 != v14 goto label06;
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter> = null;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter> = 0;
goto label08;
label06:
v15 = <org.jboss.logmanager.handlers.SyslogHandler$Protocol: org.jboss.logmanager.handlers.SyslogHandler$Protocol TCP>;
if v5 == v15 goto label07;
v16 = <org.jboss.logmanager.handlers.SyslogHandler$Protocol: org.jboss.logmanager.handlers.SyslogHandler$Protocol SSL_TCP>;
if v5 != v16 goto label08;
label07:
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter> = "\n";
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter> = 1;
label08:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useCountingFraming> = 0;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 1;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean outputStreamSet> = 0;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean truncate> = 1;
v17 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType>;
v18 = <org.jboss.logmanager.handlers.SyslogHandler$SyslogType: org.jboss.logmanager.handlers.SyslogHandler$SyslogType RFC3164>;
if v17 != v18 goto label09;
v0.<org.jboss.logmanager.handlers.SyslogHandler: int maxLen> = 1024;
goto label10;
label09:
v19 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType>;
v20 = <org.jboss.logmanager.handlers.SyslogHandler$SyslogType: org.jboss.logmanager.handlers.SyslogHandler$SyslogType RFC5424>;
if v19 != v20 goto label10;
v0.<org.jboss.logmanager.handlers.SyslogHandler: int maxLen> = 2048;
label10:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean blockOnReconnect> = 0;
return;
}
public final void doPublish(org.jboss.logmanager.ExtLogRecord)
{
byte[] v10, v17, v19;
java.lang.IllegalStateException v13, v7;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Integer v32, v34;
java.util.logging.Formatter v36;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v11, v12, v14, v8, v9;
boolean v22, v29, v39, v4, v43, v46;
java.text.Normalizer$Form v38, v40;
java.lang.Throwable v49;
java.lang.Object[] v27;
org.jboss.logmanager.ExtLogRecord v1;
int v20, v21, v23, v24, v25, v28, v30, v31, v33, v42, v44, v45;
java.lang.String v15, v16, v18, v2, v3, v35, v37;
java.io.OutputStream v6;
java.io.IOException v26, v48;
org.jboss.logmanager.handlers.ByteStringBuilder v41, v47;
java.lang.Object v5;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getMessage()>();
if v2 == null goto label01;
v3 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getMessage()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 == 0 goto label02;
label01:
return;
label02:
v5 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v5;
label03:
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void init()>();
v6 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
if v6 != null goto label04;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The syslog handler has been closed.");
throw v7;
label04:
v8 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType>;
v9 = <org.jboss.logmanager.handlers.SyslogHandler$SyslogType: org.jboss.logmanager.handlers.SyslogHandler$SyslogType RFC3164>;
if v8 != v9 goto label05;
v10 = virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: byte[] createRFC3164Header(org.jboss.logmanager.ExtLogRecord)>(v1);
goto label07;
label05:
v11 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType>;
v12 = <org.jboss.logmanager.handlers.SyslogHandler$SyslogType: org.jboss.logmanager.handlers.SyslogHandler$SyslogType RFC5424>;
if v11 != v12 goto label06;
v10 = virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: byte[] createRFC5424Header(org.jboss.logmanager.ExtLogRecord)>(v1);
goto label07;
label06:
v13 = new java.lang.IllegalStateException;
v14 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType>;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.jboss.logmanager.handlers.SyslogHandler$SyslogType)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The syslog type of \'\u0001\' is invalid.");
specialinvoke v13.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v15);
throw v13;
label07:
v16 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter>;
if v16 != null goto label08;
v17 = newarray (byte)[1];
v17[0] = 0;
goto label09;
label08:
v18 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter>;
v17 = virtualinvoke v18.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
label09:
v19 = v17;
v20 = v0.<org.jboss.logmanager.handlers.SyslogHandler: int maxLen>;
v21 = lengthof v10;
v22 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter>;
if v22 == 0 goto label10;
v23 = lengthof v17;
goto label11;
label10:
v23 = 0;
label11:
v24 = v21 + v23;
v25 = v20 - v24;
if v25 >= 1 goto label14;
v26 = new java.io.IOException;
v27 = newarray (java.lang.Object)[2];
v28 = lengthof v10;
v29 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter>;
if v29 == 0 goto label12;
v30 = lengthof v19;
goto label13;
label12:
v30 = 0;
label13:
v31 = v28 + v30;
v32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v31);
v27[0] = v32;
v33 = v0.<org.jboss.logmanager.handlers.SyslogHandler: int maxLen>;
v34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v33);
v27[1] = v34;
v35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The header and delimiter length, %d, is greater than the message length, %d, allows.", v27);
specialinvoke v26.<java.io.IOException: void <init>(java.lang.String)>(v35);
throw v26;
label14:
v36 = virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: java.util.logging.Formatter getFormatter()>();
if v36 == null goto label15;
v37 = virtualinvoke v36.<java.util.logging.Formatter: java.lang.String format(java.util.logging.LogRecord)>(v1);
goto label16;
label15:
v37 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getFormattedMessage()>();
label16:
v38 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFKC>;
v39 = staticinvoke <java.text.Normalizer: boolean isNormalized(java.lang.CharSequence,java.text.Normalizer$Form)>(v37, v38);
if v39 != 0 goto label17;
v40 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFKC>;
v37 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>(v37, v40);
label17:
v41 = new org.jboss.logmanager.handlers.ByteStringBuilder;
specialinvoke v41.<org.jboss.logmanager.handlers.ByteStringBuilder: void <init>(int)>(v25);
v42 = virtualinvoke v41.<org.jboss.logmanager.handlers.ByteStringBuilder: int write(java.lang.String,int)>(v37, v25);
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void sendMessage(byte[],org.jboss.logmanager.handlers.ByteStringBuilder,byte[])>(v10, v41, v19);
v43 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean truncate>;
if v43 != 0 goto label20;
v44 = virtualinvoke v37.<java.lang.String: int length()>();
if v42 >= v44 goto label20;
label18:
if v42 <= 0 goto label20;
v45 = v42 + 1;
v37 = virtualinvoke v37.<java.lang.String: java.lang.String substring(int)>(v45);
v46 = virtualinvoke v37.<java.lang.String: boolean isEmpty()>();
if v46 != 0 goto label20;
v47 = new org.jboss.logmanager.handlers.ByteStringBuilder;
specialinvoke v47.<org.jboss.logmanager.handlers.ByteStringBuilder: void <init>(int)>(v25);
v42 = virtualinvoke v47.<org.jboss.logmanager.handlers.ByteStringBuilder: int write(java.lang.String,int)>(v37, v25);
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void sendMessage(byte[],org.jboss.logmanager.handlers.ByteStringBuilder,byte[])>(v10, v47, v19);
goto label18;
label19:
v48 := @caughtexception;
virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void reportError(java.lang.String,java.lang.Exception,int)>("Could not write to syslog", v48, 1);
label20:
exitmonitor v5;
label21:
goto label23;
label22:
v49 := @caughtexception;
exitmonitor v5;
throw v49;
label23:
specialinvoke v0.<org.jboss.logmanager.ExtHandler: void doPublish(org.jboss.logmanager.ExtLogRecord)>(v1);
return;
catch java.io.IOException from label04 to label19 with label19;
catch java.lang.Throwable from label03 to label21 with label22;
}
private void sendMessage(byte[], org.jboss.logmanager.handlers.ByteStringBuilder, byte[]) throws java.io.IOException
{
byte[] v1, v18, v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
int v10, v11, v13, v14, v5, v6, v7, v9;
boolean v12, v16, v20, v24, v8;
java.io.OutputStream v17, v19, v21;
java.util.Iterator v23;
java.util.Collection v22;
org.jboss.logmanager.handlers.ByteStringBuilder v15, v2, v4;
java.lang.Object v25;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: byte[];
v2 := @parameter1: org.jboss.logmanager.handlers.ByteStringBuilder;
v3 := @parameter2: byte[];
v4 = new org.jboss.logmanager.handlers.ByteStringBuilder;
v5 = lengthof v1;
v6 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: int length()>();
v7 = v5 + v6;
specialinvoke v4.<org.jboss.logmanager.handlers.ByteStringBuilder: void <init>(int)>(v7);
v8 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useCountingFraming>;
if v8 == 0 goto label3;
v9 = lengthof v1;
v10 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: int length()>();
v11 = v9 + v10;
v12 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter>;
if v12 == 0 goto label1;
v13 = lengthof v3;
goto label2;
label1:
v13 = 0;
label2:
v14 = v11 + v13;
v15 = virtualinvoke v4.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v14);
virtualinvoke v15.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
label3:
virtualinvoke v4.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(byte[])>(v1);
virtualinvoke v4.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(org.jboss.logmanager.handlers.ByteStringBuilder)>(v2);
v16 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter>;
if v16 == 0 goto label4;
virtualinvoke v4.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(byte[])>(v3);
label4:
v17 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
v18 = virtualinvoke v4.<org.jboss.logmanager.handlers.ByteStringBuilder: byte[] toArray()>();
virtualinvoke v17.<java.io.OutputStream: void write(byte[])>(v18);
v19 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
v20 = v19 instanceof org.jboss.logmanager.handlers.TcpOutputStream;
if v20 == 0 goto label6;
v21 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
v22 = virtualinvoke v21.<org.jboss.logmanager.handlers.TcpOutputStream: java.util.Collection getErrors()>();
v23 = interfaceinvoke v22.<java.util.Collection: java.util.Iterator iterator()>();
label5:
v24 = interfaceinvoke v23.<java.util.Iterator: boolean hasNext()>();
if v24 == 0 goto label6;
v25 = interfaceinvoke v23.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void reportError(java.lang.String,java.lang.Exception,int)>("Error writing to TCP stream", v25, 1);
goto label5;
label6:
return;
}
public void close()
{
java.io.OutputStream v2;
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: void safeClose(java.io.Closeable)>(v2);
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out> = null;
exitmonitor v1;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
label4:
specialinvoke v0.<org.jboss.logmanager.ExtHandler: void close()>();
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void flush()
{
java.io.OutputStream v2;
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: void safeFlush(java.io.Flushable)>(v2);
exitmonitor v1;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
label4:
specialinvoke v0.<org.jboss.logmanager.ExtHandler: void flush()>();
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.lang.String getAppName()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setAppName(java.lang.String)
{
java.lang.Throwable v4;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
java.lang.String v1, v3;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v3 = staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: java.lang.String checkPrintableAscii(java.lang.String,java.lang.String)>("app name", v1);
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName> = v3;
exitmonitor v2;
label2:
goto label4;
label3:
v4 := @caughtexception;
exitmonitor v2;
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public boolean isBlockOnReconnect()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
boolean v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean blockOnReconnect>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setBlockOnReconnect(boolean)
{
java.io.OutputStream v3, v5;
java.lang.Throwable v6;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
boolean v1, v4;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean blockOnReconnect> = v1;
v3 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
v4 = v3 instanceof org.jboss.logmanager.handlers.TcpOutputStream;
if v4 == 0 goto label2;
v5 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
virtualinvoke v5.<org.jboss.logmanager.handlers.TcpOutputStream: void setBlockOnReconnect(boolean)>(v1);
label2:
exitmonitor v2;
label3:
goto label5;
label4:
v6 := @caughtexception;
exitmonitor v2;
throw v6;
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
public void setClientSocketFactory(org.jboss.logmanager.handlers.ClientSocketFactory)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.ClientSocketFactory v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.ClientSocketFactory;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.ClientSocketFactory clientSocketFactory> = v1;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public boolean isEscapeEnabled()
{
org.jboss.logmanager.handlers.SyslogHandler v0;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
return 0;
}
public void setEscapeEnabled(boolean)
{
org.jboss.logmanager.handlers.SyslogHandler v0;
boolean v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: boolean;
return;
}
public java.lang.String getPid()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String pid>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public int getPort()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
int v2;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: int port>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setPort(int)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
int v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: int;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: int port> = v1;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public org.jboss.logmanager.handlers.SyslogHandler$Facility getFacility()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v2;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility facility>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setFacility(org.jboss.logmanager.handlers.SyslogHandler$Facility)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility facility> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.lang.String getHostname()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public int getMaxLength()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
int v2;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: int maxLen>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setMaxLength(int)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
int v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: int;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: int maxLen> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.lang.String getMessageDelimiter()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setMessageDelimiter(java.lang.String)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String delimiter> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public boolean isUseMessageDelimiter()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
boolean v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setUseMessageDelimiter(boolean)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
boolean v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useDelimiter> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setHostname(java.lang.String)
{
java.lang.Throwable v4;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
java.lang.String v1, v3;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v3 = staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: java.lang.String checkPrintableAscii(java.lang.String,java.lang.String)>("host name", v1);
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname> = v3;
exitmonitor v2;
label2:
goto label4;
label3:
v4 := @caughtexception;
exitmonitor v2;
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public boolean isUseCountingFraming()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
boolean v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useCountingFraming>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setUseCountingFraming(boolean)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
boolean v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean useCountingFraming> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setServerHostname(java.lang.String) throws java.net.UnknownHostException
{
java.net.InetAddress v2;
java.lang.String v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(v1);
virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void setServerAddress(java.net.InetAddress)>(v2);
return;
}
public java.net.InetAddress getServerAddress()
{
java.lang.Throwable v3;
java.net.InetAddress v2;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress serverAddress>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setServerAddress(java.net.InetAddress)
{
java.lang.Throwable v3;
java.net.InetAddress v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.net.InetAddress;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress serverAddress> = v1;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public org.jboss.logmanager.handlers.SyslogHandler$SyslogType getSyslogType()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v2;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setSyslogType(org.jboss.logmanager.handlers.SyslogHandler$SyslogType)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$SyslogType v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.SyslogHandler$SyslogType;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$SyslogType syslogType> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public org.jboss.logmanager.handlers.SyslogHandler$Protocol getProtocol()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Protocol v2;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setProtocol(org.jboss.logmanager.handlers.SyslogHandler$Protocol)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Protocol v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.SyslogHandler$Protocol;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol> = v1;
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setOutputStream(java.io.OutputStream)
{
java.io.OutputStream v1;
org.jboss.logmanager.handlers.SyslogHandler v0;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.io.OutputStream;
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void setOutputStream(java.io.OutputStream,boolean)>(v1, 1);
return;
}
public boolean isTruncate()
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v1;
boolean v2;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean truncate>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setTruncate(boolean)
{
java.lang.Throwable v3;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v2;
boolean v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean truncate> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void setOutputStream(java.io.OutputStream, boolean)
{
java.io.OutputStream v1, v3;
java.lang.Throwable v7, v8;
org.jboss.logmanager.handlers.SyslogHandler v0;
java.lang.Object v5;
boolean v2, v4, v6;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: boolean;
v3 = null;
v4 = 0;
label01:
v5 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v5;
label02:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 0;
v3 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out>;
if v3 == null goto label03;
staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: void safeFlush(java.io.Flushable)>(v3);
label03:
v0.<org.jboss.logmanager.handlers.SyslogHandler: java.io.OutputStream out> = v1;
v4 = 1;
if v1 == null goto label04;
if v2 == 0 goto label04;
v6 = 1;
goto label05;
label04:
v6 = 0;
label05:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean outputStreamSet> = v6;
exitmonitor v5;
label06:
goto label08;
label07:
v7 := @caughtexception;
exitmonitor v5;
throw v7;
label08:
staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: void safeClose(java.io.Closeable)>(v3);
goto label11;
label09:
v8 := @caughtexception;
staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: void safeClose(java.io.Closeable)>(v3);
if v4 != 0 goto label10;
staticinvoke <org.jboss.logmanager.handlers.SyslogHandler: void safeClose(java.io.Closeable)>(v1);
label10:
throw v8;
label11:
return;
catch java.lang.Throwable from label02 to label06 with label07;
catch java.lang.Throwable from label01 to label08 with label09;
}
static void safeClose(java.io.Closeable)
{
java.io.Closeable v0;
v0 := @parameter0: java.io.Closeable;
return;
}
static void safeFlush(java.io.Flushable)
{
java.lang.Exception v1;
java.io.Flushable v0;
v0 := @parameter0: java.io.Flushable;
if v0 == null goto label4;
label1:
interfaceinvoke v0.<java.io.Flushable: void flush()>();
label2:
goto label4;
label3:
v1 := @caughtexception;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private void init()
{
java.lang.IllegalStateException v15, v6;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.TcpOutputStream v12;
java.net.InetAddress v3;
int v4;
java.lang.String v17;
boolean v1, v13, v2;
java.io.OutputStream v11;
org.jboss.logmanager.handlers.UdpOutputStream v10;
org.jboss.logmanager.handlers.SyslogHandler$Protocol v16, v5, v8, v9;
java.io.IOException v14;
org.jboss.logmanager.handlers.ClientSocketFactory v7;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection>;
if v1 == 0 goto label8;
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean outputStreamSet>;
if v2 != 0 goto label8;
v3 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress serverAddress>;
if v3 == null goto label1;
v4 = v0.<org.jboss.logmanager.handlers.SyslogHandler: int port>;
if v4 < 0 goto label1;
v5 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol>;
if v5 != null goto label2;
label1:
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid connection parameters. The port, server address and protocol must be set.");
throw v6;
label2:
v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean initializeConnection> = 0;
label3:
v7 = specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.ClientSocketFactory getClientSocketFactory()>();
v8 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol>;
v9 = <org.jboss.logmanager.handlers.SyslogHandler$Protocol: org.jboss.logmanager.handlers.SyslogHandler$Protocol UDP>;
if v8 != v9 goto label4;
v10 = new org.jboss.logmanager.handlers.UdpOutputStream;
specialinvoke v10.<org.jboss.logmanager.handlers.UdpOutputStream: void <init>(org.jboss.logmanager.handlers.ClientSocketFactory)>(v7);
v11 = v10;
goto label5;
label4:
v12 = new org.jboss.logmanager.handlers.TcpOutputStream;
v13 = v0.<org.jboss.logmanager.handlers.SyslogHandler: boolean blockOnReconnect>;
specialinvoke v12.<org.jboss.logmanager.handlers.TcpOutputStream: void <init>(org.jboss.logmanager.handlers.ClientSocketFactory,boolean)>(v7, v13);
v11 = v12;
label5:
specialinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: void setOutputStream(java.io.OutputStream,boolean)>(v11, 0);
label6:
goto label8;
label7:
v14 := @caughtexception;
v15 = new java.lang.IllegalStateException;
v16 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol>;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.jboss.logmanager.handlers.SyslogHandler$Protocol)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not set \u0001 output stream.");
specialinvoke v15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v17, v14);
throw v15;
label8:
return;
catch java.io.IOException from label3 to label6 with label7;
}
protected int calculatePriority(java.util.logging.Level, org.jboss.logmanager.handlers.SyslogHandler$Facility)
{
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Facility v2;
int v4, v5, v6;
org.jboss.logmanager.handlers.SyslogHandler$Severity v3;
java.util.logging.Level v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: java.util.logging.Level;
v2 := @parameter1: org.jboss.logmanager.handlers.SyslogHandler$Facility;
v3 = staticinvoke <org.jboss.logmanager.handlers.SyslogHandler$Severity: org.jboss.logmanager.handlers.SyslogHandler$Severity fromLevel(java.util.logging.Level)>(v1);
v4 = v2.<org.jboss.logmanager.handlers.SyslogHandler$Facility: int octal>;
v5 = v3.<org.jboss.logmanager.handlers.SyslogHandler$Severity: int code>;
v6 = v4 | v5;
return v6;
}
protected byte[] createRFC5424Header(org.jboss.logmanager.ExtLogRecord) throws java.io.IOException
{
byte[] v53;
org.jboss.logmanager.handlers.SyslogHandler v0;
byte v44, v9;
boolean v48, v51;
long v43, v8;
org.jboss.logmanager.ExtLogRecord v1;
java.util.logging.Level v4;
java.util.Calendar v10;
int v11, v12, v13, v14, v15, v16, v18, v24, v26, v27, v28, v29, v30, v31, v32, v33, v52, v6;
java.lang.String v35, v36, v37, v40, v41, v42, v45, v46, v47, v49, v50;
org.jboss.logmanager.handlers.SyslogHandler$Facility v5;
org.jboss.logmanager.handlers.ByteStringBuilder v17, v19, v2, v20, v21, v22, v23, v25, v3, v34, v38, v39, v7;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = new org.jboss.logmanager.handlers.ByteStringBuilder;
specialinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: void <init>(int)>(256);
v3 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(60);
v4 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.util.logging.Level getLevel()>();
v5 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility facility>;
v6 = virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: int calculatePriority(java.util.logging.Level,org.jboss.logmanager.handlers.SyslogHandler$Facility)>(v4, v5);
v7 = virtualinvoke v3.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v6);
virtualinvoke v7.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(62);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("1 ");
v8 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: long getMillis()>();
v9 = v8 cmp 0L;
if v9 > 0 goto label01;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("- ");
goto label15;
label01:
v10 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
virtualinvoke v10.<java.util.Calendar: void setTimeInMillis(long)>(v8);
v11 = virtualinvoke v10.<java.util.Calendar: int get(int)>(2);
v12 = virtualinvoke v10.<java.util.Calendar: int get(int)>(5);
v13 = virtualinvoke v10.<java.util.Calendar: int get(int)>(11);
v14 = virtualinvoke v10.<java.util.Calendar: int get(int)>(12);
v15 = virtualinvoke v10.<java.util.Calendar: int get(int)>(13);
v16 = virtualinvoke v10.<java.util.Calendar: int get(int)>(1);
v17 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v16);
virtualinvoke v17.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(45);
if v11 >= 9 goto label02;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label02:
v18 = v11 + 1;
v19 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v18);
virtualinvoke v19.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(45);
if v12 >= 10 goto label03;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label03:
v20 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v12);
virtualinvoke v20.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(84);
if v13 >= 10 goto label04;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label04:
v21 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v13);
virtualinvoke v21.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(58);
if v14 >= 10 goto label05;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label05:
v22 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v14);
virtualinvoke v22.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(58);
if v15 >= 10 goto label06;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label06:
v23 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v15);
virtualinvoke v23.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(46);
v24 = virtualinvoke v10.<java.util.Calendar: int get(int)>(14);
if v24 >= 10 goto label07;
v25 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
virtualinvoke v25.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
goto label08;
label07:
if v24 >= 100 goto label08;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label08:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v24);
v26 = virtualinvoke v10.<java.util.Calendar: int get(int)>(15);
v27 = virtualinvoke v10.<java.util.Calendar: int get(int)>(16);
v28 = v26 + v27;
if v28 != 0 goto label09;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(java.lang.String)>("+00:00");
goto label14;
label09:
v29 = (int) 60000;
v30 = v28 / v29;
if v30 >= 0 goto label10;
v30 = neg v30;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(45);
goto label11;
label10:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(43);
label11:
v31 = v30 / 60;
v32 = v31 * 60;
v33 = v30 - v32;
if v31 >= 10 goto label12;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label12:
v34 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v31);
virtualinvoke v34.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(58);
if v33 >= 10 goto label13;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label13:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v33);
label14:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
label15:
v35 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getHostName()>();
v36 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname>;
if v36 == null goto label16;
v37 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname>;
v38 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendPrintUSASCII(java.lang.String,int)>(v37, 255);
virtualinvoke v38.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label18;
label16:
if v35 == null goto label17;
v39 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendPrintUSASCII(java.lang.String,int)>(v35, 255);
virtualinvoke v39.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label18;
label17:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(java.lang.String)>("- ");
label18:
v40 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getProcessName()>();
v41 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName>;
if v41 == null goto label19;
v42 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName>;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendPrintUSASCII(java.lang.String,int)>(v42, 48);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label21;
label19:
if v40 == null goto label20;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendPrintUSASCII(java.lang.String,int)>(v40, 48);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label21;
label20:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("- ");
label21:
v43 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: long getProcessId()>();
v44 = v43 cmp -1L;
if v44 == 0 goto label22;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(long)>(v43);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label24;
label22:
v45 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String pid>;
if v45 == null goto label23;
v46 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String pid>;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendPrintUSASCII(java.lang.String,int)>(v46, 128);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label24;
label23:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("- ");
label24:
v47 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getLoggerName()>();
if v47 != null goto label25;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("- ");
goto label27;
label25:
v48 = virtualinvoke v47.<java.lang.String: boolean isEmpty()>();
if v48 == 0 goto label26;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("root-logger");
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label27;
label26:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendPrintUSASCII(java.lang.String,int)>(v47, 32);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
label27:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("- ");
v49 = virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String getEncoding()>();
if v49 == null goto label28;
v50 = "UTF-8";
v51 = virtualinvoke v50.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v49);
if v51 == 0 goto label29;
label28:
v52 = (int) 65279;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUtf8Raw(int)>(v52);
label29:
v53 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: byte[] toArray()>();
return v53;
}
protected byte[] createRFC3164Header(org.jboss.logmanager.ExtLogRecord) throws java.io.IOException
{
byte[] v44;
org.jboss.logmanager.handlers.SyslogHandler v0;
byte v10, v36;
java.util.Locale v17;
boolean v32;
java.lang.String[] v19;
long v11, v35, v8;
org.jboss.logmanager.ExtLogRecord v1;
java.util.logging.Level v4;
java.util.Calendar v9;
int v12, v13, v14, v15, v16, v6;
java.lang.String v20, v25, v26, v27, v31, v33, v34, v39, v41;
org.jboss.logmanager.handlers.SyslogHandler$Facility v5;
java.text.DateFormatSymbols v18;
org.jboss.logmanager.handlers.ByteStringBuilder v2, v21, v22, v23, v24, v28, v29, v3, v30, v37, v38, v40, v42, v43, v7;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 := @parameter0: org.jboss.logmanager.ExtLogRecord;
v2 = new org.jboss.logmanager.handlers.ByteStringBuilder;
specialinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: void <init>(int)>(256);
v3 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(60);
v4 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.util.logging.Level getLevel()>();
v5 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility facility>;
v6 = virtualinvoke v0.<org.jboss.logmanager.handlers.SyslogHandler: int calculatePriority(java.util.logging.Level,org.jboss.logmanager.handlers.SyslogHandler$Facility)>(v4, v5);
v7 = virtualinvoke v3.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v6);
virtualinvoke v7.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(62);
v8 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: long getMillis()>();
v9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
v10 = v8 cmp 0L;
if v10 > 0 goto label01;
v11 = staticinvoke <java.lang.System: long currentTimeMillis()>();
goto label02;
label01:
v11 = v8;
label02:
virtualinvoke v9.<java.util.Calendar: void setTimeInMillis(long)>(v11);
v12 = virtualinvoke v9.<java.util.Calendar: int get(int)>(2);
v13 = virtualinvoke v9.<java.util.Calendar: int get(int)>(5);
v14 = virtualinvoke v9.<java.util.Calendar: int get(int)>(11);
v15 = virtualinvoke v9.<java.util.Calendar: int get(int)>(12);
v16 = virtualinvoke v9.<java.util.Calendar: int get(int)>(13);
v17 = <java.util.Locale: java.util.Locale ENGLISH>;
v18 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(v17);
v19 = virtualinvoke v18.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();
v20 = v19[v12];
v21 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>(v20);
virtualinvoke v21.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
if v13 >= 10 goto label03;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
label03:
v22 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v13);
virtualinvoke v22.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
if v14 >= 10 goto label04;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label04:
v23 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v14);
virtualinvoke v23.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(58);
if v15 >= 10 goto label05;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label05:
v24 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v15);
virtualinvoke v24.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(58);
if v16 >= 10 goto label06;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(0);
label06:
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(int)>(v16);
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
v25 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getHostName()>();
v26 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname>;
if v26 == null goto label07;
v27 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String hostname>;
v28 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>(v27);
virtualinvoke v28.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label09;
label07:
if v25 == null goto label08;
v29 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>(v25);
virtualinvoke v29.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
goto label09;
label08:
v30 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>("UNKNOWN_HOSTNAME");
virtualinvoke v30.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
label09:
v31 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: java.lang.String getProcessName()>();
v32 = 0;
v33 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName>;
if v33 == null goto label10;
v34 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String appName>;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>(v34);
v32 = 1;
goto label11;
label10:
if v31 == null goto label11;
virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>(v31);
v32 = 1;
label11:
v35 = virtualinvoke v1.<org.jboss.logmanager.ExtLogRecord: long getProcessId()>();
v36 = v35 cmp -1L;
if v36 == 0 goto label12;
v37 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(91);
v38 = virtualinvoke v37.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(long)>(v35);
virtualinvoke v38.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(93);
v32 = 1;
goto label13;
label12:
v39 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String pid>;
if v39 == null goto label13;
v40 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(91);
v41 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.String pid>;
v42 = virtualinvoke v40.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder appendUSASCII(java.lang.String)>(v41);
virtualinvoke v42.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(93);
v32 = 1;
label13:
if v32 == 0 goto label14;
v43 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(58);
virtualinvoke v43.<org.jboss.logmanager.handlers.ByteStringBuilder: org.jboss.logmanager.handlers.ByteStringBuilder append(char)>(32);
label14:
v44 = virtualinvoke v2.<org.jboss.logmanager.handlers.ByteStringBuilder: byte[] toArray()>();
return v44;
}
private org.jboss.logmanager.handlers.ClientSocketFactory getClientSocketFactory()
{
java.lang.Throwable v10;
org.jboss.logmanager.handlers.SyslogHandler v0;
org.jboss.logmanager.handlers.SyslogHandler$Protocol v4, v5;
java.net.InetAddress v7;
javax.net.SocketFactory v6;
org.jboss.logmanager.handlers.ClientSocketFactory v2, v3, v9;
int v8;
java.lang.Object v1;
v0 := @this: org.jboss.logmanager.handlers.SyslogHandler;
v1 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.ClientSocketFactory clientSocketFactory>;
if v2 == null goto label3;
v3 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.ClientSocketFactory clientSocketFactory>;
exitmonitor v1;
label2:
return v3;
label3:
v4 = v0.<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Protocol protocol>;
v5 = <org.jboss.logmanager.handlers.SyslogHandler$Protocol: org.jboss.logmanager.handlers.SyslogHandler$Protocol SSL_TCP>;
if v4 != v5 goto label4;
v6 = staticinvoke <javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>();
goto label5;
label4:
v6 = staticinvoke <javax.net.SocketFactory: javax.net.SocketFactory getDefault()>();
label5:
v7 = v0.<org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress serverAddress>;
v8 = v0.<org.jboss.logmanager.handlers.SyslogHandler: int port>;
v9 = staticinvoke <org.jboss.logmanager.handlers.ClientSocketFactory: org.jboss.logmanager.handlers.ClientSocketFactory of(javax.net.SocketFactory,java.net.InetAddress,int)>(v6, v7, v8);
exitmonitor v1;
label6:
return v9;
label7:
v10 := @caughtexception;
exitmonitor v1;
throw v10;
catch java.lang.Throwable from label1 to label2 with label7;
catch java.lang.Throwable from label3 to label6 with label7;
}
private static java.lang.String checkPrintableAscii(java.lang.String, java.lang.String)
{
java.lang.Object[] v10;
char v5, v6;
java.lang.IllegalArgumentException v9;
java.util.regex.Matcher v3;
java.lang.String v0, v1, v11, v7, v8;
java.util.regex.Pattern v2;
boolean v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
if v1 == null goto label1;
v2 = <org.jboss.logmanager.handlers.SyslogHandler: java.util.regex.Pattern PRINTABLE_ASCII_PATTERN>;
v3 = virtualinvoke v2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v1);
v4 = virtualinvoke v3.<java.util.regex.Matcher: boolean find()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
v6 = staticinvoke <java.lang.Character: char toUpperCase(char)>(v5);
v7 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(1);
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (char,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
v9 = new java.lang.IllegalArgumentException;
v10 = newarray (java.lang.Object)[3];
v10[0] = v8;
v10[1] = v1;
v10[2] = v0;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s \'%s\' is invalid. The %s must be printable ASCII characters with no spaces.", v10);
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v9;
label1:
return v1;
}
static void <clinit>()
{
java.net.InetAddress v2;
java.lang.IllegalStateException v4;
org.jboss.logmanager.handlers.SyslogHandler$Facility v0;
java.util.regex.Pattern v1;
java.net.UnknownHostException v3;
v0 = <org.jboss.logmanager.handlers.SyslogHandler$Facility: org.jboss.logmanager.handlers.SyslogHandler$Facility USER_LEVEL>;
<org.jboss.logmanager.handlers.SyslogHandler: org.jboss.logmanager.handlers.SyslogHandler$Facility DEFAULT_FACILITY> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\P{Print} ]");
<org.jboss.logmanager.handlers.SyslogHandler: java.util.regex.Pattern PRINTABLE_ASCII_PATTERN> = v1;
label1:
v2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>("localhost");
<org.jboss.logmanager.handlers.SyslogHandler: java.net.InetAddress DEFAULT_ADDRESS> = v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not create address to localhost");
throw v4;
label4:
return;
catch java.net.UnknownHostException from label1 to label2 with label3;
}
}