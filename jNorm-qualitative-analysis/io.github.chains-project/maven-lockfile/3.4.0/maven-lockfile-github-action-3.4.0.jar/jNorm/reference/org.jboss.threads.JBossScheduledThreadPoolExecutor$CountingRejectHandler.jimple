final class org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler extends java.lang.Object implements java.util.concurrent.RejectedExecutionHandler
{
private final java.util.concurrent.RejectedExecutionHandler delegate;
final org.jboss.threads.JBossScheduledThreadPoolExecutor this$0;
public void <init>(org.jboss.threads.JBossScheduledThreadPoolExecutor, java.util.concurrent.RejectedExecutionHandler)
{
org.jboss.threads.JBossScheduledThreadPoolExecutor v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler v0;
java.util.concurrent.RejectedExecutionHandler v2;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler;
v1 := @parameter0: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v2 := @parameter1: java.util.concurrent.RejectedExecutionHandler;
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: org.jboss.threads.JBossScheduledThreadPoolExecutor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: java.util.concurrent.RejectedExecutionHandler delegate> = v2;
return;
}
public java.util.concurrent.RejectedExecutionHandler getDelegate()
{
org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler v0;
java.util.concurrent.RejectedExecutionHandler v1;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler;
v1 = v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: java.util.concurrent.RejectedExecutionHandler delegate>;
return v1;
}
public void rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)
{
java.util.concurrent.ThreadPoolExecutor v2;
org.jboss.threads.JBossScheduledThreadPoolExecutor v3, v5;
java.lang.Runnable v1;
org.jboss.threads.StoppedExecutorException v8;
java.util.concurrent.RejectedExecutionHandler v9;
java.util.concurrent.atomic.AtomicInteger v4;
org.jboss.threads.Messages v7;
org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler v0;
boolean v6;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler;
v1 := @parameter0: java.lang.Runnable;
v2 := @parameter1: java.util.concurrent.ThreadPoolExecutor;
v3 = v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: org.jboss.threads.JBossScheduledThreadPoolExecutor this$0>;
v4 = v3.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.atomic.AtomicInteger rejectCount>;
virtualinvoke v4.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
v5 = v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: org.jboss.threads.JBossScheduledThreadPoolExecutor this$0>;
v6 = virtualinvoke v5.<org.jboss.threads.JBossScheduledThreadPoolExecutor: boolean isShutdown()>();
if v6 == 0 goto label1;
v7 = <org.jboss.threads.Messages: org.jboss.threads.Messages msg>;
v8 = interfaceinvoke v7.<org.jboss.threads.Messages: org.jboss.threads.StoppedExecutorException shutDownInitiated()>();
throw v8;
label1:
v9 = v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: java.util.concurrent.RejectedExecutionHandler delegate>;
interfaceinvoke v9.<java.util.concurrent.RejectedExecutionHandler: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>(v1, v2);
return;
}
}