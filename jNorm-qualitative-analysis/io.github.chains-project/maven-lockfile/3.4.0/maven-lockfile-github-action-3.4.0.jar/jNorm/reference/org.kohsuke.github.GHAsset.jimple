public class org.kohsuke.github.GHAsset extends org.kohsuke.github.GHObject
{
org.kohsuke.github.GHRepository owner;
private java.lang.String name;
private java.lang.String label;
private java.lang.String state;
private java.lang.String content_type;
private long size;
private long download_count;
private java.lang.String browser_download_url;
public void <init>()
{
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public java.lang.String getContentType()
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: java.lang.String content_type>;
return v1;
}
public void setContentType(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHAsset: void edit(java.lang.String,java.lang.Object)>("content_type", v1);
v0.<org.kohsuke.github.GHAsset: java.lang.String content_type> = v1;
return;
}
public long getDownloadCount()
{
long v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: long download_count>;
return v1;
}
public java.lang.String getLabel()
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: java.lang.String label>;
return v1;
}
public void setLabel(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHAsset: void edit(java.lang.String,java.lang.Object)>("label", v1);
v0.<org.kohsuke.github.GHAsset: java.lang.String label> = v1;
return;
}
public java.lang.String getName()
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: java.lang.String name>;
return v1;
}
public org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: org.kohsuke.github.GHRepository owner>;
return v1;
}
public long getSize()
{
long v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: long size>;
return v1;
}
public java.lang.String getState()
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: java.lang.String state>;
return v1;
}
public java.net.URL getHtmlUrl()
{
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
return null;
}
public java.lang.String getBrowserDownloadUrl()
{
java.lang.String v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: java.lang.String browser_download_url>;
return v1;
}
private void edit(java.lang.String, java.lang.Object) throws java.io.IOException
{
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v5, v6, v9;
org.kohsuke.github.GHAsset v0;
java.lang.Object v2;
java.lang.String v1, v7;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHAsset;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.kohsuke.github.GHAsset: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>(v1, v2);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v7 = specialinvoke v0.<org.kohsuke.github.GHAsset: java.lang.String getApiRoute()>();
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.GHAsset v0;
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = virtualinvoke v0.<org.kohsuke.github.GHAsset: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = specialinvoke v0.<org.kohsuke.github.GHAsset: java.lang.String getApiRoute()>();
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
private java.lang.String getApiRoute()
{
org.kohsuke.github.GHRepository v1, v3;
org.kohsuke.github.GHAsset v0;
long v5;
java.lang.String v2, v4, v6;
v0 := @this: org.kohsuke.github.GHAsset;
v1 = v0.<org.kohsuke.github.GHAsset: org.kohsuke.github.GHRepository owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRepository: java.lang.String getOwnerName()>();
v3 = v0.<org.kohsuke.github.GHAsset: org.kohsuke.github.GHRepository owner>;
v4 = virtualinvoke v3.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v5 = virtualinvoke v0.<org.kohsuke.github.GHAsset: long getId()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,long)>(v2, v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repos/\u0001/\u0001/releases/assets/\u0001");
return v6;
}
org.kohsuke.github.GHAsset wrap(org.kohsuke.github.GHRelease)
{
org.kohsuke.github.GHRepository v2;
org.kohsuke.github.GHRelease v1;
org.kohsuke.github.GHAsset v0;
v0 := @this: org.kohsuke.github.GHAsset;
v1 := @parameter0: org.kohsuke.github.GHRelease;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository getOwner()>();
v0.<org.kohsuke.github.GHAsset: org.kohsuke.github.GHRepository owner> = v2;
return v0;
}
public static org.kohsuke.github.GHAsset[] wrap(org.kohsuke.github.GHAsset[], org.kohsuke.github.GHRelease)
{
org.kohsuke.github.GHAsset v4;
int v2, v3;
org.kohsuke.github.GHAsset[] v0;
org.kohsuke.github.GHRelease v1;
v0 := @parameter0: org.kohsuke.github.GHAsset[];
v1 := @parameter1: org.kohsuke.github.GHRelease;
v2 = lengthof v0;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v0[v3];
virtualinvoke v4.<org.kohsuke.github.GHAsset: org.kohsuke.github.GHAsset wrap(org.kohsuke.github.GHRelease)>(v1);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
}