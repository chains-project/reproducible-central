public class org.kohsuke.github.GHBranchProtectionBuilder extends java.lang.Object
{
private final org.kohsuke.github.GHBranch branch;
private boolean enforceAdmins;
private java.util.Map prReviews;
private org.kohsuke.github.GHBranchProtectionBuilder$Restrictions restrictions;
private org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks statusChecks;
void <init>(org.kohsuke.github.GHBranch)
{
org.kohsuke.github.GHBranch v1;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: org.kohsuke.github.GHBranch;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranch branch> = v1;
return;
}
public org.kohsuke.github.GHBranchProtectionBuilder addRequiredChecks(java.util.Collection)
{
java.util.List v3;
java.util.Collection v1;
org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks v2;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.util.Collection;
v2 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks getStatusChecks()>();
v3 = v2.<org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks: java.util.List contexts>;
interfaceinvoke v3.<java.util.List: boolean addAll(java.util.Collection)>(v1);
return v0;
}
public transient org.kohsuke.github.GHBranchProtectionBuilder addRequiredChecks(java.lang.String[])
{
java.lang.String[] v1;
java.util.List v2;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.lang.String[];
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder addRequiredChecks(java.util.Collection)>(v2);
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder dismissStaleReviews()
{
org.kohsuke.github.GHBranchProtectionBuilder v0, v1;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder dismissStaleReviews(boolean)>(1);
return v1;
}
public org.kohsuke.github.GHBranchProtectionBuilder dismissStaleReviews(boolean)
{
java.util.Map v2;
java.lang.Boolean v3;
boolean v1;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map getPrReviews()>();
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dismiss_stale_reviews", v3);
return v0;
}
public org.kohsuke.github.GHBranchProtection enable() throws java.io.IOException
{
java.net.URL v13;
java.lang.String[] v15;
org.kohsuke.github.GHBranchProtectionBuilder$Restrictions v7;
org.kohsuke.github.GitHubRequest$Builder v11, v16, v2, v4, v6, v8;
org.kohsuke.github.GHBranch v12;
java.util.Map v5;
java.lang.Boolean v10;
java.lang.String v14;
boolean v9;
org.kohsuke.github.GHBranchProtectionBuilder v0;
org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks v3;
java.lang.Object v17;
org.kohsuke.github.Requester v1;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.Requester requester()>();
v2 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v3 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks statusChecks>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withNullable(java.lang.String,java.lang.Object)>("required_status_checks", v3);
v5 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews>;
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withNullable(java.lang.String,java.lang.Object)>("required_pull_request_reviews", v5);
v7 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions restrictions>;
v8 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withNullable(java.lang.String,java.lang.Object)>("restrictions", v7);
v9 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: boolean enforceAdmins>;
v10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v9);
v11 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withNullable(java.lang.String,java.lang.Object)>("enforce_admins", v10);
v12 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranch branch>;
v13 = virtualinvoke v12.<org.kohsuke.github.GHBranch: java.net.URL getProtectionUrl()>();
v14 = virtualinvoke v13.<java.net.URL: java.lang.String toString()>();
v15 = newarray (java.lang.String)[0];
v16 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v14, v15);
v17 = virtualinvoke v16.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHBranchProtection;");
return v17;
}
public org.kohsuke.github.GHBranchProtectionBuilder includeAdmins()
{
org.kohsuke.github.GHBranchProtectionBuilder v0, v1;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder includeAdmins(boolean)>(1);
return v1;
}
public org.kohsuke.github.GHBranchProtectionBuilder includeAdmins(boolean)
{
boolean v1;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: boolean;
v0.<org.kohsuke.github.GHBranchProtectionBuilder: boolean enforceAdmins> = v1;
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder requiredReviewers(int)
{
java.util.Map v2;
int v1;
java.lang.Integer v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: int;
v2 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map getPrReviews()>();
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("required_approving_review_count", v3);
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder requireBranchIsUpToDate()
{
org.kohsuke.github.GHBranchProtectionBuilder v0, v1;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder requireBranchIsUpToDate(boolean)>(1);
return v1;
}
public org.kohsuke.github.GHBranchProtectionBuilder requireBranchIsUpToDate(boolean)
{
org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks v2;
boolean v1;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks getStatusChecks()>();
v2.<org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks: boolean strict> = v1;
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder requireCodeOwnReviews()
{
org.kohsuke.github.GHBranchProtectionBuilder v0, v1;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder requireCodeOwnReviews(boolean)>(1);
return v1;
}
public org.kohsuke.github.GHBranchProtectionBuilder requireCodeOwnReviews(boolean)
{
java.util.Map v2;
java.lang.Boolean v3;
boolean v1;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map getPrReviews()>();
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("require_code_owner_reviews", v3);
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder requireReviews()
{
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map getPrReviews()>();
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder restrictReviewDismissals()
{
java.util.Map v1, v3;
org.kohsuke.github.GHBranchProtectionBuilder$Restrictions v4;
boolean v2;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map getPrReviews()>();
v1 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews>;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("dismissal_restrictions");
if v2 != 0 goto label1;
v3 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews>;
v4 = new org.kohsuke.github.GHBranchProtectionBuilder$Restrictions;
specialinvoke v4.<org.kohsuke.github.GHBranchProtectionBuilder$Restrictions: void <init>()>();
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dismissal_restrictions", v4);
label1:
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder restrictPushAccess()
{
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions getRestrictions()>();
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder teamPushAccess(java.util.Collection)
{
java.util.Iterator v2;
org.kohsuke.github.GHTeam[] v5;
java.util.Collection v1;
java.lang.Object v4;
boolean v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = newarray (org.kohsuke.github.GHTeam)[1];
v5[0] = v4;
virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder teamPushAccess(org.kohsuke.github.GHTeam[])>(v5);
goto label1;
label2:
return v0;
}
public transient org.kohsuke.github.GHBranchProtectionBuilder teamPushAccess(org.kohsuke.github.GHTeam[])
{
org.kohsuke.github.GHTeam[] v1;
java.util.Set v6;
org.kohsuke.github.GHBranchProtectionBuilder$Restrictions v5;
int v2, v3;
org.kohsuke.github.GHTeam v4;
java.lang.String v7;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: org.kohsuke.github.GHTeam[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions getRestrictions()>();
v6 = v5.<org.kohsuke.github.GHBranchProtectionBuilder$Restrictions: java.util.Set teams>;
v7 = virtualinvoke v4.<org.kohsuke.github.GHTeam: java.lang.String getSlug()>();
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v7);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder teamReviewDismissals(java.util.Collection)
{
java.util.Iterator v2;
org.kohsuke.github.GHTeam[] v5;
java.util.Collection v1;
java.lang.Object v4;
boolean v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = newarray (org.kohsuke.github.GHTeam)[1];
v5[0] = v4;
virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder teamReviewDismissals(org.kohsuke.github.GHTeam[])>(v5);
goto label1;
label2:
return v0;
}
public transient org.kohsuke.github.GHBranchProtectionBuilder teamReviewDismissals(org.kohsuke.github.GHTeam[])
{
org.kohsuke.github.GHTeam[] v1;
int v2, v3;
org.kohsuke.github.GHTeam v4;
java.lang.String v5;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: org.kohsuke.github.GHTeam[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<org.kohsuke.github.GHTeam: java.lang.String getSlug()>();
specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: void addReviewRestriction(java.lang.String,boolean)>(v5, 1);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder userPushAccess(java.util.Collection)
{
java.util.Iterator v2;
java.util.Collection v1;
org.kohsuke.github.GHUser[] v5;
java.lang.Object v4;
boolean v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = newarray (org.kohsuke.github.GHUser)[1];
v5[0] = v4;
virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder userPushAccess(org.kohsuke.github.GHUser[])>(v5);
goto label1;
label2:
return v0;
}
public transient org.kohsuke.github.GHBranchProtectionBuilder userPushAccess(org.kohsuke.github.GHUser[])
{
java.util.Set v6;
org.kohsuke.github.GHBranchProtectionBuilder$Restrictions v5;
org.kohsuke.github.GHUser v4;
int v2, v3;
org.kohsuke.github.GHUser[] v1;
java.lang.String v7;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: org.kohsuke.github.GHUser[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions getRestrictions()>();
v6 = v5.<org.kohsuke.github.GHBranchProtectionBuilder$Restrictions: java.util.Set users>;
v7 = virtualinvoke v4.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v7);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public org.kohsuke.github.GHBranchProtectionBuilder userReviewDismissals(java.util.Collection)
{
java.util.Iterator v2;
java.util.Collection v1;
org.kohsuke.github.GHUser[] v5;
java.lang.Object v4;
boolean v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = newarray (org.kohsuke.github.GHUser)[1];
v5[0] = v4;
virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder userReviewDismissals(org.kohsuke.github.GHUser[])>(v5);
goto label1;
label2:
return v0;
}
public transient org.kohsuke.github.GHBranchProtectionBuilder userReviewDismissals(org.kohsuke.github.GHUser[])
{
org.kohsuke.github.GHUser v4;
int v2, v3;
org.kohsuke.github.GHUser[] v1;
java.lang.String v5;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: org.kohsuke.github.GHUser[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
specialinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: void addReviewRestriction(java.lang.String,boolean)>(v5, 0);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
private void addReviewRestriction(java.lang.String, boolean)
{
java.util.Map v3;
java.util.Set v5, v6;
java.lang.Object v4;
java.lang.String v1;
boolean v2;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
virtualinvoke v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder restrictReviewDismissals()>();
v3 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>("dismissal_restrictions");
if v2 == 0 goto label1;
v5 = v4.<org.kohsuke.github.GHBranchProtectionBuilder$Restrictions: java.util.Set teams>;
interfaceinvoke v5.<java.util.Set: boolean add(java.lang.Object)>(v1);
goto label2;
label1:
v6 = v4.<org.kohsuke.github.GHBranchProtectionBuilder$Restrictions: java.util.Set users>;
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v1);
label2:
return;
}
private java.util.Map getPrReviews()
{
java.util.Map v1, v3;
java.util.HashMap v2;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews>;
if v1 != null goto label1;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews> = v2;
label1:
v3 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: java.util.Map prReviews>;
return v3;
}
private org.kohsuke.github.GHBranchProtectionBuilder$Restrictions getRestrictions()
{
org.kohsuke.github.GHBranchProtectionBuilder$Restrictions v1, v2, v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions restrictions>;
if v1 != null goto label1;
v2 = new org.kohsuke.github.GHBranchProtectionBuilder$Restrictions;
specialinvoke v2.<org.kohsuke.github.GHBranchProtectionBuilder$Restrictions: void <init>()>();
v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions restrictions> = v2;
label1:
v3 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$Restrictions restrictions>;
return v3;
}
private org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks getStatusChecks()
{
org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks v1, v2, v3;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks statusChecks>;
if v1 != null goto label1;
v2 = new org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks;
specialinvoke v2.<org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks: void <init>()>();
v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks statusChecks> = v2;
label1:
v3 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranchProtectionBuilder$StatusChecks statusChecks>;
return v3;
}
private org.kohsuke.github.Requester requester()
{
org.kohsuke.github.GHBranch v1;
org.kohsuke.github.internal.Previews v4;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
org.kohsuke.github.GHBranchProtectionBuilder v0;
v0 := @this: org.kohsuke.github.GHBranchProtectionBuilder;
v1 = v0.<org.kohsuke.github.GHBranchProtectionBuilder: org.kohsuke.github.GHBranch branch>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHBranch: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews LUKE_CAGE>;
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v4);
return v5;
}
}