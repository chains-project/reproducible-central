public class org.kohsuke.github.GHCheckRun extends org.kohsuke.github.GHObject
{
org.kohsuke.github.GHRepository owner;
private java.lang.String status;
private java.lang.String conclusion;
private java.lang.String name;
private java.lang.String headSha;
private java.lang.String nodeId;
private java.lang.String externalId;
private java.lang.String startedAt;
private java.lang.String completedAt;
private java.lang.String htmlUrl;
private java.lang.String detailsUrl;
private org.kohsuke.github.GHCheckRun$Output output;
private org.kohsuke.github.GHApp app;
private org.kohsuke.github.GHPullRequest[] pullRequests;
private org.kohsuke.github.GHCheckSuite checkSuite;
public void <init>()
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHPullRequest[] v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
v1 = newarray (org.kohsuke.github.GHPullRequest)[0];
v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHPullRequest[] pullRequests> = v1;
return;
}
org.kohsuke.github.GHCheckRun wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHRepository owner> = v1;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
virtualinvoke v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckRun wrap(org.kohsuke.github.GitHub)>(v2);
return v0;
}
org.kohsuke.github.GHCheckRun wrap(org.kohsuke.github.GitHub)
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHPullRequest v6;
org.kohsuke.github.GHRepository v11, v2, v7, v9;
org.kohsuke.github.GHCheckSuite v10, v12, v8;
org.kohsuke.github.GHPullRequest[] v3;
int v4, v5;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHRepository owner>;
if v2 == null goto label2;
v3 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHPullRequest[] pullRequests>;
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v3[v5];
v7 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHRepository owner>;
virtualinvoke v6.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GHIssue wrap(org.kohsuke.github.GHRepository)>(v7);
v5 = v5 + 1;
goto label1;
label2:
v8 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckSuite checkSuite>;
if v8 == null goto label4;
v9 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHRepository owner>;
if v9 == null goto label3;
v10 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckSuite checkSuite>;
v11 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHRepository owner>;
virtualinvoke v10.<org.kohsuke.github.GHCheckSuite: org.kohsuke.github.GHCheckSuite wrap(org.kohsuke.github.GHRepository)>(v11);
goto label4;
label3:
v12 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckSuite checkSuite>;
virtualinvoke v12.<org.kohsuke.github.GHCheckSuite: org.kohsuke.github.GHCheckSuite wrap(org.kohsuke.github.GitHub)>(v1);
label4:
return v0;
}
public org.kohsuke.github.GHCheckRun$Status getStatus()
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHCheckRun$Status v2;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String status>;
v2 = staticinvoke <org.kohsuke.github.GHCheckRun$Status: org.kohsuke.github.GHCheckRun$Status 'from'(java.lang.String)>(v1);
return v2;
}
private java.lang.Object statusAsStr(org.kohsuke.github.GHCheckRun$Status, java.lang.Class)
{
org.kohsuke.github.GHCheckRun v0;
java.lang.Class v2;
org.kohsuke.github.GHCheckRun$Status v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 := @parameter0: org.kohsuke.github.GHCheckRun$Status;
v2 := @parameter1: java.lang.Class;
return v1;
}
public org.kohsuke.github.GHCheckRun$Conclusion getConclusion()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
org.kohsuke.github.GHCheckRun$Conclusion v2;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String conclusion>;
v2 = staticinvoke <org.kohsuke.github.GHCheckRun$Conclusion: org.kohsuke.github.GHCheckRun$Conclusion 'from'(java.lang.String)>(v1);
return v2;
}
private java.lang.Object conclusionAsStr(org.kohsuke.github.GHCheckRun$Conclusion, java.lang.Class)
{
org.kohsuke.github.GHCheckRun v0;
java.lang.Class v2;
org.kohsuke.github.GHCheckRun$Conclusion v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 := @parameter0: org.kohsuke.github.GHCheckRun$Conclusion;
v2 := @parameter1: java.lang.Class;
return v1;
}
public java.lang.String getName()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String name>;
return v1;
}
public java.lang.String getHeadSha()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String headSha>;
return v1;
}
public java.util.List getPullRequests() throws java.io.IOException
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHPullRequest v4;
java.util.List v7, v8;
org.kohsuke.github.GHPullRequest[] v1, v6;
int v2, v3;
java.lang.String v5;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHPullRequest[] pullRequests>;
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<org.kohsuke.github.GHPullRequest: java.lang.String getTitle()>();
virtualinvoke v4.<org.kohsuke.github.GHPullRequest: void refresh(java.lang.Object)>(v5);
v3 = v3 + 1;
goto label1;
label2:
v6 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHPullRequest[] pullRequests>;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v6);
v8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v7);
return v8;
}
public java.net.URL getHtmlUrl()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String htmlUrl>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.lang.String getNodeId()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String nodeId>;
return v1;
}
public java.lang.String getExternalId()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String externalId>;
return v1;
}
public java.net.URL getDetailsUrl()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String detailsUrl>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.util.Date getStartedAt()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String startedAt>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public java.util.Date getCompletedAt()
{
org.kohsuke.github.GHCheckRun v0;
java.lang.String v1;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: java.lang.String completedAt>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHApp getApp()
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHApp v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHApp app>;
return v1;
}
public org.kohsuke.github.GHCheckSuite getCheckSuite()
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHCheckSuite v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckSuite checkSuite>;
return v1;
}
public org.kohsuke.github.GHCheckRun$Output getOutput()
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHCheckRun$Output v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckRun$Output output>;
return v1;
}
public org.kohsuke.github.GHCheckRunBuilder update()
{
org.kohsuke.github.GHCheckRun v0;
org.kohsuke.github.GHRepository v2;
long v3;
org.kohsuke.github.GHCheckRunBuilder v1;
v0 := @this: org.kohsuke.github.GHCheckRun;
v1 = new org.kohsuke.github.GHCheckRunBuilder;
v2 = v0.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHRepository owner>;
v3 = virtualinvoke v0.<org.kohsuke.github.GHCheckRun: long getId()>();
specialinvoke v1.<org.kohsuke.github.GHCheckRunBuilder: void <init>(org.kohsuke.github.GHRepository,long)>(v2, v3);
return v1;
}
}