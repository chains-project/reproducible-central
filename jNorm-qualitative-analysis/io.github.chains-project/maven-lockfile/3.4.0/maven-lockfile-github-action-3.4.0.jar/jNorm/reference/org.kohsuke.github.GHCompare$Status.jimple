public final enum class org.kohsuke.github.GHCompare$Status extends java.lang.Enum
{
public static final enum org.kohsuke.github.GHCompare$Status behind;
public static final enum org.kohsuke.github.GHCompare$Status ahead;
public static final enum org.kohsuke.github.GHCompare$Status identical;
public static final enum org.kohsuke.github.GHCompare$Status diverged;
private static final org.kohsuke.github.GHCompare$Status[] $VALUES;
public static org.kohsuke.github.GHCompare$Status[] values()
{
java.lang.Object v1;
org.kohsuke.github.GHCompare$Status[] v0;
v0 = <org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.kohsuke.github.GHCompare$Status valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/kohsuke/github/GHCompare$Status;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
org.kohsuke.github.GHCompare$Status v0;
v0 := @this: org.kohsuke.github.GHCompare$Status;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static org.kohsuke.github.GHCompare$Status[] $values()
{
org.kohsuke.github.GHCompare$Status[] v0;
org.kohsuke.github.GHCompare$Status v1, v2, v3, v4;
v0 = newarray (org.kohsuke.github.GHCompare$Status)[4];
v1 = <org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status behind>;
v0[0] = v1;
v2 = <org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status ahead>;
v0[1] = v2;
v3 = <org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status identical>;
v0[2] = v3;
v4 = <org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status diverged>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
org.kohsuke.github.GHCompare$Status[] v4;
org.kohsuke.github.GHCompare$Status v0, v1, v2, v3;
v0 = new org.kohsuke.github.GHCompare$Status;
specialinvoke v0.<org.kohsuke.github.GHCompare$Status: void <init>(java.lang.String,int)>("behind", 0);
<org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status behind> = v0;
v1 = new org.kohsuke.github.GHCompare$Status;
specialinvoke v1.<org.kohsuke.github.GHCompare$Status: void <init>(java.lang.String,int)>("ahead", 1);
<org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status ahead> = v1;
v2 = new org.kohsuke.github.GHCompare$Status;
specialinvoke v2.<org.kohsuke.github.GHCompare$Status: void <init>(java.lang.String,int)>("identical", 2);
<org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status identical> = v2;
v3 = new org.kohsuke.github.GHCompare$Status;
specialinvoke v3.<org.kohsuke.github.GHCompare$Status: void <init>(java.lang.String,int)>("diverged", 3);
<org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status diverged> = v3;
v4 = staticinvoke <org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status[] $values()>();
<org.kohsuke.github.GHCompare$Status: org.kohsuke.github.GHCompare$Status[] $VALUES> = v4;
return;
}
}