public class org.kohsuke.github.GHDeployment extends org.kohsuke.github.GHObject
{
private org.kohsuke.github.GHRepository owner;
protected java.lang.String sha;
protected java.lang.String ref;
protected java.lang.String task;
protected java.lang.Object payload;
protected java.lang.String environment;
protected java.lang.String description;
protected java.lang.String statuses_url;
protected java.lang.String repository_url;
protected org.kohsuke.github.GHUser creator;
protected java.lang.String original_environment;
protected boolean transient_environment;
protected boolean production_environment;
public void <init>()
{
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
org.kohsuke.github.GHDeployment wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHDeployment: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
public java.net.URL getStatusesUrl()
{
java.lang.String v1;
java.net.URL v2;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String statuses_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.net.URL getRepositoryUrl()
{
java.lang.String v1;
java.net.URL v2;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String repository_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.lang.String getTask()
{
java.lang.String v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String task>;
return v1;
}
public java.lang.String getPayload()
{
java.lang.Object v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.Object payload>;
return v1;
}
public java.util.Map getPayloadMap()
{
java.lang.Object v1;
org.kohsuke.github.GHDeployment v0;
java.util.Map v2;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.Object payload>;
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
return v2;
}
public java.lang.Object getPayloadObject()
{
java.lang.Object v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.Object payload>;
return v1;
}
public java.lang.String getOriginalEnvironment()
{
java.lang.String v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String original_environment>;
return v1;
}
public java.lang.String getEnvironment()
{
java.lang.String v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String environment>;
return v1;
}
public boolean isTransientEnvironment()
{
org.kohsuke.github.GHDeployment v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: boolean transient_environment>;
return v1;
}
public boolean isProductionEnvironment()
{
org.kohsuke.github.GHDeployment v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: boolean production_environment>;
return v1;
}
public org.kohsuke.github.GHUser getCreator() throws java.io.IOException
{
org.kohsuke.github.GHUser v2, v3;
org.kohsuke.github.GHDeployment v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = virtualinvoke v0.<org.kohsuke.github.GHDeployment: org.kohsuke.github.GitHub root()>();
v2 = v0.<org.kohsuke.github.GHDeployment: org.kohsuke.github.GHUser creator>;
v3 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.GHUser intern(org.kohsuke.github.GHUser)>(v2);
return v3;
}
public java.lang.String getRef()
{
java.lang.String v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String ref>;
return v1;
}
public java.lang.String getSha()
{
java.lang.String v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: java.lang.String sha>;
return v1;
}
public java.net.URL getHtmlUrl()
{
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
return null;
}
public org.kohsuke.github.GHDeploymentStatusBuilder createStatus(org.kohsuke.github.GHDeploymentState)
{
org.kohsuke.github.GHRepository v3;
org.kohsuke.github.GHDeployment v0;
org.kohsuke.github.GHDeploymentState v1;
long v4;
org.kohsuke.github.GHDeploymentStatusBuilder v2;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 := @parameter0: org.kohsuke.github.GHDeploymentState;
v2 = new org.kohsuke.github.GHDeploymentStatusBuilder;
v3 = v0.<org.kohsuke.github.GHDeployment: org.kohsuke.github.GHRepository owner>;
v4 = virtualinvoke v0.<org.kohsuke.github.GHDeployment: long getId()>();
specialinvoke v2.<org.kohsuke.github.GHDeploymentStatusBuilder: void <init>(org.kohsuke.github.GHRepository,long,org.kohsuke.github.GHDeploymentState)>(v3, v4, v1);
return v2;
}
public org.kohsuke.github.PagedIterable listStatuses()
{
org.kohsuke.github.internal.Previews v6, v8;
java.lang.String[] v4;
org.kohsuke.github.GitHubRequest$Builder v5, v7, v9;
java.util.function.Consumer v10;
org.kohsuke.github.GHDeployment v0;
java.lang.String v3;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v11;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = virtualinvoke v0.<org.kohsuke.github.GHDeployment: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = v0.<org.kohsuke.github.GHDeployment: java.lang.String statuses_url>;
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews ANT_MAN>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews FLASH>;
v9 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v8);
v10 = staticinvoke <org.kohsuke.github.GHDeployment$lambda_listStatuses_0__72: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHDeployment)>(v0);
v11 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHDeploymentStatus;", v10);
return v11;
}
org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHDeployment v0;
v0 := @this: org.kohsuke.github.GHDeployment;
v1 = v0.<org.kohsuke.github.GHDeployment: org.kohsuke.github.GHRepository owner>;
return v1;
}
}