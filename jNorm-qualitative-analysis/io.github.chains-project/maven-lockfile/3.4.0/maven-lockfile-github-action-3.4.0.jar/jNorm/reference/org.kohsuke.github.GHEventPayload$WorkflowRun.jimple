public class org.kohsuke.github.GHEventPayload$WorkflowRun extends org.kohsuke.github.GHEventPayload
{
private org.kohsuke.github.GHWorkflowRun workflowRun;
private org.kohsuke.github.GHWorkflow workflow;
public void <init>()
{
org.kohsuke.github.GHEventPayload$WorkflowRun v0;
v0 := @this: org.kohsuke.github.GHEventPayload$WorkflowRun;
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void <init>()>();
return;
}
public org.kohsuke.github.GHWorkflowRun getWorkflowRun()
{
org.kohsuke.github.GHWorkflowRun v1;
org.kohsuke.github.GHEventPayload$WorkflowRun v0;
v0 := @this: org.kohsuke.github.GHEventPayload$WorkflowRun;
v1 = v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHWorkflowRun workflowRun>;
return v1;
}
public org.kohsuke.github.GHWorkflow getWorkflow()
{
org.kohsuke.github.GHEventPayload$WorkflowRun v0;
org.kohsuke.github.GHWorkflow v1;
v0 := @this: org.kohsuke.github.GHEventPayload$WorkflowRun;
v1 = v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHWorkflow workflow>;
return v1;
}
void lateBind()
{
java.lang.IllegalStateException v3, v5;
org.kohsuke.github.GHRepository v4;
org.kohsuke.github.GHWorkflow v2, v7;
org.kohsuke.github.GHEventPayload$WorkflowRun v0;
org.kohsuke.github.GHWorkflowRun v1, v6;
v0 := @this: org.kohsuke.github.GHEventPayload$WorkflowRun;
v1 = v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHWorkflowRun workflowRun>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHWorkflow workflow>;
if v2 != null goto label2;
label1:
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected workflow and workflow_run payload, but got something else. Maybe we\'ve got another type of event?");
throw v3;
label2:
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void lateBind()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHRepository getRepository()>();
if v4 != null goto label3;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Repository must not be null");
throw v5;
label3:
v6 = v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHWorkflowRun workflowRun>;
virtualinvoke v6.<org.kohsuke.github.GHWorkflowRun: org.kohsuke.github.GHWorkflowRun wrapUp(org.kohsuke.github.GHRepository)>(v4);
v7 = v0.<org.kohsuke.github.GHEventPayload$WorkflowRun: org.kohsuke.github.GHWorkflow workflow>;
virtualinvoke v7.<org.kohsuke.github.GHWorkflow: org.kohsuke.github.GHWorkflow wrapUp(org.kohsuke.github.GHRepository)>(v4);
return;
}
}