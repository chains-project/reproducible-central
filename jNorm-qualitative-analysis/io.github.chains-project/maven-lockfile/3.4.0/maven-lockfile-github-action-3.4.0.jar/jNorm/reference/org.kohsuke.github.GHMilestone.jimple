public class org.kohsuke.github.GHMilestone extends org.kohsuke.github.GHObject
{
org.kohsuke.github.GHRepository owner;
org.kohsuke.github.GHUser creator;
private java.lang.String state;
private java.lang.String due_on;
private java.lang.String title;
private java.lang.String description;
private java.lang.String html_url;
private int closed_issues;
private int open_issues;
private int number;
protected java.lang.String closed_at;
public void <init>()
{
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GHRepository owner>;
return v1;
}
public org.kohsuke.github.GHUser getCreator() throws java.io.IOException
{
org.kohsuke.github.GHMilestone v0;
org.kohsuke.github.GHUser v2, v3;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = virtualinvoke v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GitHub root()>();
v2 = v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GHUser creator>;
v3 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.GHUser intern(org.kohsuke.github.GHUser)>(v2);
return v3;
}
public java.util.Date getDueOn()
{
org.kohsuke.github.GHMilestone v0;
java.util.Date v3;
java.lang.String v1, v2;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: java.lang.String due_on>;
if v1 != null goto label1;
return null;
label1:
v2 = v0.<org.kohsuke.github.GHMilestone: java.lang.String due_on>;
v3 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v2);
return v3;
}
public java.util.Date getClosedAt() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHMilestone v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: java.lang.String closed_at>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public java.lang.String getTitle()
{
java.lang.String v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: java.lang.String title>;
return v1;
}
public java.lang.String getDescription()
{
java.lang.String v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: java.lang.String description>;
return v1;
}
public int getClosedIssues()
{
int v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: int closed_issues>;
return v1;
}
public int getOpenIssues()
{
int v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: int open_issues>;
return v1;
}
public int getNumber()
{
int v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: int number>;
return v1;
}
public java.net.URL getHtmlUrl()
{
java.lang.String v1;
org.kohsuke.github.GHMilestone v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHMilestoneState getState()
{
java.lang.Enum v4;
org.kohsuke.github.GHMilestone v0;
java.util.Locale v2;
java.lang.String v1, v3;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: java.lang.String state>;
v2 = <java.util.Locale: java.util.Locale ENGLISH>;
v3 = virtualinvoke v1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(v2);
v4 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/kohsuke/github/GHMilestoneState;", v3);
return v4;
}
public void close() throws java.io.IOException
{
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
specialinvoke v0.<org.kohsuke.github.GHMilestone: void edit(java.lang.String,java.lang.Object)>("state", "closed");
return;
}
public void reopen() throws java.io.IOException
{
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
specialinvoke v0.<org.kohsuke.github.GHMilestone: void edit(java.lang.String,java.lang.Object)>("state", "open");
return;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.GHMilestone v0;
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = virtualinvoke v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = virtualinvoke v0.<org.kohsuke.github.GHMilestone: java.lang.String getApiRoute()>();
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
private void edit(java.lang.String, java.lang.Object) throws java.io.IOException
{
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v5, v6, v9;
org.kohsuke.github.GHMilestone v0;
java.lang.Object v2;
java.lang.String v1, v7;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>(v1, v2);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v7 = virtualinvoke v0.<org.kohsuke.github.GHMilestone: java.lang.String getApiRoute()>();
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public void setTitle(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHMilestone: void edit(java.lang.String,java.lang.Object)>("title", v1);
return;
}
public void setDescription(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHMilestone: void edit(java.lang.String,java.lang.Object)>("description", v1);
return;
}
public void setDueOn(java.util.Date) throws java.io.IOException
{
java.lang.String v2;
org.kohsuke.github.GHMilestone v0;
java.util.Date v1;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 := @parameter0: java.util.Date;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.lang.String printDate(java.util.Date)>(v1);
specialinvoke v0.<org.kohsuke.github.GHMilestone: void edit(java.lang.String,java.lang.Object)>("due_on", v2);
return;
}
protected java.lang.String getApiRoute()
{
org.kohsuke.github.GHRepository v1, v3;
org.kohsuke.github.GHMilestone v0;
int v5;
java.lang.String v2, v4, v6;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 = v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GHRepository owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRepository: java.lang.String getOwnerName()>();
v3 = v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GHRepository owner>;
v4 = virtualinvoke v3.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v5 = v0.<org.kohsuke.github.GHMilestone: int number>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,int)>(v2, v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repos/\u0001/\u0001/milestones/\u0001");
return v6;
}
public org.kohsuke.github.GHMilestone wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
java.lang.RuntimeException v2;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
org.kohsuke.github.GHMilestone lateBind(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHMilestone v0;
v0 := @this: org.kohsuke.github.GHMilestone;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHMilestone: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
}