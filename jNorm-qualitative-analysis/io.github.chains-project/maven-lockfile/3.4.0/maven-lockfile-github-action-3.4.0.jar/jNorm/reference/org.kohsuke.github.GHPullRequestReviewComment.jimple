public class org.kohsuke.github.GHPullRequestReviewComment extends org.kohsuke.github.GHObject implements org.kohsuke.github.Reactable
{
org.kohsuke.github.GHPullRequest owner;
private java.lang.Long pull_request_review_id;
private java.lang.String body;
private org.kohsuke.github.GHUser user;
private java.lang.String path;
private java.lang.String html_url;
private java.lang.String pull_request_url;
private int position;
private int original_position;
private long in_reply_to_id;
private java.lang.Integer start_line;
private java.lang.Integer original_start_line;
private java.lang.String start_side;
private int line;
private int original_line;
private java.lang.String side;
private java.lang.String diff_hunk;
private java.lang.String commit_id;
private java.lang.String original_commit_id;
private java.lang.String body_html;
private java.lang.String body_text;
private org.kohsuke.github.GHPullRequestReviewCommentReactions reactions;
private org.kohsuke.github.GHCommentAuthorAssociation author_association;
public void <init>()
{
java.lang.Integer v5, v7;
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.Long v1;
int v2, v3, v4, v6, v8, v9;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
v1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);
v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Long pull_request_review_id> = v1;
v2 = (int) -1;
v0.<org.kohsuke.github.GHPullRequestReviewComment: int position> = v2;
v3 = (int) -1;
v0.<org.kohsuke.github.GHPullRequestReviewComment: int original_position> = v3;
v0.<org.kohsuke.github.GHPullRequestReviewComment: long in_reply_to_id> = -1L;
v4 = (int) -1;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Integer start_line> = v5;
v6 = (int) -1;
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Integer original_start_line> = v7;
v8 = (int) -1;
v0.<org.kohsuke.github.GHPullRequestReviewComment: int line> = v8;
v9 = (int) -1;
v0.<org.kohsuke.github.GHPullRequestReviewComment: int original_line> = v9;
return;
}
public static org.kohsuke.github.GHPullRequestReviewComment draft(java.lang.String, java.lang.String, int)
{
org.kohsuke.github.GHPullRequestReviewComment v3;
int v2;
java.lang.String v0, v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: int;
v3 = new org.kohsuke.github.GHPullRequestReviewComment;
specialinvoke v3.<org.kohsuke.github.GHPullRequestReviewComment: void <init>()>();
v3.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String body> = v0;
v3.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String path> = v1;
v3.<org.kohsuke.github.GHPullRequestReviewComment: int position> = v2;
return v3;
}
org.kohsuke.github.GHPullRequestReviewComment wrapUp(org.kohsuke.github.GHPullRequest)
{
org.kohsuke.github.GHPullRequestReviewComment v0;
org.kohsuke.github.GHPullRequest v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 := @parameter0: org.kohsuke.github.GHPullRequest;
v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner> = v1;
return v0;
}
public org.kohsuke.github.GHPullRequest getParent()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
org.kohsuke.github.GHPullRequest v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
return v1;
}
public java.lang.String getBody()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String body>;
return v1;
}
public org.kohsuke.github.GHUser getUser() throws java.io.IOException
{
org.kohsuke.github.GHPullRequestReviewComment v0;
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHUser v3, v5;
java.lang.String v4;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v3 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHUser user>;
v4 = virtualinvoke v3.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v5 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.GHUser getUser(java.lang.String)>(v4);
return v5;
}
public java.lang.String getPath()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String path>;
return v1;
}
public int getPosition()
{
int v1;
org.kohsuke.github.GHPullRequestReviewComment v0;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: int position>;
return v1;
}
public int getOriginalPosition()
{
int v1;
org.kohsuke.github.GHPullRequestReviewComment v0;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: int original_position>;
return v1;
}
public java.lang.String getDiffHunk()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String diff_hunk>;
return v1;
}
public java.lang.String getCommitId()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String commit_id>;
return v1;
}
public java.lang.String getOriginalCommitId()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String original_commit_id>;
return v1;
}
public org.kohsuke.github.GHCommentAuthorAssociation getAuthorAssociation()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
org.kohsuke.github.GHCommentAuthorAssociation v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHCommentAuthorAssociation author_association>;
return v1;
}
public long getInReplyToId()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
long v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: long in_reply_to_id>;
return v1;
}
public java.net.URL getHtmlUrl()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
protected java.lang.String getApiRoute()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute(boolean)>(0);
return v1;
}
protected java.lang.String getApiRoute(boolean)
{
org.kohsuke.github.GHPullRequest v2, v5;
org.kohsuke.github.GHRepository v3;
long v8;
org.kohsuke.github.GHPullRequestReviewComment v0;
int v6;
java.lang.String v4, v7, v9;
boolean v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 := @parameter0: boolean;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GHRepository getRepository()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GHRepository: java.lang.String getFullName()>();
if v1 == 0 goto label1;
v5 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v6 = virtualinvoke v5.<org.kohsuke.github.GHPullRequest: int getNumber()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/\u0001");
goto label2;
label1:
v7 = "";
label2:
v8 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: long getId()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,long)>(v4, v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repos/\u0001/pulls\u0001/comments/\u0001");
return v9;
}
public int getStartLine()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
int v3, v4;
java.lang.Integer v1, v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Integer start_line>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Integer start_line>;
v3 = virtualinvoke v2.<java.lang.Integer: int intValue()>();
goto label2;
label1:
v4 = (int) -1;
v3 = v4;
label2:
return v3;
}
public int getOriginalStartLine()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
int v3, v4;
java.lang.Integer v1, v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Integer original_start_line>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Integer original_start_line>;
v3 = virtualinvoke v2.<java.lang.Integer: int intValue()>();
goto label2;
label1:
v4 = (int) -1;
v3 = v4;
label2:
return v3;
}
public org.kohsuke.github.GHPullRequestReviewComment$Side getStartSide()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
org.kohsuke.github.GHPullRequestReviewComment$Side v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String start_side>;
v2 = staticinvoke <org.kohsuke.github.GHPullRequestReviewComment$Side: org.kohsuke.github.GHPullRequestReviewComment$Side 'from'(java.lang.String)>(v1);
return v2;
}
public int getLine()
{
int v1;
org.kohsuke.github.GHPullRequestReviewComment v0;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: int line>;
return v1;
}
public int getOriginalLine()
{
int v1;
org.kohsuke.github.GHPullRequestReviewComment v0;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: int original_line>;
return v1;
}
public org.kohsuke.github.GHPullRequestReviewComment$Side getSide()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
org.kohsuke.github.GHPullRequestReviewComment$Side v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String side>;
v2 = staticinvoke <org.kohsuke.github.GHPullRequestReviewComment$Side: org.kohsuke.github.GHPullRequestReviewComment$Side 'from'(java.lang.String)>(v1);
return v2;
}
public java.lang.Long getPullRequestReviewId()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.Long v1, v2, v4;
long v3;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Long pull_request_review_id>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.Long pull_request_review_id>;
v3 = virtualinvoke v2.<java.lang.Long: long longValue()>();
goto label2;
label1:
v3 = -1L;
label2:
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
return v4;
}
public java.net.URL getPullRequestUrl()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String pull_request_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.lang.String getBodyHtml()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String body_html>;
return v1;
}
public java.lang.String getBodyText()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String body_text>;
return v1;
}
public org.kohsuke.github.GHPullRequestReviewCommentReactions getReactions()
{
org.kohsuke.github.GHPullRequestReviewComment v0;
org.kohsuke.github.GHPullRequestReviewCommentReactions v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequestReviewCommentReactions reactions>;
return v1;
}
public void update(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v2;
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v5, v6, v9;
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v1, v7;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("body", v1);
v7 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute()>();
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: java.lang.Object fetchInto(java.lang.Object)>(v0);
v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String body> = v1;
return;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v1;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v5 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
virtualinvoke v7.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.GHPullRequestReviewComment reply(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v12, v2;
java.lang.String[] v9;
org.kohsuke.github.GitHubRequest$Builder v10, v5, v6;
org.kohsuke.github.GHPullRequestReviewComment v0, v13;
java.lang.Object v11;
java.lang.String v1, v7, v8;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("body", v1);
v7 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute(boolean)>(1);
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/replies");
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHPullRequestReviewComment;");
v12 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v13 = virtualinvoke v11.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequestReviewComment wrapUp(org.kohsuke.github.GHPullRequest)>(v12);
return v13;
}
public org.kohsuke.github.GHReaction createReaction(org.kohsuke.github.ReactionContent) throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v2;
org.kohsuke.github.internal.Previews v6;
java.lang.String[] v12;
org.kohsuke.github.GitHubRequest$Builder v13, v5, v7, v9;
org.kohsuke.github.GHPullRequestReviewComment v0;
org.kohsuke.github.ReactionContent v1;
java.lang.Object v14;
java.lang.String v10, v11, v8;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 := @parameter0: org.kohsuke.github.ReactionContent;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews SQUIRREL_GIRL>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = virtualinvoke v1.<org.kohsuke.github.ReactionContent: java.lang.String getContent()>();
v9 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("content", v8);
v10 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/reactions");
v12 = newarray (java.lang.String)[0];
v13 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v11, v12);
v14 = virtualinvoke v13.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHReaction;");
return v14;
}
public void deleteReaction(org.kohsuke.github.GHReaction) throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v2;
java.lang.String[] v7;
long v8;
org.kohsuke.github.GitHubRequest$Builder v10, v5;
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v6, v9;
org.kohsuke.github.GHReaction v1;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 := @parameter0: org.kohsuke.github.GHReaction;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v6 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute()>();
v7 = newarray (java.lang.String)[2];
v7[0] = "reactions";
v8 = virtualinvoke v1.<org.kohsuke.github.GHReaction: long getId()>();
v9 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(v8);
v7[1] = v9;
v10 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
virtualinvoke v10.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.PagedIterable listReactions()
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.internal.Previews v4;
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v5, v9;
java.util.function.Consumer v10;
org.kohsuke.github.GHPullRequestReviewComment v0;
java.lang.String v6, v7;
org.kohsuke.github.Requester v3;
org.kohsuke.github.PagedIterable v11;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequest owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews SQUIRREL_GIRL>;
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v4);
v6 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewComment: java.lang.String getApiRoute()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/reactions");
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
v10 = staticinvoke <org.kohsuke.github.GHPullRequestReviewComment$lambda_listReactions_0__50: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHPullRequestReviewComment)>(v0);
v11 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHReaction;", v10);
return v11;
}
}