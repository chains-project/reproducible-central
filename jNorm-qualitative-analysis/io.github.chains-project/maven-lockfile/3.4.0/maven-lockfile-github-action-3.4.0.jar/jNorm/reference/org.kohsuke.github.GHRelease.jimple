public class org.kohsuke.github.GHRelease extends org.kohsuke.github.GHObject
{
org.kohsuke.github.GHRepository owner;
private java.lang.String html_url;
private java.lang.String assets_url;
private java.util.List assets;
private java.lang.String upload_url;
private java.lang.String tag_name;
private java.lang.String target_commitish;
private java.lang.String name;
private java.lang.String body;
private boolean draft;
private boolean prerelease;
private java.util.Date published_at;
private java.lang.String tarball_url;
private java.lang.String zipball_url;
private java.lang.String discussion_url;
public void <init>()
{
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public java.lang.String getDiscussionUrl()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String discussion_url>;
return v1;
}
public java.lang.String getAssetsUrl()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String assets_url>;
return v1;
}
public java.lang.String getBody()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String body>;
return v1;
}
public boolean isDraft()
{
org.kohsuke.github.GHRelease v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: boolean draft>;
return v1;
}
public org.kohsuke.github.GHRelease setDraft(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRelease v0, v4;
org.kohsuke.github.GHReleaseUpdater v2, v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: boolean;
v2 = virtualinvoke v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHReleaseUpdater update()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GHReleaseUpdater: org.kohsuke.github.GHReleaseUpdater draft(boolean)>(v1);
v4 = virtualinvoke v3.<org.kohsuke.github.GHReleaseUpdater: org.kohsuke.github.GHRelease update()>();
return v4;
}
public java.net.URL getHtmlUrl()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.lang.String getName()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String name>;
return v1;
}
public void setName(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: java.lang.String;
v0.<org.kohsuke.github.GHRelease: java.lang.String name> = v1;
return;
}
public org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository owner>;
return v1;
}
public void setOwner(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
java.lang.RuntimeException v2;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
public boolean isPrerelease()
{
org.kohsuke.github.GHRelease v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: boolean prerelease>;
return v1;
}
public java.util.Date getPublished_at()
{
java.util.Date v1, v2;
long v3;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = new java.util.Date;
v2 = v0.<org.kohsuke.github.GHRelease: java.util.Date published_at>;
v3 = virtualinvoke v2.<java.util.Date: long getTime()>();
specialinvoke v1.<java.util.Date: void <init>(long)>(v3);
return v1;
}
public java.lang.String getTagName()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String tag_name>;
return v1;
}
public java.lang.String getTargetCommitish()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String target_commitish>;
return v1;
}
public java.lang.String getUploadUrl()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String upload_url>;
return v1;
}
public java.lang.String getZipballUrl()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String zipball_url>;
return v1;
}
public java.lang.String getTarballUrl()
{
java.lang.String v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.lang.String tarball_url>;
return v1;
}
org.kohsuke.github.GHRelease wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
static org.kohsuke.github.GHRelease[] wrap(org.kohsuke.github.GHRelease[], org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
int v2, v3;
org.kohsuke.github.GHRelease[] v0;
org.kohsuke.github.GHRelease v4;
v0 := @parameter0: org.kohsuke.github.GHRelease[];
v1 := @parameter1: org.kohsuke.github.GHRepository;
v2 = lengthof v0;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v0[v3];
virtualinvoke v4.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRelease wrap(org.kohsuke.github.GHRepository)>(v1);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public org.kohsuke.github.GHAsset uploadAsset(java.io.File, java.lang.String) throws java.io.IOException
{
java.lang.Throwable v6;
org.kohsuke.github.GHAsset v5;
java.io.FileInputStream v3;
java.lang.String v2, v4;
org.kohsuke.github.GHRelease v0;
java.io.File v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.String;
v3 = new java.io.FileInputStream;
specialinvoke v3.<java.io.FileInputStream: void <init>(java.io.File)>(v1);
label1:
v4 = virtualinvoke v1.<java.io.File: java.lang.String getName()>();
v5 = virtualinvoke v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHAsset uploadAsset(java.lang.String,java.io.InputStream,java.lang.String)>(v4, v3, v2);
label2:
virtualinvoke v3.<java.io.FileInputStream: void close()>();
return v5;
label3:
v6 := @caughtexception;
virtualinvoke v3.<java.io.FileInputStream: void close()>();
throw v6;
catch java.lang.Throwable from label1 to label2 with label3;
}
public org.kohsuke.github.GHAsset uploadAsset(java.lang.String, java.io.InputStream, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHRepository v4;
java.lang.String[] v15;
org.kohsuke.github.GitHubRequest$Builder v13, v14, v16, v7;
int v9;
java.lang.String v1, v10, v11, v12, v3, v8;
org.kohsuke.github.GitHub v5;
org.kohsuke.github.GHAsset v18;
java.lang.Object v17;
org.kohsuke.github.GHRelease v0;
org.kohsuke.github.Requester v6;
java.io.InputStream v2;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: java.lang.String;
v4 = v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository owner>;
v5 = virtualinvoke v4.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v8 = virtualinvoke v0.<org.kohsuke.github.GHRelease: java.lang.String getUploadUrl()>();
v9 = virtualinvoke v8.<java.lang.String: int indexOf(int)>(123);
v10 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int,int)>(0, v9);
v11 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(v1, "UTF-8");
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v10, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001?name=\u0001");
v13 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder contentType(java.lang.String)>(v3);
v14 = virtualinvoke v13.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.io.InputStream)>(v2);
v15 = newarray (java.lang.String)[0];
v16 = virtualinvoke v14.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v12, v15);
v17 = virtualinvoke v16.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHAsset;");
v18 = virtualinvoke v17.<org.kohsuke.github.GHAsset: org.kohsuke.github.GHAsset wrap(org.kohsuke.github.GHRelease)>(v0);
return v18;
}
public java.util.List assets()
{
java.util.List v1, v2;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: java.util.List assets>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public java.util.List getAssets() throws java.io.IOException
{
java.util.List v2;
org.kohsuke.github.GHRelease v0;
org.kohsuke.github.PagedIterable v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.PagedIterable listAssets()>();
v2 = virtualinvoke v1.<org.kohsuke.github.PagedIterable: java.util.List toList()>();
return v2;
}
public org.kohsuke.github.PagedIterable listAssets() throws java.io.IOException
{
org.kohsuke.github.GHRepository v1;
java.lang.String[] v5;
org.kohsuke.github.GitHubRequest$Builder v6;
java.util.function.Consumer v7;
java.lang.String v4;
org.kohsuke.github.GHRelease v0;
org.kohsuke.github.Requester v3;
org.kohsuke.github.PagedIterable v8;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository owner>;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = specialinvoke v0.<org.kohsuke.github.GHRelease: java.lang.String getApiTailUrl(java.lang.String)>("assets");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
v7 = staticinvoke <org.kohsuke.github.GHRelease$lambda_listAssets_0__87: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHRelease)>(v0);
v8 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHAsset;", v7);
return v8;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.GHRepository v4;
java.lang.String[] v8;
long v5;
org.kohsuke.github.GitHubRequest$Builder v3, v9;
java.lang.String v6, v7;
org.kohsuke.github.GHRelease v0;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository owner>;
v5 = virtualinvoke v0.<org.kohsuke.github.GHRelease: long getId()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("releases/\u0001");
v7 = virtualinvoke v4.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v6);
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.GHReleaseUpdater update()
{
org.kohsuke.github.GHRelease v0;
org.kohsuke.github.GHReleaseUpdater v1;
v0 := @this: org.kohsuke.github.GHRelease;
v1 = new org.kohsuke.github.GHReleaseUpdater;
specialinvoke v1.<org.kohsuke.github.GHReleaseUpdater: void <init>(org.kohsuke.github.GHRelease)>(v0);
return v1;
}
private java.lang.String getApiTailUrl(java.lang.String)
{
org.kohsuke.github.GHRepository v2;
java.lang.Object[] v3;
long v4;
java.lang.Long v5;
java.lang.String v1, v6, v7;
org.kohsuke.github.GHRelease v0;
v0 := @this: org.kohsuke.github.GHRelease;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHRelease: org.kohsuke.github.GHRepository owner>;
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v0.<org.kohsuke.github.GHRelease: long getId()>();
v5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v4);
v3[0] = v5;
v3[1] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("releases/%s/%s", v3);
v7 = virtualinvoke v2.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v6);
return v7;
}
}