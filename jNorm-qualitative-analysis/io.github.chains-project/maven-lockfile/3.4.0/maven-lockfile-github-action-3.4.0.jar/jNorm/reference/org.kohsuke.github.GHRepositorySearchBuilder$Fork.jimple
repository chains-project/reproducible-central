public final enum class org.kohsuke.github.GHRepositorySearchBuilder$Fork extends java.lang.Enum
{
public static final enum org.kohsuke.github.GHRepositorySearchBuilder$Fork PARENT_AND_FORKS;
public static final enum org.kohsuke.github.GHRepositorySearchBuilder$Fork FORKS_ONLY;
public static final enum org.kohsuke.github.GHRepositorySearchBuilder$Fork PARENT_ONLY;
private java.lang.String filterMode;
private static final org.kohsuke.github.GHRepositorySearchBuilder$Fork[] $VALUES;
public static org.kohsuke.github.GHRepositorySearchBuilder$Fork[] values()
{
java.lang.Object v1;
org.kohsuke.github.GHRepositorySearchBuilder$Fork[] v0;
v0 = <org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.kohsuke.github.GHRepositorySearchBuilder$Fork valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/kohsuke/github/GHRepositorySearchBuilder$Fork;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String)
{
int v2;
org.kohsuke.github.GHRepositorySearchBuilder$Fork v0;
java.lang.String v1, v3;
v0 := @this: org.kohsuke.github.GHRepositorySearchBuilder$Fork;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<org.kohsuke.github.GHRepositorySearchBuilder$Fork: java.lang.String filterMode> = v3;
return;
}
public java.lang.String toString()
{
org.kohsuke.github.GHRepositorySearchBuilder$Fork v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHRepositorySearchBuilder$Fork;
v1 = v0.<org.kohsuke.github.GHRepositorySearchBuilder$Fork: java.lang.String filterMode>;
return v1;
}
private static org.kohsuke.github.GHRepositorySearchBuilder$Fork[] $values()
{
org.kohsuke.github.GHRepositorySearchBuilder$Fork v1, v2, v3;
org.kohsuke.github.GHRepositorySearchBuilder$Fork[] v0;
v0 = newarray (org.kohsuke.github.GHRepositorySearchBuilder$Fork)[3];
v1 = <org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork PARENT_AND_FORKS>;
v0[0] = v1;
v2 = <org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork FORKS_ONLY>;
v0[1] = v2;
v3 = <org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork PARENT_ONLY>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
org.kohsuke.github.GHRepositorySearchBuilder$Fork v0, v1, v2;
org.kohsuke.github.GHRepositorySearchBuilder$Fork[] v3;
v0 = new org.kohsuke.github.GHRepositorySearchBuilder$Fork;
specialinvoke v0.<org.kohsuke.github.GHRepositorySearchBuilder$Fork: void <init>(java.lang.String,int,java.lang.String)>("PARENT_AND_FORKS", 0, "true");
<org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork PARENT_AND_FORKS> = v0;
v1 = new org.kohsuke.github.GHRepositorySearchBuilder$Fork;
specialinvoke v1.<org.kohsuke.github.GHRepositorySearchBuilder$Fork: void <init>(java.lang.String,int,java.lang.String)>("FORKS_ONLY", 1, "only");
<org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork FORKS_ONLY> = v1;
v2 = new org.kohsuke.github.GHRepositorySearchBuilder$Fork;
specialinvoke v2.<org.kohsuke.github.GHRepositorySearchBuilder$Fork: void <init>(java.lang.String,int,java.lang.String)>("PARENT_ONLY", 2, "");
<org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork PARENT_ONLY> = v2;
v3 = staticinvoke <org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork[] $values()>();
<org.kohsuke.github.GHRepositorySearchBuilder$Fork: org.kohsuke.github.GHRepositorySearchBuilder$Fork[] $VALUES> = v3;
return;
}
}