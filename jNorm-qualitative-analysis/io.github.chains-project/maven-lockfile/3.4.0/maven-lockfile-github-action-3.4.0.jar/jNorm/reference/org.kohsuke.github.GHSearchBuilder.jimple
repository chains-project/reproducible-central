public abstract class org.kohsuke.github.GHSearchBuilder extends org.kohsuke.github.GHQueryBuilder
{
protected final java.util.List terms;
private final java.lang.Class receiverType;
void <init>(org.kohsuke.github.GitHub, java.lang.Class)
{
org.kohsuke.github.GHSearchBuilder v0;
java.lang.String[] v6;
java.util.ArrayList v3;
java.lang.Class v2;
java.lang.String v5;
org.kohsuke.github.RateLimitTarget v8;
org.kohsuke.github.Requester v4, v7;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHSearchBuilder;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<org.kohsuke.github.GHQueryBuilder: void <init>(org.kohsuke.github.GitHub)>(v1);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHSearchBuilder: java.util.List terms> = v3;
v0.<org.kohsuke.github.GHSearchBuilder: java.lang.Class receiverType> = v2;
v4 = v0.<org.kohsuke.github.GHSearchBuilder: org.kohsuke.github.Requester req>;
v5 = virtualinvoke v0.<org.kohsuke.github.GHSearchBuilder: java.lang.String getApiUrl()>();
v6 = newarray (java.lang.String)[0];
virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v7 = v0.<org.kohsuke.github.GHSearchBuilder: org.kohsuke.github.Requester req>;
v8 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget SEARCH>;
virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder rateLimit(org.kohsuke.github.RateLimitTarget)>(v8);
return;
}
public org.kohsuke.github.GHQueryBuilder q(java.lang.String)
{
java.util.List v2;
java.lang.String v1;
org.kohsuke.github.GHSearchBuilder v0;
v0 := @this: org.kohsuke.github.GHSearchBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHSearchBuilder: java.util.List terms>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
org.kohsuke.github.GHQueryBuilder q(java.lang.String, java.lang.String)
{
org.kohsuke.github.GHSearchBuilder v0;
java.util.function.Predicate v8;
java.lang.IllegalArgumentException v4;
java.util.List v7, v9;
java.lang.String v1, v10, v2, v6;
boolean v3, v5;
v0 := @this: org.kohsuke.github.GHSearchBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(v1);
if v3 == 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("qualifier cannot be null or empty");
throw v4;
label1:
v5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(v2);
if v5 == 0 goto label2;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:");
v7 = v0.<org.kohsuke.github.GHSearchBuilder: java.util.List terms>;
v8 = staticinvoke <org.kohsuke.github.GHSearchBuilder$lambda_q_0__79: java.util.function.Predicate bootstrap$(java.lang.String)>(v6);
interfaceinvoke v7.<java.util.List: boolean removeIf(java.util.function.Predicate)>(v8);
goto label3;
label2:
v9 = v0.<org.kohsuke.github.GHSearchBuilder: java.util.List terms>;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
interfaceinvoke v9.<java.util.List: boolean add(java.lang.Object)>(v10);
label3:
return v0;
}
public org.kohsuke.github.PagedSearchIterable list()
{
org.kohsuke.github.GHSearchBuilder v0;
org.kohsuke.github.GitHubRequest v7;
org.kohsuke.github.PagedSearchIterable v4;
java.util.List v2;
java.lang.Class v8;
java.lang.String v3;
org.kohsuke.github.Requester v1, v6;
org.kohsuke.github.GitHub v5;
v0 := @this: org.kohsuke.github.GHSearchBuilder;
v1 = v0.<org.kohsuke.github.GHSearchBuilder: org.kohsuke.github.Requester req>;
v2 = v0.<org.kohsuke.github.GHSearchBuilder: java.util.List terms>;
v3 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String join(java.lang.Iterable,java.lang.String)>(v2, " ");
virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder set(java.lang.String,java.lang.Object)>("q", v3);
v4 = new org.kohsuke.github.PagedSearchIterable;
v5 = virtualinvoke v0.<org.kohsuke.github.GHSearchBuilder: org.kohsuke.github.GitHub root()>();
v6 = v0.<org.kohsuke.github.GHSearchBuilder: org.kohsuke.github.Requester req>;
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest build()>();
v8 = v0.<org.kohsuke.github.GHSearchBuilder: java.lang.Class receiverType>;
specialinvoke v4.<org.kohsuke.github.PagedSearchIterable: void <init>(org.kohsuke.github.GitHub,org.kohsuke.github.GitHubRequest,java.lang.Class)>(v5, v7, v8);
return v4;
}
protected abstract java.lang.String getApiUrl();
}