public class org.kohsuke.github.GHWorkflowJob extends org.kohsuke.github.GHObject
{
private org.kohsuke.github.GHRepository owner;
private java.lang.String name;
private java.lang.String headSha;
private java.lang.String startedAt;
private java.lang.String completedAt;
private java.lang.String status;
private java.lang.String conclusion;
private long runId;
private int runAttempt;
private java.lang.String htmlUrl;
private java.lang.String checkRunUrl;
private int runnerId;
private java.lang.String runnerName;
private int runnerGroupId;
private java.lang.String runnerGroupName;
private java.util.List steps;
private java.util.List labels;
public void <init>()
{
org.kohsuke.github.GHWorkflowJob v0;
java.util.ArrayList v1, v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHWorkflowJob: java.util.List steps> = v1;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHWorkflowJob: java.util.List labels> = v2;
return;
}
public java.lang.String getName()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String name>;
return v1;
}
public java.lang.String getHeadSha()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String headSha>;
return v1;
}
public java.util.Date getStartedAt()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String startedAt>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public java.util.Date getCompletedAt()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String completedAt>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.util.Date parseDate(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHWorkflowRun$Status getStatus()
{
org.kohsuke.github.GHWorkflowRun$Status v2;
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String status>;
v2 = staticinvoke <org.kohsuke.github.GHWorkflowRun$Status: org.kohsuke.github.GHWorkflowRun$Status 'from'(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHWorkflowRun$Conclusion getConclusion()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
org.kohsuke.github.GHWorkflowRun$Conclusion v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String conclusion>;
v2 = staticinvoke <org.kohsuke.github.GHWorkflowRun$Conclusion: org.kohsuke.github.GHWorkflowRun$Conclusion 'from'(java.lang.String)>(v1);
return v2;
}
public long getRunId()
{
long v1;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: long runId>;
return v1;
}
public int getRunAttempt()
{
int v1;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: int runAttempt>;
return v1;
}
public java.net.URL getHtmlUrl()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String htmlUrl>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.net.URL getCheckRunUrl()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String checkRunUrl>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.util.List getSteps()
{
java.util.List v1, v2;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.util.List steps>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public java.util.List getLabels()
{
java.util.List v1, v2;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.util.List labels>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public int getRunnerId()
{
int v1;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: int runnerId>;
return v1;
}
public java.lang.String getRunnerName()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String runnerName>;
return v1;
}
public int getRunnerGroupId()
{
int v1;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: int runnerGroupId>;
return v1;
}
public java.lang.String getRunnerGroupName()
{
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String runnerGroupName>;
return v1;
}
public org.kohsuke.github.GHRepository getRepository()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GHRepository owner>;
return v1;
}
public java.lang.Object downloadLogs(org.kohsuke.github.function.InputStreamFunction) throws java.io.IOException
{
org.kohsuke.github.function.InputStreamFunction v1;
org.kohsuke.github.GHWorkflowJob v0;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 := @parameter0: org.kohsuke.github.function.InputStreamFunction;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Stream function must not be null");
v2 = virtualinvoke v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("GET");
v5 = specialinvoke v0.<org.kohsuke.github.GHWorkflowJob: java.lang.String getApiRoute()>();
v6 = newarray (java.lang.String)[1];
v6[0] = "logs";
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetchStream(org.kohsuke.github.function.InputStreamFunction)>(v1);
return v8;
}
private java.lang.String getApiRoute()
{
org.kohsuke.github.GHRepository v1, v10, v12;
org.kohsuke.github.GHWorkflowJob v0;
java.net.URL v2;
long v14;
java.lang.CharSequence[] v8;
java.lang.String v11, v13, v15, v4, v6, v7, v9;
org.kohsuke.github.GitHub v5;
java.lang.Object v3;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 = v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GHRepository owner>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<org.kohsuke.github.GHWorkflowJob: java.net.URL getUrl()>();
v3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "Missing instance URL!");
v4 = virtualinvoke v3.<java.net.URL: java.lang.String toString()>();
v5 = virtualinvoke v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GitHub root()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GitHub: java.lang.String getApiUrl()>();
v7 = virtualinvoke v4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(v6, "");
v8 = newarray (java.lang.CharSequence)[0];
v9 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])>(v7, "/", v8);
return v9;
label1:
v10 = v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GHRepository owner>;
v11 = virtualinvoke v10.<org.kohsuke.github.GHRepository: java.lang.String getOwnerName()>();
v12 = v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GHRepository owner>;
v13 = virtualinvoke v12.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v14 = virtualinvoke v0.<org.kohsuke.github.GHWorkflowJob: long getId()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,long)>(v11, v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repos/\u0001/\u0001/actions/jobs/\u0001");
return v15;
}
org.kohsuke.github.GHWorkflowJob wrapUp(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHWorkflowJob v0;
v0 := @this: org.kohsuke.github.GHWorkflowJob;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHWorkflowJob: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
}