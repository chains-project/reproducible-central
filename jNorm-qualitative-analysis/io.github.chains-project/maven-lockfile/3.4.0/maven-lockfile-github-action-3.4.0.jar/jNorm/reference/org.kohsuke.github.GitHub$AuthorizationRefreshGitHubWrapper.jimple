class org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper extends org.kohsuke.github.GitHub
{
private final org.kohsuke.github.authorization.AuthorizationProvider authorizationProvider;
void <init>(org.kohsuke.github.GitHub, org.kohsuke.github.authorization.AuthorizationProvider)
{
org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper v0;
org.kohsuke.github.GitHubClient v3;
org.kohsuke.github.GitHub v1;
boolean v4;
org.kohsuke.github.authorization.AuthorizationProvider v2;
v0 := @this: org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 := @parameter1: org.kohsuke.github.authorization.AuthorizationProvider;
v3 = v1.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
specialinvoke v0.<org.kohsuke.github.GitHub: void <init>(org.kohsuke.github.GitHubClient)>(v3);
v0.<org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper: org.kohsuke.github.authorization.AuthorizationProvider authorizationProvider> = v2;
v4 = v2 instanceof org.kohsuke.github.GitHub$DependentAuthorizationProvider;
if v4 == 0 goto label1;
virtualinvoke v2.<org.kohsuke.github.GitHub$DependentAuthorizationProvider: void bind(org.kohsuke.github.GitHub)>(v0);
label1:
return;
}
org.kohsuke.github.Requester createRequest()
{
org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper v0;
java.io.IOException v7;
org.kohsuke.github.GitHubRequest$Builder v4, v6;
org.kohsuke.github.GHException v8;
org.kohsuke.github.authorization.AuthorizationProvider v2;
java.lang.String v3;
org.kohsuke.github.RateLimitTarget v5;
org.kohsuke.github.Requester v1;
v0 := @this: org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper;
label1:
v1 = specialinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = v0.<org.kohsuke.github.GitHub$AuthorizationRefreshGitHubWrapper: org.kohsuke.github.authorization.AuthorizationProvider authorizationProvider>;
v3 = interfaceinvoke v2.<org.kohsuke.github.authorization.AuthorizationProvider: java.lang.String getEncodedAuthorization()>();
v4 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setHeader(java.lang.String,java.lang.String)>("Authorization", v3);
v5 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget NONE>;
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder rateLimit(org.kohsuke.github.RateLimitTarget)>(v5);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new org.kohsuke.github.GHException;
specialinvoke v8.<org.kohsuke.github.GHException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create requester to refresh credentials", v7);
throw v8;
catch java.io.IOException from label1 to label2 with label3;
}
}