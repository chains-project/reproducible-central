class org.kohsuke.github.GitHubRateLimitChecker extends java.lang.Object
{
private final org.kohsuke.github.RateLimitChecker core;
private final org.kohsuke.github.RateLimitChecker search;
private final org.kohsuke.github.RateLimitChecker graphql;
private final org.kohsuke.github.RateLimitChecker integrationManifest;
private static final java.util.logging.Logger LOGGER;
void <init>()
{
org.kohsuke.github.RateLimitChecker v1, v2, v3, v4;
org.kohsuke.github.GitHubRateLimitChecker v0;
v0 := @this: org.kohsuke.github.GitHubRateLimitChecker;
v1 = <org.kohsuke.github.RateLimitChecker: org.kohsuke.github.RateLimitChecker NONE>;
v2 = <org.kohsuke.github.RateLimitChecker: org.kohsuke.github.RateLimitChecker NONE>;
v3 = <org.kohsuke.github.RateLimitChecker: org.kohsuke.github.RateLimitChecker NONE>;
v4 = <org.kohsuke.github.RateLimitChecker: org.kohsuke.github.RateLimitChecker NONE>;
specialinvoke v0.<org.kohsuke.github.GitHubRateLimitChecker: void <init>(org.kohsuke.github.RateLimitChecker,org.kohsuke.github.RateLimitChecker,org.kohsuke.github.RateLimitChecker,org.kohsuke.github.RateLimitChecker)>(v1, v2, v3, v4);
return;
}
void <init>(org.kohsuke.github.RateLimitChecker, org.kohsuke.github.RateLimitChecker, org.kohsuke.github.RateLimitChecker, org.kohsuke.github.RateLimitChecker)
{
org.kohsuke.github.GitHubRateLimitChecker v0;
org.kohsuke.github.RateLimitChecker v1, v2, v3, v4;
java.lang.Object v5, v6, v7, v8;
v0 := @this: org.kohsuke.github.GitHubRateLimitChecker;
v1 := @parameter0: org.kohsuke.github.RateLimitChecker;
v2 := @parameter1: org.kohsuke.github.RateLimitChecker;
v3 := @parameter2: org.kohsuke.github.RateLimitChecker;
v4 := @parameter3: org.kohsuke.github.RateLimitChecker;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker core> = v5;
v6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v2);
v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker search> = v6;
v7 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v3);
v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker graphql> = v7;
v8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v4);
v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker integrationManifest> = v8;
return;
}
org.kohsuke.github.GitHubRateLimitChecker 'with'(org.kohsuke.github.RateLimitChecker, org.kohsuke.github.RateLimitTarget)
{
org.kohsuke.github.GitHubRateLimitChecker v0, v3;
org.kohsuke.github.RateLimitChecker v1, v11, v5, v7, v9;
org.kohsuke.github.RateLimitTarget v10, v2, v4, v6, v8;
v0 := @this: org.kohsuke.github.GitHubRateLimitChecker;
v1 := @parameter0: org.kohsuke.github.RateLimitChecker;
v2 := @parameter1: org.kohsuke.github.RateLimitTarget;
v3 = new org.kohsuke.github.GitHubRateLimitChecker;
v4 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget CORE>;
if v2 != v4 goto label1;
v5 = v1;
goto label2;
label1:
v5 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker core>;
label2:
v6 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget SEARCH>;
if v2 != v6 goto label3;
v7 = v1;
goto label4;
label3:
v7 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker search>;
label4:
v8 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget GRAPHQL>;
if v2 != v8 goto label5;
v9 = v1;
goto label6;
label5:
v9 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker graphql>;
label6:
v10 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget INTEGRATION_MANIFEST>;
if v2 != v10 goto label7;
v11 = v1;
goto label8;
label7:
v11 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker integrationManifest>;
label8:
specialinvoke v3.<org.kohsuke.github.GitHubRateLimitChecker: void <init>(org.kohsuke.github.RateLimitChecker,org.kohsuke.github.RateLimitChecker,org.kohsuke.github.RateLimitChecker,org.kohsuke.github.RateLimitChecker)>(v5, v7, v9, v11);
return v3;
}
void checkRateLimit(org.kohsuke.github.GitHubClient, org.kohsuke.github.RateLimitTarget) throws java.io.IOException
{
java.lang.Throwable v13;
org.kohsuke.github.GitHubRateLimitChecker v0;
org.kohsuke.github.GitHubClient v1;
long v7;
java.io.InterruptedIOException v11;
org.kohsuke.github.RateLimitChecker v3, v4;
java.lang.InterruptedException v10;
java.lang.String v12;
org.kohsuke.github.GHRateLimit v5, v9;
org.kohsuke.github.GHRateLimit$Record v6;
org.kohsuke.github.RateLimitTarget v2;
boolean v8;
v0 := @this: org.kohsuke.github.GitHubRateLimitChecker;
v1 := @parameter0: org.kohsuke.github.GitHubClient;
v2 := @parameter1: org.kohsuke.github.RateLimitTarget;
v3 = specialinvoke v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker selectChecker(org.kohsuke.github.RateLimitTarget)>(v2);
v4 = <org.kohsuke.github.RateLimitChecker: org.kohsuke.github.RateLimitChecker NONE>;
if v3 != v4 goto label1;
return;
label1:
v5 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GHRateLimit rateLimit(org.kohsuke.github.RateLimitTarget)>(v2);
v6 = virtualinvoke v5.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getRecord(org.kohsuke.github.RateLimitTarget)>(v2);
v7 = 0L;
label2:
v8 = virtualinvoke v3.<org.kohsuke.github.RateLimitChecker: boolean checkRateLimit(org.kohsuke.github.GHRateLimit$Record,long)>(v6, v7);
if v8 == 0 goto label4;
v7 = v7 + 1L;
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
v9 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GHRateLimit getRateLimit(org.kohsuke.github.RateLimitTarget)>(v2);
v6 = virtualinvoke v9.<org.kohsuke.github.GHRateLimit: org.kohsuke.github.GHRateLimit$Record getRecord(org.kohsuke.github.RateLimitTarget)>(v2);
goto label2;
label3:
v10 := @caughtexception;
v11 = new java.io.InterruptedIOException;
v12 = virtualinvoke v10.<java.lang.InterruptedException: java.lang.String getMessage()>();
specialinvoke v11.<java.io.InterruptedIOException: void <init>(java.lang.String)>(v12);
v13 = virtualinvoke v11.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>(v10);
throw v13;
label4:
return;
catch java.lang.InterruptedException from label2 to label3 with label3;
}
private org.kohsuke.github.RateLimitChecker selectChecker(org.kohsuke.github.RateLimitTarget)
{
org.kohsuke.github.GitHubRateLimitChecker v0;
java.lang.IllegalArgumentException v12;
org.kohsuke.github.RateLimitChecker v11, v3, v5, v7, v9;
java.lang.String v13, v14;
org.kohsuke.github.RateLimitTarget v1, v10, v2, v4, v6, v8;
v0 := @this: org.kohsuke.github.GitHubRateLimitChecker;
v1 := @parameter0: org.kohsuke.github.RateLimitTarget;
v2 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget NONE>;
if v1 != v2 goto label1;
v3 = <org.kohsuke.github.RateLimitChecker: org.kohsuke.github.RateLimitChecker NONE>;
return v3;
label1:
v4 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget CORE>;
if v1 != v4 goto label2;
v5 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker core>;
return v5;
label2:
v6 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget SEARCH>;
if v1 != v6 goto label3;
v7 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker search>;
return v7;
label3:
v8 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget GRAPHQL>;
if v1 != v8 goto label4;
v9 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker graphql>;
return v9;
label4:
v10 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget INTEGRATION_MANIFEST>;
if v1 != v10 goto label5;
v11 = v0.<org.kohsuke.github.GitHubRateLimitChecker: org.kohsuke.github.RateLimitChecker integrationManifest>;
return v11;
label5:
v12 = new java.lang.IllegalArgumentException;
v13 = virtualinvoke v1.<org.kohsuke.github.RateLimitTarget: java.lang.String toString()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown rate limit target: \u0001");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v12;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lorg/kohsuke/github/GitHubRateLimitChecker;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<org.kohsuke.github.GitHubRateLimitChecker: java.util.logging.Logger LOGGER> = v2;
return;
}
}