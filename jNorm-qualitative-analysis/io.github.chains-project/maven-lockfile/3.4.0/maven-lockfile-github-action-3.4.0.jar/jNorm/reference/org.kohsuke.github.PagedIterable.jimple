public abstract class org.kohsuke.github.PagedIterable extends java.lang.Object implements java.lang.Iterable
{
private int pageSize;
public void <init>()
{
org.kohsuke.github.PagedIterable v0;
v0 := @this: org.kohsuke.github.PagedIterable;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.PagedIterable: int pageSize> = 0;
return;
}
public org.kohsuke.github.PagedIterable withPageSize(int)
{
int v1;
org.kohsuke.github.PagedIterable v0;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 := @parameter0: int;
v0.<org.kohsuke.github.PagedIterable: int pageSize> = v1;
return v0;
}
public final org.kohsuke.github.PagedIterator iterator()
{
int v1;
org.kohsuke.github.PagedIterator v2;
org.kohsuke.github.PagedIterable v0;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 = v0.<org.kohsuke.github.PagedIterable: int pageSize>;
v2 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterator _iterator(int)>(v1);
return v2;
}
public abstract org.kohsuke.github.PagedIterator _iterator(int);
protected java.lang.Object[] toArray(org.kohsuke.github.PagedIterator) throws java.io.IOException
{
java.lang.Throwable v10, v12;
java.lang.Object[] v4, v8;
java.util.ArrayList v2;
org.kohsuke.github.GHException v9;
int v3, v5;
java.lang.Class v7;
org.kohsuke.github.PagedIterator v1;
org.kohsuke.github.PagedIterable v0;
boolean v11, v6;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 := @parameter0: org.kohsuke.github.PagedIterator;
label1:
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = 0;
label2:
v4 = virtualinvoke v1.<org.kohsuke.github.PagedIterator: java.lang.Object[] nextPageArray()>();
v5 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(v4);
v3 = v3 + v5;
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
v6 = virtualinvoke v1.<org.kohsuke.github.PagedIterator: boolean hasNext()>();
if v6 != 0 goto label2;
v7 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v8 = specialinvoke v0.<org.kohsuke.github.PagedIterable: java.lang.Object[] concatenatePages(java.lang.Class,java.util.List,int)>(v7, v2, v3);
label3:
return v8;
label4:
v9 := @caughtexception;
v10 = virtualinvoke v9.<org.kohsuke.github.GHException: java.lang.Throwable getCause()>();
v11 = v10 instanceof java.io.IOException;
if v11 == 0 goto label5;
v12 = virtualinvoke v9.<org.kohsuke.github.GHException: java.lang.Throwable getCause()>();
throw v12;
label5:
throw v9;
catch org.kohsuke.github.GHException from label1 to label3 with label4;
}
public java.lang.Object[] toArray() throws java.io.IOException
{
org.kohsuke.github.PagedIterator v1;
java.lang.Object[] v2;
org.kohsuke.github.PagedIterable v0;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterator iterator()>();
v2 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: java.lang.Object[] toArray(org.kohsuke.github.PagedIterator)>(v1);
return v2;
}
public java.util.List toList() throws java.io.IOException
{
java.util.List v2, v3;
java.lang.Object[] v1;
org.kohsuke.github.PagedIterable v0;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: java.lang.Object[] toArray()>();
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v2);
return v3;
}
public java.util.Set toSet() throws java.io.IOException
{
java.util.List v3;
java.lang.Object[] v2;
java.util.Set v4;
org.kohsuke.github.PagedIterable v0;
java.util.LinkedHashSet v1;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 = new java.util.LinkedHashSet;
v2 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: java.lang.Object[] toArray()>();
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v3);
v4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v4;
}
public java.util.List asList()
{
java.util.List v1;
java.io.IOException v2;
java.lang.String v4, v5;
org.kohsuke.github.PagedIterable v0;
org.kohsuke.github.GHException v3;
v0 := @this: org.kohsuke.github.PagedIterable;
label1:
v1 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: java.util.List toList()>();
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = new org.kohsuke.github.GHException;
v4 = virtualinvoke v2.<java.io.IOException: java.lang.String getMessage()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to retrieve list: \u0001");
specialinvoke v3.<org.kohsuke.github.GHException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v2);
throw v3;
catch java.io.IOException from label1 to label2 with label3;
}
public java.util.Set asSet()
{
java.util.Set v1;
java.io.IOException v2;
java.lang.String v4, v5;
org.kohsuke.github.PagedIterable v0;
org.kohsuke.github.GHException v3;
v0 := @this: org.kohsuke.github.PagedIterable;
label1:
v1 = virtualinvoke v0.<org.kohsuke.github.PagedIterable: java.util.Set toSet()>();
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = new org.kohsuke.github.GHException;
v4 = virtualinvoke v2.<java.io.IOException: java.lang.String getMessage()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to retrieve list: \u0001");
specialinvoke v3.<org.kohsuke.github.GHException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v2);
throw v3;
catch java.io.IOException from label1 to label2 with label3;
}
private java.lang.Object[] concatenatePages(java.lang.Class, java.util.List, int)
{
java.util.Iterator v8;
java.util.List v2;
int v11, v3, v7;
java.lang.Class v1, v4;
java.lang.Object v10, v5, v6;
org.kohsuke.github.PagedIterable v0;
boolean v9;
v0 := @this: org.kohsuke.github.PagedIterable;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.List;
v3 := @parameter2: int;
v4 = virtualinvoke v1.<java.lang.Class: java.lang.Class getComponentType()>();
v5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v4, v3);
v6 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v5);
v7 = 0;
v8 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label2;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(v10);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v10, 0, v6, v7, v11);
v7 = v7 + v11;
goto label1;
label2:
return v6;
}
}