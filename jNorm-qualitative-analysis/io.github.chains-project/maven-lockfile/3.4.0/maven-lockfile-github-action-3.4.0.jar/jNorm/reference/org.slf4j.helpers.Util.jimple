public final class org.slf4j.helpers.Util extends java.lang.Object
{
private static org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER;
private static boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED;
private void <init>()
{
org.slf4j.helpers.Util v0;
v0 := @this: org.slf4j.helpers.Util;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String safeGetSystemProperty(java.lang.String)
{
java.lang.SecurityException v3;
java.lang.String v0, v2;
java.lang.IllegalArgumentException v1;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
v1 = new java.lang.IllegalArgumentException;
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null input");
throw v1;
label1:
v2 = null;
label2:
v2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(v0);
label3:
goto label5;
label4:
v3 := @caughtexception;
label5:
return v2;
catch java.lang.SecurityException from label2 to label3 with label4;
}
public static boolean safeGetBooleanSystemProperty(java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)>(v0);
if v1 != null goto label1;
return 0;
label1:
v2 = virtualinvoke v1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");
return v2;
}
private static org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()
{
org.slf4j.helpers.Util$ClassContextSecurityManager v0, v1, v3, v4;
boolean v2;
v0 = <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER>;
if v0 == null goto label1;
v1 = <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER>;
return v1;
label1:
v2 = <org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED>;
if v2 == 0 goto label2;
return null;
label2:
v3 = staticinvoke <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()>();
<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER> = v3;
<org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED> = 1;
v4 = <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER>;
return v4;
}
private static org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()
{
java.lang.SecurityException v1;
org.slf4j.helpers.Util$ClassContextSecurityManager v0;
label1:
v0 = new org.slf4j.helpers.Util$ClassContextSecurityManager;
specialinvoke v0.<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>()>();
label2:
return v0;
label3:
v1 := @caughtexception;
return null;
catch java.lang.SecurityException from label1 to label2 with label3;
}
public static java.lang.Class getCallingClass()
{
java.lang.IllegalStateException v12;
java.lang.Class[] v1;
int v10, v11, v13, v4, v5, v9;
java.lang.Class v14, v2, v6;
java.lang.String v3, v7;
org.slf4j.helpers.Util$ClassContextSecurityManager v0;
boolean v8;
v0 = staticinvoke <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()>();
if v0 != null goto label1;
return null;
label1:
v1 = virtualinvoke v0.<org.slf4j.helpers.Util$ClassContextSecurityManager: java.lang.Class[] getClassContext()>();
v2 = class "Lorg/slf4j/helpers/Util;";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = 0;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
v6 = v1[v4];
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 != 0 goto label3;
v4 = v4 + 1;
goto label2;
label3:
v9 = lengthof v1;
if v4 >= v9 goto label4;
v10 = v4 + 2;
v11 = lengthof v1;
if v10 < v11 goto label5;
label4:
v12 = new java.lang.IllegalStateException;
specialinvoke v12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find org.slf4j.helpers.Util or its caller in the stack; this should not happen");
throw v12;
label5:
v13 = v4 + 2;
v14 = v1[v13];
return v14;
}
public static final void report(java.lang.String, java.lang.Throwable)
{
java.io.PrintStream v2, v3;
java.lang.Throwable v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Throwable;
v2 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v2.<java.io.PrintStream: void println(java.lang.String)>(v0);
v3 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v3.<java.io.PrintStream: void println(java.lang.String)>("Reported exception:");
virtualinvoke v1.<java.lang.Throwable: void printStackTrace()>();
return;
}
public static final void report(java.lang.String)
{
java.io.PrintStream v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = <java.lang.System: java.io.PrintStream err>;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("SLF4J: \u0001");
virtualinvoke v1.<java.io.PrintStream: void println(java.lang.String)>(v2);
return;
}
static void <clinit>()
{
<org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED> = 0;
return;
}
}