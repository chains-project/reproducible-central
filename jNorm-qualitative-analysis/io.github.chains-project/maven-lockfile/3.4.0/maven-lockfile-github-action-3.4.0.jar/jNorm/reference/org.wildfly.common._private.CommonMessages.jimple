public interface  org.wildfly.common._private.CommonMessages extends java.lang.Object
{
public static final org.wildfly.common._private.CommonMessages msg;
public abstract java.lang.IllegalArgumentException nullParam(java.lang.String);
public abstract java.lang.IllegalArgumentException paramLessThan(java.lang.String, long);
public abstract java.lang.IllegalArgumentException paramLessThan(java.lang.String, double);
public abstract java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, long);
public abstract java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, double);
public abstract java.lang.ArrayIndexOutOfBoundsException arrayOffsetGreaterThanLength(int, int);
public abstract java.lang.ArrayIndexOutOfBoundsException arrayOffsetLengthGreaterThanLength(int, int, int);
public abstract java.lang.IllegalArgumentException nullArrayParam(int, java.lang.String);
public abstract java.lang.NullPointerException nullParamNPE(java.lang.String);
public abstract java.lang.IllegalArgumentException invalidPermissionAction(java.lang.String);
public abstract java.lang.IllegalArgumentException emptyParam(java.lang.String);
public abstract java.lang.String invalidExpressionSyntax(int);
public abstract java.lang.IllegalArgumentException unresolvedEnvironmentProperty(java.lang.String);
public abstract java.lang.IllegalArgumentException unresolvedSystemProperty(java.lang.String);
public abstract java.lang.IllegalArgumentException invalidAddressBytes(int);
public abstract java.lang.IllegalArgumentException invalidAddress(java.lang.String);
public abstract java.lang.UnsupportedOperationException unsupported(java.lang.String, java.lang.String);
public abstract java.security.PrivilegedActionException privilegedActionFailed(java.lang.Exception);
public abstract java.lang.SecurityException readOnlyPermissionCollection();
public abstract java.lang.IllegalArgumentException invalidPermissionType(java.lang.Class, java.lang.Class);
public abstract java.lang.IllegalStateException invalidOddFields();
public abstract java.lang.IllegalArgumentException cannotContainNullFieldNameOrValue();
public abstract java.io.IOException corruptedStream();
public abstract java.lang.String remoteException(java.lang.String, java.lang.String);
public abstract java.lang.String remoteException(java.lang.String);
public abstract org.wildfly.common.codec.DecodeException unexpectedPadding();
public abstract org.wildfly.common.codec.DecodeException expectedPadding();
public abstract org.wildfly.common.codec.DecodeException incompleteDecode();
public abstract org.wildfly.common.codec.DecodeException expectedPaddingCharacters(int);
public abstract org.wildfly.common.codec.DecodeException invalidBase32Character();
public abstract org.wildfly.common.codec.DecodeException expectedEvenNumberOfHexCharacters();
public abstract org.wildfly.common.codec.DecodeException invalidHexCharacter();
public abstract org.wildfly.common.codec.DecodeException expectedTwoPaddingCharacters();
public abstract org.wildfly.common.codec.DecodeException invalidBase64Character();
public abstract java.lang.IllegalStateException tooLarge();
public abstract java.lang.String unexpectedNullValue();
public abstract java.lang.String expectedLockHold(java.lang.Object);
public abstract java.lang.String expectedLockNotHold(java.lang.Object);
public abstract java.lang.String expectedBoolean(boolean);
public abstract java.lang.IllegalStateException unreachableCode();
public abstract java.lang.IllegalStateException impossibleSwitchCase(java.lang.Object);
static void <clinit>()
{
java.lang.Object v0;
v0 = staticinvoke <org.jboss.logging.Messages: java.lang.Object getBundle(java.lang.Class)>(class "Lorg/wildfly/common/_private/CommonMessages;");
<org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg> = v0;
return;
}
}