public class org.wildfly.common._private.CommonMessages_$bundle extends java.lang.Object implements org.wildfly.common._private.CommonMessages, java.io.Serializable
{
private static final long serialVersionUID;
public static final org.wildfly.common._private.CommonMessages_$bundle INSTANCE;
private static final java.util.Locale LOCALE;
protected void <init>()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
protected java.lang.Object readResolve()
{
org.wildfly.common._private.CommonMessages_$bundle v0, v1;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = <org.wildfly.common._private.CommonMessages_$bundle: org.wildfly.common._private.CommonMessages_$bundle INSTANCE>;
return v1;
}
protected java.util.Locale getLoggingLocale()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v1;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = <org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale LOCALE>;
return v1;
}
protected java.lang.String nullParam$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "Parameter \'%s\' may not be null";
}
public final java.lang.IllegalArgumentException nullParam(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String nullParam$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
private static void _copyStackTraceMinusOne(java.lang.Throwable)
{
java.lang.Throwable v0;
java.lang.Object[] v3;
java.lang.StackTraceElement[] v1;
int v2;
v0 := @parameter0: java.lang.Throwable;
v1 = virtualinvoke v0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();
v2 = lengthof v1;
v3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(v1, 1, v2);
virtualinvoke v0.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(v3);
return;
}
protected java.lang.String paramLessThan$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00001: Parameter \'%s\' must not be less than %d";
}
public final java.lang.IllegalArgumentException paramLessThan(java.lang.String, long)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
long v2;
java.lang.IllegalArgumentException v3;
java.lang.Long v7;
java.util.Locale v4;
java.lang.String v1, v5, v8;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String paramLessThan$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v2);
v6[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
public final java.lang.IllegalArgumentException paramLessThan(java.lang.String, double)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.Double v7;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v1, v5, v8;
double v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: double;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String paramLessThan$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v2);
v6[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String paramGreaterThan$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00002: Parameter \'%s\' must not be greater than than %d";
}
public final java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, long)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
long v2;
java.lang.IllegalArgumentException v3;
java.lang.Long v7;
java.util.Locale v4;
java.lang.String v1, v5, v8;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String paramGreaterThan$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v2);
v6[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
public final java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, double)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.Double v7;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.String v1, v5, v8;
double v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: double;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String paramGreaterThan$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v2);
v6[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String arrayOffsetGreaterThanLength$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00003: Given offset of %d is greater than array length of %d";
}
public final java.lang.ArrayIndexOutOfBoundsException arrayOffsetGreaterThanLength(int, int)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.ArrayIndexOutOfBoundsException v3;
java.lang.Integer v7, v8;
java.util.Locale v4;
int v1, v2;
java.lang.String v5, v9;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = new java.lang.ArrayIndexOutOfBoundsException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String arrayOffsetGreaterThanLength$str()>();
v6 = newarray (java.lang.Object)[2];
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v6[0] = v7;
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v6[1] = v8;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>(v9);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String arrayOffsetLengthGreaterThanLength$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00004: Given offset of %d plus length of %d is greater than array length of %d";
}
public final java.lang.ArrayIndexOutOfBoundsException arrayOffsetLengthGreaterThanLength(int, int, int)
{
java.lang.Object[] v7;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.ArrayIndexOutOfBoundsException v4;
java.lang.Integer v10, v8, v9;
java.util.Locale v5;
int v1, v2, v3;
java.lang.String v11, v6;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = new java.lang.ArrayIndexOutOfBoundsException;
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v6 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String arrayOffsetLengthGreaterThanLength$str()>();
v7 = newarray (java.lang.Object)[3];
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v7[0] = v8;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v7[1] = v9;
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v7[2] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v5, v6, v7);
specialinvoke v4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>(v11);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v4);
return v4;
}
protected java.lang.String nullArrayParam$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00005: Array index %d of parameter \'%s\' may not be null";
}
public final java.lang.IllegalArgumentException nullArrayParam(int, java.lang.String)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.lang.Integer v7;
java.util.Locale v4;
int v1;
java.lang.String v2, v5, v8;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String nullArrayParam$str()>();
v6 = newarray (java.lang.Object)[2];
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v6[0] = v7;
v6[1] = v2;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v8);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String nullParamNPE$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00006: Parameter \'%s\' may not be null";
}
public final java.lang.NullPointerException nullParamNPE(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.NullPointerException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.NullPointerException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String nullParamNPE$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String invalidPermissionAction$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00007: Invalid permission action \'%s\'";
}
public final java.lang.IllegalArgumentException invalidPermissionAction(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidPermissionAction$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String emptyParam$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00008: Parameter \'%s\' must not be empty";
}
public final java.lang.IllegalArgumentException emptyParam(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String emptyParam$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String invalidExpressionSyntax$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00009: Invalid expression syntax at position %d";
}
public final java.lang.String invalidExpressionSyntax(int)
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
int v1;
java.lang.String v3, v6;
java.lang.Integer v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidExpressionSyntax$str()>();
v4 = newarray (java.lang.Object)[1];
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v4[0] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
return v6;
}
protected java.lang.String unresolvedEnvironmentProperty$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00010: No environment property found named \"%s\"";
}
public final java.lang.IllegalArgumentException unresolvedEnvironmentProperty(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String unresolvedEnvironmentProperty$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String unresolvedSystemProperty$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00011: No system property found named \"%s\"";
}
public final java.lang.IllegalArgumentException unresolvedSystemProperty(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String unresolvedSystemProperty$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String invalidAddressBytes$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00012: Invalid address length of %d; must be 4 or 16";
}
public final java.lang.IllegalArgumentException invalidAddressBytes(int)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.IllegalArgumentException v2;
java.lang.Integer v6;
java.util.Locale v3;
int v1;
java.lang.String v4, v7;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: int;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidAddressBytes$str()>();
v5 = newarray (java.lang.Object)[1];
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5[0] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String invalidAddress$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00013: Invalid address string \"%s\"";
}
public final java.lang.IllegalArgumentException invalidAddress(java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidAddress$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String unsupported$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00100: Method \"%s\" of class \"%s\" is not implemented";
}
public final java.lang.UnsupportedOperationException unsupported(java.lang.String, java.lang.String)
{
java.lang.UnsupportedOperationException v3;
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v4;
java.lang.String v1, v2, v5, v7;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = new java.lang.UnsupportedOperationException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String unsupported$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v7);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String privilegedActionFailed$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00200: Privileged action failed";
}
public final java.security.PrivilegedActionException privilegedActionFailed(java.lang.Exception)
{
java.security.PrivilegedActionException v2;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.Exception v1;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.Exception;
v2 = new java.security.PrivilegedActionException;
specialinvoke v2.<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>(v1);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String readOnlyPermissionCollection$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00300: Permission collection is read-only";
}
public final java.lang.SecurityException readOnlyPermissionCollection()
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.SecurityException v1;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new java.lang.SecurityException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String readOnlyPermissionCollection$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.SecurityException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String invalidPermissionType$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00301: Invalid permission type (expected %s, actual value was %s)";
}
public final java.lang.IllegalArgumentException invalidPermissionType(java.lang.Class, java.lang.Class)
{
java.lang.Object[] v6;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.util.Locale v4;
java.lang.Class v1, v2;
java.lang.String v5, v7;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidPermissionType$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String invalidOddFields$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00400: Invalid serialized remote exception cause object with odd number of strings in fields key/value list";
}
public final java.lang.IllegalStateException invalidOddFields()
{
java.lang.IllegalStateException v1;
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new java.lang.IllegalStateException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidOddFields$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String cannotContainNullFieldNameOrValue$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00401: Field name or field value cannot be null";
}
public final java.lang.IllegalArgumentException cannotContainNullFieldNameOrValue()
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
java.lang.IllegalArgumentException v1;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new java.lang.IllegalArgumentException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String cannotContainNullFieldNameOrValue$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String corruptedStream$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00402: Remote exception stream is corrupted and cannot be read";
}
public final java.io.IOException corruptedStream()
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.io.IOException v1;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new java.io.IOException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String corruptedStream$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.io.IOException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String remoteException2$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "Remote exception %s: %s";
}
public final java.lang.String remoteException(java.lang.String, java.lang.String)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v2, v4, v6;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String remoteException2$str()>();
v5 = newarray (java.lang.Object)[2];
v5[0] = v1;
v5[1] = v2;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
return v6;
}
protected java.lang.String remoteException1$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "Remote exception %s";
}
public final java.lang.String remoteException(java.lang.String)
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v1, v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String remoteException1$str()>();
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
return v5;
}
protected java.lang.String unexpectedPadding$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00500: Unexpected padding";
}
public final org.wildfly.common.codec.DecodeException unexpectedPadding()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String unexpectedPadding$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String expectedPadding$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00501: Expected padding";
}
public final org.wildfly.common.codec.DecodeException expectedPadding()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedPadding$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String incompleteDecode$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00502: Incomplete decode";
}
public final org.wildfly.common.codec.DecodeException incompleteDecode()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String incompleteDecode$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String expectedPaddingCharacters$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00503: Expected %d padding characters";
}
public final org.wildfly.common.codec.DecodeException expectedPaddingCharacters(int)
{
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.lang.Integer v6;
org.wildfly.common.codec.DecodeException v2;
java.util.Locale v3;
int v1;
java.lang.String v4, v7;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: int;
v2 = new org.wildfly.common.codec.DecodeException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedPaddingCharacters$str()>();
v5 = newarray (java.lang.Object)[1];
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5[0] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v7);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String invalidBase32Character$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00504: Invalid base 32 character";
}
public final org.wildfly.common.codec.DecodeException invalidBase32Character()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidBase32Character$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String expectedEvenNumberOfHexCharacters$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00505: Expected an even number of hex characters";
}
public final org.wildfly.common.codec.DecodeException expectedEvenNumberOfHexCharacters()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedEvenNumberOfHexCharacters$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String invalidHexCharacter$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00506: Invalid hex character";
}
public final org.wildfly.common.codec.DecodeException invalidHexCharacter()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidHexCharacter$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String expectedTwoPaddingCharacters$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00507: Expected two padding characters";
}
public final org.wildfly.common.codec.DecodeException expectedTwoPaddingCharacters()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedTwoPaddingCharacters$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String invalidBase64Character$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00508: Invalid base 64 character";
}
public final org.wildfly.common.codec.DecodeException invalidBase64Character()
{
java.lang.Object[] v4;
org.wildfly.common.codec.DecodeException v1;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new org.wildfly.common.codec.DecodeException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String invalidBase64Character$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<org.wildfly.common.codec.DecodeException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String tooLarge$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM00509: Byte string builder is too large to grow";
}
public final java.lang.IllegalStateException tooLarge()
{
java.lang.IllegalStateException v1;
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new java.lang.IllegalStateException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String tooLarge$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String unexpectedNullValue$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM01000: Internal error: Assertion failure: Unexpectedly null value";
}
public final java.lang.String unexpectedNullValue()
{
java.lang.Object[] v3;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v1;
java.lang.String v2, v4;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String unexpectedNullValue$str()>();
v3 = newarray (java.lang.Object)[0];
v4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v1, v2, v3);
return v4;
}
protected java.lang.String expectedLockHold$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM01001: Internal error: Assertion failure: Current thread expected to hold lock for %s";
}
public final java.lang.String expectedLockHold(java.lang.Object)
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.Object v1;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedLockHold$str()>();
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
return v5;
}
protected java.lang.String expectedLockNotHold$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM01002: Internal error: Assertion failure: Current thread expected to not hold lock for %s";
}
public final java.lang.String expectedLockNotHold(java.lang.Object)
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.Object v1;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedLockNotHold$str()>();
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
return v5;
}
protected java.lang.String expectedBoolean$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM01003: Internal error: Assertion failure: Expected boolean value to be %s";
}
public final java.lang.String expectedBoolean(boolean)
{
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.Boolean v5;
java.lang.String v3, v6;
boolean v1;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: boolean;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String expectedBoolean$str()>();
v4 = newarray (java.lang.Object)[1];
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v4[0] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
return v6;
}
protected java.lang.String unreachableCode$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM02000: Internal error: Unreachable code has been reached";
}
public final java.lang.IllegalStateException unreachableCode()
{
java.lang.IllegalStateException v1;
java.lang.Object[] v4;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 = new java.lang.IllegalStateException;
v2 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String unreachableCode$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String impossibleSwitchCase$str()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
return "COM02001: Internal error: Impossible switch condition encountered: %s";
}
public final java.lang.IllegalStateException impossibleSwitchCase(java.lang.Object)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v3;
java.lang.Object v1;
java.lang.String v4, v6;
v0 := @this: org.wildfly.common._private.CommonMessages_$bundle;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: java.lang.String impossibleSwitchCase$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <org.wildfly.common._private.CommonMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
static void <clinit>()
{
org.wildfly.common._private.CommonMessages_$bundle v0;
java.util.Locale v1;
v0 = new org.wildfly.common._private.CommonMessages_$bundle;
specialinvoke v0.<org.wildfly.common._private.CommonMessages_$bundle: void <init>()>();
<org.wildfly.common._private.CommonMessages_$bundle: org.wildfly.common._private.CommonMessages_$bundle INSTANCE> = v0;
v1 = <java.util.Locale: java.util.Locale ROOT>;
<org.wildfly.common._private.CommonMessages_$bundle: java.util.Locale LOCALE> = v1;
return;
}
}