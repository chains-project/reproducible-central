final class org.wildfly.common.archive.ByteBufferInputStream extends java.io.InputStream
{
private final java.nio.ByteBuffer[] bufs;
private final long offset;
private final long size;
long pos;
long mark;
void <init>(java.nio.ByteBuffer[], long, long)
{
java.nio.ByteBuffer[] v1;
long v2, v3;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 := @parameter0: java.nio.ByteBuffer[];
v2 := @parameter1: long;
v3 := @parameter2: long;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v0.<org.wildfly.common.archive.ByteBufferInputStream: java.nio.ByteBuffer[] bufs> = v1;
v0.<org.wildfly.common.archive.ByteBufferInputStream: long offset> = v2;
v0.<org.wildfly.common.archive.ByteBufferInputStream: long size> = v3;
return;
}
public int read()
{
java.nio.ByteBuffer[] v4;
long v1, v2, v5, v6, v7, v8;
byte v3, v9;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v2 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long size>;
v3 = v1 cmp v2;
if v3 >= 0 goto label1;
v4 = v0.<org.wildfly.common.archive.ByteBufferInputStream: java.nio.ByteBuffer[] bufs>;
v5 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long offset>;
v6 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v7 = v6 + 1L;
v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos> = v7;
v8 = v5 + v6;
v9 = staticinvoke <org.wildfly.common.archive.Archive: byte getByte(java.nio.ByteBuffer[],long)>(v4, v8);
goto label2;
label1:
v9 = -1;
label2:
return v9;
}
public int read(byte[])
{
byte[] v1;
int v2, v3;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<org.wildfly.common.archive.ByteBufferInputStream: int read(byte[],int,int)>(v1, 0, v2);
return v3;
}
public int read(byte[], int, int)
{
byte[] v1;
java.nio.ByteBuffer[] v10;
long v11, v12, v13, v4, v5, v6, v9;
byte v7;
int v2, v3, v8;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long size>;
v5 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v6 = v4 - v5;
v7 = v6 cmp 0L;
if v7 != 0 goto label1;
v8 = (int) -1;
return v8;
label1:
v9 = staticinvoke <java.lang.Math: long min(long,long)>(v3, v6);
if v9 <= 0 goto label2;
v10 = v0.<org.wildfly.common.archive.ByteBufferInputStream: java.nio.ByteBuffer[] bufs>;
v11 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long offset>;
v12 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v13 = v11 + v12;
staticinvoke <org.wildfly.common.archive.Archive: void readBytes(java.nio.ByteBuffer[],long,byte[],int,int)>(v10, v13, v1, v2, v9);
return v9;
label2:
return 0;
}
public long skip(long)
{
long v1, v2, v3, v4, v5, v7, v8;
byte v6;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 := @parameter0: long;
v2 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long size>;
v3 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v4 = v2 - v3;
v5 = staticinvoke <java.lang.Math: long min(long,long)>(v4, v1);
v6 = v5 cmp 0L;
if v6 <= 0 goto label1;
v7 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v8 = v7 + v5;
v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos> = v8;
return v5;
label1:
return 0L;
}
public int available()
{
long v1, v2, v3, v4;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long size>;
v2 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v3 = v1 - v2;
v4 = staticinvoke <java.lang.Math: long min(long,long)>(2147483647L, v3);
return v4;
}
public void close()
{
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
return;
}
public void mark(int)
{
int v1;
long v2;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos>;
v0.<org.wildfly.common.archive.ByteBufferInputStream: long mark> = v2;
return;
}
public void reset()
{
long v1;
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
v1 = v0.<org.wildfly.common.archive.ByteBufferInputStream: long mark>;
v0.<org.wildfly.common.archive.ByteBufferInputStream: long pos> = v1;
return;
}
public boolean markSupported()
{
org.wildfly.common.archive.ByteBufferInputStream v0;
v0 := @this: org.wildfly.common.archive.ByteBufferInputStream;
return 1;
}
}