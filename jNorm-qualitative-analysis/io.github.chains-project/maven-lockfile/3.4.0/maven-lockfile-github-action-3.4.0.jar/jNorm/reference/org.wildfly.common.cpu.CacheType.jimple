public final enum class org.wildfly.common.cpu.CacheType extends java.lang.Enum
{
public static final enum org.wildfly.common.cpu.CacheType UNKNOWN;
public static final enum org.wildfly.common.cpu.CacheType DATA;
public static final enum org.wildfly.common.cpu.CacheType INSTRUCTION;
public static final enum org.wildfly.common.cpu.CacheType UNIFIED;
private static final int fullSize;
private final boolean instruction;
private final boolean data;
private static final org.wildfly.common.cpu.CacheType[] $VALUES;
public static org.wildfly.common.cpu.CacheType[] values()
{
org.wildfly.common.cpu.CacheType[] v0;
java.lang.Object v1;
v0 = <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.wildfly.common.cpu.CacheType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/wildfly/common/cpu/CacheType;", v0);
return v1;
}
private void <init>(java.lang.String, int, boolean, boolean)
{
org.wildfly.common.cpu.CacheType v0;
int v2;
java.lang.String v1;
boolean v3, v4;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<org.wildfly.common.cpu.CacheType: boolean instruction> = v3;
v0.<org.wildfly.common.cpu.CacheType: boolean data> = v4;
return;
}
public boolean isInstruction()
{
org.wildfly.common.cpu.CacheType v0;
boolean v1;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 = v0.<org.wildfly.common.cpu.CacheType: boolean instruction>;
return v1;
}
public boolean isData()
{
org.wildfly.common.cpu.CacheType v0;
boolean v1;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 = v0.<org.wildfly.common.cpu.CacheType: boolean data>;
return v1;
}
public static boolean isFull(java.util.EnumSet)
{
int v1, v2;
java.util.EnumSet v0;
boolean v3;
v0 := @parameter0: java.util.EnumSet;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.util.EnumSet: int size()>();
v2 = <org.wildfly.common.cpu.CacheType: int fullSize>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean in(org.wildfly.common.cpu.CacheType)
{
org.wildfly.common.cpu.CacheType v0, v1;
boolean v2;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 := @parameter0: org.wildfly.common.cpu.CacheType;
if v0 != v1 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean in(org.wildfly.common.cpu.CacheType, org.wildfly.common.cpu.CacheType)
{
org.wildfly.common.cpu.CacheType v0, v1, v2;
boolean v3;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 := @parameter0: org.wildfly.common.cpu.CacheType;
v2 := @parameter1: org.wildfly.common.cpu.CacheType;
if v0 == v1 goto label1;
if v0 != v2 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
public boolean in(org.wildfly.common.cpu.CacheType, org.wildfly.common.cpu.CacheType, org.wildfly.common.cpu.CacheType)
{
org.wildfly.common.cpu.CacheType v0, v1, v2, v3;
boolean v4;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 := @parameter0: org.wildfly.common.cpu.CacheType;
v2 := @parameter1: org.wildfly.common.cpu.CacheType;
v3 := @parameter2: org.wildfly.common.cpu.CacheType;
if v0 == v1 goto label1;
if v0 == v2 goto label1;
if v0 != v3 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
public transient boolean in(org.wildfly.common.cpu.CacheType[])
{
org.wildfly.common.cpu.CacheType[] v1;
org.wildfly.common.cpu.CacheType v0, v4;
int v2, v3;
v0 := @this: org.wildfly.common.cpu.CacheType;
v1 := @parameter0: org.wildfly.common.cpu.CacheType[];
if v1 == null goto label3;
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
if v0 != v4 goto label2;
return 1;
label2:
v3 = v3 + 1;
goto label1;
label3:
return 0;
}
private static org.wildfly.common.cpu.CacheType[] $values()
{
org.wildfly.common.cpu.CacheType[] v0;
org.wildfly.common.cpu.CacheType v1, v2, v3, v4;
v0 = newarray (org.wildfly.common.cpu.CacheType)[4];
v1 = <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType UNKNOWN>;
v0[0] = v1;
v2 = <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType DATA>;
v0[1] = v2;
v3 = <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType INSTRUCTION>;
v0[2] = v3;
v4 = <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType UNIFIED>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
org.wildfly.common.cpu.CacheType[] v4, v5;
org.wildfly.common.cpu.CacheType v0, v1, v2, v3;
int v6;
v0 = new org.wildfly.common.cpu.CacheType;
specialinvoke v0.<org.wildfly.common.cpu.CacheType: void <init>(java.lang.String,int,boolean,boolean)>("UNKNOWN", 0, 0, 0);
<org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType UNKNOWN> = v0;
v1 = new org.wildfly.common.cpu.CacheType;
specialinvoke v1.<org.wildfly.common.cpu.CacheType: void <init>(java.lang.String,int,boolean,boolean)>("DATA", 1, 0, 1);
<org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType DATA> = v1;
v2 = new org.wildfly.common.cpu.CacheType;
specialinvoke v2.<org.wildfly.common.cpu.CacheType: void <init>(java.lang.String,int,boolean,boolean)>("INSTRUCTION", 2, 1, 0);
<org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType INSTRUCTION> = v2;
v3 = new org.wildfly.common.cpu.CacheType;
specialinvoke v3.<org.wildfly.common.cpu.CacheType: void <init>(java.lang.String,int,boolean,boolean)>("UNIFIED", 3, 1, 1);
<org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType UNIFIED> = v3;
v4 = staticinvoke <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType[] $values()>();
<org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType[] $VALUES> = v4;
v5 = staticinvoke <org.wildfly.common.cpu.CacheType: org.wildfly.common.cpu.CacheType[] values()>();
v6 = lengthof v5;
<org.wildfly.common.cpu.CacheType: int fullSize> = v6;
return;
}
}