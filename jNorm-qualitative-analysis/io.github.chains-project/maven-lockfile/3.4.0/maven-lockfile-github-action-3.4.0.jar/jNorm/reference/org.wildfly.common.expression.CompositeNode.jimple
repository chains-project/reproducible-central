final class org.wildfly.common.expression.CompositeNode extends org.wildfly.common.expression.Node
{
private final org.wildfly.common.expression.Node[] subNodes;
void <init>(org.wildfly.common.expression.Node[])
{
org.wildfly.common.expression.CompositeNode v0;
org.wildfly.common.expression.Node[] v1;
v0 := @this: org.wildfly.common.expression.CompositeNode;
v1 := @parameter0: org.wildfly.common.expression.Node[];
specialinvoke v0.<org.wildfly.common.expression.Node: void <init>()>();
v0.<org.wildfly.common.expression.CompositeNode: org.wildfly.common.expression.Node[] subNodes> = v1;
return;
}
void <init>(java.util.List)
{
java.util.List v1;
java.lang.Object[] v3;
org.wildfly.common.expression.Node[] v2;
org.wildfly.common.expression.CompositeNode v0;
v0 := @this: org.wildfly.common.expression.CompositeNode;
v1 := @parameter0: java.util.List;
specialinvoke v0.<org.wildfly.common.expression.Node: void <init>()>();
v2 = <org.wildfly.common.expression.CompositeNode: org.wildfly.common.expression.Node[] NO_NODES>;
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v2);
v0.<org.wildfly.common.expression.CompositeNode: org.wildfly.common.expression.Node[] subNodes> = v3;
return;
}
void emit(org.wildfly.common.expression.ResolveContext, org.wildfly.common.function.ExceptionBiConsumer) throws java.lang.Exception
{
org.wildfly.common.expression.Node v6;
org.wildfly.common.expression.ResolveContext v1;
org.wildfly.common.expression.Node[] v3;
int v4, v5;
org.wildfly.common.expression.CompositeNode v0;
org.wildfly.common.function.ExceptionBiConsumer v2;
v0 := @this: org.wildfly.common.expression.CompositeNode;
v1 := @parameter0: org.wildfly.common.expression.ResolveContext;
v2 := @parameter1: org.wildfly.common.function.ExceptionBiConsumer;
v3 = v0.<org.wildfly.common.expression.CompositeNode: org.wildfly.common.expression.Node[] subNodes>;
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v3[v5];
virtualinvoke v6.<org.wildfly.common.expression.Node: void emit(org.wildfly.common.expression.ResolveContext,org.wildfly.common.function.ExceptionBiConsumer)>(v1, v2);
v5 = v5 + 1;
goto label1;
label2:
return;
}
void catalog(java.util.HashSet)
{
java.util.HashSet v1;
org.wildfly.common.expression.Node v5;
org.wildfly.common.expression.Node[] v2;
int v3, v4;
org.wildfly.common.expression.CompositeNode v0;
v0 := @this: org.wildfly.common.expression.CompositeNode;
v1 := @parameter0: java.util.HashSet;
v2 = v0.<org.wildfly.common.expression.CompositeNode: org.wildfly.common.expression.Node[] subNodes>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
virtualinvoke v5.<org.wildfly.common.expression.Node: void catalog(java.util.HashSet)>(v1);
v4 = v4 + 1;
goto label1;
label2:
return;
}
public java.lang.String toString()
{
org.wildfly.common.expression.Node v5;
org.wildfly.common.expression.CompositeNode v0;
org.wildfly.common.expression.Node[] v2;
int v3, v4;
java.lang.StringBuilder v1, v6, v8;
java.lang.String v7, v9;
v0 := @this: org.wildfly.common.expression.CompositeNode;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);
v2 = v0.<org.wildfly.common.expression.CompositeNode: org.wildfly.common.expression.Node[] subNodes>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
v6 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
v7 = virtualinvoke v5.<java.lang.Object: java.lang.String toString()>();
v8 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
v4 = v4 + 1;
goto label1;
label2:
v9 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v9;
}
}