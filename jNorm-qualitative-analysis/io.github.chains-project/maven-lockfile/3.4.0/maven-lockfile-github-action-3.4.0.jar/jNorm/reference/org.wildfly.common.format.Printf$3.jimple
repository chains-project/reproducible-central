class org.wildfly.common.format.Printf$3 extends java.lang.Object implements java.time.temporal.TemporalField
{
void <init>()
{
org.wildfly.common.format.Printf$3 v0;
v0 := @this: org.wildfly.common.format.Printf$3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.time.temporal.TemporalUnit getBaseUnit()
{
org.wildfly.common.format.Printf$3 v0;
java.time.temporal.ChronoUnit v1;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit YEARS>;
return v1;
}
public java.time.temporal.TemporalUnit getRangeUnit()
{
org.wildfly.common.format.Printf$3 v0;
java.time.temporal.ChronoUnit v1;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit CENTURIES>;
return v1;
}
public java.time.temporal.ValueRange range()
{
org.wildfly.common.format.Printf$3 v0;
java.time.temporal.ValueRange v1;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 = staticinvoke <java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long)>(-9223372036854775808L, 9223372036854775807L);
return v1;
}
public boolean isDateBased()
{
org.wildfly.common.format.Printf$3 v0;
v0 := @this: org.wildfly.common.format.Printf$3;
return 1;
}
public boolean isTimeBased()
{
org.wildfly.common.format.Printf$3 v0;
v0 := @this: org.wildfly.common.format.Printf$3;
return 0;
}
public boolean isSupportedBy(java.time.temporal.TemporalAccessor)
{
java.time.temporal.ChronoField v2;
org.wildfly.common.format.Printf$3 v0;
boolean v3;
java.time.temporal.TemporalAccessor v1;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 := @parameter0: java.time.temporal.TemporalAccessor;
v2 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField YEAR>;
v3 = interfaceinvoke v1.<java.time.temporal.TemporalAccessor: boolean isSupported(java.time.temporal.TemporalField)>(v2);
return v3;
}
public java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)
{
org.wildfly.common.format.Printf$3 v0;
java.time.temporal.ValueRange v2;
java.time.temporal.TemporalAccessor v1;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 := @parameter0: java.time.temporal.TemporalAccessor;
v2 = virtualinvoke v0.<org.wildfly.common.format.Printf$3: java.time.temporal.ValueRange range()>();
return v2;
}
public long getFrom(java.time.temporal.TemporalAccessor)
{
java.time.temporal.ChronoField v2;
org.wildfly.common.format.Printf$3 v0;
int v3, v4;
java.time.temporal.TemporalAccessor v1;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 := @parameter0: java.time.temporal.TemporalAccessor;
v2 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField YEAR>;
v3 = interfaceinvoke v1.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>(v2);
v4 = v3 / 100;
return v4;
}
public java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal, long)
{
java.time.temporal.ChronoField v3, v4;
org.wildfly.common.format.Printf$3 v0;
long v2, v7, v8;
int v5, v6;
java.time.temporal.Temporal v1, v9;
v0 := @this: org.wildfly.common.format.Printf$3;
v1 := @parameter0: java.time.temporal.Temporal;
v2 := @parameter1: long;
v3 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField YEAR>;
v4 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField YEAR>;
v5 = interfaceinvoke v1.<java.time.temporal.Temporal: int get(java.time.temporal.TemporalField)>(v4);
v6 = v5 % 100;
v7 = 100L * v2;
v8 = v6 + v7;
v9 = interfaceinvoke v1.<java.time.temporal.Temporal: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>(v3, v8);
return v9;
}
}