public interface  org.wildfly.common.function.ExceptionPredicate extends java.lang.Object
{
public abstract boolean test(java.lang.Object) throws java.lang.Exception;
public org.wildfly.common.function.ExceptionPredicate and(org.wildfly.common.function.ExceptionPredicate)
{
org.wildfly.common.function.ExceptionPredicate v0, v1, v2;
v0 := @this: org.wildfly.common.function.ExceptionPredicate;
v1 := @parameter0: org.wildfly.common.function.ExceptionPredicate;
v2 = staticinvoke <org.wildfly.common.function.ExceptionPredicate$lambda_and_0__3284: org.wildfly.common.function.ExceptionPredicate bootstrap$(org.wildfly.common.function.ExceptionPredicate,org.wildfly.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionPredicate or(org.wildfly.common.function.ExceptionPredicate)
{
org.wildfly.common.function.ExceptionPredicate v0, v1, v2;
v0 := @this: org.wildfly.common.function.ExceptionPredicate;
v1 := @parameter0: org.wildfly.common.function.ExceptionPredicate;
v2 = staticinvoke <org.wildfly.common.function.ExceptionPredicate$lambda_or_1__3285: org.wildfly.common.function.ExceptionPredicate bootstrap$(org.wildfly.common.function.ExceptionPredicate,org.wildfly.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionPredicate xor(org.wildfly.common.function.ExceptionPredicate)
{
org.wildfly.common.function.ExceptionPredicate v0, v1, v2;
v0 := @this: org.wildfly.common.function.ExceptionPredicate;
v1 := @parameter0: org.wildfly.common.function.ExceptionPredicate;
v2 = staticinvoke <org.wildfly.common.function.ExceptionPredicate$lambda_xor_2__3286: org.wildfly.common.function.ExceptionPredicate bootstrap$(org.wildfly.common.function.ExceptionPredicate,org.wildfly.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionPredicate not()
{
org.wildfly.common.function.ExceptionPredicate v0, v1;
v0 := @this: org.wildfly.common.function.ExceptionPredicate;
v1 = staticinvoke <org.wildfly.common.function.ExceptionPredicate$lambda_not_3__3287: org.wildfly.common.function.ExceptionPredicate bootstrap$(org.wildfly.common.function.ExceptionPredicate)>(v0);
return v1;
}
public org.wildfly.common.function.ExceptionBiPredicate 'with'(org.wildfly.common.function.ExceptionPredicate)
{
org.wildfly.common.function.ExceptionBiPredicate v2;
org.wildfly.common.function.ExceptionPredicate v0, v1;
v0 := @this: org.wildfly.common.function.ExceptionPredicate;
v1 := @parameter0: org.wildfly.common.function.ExceptionPredicate;
v2 = staticinvoke <org.wildfly.common.function.ExceptionPredicate$lambda_with_4__3288: org.wildfly.common.function.ExceptionBiPredicate bootstrap$(org.wildfly.common.function.ExceptionPredicate,org.wildfly.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
}