class org.wildfly.common.function.Functions$FunctionSupplierBiFunction extends java.lang.Object implements java.util.function.BiFunction
{
static final java.util.function.BiFunction INSTANCE;
private void <init>()
{
org.wildfly.common.function.Functions$FunctionSupplierBiFunction v0;
v0 := @this: org.wildfly.common.function.Functions$FunctionSupplierBiFunction;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object apply(java.util.function.Function, java.util.function.Supplier)
{
org.wildfly.common.function.Functions$FunctionSupplierBiFunction v0;
java.lang.Object v3;
java.util.function.Function v1;
java.util.function.Supplier v2;
v0 := @this: org.wildfly.common.function.Functions$FunctionSupplierBiFunction;
v1 := @parameter0: java.util.function.Function;
v2 := @parameter1: java.util.function.Supplier;
v3 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v2);
return v3;
}
static void <clinit>()
{
org.wildfly.common.function.Functions$FunctionSupplierBiFunction v0;
v0 = new org.wildfly.common.function.Functions$FunctionSupplierBiFunction;
specialinvoke v0.<org.wildfly.common.function.Functions$FunctionSupplierBiFunction: void <init>()>();
<org.wildfly.common.function.Functions$FunctionSupplierBiFunction: java.util.function.BiFunction INSTANCE> = v0;
return;
}
}