public abstract class org.wildfly.common.iteration.ByteIterator extends java.lang.Object implements org.wildfly.common.iteration.BiDirIntIterator, org.wildfly.common.iteration.IndexIterator
{
private static final int OP_BUFFER_SIZE;
private static final java.lang.ThreadLocal OP_BUFFER;
private static final byte[] NO_BYTES;
public static final org.wildfly.common.iteration.ByteIterator EMPTY;
void <init>()
{
org.wildfly.common.iteration.ByteIterator v0;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract boolean hasNext();
public abstract boolean hasPrevious();
public abstract int next() throws java.util.NoSuchElementException;
public abstract int peekNext() throws java.util.NoSuchElementException;
public abstract int previous() throws java.util.NoSuchElementException;
public abstract int peekPrevious() throws java.util.NoSuchElementException;
public abstract long getIndex();
public int getBE16() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
int v1, v2, v3, v4;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = v1 << 8;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v4 = v2 | v3;
return v4;
}
public int getBE32() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
int v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = v1 << 24;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v4 = v3 << 16;
v5 = v2 | v4;
v6 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v7 = v6 << 8;
v8 = v5 | v7;
v9 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v10 = v8 | v9;
return v10;
}
public long getBE64() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
long v10, v11, v13, v14, v16, v17, v19, v2, v20, v22, v4, v5, v7, v8;
int v1, v12, v15, v18, v21, v3, v6, v9;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = v1 << 56;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v4 = v3 << 48;
v5 = v2 | v4;
v6 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v7 = v6 << 40;
v8 = v5 | v7;
v9 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v10 = v9 << 32;
v11 = v8 | v10;
v12 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v13 = v12 << 24;
v14 = v11 | v13;
v15 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v16 = v15 << 16;
v17 = v14 | v16;
v18 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v19 = v18 << 8;
v20 = v17 | v19;
v21 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v22 = v20 | v21;
return v22;
}
public int getLE16() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
int v1, v2, v3, v4;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v3 = v2 << 8;
v4 = v1 | v3;
return v4;
}
public int getLE32() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
int v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v3 = v2 << 8;
v4 = v1 | v3;
v5 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v6 = v5 << 16;
v7 = v4 | v6;
v8 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v9 = v8 << 24;
v10 = v7 | v9;
return v10;
}
public long getLE64() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
long v10, v12, v13, v15, v16, v18, v19, v21, v22, v3, v4, v6, v7, v9;
int v1, v11, v14, v17, v2, v20, v5, v8;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v3 = v2 << 8;
v4 = v1 | v3;
v5 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v6 = v5 << 16;
v7 = v4 | v6;
v8 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v9 = v8 << 24;
v10 = v7 | v9;
v11 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v12 = v11 << 32;
v13 = v10 | v12;
v14 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v15 = v14 << 40;
v16 = v13 | v15;
v17 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v18 = v17 << 48;
v19 = v16 | v18;
v20 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v21 = v20 << 56;
v22 = v19 | v21;
return v22;
}
public int getPackedBE32() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
int v1, v2, v3, v4, v5, v6, v7;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = 0;
label1:
v3 = v1 & 128;
if v3 == 0 goto label2;
v4 = v2 << 7;
v5 = v1 & 127;
v2 = v4 | v5;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
goto label1;
label2:
v6 = v2 << 7;
v7 = v6 | v1;
return v7;
}
public long getPackedBE64() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v0;
long v2, v4, v6, v7;
int v1, v3, v5;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v2 = 0L;
label1:
v3 = v1 & 128;
if v3 == 0 goto label2;
v4 = v2 << 7;
v5 = v1 & 127;
v2 = v4 | v5;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
goto label1;
label2:
v6 = v2 << 7;
v7 = v6 | v1;
return v7;
}
public org.wildfly.common.bytes.ByteStringBuilder appendTo(org.wildfly.common.bytes.ByteStringBuilder)
{
java.lang.ThreadLocal v2;
org.wildfly.common.iteration.ByteIterator v0;
int v4;
java.lang.Object v3;
org.wildfly.common.bytes.ByteStringBuilder v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: org.wildfly.common.bytes.ByteStringBuilder;
v2 = <org.wildfly.common.iteration.ByteIterator: java.lang.ThreadLocal OP_BUFFER>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
label1:
if v4 <= 0 goto label2;
virtualinvoke v1.<org.wildfly.common.bytes.ByteStringBuilder: org.wildfly.common.bytes.ByteStringBuilder append(byte[],int,int)>(v3, 0, v4);
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
goto label1;
label2:
return v1;
}
public void update(java.security.MessageDigest)
{
java.lang.ThreadLocal v2;
org.wildfly.common.iteration.ByteIterator v0;
java.security.MessageDigest v1;
int v4;
java.lang.Object v3;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: java.security.MessageDigest;
v2 = <org.wildfly.common.iteration.ByteIterator: java.lang.ThreadLocal OP_BUFFER>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
label1:
if v4 <= 0 goto label2;
virtualinvoke v1.<java.security.MessageDigest: void update(byte[],int,int)>(v3, 0, v4);
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
goto label1;
label2:
return;
}
public org.wildfly.common.iteration.ByteIterator doFinal(java.security.MessageDigest)
{
byte[] v2;
org.wildfly.common.iteration.ByteIterator v0, v3;
java.security.MessageDigest v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: java.security.MessageDigest;
virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: void update(java.security.MessageDigest)>(v1);
v2 = virtualinvoke v1.<java.security.MessageDigest: byte[] digest()>();
v3 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[])>(v2);
return v3;
}
public void update(javax.crypto.Mac)
{
java.lang.ThreadLocal v2;
org.wildfly.common.iteration.ByteIterator v0;
int v4;
javax.crypto.Mac v1;
java.lang.Object v3;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: javax.crypto.Mac;
v2 = <org.wildfly.common.iteration.ByteIterator: java.lang.ThreadLocal OP_BUFFER>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
label1:
if v4 <= 0 goto label2;
virtualinvoke v1.<javax.crypto.Mac: void update(byte[],int,int)>(v3, 0, v4);
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
goto label1;
label2:
return;
}
public org.wildfly.common.iteration.ByteIterator doFinal(javax.crypto.Mac)
{
byte[] v2, v3;
org.wildfly.common.iteration.ByteIterator v0, v4;
javax.crypto.Mac v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: javax.crypto.Mac;
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: byte[] drain()>();
v3 = virtualinvoke v1.<javax.crypto.Mac: byte[] doFinal(byte[])>(v2);
v4 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[])>(v3);
return v4;
}
public void update(java.security.Signature) throws java.security.SignatureException
{
byte[] v5;
java.lang.ThreadLocal v2;
org.wildfly.common.iteration.ByteIterator v0;
int v4;
java.security.Signature v1;
java.lang.Object v3;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: java.security.Signature;
v2 = <org.wildfly.common.iteration.ByteIterator: java.lang.ThreadLocal OP_BUFFER>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
label1:
if v4 <= 0 goto label2;
virtualinvoke v1.<java.security.Signature: void update(byte[],int,int)>(v3, 0, v4);
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
goto label1;
label2:
v5 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: byte[] drain()>();
virtualinvoke v1.<java.security.Signature: void update(byte[])>(v5);
return;
}
public org.wildfly.common.iteration.ByteIterator sign(java.security.Signature) throws java.security.SignatureException
{
byte[] v2;
org.wildfly.common.iteration.ByteIterator v0, v3;
java.security.Signature v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: java.security.Signature;
virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: void update(java.security.Signature)>(v1);
v2 = virtualinvoke v1.<java.security.Signature: byte[] sign()>();
v3 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[])>(v2);
return v3;
}
public boolean verify(java.security.Signature) throws java.security.SignatureException
{
byte[] v5;
java.lang.ThreadLocal v2;
org.wildfly.common.iteration.ByteIterator v0;
int v4;
java.security.Signature v1;
java.lang.Object v3;
boolean v6;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: java.security.Signature;
v2 = <org.wildfly.common.iteration.ByteIterator: java.lang.ThreadLocal OP_BUFFER>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
label1:
if v4 <= 0 goto label2;
virtualinvoke v1.<java.security.Signature: void update(byte[],int,int)>(v3, 0, v4);
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
goto label1;
label2:
v5 = <org.wildfly.common.iteration.ByteIterator: byte[] NO_BYTES>;
v6 = virtualinvoke v1.<java.security.Signature: boolean verify(byte[])>(v5);
return v6;
}
public org.wildfly.common.iteration.CodePointIterator base64Encode(org.wildfly.common.codec.Base64Alphabet, boolean)
{
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.LittleEndianBase64EncodingIterator v4;
org.wildfly.common.iteration.BigEndianBase64EncodingIterator v5;
org.wildfly.common.codec.Base64Alphabet v1;
boolean v2, v3;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: org.wildfly.common.codec.Base64Alphabet;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<org.wildfly.common.codec.Base64Alphabet: boolean isLittleEndian()>();
if v3 == 0 goto label1;
v4 = new org.wildfly.common.iteration.LittleEndianBase64EncodingIterator;
specialinvoke v4.<org.wildfly.common.iteration.LittleEndianBase64EncodingIterator: void <init>(org.wildfly.common.iteration.ByteIterator,boolean,org.wildfly.common.codec.Base64Alphabet)>(v0, v2, v1);
return v4;
label1:
v5 = new org.wildfly.common.iteration.BigEndianBase64EncodingIterator;
specialinvoke v5.<org.wildfly.common.iteration.BigEndianBase64EncodingIterator: void <init>(org.wildfly.common.iteration.ByteIterator,boolean,org.wildfly.common.codec.Base64Alphabet)>(v0, v2, v1);
return v5;
}
public org.wildfly.common.iteration.CodePointIterator base64Encode(org.wildfly.common.codec.Base64Alphabet)
{
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
org.wildfly.common.codec.Base64Alphabet v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: org.wildfly.common.codec.Base64Alphabet;
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.CodePointIterator base64Encode(org.wildfly.common.codec.Base64Alphabet,boolean)>(v1, 1);
return v2;
}
public org.wildfly.common.iteration.CodePointIterator base64Encode()
{
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
org.wildfly.common.codec.Base64Alphabet v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = <org.wildfly.common.codec.Base64Alphabet: org.wildfly.common.codec.Base64Alphabet STANDARD>;
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.CodePointIterator base64Encode(org.wildfly.common.codec.Base64Alphabet,boolean)>(v1, 1);
return v2;
}
public org.wildfly.common.iteration.CodePointIterator base32Encode(org.wildfly.common.codec.Base32Alphabet, boolean)
{
org.wildfly.common.iteration.BigEndianBase32EncodingIterator v5;
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.codec.Base32Alphabet v1;
org.wildfly.common.iteration.LittleEndianBase32EncodingIterator v4;
boolean v2, v3;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: org.wildfly.common.codec.Base32Alphabet;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<org.wildfly.common.codec.Base32Alphabet: boolean isLittleEndian()>();
if v3 == 0 goto label1;
v4 = new org.wildfly.common.iteration.LittleEndianBase32EncodingIterator;
specialinvoke v4.<org.wildfly.common.iteration.LittleEndianBase32EncodingIterator: void <init>(org.wildfly.common.iteration.ByteIterator,boolean,org.wildfly.common.codec.Base32Alphabet)>(v0, v2, v1);
return v4;
label1:
v5 = new org.wildfly.common.iteration.BigEndianBase32EncodingIterator;
specialinvoke v5.<org.wildfly.common.iteration.BigEndianBase32EncodingIterator: void <init>(org.wildfly.common.iteration.ByteIterator,boolean,org.wildfly.common.codec.Base32Alphabet)>(v0, v2, v1);
return v5;
}
public org.wildfly.common.iteration.CodePointIterator base32Encode(org.wildfly.common.codec.Base32Alphabet)
{
org.wildfly.common.codec.Base32Alphabet v1;
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: org.wildfly.common.codec.Base32Alphabet;
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.CodePointIterator base32Encode(org.wildfly.common.codec.Base32Alphabet,boolean)>(v1, 1);
return v2;
}
public org.wildfly.common.iteration.CodePointIterator base32Encode()
{
org.wildfly.common.codec.Base32Alphabet v1;
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = <org.wildfly.common.codec.Base32Alphabet: org.wildfly.common.codec.Base32Alphabet STANDARD>;
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.CodePointIterator base32Encode(org.wildfly.common.codec.Base32Alphabet,boolean)>(v1, 1);
return v2;
}
public org.wildfly.common.iteration.CodePointIterator hexEncode(boolean)
{
org.wildfly.common.iteration.Base16EncodingCodePointIterator v2;
org.wildfly.common.iteration.ByteIterator v0;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: boolean;
v2 = new org.wildfly.common.iteration.Base16EncodingCodePointIterator;
specialinvoke v2.<org.wildfly.common.iteration.Base16EncodingCodePointIterator: void <init>(org.wildfly.common.iteration.ByteIterator,boolean)>(v0, v1);
return v2;
}
public org.wildfly.common.iteration.CodePointIterator hexEncode()
{
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.CodePointIterator hexEncode(boolean)>(0);
return v1;
}
public org.wildfly.common.iteration.CodePointIterator asUtf8String()
{
org.wildfly.common.iteration.Utf8DecodingIterator v3;
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = <org.wildfly.common.iteration.CodePointIterator: org.wildfly.common.iteration.CodePointIterator EMPTY>;
return v2;
label1:
v3 = new org.wildfly.common.iteration.Utf8DecodingIterator;
specialinvoke v3.<org.wildfly.common.iteration.Utf8DecodingIterator: void <init>(org.wildfly.common.iteration.ByteIterator)>(v0);
return v3;
}
public org.wildfly.common.iteration.CodePointIterator asLatin1String()
{
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.Latin1DecodingIterator v3;
long v4;
org.wildfly.common.iteration.CodePointIterator v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = <org.wildfly.common.iteration.CodePointIterator: org.wildfly.common.iteration.CodePointIterator EMPTY>;
return v2;
label1:
v3 = new org.wildfly.common.iteration.Latin1DecodingIterator;
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: long getIndex()>();
specialinvoke v3.<org.wildfly.common.iteration.Latin1DecodingIterator: void <init>(org.wildfly.common.iteration.ByteIterator,long)>(v0, v4);
return v3;
}
public final boolean contentEquals(org.wildfly.common.iteration.ByteIterator)
{
org.wildfly.common.iteration.ByteIterator v0, v1;
int v4, v5;
boolean v2, v3, v6, v7;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: org.wildfly.common.iteration.ByteIterator;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("other", v1);
label1:
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v2 == 0 goto label3;
v3 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v3 != 0 goto label2;
return 0;
label2:
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v5 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: int next()>();
if v4 == v5 goto label1;
return 0;
label3:
v6 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v6 != 0 goto label4;
v7 = 1;
goto label5;
label4:
v7 = 0;
label5:
return v7;
}
public final org.wildfly.common.iteration.ByteIterator limitedTo(int)
{
org.wildfly.common.iteration.ByteIterator v0, v3;
int v1;
org.wildfly.common.iteration.LimitedByteIterator v4;
boolean v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int;
if v1 <= 0 goto label1;
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v2 != 0 goto label2;
label1:
v3 = <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY>;
return v3;
label2:
v4 = new org.wildfly.common.iteration.LimitedByteIterator;
specialinvoke v4.<org.wildfly.common.iteration.LimitedByteIterator: void <init>(org.wildfly.common.iteration.ByteIterator,long)>(v0, v1);
return v4;
}
public final transient org.wildfly.common.iteration.ByteIterator delimitedBy(int[])
{
org.wildfly.common.iteration.ByteIterator v0, v4, v8;
int[] v1;
int v2, v5, v6, v7;
boolean v3;
org.wildfly.common.iteration.DelimitedByteIterator v9;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int[];
if v1 == null goto label1;
v2 = lengthof v1;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v3 != 0 goto label2;
label1:
v4 = <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY>;
return v4;
label2:
v5 = lengthof v1;
v6 = 0;
label3:
if v6 >= v5 goto label6;
v7 = v1[v6];
if v7 < 0 goto label4;
if v7 <= 255 goto label5;
label4:
v8 = <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY>;
return v8;
label5:
v6 = v6 + 1;
goto label3;
label6:
v9 = new org.wildfly.common.iteration.DelimitedByteIterator;
specialinvoke v9.<org.wildfly.common.iteration.DelimitedByteIterator: void <init>(org.wildfly.common.iteration.ByteIterator,int[])>(v0, v1);
return v9;
}
public org.wildfly.common.iteration.ByteIterator interleavedWith(byte[])
{
byte[] v1;
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.ByteTableTranslatingByteIterator v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: byte[];
v2 = new org.wildfly.common.iteration.ByteTableTranslatingByteIterator;
specialinvoke v2.<org.wildfly.common.iteration.ByteTableTranslatingByteIterator: void <init>(org.wildfly.common.iteration.ByteIterator,byte[])>(v0, v1);
return v2;
}
public org.wildfly.common.iteration.ByteIterator interleavedWith(int[])
{
org.wildfly.common.iteration.ByteIterator v0;
org.wildfly.common.iteration.IntTableTranslatingByteIterator v2;
int[] v1;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int[];
v2 = new org.wildfly.common.iteration.IntTableTranslatingByteIterator;
specialinvoke v2.<org.wildfly.common.iteration.IntTableTranslatingByteIterator: void <init>(org.wildfly.common.iteration.ByteIterator,int[])>(v0, v1);
return v2;
}
public java.io.ByteArrayOutputStream drainTo(java.io.ByteArrayOutputStream)
{
org.wildfly.common.iteration.ByteIterator v0;
java.io.ByteArrayOutputStream v1;
int v3;
boolean v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: java.io.ByteArrayOutputStream;
label1:
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
virtualinvoke v1.<java.io.ByteArrayOutputStream: void write(int)>(v3);
goto label1;
label2:
return v1;
}
public byte[] drain()
{
byte[] v3;
org.wildfly.common.iteration.ByteIterator v0;
java.io.ByteArrayOutputStream v1, v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = new java.io.ByteArrayOutputStream;
specialinvoke v1.<java.io.ByteArrayOutputStream: void <init>()>();
v2 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: java.io.ByteArrayOutputStream drainTo(java.io.ByteArrayOutputStream)>(v1);
v3 = virtualinvoke v2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
return v3;
}
public byte[] drain(int)
{
byte[] v2, v3, v5;
org.wildfly.common.iteration.ByteIterator v0;
int v1, v4, v6;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int;
if v1 != 0 goto label1;
v2 = <org.wildfly.common.iteration.ByteIterator: byte[] NO_BYTES>;
return v2;
label1:
v3 = newarray (byte)[v1];
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
if v4 != 0 goto label2;
v5 = <org.wildfly.common.iteration.ByteIterator: byte[] NO_BYTES>;
goto label4;
label2:
v6 = lengthof v3;
if v4 >= v6 goto label3;
v5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(v3, v4);
goto label4;
label3:
v5 = v3;
label4:
return v5;
}
public byte[] drainAll(int) throws java.util.NoSuchElementException
{
byte[] v2, v3;
org.wildfly.common.iteration.ByteIterator v0;
int v1, v4, v5;
java.util.NoSuchElementException v6;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int;
if v1 != 0 goto label1;
v2 = <org.wildfly.common.iteration.ByteIterator: byte[] NO_BYTES>;
return v2;
label1:
v3 = newarray (byte)[v1];
v4 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[])>(v3);
v5 = lengthof v3;
if v4 >= v5 goto label2;
v6 = new java.util.NoSuchElementException;
specialinvoke v6.<java.util.NoSuchElementException: void <init>()>();
throw v6;
label2:
return v3;
}
public int drain(byte[])
{
byte[] v1;
org.wildfly.common.iteration.ByteIterator v0;
int v2, v3;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[],int,int)>(v1, 0, v2);
return v3;
}
public int drain(byte[], int, int)
{
byte[] v1;
org.wildfly.common.iteration.ByteIterator v0;
int v2, v3, v4, v6, v7;
boolean v5;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v5 != 0 goto label2;
return v4;
label2:
v6 = v2 + v4;
v7 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: int next()>();
v1[v6] = v7;
v4 = v4 + 1;
goto label1;
label3:
return v3;
}
public java.lang.String drainToUtf8(int)
{
byte[] v3;
org.wildfly.common.iteration.ByteIterator v0;
java.nio.charset.Charset v4;
int v1;
java.lang.String v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int;
v2 = new java.lang.String;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: byte[] drain(int)>(v1);
v4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v3, v4);
return v2;
}
public java.lang.String drainToLatin1(int)
{
byte[] v3;
org.wildfly.common.iteration.ByteIterator v0;
java.nio.charset.Charset v4;
int v1;
java.lang.String v2;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 := @parameter0: int;
v2 = new java.lang.String;
v3 = virtualinvoke v0.<org.wildfly.common.iteration.ByteIterator: byte[] drain(int)>(v1);
v4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;
specialinvoke v2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v3, v4);
return v2;
}
public static transient org.wildfly.common.iteration.ByteIterator ofBytes(byte[])
{
int v1;
byte[] v0;
org.wildfly.common.iteration.ByteIterator v2;
v0 := @parameter0: byte[];
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("bytes", v0);
v1 = lengthof v0;
v2 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[],int,int)>(v0, 0, v1);
return v2;
}
public static org.wildfly.common.iteration.ByteIterator ofBytes(byte[], int, int)
{
byte[] v0;
org.wildfly.common.iteration.ByteIterator v3;
org.wildfly.common.iteration.ByteArrayIterator v4;
int v1, v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("bytes", v0);
if v2 > 0 goto label1;
v3 = <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY>;
return v3;
label1:
v4 = new org.wildfly.common.iteration.ByteArrayIterator;
specialinvoke v4.<org.wildfly.common.iteration.ByteArrayIterator: void <init>(int,byte[],int)>(v2, v0, v1);
return v4;
}
public static org.wildfly.common.iteration.ByteIterator ofBytes(byte[], int, int, int[])
{
byte[] v0;
org.wildfly.common.iteration.ByteIterator v4;
org.wildfly.common.iteration.InterleavedByteArrayIterator v5;
int[] v3;
int v1, v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int[];
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("bytes", v0);
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("interleave", v3);
if v2 > 0 goto label1;
v4 = <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY>;
return v4;
label1:
v5 = new org.wildfly.common.iteration.InterleavedByteArrayIterator;
specialinvoke v5.<org.wildfly.common.iteration.InterleavedByteArrayIterator: void <init>(int,byte[],int,int[])>(v2, v0, v1, v3);
return v5;
}
public static org.wildfly.common.iteration.ByteIterator ofBytes(byte[], int[])
{
byte[] v0;
org.wildfly.common.iteration.ByteIterator v3;
int[] v1;
int v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int[];
v2 = lengthof v0;
v3 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[],int,int,int[])>(v0, 0, v2, v1);
return v3;
}
public static org.wildfly.common.iteration.ByteIterator ofByteBuffer(java.nio.ByteBuffer)
{
org.wildfly.common.iteration.ByteBufferIterator v1;
java.nio.ByteBuffer v0;
v0 := @parameter0: java.nio.ByteBuffer;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("buffer", v0);
v1 = new org.wildfly.common.iteration.ByteBufferIterator;
specialinvoke v1.<org.wildfly.common.iteration.ByteBufferIterator: void <init>(java.nio.ByteBuffer)>(v0);
return v1;
}
public static transient org.wildfly.common.iteration.ByteIterator ofIterators(org.wildfly.common.iteration.ByteIterator[])
{
org.wildfly.common.iteration.ByteIterator v2, v4;
int v1, v3;
org.wildfly.common.iteration.ConcatByteIterator v5;
org.wildfly.common.iteration.ByteIterator[] v0;
v0 := @parameter0: org.wildfly.common.iteration.ByteIterator[];
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("iterators", v0);
v1 = lengthof v0;
if v1 != 0 goto label1;
v2 = <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY>;
return v2;
label1:
v3 = lengthof v0;
if v3 != 1 goto label2;
v4 = v0[0];
return v4;
label2:
v5 = new org.wildfly.common.iteration.ConcatByteIterator;
specialinvoke v5.<org.wildfly.common.iteration.ConcatByteIterator: void <init>(org.wildfly.common.iteration.ByteIterator[])>(v0);
return v5;
}
public final java.io.InputStream asInputStream()
{
org.wildfly.common.iteration.ByteIteratorInputStream v1;
org.wildfly.common.iteration.ByteIterator v0;
v0 := @this: org.wildfly.common.iteration.ByteIterator;
v1 = new org.wildfly.common.iteration.ByteIteratorInputStream;
specialinvoke v1.<org.wildfly.common.iteration.ByteIteratorInputStream: void <init>(org.wildfly.common.iteration.ByteIterator)>(v0);
return v1;
}
static void <clinit>()
{
byte[] v1, v3;
org.wildfly.common.iteration.ByteIterator$1 v0;
org.wildfly.common.iteration.ByteArrayIterator v2;
v0 = new org.wildfly.common.iteration.ByteIterator$1;
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator$1: void <init>()>();
<org.wildfly.common.iteration.ByteIterator: java.lang.ThreadLocal OP_BUFFER> = v0;
v1 = newarray (byte)[0];
<org.wildfly.common.iteration.ByteIterator: byte[] NO_BYTES> = v1;
v2 = new org.wildfly.common.iteration.ByteArrayIterator;
v3 = <org.wildfly.common.iteration.ByteIterator: byte[] NO_BYTES>;
specialinvoke v2.<org.wildfly.common.iteration.ByteArrayIterator: void <init>(int,byte[],int)>(0, v3, 0);
<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator EMPTY> = v2;
return;
}
}