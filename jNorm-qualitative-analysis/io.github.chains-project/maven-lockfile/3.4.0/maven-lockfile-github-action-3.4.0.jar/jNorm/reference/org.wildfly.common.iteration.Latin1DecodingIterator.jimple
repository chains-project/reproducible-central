final class org.wildfly.common.iteration.Latin1DecodingIterator extends org.wildfly.common.iteration.CodePointIterator
{
private final org.wildfly.common.iteration.ByteIterator iter;
private final long start;
void <init>(org.wildfly.common.iteration.ByteIterator, long)
{
long v2;
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 := @parameter0: org.wildfly.common.iteration.ByteIterator;
v2 := @parameter1: long;
specialinvoke v0.<org.wildfly.common.iteration.CodePointIterator: void <init>()>();
v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter> = v1;
v0.<org.wildfly.common.iteration.Latin1DecodingIterator: long start> = v2;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
boolean v2;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
return v2;
}
public boolean hasPrevious()
{
org.wildfly.common.iteration.ByteIterator v3;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
byte v2;
long v1;
boolean v4, v5;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: long start>;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v4 = virtualinvoke v3.<org.wildfly.common.iteration.ByteIterator: boolean hasPrevious()>();
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int next()
{
int v2;
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: int next()>();
return v2;
}
public int peekNext() throws java.util.NoSuchElementException
{
int v2;
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: int peekNext()>();
return v2;
}
public int previous()
{
org.wildfly.common.iteration.ByteIterator v4;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
byte v2;
int v5;
long v1;
java.util.NoSuchElementException v3;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: long start>;
v2 = v1 cmp 0L;
if v2 != 0 goto label1;
v3 = new java.util.NoSuchElementException;
specialinvoke v3.<java.util.NoSuchElementException: void <init>()>();
throw v3;
label1:
v4 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.ByteIterator: int previous()>();
return v5;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
int v2;
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: int peekPrevious()>();
return v2;
}
public long getIndex()
{
org.wildfly.common.iteration.ByteIterator v1;
org.wildfly.common.iteration.Latin1DecodingIterator v0;
long v2, v3, v4;
v0 := @this: org.wildfly.common.iteration.Latin1DecodingIterator;
v1 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: long getIndex()>();
v3 = v0.<org.wildfly.common.iteration.Latin1DecodingIterator: long start>;
v4 = v2 - v3;
return v4;
}
}