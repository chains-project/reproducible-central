final class org.wildfly.common.iteration.Utf8EncodingByteIterator extends org.wildfly.common.iteration.ByteIterator
{
private final org.wildfly.common.iteration.CodePointIterator iter;
private final boolean escapeNul;
private int st;
private int cp;
private long offset;
void <init>(org.wildfly.common.iteration.CodePointIterator, boolean)
{
int v3;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v1;
boolean v2;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 := @parameter0: org.wildfly.common.iteration.CodePointIterator;
v2 := @parameter1: boolean;
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter> = v1;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean escapeNul> = v2;
v3 = (int) -1;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v3;
return;
}
public boolean hasNext()
{
int v1;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
boolean v3, v4;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
if v1 != 0 goto label1;
v2 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v3 = virtualinvoke v2.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
public boolean hasPrevious()
{
int v1;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v2;
boolean v3, v4;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
if v1 != 0 goto label1;
v2 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v3 = virtualinvoke v2.<org.wildfly.common.iteration.CodePointIterator: boolean hasPrevious()>();
if v3 == 0 goto label2;
label1:
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
return v4;
}
public int next() throws java.util.NoSuchElementException
{
java.lang.IllegalStateException v32;
org.wildfly.common.iteration.CodePointIterator v6;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
boolean v1, v8;
long v3, v4;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v5, v7, v9;
java.util.NoSuchElementException v2;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean hasNext()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset>;
v4 = v3 + 1L;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset> = v4;
v5 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
tableswitch(v5)
{
case 0: goto label02;
case 1: goto label09;
case 2: goto label10;
case 3: goto label09;
case 4: goto label11;
case 5: goto label12;
case 6: goto label09;
default: goto label13;
};
label02:
v6 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v7 = virtualinvoke v6.<org.wildfly.common.iteration.CodePointIterator: int next()>();
if v7 != 0 goto label03;
v8 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean escapeNul>;
if v8 == 0 goto label04;
label03:
if v7 >= 128 goto label05;
label04:
return v7;
label05:
if v7 >= 2048 goto label06;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 1;
v9 = v7 >> 6;
v10 = 192 | v9;
return v10;
label06:
if v7 >= 65536 goto label07;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 2;
v11 = v7 >> 12;
v12 = 224 | v11;
return v12;
label07:
if v7 >= 1114112 goto label08;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 4;
v13 = v7 >> 18;
v14 = 240 | v13;
return v14;
label08:
v15 = (int) 65533;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v15;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 2;
return 239;
label09:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 0;
v16 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v17 = v16 & 63;
v18 = 128 | v17;
return v18;
label10:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 3;
v19 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v20 = v19 >> 6;
v21 = v20 & 63;
v22 = 128 | v21;
return v22;
label11:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 5;
v23 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v24 = v23 >> 12;
v25 = v24 & 63;
v26 = 128 | v25;
return v26;
label12:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 6;
v27 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v28 = v27 >> 6;
v29 = v28 & 63;
v30 = 128 | v29;
return v30;
label13:
v31 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
v32 = staticinvoke <org.wildfly.common.Assert: java.lang.IllegalStateException impossibleSwitchCase(int)>(v31);
throw v32;
}
public int peekNext() throws java.util.NoSuchElementException
{
java.lang.IllegalStateException v24;
org.wildfly.common.iteration.CodePointIterator v4;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v3, v5, v6, v7, v8, v9;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean hasNext()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
tableswitch(v3)
{
case 0: goto label02;
case 1: goto label07;
case 2: goto label08;
case 3: goto label07;
case 4: goto label09;
case 5: goto label08;
case 6: goto label07;
default: goto label10;
};
label02:
v4 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.CodePointIterator: int peekNext()>();
if v5 >= 128 goto label03;
return v5;
label03:
if v5 >= 2048 goto label04;
v6 = v5 >> 6;
v7 = 192 | v6;
return v7;
label04:
if v5 >= 65536 goto label05;
v8 = v5 >> 12;
v9 = 224 | v8;
return v9;
label05:
if v5 >= 1114112 goto label06;
v10 = v5 >> 18;
v11 = 240 | v10;
return v11;
label06:
return 239;
label07:
v12 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v13 = v12 & 63;
v14 = 128 | v13;
return v14;
label08:
v15 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v16 = v15 >> 6;
v17 = v16 & 63;
v18 = 128 | v17;
return v18;
label09:
v19 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v20 = v19 >> 12;
v21 = v20 & 63;
v22 = 128 | v21;
return v22;
label10:
v23 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
v24 = staticinvoke <org.wildfly.common.Assert: java.lang.IllegalStateException impossibleSwitchCase(int)>(v23);
throw v24;
}
public int previous() throws java.util.NoSuchElementException
{
java.lang.IllegalStateException v38;
org.wildfly.common.iteration.CodePointIterator v6;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
boolean v1, v8;
long v3, v4;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v5, v7, v9;
java.util.NoSuchElementException v2;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset>;
v4 = v3 - 1L;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset> = v4;
v5 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
tableswitch(v5)
{
case 0: goto label02;
case 1: goto label09;
case 2: goto label10;
case 3: goto label11;
case 4: goto label12;
case 5: goto label13;
case 6: goto label14;
default: goto label15;
};
label02:
v6 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v7 = virtualinvoke v6.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
if v7 != 0 goto label03;
v8 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean escapeNul>;
if v8 == 0 goto label04;
label03:
if v7 >= 128 goto label05;
label04:
return v7;
label05:
if v7 >= 2048 goto label06;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 1;
v9 = v7 & 63;
v10 = 128 | v9;
return v10;
label06:
if v7 >= 65536 goto label07;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 3;
v11 = v7 & 63;
v12 = 128 | v11;
return v12;
label07:
if v7 >= 1114112 goto label08;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 6;
v13 = v7 & 63;
v14 = 128 | v13;
return v14;
label08:
v15 = (int) 65533;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp> = v15;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 3;
return 189;
label09:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 0;
v16 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v17 = v16 >> 6;
v18 = 192 | v17;
return v18;
label10:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 0;
v19 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v20 = v19 >> 12;
v21 = 224 | v20;
return v21;
label11:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 2;
v22 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v23 = v22 >> 6;
v24 = v23 & 63;
v25 = 128 | v24;
return v25;
label12:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 0;
v26 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v27 = v26 >> 18;
v28 = 240 | v27;
return v28;
label13:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 4;
v29 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v30 = v29 >> 12;
v31 = v30 & 63;
v32 = 128 | v31;
return v32;
label14:
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st> = 5;
v33 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v34 = v33 >> 6;
v35 = v34 & 63;
v36 = 128 | v35;
return v36;
label15:
v37 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
v38 = staticinvoke <org.wildfly.common.Assert: java.lang.IllegalStateException impossibleSwitchCase(int)>(v37);
throw v38;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
java.lang.IllegalStateException v31;
org.wildfly.common.iteration.CodePointIterator v4;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
boolean v1, v6;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v5, v7, v8, v9;
java.util.NoSuchElementException v2;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
tableswitch(v3)
{
case 0: goto label02;
case 1: goto label09;
case 2: goto label10;
case 3: goto label11;
case 4: goto label12;
case 5: goto label13;
case 6: goto label11;
default: goto label14;
};
label02:
v4 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.CodePointIterator: int peekPrevious()>();
if v5 != 0 goto label03;
v6 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: boolean escapeNul>;
if v6 == 0 goto label04;
label03:
if v5 >= 128 goto label05;
label04:
return v5;
label05:
if v5 >= 2048 goto label06;
v7 = v5 & 63;
v8 = 128 | v7;
return v8;
label06:
if v5 >= 65536 goto label07;
v9 = v5 & 63;
v10 = 128 | v9;
return v10;
label07:
if v5 >= 1114112 goto label08;
v11 = v5 & 63;
v12 = 128 | v11;
return v12;
label08:
return 189;
label09:
v13 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v14 = v13 >> 6;
v15 = 192 | v14;
return v15;
label10:
v16 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v17 = v16 >> 12;
v18 = 224 | v17;
return v18;
label11:
v19 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v20 = v19 >> 6;
v21 = v20 & 63;
v22 = 128 | v21;
return v22;
label12:
v23 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v24 = v23 >> 18;
v25 = 240 | v24;
return v25;
label13:
v26 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int cp>;
v27 = v26 >> 12;
v28 = v27 & 63;
v29 = 128 | v28;
return v29;
label14:
v30 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
v31 = staticinvoke <org.wildfly.common.Assert: java.lang.IllegalStateException impossibleSwitchCase(int)>(v30);
throw v31;
}
public org.wildfly.common.bytes.ByteStringBuilder appendTo(org.wildfly.common.bytes.ByteStringBuilder)
{
long v5, v8;
org.wildfly.common.iteration.CodePointIterator v4;
int v2, v3, v6, v7;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
org.wildfly.common.bytes.ByteStringBuilder v1;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 := @parameter0: org.wildfly.common.bytes.ByteStringBuilder;
v2 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: int st>;
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<org.wildfly.common.bytes.ByteStringBuilder: int length()>();
v4 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v1.<org.wildfly.common.bytes.ByteStringBuilder: org.wildfly.common.bytes.ByteStringBuilder appendUtf8(org.wildfly.common.iteration.CodePointIterator)>(v4);
v5 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset>;
v6 = virtualinvoke v1.<org.wildfly.common.bytes.ByteStringBuilder: int length()>();
v7 = v6 - v3;
v8 = v5 + v7;
v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset> = v8;
goto label2;
label1:
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: org.wildfly.common.bytes.ByteStringBuilder appendTo(org.wildfly.common.bytes.ByteStringBuilder)>(v1);
label2:
return v1;
}
public long getIndex()
{
long v1;
org.wildfly.common.iteration.Utf8EncodingByteIterator v0;
v0 := @this: org.wildfly.common.iteration.Utf8EncodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Utf8EncodingByteIterator: long offset>;
return v1;
}
}