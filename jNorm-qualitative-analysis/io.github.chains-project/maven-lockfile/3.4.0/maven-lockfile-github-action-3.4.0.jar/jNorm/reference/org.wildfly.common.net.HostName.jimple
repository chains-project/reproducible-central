public final class org.wildfly.common.net.HostName extends java.lang.Object
{
private static final java.lang.Object lock;
private static volatile java.lang.String hostName;
private static volatile java.lang.String qualifiedHostName;
private static volatile java.lang.String nodeName;
private void <init>()
{
org.wildfly.common.net.HostName v0;
v0 := @this: org.wildfly.common.net.HostName;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.net.InetAddress getLocalHost() throws java.net.UnknownHostException
{
java.net.InetAddress v0;
java.lang.ArrayIndexOutOfBoundsException v1;
label1:
v0 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();
label2:
goto label4;
label3:
v1 := @caughtexception;
v0 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(null);
label4:
return v0;
catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
}
public static java.lang.String getHostName()
{
java.lang.String v0;
v0 = <org.wildfly.common.net.HostName: java.lang.String hostName>;
return v0;
}
public static java.lang.String getQualifiedHostName()
{
java.lang.String v0;
v0 = <org.wildfly.common.net.HostName: java.lang.String qualifiedHostName>;
return v0;
}
public static java.lang.String getNodeName()
{
java.lang.String v0;
v0 = <org.wildfly.common.net.HostName: java.lang.String nodeName>;
return v0;
}
public static void setQualifiedHostName(java.lang.String)
{
java.lang.Throwable v5;
int v2, v3;
java.lang.Object v1;
java.lang.String v0, v4;
v0 := @parameter0: java.lang.String;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("qualifiedHostName", v0);
v1 = <org.wildfly.common.net.HostName: java.lang.Object lock>;
entermonitor v1;
label1:
<org.wildfly.common.net.HostName: java.lang.String qualifiedHostName> = v0;
v2 = virtualinvoke v0.<java.lang.String: int indexOf(int)>(46);
v3 = (int) -1;
if v2 != v3 goto label2;
v4 = v0;
goto label3;
label2:
v4 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v2);
label3:
<org.wildfly.common.net.HostName: java.lang.String hostName> = v4;
exitmonitor v1;
label4:
goto label6;
label5:
v5 := @caughtexception;
exitmonitor v1;
throw v5;
label6:
return;
catch java.lang.Throwable from label1 to label4 with label5;
}
public static void setNodeName(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("nodeName", v0);
<org.wildfly.common.net.HostName: java.lang.String nodeName> = v0;
return;
}
static void <clinit>()
{
org.wildfly.common.net.GetHostInfoAction v1;
java.lang.Object v0, v2;
java.lang.String v3, v4, v5;
v0 = new java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
<org.wildfly.common.net.HostName: java.lang.Object lock> = v0;
v1 = new org.wildfly.common.net.GetHostInfoAction;
specialinvoke v1.<org.wildfly.common.net.GetHostInfoAction: void <init>()>();
v2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v1);
v3 = v2[0];
<org.wildfly.common.net.HostName: java.lang.String hostName> = v3;
v4 = v2[1];
<org.wildfly.common.net.HostName: java.lang.String qualifiedHostName> = v4;
v5 = v2[2];
<org.wildfly.common.net.HostName: java.lang.String nodeName> = v5;
return;
}
}