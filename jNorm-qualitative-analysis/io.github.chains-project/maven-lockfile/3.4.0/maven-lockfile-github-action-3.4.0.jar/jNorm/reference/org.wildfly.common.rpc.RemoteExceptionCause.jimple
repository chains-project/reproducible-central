public final class org.wildfly.common.rpc.RemoteExceptionCause extends java.lang.Throwable
{
private static final long serialVersionUID;
private static final java.lang.ClassValue fieldGetterValue;
private static final java.lang.StackTraceElement[] EMPTY_STACK;
private final java.lang.String exceptionClassName;
private final java.util.Map fields;
private transient java.lang.String toString;
private static final int ST_NULL;
private static final int ST_NEW_STRING;
private static final int ST_NEW_STACK_ELEMENT_V8;
private static final int ST_NEW_STACK_ELEMENT_V9;
private static final int ST_NEW_EXCEPTION_CAUSE;
private static final int ST_INT8;
private static final int ST_INT16;
private static final int ST_INT32;
private static final int ST_INT_MINI;
private static final int ST_BACKREF_FAR;
private static final int ST_BACKREF_NEAR;
private static final java.lang.String[] NO_STRINGS;
private static final org.wildfly.common.rpc.RemoteExceptionCause[] NO_REMOTE_EXCEPTION_CAUSES;
static final boolean $assertionsDisabled;
void <init>(java.lang.String, org.wildfly.common.rpc.RemoteExceptionCause, java.lang.String, java.util.Map, boolean)
{
org.wildfly.common._private.CommonMessages v13;
java.util.Map v16, v22, v4, v9;
java.lang.String v1, v3;
boolean v15, v21, v5, v8;
java.util.Iterator v7;
java.util.Set v6;
org.wildfly.common.rpc.RemoteExceptionCause v0, v2;
java.lang.IllegalArgumentException v14;
java.util.TreeMap v17;
java.lang.Object v10, v11, v12, v18, v19, v20;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.wildfly.common.rpc.RemoteExceptionCause;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.util.Map;
v5 := @parameter4: boolean;
specialinvoke v0.<java.lang.Throwable: void <init>(java.lang.String)>(v1);
if v2 == null goto label1;
virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Throwable initCause(java.lang.Throwable)>(v2);
label1:
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("exceptionClassName", v3);
v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String exceptionClassName> = v3;
if v5 == 0 goto label7;
v6 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 != 0 goto label2;
v9 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields> = v9;
goto label8;
label2:
v10 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
if v11 == null goto label3;
if v12 != null goto label4;
label3:
v13 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v14 = interfaceinvoke v13.<org.wildfly.common._private.CommonMessages: java.lang.IllegalArgumentException cannotContainNullFieldNameOrValue()>();
throw v14;
label4:
v15 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v15 != 0 goto label5;
v16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(v11, v12);
v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields> = v16;
goto label8;
label5:
v17 = new java.util.TreeMap;
specialinvoke v17.<java.util.TreeMap: void <init>()>();
interfaceinvoke v17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v12);
label6:
v18 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v19 = interfaceinvoke v18.<java.util.Map$Entry: java.lang.Object getKey()>();
v20 = interfaceinvoke v18.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v19, v20);
v21 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v21 != 0 goto label6;
v22 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v17);
v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields> = v22;
goto label8;
label7:
v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields> = v4;
label8:
return;
}
public void <init>(java.lang.String, java.lang.String)
{
java.util.Map v3;
org.wildfly.common.rpc.RemoteExceptionCause v0;
java.lang.String v1, v2;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,java.lang.String,java.util.Map,boolean)>(v1, null, v2, v3, 0);
return;
}
public void <init>(java.lang.String, org.wildfly.common.rpc.RemoteExceptionCause, java.lang.String)
{
java.util.Map v4;
org.wildfly.common.rpc.RemoteExceptionCause v0, v2;
java.lang.String v1, v3;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.wildfly.common.rpc.RemoteExceptionCause;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,java.lang.String,java.util.Map,boolean)>(v1, v2, v3, v4, 0);
return;
}
public void <init>(java.lang.String, java.lang.String, java.util.Map)
{
java.util.Map v3;
org.wildfly.common.rpc.RemoteExceptionCause v0;
java.lang.String v1, v2;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,java.lang.String,java.util.Map,boolean)>(v1, null, v2, v3, 1);
return;
}
public void <init>(java.lang.String, org.wildfly.common.rpc.RemoteExceptionCause, java.lang.String, java.util.Map)
{
java.util.Map v4;
org.wildfly.common.rpc.RemoteExceptionCause v0, v2;
java.lang.String v1, v3;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.wildfly.common.rpc.RemoteExceptionCause;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.util.Map;
specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,java.lang.String,java.util.Map,boolean)>(v1, v2, v3, v4, 1);
return;
}
public static org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable)
{
java.lang.Throwable v0;
org.wildfly.common.rpc.RemoteExceptionCause v2;
java.util.IdentityHashMap v1;
v0 := @parameter0: java.lang.Throwable;
v1 = new java.util.IdentityHashMap;
specialinvoke v1.<java.util.IdentityHashMap: void <init>()>();
v2 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable,java.util.IdentityHashMap)>(v0, v1);
return v2;
}
private static org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable, java.util.IdentityHashMap)
{
java.lang.Throwable v0, v13, v18;
int v16, v17;
java.lang.String v5, v7;
boolean v2;
java.util.IdentityHashMap v1;
org.wildfly.common.rpc.RemoteExceptionCause v14, v19, v4;
java.lang.StackTraceElement[] v12;
java.lang.ClassValue v8;
java.lang.Throwable[] v15;
java.lang.Class v6, v9;
java.lang.Object v10, v11, v3;
v0 := @parameter0: java.lang.Throwable;
v1 := @parameter1: java.util.IdentityHashMap;
if v0 != null goto label1;
return null;
label1:
v2 = v0 instanceof org.wildfly.common.rpc.RemoteExceptionCause;
if v2 == 0 goto label2;
return v0;
label2:
v3 = virtualinvoke v1.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label3;
return v3;
label3:
v4 = new org.wildfly.common.rpc.RemoteExceptionCause;
v5 = virtualinvoke v0.<java.lang.Throwable: java.lang.String getMessage()>();
v6 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.ClassValue fieldGetterValue>;
v9 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v10 = virtualinvoke v8.<java.lang.ClassValue: java.lang.Object get(java.lang.Class)>(v9);
v11 = interfaceinvoke v10.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v0);
specialinvoke v4.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,java.lang.String,java.util.Map)>(v5, v7, v11);
v12 = virtualinvoke v0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();
virtualinvoke v4.<org.wildfly.common.rpc.RemoteExceptionCause: void setStackTrace(java.lang.StackTraceElement[])>(v12);
virtualinvoke v1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v4);
v13 = virtualinvoke v0.<java.lang.Throwable: java.lang.Throwable getCause()>();
if v13 == null goto label4;
v14 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable,java.util.IdentityHashMap)>(v13, v1);
virtualinvoke v4.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Throwable initCause(java.lang.Throwable)>(v14);
label4:
v15 = virtualinvoke v0.<java.lang.Throwable: java.lang.Throwable[] getSuppressed()>();
v16 = lengthof v15;
v17 = 0;
label5:
if v17 >= v16 goto label6;
v18 = v15[v17];
v19 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable,java.util.IdentityHashMap)>(v18, v1);
virtualinvoke v4.<org.wildfly.common.rpc.RemoteExceptionCause: void addSuppressed(java.lang.Throwable)>(v19);
v17 = v17 + 1;
goto label5;
label6:
return v4;
}
public java.lang.Throwable toPlainThrowable()
{
java.lang.Throwable v1, v8;
org.wildfly.common.rpc.RemoteExceptionCause v0, v3;
java.lang.StackTraceElement[] v4;
java.lang.Throwable[] v5;
int v6, v7;
java.lang.String v2;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 = new java.lang.Throwable;
v2 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String toString()>();
v3 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause getCause()>();
specialinvoke v1.<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>(v2, v3);
v4 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.StackTraceElement[] getStackTrace()>();
virtualinvoke v1.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(v4);
v5 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Throwable[] getSuppressed()>();
v6 = lengthof v5;
v7 = 0;
label1:
if v7 >= v6 goto label2;
v8 = v5[v7];
virtualinvoke v1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(v8);
v7 = v7 + 1;
goto label1;
label2:
return v1;
}
public java.lang.String getExceptionClassName()
{
org.wildfly.common.rpc.RemoteExceptionCause v0;
java.lang.String v1;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String exceptionClassName>;
return v1;
}
public java.util.Set getFieldNames()
{
java.util.Set v2;
org.wildfly.common.rpc.RemoteExceptionCause v0;
java.util.Map v1;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
public java.lang.String getFieldValue(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
org.wildfly.common.rpc.RemoteExceptionCause v0;
java.lang.String v1;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.lang.String;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("fieldName", v1);
v2 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.lang.String toString()
{
org.wildfly.common._private.CommonMessages v4, v7;
java.util.Map v9;
java.lang.String v1, v2, v22, v5, v6, v8;
boolean v12, v21;
java.util.Iterator v11;
java.util.Set v10;
org.wildfly.common.rpc.RemoteExceptionCause v0;
java.lang.Object v13, v17, v20;
java.lang.StringBuilder v14, v15, v16, v18, v19, v3;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String toString>;
if v1 != null goto label5;
v2 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String getMessage()>();
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
if v2 != null goto label1;
v4 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v5 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String exceptionClassName>;
v6 = interfaceinvoke v4.<org.wildfly.common._private.CommonMessages: java.lang.String remoteException(java.lang.String)>(v5);
goto label2;
label1:
v7 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v8 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String exceptionClassName>;
v6 = interfaceinvoke v7.<org.wildfly.common._private.CommonMessages: java.lang.String remoteException(java.lang.String,java.lang.String)>(v8, v2);
label2:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
v9 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields>;
v10 = interfaceinvoke v9.<java.util.Map: java.util.Set entrySet()>();
v11 = interfaceinvoke v10.<java.util.Set: java.util.Iterator iterator()>();
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label4;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\tPublic fields:");
label3:
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
v15 = virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);
v16 = virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);
v17 = interfaceinvoke v13.<java.util.Map$Entry: java.lang.Object getKey()>();
v18 = virtualinvoke v16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v17);
v19 = virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
v20 = interfaceinvoke v13.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v20);
v21 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v21 != 0 goto label3;
label4:
v22 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String toString> = v22;
return v22;
label5:
return v1;
}
public void writeToStream(java.io.DataOutput) throws java.io.IOException
{
java.io.DataOutput v1;
java.util.HashMap v3;
org.wildfly.common.rpc.RemoteExceptionCause v0;
org.wildfly.common.rpc.IdentityIntMap v2;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("output", v1);
v2 = new org.wildfly.common.rpc.IdentityIntMap;
specialinvoke v2.<org.wildfly.common.rpc.IdentityIntMap: void <init>()>();
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>()>();
specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeToStream(java.io.DataOutput,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v2, v3, 0);
return;
}
private static int readPackedInt(java.io.DataInput) throws java.io.IOException
{
java.io.IOException v9;
short v6;
byte v5;
org.wildfly.common._private.CommonMessages v8;
int v1, v2, v3, v4, v7;
java.io.DataInput v0;
v0 := @parameter0: java.io.DataInput;
v1 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
v2 = v1 & 224;
if v2 != 32 goto label1;
v3 = v1 << 27;
v4 = v3 >> 27;
return v4;
label1:
if v1 != 5 goto label2;
v5 = interfaceinvoke v0.<java.io.DataInput: byte readByte()>();
return v5;
label2:
if v1 != 6 goto label3;
v6 = interfaceinvoke v0.<java.io.DataInput: short readShort()>();
return v6;
label3:
if v1 != 7 goto label4;
v7 = interfaceinvoke v0.<java.io.DataInput: int readInt()>();
return v7;
label4:
v8 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v9 = interfaceinvoke v8.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v9;
}
private static void writePackedInt(java.io.DataOutput, int) throws java.io.IOException
{
java.io.DataOutput v0;
int v1, v2, v3, v4, v5, v6, v7;
v0 := @parameter0: java.io.DataOutput;
v1 := @parameter1: int;
v2 = (int) -16;
if v2 > v1 goto label1;
if v1 >= 16 goto label1;
v3 = v1 & 31;
v4 = 32 | v3;
interfaceinvoke v0.<java.io.DataOutput: void write(int)>(v4);
goto label4;
label1:
v5 = (int) -128;
if v5 > v1 goto label2;
if v1 >= 128 goto label2;
interfaceinvoke v0.<java.io.DataOutput: void write(int)>(5);
interfaceinvoke v0.<java.io.DataOutput: void write(int)>(v1);
goto label4;
label2:
v6 = (int) -32768;
if v6 > v1 goto label3;
v7 = (int) 32768;
if v1 >= v7 goto label3;
interfaceinvoke v0.<java.io.DataOutput: void write(int)>(6);
interfaceinvoke v0.<java.io.DataOutput: void writeShort(int)>(v1);
goto label4;
label3:
interfaceinvoke v0.<java.io.DataOutput: void write(int)>(7);
interfaceinvoke v0.<java.io.DataOutput: void writeInt(int)>(v1);
label4:
return;
}
private int writeToStream(java.io.DataOutput, org.wildfly.common.rpc.IdentityIntMap, java.util.HashMap, int) throws java.io.IOException
{
java.lang.Throwable v20;
java.util.HashMap v3;
java.util.Map v12;
int v11, v13, v15, v17, v18, v19, v4, v5, v7, v9;
java.lang.String v6, v8;
java.io.DataOutput v1;
org.wildfly.common.rpc.RemoteExceptionCause v0, v14;
org.wildfly.common.rpc.IdentityIntMap v2;
java.lang.StackTraceElement[] v10;
java.lang.Throwable[] v16;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: org.wildfly.common.rpc.IdentityIntMap;
v3 := @parameter2: java.util.HashMap;
v4 := @parameter3: int;
v5 = v4 + 1;
virtualinvoke v2.<org.wildfly.common.rpc.IdentityIntMap: void put(java.lang.Object,int)>(v0, v4);
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(4);
v6 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String exceptionClassName>;
v7 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v6, v2, v3, v5);
v8 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String getMessage()>();
v9 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v8, v2, v3, v7);
v10 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.StackTraceElement[] getStackTrace()>();
v11 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeStackTrace(java.io.DataOutput,java.lang.StackTraceElement[],org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v10, v2, v3, v9);
v12 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields>;
v13 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeFields(java.io.DataOutput,java.util.Map,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v12, v2, v3, v11);
v14 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause getCause()>();
v15 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeThrowable(java.io.DataOutput,java.lang.Throwable,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v14, v2, v3, v13);
v16 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Throwable[] getSuppressed()>();
v17 = lengthof v16;
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: void writePackedInt(java.io.DataOutput,int)>(v1, v17);
v18 = lengthof v16;
v19 = 0;
label1:
if v19 >= v18 goto label2;
v20 = v16[v19];
v15 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeThrowable(java.io.DataOutput,java.lang.Throwable,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v20, v2, v3, v15);
v19 = v19 + 1;
goto label1;
label2:
return v15;
}
private int writeFields(java.io.DataOutput, java.util.Map, org.wildfly.common.rpc.IdentityIntMap, java.util.HashMap, int) throws java.io.IOException
{
java.io.DataOutput v1;
java.util.Iterator v8;
java.util.Set v7;
java.util.HashMap v4;
org.wildfly.common.rpc.RemoteExceptionCause v0;
org.wildfly.common.rpc.IdentityIntMap v3;
java.util.Map v2;
int v12, v5, v6;
java.lang.Object v10, v11, v13;
boolean v9;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: org.wildfly.common.rpc.IdentityIntMap;
v4 := @parameter3: java.util.HashMap;
v5 := @parameter4: int;
v6 = interfaceinvoke v2.<java.util.Map: int size()>();
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: void writePackedInt(java.io.DataOutput,int)>(v1, v6);
v7 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label2;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v11, v3, v4, v5);
v13 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
v5 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v13, v3, v4, v12);
goto label1;
label2:
return v5;
}
private int writeStackTrace(java.io.DataOutput, java.lang.StackTraceElement[], org.wildfly.common.rpc.IdentityIntMap, java.util.HashMap, int) throws java.io.IOException
{
java.io.DataOutput v1;
java.util.HashMap v4;
org.wildfly.common.rpc.RemoteExceptionCause v0;
org.wildfly.common.rpc.IdentityIntMap v3;
java.lang.StackTraceElement[] v2;
int v5, v6, v7, v8;
java.lang.StackTraceElement v9;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: java.lang.StackTraceElement[];
v3 := @parameter2: org.wildfly.common.rpc.IdentityIntMap;
v4 := @parameter3: java.util.HashMap;
v5 := @parameter4: int;
v6 = lengthof v2;
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: void writePackedInt(java.io.DataOutput,int)>(v1, v6);
v7 = lengthof v2;
v8 = 0;
label1:
if v8 >= v7 goto label2;
v9 = v2[v8];
v5 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeStackElement(java.io.DataOutput,java.lang.StackTraceElement,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v9, v3, v4, v5);
v8 = v8 + 1;
goto label1;
label2:
return v5;
}
private int writeStackElement(java.io.DataOutput, java.lang.StackTraceElement, org.wildfly.common.rpc.IdentityIntMap, java.util.HashMap, int) throws java.io.IOException
{
java.util.HashMap v4;
java.lang.AssertionError v20;
int v11, v13, v15, v16, v17, v18, v21, v22, v5, v6, v7, v8, v9;
java.lang.StackTraceElement v2;
java.lang.String v10, v12, v14;
boolean v19;
java.io.DataOutput v1;
org.wildfly.common.rpc.RemoteExceptionCause v0;
org.wildfly.common.rpc.IdentityIntMap v3;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: java.lang.StackTraceElement;
v3 := @parameter2: org.wildfly.common.rpc.IdentityIntMap;
v4 := @parameter3: java.util.HashMap;
v5 := @parameter4: int;
v6 = (int) -1;
v7 = virtualinvoke v3.<org.wildfly.common.rpc.IdentityIntMap: int get(java.lang.Object,int)>(v2, v6);
v8 = v5 - v7;
v9 = (int) -1;
if v7 == v9 goto label1;
if v8 <= 16383 goto label2;
label1:
interfaceinvoke v1.<java.io.DataOutput: void write(int)>(2);
v10 = virtualinvoke v2.<java.lang.StackTraceElement: java.lang.String getClassName()>();
v11 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v10, v3, v4, v5);
v12 = virtualinvoke v2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();
v13 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v12, v3, v4, v11);
v14 = virtualinvoke v2.<java.lang.StackTraceElement: java.lang.String getFileName()>();
v15 = specialinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: int writeString(java.io.DataOutput,java.lang.String,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v14, v3, v4, v13);
v16 = virtualinvoke v2.<java.lang.StackTraceElement: int getLineNumber()>();
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: void writePackedInt(java.io.DataOutput,int)>(v1, v16);
v17 = v15 + 1;
virtualinvoke v3.<org.wildfly.common.rpc.IdentityIntMap: void put(java.lang.Object,int)>(v2, v15);
return v17;
label2:
if v8 >= 127 goto label3;
v18 = 128 | v8;
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v18);
goto label5;
label3:
v19 = <org.wildfly.common.rpc.RemoteExceptionCause: boolean $assertionsDisabled>;
if v19 != 0 goto label4;
if v8 <= 16383 goto label4;
v20 = new java.lang.AssertionError;
specialinvoke v20.<java.lang.AssertionError: void <init>()>();
throw v20;
label4:
v21 = v8 >> 8;
v22 = 64 | v21;
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v22);
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v8);
label5:
return v5;
}
private int writeThrowable(java.io.DataOutput, java.lang.Throwable, org.wildfly.common.rpc.IdentityIntMap, java.util.HashMap, int) throws java.io.IOException
{
java.lang.Throwable v2;
java.util.HashMap v4;
java.lang.AssertionError v14;
int v11, v12, v15, v16, v5, v6, v7, v8, v9;
boolean v10, v13;
java.io.DataOutput v1;
org.wildfly.common.rpc.RemoteExceptionCause v0;
org.wildfly.common.rpc.IdentityIntMap v3;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: org.wildfly.common.rpc.IdentityIntMap;
v4 := @parameter3: java.util.HashMap;
v5 := @parameter4: int;
if v2 != null goto label1;
interfaceinvoke v1.<java.io.DataOutput: void write(int)>(0);
return v5;
label1:
v6 = (int) -1;
v7 = virtualinvoke v3.<org.wildfly.common.rpc.IdentityIntMap: int get(java.lang.Object,int)>(v2, v6);
v8 = v5 - v7;
v9 = (int) -1;
if v7 == v9 goto label2;
if v8 < 16384 goto label4;
label2:
v10 = v2 instanceof org.wildfly.common.rpc.RemoteExceptionCause;
if v10 != 0 goto label3;
virtualinvoke v3.<org.wildfly.common.rpc.IdentityIntMap: void put(java.lang.Object,int)>(v2, v5);
v2 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable)>(v2);
label3:
v11 = specialinvoke v2.<org.wildfly.common.rpc.RemoteExceptionCause: int writeToStream(java.io.DataOutput,org.wildfly.common.rpc.IdentityIntMap,java.util.HashMap,int)>(v1, v3, v4, v5);
return v11;
label4:
if v8 >= 127 goto label5;
v12 = 128 | v8;
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v12);
goto label7;
label5:
v13 = <org.wildfly.common.rpc.RemoteExceptionCause: boolean $assertionsDisabled>;
if v13 != 0 goto label6;
if v8 <= 16383 goto label6;
v14 = new java.lang.AssertionError;
specialinvoke v14.<java.lang.AssertionError: void <init>()>();
throw v14;
label6:
v15 = v8 >> 8;
v16 = 64 | v15;
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v16);
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v8);
label7:
return v5;
}
private int writeString(java.io.DataOutput, java.lang.String, org.wildfly.common.rpc.IdentityIntMap, java.util.HashMap, int) throws java.io.IOException
{
java.util.HashMap v4;
java.lang.AssertionError v15;
java.util.function.Function v6;
int v10, v11, v12, v13, v16, v17, v5, v8, v9;
java.lang.String v2;
boolean v14;
java.io.DataOutput v1;
org.wildfly.common.rpc.RemoteExceptionCause v0;
org.wildfly.common.rpc.IdentityIntMap v3;
java.lang.Object v7;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.wildfly.common.rpc.IdentityIntMap;
v4 := @parameter3: java.util.HashMap;
v5 := @parameter4: int;
if v2 != null goto label1;
interfaceinvoke v1.<java.io.DataOutput: void write(int)>(0);
return v5;
label1:
v6 = staticinvoke <java.util.function.Function: java.util.function.Function identity()>();
v7 = virtualinvoke v4.<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v2, v6);
v8 = (int) -1;
v9 = virtualinvoke v3.<org.wildfly.common.rpc.IdentityIntMap: int get(java.lang.Object,int)>(v7, v8);
v10 = v5 - v9;
v11 = (int) -1;
if v9 == v11 goto label2;
if v10 <= 16383 goto label3;
label2:
virtualinvoke v3.<org.wildfly.common.rpc.IdentityIntMap: void put(java.lang.Object,int)>(v7, v5);
interfaceinvoke v1.<java.io.DataOutput: void write(int)>(1);
interfaceinvoke v1.<java.io.DataOutput: void writeUTF(java.lang.String)>(v7);
v12 = v5 + 1;
return v12;
label3:
if v10 >= 127 goto label4;
v13 = 128 | v10;
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v13);
goto label6;
label4:
v14 = <org.wildfly.common.rpc.RemoteExceptionCause: boolean $assertionsDisabled>;
if v14 != 0 goto label5;
if v10 <= 16383 goto label5;
v15 = new java.lang.AssertionError;
specialinvoke v15.<java.lang.AssertionError: void <init>()>();
throw v15;
label5:
v16 = v10 >> 8;
v17 = 64 | v16;
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v17);
interfaceinvoke v1.<java.io.DataOutput: void writeByte(int)>(v10);
label6:
return v5;
}
public static org.wildfly.common.rpc.RemoteExceptionCause readFromStream(java.io.DataInput) throws java.io.IOException
{
java.io.DataInput v0;
java.lang.Object v2;
java.util.ArrayList v1;
v0 := @parameter0: java.io.DataInput;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Lorg/wildfly/common/rpc/RemoteExceptionCause;", v1, 0);
return v2;
}
private static java.lang.Object readObject(java.io.DataInput, java.lang.Class, java.util.ArrayList, boolean) throws java.io.IOException
{
java.util.Map v21;
java.util.ArrayList v2;
java.lang.StackTraceElement v36, v44;
java.lang.String v9;
java.io.IOException v12, v35, v43, v54, v6, v61, v69, v76, v78, v8;
org.wildfly.common.rpc.RemoteExceptionCause v28;
boolean v3, v58, v73;
java.lang.StackTraceElement[] v17;
java.io.DataInput v0;
java.util.HashMap v24;
org.wildfly.common._private.CommonMessages v11, v34, v42, v5, v53, v60, v68, v7, v75, v77;
int v13, v16, v18, v20, v25, v30, v31, v4, v40, v48, v50, v51, v52, v55, v56, v62, v63, v64, v65, v66, v67, v70, v71;
java.lang.Class v1;
java.lang.Object v10, v14, v15, v19, v22, v23, v26, v27, v29, v32, v33, v37, v38, v39, v41, v45, v46, v47, v49, v57, v59, v72, v74;
v0 := @parameter0: java.io.DataInput;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.util.ArrayList;
v3 := @parameter3: boolean;
v4 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
if v4 != 0 goto label02;
if v3 != 0 goto label01;
v5 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v6 = interfaceinvoke v5.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v6;
label01:
return null;
label02:
if v4 != 1 goto label04;
if v1 == class "Ljava/lang/String;" goto label03;
v7 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v8 = interfaceinvoke v7.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v8;
label03:
v9 = interfaceinvoke v0.<java.io.DataInput: java.lang.String readUTF()>();
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v9);
v10 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v9);
return v10;
label04:
if v4 != 4 goto label15;
if v1 == class "Lorg/wildfly/common/rpc/RemoteExceptionCause;" goto label05;
v11 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v12 = interfaceinvoke v11.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v12;
label05:
v13 = virtualinvoke v2.<java.util.ArrayList: int size()>();
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);
v14 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v15 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 1);
v16 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: int readPackedInt(java.io.DataInput)>(v0);
if v16 != 0 goto label06;
v17 = <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.StackTraceElement[] EMPTY_STACK>;
goto label08;
label06:
v17 = newarray (java.lang.StackTraceElement)[v16];
v18 = 0;
label07:
if v18 >= v16 goto label08;
v19 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/StackTraceElement;", v2, 0);
v17[v18] = v19;
v18 = v18 + 1;
goto label07;
label08:
v20 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: int readPackedInt(java.io.DataInput)>(v0);
if v20 != 0 goto label09;
v21 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label12;
label09:
if v20 != 1 goto label10;
v22 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v23 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v21 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(v22, v23);
goto label12;
label10:
v24 = new java.util.HashMap;
specialinvoke v24.<java.util.HashMap: void <init>(int)>(v20);
v21 = v24;
v25 = 0;
label11:
if v25 >= v20 goto label12;
v26 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v27 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
interfaceinvoke v24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v26, v27);
v25 = v25 + 1;
goto label11;
label12:
v28 = new org.wildfly.common.rpc.RemoteExceptionCause;
specialinvoke v28.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,java.lang.String,java.util.Map,boolean)>(v15, null, v14, v21, 0);
virtualinvoke v2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(v13, v28);
v29 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Lorg/wildfly/common/rpc/RemoteExceptionCause;", v2, 1);
virtualinvoke v28.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Throwable initCause(java.lang.Throwable)>(v29);
v30 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: int readPackedInt(java.io.DataInput)>(v0);
virtualinvoke v28.<org.wildfly.common.rpc.RemoteExceptionCause: void setStackTrace(java.lang.StackTraceElement[])>(v17);
v31 = 0;
label13:
if v31 >= v30 goto label14;
v32 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Lorg/wildfly/common/rpc/RemoteExceptionCause;", v2, 0);
virtualinvoke v28.<org.wildfly.common.rpc.RemoteExceptionCause: void addSuppressed(java.lang.Throwable)>(v32);
v31 = v31 + 1;
goto label13;
label14:
v33 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v28);
return v33;
label15:
if v4 != 2 goto label17;
if v1 == class "Ljava/lang/StackTraceElement;" goto label16;
v34 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v35 = interfaceinvoke v34.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v35;
label16:
v36 = new java.lang.StackTraceElement;
v37 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v38 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v39 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 1);
v40 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: int readPackedInt(java.io.DataInput)>(v0);
specialinvoke v36.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>(v37, v38, v39, v40);
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v36);
v41 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v36);
return v41;
label17:
if v4 != 3 goto label19;
if v1 == class "Ljava/lang/StackTraceElement;" goto label18;
v42 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v43 = interfaceinvoke v42.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v43;
label18:
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 1);
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 1);
staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 1);
v44 = new java.lang.StackTraceElement;
v45 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v46 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 0);
v47 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Object readObject(java.io.DataInput,java.lang.Class,java.util.ArrayList,boolean)>(v0, class "Ljava/lang/String;", v2, 1);
v48 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: int readPackedInt(java.io.DataInput)>(v0);
specialinvoke v44.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>(v45, v46, v47, v48);
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v44);
v49 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v44);
return v49;
label19:
v50 = v4 & 128;
if v50 == 0 goto label22;
v51 = v4 & 127;
v52 = virtualinvoke v2.<java.util.ArrayList: int size()>();
if v51 <= v52 goto label20;
v53 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v54 = interfaceinvoke v53.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v54;
label20:
v55 = virtualinvoke v2.<java.util.ArrayList: int size()>();
v56 = v55 - v51;
v57 = virtualinvoke v2.<java.util.ArrayList: java.lang.Object get(int)>(v56);
v58 = virtualinvoke v1.<java.lang.Class: boolean isInstance(java.lang.Object)>(v57);
if v58 == 0 goto label21;
v59 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v57);
return v59;
label21:
v60 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v61 = interfaceinvoke v60.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v61;
label22:
v62 = v4 & 64;
if v62 == 0 goto label25;
v63 = interfaceinvoke v0.<java.io.DataInput: int readUnsignedByte()>();
v64 = v4 & 63;
v65 = v64 << 8;
v66 = v65 | v63;
v67 = virtualinvoke v2.<java.util.ArrayList: int size()>();
if v66 <= v67 goto label23;
v68 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v69 = interfaceinvoke v68.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v69;
label23:
v70 = virtualinvoke v2.<java.util.ArrayList: int size()>();
v71 = v70 - v66;
v72 = virtualinvoke v2.<java.util.ArrayList: java.lang.Object get(int)>(v71);
v73 = virtualinvoke v1.<java.lang.Class: boolean isInstance(java.lang.Object)>(v72);
if v73 == 0 goto label24;
v74 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v72);
return v74;
label24:
v75 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v76 = interfaceinvoke v75.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v76;
label25:
v77 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v78 = interfaceinvoke v77.<org.wildfly.common._private.CommonMessages: java.io.IOException corruptedStream()>();
throw v78;
}
java.lang.Object writeReplace()
{
java.lang.Throwable v5;
org.wildfly.common.rpc.RemoteExceptionCause$Serialized v20;
java.lang.String[] v9;
java.util.Map v12, v7;
int v10, v11, v17, v2, v4, v8;
java.lang.String v21, v22;
boolean v15;
java.util.Iterator v14;
java.util.Set v13;
org.wildfly.common.rpc.RemoteExceptionCause v0, v23, v24, v6;
java.lang.StackTraceElement[] v25;
java.lang.Throwable[] v1;
java.lang.Object v16, v18, v19;
org.wildfly.common.rpc.RemoteExceptionCause[] v3;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.Throwable[] getSuppressed()>();
v2 = lengthof v1;
if v2 != 0 goto label1;
v3 = <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause[] NO_REMOTE_EXCEPTION_CAUSES>;
goto label3;
label1:
v3 = newarray (org.wildfly.common.rpc.RemoteExceptionCause)[v2];
v4 = 0;
label2:
if v4 >= v2 goto label3;
v5 = v1[v4];
v6 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable)>(v5);
v3[v4] = v6;
v4 = v4 + 1;
goto label2;
label3:
v7 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields>;
v8 = interfaceinvoke v7.<java.util.Map: int size()>();
if v8 != 0 goto label4;
v9 = <org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String[] NO_STRINGS>;
goto label6;
label4:
v10 = v8 << 1;
v9 = newarray (java.lang.String)[v10];
v11 = 0;
v12 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.util.Map fields>;
v13 = interfaceinvoke v12.<java.util.Map: java.util.Set entrySet()>();
v14 = interfaceinvoke v13.<java.util.Set: java.util.Iterator iterator()>();
label5:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label6;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = v11 + 1;
v18 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getKey()>();
v9[v11] = v18;
v11 = v17 + 1;
v19 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getValue()>();
v9[v17] = v19;
goto label5;
label6:
v20 = new org.wildfly.common.rpc.RemoteExceptionCause$Serialized;
v21 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String getMessage()>();
v22 = v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String exceptionClassName>;
v23 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause getCause()>();
v24 = staticinvoke <org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause of(java.lang.Throwable)>(v23);
v25 = virtualinvoke v0.<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.StackTraceElement[] getStackTrace()>();
specialinvoke v20.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: void <init>(java.lang.String,java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,org.wildfly.common.rpc.RemoteExceptionCause[],java.lang.StackTraceElement[],java.lang.String[])>(v21, v22, v24, v3, v25, v9);
return v20;
}
public org.wildfly.common.rpc.RemoteExceptionCause getCause()
{
java.lang.Throwable v1;
org.wildfly.common.rpc.RemoteExceptionCause v0;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause;
v1 = specialinvoke v0.<java.lang.Throwable: java.lang.Throwable getCause()>();
return v1;
}
static void <clinit>()
{
java.lang.StackTraceElement[] v4;
org.wildfly.common.rpc.RemoteExceptionCause$1 v3;
java.lang.Class v0;
java.lang.String[] v5;
org.wildfly.common.rpc.RemoteExceptionCause[] v6;
boolean v1, v2;
v0 = class "Lorg/wildfly/common/rpc/RemoteExceptionCause;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.wildfly.common.rpc.RemoteExceptionCause: boolean $assertionsDisabled> = v2;
v3 = new org.wildfly.common.rpc.RemoteExceptionCause$1;
specialinvoke v3.<org.wildfly.common.rpc.RemoteExceptionCause$1: void <init>()>();
<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.ClassValue fieldGetterValue> = v3;
v4 = newarray (java.lang.StackTraceElement)[0];
<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.StackTraceElement[] EMPTY_STACK> = v4;
v5 = newarray (java.lang.String)[0];
<org.wildfly.common.rpc.RemoteExceptionCause: java.lang.String[] NO_STRINGS> = v5;
v6 = newarray (org.wildfly.common.rpc.RemoteExceptionCause)[0];
<org.wildfly.common.rpc.RemoteExceptionCause: org.wildfly.common.rpc.RemoteExceptionCause[] NO_REMOTE_EXCEPTION_CAUSES> = v6;
return;
}
}