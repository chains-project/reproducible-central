public class org.yaml.snakeyaml.LoaderOptions extends java.lang.Object
{
private boolean allowDuplicateKeys;
private boolean wrappedToRootException;
private int maxAliasesForCollections;
private boolean allowRecursiveKeys;
private boolean processComments;
private boolean enumCaseSensitive;
private int nestingDepthLimit;
private int codePointLimit;
private org.yaml.snakeyaml.inspector.TagInspector tagInspector;
public void <init>()
{
org.yaml.snakeyaml.LoaderOptions v0;
org.yaml.snakeyaml.inspector.UnTrustedTagInspector v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.LoaderOptions: boolean allowDuplicateKeys> = 1;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean wrappedToRootException> = 0;
v0.<org.yaml.snakeyaml.LoaderOptions: int maxAliasesForCollections> = 50;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean allowRecursiveKeys> = 0;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean processComments> = 0;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean enumCaseSensitive> = 1;
v0.<org.yaml.snakeyaml.LoaderOptions: int nestingDepthLimit> = 50;
v0.<org.yaml.snakeyaml.LoaderOptions: int codePointLimit> = 3145728;
v1 = new org.yaml.snakeyaml.inspector.UnTrustedTagInspector;
specialinvoke v1.<org.yaml.snakeyaml.inspector.UnTrustedTagInspector: void <init>()>();
v0.<org.yaml.snakeyaml.LoaderOptions: org.yaml.snakeyaml.inspector.TagInspector tagInspector> = v1;
return;
}
public final boolean isAllowDuplicateKeys()
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: boolean allowDuplicateKeys>;
return v1;
}
public void setAllowDuplicateKeys(boolean)
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean allowDuplicateKeys> = v1;
return;
}
public final boolean isWrappedToRootException()
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: boolean wrappedToRootException>;
return v1;
}
public void setWrappedToRootException(boolean)
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean wrappedToRootException> = v1;
return;
}
public final int getMaxAliasesForCollections()
{
int v1;
org.yaml.snakeyaml.LoaderOptions v0;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: int maxAliasesForCollections>;
return v1;
}
public void setMaxAliasesForCollections(int)
{
int v1;
org.yaml.snakeyaml.LoaderOptions v0;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: int;
v0.<org.yaml.snakeyaml.LoaderOptions: int maxAliasesForCollections> = v1;
return;
}
public final boolean getAllowRecursiveKeys()
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: boolean allowRecursiveKeys>;
return v1;
}
public void setAllowRecursiveKeys(boolean)
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean allowRecursiveKeys> = v1;
return;
}
public final boolean isProcessComments()
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: boolean processComments>;
return v1;
}
public org.yaml.snakeyaml.LoaderOptions setProcessComments(boolean)
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean processComments> = v1;
return v0;
}
public final boolean isEnumCaseSensitive()
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: boolean enumCaseSensitive>;
return v1;
}
public void setEnumCaseSensitive(boolean)
{
org.yaml.snakeyaml.LoaderOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.LoaderOptions: boolean enumCaseSensitive> = v1;
return;
}
public final int getNestingDepthLimit()
{
int v1;
org.yaml.snakeyaml.LoaderOptions v0;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: int nestingDepthLimit>;
return v1;
}
public void setNestingDepthLimit(int)
{
int v1;
org.yaml.snakeyaml.LoaderOptions v0;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: int;
v0.<org.yaml.snakeyaml.LoaderOptions: int nestingDepthLimit> = v1;
return;
}
public final int getCodePointLimit()
{
int v1;
org.yaml.snakeyaml.LoaderOptions v0;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: int codePointLimit>;
return v1;
}
public void setCodePointLimit(int)
{
int v1;
org.yaml.snakeyaml.LoaderOptions v0;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: int;
v0.<org.yaml.snakeyaml.LoaderOptions: int codePointLimit> = v1;
return;
}
public org.yaml.snakeyaml.inspector.TagInspector getTagInspector()
{
org.yaml.snakeyaml.LoaderOptions v0;
org.yaml.snakeyaml.inspector.TagInspector v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 = v0.<org.yaml.snakeyaml.LoaderOptions: org.yaml.snakeyaml.inspector.TagInspector tagInspector>;
return v1;
}
public void setTagInspector(org.yaml.snakeyaml.inspector.TagInspector)
{
org.yaml.snakeyaml.LoaderOptions v0;
org.yaml.snakeyaml.inspector.TagInspector v1;
v0 := @this: org.yaml.snakeyaml.LoaderOptions;
v1 := @parameter0: org.yaml.snakeyaml.inspector.TagInspector;
v0.<org.yaml.snakeyaml.LoaderOptions: org.yaml.snakeyaml.inspector.TagInspector tagInspector> = v1;
return;
}
}