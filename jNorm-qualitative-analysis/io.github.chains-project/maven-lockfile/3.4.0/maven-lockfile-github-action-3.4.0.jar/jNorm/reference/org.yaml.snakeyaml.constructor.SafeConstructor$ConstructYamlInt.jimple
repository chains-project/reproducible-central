public class org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt extends org.yaml.snakeyaml.constructor.AbstractConstruct
{
final org.yaml.snakeyaml.constructor.SafeConstructor this$0;
public void <init>(org.yaml.snakeyaml.constructor.SafeConstructor)
{
org.yaml.snakeyaml.constructor.SafeConstructor v1;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt v0;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt;
v1 := @parameter0: org.yaml.snakeyaml.constructor.SafeConstructor;
v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt: org.yaml.snakeyaml.constructor.SafeConstructor this$0> = v1;
specialinvoke v0.<org.yaml.snakeyaml.constructor.AbstractConstruct: void <init>()>();
return;
}
public java.lang.Object construct(org.yaml.snakeyaml.nodes.Node)
{
java.lang.Integer v13;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt v0;
org.yaml.snakeyaml.nodes.Node v1;
byte v16, v9;
org.yaml.snakeyaml.constructor.SafeConstructor v2, v31, v34, v36;
boolean v12, v14, v17, v18, v5;
org.yaml.snakeyaml.constructor.ConstructorException v6;
org.yaml.snakeyaml.error.Mark v7, v8;
java.lang.String[] v21;
long v28, v29, v30;
int v19, v20, v22, v23, v24, v25, v26;
java.lang.String v11, v15, v27, v3, v32, v4;
java.lang.Number v33, v35, v37;
char v10;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v3 = virtualinvoke v2.<org.yaml.snakeyaml.constructor.SafeConstructor: java.lang.String constructScalar(org.yaml.snakeyaml.nodes.ScalarNode)>(v1);
v4 = virtualinvoke v3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_", "");
v5 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v5 == 0 goto label01;
v6 = new org.yaml.snakeyaml.constructor.ConstructorException;
v7 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
v8 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v6.<org.yaml.snakeyaml.constructor.ConstructorException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while constructing an int", v7, "found empty value", v8);
throw v6;
label01:
v9 = 1;
v10 = virtualinvoke v4.<java.lang.String: char charAt(int)>(0);
if v10 != 45 goto label02;
v9 = -1;
v4 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int)>(1);
goto label03;
label02:
if v10 != 43 goto label03;
v4 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int)>(1);
label03:
v11 = "0";
v12 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v12 == 0 goto label04;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
return v13;
label04:
v14 = virtualinvoke v4.<java.lang.String: boolean startsWith(java.lang.String)>("0b");
if v14 == 0 goto label05;
v15 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int)>(2);
v16 = 2;
goto label11;
label05:
v17 = virtualinvoke v4.<java.lang.String: boolean startsWith(java.lang.String)>("0x");
if v17 == 0 goto label06;
v15 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int)>(2);
v16 = 16;
goto label11;
label06:
v18 = virtualinvoke v4.<java.lang.String: boolean startsWith(java.lang.String)>("0");
if v18 == 0 goto label07;
v15 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int)>(1);
v16 = 8;
goto label11;
label07:
v19 = virtualinvoke v4.<java.lang.String: int indexOf(int)>(58);
v20 = (int) -1;
if v19 == v20 goto label10;
v21 = virtualinvoke v4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
v22 = 1;
v23 = 0;
v24 = lengthof v21;
label08:
if v23 >= v24 goto label09;
v25 = v24 - v23;
v26 = v25 - 1;
v27 = v21[v26];
v28 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v27);
v29 = v28 * v22;
v30 = 0 + v29;
v22 = v22 * 60;
v23 = v23 + 1;
goto label08;
label09:
v31 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v32 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v30);
v33 = specialinvoke v31.<org.yaml.snakeyaml.constructor.SafeConstructor: java.lang.Number createNumber(int,java.lang.String,int)>(v9, v32, 10);
return v33;
label10:
v34 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v35 = specialinvoke v34.<org.yaml.snakeyaml.constructor.SafeConstructor: java.lang.Number createNumber(int,java.lang.String,int)>(v9, v4, 10);
return v35;
label11:
v36 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v37 = specialinvoke v36.<org.yaml.snakeyaml.constructor.SafeConstructor: java.lang.Number createNumber(int,java.lang.String,int)>(v9, v15, v16);
return v37;
}
}