public class org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet extends java.lang.Object implements org.yaml.snakeyaml.constructor.Construct
{
final org.yaml.snakeyaml.constructor.SafeConstructor this$0;
public void <init>(org.yaml.snakeyaml.constructor.SafeConstructor)
{
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet v0;
org.yaml.snakeyaml.constructor.SafeConstructor v1;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet;
v1 := @parameter0: org.yaml.snakeyaml.constructor.SafeConstructor;
v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet: org.yaml.snakeyaml.constructor.SafeConstructor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object construct(org.yaml.snakeyaml.nodes.Node)
{
java.util.Set v13;
org.yaml.snakeyaml.nodes.Node v1;
java.util.List v10;
org.yaml.snakeyaml.constructor.SafeConstructor v12, v3, v6, v9;
java.util.Map v4, v7;
int v11;
java.lang.Object v8;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet v0;
boolean v2, v5;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: boolean isTwoStepsConstruction()>();
if v2 == 0 goto label3;
v3 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v4 = v3.<org.yaml.snakeyaml.constructor.SafeConstructor: java.util.Map constructedObjects>;
v5 = interfaceinvoke v4.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v7 = v6.<org.yaml.snakeyaml.constructor.SafeConstructor: java.util.Map constructedObjects>;
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
goto label2;
label1:
v9 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v10 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.MappingNode: java.util.List getValue()>();
v11 = interfaceinvoke v10.<java.util.List: int size()>();
v8 = virtualinvoke v9.<org.yaml.snakeyaml.constructor.SafeConstructor: java.util.Set createDefaultSet(int)>(v11);
label2:
return v8;
label3:
v12 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v13 = virtualinvoke v12.<org.yaml.snakeyaml.constructor.SafeConstructor: java.util.Set constructSet(org.yaml.snakeyaml.nodes.MappingNode)>(v1);
return v13;
}
public void construct2ndStep(org.yaml.snakeyaml.nodes.Node, java.lang.Object)
{
org.yaml.snakeyaml.nodes.Node v1;
org.yaml.snakeyaml.constructor.SafeConstructor v4;
java.lang.Object v2;
java.lang.String v6;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet v0;
boolean v3;
org.yaml.snakeyaml.error.YAMLException v5;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: boolean isTwoStepsConstruction()>();
if v3 == 0 goto label1;
v4 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
virtualinvoke v4.<org.yaml.snakeyaml.constructor.SafeConstructor: void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode,java.util.Set)>(v1, v2);
goto label2;
label1:
v5 = new org.yaml.snakeyaml.error.YAMLException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.nodes.Node)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected recursive set structure. Node: \u0001");
specialinvoke v5.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>(v6);
throw v5;
label2:
return;
}
}