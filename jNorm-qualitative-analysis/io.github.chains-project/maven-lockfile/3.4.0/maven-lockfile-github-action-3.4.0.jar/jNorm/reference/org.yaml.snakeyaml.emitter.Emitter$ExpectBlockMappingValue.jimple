class org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue v0;
org.yaml.snakeyaml.emitter.Emitter v1;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey v19;
org.yaml.snakeyaml.events.Event v14, v15, v25, v7, v8;
org.yaml.snakeyaml.comments.CommentEventsCollector v12, v23, v5;
org.yaml.snakeyaml.util.ArrayStack v18;
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue v0;
org.yaml.snakeyaml.emitter.Emitter v1, v10, v11, v13, v16, v17, v2, v20, v21, v22, v24, v26, v3, v4, v6, v9;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v1.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
v2 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v2.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>(":", 1, 0, 1);
v3 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v4.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
v6 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v7 = v6.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v8 = virtualinvoke v5.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEventsAndPoll(org.yaml.snakeyaml.events.Event)>(v7);
v3.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v8;
v9 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v9.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
v10 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v11 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v12 = v11.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v13 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v14 = v13.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v15 = virtualinvoke v12.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEventsAndPoll(org.yaml.snakeyaml.events.Event)>(v14);
v10.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v15;
v16 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v16.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
v17 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v18 = v17.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v19 = new org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey;
v20 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v19.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey: void <init>(org.yaml.snakeyaml.emitter.Emitter,boolean)>(v20, 0);
virtualinvoke v18.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v19);
v21 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v21.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 1, 0);
v22 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v23 = v22.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
v24 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
v25 = v24.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
virtualinvoke v23.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v25);
v26 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v26.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
return;
}
}