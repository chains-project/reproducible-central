class org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
private final boolean first;
final org.yaml.snakeyaml.emitter.Emitter this$0;
public void <init>(org.yaml.snakeyaml.emitter.Emitter, boolean)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem v0;
org.yaml.snakeyaml.emitter.Emitter v1;
boolean v2;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v2 := @parameter1: boolean;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: boolean first> = v2;
return;
}
public void expect() throws java.io.IOException
{
java.lang.Integer v33, v38;
org.yaml.snakeyaml.events.Event v14, v19, v3, v45, v50;
org.yaml.snakeyaml.comments.CommentEventsCollector v17, v40, v67;
java.lang.String v51;
boolean v1, v15, v22, v23, v29, v30, v4, v41, v46, v55;
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem v0, v63;
org.yaml.snakeyaml.emitter.ScalarAnalysis v52, v54;
int v26, v34, v36, v37;
org.yaml.snakeyaml.util.ArrayStack v11, v59, v62, v7;
org.yaml.snakeyaml.emitter.Emitter v10, v13, v16, v18, v2, v20, v21, v24, v25, v27, v28, v31, v32, v35, v39, v42, v43, v44, v47, v48, v49, v5, v53, v56, v57, v58, v6, v61, v64, v65, v66, v68, v9;
java.lang.Object v12, v60, v8;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: boolean first>;
if v1 != 0 goto label1;
v2 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v3 = v2.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v4 = v3 instanceof org.yaml.snakeyaml.events.SequenceEndEvent;
if v4 == 0 goto label1;
v5 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v6 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v7 = v6.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack indents>;
v8 = virtualinvoke v7.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v5.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v8;
v9 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v10 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v11 = v10.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v12 = virtualinvoke v11.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v9.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v12;
goto label8;
label1:
v13 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v14 = v13.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v15 = v14 instanceof org.yaml.snakeyaml.events.CommentEvent;
if v15 == 0 goto label2;
v16 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v17 = v16.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v18 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v19 = v18.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
virtualinvoke v17.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v19);
goto label8;
label2:
v20 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v20.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
v21 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v22 = v21.<org.yaml.snakeyaml.emitter.Emitter: boolean indentWithIndicator>;
if v22 == 0 goto label3;
v23 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: boolean first>;
if v23 == 0 goto label4;
label3:
v24 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v25 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v26 = v25.<org.yaml.snakeyaml.emitter.Emitter: int indicatorIndent>;
specialinvoke v24.<org.yaml.snakeyaml.emitter.Emitter: void writeWhitespace(int)>(v26);
label4:
v27 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v27.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("-", 1, 0, 1);
v28 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v29 = v28.<org.yaml.snakeyaml.emitter.Emitter: boolean indentWithIndicator>;
if v29 == 0 goto label5;
v30 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: boolean first>;
if v30 == 0 goto label5;
v31 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v32 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v33 = v32.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent>;
v34 = virtualinvoke v33.<java.lang.Integer: int intValue()>();
v35 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v36 = v35.<org.yaml.snakeyaml.emitter.Emitter: int indicatorIndent>;
v37 = v34 + v36;
v38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v37);
v31.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v38;
label5:
v39 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v40 = v39.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v41 = virtualinvoke v40.<org.yaml.snakeyaml.comments.CommentEventsCollector: boolean isEmpty()>();
if v41 != 0 goto label7;
v42 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v42.<org.yaml.snakeyaml.emitter.Emitter: void increaseIndent(boolean,boolean)>(0, 0);
v43 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v43.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
v44 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v45 = v44.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v46 = v45 instanceof org.yaml.snakeyaml.events.ScalarEvent;
if v46 == 0 goto label6;
v47 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v48 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v49 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v50 = v49.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v51 = virtualinvoke v50.<org.yaml.snakeyaml.events.ScalarEvent: java.lang.String getValue()>();
v52 = specialinvoke v48.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.ScalarAnalysis analyzeScalar(java.lang.String)>(v51);
v47.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.ScalarAnalysis analysis> = v52;
v53 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v54 = v53.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.ScalarAnalysis analysis>;
v55 = virtualinvoke v54.<org.yaml.snakeyaml.emitter.ScalarAnalysis: boolean isEmpty()>();
if v55 != 0 goto label6;
v56 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v56.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label6:
v57 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v58 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v59 = v58.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack indents>;
v60 = virtualinvoke v59.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v57.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v60;
label7:
v61 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v62 = v61.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v63 = new org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem;
v64 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v63.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: void <init>(org.yaml.snakeyaml.emitter.Emitter,boolean)>(v64, 0);
virtualinvoke v62.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v63);
v65 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v65.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 0, 0);
v66 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v67 = v66.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
virtualinvoke v67.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.comments.CommentEventsCollector collectEvents()>();
v68 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v68.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
label8:
return;
}
}