class org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
private final boolean first;
final org.yaml.snakeyaml.emitter.Emitter this$0;
public void <init>(org.yaml.snakeyaml.emitter.Emitter, boolean)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart v0;
org.yaml.snakeyaml.emitter.Emitter v1;
boolean v2;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v2 := @parameter1: boolean;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: boolean first> = v2;
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.emitter.Emitter$ExpectNothing v62;
org.yaml.snakeyaml.events.Event v2, v5, v58, v65, v70, v74;
org.yaml.snakeyaml.comments.CommentEventsCollector v68;
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart v0;
java.util.Map v19, v20, v22, v27, v30, v42, v43, v7;
java.util.Set v23;
org.yaml.snakeyaml.DumperOptions$Version v12, v14, v41, v6;
org.yaml.snakeyaml.emitter.EmitterException v72;
java.util.TreeSet v21;
java.util.LinkedHashMap v18;
java.lang.String v15, v32, v34, v75;
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot v55;
boolean v25, v3, v36, v37, v40, v44, v46, v47, v52, v59, v66, v9;
java.lang.Boolean v39, v51;
java.util.Iterator v24;
org.yaml.snakeyaml.emitter.Emitter v1, v10, v11, v13, v16, v17, v29, v31, v33, v35, v38, v4, v45, v48, v49, v50, v53, v54, v56, v57, v60, v61, v63, v64, v67, v69, v71, v73, v8;
java.lang.Object v26, v28;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v2 = v1.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v3 = v2 instanceof org.yaml.snakeyaml.events.DocumentStartEvent;
if v3 == 0 goto label10;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v4.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v6 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: org.yaml.snakeyaml.DumperOptions$Version getVersion()>();
if v6 != null goto label01;
v7 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: java.util.Map getTags()>();
if v7 == null goto label02;
label01:
v8 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v9 = v8.<org.yaml.snakeyaml.emitter.Emitter: boolean openEnded>;
if v9 == 0 goto label02;
v10 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v10.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("...", 1, 0, 0);
v11 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v11.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label02:
v12 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: org.yaml.snakeyaml.DumperOptions$Version getVersion()>();
if v12 == null goto label03;
v13 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v14 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: org.yaml.snakeyaml.DumperOptions$Version getVersion()>();
v15 = specialinvoke v13.<org.yaml.snakeyaml.emitter.Emitter: java.lang.String prepareVersion(org.yaml.snakeyaml.DumperOptions$Version)>(v14);
v16 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v16.<org.yaml.snakeyaml.emitter.Emitter: void writeVersionDirective(java.lang.String)>(v15);
label03:
v17 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v18 = new java.util.LinkedHashMap;
v19 = <org.yaml.snakeyaml.emitter.Emitter: java.util.Map DEFAULT_TAG_PREFIXES>;
specialinvoke v18.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v19);
v17.<org.yaml.snakeyaml.emitter.Emitter: java.util.Map tagPrefixes> = v18;
v20 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: java.util.Map getTags()>();
if v20 == null goto label05;
v21 = new java.util.TreeSet;
v22 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: java.util.Map getTags()>();
v23 = interfaceinvoke v22.<java.util.Map: java.util.Set keySet()>();
specialinvoke v21.<java.util.TreeSet: void <init>(java.util.Collection)>(v23);
v24 = interfaceinvoke v21.<java.util.Set: java.util.Iterator iterator()>();
label04:
v25 = interfaceinvoke v24.<java.util.Iterator: boolean hasNext()>();
if v25 == 0 goto label05;
v26 = interfaceinvoke v24.<java.util.Iterator: java.lang.Object next()>();
v27 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: java.util.Map getTags()>();
v28 = interfaceinvoke v27.<java.util.Map: java.lang.Object get(java.lang.Object)>(v26);
v29 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v30 = v29.<org.yaml.snakeyaml.emitter.Emitter: java.util.Map tagPrefixes>;
interfaceinvoke v30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v28, v26);
v31 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v32 = specialinvoke v31.<org.yaml.snakeyaml.emitter.Emitter: java.lang.String prepareTagHandle(java.lang.String)>(v26);
v33 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v34 = specialinvoke v33.<org.yaml.snakeyaml.emitter.Emitter: java.lang.String prepareTagPrefix(java.lang.String)>(v28);
v35 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v35.<org.yaml.snakeyaml.emitter.Emitter: void writeTagDirective(java.lang.String,java.lang.String)>(v32, v34);
goto label04;
label05:
v36 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: boolean first>;
if v36 == 0 goto label07;
v37 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: boolean getExplicit()>();
if v37 != 0 goto label07;
v38 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v39 = v38.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v40 = virtualinvoke v39.<java.lang.Boolean: boolean booleanValue()>();
if v40 != 0 goto label07;
v41 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: org.yaml.snakeyaml.DumperOptions$Version getVersion()>();
if v41 != null goto label07;
v42 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: java.util.Map getTags()>();
if v42 == null goto label06;
v43 = virtualinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: java.util.Map getTags()>();
v44 = interfaceinvoke v43.<java.util.Map: boolean isEmpty()>();
if v44 == 0 goto label07;
label06:
v45 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v46 = specialinvoke v45.<org.yaml.snakeyaml.emitter.Emitter: boolean checkEmptyDocument()>();
if v46 != 0 goto label07;
v47 = 1;
goto label08;
label07:
v47 = 0;
label08:
if v47 != 0 goto label09;
v48 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v48.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
v49 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v49.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("---", 1, 0, 0);
v50 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v51 = v50.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v52 = virtualinvoke v51.<java.lang.Boolean: boolean booleanValue()>();
if v52 == 0 goto label09;
v53 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v53.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label09:
v54 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v55 = new org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot;
v56 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v55.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v56);
v54.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v55;
goto label13;
label10:
v57 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v58 = v57.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v59 = v58 instanceof org.yaml.snakeyaml.events.StreamEndEvent;
if v59 == 0 goto label11;
v60 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v60.<org.yaml.snakeyaml.emitter.Emitter: void writeStreamEnd()>();
v61 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v62 = new org.yaml.snakeyaml.emitter.Emitter$ExpectNothing;
v63 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v62.<org.yaml.snakeyaml.emitter.Emitter$ExpectNothing: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v63);
v61.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v62;
goto label13;
label11:
v64 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v65 = v64.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v66 = v65 instanceof org.yaml.snakeyaml.events.CommentEvent;
if v66 == 0 goto label12;
v67 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v68 = v67.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v69 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v70 = v69.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
virtualinvoke v68.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v70);
v71 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v71.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
goto label13;
label12:
v72 = new org.yaml.snakeyaml.emitter.EmitterException;
v73 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart: org.yaml.snakeyaml.emitter.Emitter this$0>;
v74 = v73.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v75 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.events.Event)>(v74) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected DocumentStartEvent, but got \u0001");
specialinvoke v72.<org.yaml.snakeyaml.emitter.EmitterException: void <init>(java.lang.String)>(v75);
throw v72;
label13:
return;
}
}