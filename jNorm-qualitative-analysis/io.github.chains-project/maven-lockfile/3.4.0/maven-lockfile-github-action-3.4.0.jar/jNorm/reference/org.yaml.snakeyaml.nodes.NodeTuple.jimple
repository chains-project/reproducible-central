public final class org.yaml.snakeyaml.nodes.NodeTuple extends java.lang.Object
{
private final org.yaml.snakeyaml.nodes.Node keyNode;
private final org.yaml.snakeyaml.nodes.Node valueNode;
public void <init>(org.yaml.snakeyaml.nodes.Node, org.yaml.snakeyaml.nodes.Node)
{
org.yaml.snakeyaml.nodes.Node v1, v2;
java.lang.NullPointerException v3;
org.yaml.snakeyaml.nodes.NodeTuple v0;
v0 := @this: org.yaml.snakeyaml.nodes.NodeTuple;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 := @parameter1: org.yaml.snakeyaml.nodes.Node;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == null goto label1;
if v2 != null goto label2;
label1:
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Nodes must be provided.");
throw v3;
label2:
v0.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node keyNode> = v1;
v0.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node valueNode> = v2;
return;
}
public org.yaml.snakeyaml.nodes.Node getKeyNode()
{
org.yaml.snakeyaml.nodes.Node v1;
org.yaml.snakeyaml.nodes.NodeTuple v0;
v0 := @this: org.yaml.snakeyaml.nodes.NodeTuple;
v1 = v0.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node keyNode>;
return v1;
}
public org.yaml.snakeyaml.nodes.Node getValueNode()
{
org.yaml.snakeyaml.nodes.Node v1;
org.yaml.snakeyaml.nodes.NodeTuple v0;
v0 := @this: org.yaml.snakeyaml.nodes.NodeTuple;
v1 = v0.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node valueNode>;
return v1;
}
public java.lang.String toString()
{
org.yaml.snakeyaml.nodes.Node v1, v2;
java.lang.String v3;
org.yaml.snakeyaml.nodes.NodeTuple v0;
v0 := @this: org.yaml.snakeyaml.nodes.NodeTuple;
v1 = v0.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node keyNode>;
v2 = v0.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node valueNode>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.nodes.Node,org.yaml.snakeyaml.nodes.Node)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("<NodeTuple keyNode=\u0001; valueNode=\u0001>");
return v3;
}
}