public class org.yaml.snakeyaml.nodes.ScalarNode extends org.yaml.snakeyaml.nodes.Node
{
private final org.yaml.snakeyaml.DumperOptions$ScalarStyle style;
private final java.lang.String value;
public void <init>(org.yaml.snakeyaml.nodes.Tag, java.lang.String, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.DumperOptions$ScalarStyle)
{
org.yaml.snakeyaml.error.Mark v3, v4;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v5;
org.yaml.snakeyaml.nodes.ScalarNode v0;
java.lang.String v2;
org.yaml.snakeyaml.nodes.Tag v1;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Tag;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.yaml.snakeyaml.error.Mark;
v4 := @parameter3: org.yaml.snakeyaml.error.Mark;
v5 := @parameter4: org.yaml.snakeyaml.DumperOptions$ScalarStyle;
specialinvoke v0.<org.yaml.snakeyaml.nodes.ScalarNode: void <init>(org.yaml.snakeyaml.nodes.Tag,boolean,java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v1, 1, v2, v3, v4, v5);
return;
}
public void <init>(org.yaml.snakeyaml.nodes.Tag, boolean, java.lang.String, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.DumperOptions$ScalarStyle)
{
org.yaml.snakeyaml.DumperOptions$ScalarStyle v6;
org.yaml.snakeyaml.nodes.Tag v1;
java.lang.NullPointerException v7, v8;
org.yaml.snakeyaml.error.Mark v4, v5;
org.yaml.snakeyaml.nodes.ScalarNode v0;
java.lang.String v3;
boolean v2;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Tag;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: org.yaml.snakeyaml.error.Mark;
v5 := @parameter4: org.yaml.snakeyaml.error.Mark;
v6 := @parameter5: org.yaml.snakeyaml.DumperOptions$ScalarStyle;
specialinvoke v0.<org.yaml.snakeyaml.nodes.Node: void <init>(org.yaml.snakeyaml.nodes.Tag,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v1, v4, v5);
if v3 != null goto label1;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("value in a Node is required.");
throw v7;
label1:
v0.<org.yaml.snakeyaml.nodes.ScalarNode: java.lang.String value> = v3;
if v6 != null goto label2;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Scalar style must be provided.");
throw v8;
label2:
v0.<org.yaml.snakeyaml.nodes.ScalarNode: org.yaml.snakeyaml.DumperOptions$ScalarStyle style> = v6;
v0.<org.yaml.snakeyaml.nodes.ScalarNode: boolean resolved> = v2;
return;
}
public org.yaml.snakeyaml.DumperOptions$ScalarStyle getScalarStyle()
{
org.yaml.snakeyaml.nodes.ScalarNode v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v1;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 = v0.<org.yaml.snakeyaml.nodes.ScalarNode: org.yaml.snakeyaml.DumperOptions$ScalarStyle style>;
return v1;
}
public org.yaml.snakeyaml.nodes.NodeId getNodeId()
{
org.yaml.snakeyaml.nodes.ScalarNode v0;
org.yaml.snakeyaml.nodes.NodeId v1;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 = <org.yaml.snakeyaml.nodes.NodeId: org.yaml.snakeyaml.nodes.NodeId scalar>;
return v1;
}
public java.lang.String getValue()
{
org.yaml.snakeyaml.nodes.ScalarNode v0;
java.lang.String v1;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 = v0.<org.yaml.snakeyaml.nodes.ScalarNode: java.lang.String value>;
return v1;
}
public java.lang.String toString()
{
org.yaml.snakeyaml.nodes.ScalarNode v0;
java.lang.Class v1;
java.lang.String v2, v4, v5;
org.yaml.snakeyaml.nodes.Tag v3;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v3 = virtualinvoke v0.<org.yaml.snakeyaml.nodes.ScalarNode: org.yaml.snakeyaml.nodes.Tag getTag()>();
v4 = virtualinvoke v0.<org.yaml.snakeyaml.nodes.ScalarNode: java.lang.String getValue()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.yaml.snakeyaml.nodes.Tag,java.lang.String)>(v2, v3, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("<\u0001 (tag=\u0001, value=\u0001)>");
return v5;
}
public boolean isPlain()
{
org.yaml.snakeyaml.DumperOptions$ScalarStyle v1, v2;
org.yaml.snakeyaml.nodes.ScalarNode v0;
boolean v3;
v0 := @this: org.yaml.snakeyaml.nodes.ScalarNode;
v1 = v0.<org.yaml.snakeyaml.nodes.ScalarNode: org.yaml.snakeyaml.DumperOptions$ScalarStyle style>;
v2 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
}