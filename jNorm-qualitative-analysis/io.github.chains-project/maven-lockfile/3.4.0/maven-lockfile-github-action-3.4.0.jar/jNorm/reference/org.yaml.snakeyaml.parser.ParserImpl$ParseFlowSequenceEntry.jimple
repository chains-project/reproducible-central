class org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
private final boolean first;
final org.yaml.snakeyaml.parser.ParserImpl this$0;
public void <init>(org.yaml.snakeyaml.parser.ParserImpl, boolean)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry v0;
boolean v2;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v2 := @parameter1: boolean;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: boolean first> = v2;
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v10, v11, v15, v21, v26, v28, v33, v35, v36, v37, v41, v45, v51, v56, v6, v63, v65, v66, v71, v74, v75, v77, v8, v83, v88, v89, v92, v94, v95;
org.yaml.snakeyaml.events.Event v76;
org.yaml.snakeyaml.events.SequenceEndEvent v80;
org.yaml.snakeyaml.events.MappingStartEvent v59;
org.yaml.snakeyaml.error.Mark v50, v60, v61, v81, v82;
java.lang.String v49;
org.yaml.snakeyaml.tokens.Token v13, v39, v43, v58, v79;
org.yaml.snakeyaml.events.CommentEvent v14, v40;
org.yaml.snakeyaml.tokens.Token$ID[] v17, v23, v3, v30, v53, v68, v85;
org.yaml.snakeyaml.DumperOptions$FlowStyle v62;
boolean v19, v20, v25, v32, v5, v55, v70, v87, v9;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey v64;
org.yaml.snakeyaml.parser.ParserException v44;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowEndComment v93;
org.yaml.snakeyaml.tokens.Token$ID v18, v24, v31, v4, v48, v54, v69, v86;
org.yaml.snakeyaml.util.ArrayStack v46, v72, v90, v96;
org.yaml.snakeyaml.scanner.Scanner v12, v16, v2, v22, v27, v29, v38, v42, v52, v57, v67, v78, v84;
java.lang.Object v47, v91;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry v0, v34, v7, v73;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry;
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: boolean first>;
specialinvoke v7.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v8, v9);
v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v7;
v10 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v11 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v12 = v11.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v13 = interfaceinvoke v12.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v14 = specialinvoke v10.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v13);
return v14;
label1:
v15 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v16 = v15.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v17 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v18 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd>;
v17[0] = v18;
v19 = interfaceinvoke v16.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v17);
if v19 != 0 goto label5;
v20 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: boolean first>;
if v20 != 0 goto label3;
v21 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v22 = v21.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v23 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v24 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowEntry>;
v23[0] = v24;
v25 = interfaceinvoke v22.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v23);
if v25 == 0 goto label2;
v26 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v27 = v26.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
interfaceinvoke v27.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v28 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v29 = v28.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v30 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v31 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v30[0] = v31;
v32 = interfaceinvoke v29.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v30);
if v32 == 0 goto label3;
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v34 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry;
v35 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v34.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v35, 1);
v33.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v34;
v36 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v37 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v38 = v37.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v39 = interfaceinvoke v38.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v40 = specialinvoke v36.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v39);
return v40;
label2:
v41 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v42 = v41.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v43 = interfaceinvoke v42.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v44 = new org.yaml.snakeyaml.parser.ParserException;
v45 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v46 = v45.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
v47 = virtualinvoke v46.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v48 = virtualinvoke v43.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.tokens.Token$ID getTokenId()>();
v49 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.tokens.Token$ID)>(v48) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected \',\' or \']\', but got \u0001");
v50 = virtualinvoke v43.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v44.<org.yaml.snakeyaml.parser.ParserException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while parsing a flow sequence", v47, v49, v50);
throw v44;
label3:
v51 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v52 = v51.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v53 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v54 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v53[0] = v54;
v55 = interfaceinvoke v52.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v53);
if v55 == 0 goto label4;
v56 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v57 = v56.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v58 = interfaceinvoke v57.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v59 = new org.yaml.snakeyaml.events.MappingStartEvent;
v60 = virtualinvoke v58.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v61 = virtualinvoke v58.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v62 = <org.yaml.snakeyaml.DumperOptions$FlowStyle: org.yaml.snakeyaml.DumperOptions$FlowStyle FLOW>;
specialinvoke v59.<org.yaml.snakeyaml.events.MappingStartEvent: void <init>(java.lang.String,java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.DumperOptions$FlowStyle)>(null, null, 1, v60, v61, v62);
v63 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v64 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey;
v65 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v64.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v65);
v63.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v64;
return v59;
label4:
v66 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v67 = v66.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v68 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v69 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd>;
v68[0] = v69;
v70 = interfaceinvoke v67.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v68);
if v70 != 0 goto label5;
v71 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v72 = v71.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v73 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry;
v74 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v73.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v74, 0);
virtualinvoke v72.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v73);
v75 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v76 = specialinvoke v75.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseFlowNode()>();
return v76;
label5:
v77 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v78 = v77.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v79 = interfaceinvoke v78.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v80 = new org.yaml.snakeyaml.events.SequenceEndEvent;
v81 = virtualinvoke v79.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v82 = virtualinvoke v79.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
specialinvoke v80.<org.yaml.snakeyaml.events.SequenceEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v81, v82);
v83 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v84 = v83.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v85 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v86 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v85[0] = v86;
v87 = interfaceinvoke v84.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v85);
if v87 != 0 goto label6;
v88 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v89 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v90 = v89.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v91 = virtualinvoke v90.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v88.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v91;
goto label7;
label6:
v92 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v93 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowEndComment;
v94 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v93.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowEndComment: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v94);
v92.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v93;
label7:
v95 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v96 = v95.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
virtualinvoke v96.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
return v80;
}
}