public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray v0;
org.yaml.snakeyaml.representer.SafeRepresenter v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
org.yaml.snakeyaml.nodes.Node v6;
java.util.List v2;
org.yaml.snakeyaml.representer.SafeRepresenter v3;
org.yaml.snakeyaml.DumperOptions$FlowStyle v5;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray v0;
java.lang.Object v1;
org.yaml.snakeyaml.nodes.Tag v4;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
v3 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v4 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag SEQ>;
v5 = <org.yaml.snakeyaml.DumperOptions$FlowStyle: org.yaml.snakeyaml.DumperOptions$FlowStyle AUTO>;
v6 = virtualinvoke v3.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representSequence(org.yaml.snakeyaml.nodes.Tag,java.lang.Iterable,org.yaml.snakeyaml.DumperOptions$FlowStyle)>(v4, v2, v5);
return v6;
}
}