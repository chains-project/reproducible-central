public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter v1;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray v0;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
org.yaml.snakeyaml.DumperOptions$ScalarStyle v6;
org.yaml.snakeyaml.nodes.Tag v4;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray v0;
org.yaml.snakeyaml.nodes.Node v7;
org.yaml.snakeyaml.representer.SafeRepresenter v3;
char[] v2;
java.lang.Object v1;
java.lang.String v5;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <org.yaml.snakeyaml.external.biz.base64Coder.Base64Coder: char[] encode(byte[])>(v1);
v3 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v4 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag BINARY>;
v5 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(v2);
v6 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle LITERAL>;
v7 = virtualinvoke v3.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v4, v5, v6);
return v7;
}
}