final class org.yaml.snakeyaml.resolver.ResolverTuple extends java.lang.Object
{
private final org.yaml.snakeyaml.nodes.Tag tag;
private final java.util.regex.Pattern regexp;
private final int limit;
public void <init>(org.yaml.snakeyaml.nodes.Tag, java.util.regex.Pattern, int)
{
int v3;
java.util.regex.Pattern v2;
org.yaml.snakeyaml.resolver.ResolverTuple v0;
org.yaml.snakeyaml.nodes.Tag v1;
v0 := @this: org.yaml.snakeyaml.resolver.ResolverTuple;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Tag;
v2 := @parameter1: java.util.regex.Pattern;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.resolver.ResolverTuple: org.yaml.snakeyaml.nodes.Tag tag> = v1;
v0.<org.yaml.snakeyaml.resolver.ResolverTuple: java.util.regex.Pattern regexp> = v2;
v0.<org.yaml.snakeyaml.resolver.ResolverTuple: int limit> = v3;
return;
}
public org.yaml.snakeyaml.nodes.Tag getTag()
{
org.yaml.snakeyaml.resolver.ResolverTuple v0;
org.yaml.snakeyaml.nodes.Tag v1;
v0 := @this: org.yaml.snakeyaml.resolver.ResolverTuple;
v1 = v0.<org.yaml.snakeyaml.resolver.ResolverTuple: org.yaml.snakeyaml.nodes.Tag tag>;
return v1;
}
public java.util.regex.Pattern getRegexp()
{
java.util.regex.Pattern v1;
org.yaml.snakeyaml.resolver.ResolverTuple v0;
v0 := @this: org.yaml.snakeyaml.resolver.ResolverTuple;
v1 = v0.<org.yaml.snakeyaml.resolver.ResolverTuple: java.util.regex.Pattern regexp>;
return v1;
}
public int getLimit()
{
int v1;
org.yaml.snakeyaml.resolver.ResolverTuple v0;
v0 := @this: org.yaml.snakeyaml.resolver.ResolverTuple;
v1 = v0.<org.yaml.snakeyaml.resolver.ResolverTuple: int limit>;
return v1;
}
public java.lang.String toString()
{
int v3;
java.lang.String v4;
java.util.regex.Pattern v2;
org.yaml.snakeyaml.resolver.ResolverTuple v0;
org.yaml.snakeyaml.nodes.Tag v1;
v0 := @this: org.yaml.snakeyaml.resolver.ResolverTuple;
v1 = v0.<org.yaml.snakeyaml.resolver.ResolverTuple: org.yaml.snakeyaml.nodes.Tag tag>;
v2 = v0.<org.yaml.snakeyaml.resolver.ResolverTuple: java.util.regex.Pattern regexp>;
v3 = v0.<org.yaml.snakeyaml.resolver.ResolverTuple: int limit>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.nodes.Tag,java.util.regex.Pattern,int)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Tuple tag=\u0001 regexp=\u0001 limit=\u0001");
return v4;
}
}