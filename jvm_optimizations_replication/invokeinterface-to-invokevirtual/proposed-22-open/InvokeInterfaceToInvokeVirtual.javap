Classfile /home/aman/Desktop/experiments/reproducible-central/jvm_optimizations_replication/invokeinterface-to-invokevirtual/proposed-22-open/InvokeInterfaceToInvokeVirtual.class
  Last modified Apr 1, 2025; size 782 bytes
  SHA-256 checksum 964b0695358d411dc458f668602230eaf4241f3807f5fbe193ef6e0a0e09adf8
  Compiled from "InvokeInterfaceToInvokeVirtual.java"
public class InvokeInterfaceToInvokeVirtual
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #39                         // InvokeInterfaceToInvokeVirtual
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 2
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Class              #8             // InvokeInterfaceToInvokeVirtual$InOrder
   #8 = Utf8               InvokeInterfaceToInvokeVirtual$InOrder
   #9 = Methodref          #7.#10         // InvokeInterfaceToInvokeVirtual$InOrder."<init>":(LInvokeInterfaceToInvokeVirtual$1;)V
  #10 = NameAndType        #5:#11         // "<init>":(LInvokeInterfaceToInvokeVirtual$1;)V
  #11 = Utf8               (LInvokeInterfaceToInvokeVirtual$1;)V
  #12 = Class              #13            // Node
  #13 = Utf8               Node
  #14 = Methodref          #12.#15        // Node."<init>":(I)V
  #15 = NameAndType        #5:#16         // "<init>":(I)V
  #16 = Utf8               (I)V
  #17 = InterfaceMethodref #18.#19        // NodeVisitor.visit:(LNode;)V
  #18 = Class              #20            // NodeVisitor
  #19 = NameAndType        #21:#22        // visit:(LNode;)V
  #20 = Utf8               NodeVisitor
  #21 = Utf8               visit
  #22 = Utf8               (LNode;)V
  #23 = Fieldref           #24.#25        // java/lang/System.out:Ljava/io/PrintStream;
  #24 = Class              #26            // java/lang/System
  #25 = NameAndType        #27:#28        // out:Ljava/io/PrintStream;
  #26 = Utf8               java/lang/System
  #27 = Utf8               out
  #28 = Utf8               Ljava/io/PrintStream;
  #29 = InterfaceMethodref #18.#30        // NodeVisitor.toString:()Ljava/lang/String;
  #30 = NameAndType        #31:#32        // toString:()Ljava/lang/String;
  #31 = Utf8               toString
  #32 = Utf8               ()Ljava/lang/String;
  #33 = Methodref          #34.#35        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #34 = Class              #36            // java/io/PrintStream
  #35 = NameAndType        #37:#38        // println:(Ljava/lang/String;)V
  #36 = Utf8               java/io/PrintStream
  #37 = Utf8               println
  #38 = Utf8               (Ljava/lang/String;)V
  #39 = Class              #40            // InvokeInterfaceToInvokeVirtual
  #40 = Utf8               InvokeInterfaceToInvokeVirtual
  #41 = Utf8               Code
  #42 = Utf8               LineNumberTable
  #43 = Utf8               main
  #44 = Utf8               ([Ljava/lang/String;)V
  #45 = Utf8               SourceFile
  #46 = Utf8               InvokeInterfaceToInvokeVirtual.java
  #47 = Utf8               InnerClasses
  #48 = Utf8               InOrder
  #49 = Class              #50            // InvokeInterfaceToInvokeVirtual$1
  #50 = Utf8               InvokeInterfaceToInvokeVirtual$1
{
  public InvokeInterfaceToInvokeVirtual();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: new           #7                  // class InvokeInterfaceToInvokeVirtual$InOrder
         3: dup
         4: aconst_null
         5: invokespecial #9                  // Method InvokeInterfaceToInvokeVirtual$InOrder."<init>":(LInvokeInterfaceToInvokeVirtual$1;)V
         8: astore_1
         9: aload_1
        10: new           #12                 // class Node
        13: dup
        14: iconst_1
        15: invokespecial #14                 // Method Node."<init>":(I)V
        18: invokeinterface #17,  2           // InterfaceMethod NodeVisitor.visit:(LNode;)V
        23: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;
        26: aload_1
        27: invokeinterface #29,  1           // InterfaceMethod NodeVisitor.toString:()Ljava/lang/String;
        32: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        35: return
      LineNumberTable:
        line 6: 0
        line 7: 9
        line 8: 23
        line 10: 35
}
SourceFile: "InvokeInterfaceToInvokeVirtual.java"
InnerClasses:
  private static #48= #7 of #39;          // InOrder=class InvokeInterfaceToInvokeVirtual$InOrder of class InvokeInterfaceToInvokeVirtual
  static #49;                             // class InvokeInterfaceToInvokeVirtual$1
