public final class com.novell.ldapchai.ChaiEntryFactory extends java.lang.Object
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private final com.novell.ldapchai.provider.ChaiProvider chaiProvider;
public com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.VendorFactory v4;
com.novell.ldapchai.ChaiEntryFactory v0;
com.novell.ldapchai.ChaiEntry v6;
java.lang.String v1;
com.novell.ldapchai.provider.DirectoryVendor v3;
com.novell.ldapchai.provider.ChaiProvider v2, v5;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v6 = interfaceinvoke v4.<com.novell.ldapchai.impl.VendorFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v5);
return v6;
}
public com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.VendorFactory v4;
com.novell.ldapchai.ChaiEntryFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.DirectoryVendor v3;
com.novell.ldapchai.ChaiGroup v6;
com.novell.ldapchai.provider.ChaiProvider v2, v5;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v6 = interfaceinvoke v4.<com.novell.ldapchai.impl.VendorFactory: com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v5);
return v6;
}
public com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.ChaiUser v6;
com.novell.ldapchai.impl.VendorFactory v4;
com.novell.ldapchai.ChaiEntryFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.DirectoryVendor v3;
com.novell.ldapchai.provider.ChaiProvider v2, v5;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v6 = interfaceinvoke v4.<com.novell.ldapchai.impl.VendorFactory: com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v5);
return v6;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap() throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.VendorFactory v3;
com.novell.ldapchai.ChaiEntryFactory v0;
com.novell.ldapchai.exception.ErrorMap v4;
com.novell.ldapchai.provider.DirectoryVendor v2;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v2 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v3 = virtualinvoke v2.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.impl.VendorFactory: com.novell.ldapchai.exception.ErrorMap getErrorMap()>();
return v4;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap(com.novell.ldapchai.provider.DirectoryVendor) throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.VendorFactory v4;
com.novell.ldapchai.ChaiEntryFactory v0;
com.novell.ldapchai.exception.ErrorMap v5;
com.novell.ldapchai.provider.DirectoryVendor v1, v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 := @parameter0: com.novell.ldapchai.provider.DirectoryVendor;
v2 = virtualinvoke v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()>();
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.impl.VendorFactory getVendorFactory()>();
v5 = interfaceinvoke v4.<com.novell.ldapchai.impl.VendorFactory: com.novell.ldapchai.exception.ErrorMap getErrorMap()>();
return v5;
}
private void <init>(com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.ChaiEntryFactory v0;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider chaiProvider> = v1;
return;
}
public static com.novell.ldapchai.ChaiEntryFactory newChaiFactory(com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.ChaiEntryFactory v1;
com.novell.ldapchai.provider.ChaiProvider v0;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
v1 = new com.novell.ldapchai.ChaiEntryFactory;
specialinvoke v1.<com.novell.ldapchai.ChaiEntryFactory: void <init>(com.novell.ldapchai.provider.ChaiProvider)>(v0);
return v1;
}
public com.novell.ldapchai.provider.ChaiProvider getChaiProvider()
{
com.novell.ldapchai.ChaiEntryFactory v0;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.ChaiEntryFactory;
v1 = v0.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.provider.ChaiProvider chaiProvider>;
return v1;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/ChaiEntryFactory;");
<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}