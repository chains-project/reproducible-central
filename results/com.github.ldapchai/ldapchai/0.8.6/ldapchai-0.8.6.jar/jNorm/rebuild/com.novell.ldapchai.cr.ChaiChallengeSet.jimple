public class com.novell.ldapchai.cr.ChaiChallengeSet extends java.lang.Object implements com.novell.ldapchai.cr.ChallengeSet, java.io.Serializable
{
private final java.util.List challenges;
private final int minRandomRequired;
private final java.util.Locale locale;
private final java.lang.String identifier;
public void <init>(java.util.Collection, int, java.util.Locale, java.lang.String) throws com.novell.ldapchai.exception.ChaiValidationException
{
java.util.Collection v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v6, v7;
java.util.Locale v10, v3;
int v2, v8, v9;
java.lang.String v4;
java.util.LinkedList v5;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 := @parameter0: java.util.Collection;
v2 := @parameter1: int;
v3 := @parameter2: java.util.Locale;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v5 = new java.util.LinkedList;
specialinvoke v5.<java.util.LinkedList: void <init>(java.util.Collection)>(v1);
v6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v5);
v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges> = v6;
v7 = virtualinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List getRandomChallenges()>();
v8 = interfaceinvoke v7.<java.util.List: int size()>();
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v2, v8);
v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired> = v9;
if v3 != null goto label1;
v10 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
goto label2;
label1:
v10 = v3;
label2:
v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale> = v10;
v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier> = v4;
specialinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: void isValid()>();
return;
}
private void isValid() throws com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v2;
int v1, v3;
com.novell.ldapchai.exception.ChaiValidationException v4;
com.novell.ldapchai.exception.ChaiError v5;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
v2 = virtualinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List getRandomChallenges()>();
v3 = interfaceinvoke v2.<java.util.List: int size()>();
if v1 <= v3 goto label1;
v4 = new com.novell.ldapchai.exception.ChaiValidationException;
v5 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError CR_NOT_ENOUGH_RANDOM_RESPONSES>;
specialinvoke v4.<com.novell.ldapchai.exception.ChaiValidationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>("number of required responses greater then count of supplied random challenges", v5);
throw v4;
label1:
return;
}
public final java.util.List getChallenges()
{
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v1;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
return v1;
}
public final java.util.Locale getLocale()
{
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.Locale v1;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale>;
return v1;
}
public final int getMinRandomRequired()
{
int v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
return v1;
}
public final java.lang.String toString()
{
java.util.Iterator v10;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v9;
java.util.Locale v8;
int v6;
java.lang.Object v12;
java.lang.StringBuilder v1, v2, v5, v7;
java.lang.String v13, v14, v3, v4;
boolean v11;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChallengeSet ");
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("identifier: ");
v3 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
if v3 != null goto label1;
v4 = "[null]";
goto label2;
label1:
v4 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
label2:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
v5 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minRandom: ");
v6 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v6);
v7 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", locale: ");
v8 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale>;
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v8);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v9 = virtualinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List getChallenges()>();
v10 = interfaceinvoke v9.<java.util.List: java.util.Iterator iterator()>();
label3:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label4;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
v13 = virtualinvoke v12.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v13);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
goto label3;
label4:
v14 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v14;
}
public final java.util.List getAdminDefinedChallenges()
{
java.util.Iterator v3;
java.util.ArrayList v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v2, v7;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: boolean isAdminDefined()>();
if v6 == 0 goto label1;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v7;
}
public java.util.List getChallengeTexts()
{
java.util.Iterator v3;
java.util.ArrayList v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v10, v2;
int v8;
java.lang.Object v5;
java.lang.String v6, v7, v9;
boolean v4;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: java.lang.String getChallengeText()>();
if v6 == null goto label1;
v7 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: java.lang.String getChallengeText()>();
v8 = virtualinvoke v7.<java.lang.String: int length()>();
if v8 <= 0 goto label1;
v9 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: java.lang.String getChallengeText()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label1;
label2:
v10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v10;
}
public final java.util.List getRandomChallenges()
{
java.util.Iterator v3;
java.util.ArrayList v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v2, v7;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: boolean isRequired()>();
if v6 != 0 goto label1;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v7;
}
public final java.util.List getRequiredChallenges()
{
java.util.Iterator v3;
java.util.ArrayList v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v2, v7;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: boolean isRequired()>();
if v6 == 0 goto label1;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v7;
}
public final java.util.List getUserDefinedChallenges()
{
java.util.Iterator v3;
java.util.ArrayList v1;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v2, v7;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<com.novell.ldapchai.cr.Challenge: boolean isAdminDefined()>();
if v6 != 0 goto label1;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v7;
}
public int minimumResponses()
{
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v1;
int v2, v3, v4, v5;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = virtualinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List getRequiredChallenges()>();
v2 = interfaceinvoke v1.<java.util.List: int size()>();
v3 = 0 + v2;
v4 = virtualinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int getMinRandomRequired()>();
v5 = v3 + v4;
return v5;
}
public java.lang.String getIdentifier()
{
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
return v1;
}
public com.novell.ldapchai.cr.bean.ChallengeSetBean asChallengeSetBean()
{
java.util.function.Function v3;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v1;
java.util.stream.Stream v2, v4;
com.novell.ldapchai.cr.bean.ChallengeSetBean v7;
java.util.Locale v9;
int v8;
java.lang.Object v6;
java.lang.String v10;
java.util.stream.Collector v5;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = virtualinvoke v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List getChallenges()>();
v2 = interfaceinvoke v1.<java.util.List: java.util.stream.Stream stream()>();
v3 = staticinvoke <com.novell.ldapchai.cr.ChaiChallengeSet$asChallengeBean__4: java.util.function.Function bootstrap$()>();
v4 = interfaceinvoke v2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v3);
v5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v5);
v7 = new com.novell.ldapchai.cr.bean.ChallengeSetBean;
v8 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
v9 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale>;
v10 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
specialinvoke v7.<com.novell.ldapchai.cr.bean.ChallengeSetBean: void <init>(java.util.List,int,java.util.Locale,java.lang.String)>(v6, v8, v9, v10);
return v7;
}
public boolean equals(java.lang.Object)
{
java.lang.Integer v10, v8;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.Locale v12, v13;
int v7, v9;
java.lang.String v15, v16;
boolean v11, v14, v17, v18, v6;
java.util.List v4, v5;
java.lang.Class v2, v3;
java.lang.Object v1;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v5 = v1.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 == 0 goto label4;
v7 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
v9 = v1.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v9);
v11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v8, v10);
if v11 == 0 goto label4;
v12 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale>;
v13 = v1.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale>;
v14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v12, v13);
if v14 == 0 goto label4;
v15 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
v16 = v1.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
v17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v15, v16);
if v17 == 0 goto label4;
v18 = 1;
goto label5;
label4:
v18 = 0;
label5:
return v18;
}
public int hashCode()
{
java.lang.Object[] v1;
java.lang.Integer v4;
com.novell.ldapchai.cr.ChaiChallengeSet v0;
java.util.List v2;
java.util.Locale v5;
int v3, v7;
java.lang.String v6;
v0 := @this: com.novell.ldapchai.cr.ChaiChallengeSet;
v1 = newarray (java.lang.Object)[4];
v2 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.List challenges>;
v1[0] = v2;
v3 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: int minRandomRequired>;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v1[1] = v4;
v5 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.util.Locale locale>;
v1[2] = v5;
v6 = v0.<com.novell.ldapchai.cr.ChaiChallengeSet: java.lang.String identifier>;
v1[3] = v6;
v7 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v7;
}
}