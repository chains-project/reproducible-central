class com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory extends java.lang.Object implements com.novell.ldapchai.cr.Answer$ImplementationFactory
{
void <init>()
{
com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory v0;
v0 := @this: com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.novell.ldapchai.cr.PasswordCryptAnswer newAnswer(com.novell.ldapchai.cr.AnswerConfiguration, java.lang.String)
{
com.novell.ldapchai.cr.AnswerConfiguration v1;
com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory v0;
com.novell.ldapchai.cr.PasswordCryptAnswer v3;
java.lang.String v2;
v0 := @this: com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory;
v1 := @parameter0: com.novell.ldapchai.cr.AnswerConfiguration;
v2 := @parameter1: java.lang.String;
v3 = new com.novell.ldapchai.cr.PasswordCryptAnswer;
specialinvoke v3.<com.novell.ldapchai.cr.PasswordCryptAnswer: void <init>(com.novell.ldapchai.cr.AnswerConfiguration,java.lang.String)>(v1, v2);
return v3;
}
public com.novell.ldapchai.cr.PasswordCryptAnswer fromAnswerBean(com.novell.ldapchai.cr.bean.AnswerBean, java.lang.String)
{
com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory v0;
com.novell.ldapchai.cr.Answer$FormatType v6;
com.novell.ldapchai.cr.PasswordCryptAnswer v3;
com.novell.ldapchai.cr.bean.AnswerBean v1;
java.lang.String v2, v4;
boolean v5;
v0 := @this: com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory;
v1 := @parameter0: com.novell.ldapchai.cr.bean.AnswerBean;
v2 := @parameter1: java.lang.String;
v3 = new com.novell.ldapchai.cr.PasswordCryptAnswer;
v4 = virtualinvoke v1.<com.novell.ldapchai.cr.bean.AnswerBean: java.lang.String getAnswerHash()>();
v5 = virtualinvoke v1.<com.novell.ldapchai.cr.bean.AnswerBean: boolean isCaseInsensitive()>();
v6 = virtualinvoke v1.<com.novell.ldapchai.cr.bean.AnswerBean: com.novell.ldapchai.cr.Answer$FormatType getType()>();
specialinvoke v3.<com.novell.ldapchai.cr.PasswordCryptAnswer: void <init>(java.lang.String,boolean,com.novell.ldapchai.cr.Answer$FormatType)>(v4, v5, v6);
return v3;
}
public com.novell.ldapchai.cr.PasswordCryptAnswer fromXml(org.jrivard.xmlchai.XmlElement, boolean, java.lang.String)
{
com.novell.ldapchai.cr.Answer$FormatType v10;
com.novell.ldapchai.cr.PasswordCryptAnswer v14;
java.lang.IllegalArgumentException v11, v12;
java.util.function.Supplier v5, v8;
org.jrivard.xmlchai.XmlElement v1;
com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory v0;
java.util.Optional v4, v7;
java.lang.Object v6, v9;
java.lang.String v13, v3;
boolean v2;
v0 := @this: com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory;
v1 := @parameter0: org.jrivard.xmlchai.XmlElement;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.String;
v4 = interfaceinvoke v1.<org.jrivard.xmlchai.XmlElement: java.util.Optional getText()>();
v5 = staticinvoke <com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory$lambda_fromXml_0__34: java.util.function.Supplier bootstrap$()>();
v6 = virtualinvoke v4.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>(v5);
v7 = interfaceinvoke v1.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("format");
v8 = staticinvoke <com.novell.ldapchai.cr.PasswordCryptAnswer$PasswordCryptAnswerFactory$lambda_fromXml_1__35: java.util.function.Supplier bootstrap$()>();
v9 = virtualinvoke v7.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>(v8);
label1:
v10 = staticinvoke <com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$FormatType valueOf(java.lang.String)>(v9);
label2:
goto label4;
label3:
v11 := @caughtexception;
v12 = new java.lang.IllegalArgumentException;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unknown content format specified in xml format value: \'\u0001\'");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v13);
throw v12;
label4:
v14 = new com.novell.ldapchai.cr.PasswordCryptAnswer;
specialinvoke v14.<com.novell.ldapchai.cr.PasswordCryptAnswer: void <init>(java.lang.String,boolean,com.novell.ldapchai.cr.Answer$FormatType)>(v6, v2, v10);
return v14;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
}