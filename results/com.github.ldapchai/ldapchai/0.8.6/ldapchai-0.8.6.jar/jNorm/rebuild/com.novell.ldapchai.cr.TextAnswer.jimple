class com.novell.ldapchai.cr.TextAnswer extends java.lang.Object implements com.novell.ldapchai.cr.Answer
{
private final java.lang.String answer;
private final boolean caseInsensitive;
void <init>(java.lang.String, boolean)
{
int v3;
com.novell.ldapchai.cr.TextAnswer v0;
java.lang.String v1;
java.lang.IllegalArgumentException v4;
boolean v2;
v0 := @this: com.novell.ldapchai.cr.TextAnswer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == null goto label1;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
if v3 >= 1 goto label2;
label1:
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("missing answer text");
throw v4;
label2:
v0.<com.novell.ldapchai.cr.TextAnswer: java.lang.String answer> = v1;
v0.<com.novell.ldapchai.cr.TextAnswer: boolean caseInsensitive> = v2;
return;
}
public org.jrivard.xmlchai.XmlElement toXml()
{
com.novell.ldapchai.cr.Answer$FormatType v4;
com.novell.ldapchai.cr.TextAnswer v0;
java.lang.String v3, v5;
org.jrivard.xmlchai.XmlFactory v1;
org.jrivard.xmlchai.XmlElement v2;
v0 := @this: com.novell.ldapchai.cr.TextAnswer;
v1 = staticinvoke <org.jrivard.xmlchai.XmlFactory: org.jrivard.xmlchai.XmlFactory getFactory()>();
v2 = interfaceinvoke v1.<org.jrivard.xmlchai.XmlFactory: org.jrivard.xmlchai.XmlElement newElement(java.lang.String)>("answer");
v3 = v0.<com.novell.ldapchai.cr.TextAnswer: java.lang.String answer>;
interfaceinvoke v2.<org.jrivard.xmlchai.XmlElement: void setText(java.lang.String)>(v3);
v4 = <com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$FormatType TEXT>;
v5 = virtualinvoke v4.<com.novell.ldapchai.cr.Answer$FormatType: java.lang.String toString()>();
interfaceinvoke v2.<org.jrivard.xmlchai.XmlElement: void setAttribute(java.lang.String,java.lang.String)>("format", v5);
return v2;
}
public boolean testAnswer(java.lang.String)
{
com.novell.ldapchai.cr.TextAnswer v0;
java.lang.String v1, v3, v5;
boolean v2, v4;
v0 := @this: com.novell.ldapchai.cr.TextAnswer;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
return 0;
label1:
v2 = v0.<com.novell.ldapchai.cr.TextAnswer: boolean caseInsensitive>;
if v2 == 0 goto label2;
v3 = v0.<com.novell.ldapchai.cr.TextAnswer: java.lang.String answer>;
v4 = virtualinvoke v1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v3);
goto label3;
label2:
v5 = v0.<com.novell.ldapchai.cr.TextAnswer: java.lang.String answer>;
v4 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v5);
label3:
return v4;
}
public com.novell.ldapchai.cr.bean.AnswerBean asAnswerBean()
{
com.novell.ldapchai.cr.Answer$FormatType v2;
com.novell.ldapchai.cr.bean.AnswerBean v1;
com.novell.ldapchai.cr.TextAnswer v0;
java.lang.String v3;
boolean v4;
v0 := @this: com.novell.ldapchai.cr.TextAnswer;
v1 = new com.novell.ldapchai.cr.bean.AnswerBean;
v2 = <com.novell.ldapchai.cr.Answer$FormatType: com.novell.ldapchai.cr.Answer$FormatType TEXT>;
v3 = v0.<com.novell.ldapchai.cr.TextAnswer: java.lang.String answer>;
v4 = v0.<com.novell.ldapchai.cr.TextAnswer: boolean caseInsensitive>;
specialinvoke v1.<com.novell.ldapchai.cr.bean.AnswerBean: void <init>(com.novell.ldapchai.cr.Answer$FormatType,java.lang.String,java.lang.String,java.lang.String,int,boolean)>(v2, v3, null, null, 0, v4);
return v1;
}
}