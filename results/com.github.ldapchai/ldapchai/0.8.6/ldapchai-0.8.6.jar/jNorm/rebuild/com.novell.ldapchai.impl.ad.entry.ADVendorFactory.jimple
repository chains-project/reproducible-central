public class com.novell.ldapchai.impl.ad.entry.ADVendorFactory extends java.lang.Object implements com.novell.ldapchai.impl.VendorFactory
{
private static final java.lang.String ROOT_DSE_ATTRIBUTE_NAMING_CONTEXT;
public void <init>()
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.novell.ldapchai.impl.ad.entry.User newChaiUser(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.ad.entry.UserImpl v3;
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.ad.entry.UserImpl;
specialinvoke v3.<com.novell.ldapchai.impl.ad.entry.UserImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.impl.ad.entry.GroupImpl v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.ad.entry.GroupImpl;
specialinvoke v3.<com.novell.ldapchai.impl.ad.entry.GroupImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.ad.entry.TopImpl v3;
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.ad.entry.TopImpl;
specialinvoke v3.<com.novell.ldapchai.impl.ad.entry.TopImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
com.novell.ldapchai.provider.DirectoryVendor v1;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 = <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor ACTIVE_DIRECTORY>;
return v1;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap()
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
com.novell.ldapchai.impl.ad.ADErrorMap v1;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 = staticinvoke <com.novell.ldapchai.impl.ad.ADErrorMap: com.novell.ldapchai.impl.ad.ADErrorMap instance()>();
return v1;
}
public java.util.Set interestedDseAttributes()
{
java.util.Set v1;
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("rootDomainNamingContext");
return v1;
}
public boolean detectVendorFromRootDSEData(java.util.Map)
{
java.util.Iterator v4;
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
java.util.Map v1;
java.lang.Object v3, v6;
boolean v2, v5, v7;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: java.util.Map;
if v1 == null goto label2;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("rootDomainNamingContext");
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>("rootDomainNamingContext");
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v6.<java.lang.String: boolean contains(java.lang.CharSequence)>("DC=");
if v7 == 0 goto label1;
return 1;
label2:
return 0;
}
public java.time.Instant stringToInstant(java.lang.String)
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
java.lang.String v1;
java.time.Instant v2;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.ad.entry.ADEntries: java.time.Instant convertWinEpochToDate(java.lang.String)>(v1);
return v2;
}
public java.lang.String instantToString(java.time.Instant)
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
java.lang.String v2;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: java.time.Instant;
v2 = staticinvoke <com.novell.ldapchai.impl.ad.entry.ADEntries: java.lang.String convertDateToWinEpoch(java.time.Instant)>(v1);
return v2;
}
public boolean allowWatchdogDisconnect(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.impl.ad.entry.ADVendorFactory v0;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
v0 := @this: com.novell.ldapchai.impl.ad.entry.ADVendorFactory;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
return 1;
}
}