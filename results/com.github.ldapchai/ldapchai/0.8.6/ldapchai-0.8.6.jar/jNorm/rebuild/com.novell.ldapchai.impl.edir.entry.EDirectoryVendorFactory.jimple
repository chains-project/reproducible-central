public class com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory extends java.lang.Object implements com.novell.ldapchai.impl.VendorFactory
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private static final java.lang.String ROOT_DSE_ATTRIBUTE_VENDOR_VERSION;
public void <init>()
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.novell.ldapchai.impl.edir.entry.InetOrgPerson newChaiUser(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v3;
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
specialinvoke v3.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.impl.edir.entry.GroupOfNames newChaiGroup(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.edir.entry.GroupOfNamesImpl v3;
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.edir.entry.GroupOfNamesImpl;
specialinvoke v3.<com.novell.ldapchai.impl.edir.entry.GroupOfNamesImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
com.novell.ldapchai.impl.edir.entry.ChaiEntryImpl v3;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.edir.entry.ChaiEntryImpl;
specialinvoke v3.<com.novell.ldapchai.impl.edir.entry.ChaiEntryImpl: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
com.novell.ldapchai.provider.DirectoryVendor v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 = <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor EDIRECTORY>;
return v1;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap()
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
com.novell.ldapchai.impl.edir.EdirErrorMap v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 = staticinvoke <com.novell.ldapchai.impl.edir.EdirErrorMap: com.novell.ldapchai.impl.edir.EdirErrorMap instance()>();
return v1;
}
public java.util.Set interestedDseAttributes()
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
java.util.Set v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("vendorVersion");
return v1;
}
public boolean detectVendorFromRootDSEData(java.util.Map)
{
java.util.Iterator v4;
java.util.Map v1;
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
java.lang.Object v3, v6;
boolean v2, v5, v7;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: java.util.Map;
if v1 == null goto label2;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("vendorVersion");
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>("vendorVersion");
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v6.<java.lang.String: boolean contains(java.lang.CharSequence)>("eDirectory");
if v7 == 0 goto label1;
return 1;
label2:
return 0;
}
public java.time.Instant stringToInstant(java.lang.String)
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
java.lang.String v1;
java.time.Instant v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.time.Instant convertZuluToInstant(java.lang.String)>(v1);
return v2;
}
public java.lang.String instantToString(java.time.Instant)
{
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
java.lang.String v2;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: java.time.Instant;
v2 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.lang.String convertInstantToZulu(java.time.Instant)>(v1);
return v2;
}
public boolean allowWatchdogDisconnect(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.ChaiUser v9;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
java.util.function.Supplier v13, v15;
com.novell.ldapchai.ChaiEntryFactory v8;
java.lang.String v7;
boolean v10, v4;
com.novell.ldapchai.exception.ChaiException v11;
com.novell.ldapchai.provider.ChaiConfiguration v2, v5;
com.novell.ldapchai.provider.ChaiSetting v3, v6;
com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory v0;
com.novell.ldapchai.util.internal.ChaiLogger v12, v14;
v0 := @this: com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
v2 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProviderImplementor: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v3 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting WATCHDOG_DISABLE_IF_PW_EXPIRED>;
v4 = virtualinvoke v2.<com.novell.ldapchai.provider.ChaiConfiguration: boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)>(v3);
if v4 != 0 goto label1;
return 1;
label1:
v5 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProviderImplementor: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v6 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_DN>;
v7 = virtualinvoke v5.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v6);
v8 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProviderImplementor: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v9 = virtualinvoke v8.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String)>(v7);
v10 = interfaceinvoke v9.<com.novell.ldapchai.ChaiUser: boolean isPasswordExpired()>();
label2:
goto label4;
label3:
v11 := @caughtexception;
v12 = <com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v13 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory$lambda_allowWatchdogDisconnect_0__70: java.util.function.Supplier bootstrap$(com.novell.ldapchai.exception.ChaiException)>(v11);
virtualinvoke v12.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v13);
v10 = 1;
label4:
if v10 == 0 goto label5;
v14 = <com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v15 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory$lambda_allowWatchdogDisconnect_1__69: java.util.function.Supplier bootstrap$(com.novell.ldapchai.provider.ChaiProviderImplementor)>(v1);
virtualinvoke v14.<com.novell.ldapchai.util.internal.ChaiLogger: void info(java.util.function.Supplier)>(v15);
return 0;
label5:
return 1;
catch com.novell.ldapchai.exception.ChaiException from label1 to label2 with label3;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/impl/edir/entry/EDirectoryVendorFactory;");
<com.novell.ldapchai.impl.edir.entry.EDirectoryVendorFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}