public class com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy extends java.lang.Object
{
private final java.util.List ruleSets;
public void <init>(java.util.List)
{
java.util.List v1, v4;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy v0;
java.lang.NullPointerException v2;
java.util.ArrayList v3;
v0 := @this: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy;
v1 := @parameter0: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("ruleSets may not be null");
throw v2;
label1:
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>(java.util.Collection)>(v1);
v4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v3);
v0.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy: java.util.List ruleSets> = v4;
return;
}
public java.util.List getComplexityRuleSets()
{
java.util.List v1;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy v0;
v0 := @this: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy;
v1 = v0.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy: java.util.List ruleSets>;
return v1;
}
public boolean equals(java.lang.Object)
{
java.util.List v4, v5;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy v0;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy: java.util.List ruleSets>;
v5 = v1.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy: java.util.List ruleSets>;
v6 = interfaceinvoke v4.<java.util.List: boolean equals(java.lang.Object)>(v5);
if v6 != 0 goto label4;
return 0;
label4:
return 1;
}
public int hashCode()
{
int v2;
java.util.List v1;
com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy v0;
v0 := @this: com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy;
v1 = v0.<com.novell.ldapchai.impl.edir.value.NspmComplexityRules$Policy: java.util.List ruleSets>;
v2 = interfaceinvoke v1.<java.util.List: int hashCode()>();
return v2;
}
}