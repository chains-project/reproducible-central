final enum class com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError extends java.lang.Enum
{
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError NO_SUCH_ENTRY;
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError USER_INTRUDER_LOCK;
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_TOO_EARLY;
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError INVALID_CREDENTIALS;
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_IN_HISTORY;
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_REQ_CHANGES;
public static final enum com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError UNKNOWN;
private final com.novell.ldapchai.exception.ChaiError chaiErrorCode;
private final boolean permanent;
private final boolean authentication;
private java.util.List errorStrings;
private static final com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] $VALUES;
public static com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] values()
{
java.lang.Object v1;
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] v0;
v0 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/impl/oracleds/entry/OracleDSErrorMap$OracleDSError;", v0);
return v1;
}
private transient void <init>(java.lang.String, int, com.novell.ldapchai.exception.ChaiError, boolean, boolean, java.lang.String[])
{
java.lang.String[] v6;
com.novell.ldapchai.exception.ChaiError v3;
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v0;
java.util.List v7, v8;
int v2;
java.lang.String v1;
boolean v4, v5;
v0 := @this: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: com.novell.ldapchai.exception.ChaiError;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: java.lang.String[];
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.exception.ChaiError chaiErrorCode> = v3;
v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: boolean permanent> = v4;
v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: boolean authentication> = v5;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v6);
v8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v7);
v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: java.util.List errorStrings> = v8;
return;
}
public boolean isPermanent()
{
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v0;
boolean v1;
v0 := @this: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v1 = v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: boolean permanent>;
return v1;
}
public boolean isAuthentication()
{
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v0;
boolean v1;
v0 := @this: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v1 = v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: boolean authentication>;
return v1;
}
public com.novell.ldapchai.exception.ChaiError getChaiErrorCode()
{
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v0;
com.novell.ldapchai.exception.ChaiError v1;
v0 := @this: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v1 = v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.exception.ChaiError chaiErrorCode>;
return v1;
}
public java.util.List getErrorStrings()
{
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v0;
java.util.List v1;
v0 := @this: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v1 = v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: java.util.List errorStrings>;
return v1;
}
private static com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] $values()
{
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v1, v2, v3, v4, v5, v6, v7;
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] v0;
v0 = newarray (com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError)[7];
v1 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError NO_SUCH_ENTRY>;
v0[0] = v1;
v2 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError USER_INTRUDER_LOCK>;
v0[1] = v2;
v3 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_TOO_EARLY>;
v0[2] = v3;
v4 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError INVALID_CREDENTIALS>;
v0[3] = v4;
v5 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_IN_HISTORY>;
v0[4] = v5;
v6 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_REQ_CHANGES>;
v0[5] = v6;
v7 = <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError UNKNOWN>;
v0[6] = v7;
return v0;
}
static void <clinit>()
{
java.lang.String[] v11, v14, v17, v2, v20, v5, v8;
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] v21;
com.novell.ldapchai.exception.ChaiError v1, v10, v13, v16, v19, v4, v7;
com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError v0, v12, v15, v18, v3, v6, v9;
v0 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v1 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError NO_SUCH_ENTRY>;
v2 = newarray (java.lang.String)[1];
v2[0] = "error code 32";
specialinvoke v0.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("NO_SUCH_ENTRY", 0, v1, 1, 0, v2);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError NO_SUCH_ENTRY> = v0;
v3 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v4 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError INTRUDER_LOCKOUT>;
v5 = newarray (java.lang.String)[1];
v5[0] = "error code 19 - Exceed password retry limit. Account locked";
specialinvoke v3.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("USER_INTRUDER_LOCK", 1, v4, 1, 0, v5);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError USER_INTRUDER_LOCK> = v3;
v6 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v7 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError PASSWORD_TOO_SOON>;
v8 = newarray (java.lang.String)[1];
v8[0] = "error code 19 - within password minimum age";
specialinvoke v6.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("PASSWORD_TOO_EARLY", 2, v7, 1, 0, v8);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_TOO_EARLY> = v6;
v9 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v10 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError FAILED_AUTHENTICATION>;
v11 = newarray (java.lang.String)[1];
v11[0] = "error code 49 - Invalid Credentials";
specialinvoke v9.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("INVALID_CREDENTIALS", 3, v10, 1, 0, v11);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError INVALID_CREDENTIALS> = v9;
v12 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v13 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError PASSWORD_PREVIOUSLYUSED>;
v14 = newarray (java.lang.String)[1];
v14[0] = "error code 19 - password in history";
specialinvoke v12.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("PASSWORD_IN_HISTORY", 4, v13, 1, 0, v14);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_IN_HISTORY> = v12;
v15 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v16 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError NEW_PASSWORD_REQUIRED>;
v17 = newarray (java.lang.String)[1];
v17[0] = "error code 53 - Password was reset and must be changed";
specialinvoke v15.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("PASSWORD_REQ_CHANGES", 5, v16, 1, 0, v17);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError PASSWORD_REQ_CHANGES> = v15;
v18 = new com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError;
v19 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
v20 = newarray (java.lang.String)[0];
specialinvoke v18.<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: void <init>(java.lang.String,int,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.String[])>("UNKNOWN", 6, v19, 1, 0, v20);
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError UNKNOWN> = v18;
v21 = staticinvoke <com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] $values()>();
<com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError: com.novell.ldapchai.impl.oracleds.entry.OracleDSErrorMap$OracleDSError[] $VALUES> = v21;
return;
}
}