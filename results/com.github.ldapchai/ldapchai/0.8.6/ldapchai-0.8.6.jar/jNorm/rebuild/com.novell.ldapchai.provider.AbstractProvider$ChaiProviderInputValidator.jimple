public class com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator extends java.lang.Object implements com.novell.ldapchai.provider.ChaiProvider
{
public void <init>()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public final void close()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return;
}
public boolean isConnected()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return 0;
}
public com.novell.ldapchai.provider.ProviderStatistics getProviderStatistics()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return null;
}
public final boolean compareStringAttribute(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.String v1, v2, v3;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v4, v5, v6;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
if v2 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v4;
label1:
if v3 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("value must not be null");
throw v5;
label2:
if v1 != null goto label3;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v6;
label3:
return 0;
}
public final void createEntry(java.lang.String, java.lang.String, java.util.Map)
{
java.util.Map v3;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v4, v5;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Map;
if v2 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseObjectClass must not be null");
throw v4;
label1:
if v1 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v5;
label2:
return;
}
public final void createEntry(java.lang.String, java.util.Set, java.util.Map)
{
java.util.Set v2;
java.lang.NullPointerException v4, v6, v7;
java.util.Map v3;
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
boolean v5;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: java.util.Map;
if v2 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseObjectClass must not be null");
throw v4;
label1:
v5 = interfaceinvoke v2.<java.util.Set: boolean isEmpty()>();
if v5 == 0 goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseObjectClass must not be empty");
throw v6;
label2:
if v1 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v7;
label3:
return;
}
public final void renameEntry(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.String v1, v2, v3;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v4, v5, v6;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
if v3 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("newParentDN must not be null");
throw v4;
label1:
if v2 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("newRDN must not be null");
throw v5;
label2:
if v1 != null goto label3;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v6;
label3:
return;
}
public final void deleteEntry(java.lang.String)
{
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v2;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v2;
label1:
return;
}
public final void deleteStringAttributeValue(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.String v1, v2, v3;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v4, v5;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
if v1 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v4;
label1:
if v2 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v5;
label2:
return;
}
public final javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)
{
javax.naming.ldap.ExtendedRequest v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v2;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: javax.naming.ldap.ExtendedRequest;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("request must not be null");
throw v2;
label1:
return null;
}
public com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return null;
}
public void init(com.novell.ldapchai.provider.ChaiConfiguration) throws com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
return;
}
public final byte[][] readMultiByteAttribute(java.lang.String, java.lang.String)
{
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v3, v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v3;
label1:
if v2 != null goto label2;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v4;
label2:
return null;
}
public final java.util.Set readMultiStringAttribute(java.lang.String, java.lang.String)
{
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v3, v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v3;
label1:
if v2 != null goto label2;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v4;
label2:
return null;
}
public final java.lang.String readStringAttribute(java.lang.String, java.lang.String)
{
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v3, v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v3;
label1:
if v2 != null goto label2;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v4;
label2:
return null;
}
public final java.util.Map readStringAttributes(java.lang.String, java.util.Set)
{
java.util.Set v2;
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v3;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v3;
label1:
return null;
}
public final void replaceStringAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
{
java.lang.NullPointerException v5, v6, v7, v8;
java.lang.String v1, v2, v3, v4;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v5;
label1:
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v6;
label2:
if v3 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("oldValue must not be null");
throw v7;
label3:
if v4 != null goto label4;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>(java.lang.String)>("newValue must not be null");
throw v8;
label4:
return;
}
public final java.util.Map search(java.lang.String, com.novell.ldapchai.util.SearchHelper)
{
com.novell.ldapchai.util.SearchHelper v2;
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v3, v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseDN must not be null");
throw v3;
label1:
if v2 != null goto label2;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("searchHelper must not be null");
throw v4;
label2:
return null;
}
public final java.util.Map search(java.lang.String, java.lang.String, java.util.Set, com.novell.ldapchai.provider.SearchScope)
{
java.util.Set v3;
java.lang.NullPointerException v5, v6, v7;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: com.novell.ldapchai.provider.SearchScope;
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseDN must not be null");
throw v5;
label1:
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("filter must not be null");
throw v6;
label2:
if v4 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("searchScope must not be null");
throw v7;
label3:
return null;
}
public final java.util.Map searchMultiValues(java.lang.String, com.novell.ldapchai.util.SearchHelper)
{
com.novell.ldapchai.util.SearchHelper v2;
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
java.lang.NullPointerException v3, v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
if v1 != null goto label1;
v3 = new java.lang.NullPointerException;
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseDN must not be null");
throw v3;
label1:
if v2 != null goto label2;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v4;
label2:
return null;
}
public final java.util.Map searchMultiValues(java.lang.String, java.lang.String, java.util.Set, com.novell.ldapchai.provider.SearchScope)
{
java.util.Set v3;
java.lang.NullPointerException v5, v6, v7;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: com.novell.ldapchai.provider.SearchScope;
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("baseDN must not be null");
throw v5;
label1:
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("filter must not be null");
throw v6;
label2:
if v4 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("searchScope must not be null");
throw v7;
label3:
return null;
}
public final void writeBinaryAttribute(java.lang.String, java.lang.String, byte[][], boolean)
{
java.lang.NullPointerException v5, v6, v7;
byte[][] v3;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[][];
v4 := @parameter3: boolean;
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v5;
label1:
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v6;
label2:
if v3 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("values must not be null");
throw v7;
label3:
return;
}
public final void writeBinaryAttribute(java.lang.String, java.lang.String, byte[][], boolean, com.novell.ldapchai.ChaiRequestControl[])
{
java.lang.NullPointerException v6, v7, v8;
byte[][] v3;
com.novell.ldapchai.ChaiRequestControl[] v5;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[][];
v4 := @parameter3: boolean;
v5 := @parameter4: com.novell.ldapchai.ChaiRequestControl[];
if v1 != null goto label1;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v6;
label1:
if v2 != null goto label2;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v7;
label2:
if v3 != null goto label3;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>(java.lang.String)>("values must not be null");
throw v8;
label3:
return;
}
public final void writeStringAttribute(java.lang.String, java.lang.String, java.util.Set, boolean)
{
java.util.Set v3;
java.lang.NullPointerException v5, v6, v7;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: boolean;
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v5;
label1:
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v6;
label2:
if v3 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("value must not be null");
throw v7;
label3:
return;
}
public final void writeStringAttributes(java.lang.String, java.util.Map, boolean)
{
java.lang.NullPointerException v4, v5, v7;
java.util.Map v2;
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
boolean v3, v6;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: boolean;
if v1 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v4;
label1:
if v2 != null goto label2;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeValues must not be null");
throw v5;
label2:
v6 = interfaceinvoke v2.<java.util.Map: boolean isEmpty()>();
if v6 == 0 goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeValues must not be empty");
throw v7;
label3:
return;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor() throws com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return null;
}
public void replaceBinaryAttribute(java.lang.String, java.lang.String, byte[], byte[]) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[] v3, v4;
java.lang.NullPointerException v5, v6, v7, v8;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[];
v4 := @parameter3: byte[];
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryDN must not be null");
throw v5;
label1:
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("attributeName must not be null");
throw v6;
label2:
if v3 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("oldValue must not be null");
throw v7;
label3:
if v4 != null goto label4;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>(java.lang.String)>("newValue must not be null");
throw v8;
label4:
return;
}
public com.novell.ldapchai.ChaiEntryFactory getEntryFactory()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return null;
}
public com.novell.ldapchai.provider.ChaiProviderFactory getProviderFactory()
{
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v0;
v0 := @this: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator;
return null;
}
}