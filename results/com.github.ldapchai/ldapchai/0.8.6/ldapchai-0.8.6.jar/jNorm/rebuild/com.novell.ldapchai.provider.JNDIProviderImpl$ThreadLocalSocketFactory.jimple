public abstract class com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory extends javax.net.SocketFactory
{
static java.lang.ThreadLocal local;
public void <init>()
{
com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory v0;
v0 := @this: com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory;
specialinvoke v0.<javax.net.SocketFactory: void <init>()>();
return;
}
public static javax.net.SocketFactory getDefault()
{
java.lang.IllegalStateException v2;
java.lang.Object v1;
java.lang.ThreadLocal v0;
v0 = <com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory: java.lang.ThreadLocal local>;
v1 = virtualinvoke v0.<java.lang.ThreadLocal: java.lang.Object get()>();
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("missing threadlocal socketfactory for ChaiProvider");
throw v2;
label1:
return v1;
}
public static void set(javax.net.SocketFactory)
{
javax.net.SocketFactory v0;
java.lang.ThreadLocal v1;
v0 := @parameter0: javax.net.SocketFactory;
v1 = <com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory: java.lang.ThreadLocal local>;
virtualinvoke v1.<java.lang.ThreadLocal: void set(java.lang.Object)>(v0);
return;
}
public static void remove()
{
java.lang.ThreadLocal v0;
v0 = <com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory: java.lang.ThreadLocal local>;
virtualinvoke v0.<java.lang.ThreadLocal: void remove()>();
return;
}
static void <clinit>()
{
java.lang.ThreadLocal v0;
v0 = new java.lang.ThreadLocal;
specialinvoke v0.<java.lang.ThreadLocal: void <init>()>();
<com.novell.ldapchai.provider.JNDIProviderImpl$ThreadLocalSocketFactory: java.lang.ThreadLocal local> = v0;
return;
}
}