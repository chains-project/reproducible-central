class com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder extends java.lang.Object
{
private final com.novell.ldapchai.provider.ChaiProviderImplementor realProvider;
private final com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier allowDisconnectSupplier;
private final java.time.Instant connectionEstablishedTime;
void <init>(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier v2;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
java.time.Instant v3;
v0 := @this: com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier;
specialinvoke v2.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier: void <init>(com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder)>(v0);
v0.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder: com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier allowDisconnectSupplier> = v2;
v3 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v0.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder: java.time.Instant connectionEstablishedTime> = v3;
v0.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder: com.novell.ldapchai.provider.ChaiProviderImplementor realProvider> = v1;
return;
}
public com.novell.ldapchai.provider.ChaiProviderImplementor getRealProvider()
{
com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder v0;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder;
v1 = v0.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder: com.novell.ldapchai.provider.ChaiProviderImplementor realProvider>;
return v1;
}
public com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier getAllowDisconnectSupplier()
{
com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder v0;
com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder;
v1 = v0.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder: com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder$DetectAllowDisconnectSupplier allowDisconnectSupplier>;
return v1;
}
public java.time.Instant getConnectionEstablishedTime()
{
com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder v0;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder;
v1 = v0.<com.novell.ldapchai.provider.WatchdogProviderHolder$InternalHolder: java.time.Instant connectionEstablishedTime>;
return v1;
}
}