class com.novell.ldapchai.provider.WatchdogService$WatchdogTask extends java.lang.Object implements java.lang.Runnable
{
final com.novell.ldapchai.provider.WatchdogService this$0;
private void <init>(com.novell.ldapchai.provider.WatchdogService)
{
com.novell.ldapchai.provider.WatchdogService v1;
com.novell.ldapchai.provider.WatchdogService$WatchdogTask v0;
v0 := @this: com.novell.ldapchai.provider.WatchdogService$WatchdogTask;
v1 := @parameter0: com.novell.ldapchai.provider.WatchdogService;
v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.lang.Throwable v27, v9;
java.util.function.Supplier v11, v18, v21;
java.util.HashSet v1;
int v15, v16;
boolean v19, v6;
java.util.Iterator v5;
java.util.Collection v14, v4;
com.novell.ldapchai.provider.WatchdogService v12, v2, v22, v24, v25, v28, v8;
java.util.concurrent.locks.Lock v23, v26, v29;
com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder v13, v3;
java.lang.Object v7;
com.novell.ldapchai.provider.WatchdogService$WatchdogTask v0;
com.novell.ldapchai.util.internal.ChaiLogger v10, v17, v20;
v0 := @this: com.novell.ldapchai.provider.WatchdogService$WatchdogTask;
v1 = new java.util.HashSet;
v2 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
v3 = v2.<com.novell.ldapchai.provider.WatchdogService: com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder issuedWatchdogWrappers>;
v4 = virtualinvoke v3.<com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder: java.util.Collection allValues()>();
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v4);
v5 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label01:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label05;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
label02:
v8 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
specialinvoke v8.<com.novell.ldapchai.provider.WatchdogService: void checkProvider(com.novell.ldapchai.provider.WatchdogWrapper)>(v7);
label03:
goto label01;
label04:
v9 := @caughtexception;
v10 = <com.novell.ldapchai.provider.WatchdogService: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v11 = staticinvoke <com.novell.ldapchai.provider.WatchdogService$WatchdogTask$lambda_run_0__180: java.util.function.Supplier bootstrap$(java.lang.Throwable)>(v9);
virtualinvoke v10.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v11);
goto label01;
label05:
v12 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
v13 = v12.<com.novell.ldapchai.provider.WatchdogService: com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder issuedWatchdogWrappers>;
v14 = virtualinvoke v13.<com.novell.ldapchai.provider.ChaiProviderFactory$WeakReferenceHolder: java.util.Collection allValues()>();
v15 = interfaceinvoke v14.<java.util.Collection: int size()>();
v16 = interfaceinvoke v1.<java.util.Set: int size()>();
if v16 == v15 goto label06;
v17 = <com.novell.ldapchai.provider.WatchdogService: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v18 = staticinvoke <com.novell.ldapchai.provider.WatchdogService$WatchdogTask$lambda_run_1__179: java.util.function.Supplier bootstrap$(int)>(v15);
virtualinvoke v17.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v18);
label06:
v19 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v19 == 0 goto label10;
v20 = <com.novell.ldapchai.provider.WatchdogService: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v21 = staticinvoke <com.novell.ldapchai.provider.WatchdogService$WatchdogTask$lambda_run_2__178: java.util.function.Supplier bootstrap$()>();
virtualinvoke v20.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v21);
v22 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
v23 = v22.<com.novell.ldapchai.provider.WatchdogService: java.util.concurrent.locks.Lock serviceThreadLock>;
interfaceinvoke v23.<java.util.concurrent.locks.Lock: void lock()>();
label07:
v24 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
specialinvoke v24.<com.novell.ldapchai.provider.WatchdogService: void stopWatchdogThread()>();
label08:
v25 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
v26 = v25.<com.novell.ldapchai.provider.WatchdogService: java.util.concurrent.locks.Lock serviceThreadLock>;
interfaceinvoke v26.<java.util.concurrent.locks.Lock: void unlock()>();
goto label10;
label09:
v27 := @caughtexception;
v28 = v0.<com.novell.ldapchai.provider.WatchdogService$WatchdogTask: com.novell.ldapchai.provider.WatchdogService this$0>;
v29 = v28.<com.novell.ldapchai.provider.WatchdogService: java.util.concurrent.locks.Lock serviceThreadLock>;
interfaceinvoke v29.<java.util.concurrent.locks.Lock: void unlock()>();
throw v27;
label10:
return;
catch java.lang.Throwable from label02 to label03 with label04;
catch java.lang.Throwable from label07 to label08 with label09;
}
}