public final class com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191 extends java.lang.Object implements com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction
{
javax.naming.ldap.ExtendedRequest cap0;
public static com.novell.ldapchai.provider.WatchdogProviderHolder$LdapFunction bootstrap$(javax.naming.ldap.ExtendedRequest)
{
com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191 v1;
javax.naming.ldap.ExtendedRequest v0;
v0 := @parameter0: javax.naming.ldap.ExtendedRequest;
v1 = new com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191;
specialinvoke v1.<com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191: void <init>(javax.naming.ldap.ExtendedRequest)>(v0);
return v1;
}
public void <init>(javax.naming.ldap.ExtendedRequest)
{
com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191 v0;
javax.naming.ldap.ExtendedRequest v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191;
v1 := @parameter0: javax.naming.ldap.ExtendedRequest;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191: javax.naming.ldap.ExtendedRequest cap0> = v1;
return;
}
public java.lang.Object execute(com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191 v0;
javax.naming.ldap.ExtendedRequest v2;
javax.naming.ldap.ExtendedResponse v3;
com.novell.ldapchai.provider.ChaiProvider v1;
v0 := @this: com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
v2 = v0.<com.novell.ldapchai.provider.WatchdogWrapper$lambda_extendedOperation_8__191: javax.naming.ldap.ExtendedRequest cap0>;
v3 = staticinvoke <com.novell.ldapchai.provider.WatchdogWrapper: javax.naming.ldap.ExtendedResponse lambda$extendedOperation$8(javax.naming.ldap.ExtendedRequest,com.novell.ldapchai.provider.ChaiProvider)>(v2, v1);
return v3;
}
}