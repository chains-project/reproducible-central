public class com.novell.ldapchai.util.GenericRuleHelper extends java.lang.Object implements com.novell.ldapchai.util.PasswordRuleHelper
{
private final com.novell.ldapchai.ChaiPasswordPolicy wrappedPolicy;
public void <init>(com.novell.ldapchai.ChaiPasswordPolicy)
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordPolicy v1;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 := @parameter0: com.novell.ldapchai.ChaiPasswordPolicy;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.util.GenericRuleHelper: com.novell.ldapchai.ChaiPasswordPolicy wrappedPolicy> = v1;
return;
}
public boolean isAllowNumeric()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v2;
boolean v3;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowNumeric>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
v3 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: boolean convertStrToBoolean(java.lang.String)>(v2);
return v3;
}
public boolean isAllowFirstCharNumeric()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowFirstCharNumeric>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isAllowLastCharNumeric()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowLastCharNumeric>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isAllowSpecial()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowSpecial>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isAllowFirstCharSpecial()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowFirstCharSpecial>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isAllowLastCharSpecial()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowLastCharSpecial>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public int getMaximumSequentialRepeat()
{
int v2;
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumSequentialRepeat>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: int readNumericSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public int getMaximumRepeat()
{
int v2;
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumRepeat>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: int readNumericSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public int getMinimumLifetime()
{
int v2;
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLifetime>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: int readNumericSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public final java.lang.String getChangeMessage()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ChangeMessage>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public int getExpirationInterval()
{
int v2;
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ExpirationInterval>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: int readNumericSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isCaseSensitive()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule CaseSensitive>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isEnforceAtLogin()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule EnforceAtLogin>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isUniqueRequired()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule UniqueRequired>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
public boolean isPolicyEnabled()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
boolean v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule PolicyEnabled>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v2;
}
private java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordPolicy v2;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v3;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 := @parameter0: com.novell.ldapchai.ChaiPasswordRule;
v2 = v0.<com.novell.ldapchai.util.GenericRuleHelper: com.novell.ldapchai.ChaiPasswordPolicy wrappedPolicy>;
v3 = interfaceinvoke v2.<com.novell.ldapchai.ChaiPasswordPolicy: java.lang.String getValue(com.novell.ldapchai.ChaiPasswordRule)>(v1);
return v3;
}
private boolean readBooleanSetting(com.novell.ldapchai.ChaiPasswordRule)
{
com.novell.ldapchai.util.GenericRuleHelper v0;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v2;
boolean v3;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 := @parameter0: com.novell.ldapchai.ChaiPasswordRule;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
v3 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: boolean convertStrToBoolean(java.lang.String)>(v2);
return v3;
}
private int readNumericSetting(com.novell.ldapchai.ChaiPasswordRule)
{
com.novell.ldapchai.util.GenericRuleHelper v0;
int v3;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 := @parameter0: com.novell.ldapchai.ChaiPasswordRule;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
v3 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v2, 0);
return v3;
}
public java.util.List getDisallowedValues()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
java.util.List v3;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule DisallowedValues>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
v3 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.util.List tokenizeString(java.lang.String,java.lang.String)>(v2, "\n");
return v3;
}
public java.util.List getDisallowedAttributes()
{
com.novell.ldapchai.util.GenericRuleHelper v0;
java.util.List v3;
com.novell.ldapchai.ChaiPasswordRule v1;
java.lang.String v2;
v0 := @this: com.novell.ldapchai.util.GenericRuleHelper;
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule DisallowedAttributes>;
v2 = specialinvoke v0.<com.novell.ldapchai.util.GenericRuleHelper: java.lang.String readSetting(com.novell.ldapchai.ChaiPasswordRule)>(v1);
v3 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: java.util.List tokenizeString(java.lang.String,java.lang.String)>(v2, "\n");
return v3;
}
}