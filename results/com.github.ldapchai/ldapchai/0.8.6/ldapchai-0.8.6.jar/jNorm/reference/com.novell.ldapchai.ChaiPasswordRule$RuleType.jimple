public final enum class com.novell.ldapchai.ChaiPasswordRule$RuleType extends java.lang.Enum
{
public static final enum com.novell.ldapchai.ChaiPasswordRule$RuleType MIN;
public static final enum com.novell.ldapchai.ChaiPasswordRule$RuleType MAX;
public static final enum com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN;
public static final enum com.novell.ldapchai.ChaiPasswordRule$RuleType TEXT;
public static final enum com.novell.ldapchai.ChaiPasswordRule$RuleType OTHER;
public static final enum com.novell.ldapchai.ChaiPasswordRule$RuleType NUMERIC;
private static final com.novell.ldapchai.ChaiPasswordRule$RuleType[] $VALUES;
public static com.novell.ldapchai.ChaiPasswordRule$RuleType[] values()
{
com.novell.ldapchai.ChaiPasswordRule$RuleType[] v0;
java.lang.Object v1;
v0 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.ChaiPasswordRule$RuleType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/ChaiPasswordRule$RuleType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
com.novell.ldapchai.ChaiPasswordRule$RuleType v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.ChaiPasswordRule$RuleType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.novell.ldapchai.ChaiPasswordRule$RuleType[] $values()
{
com.novell.ldapchai.ChaiPasswordRule$RuleType[] v0;
com.novell.ldapchai.ChaiPasswordRule$RuleType v1, v2, v3, v4, v5, v6;
v0 = newarray (com.novell.ldapchai.ChaiPasswordRule$RuleType)[6];
v1 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
v0[0] = v1;
v2 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
v0[1] = v2;
v3 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
v0[2] = v3;
v4 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType TEXT>;
v0[3] = v4;
v5 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType OTHER>;
v0[4] = v5;
v6 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType NUMERIC>;
v0[5] = v6;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.ChaiPasswordRule$RuleType[] v6;
com.novell.ldapchai.ChaiPasswordRule$RuleType v0, v1, v2, v3, v4, v5;
v0 = new com.novell.ldapchai.ChaiPasswordRule$RuleType;
specialinvoke v0.<com.novell.ldapchai.ChaiPasswordRule$RuleType: void <init>(java.lang.String,int)>("MIN", 0);
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN> = v0;
v1 = new com.novell.ldapchai.ChaiPasswordRule$RuleType;
specialinvoke v1.<com.novell.ldapchai.ChaiPasswordRule$RuleType: void <init>(java.lang.String,int)>("MAX", 1);
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX> = v1;
v2 = new com.novell.ldapchai.ChaiPasswordRule$RuleType;
specialinvoke v2.<com.novell.ldapchai.ChaiPasswordRule$RuleType: void <init>(java.lang.String,int)>("BOOLEAN", 2);
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN> = v2;
v3 = new com.novell.ldapchai.ChaiPasswordRule$RuleType;
specialinvoke v3.<com.novell.ldapchai.ChaiPasswordRule$RuleType: void <init>(java.lang.String,int)>("TEXT", 3);
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType TEXT> = v3;
v4 = new com.novell.ldapchai.ChaiPasswordRule$RuleType;
specialinvoke v4.<com.novell.ldapchai.ChaiPasswordRule$RuleType: void <init>(java.lang.String,int)>("OTHER", 4);
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType OTHER> = v4;
v5 = new com.novell.ldapchai.ChaiPasswordRule$RuleType;
specialinvoke v5.<com.novell.ldapchai.ChaiPasswordRule$RuleType: void <init>(java.lang.String,int)>("NUMERIC", 5);
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType NUMERIC> = v5;
v6 = staticinvoke <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType[] $values()>();
<com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType[] $VALUES> = v6;
return;
}
}