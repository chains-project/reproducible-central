public final enum class com.novell.ldapchai.ChaiPasswordRule extends java.lang.Enum
{
public static final enum com.novell.ldapchai.ChaiPasswordRule PolicyEnabled;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumLength;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumLength;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumUpperCase;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumUpperCase;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumLowerCase;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumLowerCase;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowNumeric;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumNumeric;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumNumeric;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowNonAlpha;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumNonAlpha;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumNonAlpha;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumUnique;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumUnique;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowFirstCharNumeric;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowLastCharNumeric;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowSpecial;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumSpecial;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumSpecial;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowFirstCharSpecial;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowLastCharSpecial;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumRepeat;
public static final enum com.novell.ldapchai.ChaiPasswordRule MaximumSequentialRepeat;
public static final enum com.novell.ldapchai.ChaiPasswordRule ChangeMessage;
public static final enum com.novell.ldapchai.ChaiPasswordRule ExpirationInterval;
public static final enum com.novell.ldapchai.ChaiPasswordRule MinimumLifetime;
public static final enum com.novell.ldapchai.ChaiPasswordRule CaseSensitive;
public static final enum com.novell.ldapchai.ChaiPasswordRule EnforceAtLogin;
public static final enum com.novell.ldapchai.ChaiPasswordRule ChallengeResponseEnabled;
public static final enum com.novell.ldapchai.ChaiPasswordRule UniqueRequired;
public static final enum com.novell.ldapchai.ChaiPasswordRule ADComplexity;
public static final enum com.novell.ldapchai.ChaiPasswordRule ADComplexity2008;
public static final enum com.novell.ldapchai.ChaiPasswordRule ADComplexityMaxViolation;
public static final enum com.novell.ldapchai.ChaiPasswordRule NovellComplexityRules;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowUserChange;
public static final enum com.novell.ldapchai.ChaiPasswordRule AllowAdminChange;
public static final enum com.novell.ldapchai.ChaiPasswordRule DisallowedValues;
public static final enum com.novell.ldapchai.ChaiPasswordRule DisallowedAttributes;
private final com.novell.ldapchai.ChaiPasswordRule$RuleType ruleType;
private final java.lang.String defaultValue;
private final java.lang.String key;
private static final com.novell.ldapchai.ChaiPasswordRule[] $VALUES;
public static com.novell.ldapchai.ChaiPasswordRule[] values()
{
com.novell.ldapchai.ChaiPasswordRule[] v0;
java.lang.Object v1;
v0 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.ChaiPasswordRule valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/ChaiPasswordRule;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String, com.novell.ldapchai.ChaiPasswordRule$RuleType, java.lang.String)
{
int v2;
com.novell.ldapchai.ChaiPasswordRule v0;
com.novell.ldapchai.ChaiPasswordRule$RuleType v4;
java.lang.String v1, v3, v5;
v0 := @this: com.novell.ldapchai.ChaiPasswordRule;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: com.novell.ldapchai.ChaiPasswordRule$RuleType;
v5 := @parameter4: java.lang.String;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String key> = v3;
v0.<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule$RuleType ruleType> = v4;
v0.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String defaultValue> = v5;
return;
}
public com.novell.ldapchai.ChaiPasswordRule$RuleType getRuleType()
{
com.novell.ldapchai.ChaiPasswordRule v0;
com.novell.ldapchai.ChaiPasswordRule$RuleType v1;
v0 := @this: com.novell.ldapchai.ChaiPasswordRule;
v1 = v0.<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule$RuleType ruleType>;
return v1;
}
public java.lang.String getDefaultValue()
{
com.novell.ldapchai.ChaiPasswordRule v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.ChaiPasswordRule;
v1 = v0.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String defaultValue>;
return v1;
}
public java.lang.String getKey()
{
com.novell.ldapchai.ChaiPasswordRule v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.ChaiPasswordRule;
v1 = v0.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String key>;
return v1;
}
public static com.novell.ldapchai.ChaiPasswordRule forKey(java.lang.String)
{
int v2, v3;
com.novell.ldapchai.ChaiPasswordRule[] v1;
com.novell.ldapchai.ChaiPasswordRule v4;
java.lang.String v0, v5;
boolean v6;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
return null;
label1:
v1 = staticinvoke <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule[] values()>();
v2 = lengthof v1;
v3 = 0;
label2:
if v3 >= v2 goto label4;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.novell.ldapchai.ChaiPasswordRule: java.lang.String getKey()>();
v6 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label3;
return v4;
label3:
v3 = v3 + 1;
goto label2;
label4:
return null;
}
private static com.novell.ldapchai.ChaiPasswordRule[] $values()
{
com.novell.ldapchai.ChaiPasswordRule[] v0;
com.novell.ldapchai.ChaiPasswordRule v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v5, v6, v7, v8, v9;
v0 = newarray (com.novell.ldapchai.ChaiPasswordRule)[39];
v1 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule PolicyEnabled>;
v0[0] = v1;
v2 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLength>;
v0[1] = v2;
v3 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumLength>;
v0[2] = v3;
v4 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumUpperCase>;
v0[3] = v4;
v5 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumUpperCase>;
v0[4] = v5;
v6 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumLowerCase>;
v0[5] = v6;
v7 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLowerCase>;
v0[6] = v7;
v8 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowNumeric>;
v0[7] = v8;
v9 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumNumeric>;
v0[8] = v9;
v10 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumNumeric>;
v0[9] = v10;
v11 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowNonAlpha>;
v0[10] = v11;
v12 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumNonAlpha>;
v0[11] = v12;
v13 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumNonAlpha>;
v0[12] = v13;
v14 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumUnique>;
v0[13] = v14;
v15 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumUnique>;
v0[14] = v15;
v16 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowFirstCharNumeric>;
v0[15] = v16;
v17 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowLastCharNumeric>;
v0[16] = v17;
v18 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowSpecial>;
v0[17] = v18;
v19 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumSpecial>;
v0[18] = v19;
v20 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumSpecial>;
v0[19] = v20;
v21 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowFirstCharSpecial>;
v0[20] = v21;
v22 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowLastCharSpecial>;
v0[21] = v22;
v23 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumRepeat>;
v0[22] = v23;
v24 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumSequentialRepeat>;
v0[23] = v24;
v25 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ChangeMessage>;
v0[24] = v25;
v26 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ExpirationInterval>;
v0[25] = v26;
v27 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLifetime>;
v0[26] = v27;
v28 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule CaseSensitive>;
v0[27] = v28;
v29 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule EnforceAtLogin>;
v0[28] = v29;
v30 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ChallengeResponseEnabled>;
v0[29] = v30;
v31 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule UniqueRequired>;
v0[30] = v31;
v32 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ADComplexity>;
v0[31] = v32;
v33 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ADComplexity2008>;
v0[32] = v33;
v34 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ADComplexityMaxViolation>;
v0[33] = v34;
v35 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule NovellComplexityRules>;
v0[34] = v35;
v36 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowUserChange>;
v0[35] = v36;
v37 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowAdminChange>;
v0[36] = v37;
v38 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule DisallowedValues>;
v0[37] = v38;
v39 = <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule DisallowedAttributes>;
v0[38] = v39;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.ChaiPasswordRule[] v78;
com.novell.ldapchai.ChaiPasswordRule v0, v10, v12, v14, v16, v18, v2, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v4, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v6, v60, v62, v64, v66, v68, v70, v72, v74, v76, v8;
com.novell.ldapchai.ChaiPasswordRule$RuleType v1, v11, v13, v15, v17, v19, v21, v23, v25, v27, v29, v3, v31, v33, v35, v37, v39, v41, v43, v45, v47, v49, v5, v51, v53, v55, v57, v59, v61, v63, v65, v67, v69, v7, v71, v73, v75, v77, v9;
v0 = new com.novell.ldapchai.ChaiPasswordRule;
v1 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v0.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("PolicyEnabled", 0, "chai.pwrule.policyEnabled", v1, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule PolicyEnabled> = v0;
v2 = new com.novell.ldapchai.ChaiPasswordRule;
v3 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v2.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumLength", 1, "chai.pwrule.length.min", v3, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLength> = v2;
v4 = new com.novell.ldapchai.ChaiPasswordRule;
v5 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v4.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumLength", 2, "chai.pwrule.length.max", v5, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumLength> = v4;
v6 = new com.novell.ldapchai.ChaiPasswordRule;
v7 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v6.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumUpperCase", 3, "chai.pwrule.upper.max", v7, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumUpperCase> = v6;
v8 = new com.novell.ldapchai.ChaiPasswordRule;
v9 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v8.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumUpperCase", 4, "chai.pwrule.upper.min", v9, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumUpperCase> = v8;
v10 = new com.novell.ldapchai.ChaiPasswordRule;
v11 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v10.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumLowerCase", 5, "chai.pwrule.lower.max", v11, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumLowerCase> = v10;
v12 = new com.novell.ldapchai.ChaiPasswordRule;
v13 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v12.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumLowerCase", 6, "chai.pwrule.lower.min", v13, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLowerCase> = v12;
v14 = new com.novell.ldapchai.ChaiPasswordRule;
v15 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v14.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowNumeric", 7, "chai.pwrule.numeric.allow", v15, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowNumeric> = v14;
v16 = new com.novell.ldapchai.ChaiPasswordRule;
v17 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v16.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumNumeric", 8, "chai.pwrule.numeric.min", v17, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumNumeric> = v16;
v18 = new com.novell.ldapchai.ChaiPasswordRule;
v19 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v18.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumNumeric", 9, "chai.pwrule.numeric.max", v19, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumNumeric> = v18;
v20 = new com.novell.ldapchai.ChaiPasswordRule;
v21 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v20.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowNonAlpha", 10, "chai.pwrule.nonalpha.allow", v21, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowNonAlpha> = v20;
v22 = new com.novell.ldapchai.ChaiPasswordRule;
v23 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v22.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumNonAlpha", 11, "chai.pwrule.nonalpha.min", v23, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumNonAlpha> = v22;
v24 = new com.novell.ldapchai.ChaiPasswordRule;
v25 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v24.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumNonAlpha", 12, "chai.pwrule.nonalpha.max", v25, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumNonAlpha> = v24;
v26 = new com.novell.ldapchai.ChaiPasswordRule;
v27 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v26.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumUnique", 13, "chai.pwrule.unique.min", v27, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumUnique> = v26;
v28 = new com.novell.ldapchai.ChaiPasswordRule;
v29 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v28.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumUnique", 14, "chai.pwrule.unique.max", v29, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumUnique> = v28;
v30 = new com.novell.ldapchai.ChaiPasswordRule;
v31 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v30.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowFirstCharNumeric", 15, "chai.pwrule.numeric.allowFirst", v31, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowFirstCharNumeric> = v30;
v32 = new com.novell.ldapchai.ChaiPasswordRule;
v33 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v32.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowLastCharNumeric", 16, "chai.pwrule.numeric.allowLast", v33, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowLastCharNumeric> = v32;
v34 = new com.novell.ldapchai.ChaiPasswordRule;
v35 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v34.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowSpecial", 17, "chai.pwrule.special.allow", v35, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowSpecial> = v34;
v36 = new com.novell.ldapchai.ChaiPasswordRule;
v37 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MIN>;
specialinvoke v36.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumSpecial", 18, "chai.pwrule.special.min", v37, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumSpecial> = v36;
v38 = new com.novell.ldapchai.ChaiPasswordRule;
v39 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v38.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumSpecial", 19, "chai.pwrule.special.max", v39, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumSpecial> = v38;
v40 = new com.novell.ldapchai.ChaiPasswordRule;
v41 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v40.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowFirstCharSpecial", 20, "chai.pwrule.special.allowFirst", v41, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowFirstCharSpecial> = v40;
v42 = new com.novell.ldapchai.ChaiPasswordRule;
v43 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v42.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowLastCharSpecial", 21, "chai.pwrule.special.allowLast", v43, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowLastCharSpecial> = v42;
v44 = new com.novell.ldapchai.ChaiPasswordRule;
v45 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v44.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumRepeat", 22, "chai.pwrule.repeat.max", v45, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumRepeat> = v44;
v46 = new com.novell.ldapchai.ChaiPasswordRule;
v47 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v46.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MaximumSequentialRepeat", 23, "chai.pwrule.sequentialRepeat.max", v47, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MaximumSequentialRepeat> = v46;
v48 = new com.novell.ldapchai.ChaiPasswordRule;
v49 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType TEXT>;
specialinvoke v48.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("ChangeMessage", 24, "chai.pwrule.changeMessage", v49, "");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ChangeMessage> = v48;
v50 = new com.novell.ldapchai.ChaiPasswordRule;
v51 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType NUMERIC>;
specialinvoke v50.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("ExpirationInterval", 25, "chai.pwrule.expirationInterval", v51, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ExpirationInterval> = v50;
v52 = new com.novell.ldapchai.ChaiPasswordRule;
v53 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType NUMERIC>;
specialinvoke v52.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("MinimumLifetime", 26, "chai.pwrule.lifetime.minimum", v53, "0");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule MinimumLifetime> = v52;
v54 = new com.novell.ldapchai.ChaiPasswordRule;
v55 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v54.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("CaseSensitive", 27, "chai.pwrule.caseSensitive", v55, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule CaseSensitive> = v54;
v56 = new com.novell.ldapchai.ChaiPasswordRule;
v57 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v56.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("EnforceAtLogin", 28, "chai.pwrule.enforceAtLogin", v57, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule EnforceAtLogin> = v56;
v58 = new com.novell.ldapchai.ChaiPasswordRule;
v59 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v58.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("ChallengeResponseEnabled", 29, "chai.pwrule.challengeResponseEnabled", v59, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ChallengeResponseEnabled> = v58;
v60 = new com.novell.ldapchai.ChaiPasswordRule;
v61 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v60.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("UniqueRequired", 30, "chai.pwrule.uniqueRequired", v61, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule UniqueRequired> = v60;
v62 = new com.novell.ldapchai.ChaiPasswordRule;
v63 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v62.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("ADComplexity", 31, "chai.pwrule.ADComplexity", v63, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ADComplexity> = v62;
v64 = new com.novell.ldapchai.ChaiPasswordRule;
v65 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v64.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("ADComplexity2008", 32, "chai.pwrule.ADComplexity2008", v65, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ADComplexity2008> = v64;
v66 = new com.novell.ldapchai.ChaiPasswordRule;
v67 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType MAX>;
specialinvoke v66.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("ADComplexityMaxViolation", 33, "chai.pwrule.ADComplexityMaxViolation", v67, "false");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule ADComplexityMaxViolation> = v66;
v68 = new com.novell.ldapchai.ChaiPasswordRule;
v69 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType TEXT>;
specialinvoke v68.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("NovellComplexityRules", 34, "chai.pwrule.novellComplexity", v69, "");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule NovellComplexityRules> = v68;
v70 = new com.novell.ldapchai.ChaiPasswordRule;
v71 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v70.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowUserChange", 35, "chai.pwrule.allowUserChange", v71, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowUserChange> = v70;
v72 = new com.novell.ldapchai.ChaiPasswordRule;
v73 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType BOOLEAN>;
specialinvoke v72.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("AllowAdminChange", 36, "chai.pwrule.allowAdminChange", v73, "true");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule AllowAdminChange> = v72;
v74 = new com.novell.ldapchai.ChaiPasswordRule;
v75 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType OTHER>;
specialinvoke v74.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("DisallowedValues", 37, "chai.pwrule.disallowedValues", v75, "");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule DisallowedValues> = v74;
v76 = new com.novell.ldapchai.ChaiPasswordRule;
v77 = <com.novell.ldapchai.ChaiPasswordRule$RuleType: com.novell.ldapchai.ChaiPasswordRule$RuleType OTHER>;
specialinvoke v76.<com.novell.ldapchai.ChaiPasswordRule: void <init>(java.lang.String,int,java.lang.String,com.novell.ldapchai.ChaiPasswordRule$RuleType,java.lang.String)>("DisallowedAttributes", 38, "chai.pwrule.disallowedAttributes", v77, "");
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule DisallowedAttributes> = v76;
v78 = staticinvoke <com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule[] $values()>();
<com.novell.ldapchai.ChaiPasswordRule: com.novell.ldapchai.ChaiPasswordRule[] $VALUES> = v78;
return;
}
}