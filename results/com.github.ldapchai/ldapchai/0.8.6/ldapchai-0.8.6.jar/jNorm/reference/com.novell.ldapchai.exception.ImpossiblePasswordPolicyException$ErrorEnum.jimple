public final enum class com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum extends java.lang.Enum
{
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_LENGTH_GREATER_THEN_MINIMUM_LENGTH;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_LOWER_GREATER_THEN_MIN_LOWER;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_UPPER_GREATER_THEN_MIN_UPPER;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_NUMERIC_GREATER_THAN_MIN_NUMERIC;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_SPECIAL_GREATER_THAN_MIN_SPECIAL;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_LOWER_GREATER_THAN_MAX_LENGTH;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_NUMERIC_GREATER_THAN_MAX_LENGTH;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_SPECIAL_GREATER_THAN_MAX_LENGTH;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_UNIQUE_GREATER_THAN_MAX_LENGTH;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_UPPER_GREATER_THAN_MAX_LENGTH;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum REQUIRED_CHAR_NOT_ALLOWED;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum PASSWORD_TOO_COMPLEX_TO_GENERATE;
public static final enum com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum UNEXPECTED_ERROR;
private static final com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] $VALUES;
public static com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] values()
{
com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] v0;
java.lang.Object v1;
v0 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/novell/ldapchai/exception/ImpossiblePasswordPolicyException$ErrorEnum;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum v0;
v0 := @this: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] $values()
{
com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] v0;
com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum v1, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum)[13];
v1 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_LENGTH_GREATER_THEN_MINIMUM_LENGTH>;
v0[0] = v1;
v2 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_LOWER_GREATER_THEN_MIN_LOWER>;
v0[1] = v2;
v3 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_UPPER_GREATER_THEN_MIN_UPPER>;
v0[2] = v3;
v4 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_NUMERIC_GREATER_THAN_MIN_NUMERIC>;
v0[3] = v4;
v5 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_SPECIAL_GREATER_THAN_MIN_SPECIAL>;
v0[4] = v5;
v6 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_LOWER_GREATER_THAN_MAX_LENGTH>;
v0[5] = v6;
v7 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_NUMERIC_GREATER_THAN_MAX_LENGTH>;
v0[6] = v7;
v8 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_SPECIAL_GREATER_THAN_MAX_LENGTH>;
v0[7] = v8;
v9 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_UNIQUE_GREATER_THAN_MAX_LENGTH>;
v0[8] = v9;
v10 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_UPPER_GREATER_THAN_MAX_LENGTH>;
v0[9] = v10;
v11 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum REQUIRED_CHAR_NOT_ALLOWED>;
v0[10] = v11;
v12 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum PASSWORD_TOO_COMPLEX_TO_GENERATE>;
v0[11] = v12;
v13 = <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum UNEXPECTED_ERROR>;
v0[12] = v13;
return v0;
}
static void <clinit>()
{
com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] v13;
com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum v0, v1, v10, v11, v12, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v0.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MAX_LENGTH_GREATER_THEN_MINIMUM_LENGTH", 0);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_LENGTH_GREATER_THEN_MINIMUM_LENGTH> = v0;
v1 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v1.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MAX_LOWER_GREATER_THEN_MIN_LOWER", 1);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_LOWER_GREATER_THEN_MIN_LOWER> = v1;
v2 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v2.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MAX_UPPER_GREATER_THEN_MIN_UPPER", 2);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_UPPER_GREATER_THEN_MIN_UPPER> = v2;
v3 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v3.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MAX_NUMERIC_GREATER_THAN_MIN_NUMERIC", 3);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_NUMERIC_GREATER_THAN_MIN_NUMERIC> = v3;
v4 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v4.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MAX_SPECIAL_GREATER_THAN_MIN_SPECIAL", 4);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MAX_SPECIAL_GREATER_THAN_MIN_SPECIAL> = v4;
v5 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v5.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MIN_LOWER_GREATER_THAN_MAX_LENGTH", 5);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_LOWER_GREATER_THAN_MAX_LENGTH> = v5;
v6 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v6.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MIN_NUMERIC_GREATER_THAN_MAX_LENGTH", 6);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_NUMERIC_GREATER_THAN_MAX_LENGTH> = v6;
v7 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v7.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MIN_SPECIAL_GREATER_THAN_MAX_LENGTH", 7);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_SPECIAL_GREATER_THAN_MAX_LENGTH> = v7;
v8 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v8.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MIN_UNIQUE_GREATER_THAN_MAX_LENGTH", 8);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_UNIQUE_GREATER_THAN_MAX_LENGTH> = v8;
v9 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v9.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("MIN_UPPER_GREATER_THAN_MAX_LENGTH", 9);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum MIN_UPPER_GREATER_THAN_MAX_LENGTH> = v9;
v10 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v10.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("REQUIRED_CHAR_NOT_ALLOWED", 10);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum REQUIRED_CHAR_NOT_ALLOWED> = v10;
v11 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v11.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("PASSWORD_TOO_COMPLEX_TO_GENERATE", 11);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum PASSWORD_TOO_COMPLEX_TO_GENERATE> = v11;
v12 = new com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum;
specialinvoke v12.<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: void <init>(java.lang.String,int)>("UNEXPECTED_ERROR", 12);
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum UNEXPECTED_ERROR> = v12;
v13 = staticinvoke <com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] $values()>();
<com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum: com.novell.ldapchai.exception.ImpossiblePasswordPolicyException$ErrorEnum[] $VALUES> = v13;
return;
}
}