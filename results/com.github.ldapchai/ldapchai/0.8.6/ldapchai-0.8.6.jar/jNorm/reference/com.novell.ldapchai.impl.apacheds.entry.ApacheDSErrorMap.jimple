class com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap extends java.lang.Object implements com.novell.ldapchai.exception.ErrorMap
{
private static final com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap SINGLETON;
private void <init>()
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v0;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap instance()
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v0;
v0 = <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap SINGLETON>;
return v0;
}
public com.novell.ldapchai.exception.ChaiError errorForMessage(java.lang.String)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError v2;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v0;
java.lang.String v1;
com.novell.ldapchai.exception.ChaiError v3;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError forMessage(java.lang.String)>(v1);
v3 = virtualinvoke v2.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: com.novell.ldapchai.exception.ChaiError getChaiError()>();
return v3;
}
public boolean isPermanent(java.lang.String)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError v2;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v0;
java.lang.String v1;
boolean v3, v4;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError forMessage(java.lang.String)>(v1);
v3 = virtualinvoke v2.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: boolean isTempoary()>();
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isAuthenticationRelated(java.lang.String)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError v2;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v0;
java.lang.String v1;
boolean v3;
v0 := @this: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError forMessage(java.lang.String)>(v1);
v3 = virtualinvoke v2.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: boolean isAuthentication()>();
return v3;
}
private static com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError forMessage(java.lang.String)
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError v2, v6, v9;
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError[] v3;
int v4, v5;
java.lang.String v0, v7;
boolean v1, v8;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: boolean isEmpty(java.lang.CharSequence)>(v0);
if v1 == 0 goto label1;
v2 = <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError UNKNOWN>;
return v2;
label1:
v3 = staticinvoke <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError[] values()>();
v4 = lengthof v3;
v5 = 0;
label2:
if v5 >= v4 goto label4;
v6 = v3[v5];
v7 = virtualinvoke v6.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: java.lang.String name()>();
v8 = virtualinvoke v0.<java.lang.String: boolean contains(java.lang.CharSequence)>(v7);
if v8 == 0 goto label3;
return v6;
label3:
v5 = v5 + 1;
goto label2;
label4:
v9 = <com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap$ApacheDSError UNKNOWN>;
return v9;
}
static void <clinit>()
{
com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap v0;
v0 = new com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap;
specialinvoke v0.<com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: void <init>()>();
<com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap: com.novell.ldapchai.impl.apacheds.entry.ApacheDSErrorMap SINGLETON> = v0;
return;
}
}