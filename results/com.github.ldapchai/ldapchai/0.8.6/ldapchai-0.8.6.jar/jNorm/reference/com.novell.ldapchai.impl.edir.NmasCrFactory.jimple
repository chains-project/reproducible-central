public class com.novell.ldapchai.impl.edir.NmasCrFactory extends java.lang.Object
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
public void <init>()
{
com.novell.ldapchai.impl.edir.NmasCrFactory v0;
v0 := @this: com.novell.ldapchai.impl.edir.NmasCrFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static com.novell.ldapchai.cr.ChallengeSet readNmasAssignedChallengeSetPolicy(com.novell.ldapchai.provider.ChaiProvider, java.lang.String, java.util.Locale, java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.ChaiEntry v9;
java.util.function.Supplier v20, v6;
java.util.ArrayList v7;
com.novell.ldapchai.cr.ChaiChallengeSet v23;
java.util.Locale v2;
java.util.Map v11;
int v14, v16, v22, v4;
com.novell.ldapchai.ChaiEntryFactory v8;
java.lang.String v1, v3;
java.util.Set v10;
java.io.IOException v18;
com.novell.ldapchai.provider.ChaiProvider v0;
java.util.List v15, v17;
java.lang.Object v12, v13, v21;
com.novell.ldapchai.util.internal.ChaiLogger v19, v5;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.Locale;
v3 := @parameter3: java.lang.String;
if v1 == null goto label1;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
if v4 >= 1 goto label2;
label1:
v5 = <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v6 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readNmasAssignedChallengeSetPolicy_0__42: java.util.function.Supplier bootstrap$()>();
virtualinvoke v5.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v6);
return null;
label2:
v7 = new java.util.ArrayList;
specialinvoke v7.<java.util.ArrayList: void <init>()>();
v8 = interfaceinvoke v0.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.ChaiEntryFactory getEntryFactory()>();
v9 = virtualinvoke v8.<com.novell.ldapchai.ChaiEntryFactory: com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String)>(v1);
v10 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v11 = interfaceinvoke v9.<com.novell.ldapchai.ChaiEntry: java.util.Map readStringAttributes(java.util.Set)>(v10);
v12 = interfaceinvoke v11.<java.util.Map: java.lang.Object get(java.lang.Object)>("nsimRequiredQuestions");
v13 = interfaceinvoke v11.<java.util.Map: java.lang.Object get(java.lang.Object)>("nsimRandomQuestions");
label3:
if v12 == null goto label4;
v14 = virtualinvoke v12.<java.lang.String: int length()>();
if v14 <= 0 goto label4;
v15 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: java.util.List parseNmasChallengePolicyXML(java.lang.String,java.util.Locale)>(v12, v2);
interfaceinvoke v7.<java.util.List: boolean addAll(java.util.Collection)>(v15);
label4:
if v13 == null goto label7;
v16 = virtualinvoke v13.<java.lang.String: int length()>();
if v16 <= 0 goto label7;
v17 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: java.util.List parseNmasChallengePolicyXML(java.lang.String,java.util.Locale)>(v13, v2);
interfaceinvoke v7.<java.util.List: boolean addAll(java.util.Collection)>(v17);
label5:
goto label7;
label6:
v18 := @caughtexception;
v19 = <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v20 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readNmasAssignedChallengeSetPolicy_1__43: java.util.function.Supplier bootstrap$(java.io.IOException)>(v18);
virtualinvoke v19.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v20);
label7:
v21 = interfaceinvoke v11.<java.util.Map: java.lang.Object get(java.lang.Object)>("nsimNumberRandomQuestions");
v22 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v21, 0);
v23 = new com.novell.ldapchai.cr.ChaiChallengeSet;
specialinvoke v23.<com.novell.ldapchai.cr.ChaiChallengeSet: void <init>(java.util.Collection,int,java.util.Locale,java.lang.String)>(v7, v22, v2, v3);
return v23;
catch java.io.IOException from label3 to label5 with label6;
}
public static com.novell.ldapchai.cr.ChallengeSet readAssignedChallengeSet(com.novell.ldapchai.provider.ChaiProvider, com.novell.ldapchai.ChaiPasswordPolicy, java.util.Locale) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.ChaiPasswordPolicy v1;
java.lang.ClassCastException v4;
java.util.function.Supplier v6, v8;
com.novell.ldapchai.cr.ChallengeSet v10;
com.novell.ldapchai.provider.ChaiProvider v0;
java.util.Locale v2;
java.lang.String v3, v9;
com.novell.ldapchai.util.internal.ChaiLogger v5, v7;
v0 := @parameter0: com.novell.ldapchai.provider.ChaiProvider;
v1 := @parameter1: com.novell.ldapchai.ChaiPasswordPolicy;
v2 := @parameter2: java.util.Locale;
label1:
v3 = interfaceinvoke v1.<com.novell.ldapchai.impl.edir.entry.NspmPasswordPolicy: java.lang.String getChallengeSetDN()>();
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v6 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readAssignedChallengeSet_2__45: java.util.function.Supplier bootstrap$()>();
virtualinvoke v5.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v6);
return null;
label4:
if v3 != null goto label5;
v7 = <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v8 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readAssignedChallengeSet_3__44: java.util.function.Supplier bootstrap$()>();
virtualinvoke v7.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v8);
return null;
label5:
v9 = interfaceinvoke v1.<com.novell.ldapchai.impl.edir.entry.NspmPasswordPolicy: java.lang.String readStringAttribute(java.lang.String)>("nsimChallengeSetGUID");
v10 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.cr.ChallengeSet readNmasAssignedChallengeSetPolicy(com.novell.ldapchai.provider.ChaiProvider,java.lang.String,java.util.Locale,java.lang.String)>(v0, v3, v2, v9);
return v10;
catch java.lang.ClassCastException from label1 to label2 with label3;
}
public static com.novell.ldapchai.cr.ChallengeSet readAssignedChallengeSet(com.novell.ldapchai.ChaiUser, java.util.Locale) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.ChaiUser v0;
java.util.Locale v1;
com.novell.ldapchai.ChaiPasswordPolicy v2;
java.util.function.Supplier v4;
com.novell.ldapchai.cr.ChallengeSet v6;
com.novell.ldapchai.provider.ChaiProvider v5;
com.novell.ldapchai.util.internal.ChaiLogger v3;
v0 := @parameter0: com.novell.ldapchai.ChaiUser;
v1 := @parameter1: java.util.Locale;
v2 = interfaceinvoke v0.<com.novell.ldapchai.ChaiUser: com.novell.ldapchai.ChaiPasswordPolicy getPasswordPolicy()>();
if v2 != null goto label1;
v3 = <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v4 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readAssignedChallengeSet_4__46: java.util.function.Supplier bootstrap$()>();
virtualinvoke v3.<com.novell.ldapchai.util.internal.ChaiLogger: void trace(java.util.function.Supplier)>(v4);
return null;
label1:
v5 = interfaceinvoke v0.<com.novell.ldapchai.ChaiUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v6 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.cr.ChallengeSet readAssignedChallengeSet(com.novell.ldapchai.provider.ChaiProvider,com.novell.ldapchai.ChaiPasswordPolicy,java.util.Locale)>(v5, v2, v1);
return v6;
}
public static com.novell.ldapchai.cr.ChallengeSet readAssignedChallengeSet(com.novell.ldapchai.ChaiUser) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.ChaiUser v0;
java.util.Locale v1;
com.novell.ldapchai.cr.ChallengeSet v2;
v0 := @parameter0: com.novell.ldapchai.ChaiUser;
v1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
v2 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.cr.ChallengeSet readAssignedChallengeSet(com.novell.ldapchai.ChaiUser,java.util.Locale)>(v0, v1);
return v2;
}
public static boolean writeResponseSet(com.novell.ldapchai.impl.edir.NmasResponseSet) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.edir.NmasResponseSet v0;
boolean v1;
v0 := @parameter0: com.novell.ldapchai.impl.edir.NmasResponseSet;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.NmasResponseSet: boolean write()>();
return v1;
}
public static void clearResponseSet(com.novell.ldapchai.ChaiUser) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.ChaiUser v0;
java.util.function.Supplier v13;
javax.naming.ldap.ExtendedResponse v8;
int[] v4, v5;
int v10, v6, v7, v9;
java.lang.String v11, v3;
com.novell.ldapchai.exception.ChaiOperationException v14;
com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest v2;
com.novell.ldapchai.exception.ChaiError v15;
com.novell.ldapchai.provider.ChaiProvider v1;
com.novell.ldapchai.util.internal.ChaiLogger v12;
v0 := @parameter0: com.novell.ldapchai.ChaiUser;
v1 = interfaceinvoke v0.<com.novell.ldapchai.ChaiUser: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v2 = new com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest;
specialinvoke v2.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest: void <init>()>();
v3 = interfaceinvoke v0.<com.novell.ldapchai.ChaiUser: java.lang.String getEntryDN()>();
virtualinvoke v2.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest: void setObjectDN(java.lang.String)>(v3);
virtualinvoke v2.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest: void setTag(java.lang.String)>("ChallengeResponseQuestions");
v4 = staticinvoke <com.novell.ldapchai.impl.edir.entry.ext.NMASChallengeResponse: int[] getMethodId()>();
virtualinvoke v2.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest: void setMethodID(int[])>(v4);
v5 = staticinvoke <com.novell.ldapchai.impl.edir.entry.ext.NMASChallengeResponse: int[] getMethodId()>();
v6 = lengthof v5;
v7 = v6 * 4;
virtualinvoke v2.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigRequest: void setMethodIDLen(int)>(v7);
v8 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProvider: javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)>(v2);
if v8 == null goto label1;
v9 = virtualinvoke v8.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigResponse: int getNmasRetCode()>();
if v9 == 0 goto label1;
v10 = virtualinvoke v8.<com.novell.ldapchai.impl.edir.entry.ext.DeleteLoginConfigResponse: int getNmasRetCode()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("nmas error clearing loginResponseConfig: \u0001");
v12 = <com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v13 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_clearResponseSet_5__47: java.util.function.Supplier bootstrap$(java.lang.String)>(v11);
virtualinvoke v12.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v13);
v14 = new com.novell.ldapchai.exception.ChaiOperationException;
v15 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
specialinvoke v14.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v11, v15);
throw v14;
label1:
return;
}
public static com.novell.ldapchai.impl.edir.NmasResponseSet readNmasResponseSet(com.novell.ldapchai.ChaiUser) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.ChaiUser v0;
com.novell.ldapchai.impl.edir.NmasResponseSet v1;
v0 := @parameter0: com.novell.ldapchai.ChaiUser;
v1 = staticinvoke <com.novell.ldapchai.impl.edir.NmasResponseSet: com.novell.ldapchai.impl.edir.NmasResponseSet readNmasUserResponseSet(com.novell.ldapchai.ChaiUser)>(v0);
return v1;
}
public static com.novell.ldapchai.impl.edir.NmasResponseSet newNmasResponseSet(java.util.Map, java.util.Locale, int, com.novell.ldapchai.ChaiUser, java.lang.String) throws com.novell.ldapchai.exception.ChaiValidationException
{
com.novell.ldapchai.ChaiUser v3;
java.util.Locale v1;
java.util.Map v0;
int v2;
java.lang.String v4;
com.novell.ldapchai.cr.AbstractResponseSet$STATE v6;
com.novell.ldapchai.impl.edir.NmasResponseSet v5;
v0 := @parameter0: java.util.Map;
v1 := @parameter1: java.util.Locale;
v2 := @parameter2: int;
v3 := @parameter3: com.novell.ldapchai.ChaiUser;
v4 := @parameter4: java.lang.String;
v5 = new com.novell.ldapchai.impl.edir.NmasResponseSet;
v6 = <com.novell.ldapchai.cr.AbstractResponseSet$STATE: com.novell.ldapchai.cr.AbstractResponseSet$STATE NEW>;
specialinvoke v5.<com.novell.ldapchai.impl.edir.NmasResponseSet: void <init>(java.util.Map,java.util.Locale,int,com.novell.ldapchai.cr.AbstractResponseSet$STATE,com.novell.ldapchai.ChaiUser,java.lang.String)>(v0, v1, v2, v6, v3, v4);
return v5;
}
static java.util.List parseNmasChallengePolicyXML(java.lang.String, java.util.Locale) throws java.io.IOException
{
org.jrivard.xmlchai.XmlDocument v5;
java.util.Locale v1;
boolean v11, v23, v8;
java.util.List v21, v9;
java.util.Optional v13, v16, v25, v28;
com.novell.ldapchai.cr.ChaiChallenge v20, v31;
org.jrivard.xmlchai.XmlElement v6;
java.util.ArrayList v2;
org.jrivard.xmlchai.AccessMode v4;
int v15, v18, v27, v30;
java.lang.String v0, v19, v7;
org.jrivard.xmlchai.XmlFactory v3;
java.util.Iterator v10, v22;
java.lang.Object v12, v14, v17, v24, v26, v29;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.Locale;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = staticinvoke <org.jrivard.xmlchai.XmlFactory: org.jrivard.xmlchai.XmlFactory getFactory()>();
v4 = <org.jrivard.xmlchai.AccessMode: org.jrivard.xmlchai.AccessMode IMMUTABLE>;
v5 = interfaceinvoke v3.<org.jrivard.xmlchai.XmlFactory: org.jrivard.xmlchai.XmlDocument parseString(java.lang.String,org.jrivard.xmlchai.AccessMode)>(v0, v4);
v6 = interfaceinvoke v5.<org.jrivard.xmlchai.XmlDocument: org.jrivard.xmlchai.XmlElement getRootElement()>();
v7 = interfaceinvoke v6.<org.jrivard.xmlchai.XmlElement: java.lang.String getName()>();
v8 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>("RequiredQuestions");
v9 = interfaceinvoke v5.<org.jrivard.xmlchai.XmlDocument: java.util.List evaluateXpathToElements(java.lang.String)>("//Question");
v10 = interfaceinvoke v9.<java.util.List: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("MaxLength");
v14 = virtualinvoke v13.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");
v15 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v14, 255);
v16 = interfaceinvoke v12.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("MinLength");
v17 = virtualinvoke v16.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");
v18 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v17, 1);
v19 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: java.lang.String readDisplayString(org.jrivard.xmlchai.XmlElement,java.util.Locale)>(v12, v1);
v20 = new com.novell.ldapchai.cr.ChaiChallenge;
specialinvoke v20.<com.novell.ldapchai.cr.ChaiChallenge: void <init>(boolean,java.lang.String,int,int,boolean,int,boolean)>(v8, v19, v18, v15, 1, 0, 0);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v20);
goto label1;
label2:
v21 = interfaceinvoke v5.<org.jrivard.xmlchai.XmlDocument: java.util.List evaluateXpathToElements(java.lang.String)>("//UserDefined");
v22 = interfaceinvoke v21.<java.util.List: java.util.Iterator iterator()>();
label3:
v23 = interfaceinvoke v22.<java.util.Iterator: boolean hasNext()>();
if v23 == 0 goto label4;
v24 = interfaceinvoke v22.<java.util.Iterator: java.lang.Object next()>();
v25 = interfaceinvoke v24.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("MaxLength");
v26 = virtualinvoke v25.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");
v27 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v26, 255);
v28 = interfaceinvoke v24.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("MinLength");
v29 = virtualinvoke v28.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");
v30 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v29, 1);
v31 = new com.novell.ldapchai.cr.ChaiChallenge;
specialinvoke v31.<com.novell.ldapchai.cr.ChaiChallenge: void <init>(boolean,java.lang.String,int,int,boolean,int,boolean)>(v8, null, v30, v27, 0, 0, 0);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v31);
goto label3;
label4:
return v2;
}
private static java.lang.String readDisplayString(org.jrivard.xmlchai.XmlElement, java.util.Locale)
{
java.util.HashMap v7;
java.util.function.Supplier v16, v5;
org.jrivard.xmlchai.XmlElement v0;
java.util.Locale v1, v13;
int v3;
boolean v18, v9;
java.util.Iterator v8;
java.util.Set v12;
java.util.List v2;
java.util.Optional v11, v15, v4;
java.lang.Object v10, v14, v17, v6;
v0 := @parameter0: org.jrivard.xmlchai.XmlElement;
v1 := @parameter1: java.util.Locale;
v2 = interfaceinvoke v0.<org.jrivard.xmlchai.XmlElement: java.util.List getChildren(java.lang.String)>("display");
if v1 == null goto label1;
if v2 == null goto label1;
v3 = interfaceinvoke v2.<java.util.List: int size()>();
if v3 >= 1 goto label2;
label1:
v4 = interfaceinvoke v0.<org.jrivard.xmlchai.XmlElement: java.util.Optional getText()>();
v5 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readDisplayString_6__48: java.util.function.Supplier bootstrap$()>();
v6 = virtualinvoke v4.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>(v5);
return v6;
label2:
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
v8 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label3:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label4;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<org.jrivard.xmlchai.XmlElement: java.util.Optional getAttribute(java.lang.String)>("lang");
virtualinvoke v11.<java.util.Optional: boolean isPresent()>();
goto label3;
label4:
v12 = interfaceinvoke v7.<java.util.Map: java.util.Set keySet()>();
v13 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: java.util.Locale localeResolver(java.util.Locale,java.util.Collection)>(v1, v12);
if v13 == null goto label5;
v14 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v13);
return v14;
label5:
v15 = interfaceinvoke v0.<org.jrivard.xmlchai.XmlElement: java.util.Optional getText()>();
v16 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory$lambda_readDisplayString_7__49: java.util.function.Supplier bootstrap$()>();
v17 = virtualinvoke v15.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>(v16);
return v17;
}
private static java.util.Locale localeResolver(java.util.Locale, java.util.Collection)
{
java.util.Locale v0, v30;
boolean v11, v14, v16, v2, v20, v23, v25, v29, v31, v4, v8;
java.util.Collection v1;
java.lang.String v10, v12, v13, v18, v19, v21, v22, v27, v28, v6, v7, v9;
java.util.Iterator v15, v24, v3;
java.lang.Object v17, v26, v5;
v0 := @parameter0: java.util.Locale;
v1 := @parameter1: java.util.Collection;
if v0 == null goto label1;
if v1 == null goto label1;
v2 = interfaceinvoke v1.<java.util.Collection: boolean isEmpty()>();
if v2 == 0 goto label2;
label1:
return null;
label2:
v3 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label3:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label4;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<java.util.Locale: java.lang.String getLanguage()>();
v7 = virtualinvoke v0.<java.util.Locale: java.lang.String getLanguage()>();
v8 = virtualinvoke v6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v7);
if v8 == 0 goto label3;
v9 = virtualinvoke v5.<java.util.Locale: java.lang.String getCountry()>();
v10 = virtualinvoke v0.<java.util.Locale: java.lang.String getCountry()>();
v11 = virtualinvoke v9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v10);
if v11 == 0 goto label3;
v12 = virtualinvoke v5.<java.util.Locale: java.lang.String getVariant()>();
v13 = virtualinvoke v0.<java.util.Locale: java.lang.String getVariant()>();
v14 = virtualinvoke v12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v13);
if v14 == 0 goto label3;
return v5;
label4:
v15 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label5:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label6;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
v18 = virtualinvoke v17.<java.util.Locale: java.lang.String getLanguage()>();
v19 = virtualinvoke v0.<java.util.Locale: java.lang.String getLanguage()>();
v20 = virtualinvoke v18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v19);
if v20 == 0 goto label5;
v21 = virtualinvoke v17.<java.util.Locale: java.lang.String getCountry()>();
v22 = virtualinvoke v0.<java.util.Locale: java.lang.String getCountry()>();
v23 = virtualinvoke v21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v22);
if v23 == 0 goto label5;
return v17;
label6:
v24 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label7:
v25 = interfaceinvoke v24.<java.util.Iterator: boolean hasNext()>();
if v25 == 0 goto label8;
v26 = interfaceinvoke v24.<java.util.Iterator: java.lang.Object next()>();
v27 = virtualinvoke v26.<java.util.Locale: java.lang.String getLanguage()>();
v28 = virtualinvoke v0.<java.util.Locale: java.lang.String getLanguage()>();
v29 = virtualinvoke v27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v28);
if v29 == 0 goto label7;
return v26;
label8:
v30 = staticinvoke <com.novell.ldapchai.impl.edir.NmasCrFactory: java.util.Locale parseLocaleString(java.lang.String)>("");
v31 = interfaceinvoke v1.<java.util.Collection: boolean contains(java.lang.Object)>(v30);
if v31 == 0 goto label9;
return v30;
label9:
return null;
}
private static java.util.Locale parseLocaleString(java.lang.String)
{
java.util.Locale v1, v10, v12, v4, v7;
java.util.StringTokenizer v2;
java.lang.String v0, v11, v5, v8;
boolean v3, v6, v9;
v0 := @parameter0: java.lang.String;
if v0 != null goto label1;
v1 = new java.util.Locale;
specialinvoke v1.<java.util.Locale: void <init>(java.lang.String)>("");
return v1;
label1:
v2 = new java.util.StringTokenizer;
specialinvoke v2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(v0, "_");
v3 = virtualinvoke v2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if v3 != 0 goto label2;
v4 = new java.util.Locale;
specialinvoke v4.<java.util.Locale: void <init>(java.lang.String)>("");
return v4;
label2:
v5 = virtualinvoke v2.<java.util.StringTokenizer: java.lang.String nextToken()>();
v6 = virtualinvoke v2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if v6 != 0 goto label3;
v7 = new java.util.Locale;
specialinvoke v7.<java.util.Locale: void <init>(java.lang.String)>(v5);
return v7;
label3:
v8 = virtualinvoke v2.<java.util.StringTokenizer: java.lang.String nextToken()>();
v9 = virtualinvoke v2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if v9 != 0 goto label4;
v10 = new java.util.Locale;
specialinvoke v10.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(v5, v8);
return v10;
label4:
v11 = virtualinvoke v2.<java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>("");
v12 = new java.util.Locale;
specialinvoke v12.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v5, v8, v11);
return v12;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/impl/edir/NmasCrFactory;");
<com.novell.ldapchai.impl.edir.NmasCrFactory: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}