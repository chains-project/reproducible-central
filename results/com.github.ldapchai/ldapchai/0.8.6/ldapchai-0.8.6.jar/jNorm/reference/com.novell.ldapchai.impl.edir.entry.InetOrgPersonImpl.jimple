class com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl extends com.novell.ldapchai.impl.AbstractChaiUser implements com.novell.ldapchai.impl.edir.entry.InetOrgPerson, com.novell.ldapchai.ChaiUser
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private static final java.lang.String PW_EXPIRATION_ZULU_TIMESTAMP;
public java.lang.String getLdapObjectClassName()
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
return "inetOrgPerson";
}
void <init>(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
specialinvoke v0.<com.novell.ldapchai.impl.AbstractChaiUser: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return;
}
public com.novell.ldapchai.ChaiPasswordPolicy getPasswordPolicy() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
com.novell.ldapchai.ChaiPasswordPolicy v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: com.novell.ldapchai.ChaiPasswordPolicy readPasswordPolicy(com.novell.ldapchai.ChaiUser)>(v0);
return v1;
}
public boolean testPasswordPolicy(java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException
{
com.novell.ldapchai.exception.ChaiPasswordPolicyException v17;
java.util.function.Supplier v12, v15;
javax.naming.ldap.ExtendedResponse v9;
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
int v13;
java.lang.String v1, v16, v7;
com.novell.ldapchai.exception.ChaiOperationException v10;
boolean v5;
com.novell.ldapchai.provider.ChaiConfiguration v3;
com.novell.ldapchai.provider.ChaiSetting v4;
com.novell.ldapchai.exception.ChaiError v18;
com.novell.ldapchai.provider.ChaiProvider v2, v8;
com.novell.ldapchai.impl.edir.entry.ext.PwdPolicyCheckRequest v6;
com.novell.ldapchai.util.internal.ChaiLogger v11, v14;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v3 = interfaceinvoke v2.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v4 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS>;
v5 = virtualinvoke v3.<com.novell.ldapchai.provider.ChaiConfiguration: boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)>(v4);
if v5 != 0 goto label1;
return 1;
label1:
v6 = new com.novell.ldapchai.impl.edir.entry.ext.PwdPolicyCheckRequest;
specialinvoke v6.<com.novell.ldapchai.impl.edir.entry.ext.PwdPolicyCheckRequest: void <init>()>();
virtualinvoke v6.<com.novell.ldapchai.impl.edir.entry.ext.PwdPolicyCheckRequest: void setData(java.lang.String)>(v1);
v7 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.lang.String getEntryDN()>();
virtualinvoke v6.<com.novell.ldapchai.impl.edir.entry.ext.PwdPolicyCheckRequest: void setObjectDN(java.lang.String)>(v7);
label2:
v8 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v9 = interfaceinvoke v8.<com.novell.ldapchai.provider.ChaiProvider: javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)>(v6);
label3:
goto label5;
label4:
v10 := @caughtexception;
v11 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v12 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_testPasswordPolicy_0__77: java.util.function.Supplier bootstrap$(com.novell.ldapchai.exception.ChaiOperationException)>(v10);
virtualinvoke v11.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v12);
return 1;
label5:
if v9 == null goto label6;
v13 = virtualinvoke v9.<com.novell.ldapchai.impl.edir.entry.ext.PwdPolicyCheckResponse: int getNmasRetCode()>();
if v13 == 0 goto label6;
v14 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v15 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_testPasswordPolicy_1__76: java.util.function.Supplier bootstrap$(int)>(v13);
virtualinvoke v14.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v15);
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("nmas error \u0001");
v17 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v18 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v16);
specialinvoke v17.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v16, v18);
throw v17;
label6:
return 1;
catch com.novell.ldapchai.exception.ChaiOperationException from label2 to label3 with label4;
}
public final void unlockPassword() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.exception.ChaiError v7;
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.lang.String v1, v2, v4, v5;
com.novell.ldapchai.exception.ChaiOperationException v3, v6;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
label1:
v1 = "lockedByIntruder";
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void writeStringAttribute(java.lang.String,java.lang.String)>("lockedByIntruder", "FALSE");
v1 = "loginIntruderAttempts";
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void writeStringAttribute(java.lang.String,java.lang.String)>("loginIntruderAttempts", "0");
v1 = "loginIntruderResetTime";
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void writeStringAttribute(java.lang.String,java.lang.String)>("loginIntruderResetTime", "19800101010101Z");
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.lang.String readStringAttribute(java.lang.String)>("loginGraceLimit");
if v2 == null goto label4;
v1 = "loginGraceRemaining";
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void writeStringAttribute(java.lang.String,java.lang.String)>("loginGraceRemaining", v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("error writing to \u0001: \u0001");
v6 = new com.novell.ldapchai.exception.ChaiOperationException;
v7 = virtualinvoke v3.<com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiError getErrorCode()>();
specialinvoke v6.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError,java.lang.Throwable)>(v5, v7, v3);
throw v6;
label4:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
}
public final void addGroupMembership(com.novell.ldapchai.ChaiGroup) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
com.novell.ldapchai.ChaiGroup v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 := @parameter0: com.novell.ldapchai.ChaiGroup;
staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: void writeGroupMembership(com.novell.ldapchai.ChaiUser,com.novell.ldapchai.ChaiGroup)>(v0, v1);
return;
}
public void removeGroupMembership(com.novell.ldapchai.ChaiGroup) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
com.novell.ldapchai.ChaiGroup v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 := @parameter0: com.novell.ldapchai.ChaiGroup;
staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: void removeGroupMembership(com.novell.ldapchai.ChaiUser,com.novell.ldapchai.ChaiGroup)>(v0, v1);
return;
}
public final java.lang.String readPassword() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.edir.entry.ext.GetPwdRequest v6;
java.util.function.Supplier v13, v18, v23;
javax.naming.ldap.ExtendedResponse v9;
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
int v10;
java.lang.String v11, v15, v20, v7;
com.novell.ldapchai.exception.ChaiOperationException v14, v19, v24;
boolean v4;
java.lang.UnsupportedOperationException v5;
com.novell.ldapchai.provider.ChaiConfiguration v2;
com.novell.ldapchai.provider.ChaiSetting v3;
com.novell.ldapchai.exception.ChaiError v16, v21, v25;
com.novell.ldapchai.provider.ChaiProvider v1, v8;
com.novell.ldapchai.util.internal.ChaiLogger v12, v17, v22;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v2 = interfaceinvoke v1.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v3 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS>;
v4 = virtualinvoke v2.<com.novell.ldapchai.provider.ChaiConfiguration: boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)>(v3);
if v4 != 0 goto label1;
v5 = new java.lang.UnsupportedOperationException;
specialinvoke v5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("readPassword() is not supported when ChaiSetting.EDIRECTORY_ENABLE_NMAS is false");
throw v5;
label1:
v6 = new com.novell.ldapchai.impl.edir.entry.ext.GetPwdRequest;
v7 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.lang.String getEntryDN()>();
specialinvoke v6.<com.novell.ldapchai.impl.edir.entry.ext.GetPwdRequest: void <init>(java.lang.String,java.lang.String)>("", v7);
v8 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v9 = interfaceinvoke v8.<com.novell.ldapchai.provider.ChaiProvider: javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)>(v6);
if v9 == null goto label5;
v10 = virtualinvoke v9.<com.novell.ldapchai.impl.edir.entry.ext.GetPwdResponse: int getNmasRetCode()>();
lookupswitch(v10)
{
case -16049: goto label3;
case 0: goto label2;
default: goto label4;
};
label2:
v11 = virtualinvoke v9.<com.novell.ldapchai.impl.edir.entry.ext.GetPwdResponse: java.lang.String getPwdStr()>();
return v11;
label3:
v12 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v13 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_readPassword_2__79: java.util.function.Supplier bootstrap$(int)>(v10);
virtualinvoke v12.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v13);
v14 = new com.novell.ldapchai.exception.ChaiOperationException;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("object has no password attribute: error \u0001");
v16 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError NO_SUCH_ATTRIBUTE>;
specialinvoke v14.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v15, v16);
throw v14;
label4:
v17 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v18 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_readPassword_3__80: java.util.function.Supplier bootstrap$(int)>(v10);
virtualinvoke v17.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v18);
v19 = new com.novell.ldapchai.exception.ChaiOperationException;
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("error reading nmas password: error \u0001");
v21 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
specialinvoke v19.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v20, v21);
throw v19;
label5:
v22 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v23 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_readPassword_4__78: java.util.function.Supplier bootstrap$()>();
virtualinvoke v22.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v23);
v24 = new com.novell.ldapchai.exception.ChaiOperationException;
v25 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
specialinvoke v24.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>("unknown error retrieving password (null response)", v25);
throw v24;
}
public void setPassword(java.lang.String, boolean) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiPasswordPolicyException
{
com.novell.ldapchai.exception.ChaiPasswordPolicyException v17, v28, v8;
java.util.function.Supplier v23;
javax.naming.ldap.ExtendedResponse v15;
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
com.novell.ldapchai.impl.edir.entry.ext.SetPwdRequest v12;
int v21, v25;
java.lang.String v1, v10, v13, v18, v19, v24, v9;
com.novell.ldapchai.exception.ChaiOperationException v16, v26, v7;
boolean v2, v6;
com.novell.ldapchai.provider.ChaiConfiguration v4;
com.novell.ldapchai.provider.ChaiSetting v5;
com.novell.ldapchai.exception.ChaiError v11, v20, v27, v29;
com.novell.ldapchai.provider.ChaiProvider v14, v3;
com.novell.ldapchai.util.internal.ChaiLogger v22;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v5 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS>;
v6 = virtualinvoke v4.<com.novell.ldapchai.provider.ChaiConfiguration: boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)>(v5);
if v6 != 0 goto label04;
label01:
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void writeStringAttribute(java.lang.String,java.lang.String)>("userPassword", v1);
label02:
goto label10;
label03:
v7 := @caughtexception;
v8 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v9 = virtualinvoke v7.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v10 = virtualinvoke v7.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v11 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v10);
specialinvoke v8.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v9, v11);
throw v8;
label04:
v12 = new com.novell.ldapchai.impl.edir.entry.ext.SetPwdRequest;
specialinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.SetPwdRequest: void <init>()>();
virtualinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.SetPwdRequest: void setData(java.lang.String)>(v1);
v13 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.lang.String getEntryDN()>();
virtualinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.SetPwdRequest: void setObjectDN(java.lang.String)>(v13);
label05:
v14 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v15 = interfaceinvoke v14.<com.novell.ldapchai.provider.ChaiProvider: javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)>(v12);
label06:
goto label08;
label07:
v16 := @caughtexception;
v17 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v18 = virtualinvoke v16.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v19 = virtualinvoke v16.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v20 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v19);
specialinvoke v17.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v18, v20);
throw v17;
label08:
if v15 == null goto label10;
v21 = virtualinvoke v15.<com.novell.ldapchai.impl.edir.entry.ext.SetPwdResponse: int getNmasRetCode()>();
if v21 == 0 goto label10;
v22 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v23 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_setPassword_5__81: java.util.function.Supplier bootstrap$(int)>(v21);
virtualinvoke v22.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v23);
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v21) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("nmas error \u0001");
v25 = (int) -222;
if v21 != v25 goto label09;
v26 = new com.novell.ldapchai.exception.ChaiOperationException;
v27 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v24);
specialinvoke v26.<com.novell.ldapchai.exception.ChaiOperationException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v24, v27);
throw v26;
label09:
v28 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v29 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v24);
specialinvoke v28.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v24, v29);
throw v28;
label10:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label01 to label02 with label03;
catch com.novell.ldapchai.exception.ChaiOperationException from label05 to label06 with label07;
}
public boolean isPasswordExpired() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.String[] v1;
java.util.function.Supplier v10, v18;
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.util.HashSet v2;
java.time.Duration v15;
java.util.Map v4;
int v6, v8;
boolean v12, v16;
java.time.Instant v13, v14;
java.util.List v3;
java.lang.Object v11, v5, v7;
com.novell.ldapchai.util.internal.ChaiLogger v17, v9;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = newarray (java.lang.String)[3];
v1[0] = "loginGraceLimit";
v1[1] = "loginGraceRemaining";
v1[2] = "passwordExpirationTime";
v2 = new java.util.HashSet;
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
specialinvoke v2.<java.util.HashSet: void <init>(java.util.Collection)>(v3);
v4 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.util.Map readStringAttributes(java.util.Set)>(v2);
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>("loginGraceLimit");
v6 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v5, 0);
v7 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>("loginGraceRemaining");
v8 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: int convertStrToInt(java.lang.String,int)>(v7, 0);
if v8 == v6 goto label1;
v9 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v10 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_isPasswordExpired_6__83: java.util.function.Supplier bootstrap$(com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl,int)>(v0, v8);
virtualinvoke v9.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v10);
return 1;
label1:
v11 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>("passwordExpirationTime");
v12 = staticinvoke <com.novell.ldapchai.util.internal.StringHelper: boolean isEmpty(java.lang.CharSequence)>(v11);
if v12 != 0 goto label2;
v13 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.time.Instant convertZuluToInstant(java.lang.String)>(v11);
v14 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v15 = staticinvoke <java.time.Duration: java.time.Duration between(java.time.temporal.Temporal,java.time.temporal.Temporal)>(v14, v13);
v16 = virtualinvoke v15.<java.time.Duration: boolean isNegative()>();
if v16 == 0 goto label2;
v17 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v18 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_isPasswordExpired_7__82: java.util.function.Supplier bootstrap$(com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl,java.time.Duration,java.time.Instant)>(v0, v15, v13);
virtualinvoke v17.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v18);
return 1;
label2:
return 0;
}
public final java.time.Instant readLastLoginTime() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.time.Instant readDateAttribute(java.lang.String)>("loginTime");
return v1;
}
public final void changePassword(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiPasswordPolicyException
{
com.novell.ldapchai.exception.ChaiPasswordPolicyException v17, v25, v8;
java.util.function.Supplier v23;
javax.naming.ldap.ExtendedResponse v15;
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
int v21;
java.lang.String v1, v10, v13, v18, v19, v2, v24, v9;
com.novell.ldapchai.exception.ChaiOperationException v16, v7;
boolean v6;
com.novell.ldapchai.provider.ChaiConfiguration v4;
com.novell.ldapchai.provider.ChaiSetting v5;
com.novell.ldapchai.exception.ChaiError v11, v20, v26;
com.novell.ldapchai.impl.edir.entry.ext.ChangePwdRequest v12;
com.novell.ldapchai.provider.ChaiProvider v14, v3;
com.novell.ldapchai.util.internal.ChaiLogger v22;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v4 = interfaceinvoke v3.<com.novell.ldapchai.provider.ChaiProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
v5 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting EDIRECTORY_ENABLE_NMAS>;
v6 = virtualinvoke v4.<com.novell.ldapchai.provider.ChaiConfiguration: boolean getBooleanSetting(com.novell.ldapchai.provider.ChaiSetting)>(v5);
if v6 != 0 goto label4;
label1:
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void replaceAttribute(java.lang.String,java.lang.String,java.lang.String)>("userPassword", v1, v2);
label2:
goto label9;
label3:
v7 := @caughtexception;
v8 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v9 = virtualinvoke v7.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v10 = virtualinvoke v7.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v11 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v10);
specialinvoke v8.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v9, v11);
throw v8;
label4:
v12 = new com.novell.ldapchai.impl.edir.entry.ext.ChangePwdRequest;
specialinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.ChangePwdRequest: void <init>()>();
virtualinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.ChangePwdRequest: void setNewPwd(java.lang.String)>(v2);
v13 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.lang.String getEntryDN()>();
virtualinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.ChangePwdRequest: void setObjectDN(java.lang.String)>(v13);
virtualinvoke v12.<com.novell.ldapchai.impl.edir.entry.ext.ChangePwdRequest: void setOldPwd(java.lang.String)>(v1);
label5:
v14 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.provider.ChaiProvider getChaiProvider()>();
v15 = interfaceinvoke v14.<com.novell.ldapchai.provider.ChaiProvider: javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)>(v12);
label6:
goto label8;
label7:
v16 := @caughtexception;
v17 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v18 = virtualinvoke v16.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v19 = virtualinvoke v16.<com.novell.ldapchai.exception.ChaiOperationException: java.lang.String getMessage()>();
v20 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v19);
specialinvoke v17.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v18, v20);
throw v17;
label8:
if v15 == null goto label9;
v21 = virtualinvoke v15.<com.novell.ldapchai.impl.edir.entry.ext.ChangePwdResponse: int getNmasRetCode()>();
if v21 == 0 goto label9;
v22 = <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v23 = staticinvoke <com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl$lambda_changePassword_8__84: java.util.function.Supplier bootstrap$(int)>(v21);
virtualinvoke v22.<com.novell.ldapchai.util.internal.ChaiLogger: void debug(java.util.function.Supplier)>(v23);
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v21) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("nmas error \u0001");
v25 = new com.novell.ldapchai.exception.ChaiPasswordPolicyException;
v26 = staticinvoke <com.novell.ldapchai.exception.ChaiErrors: com.novell.ldapchai.exception.ChaiError getErrorForMessage(java.lang.String)>(v24);
specialinvoke v25.<com.novell.ldapchai.exception.ChaiPasswordPolicyException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError)>(v24, v26);
throw v25;
label9:
return;
catch com.novell.ldapchai.exception.ChaiOperationException from label1 to label2 with label3;
catch com.novell.ldapchai.exception.ChaiOperationException from label5 to label6 with label7;
}
public void expirePassword() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: void writeStringAttribute(java.lang.String,java.lang.String)>("passwordExpirationTime", "19800101010101Z");
return;
}
public boolean isPasswordLocked() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
boolean v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: boolean readBooleanAttribute(java.lang.String)>("lockedByIntruder");
return v1;
}
public java.time.Instant readPasswordExpirationDate() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.time.Instant v1;
boolean v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.time.Instant readDateAttribute(java.lang.String)>("passwordExpirationTime");
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: boolean isPasswordExpired()>();
if v2 == 0 goto label1;
v1 = staticinvoke <java.time.Instant: java.time.Instant now()>();
label1:
return v1;
}
public java.lang.String readGUID() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.lang.String readGuid(com.novell.ldapchai.ChaiEntry)>(v0);
return v1;
}
public boolean isAccountEnabled() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
boolean v1, v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: boolean readBooleanAttribute(java.lang.String)>("loginDisabled");
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public java.time.Instant readPasswordModificationDate() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.time.Instant readDateAttribute(java.lang.String)>("pwdChangedTime");
return v1;
}
public java.time.Instant readAccountExpirationDate() throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: java.time.Instant readDateAttribute(java.lang.String)>("loginExpirationTime");
return v1;
}
public boolean hasChildren() throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException
{
com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl v0;
int v1;
boolean v2;
v0 := @this: com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl;
v1 = virtualinvoke v0.<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: int readIntAttribute(java.lang.String)>("subordinateCount");
if v1 <= 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/impl/edir/entry/InetOrgPersonImpl;");
<com.novell.ldapchai.impl.edir.entry.InetOrgPersonImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}