public class com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory extends java.lang.Object implements com.novell.ldapchai.impl.VendorFactory
{
private static final java.lang.String ROOT_DSE_ATTRIBUTE_IPA_TOPOLOGY_PLUGIN_VERSION;
private static final com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory SINGLETON;
public static com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory getInstance()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
v0 = <com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory SINGLETON>;
return v0;
}
private void <init>()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.novell.ldapchai.ChaiUser newChaiUser(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAUser v3;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAUser;
specialinvoke v3.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAUser: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiGroup newChaiGroup(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAGroup v3;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAGroup;
specialinvoke v3.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAGroup: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.ChaiEntry newChaiEntry(java.lang.String, com.novell.ldapchai.provider.ChaiProvider)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAEntry v3;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
java.lang.String v1;
com.novell.ldapchai.provider.ChaiProvider v2;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProvider;
v3 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAEntry;
specialinvoke v3.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAEntry: void <init>(java.lang.String,com.novell.ldapchai.provider.ChaiProvider)>(v1, v2);
return v3;
}
public com.novell.ldapchai.provider.DirectoryVendor getDirectoryVendor()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
com.novell.ldapchai.provider.DirectoryVendor v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 = <com.novell.ldapchai.provider.DirectoryVendor: com.novell.ldapchai.provider.DirectoryVendor FREEIPA>;
return v1;
}
public com.novell.ldapchai.exception.ErrorMap getErrorMap()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
com.novell.ldapchai.impl.openldap.OpenLDAPErrorMap v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 = staticinvoke <com.novell.ldapchai.impl.openldap.OpenLDAPErrorMap: com.novell.ldapchai.impl.openldap.OpenLDAPErrorMap instance()>();
return v1;
}
public java.util.Set interestedDseAttributes()
{
java.util.HashSet v1;
java.util.List v3;
java.util.Set v4;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
java.lang.String[] v2;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 = new java.util.HashSet;
v2 = newarray (java.lang.String)[1];
v2[0] = "ipaTopologyPluginVersion";
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v3);
v4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v1);
return v4;
}
public boolean detectVendorFromRootDSEData(java.util.Map)
{
java.util.Iterator v4;
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
byte v8;
java.util.Map v1;
java.lang.Object v3, v6;
boolean v2, v5;
double v7;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: java.util.Map;
if v1 == null goto label2;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("ipaTopologyPluginVersion");
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ipaTopologyPluginVersion");
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(v6);
v8 = v7 cmpl 1.0;
if v8 < 0 goto label1;
return 1;
label2:
return 0;
}
public java.time.Instant stringToInstant(java.lang.String)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
java.lang.String v1;
java.time.Instant v2;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.time.Instant convertZuluToInstant(java.lang.String)>(v1);
return v2;
}
public java.lang.String instantToString(java.time.Instant)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
java.lang.String v2;
java.time.Instant v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: java.time.Instant;
v2 = staticinvoke <com.novell.ldapchai.impl.edir.entry.EdirEntries: java.lang.String convertInstantToZulu(java.time.Instant)>(v1);
return v2;
}
public boolean allowWatchdogDisconnect(com.novell.ldapchai.provider.ChaiProviderImplementor)
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
com.novell.ldapchai.provider.ChaiProviderImplementor v1;
v0 := @this: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiProviderImplementor;
return 1;
}
static void <clinit>()
{
com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory v0;
v0 = new com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory;
specialinvoke v0.<com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory: void <init>()>();
<com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory: com.novell.ldapchai.impl.freeipa.entry.FreeIPAVendorFactory SINGLETON> = v0;
return;
}
}